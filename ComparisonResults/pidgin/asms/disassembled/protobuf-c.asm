;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	B5201B3BDC90046DDD8A025701A147B0
; Input	CRC32 :	EEC87FBF

; File Name   :	d:\pidgin-o\protobuf-c.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; jumptable 00000717 case 11

; int __cdecl system_free(void *, void *)
_system_free	proc near		; DATA XREF: .data:00004D04o
					; .data:off_4D18o ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, [esp+1Ch+arg_4]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_30
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_40
		mov	[esp+1Ch+arg_0], eax ; void *
		add	esp, 1Ch
		jmp	_free
; ---------------------------------------------------------------------------

loc_2F:					; DATA XREF: .debug_info:00007186o
		nop

loc_30:					; CODE XREF: _system_free+15j
					; DATA XREF: .rdata:off_4E54o ...
		mov	eax, [esp+1Ch+var_10]

loc_34:					; DATA XREF: .eh_frame:0001C4B0o
		xor	eax, dword ptr ds:___stack_chk_guard

loc_3A:					; DATA XREF: .eh_frame:0001C0D8o
		jnz	short loc_40
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_40:					; CODE XREF: _system_free+21j
					; _system_free:loc_3Aj
		call	__imp____stack_chk_fail
_system_free	endp

; ---------------------------------------------------------------------------
unk_45		db  8Dh	; ç		; DATA XREF: .debug_info:0000715Co
					; .debug_info:00007190o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


; int __cdecl system_alloc(int,	size_t)
_system_alloc	proc near		; CODE XREF: _protobuf_c_buffer_simple_append:loc_1EEp
					; DATA XREF: .data:_protobuf_c_system_allocatoro ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_4		= dword	ptr  8

		sub	esp, 3Ch

loc_4B:					; DATA XREF: .debug_loc:0000C994o
					; .eh_frame:0001C124o ...
		mov	eax, [esp+3Ch+arg_4]

loc_4F:					; DATA XREF: .debug_loc:000107D4o
					; .debug_loc:00013410o	...
		mov	edx, dword ptr ds:___stack_chk_guard

loc_55:					; DATA XREF: .debug_loc:000169E0o
					; .debug_loc:0001743Co	...
		mov	[esp+3Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_7C
		mov	[esp+3Ch+var_3C], eax ;	size_t
		call	_malloc

loc_67:					; DATA XREF: .debug_info:000071EBo
					; .debug_loc:off_C9CAo
		test	eax, eax
		jz	short loc_80

loc_6B:					; CODE XREF: _system_alloc+36j
					; _system_alloc+46j
					; DATA XREF: ...
		mov	edx, [esp+3Ch+var_10]

loc_6F:					; DATA XREF: .eh_frame:0001C4CCo
		xor	edx, dword ptr ds:___stack_chk_guard

loc_75:					; DATA XREF: .debug_loc:0001126Co
					; .eh_frame:0001C0ECo
		jnz	short loc_90
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_7C:					; CODE XREF: _system_alloc+15j
		xor	eax, eax
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_80:					; CODE XREF: _system_alloc+21j
		mov	[esp+3Ch+var_20], eax
		call	_protobuf_c_out_of_memory
; ---------------------------------------------------------------------------
		mov	eax, [esp+3Ch+var_20]
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_90:					; CODE XREF: _system_alloc:loc_75j
		call	__imp____stack_chk_fail
_system_alloc	endp

; ---------------------------------------------------------------------------
byte_95		db 8Dh			; DATA XREF: .debug_info:000071B2o
					; .debug_info:00007201o

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

sub_96		proc near		; DATA XREF: .debug_info:000067C4o
					; .debug_info:000067E8o ...
		jbe	short $+2
sub_96		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

_protobuf_c_out_of_memory_default proc near ; CODE XREF: _system_alloc+3Cp
					; sub_96j
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h

		sub	esp, 2Ch

loc_9B:					; DATA XREF: .debug_loc:0000C9ECo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax

loc_A4:					; DATA XREF: .debug_info:000056B4o
					; .debug_info:00005B6Co ...
		xor	eax, eax
		mov	eax, dword ptr ds:__imp___iob
		add	eax, 40h ; '@'
		mov	[esp+2Ch+var_20], eax ;	FILE *
		mov	[esp+2Ch+var_24], 11h ;	size_t
		mov	[esp+2Ch+var_28], 1 ; size_t
		mov	[esp+2Ch+var_2C], offset aOutOfMemory ;	"Out Of	Memory!!!\n"
		call	_fwrite

loc_CE:					; DATA XREF: .debug_info:00007241o
					; .eh_frame:0001C198o
		call	_abort
_protobuf_c_out_of_memory_default endp

; ---------------------------------------------------------------------------
unk_D3		db  90h	; ê		; DATA XREF: .debug_info:00007233o
					; .debug_info:00007265o

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_service_invoke_internal
_protobuf_c_service_invoke_internal proc near
					; DATA XREF: _protobuf_c_service_generated_init+29o
					; .debug_info:00007273o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	edi

loc_D5:					; DATA XREF: .debug_loc:0000CA0Co
					; .eh_frame:0001C1FCo
		push	esi
		push	ebx
		sub	esp, 20h
		mov	eax, [esp+2Ch+arg_0]

loc_DE:					; DATA XREF: .eh_frame:0001C54Co
		mov	edx, [esp+2Ch+arg_4]

loc_E2:					; DATA XREF: .eh_frame:0001C5CCo
		mov	ebx, [esp+2Ch+arg_8]
		mov	esi, [esp+2Ch+arg_C]
		mov	edi, [esp+2Ch+arg_10]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], ecx
		xor	ecx, ecx
		mov	ecx, [eax]
		cmp	[ecx+14h], edx

loc_FF:					; DATA XREF: .eh_frame:0001C50Co
		jbe	short loc_129

loc_101:				; DATA XREF: .debug_loc:off_CA88o
					; .debug_loc:off_CACAo
		mov	ecx, [esp+2Ch+var_10]

loc_105:				; DATA XREF: .eh_frame:0001C60Co
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_145

loc_10D:				; DATA XREF: .eh_frame:0001C140o
		mov	[esp+2Ch+arg_C], edi
		mov	[esp+2Ch+arg_8], esi

loc_115:				; DATA XREF: .eh_frame:0001C58Co
		mov	[esp+2Ch+arg_4], ebx
		mov	[esp+2Ch+arg_0], eax
		mov	eax, [eax+edx*4+0Ch]

loc_121:				; DATA XREF: .debug_loc:0000CA8Co
					; .debug_loc:0000CACEo
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		jmp	eax
; ---------------------------------------------------------------------------

loc_129:				; CODE XREF: _protobuf_c_service_invoke_internal:loc_FFj
					; DATA XREF: .debug_info:000072C2o ...
		mov	[esp+2Ch+var_24], 9F5h ; unsigned int
		mov	[esp+2Ch+var_28], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+2Ch+var_2C], offset aMethod_indexSe ; "method_index < service->descriptor->n_m"...

loc_140:				; DATA XREF: .debug_line:0001AB56o
		call	__assert
; ---------------------------------------------------------------------------

loc_145:				; CODE XREF: _protobuf_c_service_invoke_internal+37j
					; DATA XREF: .debug_info:000072C6o ...
		call	__imp____stack_chk_fail
_protobuf_c_service_invoke_internal endp

; ---------------------------------------------------------------------------
unk_14A		db  66h	; f		; DATA XREF: .debug_info:00007277o
					; .debug_info:00007326o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_alloc_failed_warning_constprop_14 proc	near
					; CODE XREF: _protobuf_c_buffer_simple_append:loc_29Ej
					; _parse_required_member+37Dp ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		sub	esp, 3Ch

loc_14F:				; DATA XREF: .debug_loc:0000CB10o
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], ecx
		xor	ecx, ecx
		mov	[esp+3Ch+var_2C], edx
		mov	[esp+3Ch+var_30], offset aLibProtobufC_c ; "lib/protobuf-c.c"

loc_167:				; DATA XREF: .debug_info:0000571Co
					; .debug_info:0000A168o
		mov	[esp+3Ch+var_34], eax

loc_16B:				; DATA XREF: .debug_info:0000570Co
					; .debug_info:0000572Co ...
		mov	[esp+3Ch+var_38], offset aWarningOutOfMe ; "WARNING: out-of-memory allocating a	blo"...
		mov	eax, dword ptr ds:__imp___iob

loc_178:				; DATA XREF: .debug_loc:0000CB4Ao
		add	eax, 40h ; '@'
		mov	[esp+3Ch+var_3C], eax ;	FILE *

loc_17E:				; DATA XREF: .debug_loc:0000CB77o
		call	_fprintf

loc_183:				; DATA XREF: .debug_info:00007364o
		mov	eax, [esp+3Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_193
		add	esp, 3Ch
		retn
; ---------------------------------------------------------------------------

loc_193:				; CODE XREF: _alloc_failed_warning_constprop_14+41j
		call	__imp____stack_chk_fail
_alloc_failed_warning_constprop_14 endp


; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_buffer_simple_append
_protobuf_c_buffer_simple_append proc near
					; DATA XREF: _required_field_pack_to_buffer_isra_13:loc_2894o
					; .debug_info:00007338o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_199:				; DATA XREF: .debug_loc:0000CB98o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebp, [esp+4Ch+arg_0]
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_34], eax
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_30], eax
		mov	eax, dword ptr ds:___stack_chk_guard

loc_1B8:				; DATA XREF: .debug_info:00006700o
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_1BE:				; DATA XREF: .debug_loc:off_CC77o
		mov	ecx, [ebp+8]
		mov	edx, [esp+4Ch+var_34]
		add	edx, ecx

loc_1C7:				; DATA XREF: .debug_loc:off_CCB8o
		mov	ebx, [ebp+4]
		cmp	edx, ebx
		jbe	short loc_248

loc_1CE:				; DATA XREF: .debug_ranges:off_17FA8o
		shl	ebx, 1

loc_1D0:				; DATA XREF: .debug_loc:off_CCE1o
		cmp	edx, ebx
		jbe	loc_279

loc_1D8:				; CODE XREF: _protobuf_c_buffer_simple_append+44j
		shl	ebx, 1

loc_1DA:				; DATA XREF: .debug_info:00006819o
		cmp	edx, ebx
		ja	short loc_1D8

loc_1DE:				; CODE XREF: _protobuf_c_buffer_simple_append+E5j
					; DATA XREF: .debug_ranges:off_17FC8o
		mov	[esp+4Ch+var_48], ebx ;	size_t
		mov	eax, dword_4D24
		mov	[esp+4Ch+var_4C], eax ;	int

loc_1EA:				; DATA XREF: .debug_info:00007085o
		mov	[esp+4Ch+var_3C], edx

loc_1EE:				; DATA XREF: .debug_loc:0000CCBCo
		call	_protobuf_c_default_allocator

loc_1F4:				; DATA XREF: .debug_info:0000746Bo
					; .debug_loc:off_CD0Ao
		test	eax, eax
		mov	edx, [esp+4Ch+var_3C]

loc_1FA:				; DATA XREF: .debug_info:000083CCo
		jz	loc_284

loc_200:				; DATA XREF: .debug_ranges:00017FCCo
		mov	esi, [ebp+0Ch]
		mov	ecx, [ebp+8]
		mov	edi, eax

loc_208:				; DATA XREF: .debug_info:0000682Co
		rep movsb
		mov	ecx, [ebp+10h]
		test	ecx, ecx
		jz	short loc_270
		mov	ecx, [ebp+0Ch]
		test	ecx, ecx
		jz	short loc_23B
		mov	[esp+4Ch+var_48], ecx
		mov	ecx, dword_4D24
		mov	[esp+4Ch+var_4C], ecx

loc_225:				; DATA XREF: .debug_info:00005858o
					; .debug_info:00005E70o ...
		mov	[esp+4Ch+var_38], eax
		mov	[esp+4Ch+var_3C], edx

loc_22D:				; DATA XREF: .debug_info:0000583Do
					; .debug_loc:0000CD0Eo
		call	off_4D18
		mov	eax, [esp+4Ch+var_38]

loc_237:				; DATA XREF: .debug_info:00005848o
		mov	edx, [esp+4Ch+var_3C]

loc_23B:				; CODE XREF: _protobuf_c_buffer_simple_append+7Ej
					; _protobuf_c_buffer_simple_append+DFj
		mov	[ebp+0Ch], eax
		mov	[ebp+4], ebx
		mov	ecx, [ebp+8]
		jmp	short loc_24B
; ---------------------------------------------------------------------------
unk_246		db  66h	; f		; DATA XREF: .debug_loc:0000CCE5o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_248:				; CODE XREF: _protobuf_c_buffer_simple_append+34j
		mov	eax, [ebp+0Ch]

loc_24B:				; CODE XREF: _protobuf_c_buffer_simple_append+ACj
					; DATA XREF: .debug_ranges:00017FACo
		add	eax, ecx
		mov	edi, eax

loc_24F:				; DATA XREF: .debug_info:00005B09o
					; .debug_info:000083D8o
		mov	esi, [esp+4Ch+var_30]

loc_253:				; DATA XREF: .debug_info:000058D8o
		mov	ecx, [esp+4Ch+var_34]
		rep movsb
		mov	[ebp+8], edx

loc_25C:				; CODE XREF: _protobuf_c_buffer_simple_append+E3j
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_2A3
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_26F:				; DATA XREF: .debug_loc:0000CC7Bo
		retn
; ---------------------------------------------------------------------------

loc_270:				; CODE XREF: _protobuf_c_buffer_simple_append+77j
					; DATA XREF: .debug_loc:0000CCECo ...
		mov	dword ptr [ebp+10h], 1
		jmp	short loc_23B
; ---------------------------------------------------------------------------

loc_279:				; CODE XREF: _protobuf_c_buffer_simple_append+3Aj
					; DATA XREF: .debug_loc:off_CD33o ...
		test	ebx, ebx
		jz	short loc_25C
		jmp	loc_1DE
; ---------------------------------------------------------------------------
unk_282		db  66h	; f		; DATA XREF: .debug_loc:0000CD37o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_284:				; CODE XREF: _protobuf_c_buffer_simple_append:loc_1FAj
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_2A3
		mov	edx, 0DCh ; '‹'
		mov	eax, ebx

loc_297:				; DATA XREF: .debug_ranges:00017FB4o
					; .debug_ranges:00017FD4o ...
		add	esp, 3Ch
		pop	ebx

loc_29B:				; DATA XREF: .debug_loc:0000CCF0o
		pop	esi
		pop	edi
		pop	ebp

loc_29E:				; DATA XREF: .debug_ranges:00017FB8o
					; .debug_ranges:00017FD8o
		jmp	_alloc_failed_warning_constprop_14
; ---------------------------------------------------------------------------

loc_2A3:				; CODE XREF: _protobuf_c_buffer_simple_append+CEj
					; _protobuf_c_buffer_simple_append+F6j
					; DATA XREF: ...
		call	__imp____stack_chk_fail
_protobuf_c_buffer_simple_append endp


; =============== S U B	R O U T	I N E =======================================


_parse_uint64	proc near		; CODE XREF: _parse_required_member+23Cp
					; _parse_required_member+260p ...

var_30		= dword	ptr -30h
var_20		= dword	ptr -20h

		push	ebp

loc_2A9:				; DATA XREF: .debug_loc:0000CD4Ao
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebp, eax

loc_2B1:				; DATA XREF: .debug_info:0000586Do
		mov	ecx, edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], eax
		xor	eax, eax

loc_2BE:				; DATA XREF: .debug_loc:0000CDE4o
		cmp	ebp, 4
		jbe	short loc_33C

loc_2C3:				; DATA XREF: .debug_info:00007520o
					; .debug_loc:off_CE75o	...
		mov	al, [edx+1]
		and	eax, 7Fh
		shl	eax, 7
		mov	dl, [edx+2]

loc_2CF:				; DATA XREF: .debug_loc:0000CE29o
					; .debug_loc:0000CE30o	...
		and	edx, 7Fh
		shl	edx, 0Eh
		or	eax, edx
		mov	dl, [ecx]
		and	edx, 7Fh
		or	eax, edx
		mov	dl, [ecx+3]
		and	edx, 7Fh
		shl	edx, 15h
		or	eax, edx
		cdq

loc_2EA:				; DATA XREF: .debug_loc:off_CEC2o
					; .debug_loc:off_CEE2o	...
		lea	ebx, [ecx+4]
		add	ebp, ecx

loc_2EF:				; DATA XREF: .debug_loc:0000CEA5o
					; .debug_loc:0000CEACo	...
		mov	[esp+3Ch+var_30], 1Ch

loc_2F7:				; DATA XREF: .debug_loc:0000CE34o
					; .debug_loc:0000CE84o	...
		nop

loc_2F8:				; CODE XREF: _parse_uint64+7Bj
					; DATA XREF: .debug_ranges:00017FF0o ...
		mov	cl, [ebx]
		and	ecx, 7Fh
		mov	esi, ecx
		xor	edi, edi
		mov	cl, byte ptr [esp+3Ch+var_30]
		shld	edi, esi, cl
		shl	esi, cl
		test	cl, 20h
		jz	short loc_313
		mov	edi, esi
		xor	esi, esi

loc_313:				; CODE XREF: _parse_uint64+65j
		or	esi, eax
		or	edi, edx
		mov	eax, esi

loc_319:				; DATA XREF: .debug_loc:0000CEFAo
		mov	edx, edi
		add	[esp+3Ch+var_30], 7
		inc	ebx
		cmp	ebx, ebp
		jnz	short loc_2F8

loc_325:				; CODE XREF: _parse_uint64+CBj
					; DATA XREF: .debug_loc:0000CEB0o ...
		mov	ecx, [esp+3Ch+var_20]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_375
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_339		db  8Dh	; ç		; DATA XREF: .debug_loc:off_CF1Eo
					; .debug_loc:off_CF3Co
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_33C:				; CODE XREF: _parse_uint64+19j
					; DATA XREF: .debug_info:00007568o ...
		mov	al, [edx]
		and	eax, 7Fh

loc_341:				; DATA XREF: .debug_loc:off_CF4Fo
		cmp	ebp, 1
		jbe	short loc_371
		mov	dl, [edx+1]

loc_349:				; DATA XREF: .debug_loc:0000CF22o
		and	edx, 7Fh
		shl	edx, 7
		or	eax, edx
		cmp	ebp, 2
		jz	short loc_371
		mov	dl, [ecx+2]
		and	edx, 7Fh
		shl	edx, 0Eh
		or	eax, edx
		cmp	ebp, 4
		jnz	short loc_371

loc_366:				; DATA XREF: .debug_ranges:0001801Co
					; .eh_frame:0001C26Co
		mov	dl, [ecx+3]

loc_369:				; DATA XREF: .debug_ranges:00018020o
		and	edx, 7Fh
		shl	edx, 15h
		or	eax, edx

loc_371:				; CODE XREF: _parse_uint64+9Cj
					; _parse_uint64+ACj ...
		xor	edx, edx
		jmp	short loc_325
; ---------------------------------------------------------------------------

loc_375:				; CODE XREF: _parse_uint64+87j
					; DATA XREF: .debug_loc:0000CF40o ...
		call	__imp____stack_chk_fail
_parse_uint64	endp

; ---------------------------------------------------------------------------
unk_37A		db  66h	; f		; DATA XREF: .debug_info:000074E6o
					; .debug_info:0000759Ao
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_uint64_pack	proc near		; CODE XREF: _tag_pack+36j
					; sub_1370+CEp	...

var_10		= dword	ptr -10h

		push	ebx

loc_37D:				; DATA XREF: .debug_loc:0000CF66o
		sub	esp, 18h
		mov	ebx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ebx
		xor	ebx, ebx

loc_38C:				; DATA XREF: .debug_loc:off_D03Bo
		mov	ebx, eax
		test	edx, edx
		jz	loc_420
		or	bl, 80h
		mov	[ecx], bl
		mov	ebx, eax
		shr	ebx, 7
		or	bl, 80h
		mov	[ecx+1], bl
		mov	ebx, eax
		shr	ebx, 0Eh
		or	bl, 80h
		mov	[ecx+2], bl
		mov	ebx, eax
		shr	ebx, 15h
		or	bl, 80h
		mov	[ecx+3], bl
		shr	eax, 1Ch

loc_3BF:				; DATA XREF: .debug_loc:0000CFB6o
		cmp	edx, 7

loc_3C2:				; DATA XREF: .eh_frame:0001C42Co
		ja	short loc_3E8
		shl	edx, 4

loc_3C7:				; DATA XREF: .debug_loc:0000D03Fo
		or	edx, eax
		mov	[ecx+4], dl
		mov	eax, 5

loc_3D1:				; CODE XREF: _uint64_pack+A2j
					; _uint64_pack:loc_46Ej
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_4A4
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 4

loc_3E8:				; CODE XREF: _uint64_pack:loc_3C2j
		or	al, 80h
		mov	ebx, edx
		and	ebx, 7
		shl	ebx, 4
		or	ebx, eax
		mov	[ecx+4], bl
		shr	edx, 3

loc_3FA:				; DATA XREF: .debug_loc:off_D085o
		cmp	edx, 7Fh ; ''
		jbe	loc_48C
		mov	ebx, 5

loc_408:				; CODE XREF: _uint64_pack+9Aj
					; DATA XREF: .debug_loc:0000D089o
		mov	eax, edx
		or	al, 80h
		mov	[ecx+ebx], al
		inc	ebx
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		ja	short loc_408
		lea	eax, [ebx+1]

loc_41B:				; CODE XREF: _uint64_pack+11Aj
		mov	[ecx+ebx], dl
		jmp	short loc_3D1
; ---------------------------------------------------------------------------

loc_420:				; CODE XREF: _uint64_pack+14j
					; DATA XREF: .debug_info:00007657o ...
		cmp	eax, 7Fh ; ''
		jbe	short loc_464
		or	al, 80h

loc_427:				; DATA XREF: .debug_loc:0000D0DDo
					; .debug_loc:0000D0E4o
		mov	[ecx], al

loc_429:				; DATA XREF: .debug_loc:0000D11Co
		shr	ebx, 7
		cmp	ebx, 7Fh ; ''
		jbe	short loc_480

loc_431:				; DATA XREF: .debug_ranges:00018054o
		mov	eax, ebx
		or	al, 80h

loc_435:				; DATA XREF: .debug_ranges:00018058o
		mov	[ecx+1], al
		shr	ebx, 7
		cmp	ebx, 7Fh ; ''
		jbe	short loc_474

loc_440:				; DATA XREF: .debug_ranges:0001805Co
		mov	eax, ebx
		or	al, 80h

loc_444:				; DATA XREF: .debug_ranges:00018060o
		mov	[ecx+2], al
		shr	ebx, 7
		cmp	ebx, 7Fh ; ''
		jbe	short loc_498

loc_44F:				; DATA XREF: .debug_ranges:00018064o
		mov	eax, ebx
		or	al, 80h

loc_453:				; DATA XREF: .debug_ranges:00018068o
		mov	[ecx+3], al
		shr	ebx, 7
		mov	eax, 5
		mov	dl, 4
		jmp	short loc_46B
; ---------------------------------------------------------------------------
unk_462		db  66h	; f		; DATA XREF: .debug_loc:0000D0E8o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_464:				; CODE XREF: _uint64_pack+A7j
		mov	eax, 1
		xor	edx, edx

loc_46B:				; CODE XREF: _uint64_pack+E4j
					; _uint64_pack+102j ...
		mov	[ecx+edx], bl

loc_46E:				; DATA XREF: .debug_ranges:00018034o
					; .debug_ranges:0001806Co
		jmp	loc_3D1
; ---------------------------------------------------------------------------
		align 4

loc_474:				; CODE XREF: _uint64_pack+C2j
					; DATA XREF: .debug_ranges:00018038o ...
		mov	eax, 3

loc_479:				; DATA XREF: .debug_info:off_58E0o
					; .debug_info:0000609Do ...
		mov	edx, 2
		jmp	short loc_46B
; ---------------------------------------------------------------------------

loc_480:				; CODE XREF: _uint64_pack+B3j
		mov	eax, 2
		mov	edx, 1
		jmp	short loc_46B
; ---------------------------------------------------------------------------

loc_48C:				; CODE XREF: _uint64_pack+81j
					; DATA XREF: .debug_loc:0000D0BFo ...
		mov	eax, 6
		mov	ebx, 5
		jmp	short loc_41B
; ---------------------------------------------------------------------------

loc_498:				; CODE XREF: _uint64_pack+D1j
					; DATA XREF: .debug_ranges:00018040o ...
		mov	eax, 4
		mov	edx, 3
		jmp	short loc_46B
; ---------------------------------------------------------------------------

loc_4A4:				; CODE XREF: _uint64_pack+5Fj
					; DATA XREF: .debug_ranges:00018044o ...
		call	__imp____stack_chk_fail
_uint64_pack	endp

; ---------------------------------------------------------------------------
unk_4A9		db  8Dh	; ç		; DATA XREF: .debug_info:000075FAo
					; .debug_info:00007689o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_tag_pack	proc near		; CODE XREF: sub_105A+52p
					; sub_10F4:loc_10FBp ...

var_10		= dword	ptr -10h

		push	ebx

loc_4AD:				; DATA XREF: .debug_loc:0000D1A6o
		sub	esp, 18h
		mov	ecx, edx
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx

loc_4BE:				; DATA XREF: .debug_loc:0000D254o
		cmp	eax, 1FFFFFFFh
		jbe	short loc_4E8
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_57C
		xor	edx, edx
		shld	edx, eax, 3
		shl	eax, 3

loc_4DE:				; DATA XREF: .debug_loc:0000D21Ao
		add	esp, 18h
		pop	ebx
		jmp	_uint64_pack
; ---------------------------------------------------------------------------
unk_4E7		db  90h	; ê		; DATA XREF: .debug_info:00007714o
					; .debug_loc:off_D295o	...
; ---------------------------------------------------------------------------

loc_4E8:				; CODE XREF: _tag_pack+17j
					; DATA XREF: .debug_info:000076BFo ...
		shl	eax, 3

loc_4EB:				; DATA XREF: .debug_info:000076E5o
					; .debug_loc:0000D2ACo	...
		cmp	eax, 7Fh ; ''
		jbe	short loc_558

loc_4F0:				; DATA XREF: .debug_ranges:000180BCo
		mov	edx, eax
		or	dl, 80h

loc_4F5:				; DATA XREF: .debug_ranges:000180C0o
		mov	[ecx], dl

loc_4F7:				; DATA XREF: .debug_loc:0000D2FEo
		shr	eax, 7
		cmp	eax, 7Fh ; ''

loc_4FD:				; DATA XREF: .debug_info:00005AF0o
					; .eh_frame:0001C2E4o
		jbe	short loc_54C

loc_4FF:				; DATA XREF: .debug_ranges:000180C4o
		mov	edx, eax
		or	dl, 80h

loc_504:				; DATA XREF: .debug_ranges:000180C8o
		mov	[ecx+1], dl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	short loc_564

loc_50F:				; DATA XREF: .debug_ranges:000180CCo
		mov	edx, eax
		or	dl, 80h

loc_514:				; DATA XREF: .debug_ranges:000180D0o
		mov	[ecx+2], dl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	short loc_570

loc_51F:				; DATA XREF: .debug_ranges:000180D4o
		mov	edx, eax
		or	dl, 80h

loc_524:				; DATA XREF: .debug_ranges:000180D8o
		mov	[ecx+3], dl
		shr	eax, 7
		mov	edx, 5
		mov	ebx, 4

loc_534:				; CODE XREF: _tag_pack+AAj
					; _tag_pack+B3j ...
		mov	[ecx+ebx], al

loc_537:				; DATA XREF: .debug_ranges:0001808Co
					; .debug_ranges:000180A4o ...
		mov	eax, edx

loc_539:				; DATA XREF: .debug_loc:0000D2E0o
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_57C
		add	esp, 18h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 4

loc_54C:				; CODE XREF: _tag_pack:loc_4FDj
					; DATA XREF: .debug_ranges:00018090o ...
		mov	edx, 2
		mov	ebx, 1
		jmp	short loc_534
; ---------------------------------------------------------------------------

loc_558:				; CODE XREF: _tag_pack+42j
		mov	edx, 1
		xor	ebx, ebx
		jmp	short loc_534
; ---------------------------------------------------------------------------
		align 4

loc_564:				; CODE XREF: _tag_pack+61j
		mov	edx, 3
		mov	ebx, 2
		jmp	short loc_534
; ---------------------------------------------------------------------------

loc_570:				; CODE XREF: _tag_pack+71j
		mov	edx, 4
		mov	ebx, 3
		jmp	short loc_534
; ---------------------------------------------------------------------------

loc_57C:				; CODE XREF: _tag_pack+23j
					; _tag_pack+97j
					; DATA XREF: ...
		call	__imp____stack_chk_fail
_tag_pack	endp

; ---------------------------------------------------------------------------
unk_581		db  8Dh	; ç		; DATA XREF: .debug_info:0000769Bo
					; .debug_info:0000772Ao
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_get_packed_size
_protobuf_c_message_get_packed_size proc near
					; CODE XREF: _protobuf_c_message_get_packed_size+463p
					; _required_field_get_packed_size_isra_11:loc_D21p
					; DATA XREF: ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

; FUNCTION CHUNK AT 0001C619 SIZE 00000016 BYTES

		push	ebp

loc_585:				; DATA XREF: .debug_loc:0000D393o
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_44], eax
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], edx
		xor	edx, edx

loc_59F:				; DATA XREF: .debug_loc:off_D454o
		mov	eax, [eax]
		cmp	dword ptr [eax], 28AAEEF9h
		jnz	loc_C39

loc_5AD:				; DATA XREF: .debug_loc:off_D429o
		mov	edx, [eax+18h]
		mov	[esp+5Ch+var_3C], edx
		xor	ebp, ebp
		test	edx, edx
		jz	loc_65E
		mov	esi, [eax+1Ch]
		xor	ebp, ebp

loc_5C3:				; DATA XREF: .debug_info:0000797Ao
					; .debug_ranges:off_180F0o ...
		mov	[esp+5Ch+var_48], ebp

loc_5C7:				; DATA XREF: .debug_loc:0000D42Do
					; .debug_loc:0000D458o
		nop

loc_5C8:				; CODE XREF: _protobuf_c_message_get_packed_size+D0j
					; DATA XREF: .debug_ranges:0001811Co ...
		mov	ecx, [esp+5Ch+var_44]
		add	ecx, [esi+14h]

loc_5CF:				; DATA XREF: .debug_loc:off_D4DDo
		mov	edx, [esi+10h]

loc_5D2:				; DATA XREF: .debug_loc:off_D7DAo
		mov	eax, [esi+8]
		test	eax, eax
		jz	loc_6C0
		mov	ebx, [esp+5Ch+var_44]
		add	ebx, edx

loc_5E3:				; DATA XREF: .debug_loc:0000D7DEo
		dec	eax
		jz	loc_6F0
		mov	ebx, [ebx]

loc_5EC:				; DATA XREF: .debug_loc:off_DABAo
					; .debug_loc:off_DDACo	...
		mov	edx, [ecx]

loc_5EE:				; DATA XREF: .debug_loc:off_E2A5o
		test	ebx, ebx
		jz	loc_6E8
		mov	eax, [esi+4]

loc_5F9:				; DATA XREF: .debug_info:00007A15o
					; .debug_loc:off_E5CBo	...
		cmp	eax, 0Fh
		jbe	loc_758
		cmp	eax, 7FFh
		ja	loc_788
		mov	[esp+5Ch+var_40], 2

loc_615:				; CODE XREF: _protobuf_c_message_get_packed_size+1DCj
					; _protobuf_c_message_get_packed_size+213j ...
		mov	eax, [esi+20h]
		mov	[esp+5Ch+var_38], eax
		test	eax, eax
		jnz	short loc_62B
		mov	eax, [esp+5Ch+var_40]
		imul	eax, ebx
		mov	[esp+5Ch+var_40], eax

loc_62B:				; CODE XREF: _protobuf_c_message_get_packed_size+9Aj
					; DATA XREF: .debug_loc:off_E0DFo
		cmp	dword ptr [esi+0Ch], 10h ; switch 17 cases
		jbe	loc_714
		xor	ebx, ebx	; jumptable 00000717 default case

loc_637:				; DATA XREF: .debug_loc:0000DDB0o
		mov	edi, [esp+5Ch+var_38]
		test	edi, edi
		jnz	loc_79C

loc_643:				; DATA XREF: .debug_loc:0000D4E1o
					; .debug_loc:0000DABEo	...
		nop

loc_644:				; CODE XREF: _protobuf_c_message_get_packed_size+1AEj
					; _protobuf_c_message_get_packed_size+1CEj
		add	ebx, [esp+5Ch+var_40]

loc_648:				; CODE XREF: _protobuf_c_message_get_packed_size+166j
					; DATA XREF: .debug_loc:0000E0E3o ...
		add	[esp+5Ch+var_48], ebx

loc_64C:				; CODE XREF: _protobuf_c_message_get_packed_size:loc_6CFj
					; _protobuf_c_message_get_packed_size+18Bj
					; DATA XREF: ...
		inc	ebp
		add	esi, 30h ; '0'
		cmp	ebp, [esp+5Ch+var_3C]
		jnz	loc_5C8
		mov	ebp, [esp+5Ch+var_48]

loc_65E:				; CODE XREF: _protobuf_c_message_get_packed_size+34j
					; DATA XREF: .debug_info:00006B8Co ...
		mov	edx, [esp+5Ch+var_44]
		mov	ebx, [edx+4]

loc_665:				; DATA XREF: .debug_info:00006914o
					; .debug_info:000073F8o ...
		test	ebx, ebx
		jz	short loc_6A6
		mov	eax, [edx+8]
		shl	ebx, 4
		add	ebx, eax
		jmp	short loc_68C
; ---------------------------------------------------------------------------
unk_673		db  90h	; ê		; DATA XREF: .debug_loc:off_EEFBo
; ---------------------------------------------------------------------------

loc_674:				; CODE XREF: _protobuf_c_message_get_packed_size+110j
					; DATA XREF: .debug_info:00007D4Eo ...
		cmp	edx, 7FFh
		ja	short loc_6D4
		mov	edx, 2

loc_681:				; CODE XREF: _protobuf_c_message_get_packed_size:loc_6E5j
					; _protobuf_c_message_get_packed_size+1FFj
					; DATA XREF: ...
		add	edx, ecx

loc_683:				; DATA XREF: .debug_ranges:000186E4o
					; .debug_ranges:0001870Co
		add	ebp, edx
		add	eax, 10h
		cmp	eax, ebx
		jz	short loc_6A6

loc_68C:				; CODE XREF: _protobuf_c_message_get_packed_size+EDj
					; _protobuf_c_message_get_packed_size+120j
		mov	edx, [eax]
		mov	ecx, [eax+8]

loc_691:				; DATA XREF: .debug_info:00005CA1o
					; .debug_ranges:000186E8o ...
		cmp	edx, 0Fh
		ja	short loc_674
		mov	edx, 1

loc_69B:				; DATA XREF: .debug_ranges:0001873Co
		add	edx, ecx

loc_69D:				; DATA XREF: .debug_ranges:000186ECo
					; .debug_ranges:00018714o
		add	ebp, edx
		add	eax, 10h
		cmp	eax, ebx
		jnz	short loc_68C

loc_6A6:				; CODE XREF: _protobuf_c_message_get_packed_size+E3j
					; _protobuf_c_message_get_packed_size+106j
		mov	eax, ebp
		mov	edx, [esp+5Ch+var_20]

loc_6AC:				; DATA XREF: .eh_frame:0001C368o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_C34
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_6C0:				; CODE XREF: _protobuf_c_message_get_packed_size+53j
					; DATA XREF: .debug_loc:0000D4E8o ...
		mov	edx, [esi+0Ch]
		mov	eax, [esi+4]

loc_6C6:				; DATA XREF: .debug_loc:0000D4ECo
		call	_required_field_get_packed_size_isra_11

loc_6CB:				; DATA XREF: .debug_info:00007D40o
		add	[esp+5Ch+var_48], eax

loc_6CF:				; DATA XREF: .eh_frame:0001C22Co
		jmp	loc_64C
; ---------------------------------------------------------------------------

loc_6D4:				; CODE XREF: _protobuf_c_message_get_packed_size+F6j
					; DATA XREF: .debug_info:00007D8Ao ...
		cmp	edx, 3FFFFh
		ja	loc_778
		mov	edx, 3

loc_6E5:				; DATA XREF: .debug_loc:0000EF7Bo
		jmp	short loc_681
; ---------------------------------------------------------------------------
unk_6E7		db  90h	; ê		; DATA XREF: .debug_loc:0000E2B0o
; ---------------------------------------------------------------------------

loc_6E8:				; CODE XREF: _protobuf_c_message_get_packed_size+6Cj
					; DATA XREF: .debug_ranges:00018100o ...
		xor	ebx, ebx
		jmp	loc_648
; ---------------------------------------------------------------------------
unk_6EF		db  90h	; ê		; DATA XREF: .debug_loc:0000E2B4o
					; .debug_loc:off_EEACo	...
; ---------------------------------------------------------------------------

loc_6F0:				; CODE XREF: _protobuf_c_message_get_packed_size+60j
					; DATA XREF: .debug_info:00007CF8o ...
		mov	edx, [esi+0Ch]
		cmp	edx, 10h
		jz	short loc_768
		cmp	edx, 0Eh
		jz	short loc_768
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_774

loc_703:				; CODE XREF: _protobuf_c_message_get_packed_size+1EDj
		mov	eax, [esi+4]

loc_706:				; DATA XREF: .debug_loc:0000EEB0o
		call	_required_field_get_packed_size_isra_11

loc_70B:				; CODE XREF: _protobuf_c_message_get_packed_size+1F2j
					; DATA XREF: .debug_info:00007D36o ...
		add	[esp+5Ch+var_48], eax
		jmp	loc_64C
; ---------------------------------------------------------------------------

loc_714:				; CODE XREF: _protobuf_c_message_get_packed_size+ABj
					; DATA XREF: .debug_loc:0000EECEo ...
		mov	eax, [esi+0Ch]
		jmp	ds:off_4E10[eax*4] ; switch jump
; ---------------------------------------------------------------------------
unk_71E		db  66h	; f		; DATA XREF: .debug_loc:off_E287o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_720:				; CODE XREF: _protobuf_c_message_get_packed_size+457j
		mov	esi, [esp+5Ch+var_30]
		mov	ecx, ebp
		mov	ebp, [esp+5Ch+var_34]
		mov	ebx, ecx

loc_72C:				; CODE XREF: _protobuf_c_message_get_packed_size+255j
					; _protobuf_c_message_get_packed_size+2C0j ...
		mov	eax, [esp+5Ch+var_38]
		test	eax, eax
		jz	loc_644

loc_738:				; DATA XREF: .debug_info:00007A4Do
					; .debug_loc:off_E79Ao	...
		cmp	ebx, 7Fh ; ''
		jbe	short loc_79C
		cmp	ebx, 3FFFh
		ja	loc_AE4
		mov	eax, 2

loc_74E:				; CODE XREF: _protobuf_c_message_get_packed_size+21Dj
					; _protobuf_c_message_get_packed_size+571j ...
		add	[esp+5Ch+var_40], eax
		jmp	loc_644
; ---------------------------------------------------------------------------
		align 4

loc_758:				; CODE XREF: _protobuf_c_message_get_packed_size+78j
					; DATA XREF: .debug_ranges:off_18200o ...
		mov	[esp+5Ch+var_40], 1
		jmp	loc_615
; ---------------------------------------------------------------------------
		align 4

loc_768:				; CODE XREF: _protobuf_c_message_get_packed_size+172j
					; _protobuf_c_message_get_packed_size+177j
					; DATA XREF: ...
		mov	eax, [ecx]

loc_76A:				; DATA XREF: .debug_loc:off_EEE8o
		test	eax, eax
		jz	short loc_774
		cmp	eax, [esi+1Ch]
		jnz	short loc_703

loc_773:				; DATA XREF: .debug_loc:0000EEECo
		nop

loc_774:				; CODE XREF: _protobuf_c_message_get_packed_size+17Dj
					; _protobuf_c_message_get_packed_size+1E8j
					; DATA XREF: ...
		xor	eax, eax
		jmp	short loc_70B
; ---------------------------------------------------------------------------

loc_778:				; CODE XREF: _protobuf_c_message_get_packed_size+156j
					; DATA XREF: .debug_ranges:00018104o ...
		cmp	edx, 2000000h
		sbb	edx, edx
		add	edx, 5
		jmp	loc_681
; ---------------------------------------------------------------------------

loc_788:				; CODE XREF: _protobuf_c_message_get_packed_size+83j
					; DATA XREF: .debug_info:00007A32o ...
		cmp	eax, 3FFFFh
		ja	short loc_7A4
		mov	[esp+5Ch+var_40], 3
		jmp	loc_615
; ---------------------------------------------------------------------------

loc_79C:				; CODE XREF: _protobuf_c_message_get_packed_size+B9j
					; _protobuf_c_message_get_packed_size+1B7j
					; DATA XREF: ...
		mov	eax, 1
		jmp	short loc_74E
; ---------------------------------------------------------------------------
		align 4

loc_7A4:				; CODE XREF: _protobuf_c_message_get_packed_size+209j
					; DATA XREF: .debug_ranges:00018210o ...
		cmp	eax, 2000000h
		sbb	eax, eax
		add	eax, 5
		mov	[esp+5Ch+var_40], eax
		jmp	loc_615
; ---------------------------------------------------------------------------
		align 4

loc_7B8:				; DATA XREF: .rdata:00004E4Co
					; .debug_ranges:00018214o ...
		lea	edi, [edx+ebx*8]

loc_7BB:				; DATA XREF: .debug_info:000079E0o
					; .debug_ranges:00018180o ...
		xor	ebx, ebx
		jmp	short loc_7DF
; ---------------------------------------------------------------------------
unk_7BF		db  90h	; ê		; DATA XREF: .debug_loc:off_E7E1o
; ---------------------------------------------------------------------------

loc_7C0:				; CODE XREF: _protobuf_c_message_get_packed_size+260j
					; DATA XREF: .debug_info:00007A97o ...
		cmp	eax, 3FFFh
		ja	loc_A90
		mov	ecx, 2

loc_7D0:				; CODE XREF: _protobuf_c_message_get_packed_size+267j
					; _protobuf_c_message_get_packed_size+51Cj ...
		add	eax, ecx

loc_7D2:				; DATA XREF: .debug_loc:0000E7E5o
					; .debug_loc:0000E7ECo
		add	ebx, eax
		add	edx, 8

loc_7D7:				; DATA XREF: .debug_loc:0000E7F0o
					; .debug_ranges:0001827Co
		cmp	edx, edi
		jz	loc_72C

loc_7DF:				; CODE XREF: _protobuf_c_message_get_packed_size+239j
					; DATA XREF: .debug_ranges:00018280o
		mov	eax, [edx]

loc_7E1:				; DATA XREF: .debug_ranges:000182A8o
		cmp	eax, 7Fh ; ''
		ja	short loc_7C0
		mov	ecx, 1
		jmp	short loc_7D0
; ---------------------------------------------------------------------------
		align 10h

loc_7F0:				; DATA XREF: .rdata:00004E48o
					; .debug_ranges:00018284o ...
		lea	eax, [edx+ebx*4]

loc_7F3:				; DATA XREF: .debug_info:00007ACCo
					; .debug_ranges:off_182E0o ...
		xor	ebx, ebx

loc_7F5:				; DATA XREF: .debug_ranges:00018188o
					; .debug_ranges:000182E4o ...
		mov	[esp+5Ch+var_34], esi
		mov	esi, eax
		jmp	short loc_81C
; ---------------------------------------------------------------------------
unk_7FD		db  8Dh	; ç		; DATA XREF: .debug_loc:off_E56Co
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_800:				; CODE XREF: _protobuf_c_message_get_packed_size+2A9j
					; DATA XREF: .debug_ranges:000181B8o
		cmp	ecx, 3FFFh
		ja	loc_A78
		mov	eax, 2

loc_811:				; CODE XREF: _protobuf_c_message_get_packed_size+505j
					; _protobuf_c_message_get_packed_size+64Bj
					; DATA XREF: ...
		add	ecx, eax

loc_813:				; DATA XREF: .debug_loc:0000E570o
		add	ebx, ecx
		add	edx, 4

loc_818:				; DATA XREF: .debug_ranges:0001818Co
		cmp	edx, esi
		jz	short loc_840

loc_81C:				; CODE XREF: _protobuf_c_message_get_packed_size+277j
					; _protobuf_c_message_get_packed_size+2B9j
					; DATA XREF: ...
		mov	edi, [edx]
		mov	ecx, 0FFFFFFFFh
		xor	eax, eax
		repne scasb
		not	ecx
		dec	ecx

loc_82A:				; DATA XREF: .debug_ranges:000181C0o
		cmp	ecx, 7Fh ; ''
		ja	short loc_800
		mov	eax, 1

loc_834:				; DATA XREF: .debug_ranges:000181C4o
		add	ecx, eax
		add	ebx, ecx
		add	edx, 4

loc_83B:				; DATA XREF: .debug_ranges:00018194o
		cmp	edx, esi
		jnz	short loc_81C
		nop

loc_840:				; CODE XREF: _protobuf_c_message_get_packed_size+296j
					; _protobuf_c_message_get_packed_size+365j
		mov	esi, [esp+5Ch+var_34]
		jmp	loc_72C
; ---------------------------------------------------------------------------
		align 4

loc_84C:				; DATA XREF: .rdata:00004E28o
					; .rdata:00004E44o
		lea	ecx, [edx+ebx*4]

loc_84F:				; DATA XREF: .debug_info:00007B2Do
					; .debug_ranges:off_183D0o
		xor	ebx, ebx
		jmp	short loc_871
; ---------------------------------------------------------------------------
unk_853		db  90h	; ê		; DATA XREF: .debug_loc:off_EB7Fo
; ---------------------------------------------------------------------------

loc_854:				; CODE XREF: _protobuf_c_message_get_packed_size+2F2j
					; DATA XREF: .debug_info:00007B65o ...
		cmp	eax, 3FFFh
		ja	loc_A48
		mov	eax, 2

loc_864:				; CODE XREF: _protobuf_c_message_get_packed_size+2F9j
					; _protobuf_c_message_get_packed_size:loc_A58j	...
		add	ebx, eax
		add	edx, 4
		cmp	edx, ecx
		jz	loc_72C

loc_871:				; CODE XREF: _protobuf_c_message_get_packed_size+2CDj
		mov	eax, [edx]

loc_873:				; DATA XREF: .debug_ranges:00018428o
		cmp	eax, 7Fh ; ''
		ja	short loc_854
		mov	eax, 1
		jmp	short loc_864
; ---------------------------------------------------------------------------
		align 10h

loc_880:				; DATA XREF: .rdata:00004E24o
					; .rdata:00004E34o ...
		shl	ebx, 3
		jmp	loc_72C
; ---------------------------------------------------------------------------

loc_888:				; DATA XREF: .rdata:off_4E10o
		lea	ecx, [edx+ebx*4]

loc_88B:				; DATA XREF: .debug_info:00007B9Do
					; .debug_info:00007BBAo ...
		xor	ebx, ebx
		jmp	short loc_8B6
; ---------------------------------------------------------------------------
unk_88F		db  90h	; ê		; DATA XREF: .debug_loc:off_EAC2o
; ---------------------------------------------------------------------------

loc_890:				; CODE XREF: _protobuf_c_message_get_packed_size+336j
					; DATA XREF: .debug_ranges:000183D8o ...
		cmp	eax, 7Fh ; ''
		jle	loc_9F8
		cmp	eax, 3FFFh
		jg	loc_AFC
		mov	eax, 2

loc_8A9:				; CODE XREF: _protobuf_c_message_get_packed_size+33Dj
					; _protobuf_c_message_get_packed_size+479j ...
		add	ebx, eax
		add	edx, 4
		cmp	edx, ecx
		jz	loc_72C

loc_8B6:				; CODE XREF: _protobuf_c_message_get_packed_size+309j
		mov	eax, [edx]

loc_8B8:				; DATA XREF: .debug_ranges:000183E0o
		test	eax, eax
		jns	short loc_890
		mov	eax, 0Ah
		jmp	short loc_8A9
; ---------------------------------------------------------------------------
		align 4

loc_8C4:				; DATA XREF: .rdata:00004E20o
		mov	ecx, edx

loc_8C6:				; DATA XREF: .debug_ranges:000183E4o
		lea	eax, [edx+ebx*8]

loc_8C9:				; DATA XREF: .debug_info:00005ED9o
					; .debug_ranges:00018430o
		xor	ebx, ebx
		mov	[esp+5Ch+var_34], esi
		mov	esi, eax
		jmp	short loc_8EF
; ---------------------------------------------------------------------------
unk_8D3		db  90h	; ê		; DATA XREF: .debug_loc:off_ED05o
					; .debug_loc:off_ED9Do
; ---------------------------------------------------------------------------

loc_8D4:				; CODE XREF: _protobuf_c_message_get_packed_size+380j
					; DATA XREF: .debug_info:00007C0Do ...
		cmp	edx, 7
		ja	loc_A60
		mov	edi, 5

loc_8E2:				; CODE XREF: _protobuf_c_message_get_packed_size+39Bj
					; _protobuf_c_message_get_packed_size+4EDj ...
		add	ebx, edi
		add	ecx, 8
		cmp	ecx, esi
		jz	loc_840

loc_8EF:				; CODE XREF: _protobuf_c_message_get_packed_size+34Dj
					; DATA XREF: .debug_loc:0000ED09o ...
		mov	eax, [ecx]
		mov	edx, [ecx+4]

loc_8F4:				; DATA XREF: .debug_info:00007C8Bo
					; .debug_loc:off_ECDDo	...
		test	edx, edx
		js	loc_AB4
		add	eax, eax

loc_8FE:				; DATA XREF: .debug_loc:0000ECE1o
		adc	edx, edx

loc_900:				; CODE XREF: _protobuf_c_message_get_packed_size+541j
					; DATA XREF: .debug_ranges:00018560o ...
		mov	edi, edx

loc_902:				; DATA XREF: .debug_loc:0000EDA8o
		test	edx, edx
		jnz	short loc_8D4

loc_906:				; DATA XREF: .debug_info:00007C55o
					; .debug_loc:off_EE08o	...
		cmp	eax, 7Fh ; ''
		jbe	loc_ACC
		cmp	eax, 3FFFh
		ja	loc_B28
		mov	edi, 2
		jmp	short loc_8E2
; ---------------------------------------------------------------------------
unk_921		db  8Dh	; ç		; DATA XREF: .debug_loc:0000EDACo
					; .debug_loc:0000EE0Co
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_924:				; DATA XREF: .rdata:00004E1Co
					; .rdata:00004E30o ...
		lea	edi, [edx+ebx*8]

loc_927:				; DATA XREF: .debug_ranges:00018510o
					; .debug_ranges:00018568o ...
		xor	ebx, ebx
		jmp	short loc_947
; ---------------------------------------------------------------------------
unk_92B		db  90h	; ê		; DATA XREF: .debug_loc:off_E84Bo
					; .debug_loc:off_E98Do
; ---------------------------------------------------------------------------

loc_92C:				; CODE XREF: _protobuf_c_message_get_packed_size+3CAj
					; DATA XREF: .debug_ranges:000182E8o ...
		cmp	eax, 7
		ja	loc_A04
		mov	eax, 5

loc_93A:				; CODE XREF: _protobuf_c_message_get_packed_size+3E6j
					; _protobuf_c_message_get_packed_size+490j ...
		add	ebx, eax
		add	edx, 8

loc_93F:				; DATA XREF: .debug_loc:0000E99Co
		cmp	edx, edi
		jz	loc_72C

loc_947:				; CODE XREF: _protobuf_c_message_get_packed_size+3A5j
		mov	ecx, [edx]
		mov	eax, [edx+4]

loc_94C:				; DATA XREF: .debug_ranges:000182F0o
					; .debug_ranges:00018348o
		test	eax, eax
		jnz	short loc_92C

loc_950:				; DATA XREF: .debug_info:00007AF7o
					; .debug_loc:off_EA70o	...
		cmp	ecx, 7Fh ; ''
		jbe	loc_AD8
		cmp	ecx, 3FFFh
		ja	loc_B14
		mov	eax, 2
		jmp	short loc_93A
; ---------------------------------------------------------------------------

loc_96C:				; DATA XREF: .rdata:00004E18o
					; .rdata:00004E2Co ...
		shl	ebx, 2
		jmp	loc_72C
; ---------------------------------------------------------------------------

loc_974:				; DATA XREF: .rdata:00004E14o
		lea	ecx, [edx+ebx*4]

loc_977:				; DATA XREF: .debug_ranges:00018218o
		xor	ebx, ebx
		jmp	short loc_999
; ---------------------------------------------------------------------------
unk_97B		db  90h	; ê		; DATA XREF: .debug_loc:off_EC25o
					; .debug_loc:off_EC8Bo
; ---------------------------------------------------------------------------

loc_97C:				; CODE XREF: _protobuf_c_message_get_packed_size+424j
					; DATA XREF: .debug_ranges:0001821Co ...
		cmp	eax, 3FFFh
		ja	loc_A1C
		mov	eax, 2

loc_98C:				; CODE XREF: _protobuf_c_message_get_packed_size+42Bj
					; _protobuf_c_message_get_packed_size:loc_A2Cj	...
		add	ebx, eax
		add	edx, 4

loc_991:				; DATA XREF: .debug_loc:0000EC29o
		cmp	edx, ecx
		jz	loc_72C

loc_999:				; CODE XREF: _protobuf_c_message_get_packed_size+3F5j
		mov	eax, [edx]

loc_99B:				; DATA XREF: .debug_info:00007BF2o
					; .debug_ranges:00018478o ...
		test	eax, eax
		js	loc_AA8
		shl	eax, 1

loc_9A5:				; CODE XREF: _protobuf_c_message_get_packed_size+52Aj
					; DATA XREF: .debug_ranges:000184B0o ...
		cmp	eax, 7Fh ; ''
		ja	short loc_97C
		mov	eax, 1
		jmp	short loc_98C
; ---------------------------------------------------------------------------
		align 4

loc_9B4:				; DATA XREF: .rdata:00004E50o
					; .debug_ranges:0001847Co ...
		xor	ecx, ecx
		xor	edi, edi
		mov	[esp+5Ch+var_34], ebp
		mov	[esp+5Ch+var_30], esi
		mov	esi, edx
		mov	ebp, ecx
		jmp	short loc_9E1
; ---------------------------------------------------------------------------
unk_9C6		db  66h	; f		; DATA XREF: .debug_loc:off_EE5Ao
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_9C8:				; CODE XREF: _protobuf_c_message_get_packed_size+46Bj
					; DATA XREF: .debug_info:00007CB4o ...
		cmp	eax, 3FFFh
		ja	short loc_A34
		mov	ecx, 2

loc_9D4:				; CODE XREF: _protobuf_c_message_get_packed_size+472j
					; _protobuf_c_message_get_packed_size+4C0j ...
		add	eax, ecx

loc_9D6:				; DATA XREF: .debug_loc:0000EE5Eo
		add	ebp, eax

loc_9D8:				; DATA XREF: .debug_ranges:00018664o
		inc	edi
		cmp	edi, ebx
		jz	loc_720

loc_9E1:				; CODE XREF: _protobuf_c_message_get_packed_size+440j
					; DATA XREF: .debug_ranges:00018668o
		mov	eax, [esi+edi*4]
		mov	[esp+5Ch+var_5C], eax
		call	_protobuf_c_message_get_packed_size

loc_9EC:				; DATA XREF: .debug_info:00007CE8o
					; .debug_ranges:00018690o
		cmp	eax, 7Fh ; ''
		ja	short loc_9C8
		mov	ecx, 1
		jmp	short loc_9D4
; ---------------------------------------------------------------------------

loc_9F8:				; CODE XREF: _protobuf_c_message_get_packed_size+30Fj
					; DATA XREF: .debug_ranges:000183E8o ...
		mov	eax, 1
		jmp	loc_8A9
; ---------------------------------------------------------------------------
		align 4

loc_A04:				; CODE XREF: _protobuf_c_message_get_packed_size+3ABj
					; DATA XREF: .debug_ranges:000182F8o ...
		cmp	eax, 3FFh
		ja	loc_B58
		mov	eax, 6
		jmp	loc_93A
; ---------------------------------------------------------------------------
unk_A19		db  8Dh	; ç		; DATA XREF: .debug_loc:off_ECBFo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_A1C:				; CODE XREF: _protobuf_c_message_get_packed_size+3FDj
					; DATA XREF: .debug_info:00007BD7o ...
		cmp	eax, 1FFFFFh
		ja	loc_BB4
		mov	eax, 3

loc_A2C:				; DATA XREF: .debug_loc:0000ECC3o
		jmp	loc_98C
; ---------------------------------------------------------------------------
unk_A31		db  8Dh	; ç		; DATA XREF: .debug_loc:off_EE8Eo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_A34:				; CODE XREF: _protobuf_c_message_get_packed_size+449j
					; DATA XREF: .debug_info:00006044o ...
		cmp	eax, 1FFFFFh
		ja	loc_BA4
		mov	ecx, 3
		jmp	short loc_9D4
; ---------------------------------------------------------------------------
unk_A46		db  66h	; f		; DATA XREF: .debug_loc:off_EBEFo
					; .debug_loc:0000EE92o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_A48:				; CODE XREF: _protobuf_c_message_get_packed_size+2D5j
					; DATA XREF: .debug_info:00007B82o ...
		cmp	eax, 1FFFFFh
		ja	loc_B94
		mov	eax, 3

loc_A58:				; DATA XREF: .debug_loc:0000EBF3o
		jmp	loc_864
; ---------------------------------------------------------------------------
		align 10h

loc_A60:				; CODE XREF: _protobuf_c_message_get_packed_size+353j
					; DATA XREF: .debug_ranges:0001843Co ...
		cmp	edx, 3FFh
		ja	loc_B80
		mov	edi, 6
		jmp	loc_8E2
; ---------------------------------------------------------------------------
unk_A76		db  66h	; f		; DATA XREF: .debug_loc:off_E5ADo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_A78:				; CODE XREF: _protobuf_c_message_get_packed_size+282j
					; DATA XREF: .debug_info:000079F9o ...
		cmp	ecx, 1FFFFFh
		ja	loc_BC4
		mov	eax, 3
		jmp	loc_811
; ---------------------------------------------------------------------------
unk_A8E		db  66h	; f		; DATA XREF: .debug_loc:0000E5B1o
					; .debug_loc:off_E82Do
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_A90:				; CODE XREF: _protobuf_c_message_get_packed_size+241j
					; DATA XREF: .debug_info:00007AB0o ...
		cmp	eax, 1FFFFFh
		ja	loc_B70
		mov	ecx, 3
		jmp	loc_7D0
; ---------------------------------------------------------------------------
unk_AA5		db  8Dh	; ç		; DATA XREF: .debug_loc:0000E831o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_AA8:				; CODE XREF: _protobuf_c_message_get_packed_size+419j
					; DATA XREF: .debug_ranges:0001828Co ...
		neg	eax
		lea	eax, [eax+eax-1]
		jmp	loc_9A5
; ---------------------------------------------------------------------------
		align 4

loc_AB4:				; CODE XREF: _protobuf_c_message_get_packed_size+372j
					; DATA XREF: .debug_ranges:0001848Co ...
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	loc_900
; ---------------------------------------------------------------------------
		align 4

loc_ACC:				; CODE XREF: _protobuf_c_message_get_packed_size+385j
					; DATA XREF: .debug_ranges:00018578o ...
		mov	edi, 1
		jmp	loc_8E2
; ---------------------------------------------------------------------------
		align 4

loc_AD8:				; CODE XREF: _protobuf_c_message_get_packed_size+3CFj
					; DATA XREF: .debug_ranges:00018300o ...
		mov	eax, 1
		jmp	loc_93A
; ---------------------------------------------------------------------------
unk_AE2		db  66h	; f		; DATA XREF: .debug_loc:off_E7C3o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_AE4:				; CODE XREF: _protobuf_c_message_get_packed_size+1BFj
					; DATA XREF: .debug_info:00007A6Ao ...
		cmp	ebx, 1FFFFFh
		ja	loc_BD4
		mov	eax, 3
		jmp	loc_74E
; ---------------------------------------------------------------------------
unk_AFA		db  66h	; f		; DATA XREF: .debug_loc:0000E7C7o
					; .debug_loc:off_EB49o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_AFC:				; CODE XREF: _protobuf_c_message_get_packed_size+31Aj
					; DATA XREF: .debug_info:00007B4Ao ...
		cmp	eax, 1FFFFFh
		jg	loc_BE4
		mov	eax, 3

loc_B0C:				; DATA XREF: .debug_loc:0000EB4Do
					; .debug_loc:0000EB54o
		jmp	loc_8A9
; ---------------------------------------------------------------------------
unk_B11		db  8Dh	; ç		; DATA XREF: .debug_loc:off_EAA4o
					; .debug_loc:0000EB58o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_B14:				; CODE XREF: _protobuf_c_message_get_packed_size+3DBj
					; DATA XREF: .debug_info:00007B10o ...
		cmp	ecx, 1FFFFFh
		ja	short loc_B39
		mov	eax, 3
		jmp	loc_93A
; ---------------------------------------------------------------------------
unk_B26		db  66h	; f		; DATA XREF: .debug_loc:0000EAA8o
					; .debug_loc:off_EE3Co
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_B28:				; CODE XREF: _protobuf_c_message_get_packed_size+390j
					; DATA XREF: .debug_info:00007C6Eo ...
		cmp	eax, 1FFFFFh
		ja	short loc_B49

loc_B2F:				; DATA XREF: .debug_info:000061ECo
		mov	edi, 3
		jmp	loc_8E2
; ---------------------------------------------------------------------------

loc_B39:				; CODE XREF: _protobuf_c_message_get_packed_size+596j
					; DATA XREF: .debug_loc:0000EE40o ...
		cmp	ecx, 10000000h
		sbb	eax, eax
		add	eax, 5
		jmp	loc_93A
; ---------------------------------------------------------------------------

loc_B49:				; CODE XREF: _protobuf_c_message_get_packed_size+5A9j
					; DATA XREF: .debug_ranges:00018314o ...
		cmp	eax, 10000000h
		sbb	edi, edi
		add	edi, 5
		jmp	loc_8E2
; ---------------------------------------------------------------------------

loc_B58:				; CODE XREF: _protobuf_c_message_get_packed_size+485j
					; DATA XREF: .debug_ranges:00018318o ...
		cmp	eax, 1FFFFh
		ja	loc_C09
		mov	eax, 7
		jmp	loc_93A
; ---------------------------------------------------------------------------
unk_B6D		db  8Dh	; ç		; DATA XREF: .debug_loc:0000E838o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_B70:				; CODE XREF: _protobuf_c_message_get_packed_size+511j
					; DATA XREF: .debug_ranges:00018290o ...
		cmp	eax, 10000000h
		sbb	ecx, ecx
		add	ecx, 5
		jmp	loc_7D0
; ---------------------------------------------------------------------------
unk_B7F		db  90h	; ê		; DATA XREF: .debug_loc:0000E83Co
; ---------------------------------------------------------------------------

loc_B80:				; CODE XREF: _protobuf_c_message_get_packed_size+4E2j
					; DATA XREF: .debug_ranges:00018294o ...
		cmp	edx, 1FFFFh
		ja	short loc_BF7
		mov	edi, 7
		jmp	loc_8E2
; ---------------------------------------------------------------------------
		align 4

loc_B94:				; CODE XREF: _protobuf_c_message_get_packed_size+4C9j
					; DATA XREF: .debug_ranges:00018440o ...
		cmp	eax, 10000000h
		sbb	eax, eax
		add	eax, 5
		jmp	loc_864
; ---------------------------------------------------------------------------
		align 4

loc_BA4:				; CODE XREF: _protobuf_c_message_get_packed_size+4B5j
					; DATA XREF: .debug_ranges:00018444o ...
		cmp	eax, 10000000h
		sbb	ecx, ecx
		add	ecx, 5
		jmp	loc_9D4
; ---------------------------------------------------------------------------
		align 4

loc_BB4:				; CODE XREF: _protobuf_c_message_get_packed_size+49Dj
					; DATA XREF: .debug_ranges:00018490o ...
		cmp	eax, 10000000h
		sbb	eax, eax
		add	eax, 5
		jmp	loc_98C
; ---------------------------------------------------------------------------
unk_BC3		db  90h	; ê		; DATA XREF: .debug_loc:0000E5B8o
; ---------------------------------------------------------------------------

loc_BC4:				; CODE XREF: _protobuf_c_message_get_packed_size+4FAj
					; DATA XREF: .debug_info:000061D4o ...
		cmp	ecx, 10000000h
		sbb	eax, eax
		add	eax, 5
		jmp	loc_811
; ---------------------------------------------------------------------------

loc_BD4:				; CODE XREF: _protobuf_c_message_get_packed_size+566j
					; DATA XREF: .debug_loc:0000E5BCo ...
		cmp	ebx, 10000000h
		sbb	eax, eax

loc_BDC:				; DATA XREF: .debug_info:000060D8o
					; .debug_info:00006B80o ...
		add	eax, 5

loc_BDF:				; DATA XREF: .debug_info:0000672Co
					; .debug_info:00006B68o ...
		jmp	loc_74E
; ---------------------------------------------------------------------------

loc_BE4:				; CODE XREF: _protobuf_c_message_get_packed_size+57Dj
					; DATA XREF: .debug_ranges:00018254o ...
		cmp	eax, 0FFFFFFFh

loc_BE9:				; DATA XREF: .debug_info:000061F9o
		setnle	al

loc_BEC:				; DATA XREF: .debug_info:000063FCo
		movzx	eax, al
		add	eax, 4

loc_BF2:				; DATA XREF: .debug_info:off_6204o
		jmp	loc_8A9
; ---------------------------------------------------------------------------

loc_BF7:				; CODE XREF: _protobuf_c_message_get_packed_size+602j
					; DATA XREF: .debug_ranges:000183FCo ...
		cmp	edx, 0FFFFFFh
		ja	short loc_C1A
		mov	edi, 8
		jmp	loc_8E2
; ---------------------------------------------------------------------------

loc_C09:				; CODE XREF: _protobuf_c_message_get_packed_size+5D9j
					; DATA XREF: .debug_ranges:00018320o ...
		cmp	eax, 0FFFFFFh
		ja	short loc_C27
		mov	eax, 8
		jmp	loc_93A
; ---------------------------------------------------------------------------

loc_C1A:				; CODE XREF: _protobuf_c_message_get_packed_size+679j
					; DATA XREF: .debug_ranges:00018324o ...
		sar	edi, 1Fh
		not	edi
		add	edi, 0Ah
		jmp	loc_8E2
; ---------------------------------------------------------------------------

loc_C27:				; CODE XREF: _protobuf_c_message_get_packed_size+68Aj
					; DATA XREF: .debug_ranges:00018328o ...
		sar	eax, 1Fh
		not	eax
		add	eax, 0Ah
		jmp	loc_93A
; ---------------------------------------------------------------------------

loc_C34:				; CODE XREF: _protobuf_c_message_get_packed_size+12Ej
					; DATA XREF: .debug_ranges:0001810Co ...
		call	__imp____stack_chk_fail
; ---------------------------------------------------------------------------

loc_C39:				; CODE XREF: _protobuf_c_message_get_packed_size+23j
					; DATA XREF: .debug_info:00007DA3o
		mov	[esp+5Ch+var_54], 215h ; unsigned int
		mov	[esp+5Ch+var_58], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+5Ch+var_5C], offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		call	__assert
_protobuf_c_message_get_packed_size endp ; sp-analysis failed

; ---------------------------------------------------------------------------
unk_C55		db  8Dh	; ç		; DATA XREF: .debug_info:00007907o
					; .debug_info:00007DACo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_required_field_get_packed_size_isra_11	proc near
					; CODE XREF: _protobuf_c_message_get_packed_size:loc_6C6p
					; _protobuf_c_message_get_packed_size:loc_706p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	edi

loc_C59:				; DATA XREF: .debug_loc:0000EFB1o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], ebx
		xor	ebx, ebx

loc_C6A:				; DATA XREF: .debug_info:00007E15o
					; .debug_loc:off_F1ACo	...
		cmp	eax, 0Fh
		jbe	short loc_CB8
		cmp	eax, 7FFh
		ja	short loc_C9C
		mov	esi, 2

loc_C7B:				; CODE XREF: _required_field_get_packed_size_isra_11+65j
					; _required_field_get_packed_size_isra_11+B6j
					; DATA XREF: ...
		cmp	edx, 10h	; switch 17 cases
		jbe	short loc_CB0

loc_C80:				; CODE XREF: _required_field_get_packed_size_isra_11+53j
					; DATA XREF: .debug_info:00006318o ...
		mov	[esp+2Ch+var_24], 197h ; jumptable 00000CB0 default case

loc_C88:				; DATA XREF: .debug_info:000061B4o
		mov	[esp+2Ch+var_28], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+2Ch+var_2C], offset off_4E54 ; void *

loc_C97:				; DATA XREF: .debug_loc:0000F031o
					; .debug_loc:0000F038o	...
		call	__assert
; ---------------------------------------------------------------------------

loc_C9C:				; CODE XREF: _required_field_get_packed_size_isra_11+1Cj
					; DATA XREF: .debug_info:00007E32o ...
		cmp	eax, 3FFFFh
		ja	short loc_D04
		mov	esi, 3

loc_CA8:				; DATA XREF: .debug_ranges:0001877Co
					; .debug_ranges:0001879Co
		cmp	edx, 10h
		ja	short loc_C80	; jumptable 00000CB0 default case

loc_CAD:				; DATA XREF: .debug_loc:0000F268o
		lea	esi, [esi+0]

loc_CB0:				; CODE XREF: _required_field_get_packed_size_isra_11+26j
					; DATA XREF: .debug_info:000062C5o
		jmp	ds:off_4E58[edx*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_CB8:				; CODE XREF: _required_field_get_packed_size_isra_11+15j
					; DATA XREF: .debug_ranges:00018780o
		mov	esi, 1
		jmp	short loc_C7B
; ---------------------------------------------------------------------------
		align 10h

loc_CC0:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		lea	eax, [esi+8]	; jumptable 00000CB0 cases 5,9,11
		nop

loc_CC4:				; CODE XREF: _required_field_get_packed_size_isra_11+87j
					; _required_field_get_packed_size_isra_11+A9j ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_FB9
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_CDC:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o
		lea	eax, [esi+4]	; jumptable 00000CB0 cases 2,7,10
		jmp	short loc_CC4
; ---------------------------------------------------------------------------
		align 4

loc_CE4:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o
		mov	eax, [ecx]	; jumptable 00000CB0 cases 6,13

loc_CE6:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_D58j
					; _required_field_get_packed_size_isra_11+2D7j
					; DATA XREF: ...
		cmp	eax, 7Fh ; ''
		jbe	loc_E4C
		cmp	eax, 3FFFh
		ja	loc_EA8

loc_CFA:				; CODE XREF: _required_field_get_packed_size_isra_11+11Cj
					; _required_field_get_packed_size_isra_11+1B0j	...
		mov	eax, 2

loc_CFF:				; DATA XREF: .debug_ranges:000187B4o
					; .debug_ranges:off_187E8o
		add	eax, esi
		jmp	short loc_CC4
; ---------------------------------------------------------------------------
		align 4

loc_D04:				; CODE XREF: _required_field_get_packed_size_isra_11+49j
					; DATA XREF: .debug_ranges:00018788o ...
		cmp	eax, 2000000h
		sbb	esi, esi
		add	esi, 5
		jmp	loc_C7B
; ---------------------------------------------------------------------------
		align 4

loc_D14:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	eax, [ecx]	; jumptable 00000CB0 case 16

loc_D16:				; DATA XREF: .debug_loc:off_F2B3o
		test	eax, eax
		jz	loc_E4C
		mov	[esp+2Ch+var_2C], eax

loc_D21:				; DATA XREF: .debug_loc:0000F2B7o
		call	_protobuf_c_message_get_packed_size

loc_D26:				; DATA XREF: .debug_info:00007EA0o
					; .debug_info:00007ED4o ...
		cmp	eax, 7Fh ; ''
		jbe	loc_E9F
		cmp	eax, 3FFFh
		ja	loc_EEA
		add	eax, 2

loc_D3D:				; DATA XREF: .debug_loc:0000F2CAo
					; .debug_ranges:00018874o
		add	eax, esi
		jmp	short loc_CC4
; ---------------------------------------------------------------------------
		align 4

loc_D44:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		lea	eax, [esi+1]	; jumptable 00000CB0 case 12
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_D4C:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o
		mov	eax, [ecx]	; jumptable 00000CB0 case 1

loc_D4E:				; DATA XREF: .debug_info:00007EE2o
					; .debug_info:00007EFFo ...
		test	eax, eax
		js	loc_F29
		shl	eax, 1

loc_D58:				; DATA XREF: .debug_loc:0000F336o
		jmp	short loc_CE6
; ---------------------------------------------------------------------------
		align 4

loc_D5C:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	eax, [ecx]	; jumptable 00000CB0 case 0

loc_D5E:				; DATA XREF: .debug_info:00007F1Ao
					; .debug_loc:off_F368o	...
		test	eax, eax
		js	loc_E58
		cmp	eax, 7Fh ; ''
		jle	loc_E4C
		cmp	eax, 3FFFh
		jle	short loc_CFA

loc_D76:				; DATA XREF: .debug_info:00007F37o
					; .debug_loc:off_F3A9o	...
		cmp	eax, 1FFFFFh
		jg	loc_F95

loc_D81:				; DATA XREF: .debug_loc:0000F36Co
					; .debug_loc:0000F3ADo
		lea	esi, [esi+0]

loc_D84:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_E14j
					; _required_field_get_packed_size_isra_11+22Fj	...
		mov	eax, 3

loc_D89:				; DATA XREF: .debug_ranges:000187BCo
					; .debug_ranges:000187D4o ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_D90:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	edi, [ecx]	; jumptable 00000CB0 case 14

loc_D92:				; DATA XREF: .debug_loc:off_F3D3o
		test	edi, edi
		jz	loc_F47
		xor	eax, eax
		mov	ecx, 0FFFFFFFFh
		repne scasb

loc_DA3:				; DATA XREF: .debug_loc:0000F3D7o
		not	ecx
		lea	eax, [ecx-1]

loc_DA8:				; DATA XREF: .debug_info:00007F6Do
					; .debug_loc:off_F3F1o	...
		cmp	eax, 7Fh ; ''
		jbe	short loc_DB9
		cmp	eax, 3FFFh
		ja	loc_ED7
		inc	ecx

loc_DB9:				; CODE XREF: _required_field_get_packed_size_isra_11+153j
					; _required_field_get_packed_size_isra_11+1EEj	...
		lea	eax, [esi+ecx]
		jmp	loc_CC4
; ---------------------------------------------------------------------------
		align 4

loc_DC4:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	ebx, [ecx+4]	; jumptable 00000CB0 case 4
		mov	ecx, [ecx]

loc_DC9:				; DATA XREF: .debug_info:00007FE9o
					; .debug_info:00008006o ...
		test	ebx, ebx
		js	loc_F13
		add	ecx, ecx

loc_DD3:				; DATA XREF: .debug_loc:0000F48Eo
		adc	ebx, ebx

loc_DD5:				; CODE XREF: _required_field_get_packed_size_isra_11+2CCj
					; DATA XREF: .debug_info:00008024o ...
		mov	eax, ebx

loc_DD7:				; DATA XREF: .debug_loc:off_F4DAo
		test	ebx, ebx
		jz	loc_E70

loc_DDF:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_DFBj
					; DATA XREF: .debug_info:00008082o ...
		cmp	eax, 7
		ja	loc_EC4
		mov	eax, 5

loc_DED:				; DATA XREF: .debug_ranges:00018800o
					; .debug_ranges:00018A44o ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_DF4:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	edx, [ecx]	; jumptable 00000CB0 cases 3,8
		mov	eax, [ecx+4]

loc_DF9:				; DATA XREF: .debug_loc:off_F529o
					; .debug_loc:off_F552o	...
		test	eax, eax

loc_DFB:				; DATA XREF: .debug_info:000064E0o
		jnz	short loc_DDF

loc_DFD:				; DATA XREF: .debug_info:000080ADo
					; .debug_loc:off_F571o
		cmp	edx, 7Fh ; ''
		jbe	short loc_E4C
		cmp	edx, 3FFFh
		jbe	loc_CFA

loc_E0E:				; DATA XREF: .debug_info:000080C6o
					; .debug_loc:off_F584o
		cmp	edx, 1FFFFFh

loc_E14:				; DATA XREF: .debug_info:00006424o
		jbe	loc_D84
		cmp	edx, 10000000h
		sbb	eax, eax

loc_E22:				; DATA XREF: .debug_loc:0000F52Do
					; .debug_loc:0000F556o
		add	eax, 5

loc_E25:				; DATA XREF: .debug_info:000080B1o
					; .debug_info:000080CAo ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_E2C:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_CB0j
					; DATA XREF: .rdata:off_4E58o ...
		mov	edx, [ecx]	; jumptable 00000CB0 case 15

loc_E2E:				; DATA XREF: .debug_info:00007FB4o
					; .debug_loc:off_F438o	...
		cmp	edx, 7Fh ; ''
		jbe	short loc_E64
		cmp	edx, 3FFFh
		ja	loc_EFF
		mov	ecx, 2

loc_E44:				; DATA XREF: .debug_ranges:0001899Co
		add	esi, edx
		jmp	loc_DB9
; ---------------------------------------------------------------------------
unk_E4B		db  90h	; ê		; DATA XREF: .debug_loc:0000F43Co
; ---------------------------------------------------------------------------

loc_E4C:				; CODE XREF: _required_field_get_packed_size_isra_11+91j
					; _required_field_get_packed_size_isra_11+C0j ...
		mov	eax, 1
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_E58:				; CODE XREF: _required_field_get_packed_size_isra_11+108j
					; DATA XREF: .debug_ranges:00018814o ...
		mov	eax, 0Ah

loc_E5D:				; DATA XREF: .debug_ranges:00018818o
					; .debug_ranges:000188E4o
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_E64:				; CODE XREF: _required_field_get_packed_size_isra_11+1D9j
					; DATA XREF: .debug_info:000064D4o ...
		mov	ecx, 1

loc_E69:				; DATA XREF: .debug_ranges:000189A4o
		add	esi, edx
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_E70:				; CODE XREF: _required_field_get_packed_size_isra_11+181j
					; DATA XREF: .debug_info:0000804Bo ...
		cmp	ecx, 7Fh ; ''
		jbe	short loc_E4C
		cmp	ecx, 3FFFh

loc_E7B:				; DATA XREF: .debug_info:off_648Do
		jbe	loc_CFA

loc_E81:				; DATA XREF: .debug_info:00008064o
					; .debug_loc:off_F516o
		cmp	ecx, 1FFFFFh
		jbe	loc_D84
		cmp	ecx, 10000000h

loc_E93:				; DATA XREF: .debug_info:00006499o
					; .debug_info:00006995o ...
		sbb	eax, eax
		add	eax, 5

loc_E98:				; DATA XREF: .debug_info:off_804Fo
					; .debug_info:00008068o ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_E9F:				; CODE XREF: _required_field_get_packed_size_isra_11+D1j
					; DATA XREF: .debug_info:0000BC1Co ...
		inc	eax
		add	eax, esi

loc_EA2:				; DATA XREF: .debug_info:000064B5o
		jmp	loc_CC4
; ---------------------------------------------------------------------------
unk_EA7		db  90h	; ê		; DATA XREF: .debug_loc:off_F2A0o
; ---------------------------------------------------------------------------

loc_EA8:				; CODE XREF: _required_field_get_packed_size_isra_11+9Cj
					; DATA XREF: .debug_ranges:000187C0o ...
		cmp	eax, 1FFFFFh
		jbe	loc_D84
		cmp	eax, 10000000h
		sbb	eax, eax

loc_EBA:				; DATA XREF: .debug_loc:0000F2A4o
		add	eax, 5

loc_EBD:				; DATA XREF: .debug_ranges:000187C4o
					; .debug_ranges:000187DCo ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_EC4:				; CODE XREF: _required_field_get_packed_size_isra_11+18Aj
					; DATA XREF: .debug_ranges:0001882Co ...
		cmp	eax, 3FFh

loc_EC9:				; DATA XREF: .debug_info:000064C0o
					; .debug_info:000064C5o ...
		ja	short loc_F34
		mov	eax, 6

loc_ED0:				; DATA XREF: .debug_info:0000645Do
					; .debug_ranges:00018830o ...
		add	eax, esi

loc_ED2:				; DATA XREF: .debug_info:000064F8o
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_ED7:				; CODE XREF: _required_field_get_packed_size_isra_11+15Aj
					; DATA XREF: .debug_info:00007F86o ...
		cmp	eax, 1FFFFFh
		ja	short loc_F51

loc_EDE:				; DATA XREF: .debug_info:00006470o
					; .debug_info:off_64ECo ...
		mov	ecx, 3
		add	ecx, eax
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_EEA:				; CODE XREF: _required_field_get_packed_size_isra_11+DCj
					; DATA XREF: .debug_info:00007EBDo ...
		cmp	eax, 1FFFFFh
		ja	short loc_F62
		mov	edx, 3
		add	eax, edx

loc_EF8:				; CODE XREF: _required_field_get_packed_size_isra_11+316j
					; DATA XREF: .debug_loc:0000F318o ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_EFF:				; CODE XREF: _required_field_get_packed_size_isra_11+1E1j
					; DATA XREF: .debug_info:00007FCDo ...
		cmp	edx, 1FFFFFh
		ja	short loc_F70
		mov	ecx, 3

loc_F0C:				; DATA XREF: .debug_ranges:000189ACo
					; .debug_ranges:000189C4o
		add	esi, edx
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_F13:				; CODE XREF: _required_field_get_packed_size_isra_11+173j
					; DATA XREF: .debug_loc:0000F470o ...
		neg	ecx
		adc	ebx, 0
		neg	ebx
		add	ecx, ecx
		adc	ebx, ebx
		add	ecx, 0FFFFFFFFh
		adc	ebx, 0FFFFFFFFh
		jmp	loc_DD5
; ---------------------------------------------------------------------------

loc_F29:				; CODE XREF: _required_field_get_packed_size_isra_11+F8j
					; DATA XREF: .debug_ranges:000188B0o ...
		neg	eax
		lea	eax, [eax+eax-1]
		jmp	loc_CE6
; ---------------------------------------------------------------------------

loc_F34:				; CODE XREF: _required_field_get_packed_size_isra_11:loc_EC9j
					; DATA XREF: .debug_ranges:000188B4o ...
		cmp	eax, 1FFFFh
		ja	short loc_F82
		mov	eax, 7

loc_F40:				; DATA XREF: .debug_ranges:00018840o
					; .debug_ranges:00018A5Co ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_F47:				; CODE XREF: _required_field_get_packed_size_isra_11+13Cj
					; DATA XREF: .debug_ranges:00018844o ...
		mov	ecx, 1
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_F51:				; CODE XREF: _required_field_get_packed_size_isra_11+284j
					; DATA XREF: .debug_ranges:00018940o ...
		cmp	eax, 10000000h
		sbb	ecx, ecx
		add	ecx, 5
		add	ecx, eax
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_F62:				; CODE XREF: _required_field_get_packed_size_isra_11+297j
					; DATA XREF: .debug_ranges:00018848o ...
		cmp	eax, 10000000h
		sbb	edx, edx
		add	edx, 5
		add	eax, edx
		jmp	short loc_EF8
; ---------------------------------------------------------------------------

loc_F70:				; CODE XREF: _required_field_get_packed_size_isra_11+2ADj
					; DATA XREF: .debug_ranges:0001884Co ...
		cmp	edx, 10000000h
		sbb	ecx, ecx
		add	ecx, 5

loc_F7B:				; DATA XREF: .debug_ranges:000189B4o
					; .debug_ranges:000189CCo
		add	esi, edx
		jmp	loc_DB9
; ---------------------------------------------------------------------------

loc_F82:				; CODE XREF: _required_field_get_packed_size_isra_11+2E1j
					; DATA XREF: .debug_ranges:0001898Co ...
		cmp	eax, 0FFFFFFh
		ja	short loc_FAA
		mov	eax, 8

loc_F8E:				; DATA XREF: .debug_ranges:00018850o
					; .debug_ranges:00018A64o ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_F95:				; CODE XREF: _required_field_get_packed_size_isra_11+123j
					; DATA XREF: .debug_loc:0000F3B4o ...
		cmp	eax, 0FFFFFFFh
		setnle	al

loc_F9D:				; DATA XREF: .debug_loc:0000F3B8o
		movzx	eax, al
		add	eax, 4

loc_FA3:				; DATA XREF: .debug_ranges:00018858o
					; .debug_ranges:000188ECo ...
		add	eax, esi
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_FAA:				; CODE XREF: _required_field_get_packed_size_isra_11+32Fj
					; DATA XREF: .debug_ranges:0001885Co ...
		sar	eax, 1Fh
		not	eax
		add	eax, 0Ah

loc_FB2:				; DATA XREF: .debug_ranges:00018860o
					; .debug_ranges:00018A6Co ...
		add	eax, esi

loc_FB4:				; DATA XREF: .debug_info:00006270o
					; .debug_info:00006501o
		jmp	loc_CC4
; ---------------------------------------------------------------------------

loc_FB9:				; CODE XREF: _required_field_get_packed_size_isra_11+76j
					; DATA XREF: .debug_ranges:00018864o
		call	__imp____stack_chk_fail
_required_field_get_packed_size_isra_11	endp

; ---------------------------------------------------------------------------
unk_FBE		db  66h	; f		; DATA XREF: .debug_info:00007DDBo
					; .debug_info:00008109o
		db  90h	; ê
; ---------------------------------------------------------------------------

		public _protobuf_c_message_pack
_protobuf_c_message_pack:		; CODE XREF: _required_field_pack_isra_12:loc_1879p
					; DATA XREF: .debug_info:00008444o ...
		push	ebp

; =============== S U B	R O U T	I N E =======================================


sub_FC1		proc near		; DATA XREF: .debug_loc:0000F59Bo

var_68		= dword	ptr -68h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_1C		= dword	ptr -1Ch
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	eax, [esp+68h+arg_4]
		mov	[esp+68h+var_50], eax ;	int
		mov	edx, [esp+68h+arg_8]
		mov	[esp+68h+var_3C], edx ;	int
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+68h+var_1C], ecx
		xor	ecx, ecx

loc_FE3:				; DATA XREF: .debug_loc:off_F66Bo
		mov	edx, [eax]
		cmp	dword ptr [edx], 28AAEEF9h

loc_FEB:				; DATA XREF: .debug_info:000065FDo
		jnz	sub_1764

loc_FF1:				; DATA XREF: .debug_loc:off_F631o
		mov	eax, [edx+18h]
		xor	ebp, ebp
		test	eax, eax
		jz	loc_107E
		mov	[esp+68h+var_4C], 0 ; int
		xor	ebp, ebp
		mov	[esp+68h+var_48], 0 ; int
		mov	[esp+68h+var_54], ebp ;	int

loc_1014:				; CODE XREF: sub_105A+1Ej
					; DATA XREF: .debug_loc:0000F635o ...
		mov	ebx, [esp+68h+var_4C]
		add	ebx, [edx+1Ch]

loc_101B:				; DATA XREF: .debug_loc:off_F6E9o
		mov	ecx, [esp+68h+var_50]
		add	ecx, [ebx+14h]

loc_1022:				; DATA XREF: .debug_loc:off_F78Fo
		mov	esi, [ebx+10h]

loc_1025:				; DATA XREF: .debug_loc:off_F7E4o
		mov	eax, [ebx+8]
		test	eax, eax
		jz	sub_11B4
		add	esi, [esp+68h+var_50]

loc_1034:				; DATA XREF: .debug_loc:0000F7E8o
		dec	eax
		jz	sub_11DC
		mov	eax, [esp+68h+var_3C]
		add	eax, [esp+68h+var_54]
		mov	[esp+68h+var_44], eax ;	int
		mov	esi, [esi]
		mov	[esp+68h+var_40], esi ;	int

loc_104D:				; DATA XREF: .debug_info:000084CEo
					; .debug_loc:off_F890o	...
		mov	ebp, [ecx]

loc_104F:				; DATA XREF: .debug_loc:off_FB15o
		mov	edi, [ebx+20h]
		test	edi, edi
		jz	sub_1214
sub_FC1		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_105A	proc near		; DATA XREF: .debug_ranges:off_18B30o

arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_28		= dword	ptr  2Ch
arg_48		= dword	ptr  4Ch

		test	esi, esi
		jnz	sub_10F4

loc_1062:				; CODE XREF: sub_125C:loc_1262j
					; DATA XREF: .debug_loc:0000F894o ...
		xor	esi, esi

loc_1064:				; CODE XREF: sub_125C:loc_129Ej
					; sub_1370:loc_1427j
					; DATA XREF: ...
		add	[esp+arg_10], esi

loc_1068:				; CODE XREF: sub_11CA+Aj sub_1205+Aj
					; DATA XREF: ...
		inc	[esp+arg_1C]
		add	[esp+arg_18], 30h ; '0'
		mov	eax, [esp+arg_1C]
		cmp	[edx+18h], eax
		ja	short loc_1014
		mov	ebp, [esp+arg_10]

loc_107E:				; CODE XREF: sub_FC1+37j
		mov	edx, [esp+arg_14]
		mov	eax, [edx+4]
		test	eax, eax
		jz	short loc_10D9
		mov	[esp+arg_10], 0
		lea	esi, [esi+0]

loc_1094:				; CODE XREF: sub_105A+7Dj
		mov	esi, [esp+arg_28]
		add	esi, ebp
		mov	ebx, [esp+arg_10]
		shl	ebx, 4
		mov	ecx, [esp+arg_14]
		add	ebx, [ecx+8]

loc_10A8:				; DATA XREF: .debug_info:00008A35o
					; .debug_info:00008A57o ...
		mov	edx, esi
		mov	eax, [ebx]
		call	_tag_pack

loc_10B1:				; DATA XREF: .debug_info:00008A69o
					; .debug_loc:off_107CAo
		mov	edx, [ebx+4]
		or	[esi], dl
		lea	edx, [esi+eax]
		mov	esi, [ebx+0Ch]

loc_10BC:				; DATA XREF: .debug_loc:00010796o
		mov	ecx, [ebx+8]
		mov	edi, edx
		rep movsb
		add	ebp, eax

loc_10C5:				; DATA XREF: .debug_info:00008A39o
					; .debug_info:00008A5Bo
		add	ebp, [ebx+8]
		inc	[esp+arg_10]
		mov	edx, [esp+arg_10]
		mov	eax, [esp+arg_14]

loc_10D4:				; DATA XREF: .debug_loc:000107CEo
		cmp	[eax+4], edx
		ja	short loc_1094

loc_10D9:				; CODE XREF: sub_105A+2Dj
					; DATA XREF: .debug_loc:000107BBo
		mov	eax, ebp
		mov	ecx, [esp+arg_48]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	___stack_chk_fail
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_105A	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
unk_10F3	db  90h	; ê		; DATA XREF: .debug_loc:0000F6F4o
					; .debug_loc:0000F910o	...

; =============== S U B	R O U T	I N E =======================================


sub_10F4	proc near		; CODE XREF: sub_105A+2j
					; DATA XREF: .debug_ranges:00018AB8o ...

arg_20		= dword	ptr  24h

		mov	eax, [ebx+4]
		mov	edx, [esp+arg_20]

loc_10FB:				; DATA XREF: .debug_loc:0000F914o
		call	_tag_pack
sub_10F4	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1100	proc near		; DATA XREF: .debug_info:00008885o

arg_38		= dword	ptr  3Ch

		mov	[esp+arg_38], eax
sub_1100	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1104	proc near		; DATA XREF: .debug_loc:off_FB94o

arg_20		= dword	ptr  24h
arg_24		= dword	ptr  28h
arg_34		= dword	ptr  38h

		mov	edx, [esp+arg_20]
		or	byte ptr [edx],	2

loc_110B:				; DATA XREF: .debug_loc:off_FE7Bo
		mov	eax, [ebx+0Ch]

loc_110E:				; DATA XREF: .debug_info:00008562o
					; .debug_loc:0000FB98o	...
		cmp	eax, 2
		jz	short sub_1154
		cmp	eax, 7
		jz	short sub_1154
		cmp	eax, 0Ah
		jz	short sub_1154
		cmp	eax, 5
		jz	sub_12B0
		cmp	eax, 9
		jz	sub_12B0
		cmp	eax, 0Bh
		jz	sub_12B0
		mov	edx, 1

loc_113D:				; DATA XREF: .debug_ranges:00018B5Co
		imul	edx, [esp+arg_24]

loc_1142:				; DATA XREF: .debug_info:00008580o
					; .debug_loc:off_FCC9o	...
		cmp	edx, 7Fh ; ''
		ja	short loc_1163
		nop

loc_1148:				; CODE XREF: sub_115E+3j
		mov	[esp+arg_34], 1
		jmp	short sub_1177
sub_1104	endp

; ---------------------------------------------------------------------------
unk_1152	db  66h	; f		; DATA XREF: .debug_loc:0000FCCDo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_1154	proc near		; CODE XREF: sub_1104+Dj sub_1104+12j	...
		mov	edx, 4
sub_1154	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1159	proc near		; CODE XREF: sub_12B0:loc_12B5j
					; DATA XREF: .debug_ranges:00018B64o

arg_24		= dword	ptr  28h

		imul	edx, [esp+arg_24]
sub_1159	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_115E	proc near		; DATA XREF: .debug_loc:0000FCD4o
					; .debug_ranges:00018B80o

arg_34		= dword	ptr  38h

		cmp	edx, 7Fh ; ''
		jbe	short loc_1148

loc_1163:				; CODE XREF: sub_1104+41j
		cmp	edx, 3FFFh
		ja	sub_12C4

loc_116F:				; DATA XREF: .debug_info:00006771o
		mov	[esp+arg_34], 2
sub_115E	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1177	proc near		; CODE XREF: sub_1104+4Cj sub_12C4+14j ...

arg_34		= dword	ptr  38h

		mov	edx, [esp+arg_34]
sub_1177	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_117B	proc near		; DATA XREF: .debug_loc:0000FCD8o

arg_20		= dword	ptr  24h
arg_2C		= dword	ptr  30h
arg_30		= dword	ptr  34h
arg_38		= dword	ptr  3Ch

		add	edx, [esp+arg_38]
		mov	[esp+arg_2C], edx
		mov	ecx, [esp+arg_20]
		add	ecx, edx
		mov	[esp+arg_30], ecx
sub_117B	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_118D(void *, unsigned	int)
sub_118D	proc near		; DATA XREF: .debug_loc:off_FD73o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		cmp	eax, 0Dh	; switch 14 cases
		jbe	sub_12BC
		mov	[esp+arg_4], 3F0h ; jumptable 000012BC default case

loc_119E:				; DATA XREF: .debug_info:000067A0o
					; .debug_info:000079DCo ...
		mov	[esp+arg_0], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	dword ptr [esp+0], offset off_4E54 ; void *

loc_11AD:				; DATA XREF: .debug_loc:0000FD77o
					; .debug_loc:0000FEB6o
		call	__assert
sub_118D	endp

; ---------------------------------------------------------------------------
unk_11B2	db  66h	; f		; DATA XREF: .debug_info:0000889Bo
					; .debug_loc:0000FA98o	...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_11B4	proc near		; CODE XREF: sub_FC1+69j
					; DATA XREF: .debug_ranges:00018ADCo ...

arg_28		= dword	ptr  2Ch

		lea	edx, [ebx+0Ch]
		mov	eax, [ebx+4]
		mov	ebx, [esp+arg_28]
sub_11B4	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_11BE	proc near		; DATA XREF: .debug_loc:0000F6F8o

arg_10		= dword	ptr  14h

		add	ebx, [esp+arg_10]

loc_11C2:				; DATA XREF: .debug_info:000067C9o
		mov	[esp+0], ebx
		call	_required_field_pack_isra_12
sub_11BE	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_11CA	proc near		; DATA XREF: .debug_info:00008A1Fo

arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		add	[esp+arg_10], eax
		mov	eax, [esp+arg_14]
		mov	edx, [eax]
		jmp	loc_1068
sub_11CA	endp

; ---------------------------------------------------------------------------
unk_11D9	db  8Dh	; ç		; DATA XREF: .debug_loc:off_106E8o
					; .debug_loc:off_10718o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


sub_11DC	proc near		; CODE XREF: sub_FC1+74j
					; DATA XREF: .debug_info:000089C2o ...
		mov	eax, [ebx+0Ch]
		cmp	eax, 10h
		jz	short loc_1238
		cmp	eax, 0Eh

loc_11E7:				; DATA XREF: .debug_info:000067EDo
					; .debug_info:00008DE8o ...
		jz	short loc_1238
		mov	ebp, [esi]
		test	ebp, ebp
		jz	short loc_1244
sub_11DC	endp ; sp-analysis failed

; START	OF FUNCTION CHUNK FOR sub_1214

loc_11EF:				; CODE XREF: sub_1214+2Dj
		lea	edx, [ebx+0Ch]
; END OF FUNCTION CHUNK	FOR sub_1214

; =============== S U B	R O U T	I N E =======================================


sub_11F2	proc near		; DATA XREF: .eh_frame:0001C46Co
		mov	eax, [ebx+4]
sub_11F2	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_11F5	proc near		; DATA XREF: .debug_ranges:00018F74o

arg_28		= dword	ptr  2Ch

		mov	ebx, [esp+arg_28]
sub_11F5	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_11F9	proc near		; DATA XREF: .debug_loc:00010758o

arg_10		= dword	ptr  14h

		add	ebx, [esp+arg_10]

loc_11FD:				; DATA XREF: .debug_ranges:00018F78o
		mov	[esp+0], ebx

loc_1200:				; DATA XREF: .debug_loc:0001071Co
		call	_required_field_pack_isra_12
sub_11F9	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1205	proc near		; DATA XREF: .debug_info:00008A0Do

arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		mov	ecx, [esp+arg_14]

loc_1209:				; DATA XREF: .debug_info:000085E4o
					; .debug_info:000096C4o
		mov	edx, [ecx]

loc_120B:				; CODE XREF: sub_1214+32j
					; DATA XREF: .debug_ranges:00018F7Co
		add	[esp+arg_10], eax
		jmp	loc_1068
sub_1205	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_1214(void *, unsigned	int, int, int, int, int, int, int, int,	int, int, int)
sub_1214	proc near		; CODE XREF: sub_FC1+93j
					; DATA XREF: .debug_info:00008930o ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_28		= dword	ptr  2Ch
arg_2C		= dword	ptr  30h

; FUNCTION CHUNK AT 000011EF SIZE 00000003 BYTES
; FUNCTION CHUNK AT 000012A4 SIZE 0000000A BYTES

		cmp	dword ptr [ebx+0Ch], 10h ; switch 17 cases
		jbe	short loc_1248

loc_121A:				; DATA XREF: .debug_info:0000894Do
					; .debug_info:00008959o
		mov	[esp+arg_4], 36Bh ; jumptable 0000124B default case
		mov	[esp+arg_0], offset aLibProtobufC_c ; "lib/protobuf-c.c"

loc_122A:				; DATA XREF: .debug_info:00006831o
		mov	dword ptr [esp+0], offset off_4E54 ; void *

loc_1231:				; DATA XREF: .debug_loc:000106C0o
		call	__assert
; ---------------------------------------------------------------------------
unk_1236	db  66h	; f		; DATA XREF: .debug_info:00008967o
					; .debug_loc:00010689o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1238:				; CODE XREF: sub_11DC+6j
					; sub_11DC:loc_11E7j
					; DATA XREF: ...
		mov	eax, [ecx]

loc_123A:				; DATA XREF: .debug_loc:off_1077Fo
		test	eax, eax
		jz	short loc_1244
		cmp	eax, [ebx+1Ch]
		jnz	short loc_11EF

loc_1243:				; DATA XREF: .debug_loc:00010783o
		nop

loc_1244:				; CODE XREF: sub_11DC+11j sub_1214+28j
					; DATA XREF: ...
		xor	eax, eax
		jmp	short loc_120B
; ---------------------------------------------------------------------------

loc_1248:				; CODE XREF: sub_1214+4j
					; DATA XREF: .debug_ranges:00018AE8o ...
		mov	eax, [ebx+0Ch]
		jmp	ds:off_4EC8[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_1254:				; CODE XREF: sub_1214+37j
					; DATA XREF: .rdata:off_4EC8o
		mov	[esp+arg_2C], 8	; jumptable 0000124B cases 3-5,8,9,11,15
sub_1214	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_125C(void *, size_t, int, int, int, int, int,	int, int, int, int, int, void *, int, int, int,	int, int, int)
sub_125C	proc near		; CODE XREF: sub_1214+98j
					; DATA XREF: .debug_loc:off_FB54o ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= dword	ptr  24h
arg_24		= dword	ptr  28h
arg_28		= dword	ptr  2Ch
arg_2C		= dword	ptr  30h
arg_30		= dword	ptr  34h
arg_34		= dword	ptr  38h
arg_38		= dword	ptr  3Ch
arg_48		= dword	ptr  4Ch

		mov	eax, [esp+arg_24]
		test	eax, eax

loc_1262:				; DATA XREF: .debug_info:00006874o
		jz	loc_1062
		xor	edi, edi
		xor	esi, esi
		lea	eax, [ebx+0Ch]

loc_126F:				; DATA XREF: .debug_info:00008D68o
		mov	[esp+arg_30], eax

loc_1273:				; DATA XREF: .debug_loc:0000FB58o
		nop

loc_1274:				; CODE XREF: sub_125C+3Aj
		mov	eax, [ebx+4]
		mov	edx, [esp+arg_20]
		add	edx, esi
		mov	[esp+0], edx
		mov	ecx, ebp
		mov	edx, [esp+arg_30]

loc_1286:				; DATA XREF: .debug_info:00009778o
					; .debug_info:00009C74o
		call	_required_field_pack_isra_12

loc_128B:				; DATA XREF: .debug_info:00008990o
		add	esi, eax
		add	ebp, [esp+arg_2C]
		inc	edi
		cmp	edi, [esp+arg_24]
		jnz	short loc_1274
		mov	ecx, [esp+arg_14]
		mov	edx, [ecx]

loc_129E:				; DATA XREF: .debug_info:00008889o
					; .debug_info:00008A6Do ...
		jmp	loc_1064
sub_125C	endp

; ---------------------------------------------------------------------------
		align 4
; START	OF FUNCTION CHUNK FOR sub_1214

loc_12A4:				; CODE XREF: sub_1214+37j
					; DATA XREF: .rdata:off_4EC8o ...
		mov	[esp+arg_2C], 4	; jumptable 0000124B cases 0-2,6,7,10,12-14,16
		jmp	short sub_125C
; END OF FUNCTION CHUNK	FOR sub_1214
; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_12B0	proc near		; CODE XREF: sub_1104+1Cj sub_1104+25j ...

arg_24		= dword	ptr  28h

		mov	edx, 8

loc_12B5:				; DATA XREF: .debug_info:000076D8o
		jmp	sub_1159
sub_12B0	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_12BC	proc near		; CODE XREF: sub_118D+3j
					; DATA XREF: .debug_ranges:00018B6Co

arg_24		= dword	ptr  28h
arg_30		= dword	ptr  34h

; FUNCTION CHUNK AT 000012DD SIZE 00000002 BYTES
; FUNCTION CHUNK AT 000014BA SIZE 00000002 BYTES
; FUNCTION CHUNK AT 00001546 SIZE 00000002 BYTES
; FUNCTION CHUNK AT 00001615 SIZE 0000000B BYTES

		jmp	ds:off_4F0C[eax*4] ; switch jump
sub_12BC	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
unk_12C3	db  90h	; ê		; DATA XREF: .debug_loc:off_FF4Co

; =============== S U B	R O U T	I N E =======================================


sub_12C4	proc near		; CODE XREF: sub_115E+Bj
					; DATA XREF: .debug_info:0000859Do ...

arg_20		= dword	ptr  24h
arg_2C		= dword	ptr  30h
arg_30		= dword	ptr  34h
arg_34		= dword	ptr  38h
arg_38		= dword	ptr  3Ch

		cmp	edx, 1FFFFFh
		ja	sub_1701

loc_12D0:				; DATA XREF: .debug_info:0000A590o
					; .debug_info:0000A5A6o ...
		mov	[esp+arg_34], 3
		jmp	sub_1177
sub_12C4	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_12BC

loc_12DD:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co ...
		mov	edx, ebp	; jumptable 000012BC cases 6,13
; END OF FUNCTION CHUNK	FOR sub_12BC

; =============== S U B	R O U T	I N E =======================================


sub_12DF	proc near		; DATA XREF: .debug_ranges:00018B8Co
					; .debug_ranges:00018BACo ...

arg_24		= dword	ptr  28h
arg_30		= dword	ptr  34h

		mov	eax, [esp+arg_24]
		lea	esi, [ebp+eax*4+0]

loc_12E7:				; DATA XREF: .debug_ranges:00018BC4o
		mov	edi, [esp+arg_30]
		jmp	short loc_134C
; ---------------------------------------------------------------------------
unk_12ED	db  8Dh	; ç		; DATA XREF: .debug_loc:off_FFB0o
					; .debug_loc:off_FFEFo	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_12F0:				; CODE XREF: sub_12DF+72j
					; DATA XREF: .debug_info:00008626o ...
		mov	ecx, eax
		or	cl, 80h

loc_12F5:				; DATA XREF: .debug_ranges:off_18C60o
		mov	[edi], cl

loc_12F7:				; DATA XREF: .debug_loc:00010032o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	sub_1640

loc_1303:				; DATA XREF: .debug_ranges:00018C64o
		mov	ecx, eax
		or	cl, 80h

loc_1308:				; DATA XREF: .debug_ranges:00018C68o
		mov	[edi+1], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''

loc_1311:				; DATA XREF: .debug_info:00007550o
		jbe	sub_16A0

loc_1317:				; DATA XREF: .debug_ranges:00018C6Co
		mov	ecx, eax
		or	cl, 80h

loc_131C:				; DATA XREF: .debug_ranges:00018C70o
		mov	[edi+2], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	sub_16C8

loc_132B:				; DATA XREF: .debug_ranges:00018C74o
		mov	ecx, eax
		or	cl, 80h

loc_1330:				; DATA XREF: .debug_ranges:00018C78o
		mov	[edi+3], cl
		shr	eax, 7
		mov	ecx, 5
		mov	ebx, 4

loc_1340:				; CODE XREF: sub_12DF+7Bj sub_1640+Aj	...
		mov	[edi+ebx], al

loc_1343:				; DATA XREF: .debug_ranges:00018C34o
					; .debug_ranges:00018C7Co
		add	edi, ecx

loc_1345:				; DATA XREF: .debug_loc:0000FFB4o
		add	edx, 4
		cmp	edx, esi
		jz	short loc_136C

loc_134C:				; CODE XREF: sub_12DF+Cj
					; DATA XREF: .debug_loc:0000FFF3o
		mov	eax, [edx]

loc_134E:				; DATA XREF: .debug_ranges:00018C38o
					; .debug_ranges:00018C80o
		cmp	eax, 7Fh ; ''
		ja	short loc_12F0

loc_1353:				; DATA XREF: .debug_info:00007284o
		mov	ecx, 1
		xor	ebx, ebx
		jmp	short loc_1340
; ---------------------------------------------------------------------------

loc_135C:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co ...
		mov	ecx, [esp+arg_24] ; jumptable 000012BC cases 5,9,11
		shl	ecx, 3

loc_1363:				; DATA XREF: .debug_info:0000865Do
		mov	edi, [esp+arg_30]
		mov	esi, ebp
		rep movsb

loc_136B:				; DATA XREF: .debug_loc:000100BCo
					; .debug_loc:000100D1o	...
		nop

loc_136C:				; CODE XREF: sub_12DF+6Bj sub_1370+D8j ...
		sub	edi, [esp+arg_30]
sub_12DF	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1370	proc near		; DATA XREF: .debug_info:00008689o
					; .debug_loc:off_FCFDo	...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_14		= dword	ptr  18h
arg_20		= dword	ptr  24h
arg_24		= dword	ptr  28h
arg_2C		= dword	ptr  30h
arg_30		= dword	ptr  34h
arg_34		= dword	ptr  38h
arg_38		= dword	ptr  3Ch

		cmp	edi, 7Fh ; ''
		jbe	loc_14B0

loc_1379:				; CODE XREF: sub_1370+139j
		cmp	edi, 3FFFh
		ja	sub_1678
		mov	eax, 2

loc_138A:				; CODE XREF: sub_1370+145j
					; sub_1678:loc_1689j ...
		cmp	[esp+arg_34], eax
		jz	short loc_13BD
		mov	edx, [esp+arg_34]
		inc	edx
		cmp	edx, eax
		jnz	sub_1748
		inc	[esp+arg_2C]
		mov	[esp+arg_4], edi ; size_t
		mov	edx, [esp+arg_30]
		mov	[esp+arg_0], edx ; void	*
		mov	eax, [esp+arg_20]
		add	eax, [esp+arg_2C]
		mov	[esp+0], eax	; void *
		call	_memmove

loc_13BD:				; CODE XREF: sub_1370+1Ej
					; DATA XREF: .debug_info:000088C5o
		mov	edx, [esp+arg_20]
		add	edx, [esp+arg_38]

loc_13C5:				; DATA XREF: .debug_info:000086C1o
					; .debug_loc:off_10112o ...
		mov	eax, edi
		cmp	edi, 7Fh ; ''
		jbe	sub_1638

loc_13D0:				; DATA XREF: .debug_loc:0000FD01o
					; .debug_loc:0000FD08o	...
		or	al, 80h

loc_13D2:				; DATA XREF: .debug_info:000098F4o
					; .debug_loc:0000FD0Co
		mov	[edx], al

loc_13D4:				; DATA XREF: .debug_loc:00010216o
		mov	eax, edi
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	sub_166C

loc_13E2:				; DATA XREF: .debug_ranges:00018D1Co
		or	al, 80h

loc_13E4:				; DATA XREF: .debug_ranges:00018D20o
		mov	[edx+1], al
		mov	eax, edi
		shr	eax, 0Eh
		cmp	eax, 7Fh ; ''
		jbe	sub_16BC

loc_13F5:				; DATA XREF: .debug_ranges:00018D24o
		or	al, 80h

loc_13F7:				; DATA XREF: .debug_ranges:00018D28o
		mov	[edx+2], al
		mov	eax, edi

loc_13FC:				; DATA XREF: .debug_info:0000B484o
		shr	eax, 15h
		cmp	eax, 7Fh ; ''
		jbe	sub_16F7

loc_1408:				; DATA XREF: .debug_ranges:00018D2Co
		or	al, 80h

loc_140A:				; DATA XREF: .debug_ranges:00018D30o
		mov	[edx+3], al
		mov	eax, edi
		shr	eax, 1Ch
		mov	ecx, 4
		nop

loc_1418:				; CODE XREF: sub_1638+2j sub_166C+5j ...
		mov	[edx+ecx], al

loc_141B:				; DATA XREF: .debug_ranges:00018CECo
					; .debug_ranges:00018D34o
		mov	esi, [esp+arg_2C]
		add	esi, edi
		mov	ecx, [esp+arg_14]
		mov	edx, [ecx]

loc_1427:				; DATA XREF: .debug_loc:00010116o
		jmp	loc_1064
; ---------------------------------------------------------------------------

loc_142C:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co
		mov	edi, [esp+arg_30] ; jumptable 000012BC case 4
		xor	ebx, ebx
		mov	esi, [esp+arg_24]
		jmp	short loc_144E
; ---------------------------------------------------------------------------

loc_1438:				; CODE XREF: sub_1370+E8j
					; DATA XREF: .debug_info:000085C6o ...
		add	eax, eax

loc_143A:				; DATA XREF: .debug_loc:0000FF8Co
		adc	edx, edx

loc_143C:				; CODE XREF: sub_1370+FBj
					; DATA XREF: .debug_ranges:00018BF4o
		mov	ecx, edi
		call	_uint64_pack

loc_1443:				; DATA XREF: .debug_info:00008602o
					; .debug_ranges:00018BDCo
		add	edi, eax

loc_1445:				; DATA XREF: .debug_loc:0000FF6Eo
		inc	ebx
		cmp	ebx, esi
		jz	loc_136C

loc_144E:				; CODE XREF: sub_1370+C6j
		mov	eax, [ebp+ebx*8+0]
		mov	edx, [ebp+ebx*8+4]

loc_1456:				; DATA XREF: .debug_ranges:00018BE0o
					; .debug_ranges:00018BF8o
		test	edx, edx
		jns	short loc_1438
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	short loc_143C
; ---------------------------------------------------------------------------

loc_146D:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co ...
		mov	edi, [esp+arg_30] ; jumptable 000012BC cases 3,8
		xor	ebx, ebx
		mov	esi, [esp+arg_24]
		nop

loc_1478:				; CODE XREF: sub_1370+11Cj
					; DATA XREF: .debug_info:000086F3o
		mov	eax, [ebp+ebx*8+0]
		mov	edx, [ebp+ebx*8+4]
		mov	ecx, edi
		call	_uint64_pack

loc_1487:				; DATA XREF: .debug_info:00008705o
		add	edi, eax
		inc	ebx
		cmp	ebx, esi
		jnz	short loc_1478
		jmp	loc_136C
; ---------------------------------------------------------------------------

loc_1493:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co ...
		mov	ecx, [esp+arg_24] ; jumptable 000012BC cases 2,7,10
		shl	ecx, 2

loc_149A:				; DATA XREF: .debug_info:0000871Eo
		mov	edi, [esp+arg_30]
		mov	esi, ebp
		rep movsb
		sub	edi, [esp+arg_30]

loc_14A6:				; DATA XREF: .debug_ranges:00018CB0o
		cmp	edi, 7Fh ; ''
		ja	loc_1379

loc_14AF:				; DATA XREF: .debug_loc:000102A2o
					; .debug_loc:000102B7o	...
		nop

loc_14B0:				; CODE XREF: sub_1370+3j
		mov	eax, 1
		jmp	loc_138A
sub_1370	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_12BC

loc_14BA:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co
		mov	edx, ebp	; jumptable 000012BC case 1
; END OF FUNCTION CHUNK	FOR sub_12BC

; =============== S U B	R O U T	I N E =======================================


sub_14BC	proc near		; DATA XREF: .debug_ranges:00018CB4o
					; .debug_ranges:off_18D60o

arg_24		= dword	ptr  28h
arg_30		= dword	ptr  34h

		mov	ecx, [esp+arg_24]
		lea	esi, [ebp+ecx*4+0]

loc_14C4:				; DATA XREF: .debug_info:00008758o
					; .debug_info:0000877Ao ...
		mov	edi, [esp+arg_30]
		jmp	short loc_152C
; ---------------------------------------------------------------------------
unk_14CA	db  66h	; f		; DATA XREF: .debug_loc:off_104A2o
					; .debug_loc:off_104E1o ...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_14CC:				; CODE XREF: sub_14BC+7Fj
					; DATA XREF: .debug_info:000087E3o ...
		mov	ecx, eax
		or	cl, 80h

loc_14D1:				; DATA XREF: .debug_ranges:off_18ED0o
		mov	[edi], cl

loc_14D3:				; DATA XREF: .debug_loc:000105D5o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	sub_1650

loc_14DF:				; DATA XREF: .debug_ranges:00018ED4o
		mov	ecx, eax
		or	cl, 80h

loc_14E4:				; DATA XREF: .debug_ranges:00018ED8o
		mov	[edi+1], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''

loc_14ED:				; DATA XREF: .debug_info:00008EC8o
					; .debug_info:00009E20o
		jbe	sub_1690

loc_14F3:				; DATA XREF: .debug_ranges:00018EDCo
		mov	ecx, eax
		or	cl, 80h

loc_14F8:				; DATA XREF: .debug_ranges:00018EE0o
		mov	[edi+2], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	sub_16D8

loc_1507:				; DATA XREF: .debug_ranges:00018EE4o
		mov	ecx, eax

loc_1509:				; DATA XREF: .debug_info:00009668o
		or	cl, 80h

loc_150C:				; DATA XREF: .debug_ranges:00018EE8o
		mov	[edi+3], cl
		shr	eax, 7
		mov	ecx, 5
		mov	ebx, 4

loc_151C:				; CODE XREF: sub_14BC+88j sub_1650+Aj	...
		mov	[edi+ebx], al

loc_151F:				; DATA XREF: .debug_ranges:00018E74o
					; .debug_ranges:00018EA4o ...
		add	edi, ecx

loc_1521:				; DATA XREF: .debug_loc:000104A6o
					; .debug_loc:00010557o
		add	edx, 4

loc_1524:				; DATA XREF: .debug_loc:000104E5o
		cmp	edx, esi
		jz	loc_136C

loc_152C:				; CODE XREF: sub_14BC+Cj
					; DATA XREF: .debug_loc:00010596o
		mov	eax, [edx]

loc_152E:				; DATA XREF: .debug_info:0000883Bo
					; .debug_ranges:00018E78o ...
		test	eax, eax
		js	sub_1660
		shl	eax, 1

loc_1538:				; CODE XREF: sub_1660+6j
					; DATA XREF: .debug_ranges:00018EA8o ...
		cmp	eax, 7Fh ; ''
		ja	short loc_14CC
		mov	ecx, 1
		xor	ebx, ebx
		jmp	short loc_151C
sub_14BC	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_12BC

loc_1546:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co
		mov	eax, ebp	; jumptable 000012BC case 0
; END OF FUNCTION CHUNK	FOR sub_12BC

; =============== S U B	R O U T	I N E =======================================


sub_1548	proc near		; DATA XREF: .debug_ranges:00018E4Co
					; .debug_ranges:00018E7Co ...

arg_24		= dword	ptr  28h

		mov	edx, [esp+arg_24]
		lea	esi, [ebp+edx*4+0]
sub_1548	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_1550	proc near		; DATA XREF: .debug_ranges:00018B90o

arg_30		= dword	ptr  34h

		mov	edi, [esp+arg_30]
		jmp	short loc_15AF
sub_1550	endp

; ---------------------------------------------------------------------------
unk_1556	db  66h	; f		; DATA XREF: .debug_loc:off_102DAo
					; .debug_loc:off_10319o ...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1558:				; CODE XREF: sub_15A4+Fj
					; DATA XREF: .debug_ranges:00018B94o ...
		mov	ecx, edx
		or	ecx, 0FFFFFF80h
		mov	[edi], cl
		mov	ecx, edx
		sar	ecx, 7
		or	ecx, 0FFFFFF80h
		mov	[edi+1], cl
		mov	ecx, edx
		sar	ecx, 0Eh
		or	ecx, 0FFFFFF80h
		mov	[edi+2], cl
		mov	ecx, edx
		sar	ecx, 15h
		or	ecx, 0FFFFFF80h
		mov	[edi+3], cl
		sar	edx, 1Ch

loc_1583:				; DATA XREF: .debug_loc:0001031Do
					; .debug_loc:00010324o	...
		or	edx, 0FFFFFF80h
		mov	[edi+4], dl
; ---------------------------------------------------------------------------
		db 0C6h, 47h
; ---------------------------------------------------------------------------
		or	bh, bh		; jumptable 00000717 case 2
		mov	byte ptr [edi+7], 0FFh

loc_1591:				; DATA XREF: .debug_info:00009524o
		mov	byte ptr [edi+6], 0FFh
		mov	byte ptr [edi+5], 0FFh
		mov	byte ptr [edi+9], 1
		mov	ecx, 0Ah

; =============== S U B	R O U T	I N E =======================================


sub_15A2	proc near		; CODE XREF: sub_15B5+5Ej
					; DATA XREF: .debug_loc:00010382o ...
		add	edi, ecx
sub_15A2	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_15A4	proc near		; DATA XREF: .debug_loc:000102DEo
		add	eax, 4

loc_15A7:				; DATA XREF: .debug_loc:00010328o
		cmp	eax, esi
		jz	loc_136C

loc_15AF:				; CODE XREF: sub_1550+4j
		mov	edx, [eax]

loc_15B1:				; DATA XREF: .debug_ranges:00018DA0o
		test	edx, edx
		js	short loc_1558
sub_15A4	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_15B5	proc near		; DATA XREF: .debug_info:000087A1o
					; .debug_loc:off_103B0o ...

; FUNCTION CHUNK AT 00001734 SIZE 0000000F BYTES

		cmp	edx, 7Fh ; ''

loc_15B8:				; DATA XREF: .debug_info:00009754o
		jbe	sub_16B0
		mov	ecx, edx
		or	cl, 80h
		mov	[edi], cl

loc_15C5:				; DATA XREF: .debug_loc:0001041Co
		shr	edx, 7

loc_15C8:				; DATA XREF: .debug_info:000095A0o
		cmp	edx, 7Fh ; ''
		jbe	sub_16E8

loc_15D1:				; DATA XREF: .debug_ranges:00018E0Co
		mov	ecx, edx
		or	cl, 80h

loc_15D6:				; DATA XREF: .debug_ranges:00018E10o
		mov	[edi+1], cl
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	sub_1725

loc_15E5:				; DATA XREF: .debug_ranges:00018E14o
		mov	ecx, edx
		or	cl, 80h

loc_15EA:				; DATA XREF: .debug_ranges:00018E18o
		mov	[edi+2], cl
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_1734

loc_15F9:				; DATA XREF: .debug_ranges:00018E1Co
		mov	ecx, edx
		or	cl, 80h

loc_15FE:				; DATA XREF: .debug_ranges:00018E20o
		mov	[edi+3], cl
		shr	edx, 7
		mov	ecx, 5
		mov	ebx, 4
		xchg	ax, ax

loc_1610:				; CODE XREF: sub_16B0+7j sub_16E8+Aj ...
		mov	[edi+ebx], dl
		jmp	short sub_15A2
sub_15B5	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_12BC

loc_1615:				; CODE XREF: sub_12BCj
					; DATA XREF: .rdata:off_4F0Co ...
		xor	edi, edi	; jumptable 000012BC case 12
		mov	eax, [esp+arg_24]

loc_161B:				; DATA XREF: .debug_info:off_6B98o
		mov	edx, [esp+arg_30]

loc_161F:				; DATA XREF: .debug_loc:off_1065Bo
		nop
; END OF FUNCTION CHUNK	FOR sub_12BC

; =============== S U B	R O U T	I N E =======================================


sub_1620	proc near		; CODE XREF: sub_1620+Dj
					; DATA XREF: .debug_info:00008853o ...

arg_30		= dword	ptr  34h

		mov	ecx, [ebp+edi*4+0]
		test	ecx, ecx
		setnz	byte ptr [edx+edi]

loc_162A:				; DATA XREF: .debug_info:0000886Do
		inc	edi

loc_162B:				; DATA XREF: .debug_loc:0001065Fo
					; .debug_info:0000B088o
		cmp	edi, eax
		jnz	short sub_1620
		add	edi, [esp+arg_30]
		jmp	loc_136C
sub_1620	endp


; =============== S U B	R O U T	I N E =======================================


sub_1638	proc near		; CODE XREF: sub_1370+5Aj
					; DATA XREF: .debug_info:00008857o ...
		xor	ecx, ecx
		jmp	loc_1418
sub_1638	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1640	proc near		; CODE XREF: sub_12DF+1Ej
					; DATA XREF: .debug_ranges:00018C10o ...
		mov	ecx, 2
		mov	ebx, 1
		jmp	loc_1340
sub_1640	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1650	proc near		; CODE XREF: sub_14BC+1Dj
					; DATA XREF: .debug_ranges:00018C14o ...
		mov	ecx, 2
		mov	ebx, 1
		jmp	loc_151C
sub_1650	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_1660	proc near		; CODE XREF: sub_14BC+74j
					; DATA XREF: .debug_ranges:00018EB4o ...
		neg	eax
		lea	eax, [eax+eax-1]
		jmp	loc_1538
sub_1660	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_166C	proc near		; CODE XREF: sub_1370+6Cj
					; DATA XREF: .debug_ranges:00018CF8o ...
		mov	ecx, 1
		jmp	loc_1418
sub_166C	endp

; ---------------------------------------------------------------------------
unk_1676	db  66h	; f		; DATA XREF: .debug_loc:off_100F4o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_1678	proc near		; CODE XREF: sub_1370+Fj
					; DATA XREF: .debug_info:000086A6o ...
		cmp	edi, 1FFFFFh
		ja	sub_1715
		mov	eax, 3

loc_1689:				; DATA XREF: .debug_info:0000B618o
		jmp	loc_138A
sub_1678	endp

; ---------------------------------------------------------------------------
unk_168E	db  66h	; f		; DATA XREF: .debug_loc:000100F8o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_1690	proc near		; CODE XREF: sub_14BC:loc_14EDj
					; DATA XREF: .debug_ranges:00018CBCo ...
		mov	ecx, 3
		mov	ebx, 2
		jmp	loc_151C
sub_1690	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_16A0	proc near		; CODE XREF: sub_12DF:loc_1311j
					; DATA XREF: .debug_ranges:00018C18o ...
		mov	ecx, 3
		mov	ebx, 2
		jmp	loc_1340
sub_16A0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================


sub_16B0	proc near		; CODE XREF: sub_15B5:loc_15B8j
					; DATA XREF: .debug_ranges:00018C1Co ...
		mov	ecx, 1
		xor	ebx, ebx
		jmp	loc_1610
sub_16B0	endp


; =============== S U B	R O U T	I N E =======================================


sub_16BC	proc near		; CODE XREF: sub_1370+7Fj
					; DATA XREF: .debug_ranges:00018D00o ...
		mov	ecx, 2
		jmp	loc_1418
sub_16BC	endp

; ---------------------------------------------------------------------------
unk_16C6	db  66h	; f		; DATA XREF: .debug_info:0000B838o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_16C8	proc near		; CODE XREF: sub_12DF+46j
					; DATA XREF: .debug_ranges:00018C20o ...
		mov	ecx, 4
		mov	ebx, 3
		jmp	loc_1340
sub_16C8	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_16D8	proc near		; CODE XREF: sub_14BC+45j
					; DATA XREF: .debug_ranges:00018C24o ...
		mov	ecx, 4
		mov	ebx, 3
		jmp	loc_151C
sub_16D8	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_16E8	proc near		; CODE XREF: sub_15B5+16j
					; DATA XREF: .debug_ranges:00018D78o ...
		mov	ecx, 2
		mov	ebx, 1
		jmp	loc_1610
sub_16E8	endp


; =============== S U B	R O U T	I N E =======================================


sub_16F7	proc near		; CODE XREF: sub_1370+92j
					; DATA XREF: .debug_ranges:00018D08o ...
		mov	ecx, 3
		jmp	loc_1418
sub_16F7	endp


; =============== S U B	R O U T	I N E =======================================


sub_1701	proc near		; CODE XREF: sub_12C4+6j
					; DATA XREF: .debug_ranges:00018B98o ...

arg_34		= dword	ptr  38h

		cmp	edx, 10000000h
		sbb	ecx, ecx
		add	ecx, 5
		mov	[esp+arg_34], ecx
		jmp	sub_1177
sub_1701	endp


; =============== S U B	R O U T	I N E =======================================


sub_1715	proc near		; CODE XREF: sub_1678+6j
					; DATA XREF: .debug_ranges:00018B9Co ...
		cmp	edi, 10000000h
		sbb	eax, eax
		add	eax, 5
		jmp	loc_138A
sub_1715	endp


; =============== S U B	R O U T	I N E =======================================


sub_1725	proc near		; CODE XREF: sub_15B5+2Aj
					; DATA XREF: .debug_ranges:00018CC4o ...
		mov	ecx, 3
		mov	ebx, 2
		jmp	loc_1610
sub_1725	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_15B5

loc_1734:				; CODE XREF: sub_15B5+3Ej
		mov	ecx, 4
		mov	ebx, 3
		jmp	loc_1610
; END OF FUNCTION CHUNK	FOR sub_15B5
; [00000005 BYTES: COLLAPSED FUNCTION ___stack_chk_fail]

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_1748(void *, unsigned	int)
sub_1748	proc near		; CODE XREF: sub_1370+27j
					; DATA XREF: .debug_info:00008A7Bo ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	[esp+arg_4], 3F6h ; unsigned int
		mov	[esp+arg_0], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	dword ptr [esp+0], offset aActual_length_ ; "actual_length_size	== length_size_min +"...
		call	__assert
sub_1748	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_1764(void *, unsigned	int)
sub_1764	proc near		; CODE XREF: sub_FC1:loc_FEBj
					; DATA XREF: .debug_info:000088EFo ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	[esp+arg_4], 41Ah ; unsigned int
		mov	[esp+arg_0], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	dword ptr [esp+0], offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		call	__assert
sub_1764	endp


; =============== S U B	R O U T	I N E =======================================


_required_field_pack_isra_12 proc near	; CODE XREF: sub_11BE+7p
					; sub_11F9:loc_1200p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_1781:				; DATA XREF: .debug_loc:000107E1o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch

loc_1787:				; DATA XREF: .debug_info:00007F60o
		mov	ebp, edx
		mov	esi, ecx
		mov	edi, [esp+3Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], edx
		xor	edx, edx
		mov	edx, edi

loc_179D:				; DATA XREF: .debug_loc:0001087Bo
		call	_tag_pack

loc_17A2:				; DATA XREF: .debug_info:00008F5Co
					; .debug_loc:off_10984o
		cmp	dword ptr [ebp+0], 10h ; switch	17 cases
		jbe	short loc_17C4
		mov	[esp+3Ch+var_34], 335h ; jumptable 000017C9 default case
		mov	[esp+3Ch+var_38], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+3Ch+var_3C], offset off_4E54 ; void *
		call	__assert
; ---------------------------------------------------------------------------

loc_17C4:				; CODE XREF: _required_field_pack_isra_12+26j
					; DATA XREF: .debug_info:00008F70o
		mov	ebx, eax

loc_17C6:				; DATA XREF: .debug_loc:00010988o
		mov	eax, [ebp+0]
		jmp	ds:off_4F44[eax*4] ; switch jump
; ---------------------------------------------------------------------------

loc_17D0:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		or	byte ptr [edi],	2 ; jumptable 000017C9 case 15
		lea	edx, [edi+ebx]

loc_17D6:				; DATA XREF: .debug_info:00008C04o
					; .debug_loc:off_109E4o ...
		mov	ebp, [esi]

loc_17D8:				; DATA XREF: .debug_info:00008C39o
					; .debug_loc:off_10A81o ...
		cmp	ebp, 7Fh ; ''
		jbe	loc_1B04

loc_17E1:				; DATA XREF: .debug_ranges:00019054o
		mov	eax, ebp
		or	al, 80h

loc_17E5:				; DATA XREF: .debug_ranges:00019058o
		mov	[edx], al

loc_17E7:				; DATA XREF: .debug_loc:00010BACo
		mov	ecx, ebp
		shr	ecx, 7

loc_17EC:				; DATA XREF: .debug_loc:00010B14o
		cmp	ecx, 7Fh ; ''
		jbe	loc_1AEC

loc_17F5:				; DATA XREF: .debug_ranges:0001905Co
		or	cl, 80h

loc_17F8:				; DATA XREF: .debug_ranges:00019060o
		mov	[edx+1], cl
		mov	ecx, ebp
		shr	ecx, 0Eh
		cmp	ecx, 7Fh ; ''
		jbe	loc_1BE0

loc_1809:				; DATA XREF: .debug_ranges:00019064o
		or	cl, 80h

loc_180C:				; DATA XREF: .debug_ranges:00019068o
		mov	[edx+2], cl
		mov	ecx, ebp

loc_1811:				; DATA XREF: .debug_info:00009DE0o
		shr	ecx, 15h
		cmp	ecx, 7Fh ; ''
		jbe	loc_1C14

loc_181D:				; DATA XREF: .debug_ranges:0001906Co
		or	cl, 80h

loc_1820:				; DATA XREF: .debug_ranges:00019070o
		mov	[edx+3], cl
		mov	ecx, ebp
		shr	ecx, 1Ch
		mov	eax, 5
		mov	edi, 4
		xchg	ax, ax

loc_1834:				; CODE XREF: _required_field_pack_isra_12+376j
					; _required_field_pack_isra_12+38Dj ...
		mov	[edx+edi], cl

loc_1837:				; DATA XREF: .debug_ranges:00019024o
					; .debug_ranges:00019074o
		add	edx, eax

loc_1839:				; DATA XREF: .debug_loc:000109E8o
					; .debug_loc:00010AC4o
		mov	esi, [esi+4]

loc_183C:				; DATA XREF: .debug_loc:0001099Bo
					; .debug_loc:00010A38o
		mov	edi, edx
		mov	ecx, ebp
		rep movsb
		add	ebx, ebp

loc_1844:				; CODE XREF: _required_field_pack_isra_12+17Bj
					; _required_field_pack_isra_12+1D6j ...
		add	eax, ebx

loc_1846:				; CODE XREF: _required_field_pack_isra_12:loc_19CFj
					; _required_field_pack_isra_12:loc_1A12j ...
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_1C78
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_1860:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o
		or	byte ptr [edi],	2 ; jumptable 000017C9 case 16
		add	edi, ebx
		mov	eax, [esi]

loc_1867:				; DATA XREF: .debug_info:00008C6Eo
					; .debug_loc:off_10C32o ...
		test	eax, eax
		jz	loc_1B81

loc_186F:				; DATA XREF: .debug_ranges:off_190E8o
		lea	ebp, [edi+1]
		mov	[esp+3Ch+var_38], ebp
		mov	[esp+3Ch+var_3C], eax

loc_1879:				; DATA XREF: .debug_loc:00010C96o
		call	_protobuf_c_message_pack

loc_187E:				; DATA XREF: .debug_info:00008D13o
		mov	esi, eax

loc_1880:				; DATA XREF: .debug_info:00008CA9o
					; .debug_loc:off_10CBCo ...
		cmp	eax, 7Fh ; ''
		jbe	loc_1AD0

loc_1889:				; DATA XREF: .debug_info:00006E99o
		cmp	eax, 3FFFh

loc_188E:				; DATA XREF: .debug_info:00006EA1o
		ja	loc_1BCF
		mov	eax, 2

loc_1899:				; CODE XREF: _required_field_pack_isra_12:loc_1BDBj
					; _required_field_pack_isra_12+4D5j
					; DATA XREF: ...
		mov	[esp+3Ch+var_34], esi ;	size_t
		mov	[esp+3Ch+var_38], ebp ;	void *
		add	eax, edi
		mov	[esp+3Ch+var_3C], eax ;	void *
		call	_memmove

loc_18AB:				; DATA XREF: .debug_info:00008CE1o
					; .debug_info:00008D28o ...
		mov	eax, esi
		or	al, 80h

loc_18AF:				; DATA XREF: .debug_ranges:off_19190o
		mov	[edi], al

loc_18B1:				; DATA XREF: .debug_loc:00010E2Bo
		mov	eax, esi
		shr	eax, 7

loc_18B6:				; DATA XREF: .debug_loc:00010D9Eo
		cmp	eax, 7Fh ; ''
		jbe	loc_1BAC

loc_18BF:				; DATA XREF: .debug_ranges:00019194o
		or	al, 80h

loc_18C1:				; DATA XREF: .debug_ranges:00019198o
		mov	[edi+1], al
		mov	eax, esi
		shr	eax, 0Eh
		cmp	eax, 7Fh ; ''
		jbe	loc_1BFB

loc_18D2:				; DATA XREF: .debug_ranges:0001919Co
		or	al, 80h

loc_18D4:				; DATA XREF: .debug_ranges:000191A0o
		mov	[edi+2], al
		mov	eax, esi
		shr	eax, 15h
		cmp	eax, 7Fh ; ''
		jbe	loc_1C32

loc_18E5:				; DATA XREF: .debug_ranges:000191A4o
		or	al, 80h

loc_18E7:				; DATA XREF: .debug_ranges:000191A8o
		mov	[edi+3], al
		mov	eax, esi
		shr	eax, 1Ch
		mov	edx, 4

loc_18F4:				; CODE XREF: _required_field_pack_isra_12+352j
					; _required_field_pack_isra_12+431j ...
		mov	[edi+edx], al

loc_18F7:				; DATA XREF: .debug_ranges:0001916Co
					; .debug_ranges:000191ACo
		lea	eax, [esi+edx+1]
		jmp	loc_1844
; ---------------------------------------------------------------------------

loc_1900:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		add	edi, ebx	; jumptable 000017C9 case 0
		mov	edx, [esi]

loc_1904:				; DATA XREF: .debug_info:00008D46o
					; .debug_loc:off_10EA7o ...
		test	edx, edx
		jns	loc_1B14

loc_190C:				; DATA XREF: .debug_info:00008D6Co
					; .debug_loc:off_10F3Fo ...
		mov	eax, edx
		or	eax, 0FFFFFF80h
		mov	[edi], al
		mov	eax, edx
		sar	eax, 7
		or	eax, 0FFFFFF80h
		mov	[edi+1], al
		mov	eax, edx
		sar	eax, 0Eh
		or	eax, 0FFFFFF80h
		mov	[edi+2], al
		mov	eax, edx
		sar	eax, 15h

loc_192E:				; DATA XREF: .debug_info:00009E50o
		or	eax, 0FFFFFF80h
		mov	[edi+3], al
		sar	edx, 1Ch

loc_1937:				; DATA XREF: .debug_loc:00010EEAo
					; .debug_loc:00010F56o
		or	edx, 0FFFFFF80h
		mov	[edi+4], dl
		mov	byte ptr [edi+8], 0FFh
		mov	byte ptr [edi+7], 0FFh
		mov	byte ptr [edi+6], 0FFh
		mov	byte ptr [edi+5], 0FFh

loc_194D:				; DATA XREF: .debug_info:00009B18o
		mov	byte ptr [edi+9], 1
		mov	eax, 0Ah
		jmp	loc_1844
; ---------------------------------------------------------------------------
unk_195B	db  90h	; ê		; DATA XREF: .debug_loc:00010EABo
					; .debug_loc:00010F43o
; ---------------------------------------------------------------------------

loc_195C:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		add	edi, ebx	; jumptable 000017C9 case 1
		mov	eax, [esi]

loc_1960:				; DATA XREF: .debug_info:00008DC6o
					; .debug_info:00008DECo ...
		test	eax, eax
		js	loc_1BA1
		shl	eax, 1

loc_196A:				; CODE XREF: _required_field_pack_isra_12+29Cj
					; _required_field_pack_isra_12+427j
					; DATA XREF: ...
		cmp	eax, 7Fh ; ''
		jbe	loc_1AC0

loc_1973:				; DATA XREF: .debug_ranges:000192D4o
		mov	edx, eax
		or	dl, 80h

loc_1978:				; DATA XREF: .debug_ranges:000192D8o
		mov	[edi], dl

loc_197A:				; DATA XREF: .debug_loc:0001112Do
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_1AFC

loc_1986:				; DATA XREF: .debug_ranges:000192DCo
		mov	edx, eax
		or	dl, 80h

loc_198B:				; DATA XREF: .debug_ranges:000192E0o
		mov	[edi+1], dl
		shr	eax, 7

loc_1991:				; DATA XREF: .debug_info:00009BB0o
		cmp	eax, 7Fh ; ''
		jbe	loc_1AE4

loc_199A:				; DATA XREF: .debug_ranges:000192E4o
		mov	edx, eax
		or	dl, 80h

loc_199F:				; DATA XREF: .debug_ranges:000192E8o
		mov	[edi+2], dl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_1BC5

loc_19AE:				; DATA XREF: .debug_ranges:000192ECo
		mov	edx, eax
		or	dl, 80h

loc_19B3:				; DATA XREF: .debug_ranges:000192F0o
					; .debug_info:0000908Co
		mov	[edi+3], dl
		shr	eax, 7
		mov	edx, 4
		jmp	loc_1AC2
; ---------------------------------------------------------------------------
unk_19C3	db  90h	; ê		; DATA XREF: .debug_loc:000110AFo
					; .debug_loc:000110EEo
; ---------------------------------------------------------------------------

loc_19C4:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		or	byte ptr [edi],	5 ; jumptable 000017C9 cases 2,7,10
		mov	eax, [esi]

loc_19C9:				; DATA XREF: .debug_info:00008E3Do
					; .debug_loc:off_111B5o ...
		mov	[edi+ebx], eax

loc_19CC:				; DATA XREF: .debug_info:00008E41o
		lea	eax, [ebx+4]

loc_19CF:				; DATA XREF: .debug_loc:000111B9o
					; .debug_loc:000111C0o
		jmp	loc_1846
; ---------------------------------------------------------------------------

loc_19D4:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		lea	ecx, [edi+ebx]	; jumptable 000017C9 cases 3,8
		mov	eax, [esi]
		mov	edx, [esi+4]

loc_19DC:				; CODE XREF: _required_field_pack_isra_12+27Cj
					; _required_field_pack_isra_12+41Cj
		call	_uint64_pack

loc_19E1:				; DATA XREF: .debug_info:00008F9Ao
		jmp	loc_1844
; ---------------------------------------------------------------------------
		align 4

loc_19E8:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o
		lea	ecx, [edi+ebx]	; jumptable 000017C9 case 4
		mov	eax, [esi]
		mov	edx, [esi+4]

loc_19F0:				; DATA XREF: .debug_info:00008E64o
					; .debug_info:00008E8Ao ...
		test	edx, edx
		js	loc_1B8B
		add	eax, eax

loc_19FA:				; DATA XREF: .debug_loc:0001120Eo
		adc	edx, edx
		jmp	short loc_19DC
; ---------------------------------------------------------------------------
unk_19FE	db  66h	; f		; DATA XREF: .debug_loc:000111F0o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1A00:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		or	byte ptr [edi],	1 ; jumptable 000017C9 cases 5,9,11
		mov	eax, [esi]
		mov	edx, [esi+4]

loc_1A08:				; DATA XREF: .debug_info:00008EA5o
					; .debug_loc:off_11232o ...
		mov	[edi+ebx], eax
		mov	[edi+ebx+4], edx

loc_1A0F:				; DATA XREF: .debug_info:00008EA9o
		lea	eax, [ebx+8]

loc_1A12:				; DATA XREF: .debug_loc:0001124Eo
		jmp	loc_1846
; ---------------------------------------------------------------------------
unk_1A17	db  90h	; ê		; DATA XREF: .debug_loc:00011236o
; ---------------------------------------------------------------------------

loc_1A18:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o
		add	edi, ebx	; jumptable 000017C9 cases 6,13
		mov	eax, [esi]
		jmp	loc_196A
; ---------------------------------------------------------------------------
		align 4

loc_1A24:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		mov	eax, [esi]	; jumptable 000017C9 case 12
		test	eax, eax
		setnz	byte ptr [edi+ebx]

loc_1A2C:				; DATA XREF: .debug_info:00008ED0o
		lea	eax, [ebx+1]
		jmp	loc_1846
; ---------------------------------------------------------------------------

loc_1A34:				; CODE XREF: _required_field_pack_isra_12+49j
					; DATA XREF: .rdata:off_4F44o ...
		or	byte ptr [edi],	2 ; jumptable 000017C9 case 14
		lea	edx, [edi+ebx]
		mov	esi, [esi]

loc_1A3C:				; DATA XREF: .debug_info:00008EF3o
					; .debug_loc:off_1128Eo ...
		test	esi, esi

loc_1A3E:				; DATA XREF: .debug_info:00007040o
		jz	loc_1B74

loc_1A44:				; DATA XREF: .debug_ranges:off_19388o
		xor	eax, eax
		mov	ecx, 0FFFFFFFFh
		mov	edi, esi
		repne scasb
		not	ecx
		lea	eax, [ecx-1]

loc_1A54:				; DATA XREF: .debug_info:00008F2Co
					; .debug_loc:off_11340o ...
		mov	ecx, eax

loc_1A56:				; DATA XREF: .debug_ranges:off_193E8o
		cmp	eax, 7Fh ; ''
		jbe	short loc_1AD8

loc_1A5B:				; DATA XREF: .debug_ranges:000193ECo
		or	cl, 80h

loc_1A5E:				; DATA XREF: .debug_ranges:000193F0o
		mov	[edx], cl

loc_1A60:				; DATA XREF: .debug_loc:0001146Bo
		mov	ecx, eax
		shr	ecx, 7

loc_1A65:				; DATA XREF: .debug_loc:000113D3o
		cmp	ecx, 7Fh ; ''
		jbe	loc_1BB6

loc_1A6E:				; DATA XREF: .debug_ranges:000193F4o
		or	cl, 80h

loc_1A71:				; DATA XREF: .debug_ranges:000193F8o
		mov	[edx+1], cl
		mov	ecx, eax
		shr	ecx, 0Eh
		cmp	ecx, 7Fh ; ''
		jbe	loc_1C05

loc_1A82:				; DATA XREF: .debug_ranges:000193FCo
		or	cl, 80h

loc_1A85:				; DATA XREF: .debug_ranges:00019400o
		mov	[edx+2], cl
		mov	ecx, eax
		shr	ecx, 15h
		cmp	ecx, 7Fh ; ''
		jbe	loc_1C3C

loc_1A96:				; DATA XREF: .debug_ranges:00019404o
		or	cl, 80h

loc_1A99:				; DATA XREF: .debug_ranges:00019408o
		mov	[edx+3], cl
		mov	ecx, eax
		shr	ecx, 1Ch
		mov	ebp, 5
		mov	edi, 4
		nop

loc_1AAC:				; CODE XREF: _required_field_pack_isra_12+35Fj
					; _required_field_pack_isra_12+440j ...
		mov	[edx+edi], cl

loc_1AAF:				; DATA XREF: .debug_ranges:000193BCo
					; .debug_ranges:0001940Co
		add	edx, ebp

loc_1AB1:				; DATA XREF: .debug_loc:00011292o
					; .debug_loc:00011383o
		mov	edi, edx
		mov	ecx, eax
		rep movsb

loc_1AB7:				; DATA XREF: .debug_loc:000112EDo
					; .debug_loc:000112F4o
		add	eax, ebp

loc_1AB9:				; DATA XREF: .debug_loc:00011344o
		jmp	loc_1844
; ---------------------------------------------------------------------------
unk_1ABE	db  66h	; f		; DATA XREF: .debug_loc:000112F8o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1AC0:				; CODE XREF: _required_field_pack_isra_12+1EDj
					; DATA XREF: .debug_ranges:000192A8o ...
		xor	edx, edx

loc_1AC2:				; CODE XREF: _required_field_pack_isra_12+23Ej
					; _required_field_pack_isra_12+369j ...
		mov	[edi+edx], al

loc_1AC5:				; DATA XREF: .debug_ranges:000192ACo
					; .debug_ranges:000192FCo
		lea	eax, [ebx+edx+1]
		jmp	loc_1846
; ---------------------------------------------------------------------------
		align 10h

loc_1AD0:				; CODE XREF: _required_field_pack_isra_12+103j
					; DATA XREF: .debug_ranges:000190A8o ...
		xor	edx, edx
		jmp	loc_18F4
; ---------------------------------------------------------------------------
		align 4

loc_1AD8:				; CODE XREF: _required_field_pack_isra_12+2D9j
					; DATA XREF: .debug_ranges:000190ACo ...
		mov	ebp, 1
		xor	edi, edi
		jmp	short loc_1AAC
; ---------------------------------------------------------------------------
		db 8Dh
; ---------------------------------------------------------------------------
		jbe	short $+2	; DATA XREF: .debug_info:0000A550o

loc_1AE4:				; CODE XREF: _required_field_pack_isra_12+214j
					; _required_field_pack_isra_12+362j
					; DATA XREF: ...
		mov	edx, 2
		jmp	short loc_1AC2
; ---------------------------------------------------------------------------
unk_1AEB	db  90h	; ê		; DATA XREF: .debug_loc:00010A8Co
; ---------------------------------------------------------------------------

loc_1AEC:				; CODE XREF: _required_field_pack_isra_12+6Fj
					; DATA XREF: .debug_ranges:00018F98o ...
		mov	eax, 2
		mov	edi, 1
		jmp	loc_1834
; ---------------------------------------------------------------------------
unk_1AFB	db  90h	; ê		; DATA XREF: .debug_loc:00010A90o
; ---------------------------------------------------------------------------

loc_1AFC:				; CODE XREF: _required_field_pack_isra_12+200j
					; DATA XREF: .debug_ranges:00018F9Co ...
		mov	edx, 1
		jmp	short loc_1AC2
; ---------------------------------------------------------------------------
		align 4

loc_1B04:				; CODE XREF: _required_field_pack_isra_12+5Bj
					; DATA XREF: .debug_ranges:00018FA0o ...
		mov	ecx, ebp
		mov	eax, 1
		xor	edi, edi
		jmp	loc_1834
; ---------------------------------------------------------------------------
unk_1B12	db  66h	; f		; DATA XREF: .debug_loc:off_10F71o
					; .debug_loc:off_10FA5o ...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1B14:				; CODE XREF: _required_field_pack_isra_12+186j
					; DATA XREF: .debug_info:00008D93o ...
		cmp	edx, 7Fh ; ''

loc_1B17:				; DATA XREF: .debug_info:00007358o
		jbe	loc_1BEF

loc_1B1D:				; DATA XREF: .debug_ranges:0001922Co
		mov	eax, edx
		or	al, 80h

loc_1B21:				; DATA XREF: .debug_ranges:00019230o
		mov	[edi], al

loc_1B23:				; DATA XREF: .debug_loc:00010FDDo
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_1C23

loc_1B2F:				; DATA XREF: .debug_ranges:00019234o
		mov	eax, edx
		or	al, 80h

loc_1B33:				; DATA XREF: .debug_ranges:00019238o
		mov	[edi+1], al
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_1C5A

loc_1B42:				; DATA XREF: .debug_ranges:0001923Co
		mov	eax, edx
		or	al, 80h

loc_1B46:				; DATA XREF: .debug_ranges:00019240o
		mov	[edi+2], al
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_1C69

loc_1B55:				; DATA XREF: .debug_ranges:00019244o
		mov	eax, edx
		or	al, 80h

loc_1B59:				; DATA XREF: .debug_ranges:00019248o
		mov	[edi+3], al
		shr	edx, 7
		mov	eax, 5
		mov	ecx, 4
		lea	esi, [esi+0]

loc_1B6C:				; CODE XREF: _required_field_pack_isra_12+476j
					; _required_field_pack_isra_12+4ADj ...
		mov	[edi+ecx], dl
		jmp	loc_1844
; ---------------------------------------------------------------------------

loc_1B74:				; CODE XREF: _required_field_pack_isra_12:loc_1A3Ej
					; DATA XREF: .debug_loc:00010F75o ...
		mov	byte ptr [edx],	0
		mov	eax, 1
		jmp	loc_1844
; ---------------------------------------------------------------------------

loc_1B81:				; CODE XREF: _required_field_pack_isra_12+E9j
					; DATA XREF: .debug_ranges:000190B0o ...
		mov	byte ptr [edi],	0
		mov	al, 1
		jmp	loc_1844
; ---------------------------------------------------------------------------

loc_1B8B:				; CODE XREF: _required_field_pack_isra_12+272j
					; DATA XREF: .debug_ranges:000190B4o ...
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	loc_19DC
; ---------------------------------------------------------------------------

loc_1BA1:				; CODE XREF: _required_field_pack_isra_12+1E2j
					; DATA XREF: .debug_loc:0001108Co ...
		neg	eax

loc_1BA3:				; DATA XREF: .debug_loc:00011090o
		lea	eax, [eax+eax-1]
		jmp	loc_196A
; ---------------------------------------------------------------------------

loc_1BAC:				; CODE XREF: _required_field_pack_isra_12+139j
					; DATA XREF: .debug_ranges:000190B8o ...
		mov	edx, 1
		jmp	loc_18F4
; ---------------------------------------------------------------------------

loc_1BB6:				; CODE XREF: _required_field_pack_isra_12+2E8j
					; DATA XREF: .debug_ranges:000190BCo ...
		mov	ebp, 2
		mov	edi, 1
		jmp	loc_1AAC
; ---------------------------------------------------------------------------

loc_1BC5:				; CODE XREF: _required_field_pack_isra_12+228j
					; DATA XREF: .debug_ranges:000192C0o ...
		mov	edx, 3
		jmp	loc_1AC2
; ---------------------------------------------------------------------------

loc_1BCF:				; CODE XREF: _required_field_pack_isra_12:loc_188Ej
					; DATA XREF: .debug_info:00008CC6o ...
		cmp	eax, 1FFFFFh
		ja	short loc_1C4B
		mov	eax, 3

loc_1BDB:				; DATA XREF: .debug_loc:00010D36o
		jmp	loc_1899
; ---------------------------------------------------------------------------

loc_1BE0:				; CODE XREF: _required_field_pack_isra_12+83j
					; DATA XREF: .debug_ranges:00018FA8o ...
		mov	eax, 3
		mov	edi, 2

loc_1BEA:				; DATA XREF: .debug_info:000071F3o
		jmp	loc_1834
; ---------------------------------------------------------------------------

loc_1BEF:				; CODE XREF: _required_field_pack_isra_12:loc_1B17j
					; DATA XREF: .debug_loc:00010F7Co ...
		mov	eax, 1
		xor	ecx, ecx
		jmp	loc_1B6C
; ---------------------------------------------------------------------------

loc_1BFB:				; CODE XREF: _required_field_pack_isra_12+14Cj
					; DATA XREF: .debug_loc:00010F80o ...
		mov	edx, 2
		jmp	loc_18F4
; ---------------------------------------------------------------------------

loc_1C05:				; CODE XREF: _required_field_pack_isra_12+2FCj
					; DATA XREF: .debug_ranges:000190CCo ...
		mov	ebp, 3
		mov	edi, 2
		jmp	loc_1AAC
; ---------------------------------------------------------------------------

loc_1C14:				; CODE XREF: _required_field_pack_isra_12+97j
					; DATA XREF: .debug_ranges:00018FB0o ...
		mov	eax, 4
		mov	edi, 3
		jmp	loc_1834
; ---------------------------------------------------------------------------

loc_1C23:				; CODE XREF: _required_field_pack_isra_12+3A9j
					; DATA XREF: .debug_ranges:00018FB4o ...
		mov	eax, 2
		mov	ecx, 1
		jmp	loc_1B6C
; ---------------------------------------------------------------------------

loc_1C32:				; CODE XREF: _required_field_pack_isra_12+15Fj
					; DATA XREF: .debug_ranges:000190D0o ...
		mov	edx, 3
		jmp	loc_18F4
; ---------------------------------------------------------------------------

loc_1C3C:				; CODE XREF: _required_field_pack_isra_12+310j
					; DATA XREF: .debug_ranges:000190D4o ...
		mov	ebp, 4
		mov	edi, 3
		jmp	loc_1AAC
; ---------------------------------------------------------------------------

loc_1C4B:				; CODE XREF: _required_field_pack_isra_12+454j
					; DATA XREF: .debug_ranges:000190D8o ...
		cmp	eax, 10000000h

loc_1C50:				; DATA XREF: .debug_info:00007249o
		sbb	eax, eax
		add	eax, 5
		jmp	loc_1899
; ---------------------------------------------------------------------------

loc_1C5A:				; CODE XREF: _required_field_pack_isra_12+3BCj
					; DATA XREF: .debug_info:0000723Co ...
		mov	eax, 3
		mov	ecx, 2
		jmp	loc_1B6C
; ---------------------------------------------------------------------------

loc_1C69:				; CODE XREF: _required_field_pack_isra_12+3CFj
		mov	eax, 4
		mov	ecx, 3
		jmp	loc_1B6C
; ---------------------------------------------------------------------------

loc_1C78:				; CODE XREF: _required_field_pack_isra_12+D0j
					; DATA XREF: .debug_ranges:000191F4o ...
		call	__imp____stack_chk_fail
_required_field_pack_isra_12 endp

; ---------------------------------------------------------------------------
unk_1C7D	db  8Dh	; ç		; DATA XREF: .debug_info:00008BAEo
					; .debug_info:00008FA3o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_pack_to_buffer
_protobuf_c_message_pack_to_buffer proc	near
					; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_28D7p
					; DATA XREF: .debug_info:00009172o ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= byte ptr -44h
var_43		= byte ptr -43h
var_42		= byte ptr -42h
var_41		= byte ptr -41h
var_40		= byte ptr -40h
var_3F		= byte ptr -3Fh
var_3E		= byte ptr -3Eh
var_3D		= byte ptr -3Dh
var_3C		= byte ptr -3Ch
var_3B		= byte ptr -3Bh
var_34		= byte ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_1C81:				; DATA XREF: .debug_loc:000114F5o
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	ebx, [esp+8Ch+arg_0]
		mov	[esp+8Ch+var_70], ebx
		mov	edi, [esp+8Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+8Ch+var_20], eax
		xor	eax, eax

loc_1CA4:				; DATA XREF: .debug_loc:off_115CFo
		mov	edx, [ebx]
		cmp	dword ptr [edx], 28AAEEF9h
		jnz	loc_2770

loc_1CB2:				; DATA XREF: .debug_loc:off_1158Bo
		mov	ecx, [edx+18h]
		test	ecx, ecx
		jz	loc_261C
		mov	[esp+8Ch+var_64], 0
		mov	[esp+8Ch+var_6C], 0
		mov	[esp+8Ch+var_60], 0
		mov	ebp, edi

loc_1CD7:				; DATA XREF: .debug_loc:0001158Fo
					; .debug_loc:000115D3o
		nop

loc_1CD8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+F8j
					; DATA XREF: .debug_ranges:off_19438o
		mov	edi, [esp+8Ch+var_64]
		add	edi, [edx+1Ch]

loc_1CDF:				; DATA XREF: .debug_loc:off_1162Fo
		mov	ecx, [esp+8Ch+var_70]
		add	ecx, [edi+14h]

loc_1CE6:				; DATA XREF: .debug_loc:off_11760o
		mov	ebx, [edi+10h]

loc_1CE9:				; DATA XREF: .debug_loc:off_1180Ao
		mov	eax, [edi+8]
		test	eax, eax
		jz	short loc_1D50
		add	ebx, [esp+8Ch+var_70]

loc_1CF4:				; DATA XREF: .debug_loc:0001180Eo
		dec	eax
		jz	loc_1E14
		mov	ebx, [ebx]
		mov	[esp+8Ch+var_68], ebx

loc_1D01:				; DATA XREF: .debug_info:000091FCo
					; .debug_loc:off_118CDo ...
		mov	ecx, [ecx]

loc_1D03:				; DATA XREF: .debug_loc:00011764o
					; .debug_loc:000119AAo
		mov	[esp+8Ch+var_54], ecx

loc_1D07:				; DATA XREF: .debug_loc:off_11CBBo
		test	ebx, ebx
		jz	loc_1E08
		mov	eax, [edi+20h]
		test	eax, eax
		jz	loc_1E44

loc_1D1A:				; DATA XREF: .debug_ranges:off_194E0o
					; .debug_info:0000727Fo ...
		mov	eax, [edi+4]
		lea	edx, [esp+8Ch+var_34]

loc_1D21:				; DATA XREF: .debug_loc:00011CBFo
		call	_tag_pack

loc_1D26:				; DATA XREF: .debug_info:00009879o
		mov	esi, eax

loc_1D28:				; DATA XREF: .debug_info:00009266o
					; .debug_loc:off_11D7Bo ...
		cmp	dword ptr [edi+0Ch], 0Dh ; switch 14 cases
		jbe	loc_1E78
		mov	[esp+8Ch+var_84], 4F2h ; jumptable 00001E7B default case
		mov	[esp+8Ch+var_88], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+8Ch+var_8C], offset off_4E54 ; void *

loc_1D49:				; DATA XREF: .debug_loc:00011D7Fo
		call	__assert
; ---------------------------------------------------------------------------
unk_1D4E	db  66h	; f		; DATA XREF: .debug_info:000094B1o
					; .debug_loc:000118D1o	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1D50:				; CODE XREF: _protobuf_c_message_pack_to_buffer+6Ej
					; DATA XREF: .debug_ranges:00019464o ...
		lea	edx, [edi+0Ch]
		mov	eax, [edi+4]
		mov	[esp+8Ch+var_8C], ebp
		call	_required_field_pack_to_buffer_isra_13

loc_1D5E:				; DATA XREF: .debug_info:000099F3o
		add	[esp+8Ch+var_6C], eax
		mov	ebx, [esp+8Ch+var_70]
		mov	edx, [ebx]

loc_1D68:				; CODE XREF: _protobuf_c_message_pack_to_buffer+18Ej
					; _protobuf_c_message_pack_to_buffer+1BFj
					; DATA XREF: ...
		inc	[esp+8Ch+var_60]
		add	[esp+8Ch+var_64], 30h ;	'0'
		mov	ebx, [esp+8Ch+var_60]
		cmp	[edx+18h], ebx
		ja	loc_1CD8
		mov	edi, ebp

loc_1D80:				; CODE XREF: _protobuf_c_message_pack_to_buffer+9A4j
					; DATA XREF: .debug_info:0000736Co
		mov	ebx, [esp+8Ch+var_70]
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_1DE9
		xor	ecx, ecx
		lea	esi, [esp+8Ch+var_34]
		mov	ebp, ecx
		nop

loc_1D94:				; CODE XREF: _protobuf_c_message_pack_to_buffer+167j
		mov	ebx, ebp
		shl	ebx, 4
		mov	eax, [esp+8Ch+var_70]
		add	ebx, [eax+8]

loc_1DA0:				; DATA XREF: .debug_info:00009A17o
					; .debug_info:00009A39o ...
		mov	edx, esi
		mov	eax, [ebx]
		call	_tag_pack

loc_1DA9:				; DATA XREF: .debug_info:00009A53o
					; .debug_loc:off_1343Fo
		mov	edx, [ebx+4]
		or	[esp+8Ch+var_34], dl
		mov	[esp+8Ch+var_84], esi
		mov	[esp+8Ch+var_88], eax
		mov	[esp+8Ch+var_8C], edi
		mov	[esp+8Ch+var_74], eax

loc_1DBF:				; DATA XREF: .debug_loc:00013443o
		call	dword ptr [edi]

loc_1DC1:				; DATA XREF: .debug_info:00009A67o
		mov	edx, [ebx+0Ch]
		mov	[esp+8Ch+var_84], edx
		mov	edx, [ebx+8]
		mov	[esp+8Ch+var_88], edx
		mov	[esp+8Ch+var_8C], edi
		call	dword ptr [edi]

loc_1DD4:				; DATA XREF: .debug_info:00009A7Fo
		mov	eax, [esp+8Ch+var_74]
		add	eax, [ebx+8]

loc_1DDB:				; DATA XREF: .debug_info:00009A1Bo
					; .debug_info:00009A3Do
		add	[esp+8Ch+var_6C], eax
		inc	ebp
		mov	ebx, [esp+8Ch+var_70]

loc_1DE4:				; DATA XREF: .debug_loc:00013430o
		cmp	[ebx+4], ebp
		ja	short loc_1D94

loc_1DE9:				; CODE XREF: _protobuf_c_message_pack_to_buffer+109j
					; DATA XREF: .debug_loc:0001341Do
		mov	eax, [esp+8Ch+var_6C]
		mov	edx, [esp+8Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_276B
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_1E05	db  8Dh	; ç		; DATA XREF: .debug_loc:000118D8o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1E08:				; CODE XREF: _protobuf_c_message_pack_to_buffer+89j
					; DATA XREF: .debug_ranges:00019440o ...
		xor	esi, esi

loc_1E0A:				; CODE XREF: _protobuf_c_message_pack_to_buffer+25Aj
					; _protobuf_c_message_pack_to_buffer+678j
					; DATA XREF: ...
		add	[esp+8Ch+var_6C], esi
		jmp	loc_1D68
; ---------------------------------------------------------------------------
unk_1E13	db  90h	; ê		; DATA XREF: .debug_loc:000118DCo
					; .debug_loc:off_1338Eo ...
; ---------------------------------------------------------------------------

loc_1E14:				; CODE XREF: _protobuf_c_message_pack_to_buffer+75j
					; DATA XREF: .debug_info:00009988o ...
		mov	eax, [edi+0Ch]
		cmp	eax, 10h
		jz	short loc_1E68
		cmp	eax, 0Eh
		jz	short loc_1E68
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_1E74

loc_1E27:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1F1j
		lea	edx, [edi+0Ch]
		mov	eax, [edi+4]
		mov	[esp+8Ch+var_8C], ebp

loc_1E30:				; DATA XREF: .debug_loc:000133B0o
		call	_required_field_pack_to_buffer_isra_13

loc_1E35:				; DATA XREF: .debug_info:000099D3o
		mov	ebx, [esp+8Ch+var_70]

loc_1E39:				; DATA XREF: .debug_loc:000133CEo
		mov	edx, [ebx]

loc_1E3B:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1F6j
					; DATA XREF: .debug_ranges:00019EE4o
		add	[esp+8Ch+var_6C], eax
		jmp	loc_1D68
; ---------------------------------------------------------------------------

loc_1E44:				; CODE XREF: _protobuf_c_message_pack_to_buffer+94j
					; DATA XREF: .debug_info:000098F8o ...
		cmp	dword ptr [edi+0Ch], 10h ; switch 17 cases
		jbe	short loc_1E84

loc_1E4A:				; DATA XREF: .debug_info:00009915o
					; .debug_info:00009921o
		mov	[esp+8Ch+var_84], 36Bh ; jumptable 00001E87 default case
		mov	[esp+8Ch+var_88], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+8Ch+var_8C], offset off_4E54 ; void *

loc_1E61:				; DATA XREF: .debug_loc:00013356o
		call	__assert
; ---------------------------------------------------------------------------
byte_1E66	db 66h			; DATA XREF: .debug_info:0000992Fo
					; .debug_loc:0001331Fo
		db  90h	; ê		; DATA XREF: .debug_info:0000746Fo
; ---------------------------------------------------------------------------

loc_1E68:				; CODE XREF: _protobuf_c_message_pack_to_buffer+19Aj
					; _protobuf_c_message_pack_to_buffer+19Fj
					; DATA XREF: ...
		mov	eax, [ecx]

loc_1E6A:				; DATA XREF: .debug_loc:off_13406o
		test	eax, eax
		jz	short loc_1E74
		cmp	eax, [edi+1Ch]
		jnz	short loc_1E27

loc_1E73:				; DATA XREF: .debug_loc:0001340Ao
		nop

loc_1E74:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1A5j
					; _protobuf_c_message_pack_to_buffer+1ECj
					; DATA XREF: ...
		xor	eax, eax
		jmp	short loc_1E3B
; ---------------------------------------------------------------------------

loc_1E78:				; CODE XREF: _protobuf_c_message_pack_to_buffer+ACj
					; DATA XREF: .debug_ranges:00019478o ...
		mov	eax, [edi+0Ch]
		jmp	ds:off_4F9C[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_1E84:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1C8j
					; DATA XREF: .debug_ranges:000194ECo ...
		mov	eax, [edi+0Ch]

loc_1E87:				; DATA XREF: .debug_info:00007564o
		jmp	ds:off_4FD4[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 10h

loc_1E90:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_1E87j
					; DATA XREF: .rdata:off_4FD4o
		mov	[esp+8Ch+var_5C], 8 ; jumptable	00001E87 cases 3-5,8,9,11,15

loc_1E98:				; CODE XREF: _protobuf_c_message_pack_to_buffer+268j
					; DATA XREF: .debug_info:000094DDo ...
		xor	ebx, ebx
		xor	esi, esi
		lea	ecx, [edi+0Ch]
		mov	[esp+8Ch+var_58], ecx

loc_1EA3:				; DATA XREF: .debug_info:off_A420o
					; .debug_info:0000B908o
		mov	[esp+8Ch+var_50], edi
		mov	edi, esi
		mov	esi, [esp+8Ch+var_54]
		lea	esi, [esi+0]

loc_1EB0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+250j
					; DATA XREF: .debug_ranges:000194F4o ...
		mov	edx, [esp+8Ch+var_50]
		mov	eax, [edx+4]
		mov	[esp+8Ch+var_8C], ebp
		mov	ecx, esi

loc_1EBC:				; DATA XREF: .debug_info:0000B664o
					; .debug_info:0000B86Co
		mov	edx, [esp+8Ch+var_58]
		call	_required_field_pack_to_buffer_isra_13

loc_1EC5:				; DATA XREF: .debug_info:00009958o
		add	edi, eax
		add	esi, [esp+8Ch+var_5C]
		inc	ebx

loc_1ECC:				; DATA XREF: .debug_loc:off_13308o
		cmp	ebx, [esp+8Ch+var_68]
		jnz	short loc_1EB0
		mov	esi, edi
		mov	ebx, [esp+8Ch+var_70]

loc_1ED8:				; DATA XREF: .debug_loc:0001330Co
		mov	edx, [ebx]
		jmp	loc_1E0A
; ---------------------------------------------------------------------------
		align 10h

loc_1EE0:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_1E87j
					; DATA XREF: .rdata:off_4FD4o ...
		mov	[esp+8Ch+var_5C], 4 ; jumptable	00001E87 cases 0-2,6,7,10,12-14,16
		jmp	short loc_1E98
; ---------------------------------------------------------------------------

loc_1EEA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co
		mov	eax, [esp+8Ch+var_54] ;	jumptable 00001E7B cases 6,13

loc_1EEE:				; DATA XREF: .debug_ranges:000194F8o
					; .debug_ranges:00019530o ...
		mov	ebx, [esp+8Ch+var_68]
		lea	ecx, [eax+ebx*4]

loc_1EF5:				; DATA XREF: .debug_info:000092B2o
					; .debug_info:000092CBo ...
		mov	[esp+8Ch+var_5C], 0
		xor	ebx, ebx
		jmp	short loc_1F22
; ---------------------------------------------------------------------------
unk_1F01	db  8Dh	; ç		; DATA XREF: .debug_loc:off_12179o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1F04:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2A7j
					; DATA XREF: .debug_info:0000932Do ...
		cmp	edx, 3FFFh
		ja	loc_24F0
		mov	edx, 2

loc_1F15:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2AEj
					; _protobuf_c_message_pack_to_buffer:loc_2501j	...
		add	ebx, edx
		add	eax, 4

loc_1F1A:				; DATA XREF: .debug_loc:00012188o
		cmp	eax, ecx
		jz	loc_20C8

loc_1F22:				; CODE XREF: _protobuf_c_message_pack_to_buffer+27Fj
		mov	edx, [eax]

loc_1F24:				; DATA XREF: .debug_ranges:000196F8o
		cmp	edx, 7Fh ; ''
		ja	short loc_1F04
		mov	edx, 1
		jmp	short loc_1F15
; ---------------------------------------------------------------------------

loc_1F30:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co ...
		mov	ebx, [esp+8Ch+var_68] ;	jumptable 00001E7B cases 5,9,11
		shl	ebx, 3
		mov	[esp+8Ch+var_5C], ebx
		nop

loc_1F3C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+43Fj
					; _protobuf_c_message_pack_to_buffer+44Cj ...
		or	[esp+8Ch+var_34], 2
		lea	edx, [esp+8Ch+var_34]
		add	edx, esi

loc_1F47:				; DATA XREF: .debug_info:00009847o
					; .debug_loc:off_13105o ...
		mov	eax, [esp+8Ch+var_5C]

loc_1F4B:				; DATA XREF: .debug_ranges:off_19E50o
		cmp	[esp+8Ch+var_5C], 7Fh ;	''
		jbe	loc_24B0

loc_1F56:				; DATA XREF: .debug_ranges:00019E54o
		or	al, 80h

loc_1F58:				; DATA XREF: .debug_ranges:00019E58o
		mov	[edx], al

loc_1F5A:				; DATA XREF: .debug_loc:00013280o
		mov	eax, [esp+8Ch+var_5C]
		shr	eax, 7

loc_1F61:				; DATA XREF: .debug_loc:000131E0o
		cmp	eax, 7Fh ; ''
		jbe	loc_2574

loc_1F6A:				; DATA XREF: .debug_ranges:00019E5Co
		or	al, 80h

loc_1F6C:				; DATA XREF: .debug_ranges:00019E60o
		mov	[edx+1], al
		mov	eax, [esp+8Ch+var_5C]
		shr	eax, 0Eh
		cmp	eax, 7Fh ; ''
		jbe	loc_25EC

loc_1F7F:				; DATA XREF: .debug_ranges:00019E64o
		or	al, 80h

loc_1F81:				; DATA XREF: .debug_ranges:00019E68o
		mov	[edx+2], al
		mov	eax, [esp+8Ch+var_5C]
		shr	eax, 15h
		cmp	eax, 7Fh ; ''

loc_1F8E:				; DATA XREF: .debug_info:000097A8o
					; .debug_info:00009CA4o
		jbe	loc_268C

loc_1F94:				; DATA XREF: .debug_ranges:00019E6Co
		or	al, 80h

loc_1F96:				; DATA XREF: .debug_ranges:00019E70o
		mov	[edx+3], al
		mov	eax, [esp+8Ch+var_5C]
		shr	eax, 1Ch
		mov	ecx, 4
		lea	esi, [esi+0]

loc_1FA8:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_24B2j
					; _protobuf_c_message_pack_to_buffer+8F9j ...
		mov	[edx+ecx], al

loc_1FAB:				; DATA XREF: .debug_ranges:00019E24o
					; .debug_ranges:00019E74o
		lea	ecx, [esi+ecx+1]
		mov	[esp+8Ch+var_58], ecx
		lea	eax, [esp+8Ch+var_34]
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], ecx

loc_1FBF:				; DATA XREF: .debug_info:00007708o
					; .debug_info:000086E8o ...
		mov	[esp+8Ch+var_8C], ebp

loc_1FC2:				; DATA XREF: .debug_loc:00013109o
					; .debug_loc:00013110o
		call	dword ptr [ebp+0]

loc_1FC5:				; DATA XREF: .debug_info:0000988Do
					; .debug_loc:off_126FFo ...
		cmp	dword ptr [edi+0Ch], 0Dh ; switch 14 cases

loc_1FC9:				; DATA XREF: .debug_info:00008606o
					; .debug_info:00008709o ...
		jbe	loc_2168
		mov	[esp+8Ch+var_84], 554h ; jumptable 0000216B default case
		mov	[esp+8Ch+var_88], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+8Ch+var_8C], offset off_4E54 ; void *
		call	__assert
; ---------------------------------------------------------------------------

loc_1FEB:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co ...
		mov	ecx, [esp+8Ch+var_54] ;	jumptable 00001E7B case	4

loc_1FEF:				; DATA XREF: .debug_ranges:00019538o
					; .debug_ranges:000195A8o ...
		mov	ebx, [esp+8Ch+var_68]
		lea	eax, [ecx+ebx*8]

loc_1FF6:				; DATA XREF: .debug_ranges:00019700o
		mov	[esp+8Ch+var_5C], 0

loc_1FFE:				; DATA XREF: .data:00004D0Co
					; .data:00004D20o
		mov	[esp+8Ch+var_58], edi
		mov	[esp+8Ch+var_50], esi
		xor	ebx, ebx
		mov	esi, eax
		jmp	short loc_2027
; ---------------------------------------------------------------------------

loc_200C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3BCj
					; DATA XREF: .debug_info:00009370o ...
		cmp	edx, 7
		ja	loc_2520
		mov	edi, 5

loc_201A:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3D7j
					; _protobuf_c_message_pack_to_buffer+8B1j ...
		add	ebx, edi
		add	ecx, 8
		cmp	ecx, esi
		jz	loc_25F8

loc_2027:				; CODE XREF: _protobuf_c_message_pack_to_buffer+38Aj
					; DATA XREF: .debug_loc:0001224Bo ...
		mov	eax, [ecx]
		mov	edx, [ecx+4]

loc_202C:				; DATA XREF: .debug_info:000093EAo
					; .debug_loc:off_1221Fo ...
		test	edx, edx
		js	loc_2550
		add	eax, eax

loc_2036:				; DATA XREF: .debug_loc:00012223o
		adc	edx, edx

loc_2038:				; CODE XREF: _protobuf_c_message_pack_to_buffer+8E1j
					; DATA XREF: .debug_ranges:000197E0o ...
		mov	edi, edx
		test	edx, edx
		jnz	short loc_200C

loc_203E:				; DATA XREF: .debug_info:000093B4o
					; .debug_loc:off_1234Ao ...
		cmp	eax, 7Fh ; ''
		jbe	loc_258C
		cmp	eax, 3FFFh
		ja	loc_264C
		mov	edi, 2
		jmp	short loc_201A
; ---------------------------------------------------------------------------

loc_2059:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co ...
		mov	eax, [esp+8Ch+var_54] ;	jumptable 00001E7B cases 3,8

loc_205D:				; DATA XREF: .debug_ranges:0001978Co
					; .debug_ranges:000197E4o ...
		mov	edx, [esp+8Ch+var_68]
		lea	ebx, [eax+edx*8]

loc_2064:				; DATA XREF: .debug_ranges:00019790o
					; .debug_ranges:000197E8o ...
		mov	[esp+8Ch+var_5C], 0
		mov	[esp+8Ch+var_58], edi
		xor	ecx, ecx
		jmp	short loc_208F
; ---------------------------------------------------------------------------

loc_2074:				; CODE XREF: _protobuf_c_message_pack_to_buffer+416j
					; DATA XREF: .debug_info:00009414o ...
		cmp	edx, 7
		ja	loc_2508
		mov	edx, 5

loc_2082:				; CODE XREF: _protobuf_c_message_pack_to_buffer+432j
					; _protobuf_c_message_pack_to_buffer+899j ...
		add	ecx, edx
		add	eax, 8

loc_2087:				; DATA XREF: .debug_loc:00012510o
		cmp	eax, ebx
		jz	loc_260C

loc_208F:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3F2j
		mov	edi, [eax]
		mov	edx, [eax+4]

loc_2094:				; DATA XREF: .debug_ranges:00019920o
					; .debug_ranges:00019970o
		test	edx, edx
		jnz	short loc_2074

loc_2098:				; DATA XREF: .debug_info:0000943Bo
					; .debug_loc:off_125F0o ...
		cmp	edi, 7Fh ; ''
		jbe	loc_2598
		cmp	edi, 3FFFh
		ja	loc_2664
		mov	edx, 2
		jmp	short loc_2082
; ---------------------------------------------------------------------------

loc_20B4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co ...
		mov	ebx, [esp+8Ch+var_68] ;	jumptable 00001E7B cases 2,7,10
		shl	ebx, 2
		mov	[esp+8Ch+var_5C], ebx
		jmp	loc_1F3C
; ---------------------------------------------------------------------------

loc_20C4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co
		mov	ebx, [esp+8Ch+var_68] ;	jumptable 00001E7B case	12

loc_20C8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+29Cj
					; _protobuf_c_message_pack_to_buffer+480j ...
		mov	[esp+8Ch+var_5C], ebx
		jmp	loc_1F3C
; ---------------------------------------------------------------------------

loc_20D1:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co
		mov	eax, [esp+8Ch+var_54] ;	jumptable 00001E7B case	1

loc_20D5:				; DATA XREF: .debug_ranges:off_199F8o
		mov	ebx, [esp+8Ch+var_68]
		lea	ecx, [eax+ebx*4]

loc_20DC:				; DATA XREF: .debug_info:00009480o
					; .debug_ranges:off_19A28o
		mov	[esp+8Ch+var_5C], 0
		xor	ebx, ebx
		jmp	short loc_2102
; ---------------------------------------------------------------------------

loc_20E8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+491j
					; DATA XREF: .debug_loc:off_120C1o ...
		cmp	edx, 3FFFh
		ja	loc_2538
		mov	edx, 2

loc_20F9:				; CODE XREF: _protobuf_c_message_pack_to_buffer+498j
					; _protobuf_c_message_pack_to_buffer:loc_2549j	...
		add	ebx, edx
		add	eax, 4

loc_20FE:				; DATA XREF: .debug_loc:000120C5o
		cmp	eax, ecx
		jz	short loc_20C8

loc_2102:				; CODE XREF: _protobuf_c_message_pack_to_buffer+466j
		mov	edx, [eax]

loc_2104:				; DATA XREF: .debug_info:00009303o
					; .debug_ranges:00019640o ...
		test	edx, edx
		js	loc_2568
		shl	edx, 1

loc_210E:				; CODE XREF: _protobuf_c_message_pack_to_buffer+8EEj
					; DATA XREF: .debug_ranges:00019678o ...
		cmp	edx, 7Fh ; ''
		ja	short loc_20E8
		mov	edx, 1
		jmp	short loc_20F9
; ---------------------------------------------------------------------------

loc_211A:				; CODE XREF: _protobuf_c_message_pack_to_buffer+1FBj
					; DATA XREF: .rdata:off_4F9Co
		mov	eax, [esp+8Ch+var_54] ;	jumptable 00001E7B case	0

loc_211E:				; DATA XREF: .debug_ranges:0001960Co
					; .debug_ranges:00019644o ...
		mov	ebx, [esp+8Ch+var_68]
		lea	ecx, [eax+ebx*4]

loc_2125:				; DATA XREF: .debug_ranges:0001947Co
					; .debug_ranges:000194BCo ...
		mov	[esp+8Ch+var_5C], 0
		xor	ebx, ebx
		jmp	short loc_215B
; ---------------------------------------------------------------------------
unk_2131	db  8Dh	; ç		; DATA XREF: .debug_loc:off_12642o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_2134:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4DFj
					; DATA XREF: .debug_ranges:00019480o ...
		cmp	edx, 7Fh ; ''
		jle	loc_24C4
		cmp	edx, 3FFFh
		jg	loc_25D4
		mov	edx, 2

loc_214E:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4E6j
					; _protobuf_c_message_pack_to_buffer+849j ...
		add	ebx, edx
		add	eax, 4
		cmp	eax, ecx
		jz	loc_20C8

loc_215B:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4AFj
		mov	edx, [eax]

loc_215D:				; DATA XREF: .debug_ranges:00019A38o
		test	edx, edx
		jns	short loc_2134
		mov	edx, 0Ah
		jmp	short loc_214E
; ---------------------------------------------------------------------------

loc_2168:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_1FC9j
					; DATA XREF: .debug_ranges:00019544o ...
		mov	eax, [edi+0Ch]

loc_216B:				; DATA XREF: .debug_info:00007D2Co
		jmp	ds:off_5018[eax*4] ; switch jump
; ---------------------------------------------------------------------------

loc_2172:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o
		xor	edi, edi	; jumptable 0000216B cases 6,13
		xor	ebx, ebx
		mov	esi, ebp
		jmp	short loc_21F0
; ---------------------------------------------------------------------------
unk_217A	db  66h	; f		; DATA XREF: .debug_loc:off_12A15o
					; .debug_loc:off_12A87o ...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_217C:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_21FAj
					; DATA XREF: .debug_info:00009548o ...
		mov	ecx, eax
		or	cl, 80h

loc_2181:				; DATA XREF: .debug_ranges:off_19BA8o
		mov	[esp+8Ch+var_44], cl

loc_2185:				; DATA XREF: .debug_info:00007795o
					; .debug_loc:00012ACAo
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_24E0

loc_2191:				; DATA XREF: .debug_ranges:00019BACo
		mov	ecx, eax
		or	cl, 80h

loc_2196:				; DATA XREF: .debug_ranges:00019BB0o
		mov	[esp+8Ch+var_43], cl

loc_219A:				; DATA XREF: .debug_loc:00012AD6o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_25B4

loc_21A6:				; DATA XREF: .debug_ranges:00019BB4o
		mov	ecx, eax
		or	cl, 80h

loc_21AB:				; DATA XREF: .debug_ranges:00019BB8o
		mov	[esp+8Ch+var_42], cl

loc_21AF:				; DATA XREF: .debug_loc:00012AE2o
		shr	eax, 7
		cmp	eax, 7Fh ; ''

loc_21B5:				; DATA XREF: .debug_info:0000799Co
		jbe	loc_263C

loc_21BB:				; DATA XREF: .debug_ranges:00019BBCo
		mov	ecx, eax
		or	cl, 80h

loc_21C0:				; DATA XREF: .debug_ranges:00019BC0o
		mov	[esp+8Ch+var_41], cl

loc_21C4:				; DATA XREF: .debug_loc:00012AEEo
		shr	eax, 7
		mov	ebp, 5
		lea	ecx, [esp+8Ch+var_40]

loc_21D0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+585j
					; _protobuf_c_message_pack_to_buffer+869j ...
		mov	[ecx], al

loc_21D2:				; DATA XREF: .debug_ranges:00019B7Co
					; .debug_ranges:00019BC4o
		lea	eax, [esp+8Ch+var_44]

loc_21D6:				; DATA XREF: .debug_loc:00012A19o
					; .debug_loc:00012A8Bo
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], ebp
		mov	[esp+8Ch+var_8C], esi
		call	dword ptr [esi]

loc_21E3:				; DATA XREF: .debug_info:0000957Ao
		add	edi, ebp

loc_21E5:				; DATA XREF: .debug_ranges:00019B4Co
		inc	ebx

loc_21E6:				; DATA XREF: .debug_loc:off_129C0o
		cmp	ebx, [esp+8Ch+var_68]
		jz	loc_24B8

loc_21F0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4F8j
					; DATA XREF: .debug_loc:000129C4o ...
		mov	ecx, [esp+8Ch+var_54]
		mov	eax, [ecx+ebx*4]

loc_21F7:				; DATA XREF: .debug_ranges:00019B80o
					; .debug_ranges:00019BC8o
		cmp	eax, 7Fh ; ''

loc_21FA:				; DATA XREF: .debug_info:000079B8o
		ja	short loc_217C
		mov	ebp, 1
		lea	ecx, [esp+8Ch+var_44]
		jmp	short loc_21D0
; ---------------------------------------------------------------------------

loc_2207:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o ...
		xor	edi, edi	; jumptable 0000216B case 1
		xor	ebx, ebx
		mov	esi, ebp
		jmp	short loc_2284
; ---------------------------------------------------------------------------
unk_220F	db  90h	; ê		; DATA XREF: .debug_loc:off_12B45o
					; .debug_loc:off_12BC5o ...
; ---------------------------------------------------------------------------

loc_2210:				; CODE XREF: _protobuf_c_message_pack_to_buffer+618j
					; DATA XREF: .debug_info:000095A9o ...
		mov	ecx, eax

loc_2212:				; DATA XREF: .debug_loc:00012BC9o
		or	cl, 80h

loc_2215:				; DATA XREF: .debug_ranges:off_19C90o
		mov	[esp+8Ch+var_44], cl

loc_2219:				; DATA XREF: .debug_loc:00012D2Ao
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_24D0

loc_2225:				; DATA XREF: .debug_ranges:00019C94o
		mov	ecx, eax
		or	cl, 80h

loc_222A:				; DATA XREF: .debug_ranges:00019C98o
		mov	[esp+8Ch+var_43], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_25A4

loc_223A:				; DATA XREF: .debug_ranges:00019C9Co
		mov	ecx, eax
		or	cl, 80h

loc_223F:				; DATA XREF: .debug_ranges:00019CA0o
		mov	[esp+8Ch+var_42], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_262C

loc_224F:				; DATA XREF: .debug_ranges:00019CA4o
		mov	ecx, eax
		or	cl, 80h

loc_2254:				; DATA XREF: .debug_ranges:00019CA8o
		mov	[esp+8Ch+var_41], cl
		shr	eax, 7
		mov	ebp, 5
		lea	ecx, [esp+8Ch+var_40]

loc_2264:				; CODE XREF: _protobuf_c_message_pack_to_buffer+627j
					; _protobuf_c_message_pack_to_buffer+859j ...
		mov	[ecx], al

loc_2266:				; DATA XREF: .debug_ranges:00019C2Co
					; .debug_ranges:00019C64o ...
		lea	eax, [esp+8Ch+var_44]

loc_226A:				; DATA XREF: .debug_loc:00012B49o
					; .debug_loc:00012C79o	...
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], ebp
		mov	[esp+8Ch+var_8C], esi
		call	dword ptr [esi]

loc_2277:				; DATA XREF: .debug_info:0000961Co
		add	edi, ebp

loc_2279:				; DATA XREF: .debug_ranges:00019BF4o
		inc	ebx
		cmp	ebx, [esp+8Ch+var_68]
		jz	loc_24B8

loc_2284:				; CODE XREF: _protobuf_c_message_pack_to_buffer+58Dj
					; DATA XREF: .debug_ranges:00019BF8o
		mov	ecx, [esp+8Ch+var_54]
		mov	eax, [ecx+ebx*4]

loc_228B:				; DATA XREF: .debug_info:off_9605o
					; .debug_ranges:00019C30o ...
		test	eax, eax

loc_228D:				; DATA XREF: .debug_info:00008020o
		js	loc_2580
		shl	eax, 1

loc_2295:				; CODE XREF: _protobuf_c_message_pack_to_buffer+906j
					; DATA XREF: .debug_ranges:00019C68o ...
		cmp	eax, 7Fh ; ''
		ja	loc_2210
		mov	ebp, 1
		lea	ecx, [esp+8Ch+var_44]
		jmp	short loc_2264
; ---------------------------------------------------------------------------

loc_22A9:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o ...
		xor	ebx, ebx	; jumptable 0000216B case 12
		mov	esi, [esp+8Ch+var_54]

loc_22AF:				; DATA XREF: .debug_info:00007C48o
					; .debug_info:000080A0o
		mov	edi, [esp+8Ch+var_68]

loc_22B3:				; DATA XREF: .debug_loc:off_12DA5o
					; .debug_loc:off_12DD4o
		nop

loc_22B4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+657j
					; DATA XREF: .debug_info:00009639o ...
		mov	eax, [esi+ebx*4]
		test	eax, eax
		setnz	[esp+8Ch+var_44]

loc_22BE:				; DATA XREF: .debug_info:00009653o
		lea	eax, [esp+8Ch+var_44]

loc_22C2:				; DATA XREF: .debug_info:00007CECo
					; .debug_info:00007ED8o ...
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], 1
		mov	[esp+8Ch+var_8C], ebp

loc_22D1:				; DATA XREF: .debug_loc:00012DD8o
		call	dword ptr [ebp+0]

loc_22D4:				; DATA XREF: .debug_info:0000963Do
					; .debug_info:00009672o
		inc	ebx
		cmp	ebx, edi
		jnz	short loc_22B4
		lea	esi, [esi+0]

loc_22DC:				; CODE XREF: _protobuf_c_message_pack_to_buffer+717j
					; _protobuf_c_message_pack_to_buffer:loc_24A2j	...
		mov	ebx, [esp+8Ch+var_68]
		cmp	[esp+8Ch+var_5C], ebx
		jnz	loc_278C
		mov	esi, [esp+8Ch+var_58]
		add	esi, [esp+8Ch+var_5C]
		mov	ebx, [esp+8Ch+var_70]
		mov	edx, [ebx]
		jmp	loc_1E0A
; ---------------------------------------------------------------------------

loc_22FD:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o ...
		xor	esi, esi	; jumptable 0000216B case 4
		xor	ebx, ebx
		mov	edi, [esp+8Ch+var_54]
		jmp	short loc_2338
; ---------------------------------------------------------------------------
unk_2307	db  90h	; ê		; DATA XREF: .debug_loc:off_12DEDo
					; .debug_loc:off_12E43o
; ---------------------------------------------------------------------------

loc_2308:				; CODE XREF: _protobuf_c_message_pack_to_buffer+6C1j
					; DATA XREF: .debug_info:000096A2o ...
		add	eax, eax

loc_230A:				; DATA XREF: .debug_loc:00012E47o
		adc	edx, edx

loc_230C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+6D4j
					; DATA XREF: .debug_ranges:00019D24o
		lea	ecx, [esp+8Ch+var_44]

loc_2310:				; DATA XREF: .debug_loc:00012DF1o
		call	_uint64_pack

loc_2315:				; DATA XREF: .debug_info:000096E2o
					; .debug_ranges:00019D0Co
		lea	edx, [esp+8Ch+var_44]
		mov	[esp+8Ch+var_84], edx
		mov	[esp+8Ch+var_88], eax
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_74], eax
		call	dword ptr [ebp+0]

loc_232B:				; DATA XREF: .debug_info:000096F4o
		mov	eax, [esp+8Ch+var_74]
		add	esi, eax

loc_2331:				; DATA XREF: .debug_ranges:00019CF4o
		inc	ebx
		cmp	ebx, [esp+8Ch+var_68]
		jz	short loc_2393

loc_2338:				; CODE XREF: _protobuf_c_message_pack_to_buffer+685j
					; DATA XREF: .debug_ranges:00019CF8o
		mov	eax, [edi+ebx*8]
		mov	edx, [edi+ebx*8+4]

loc_233F:				; DATA XREF: .debug_ranges:00019D10o
					; .debug_ranges:00019D28o
		test	edx, edx
		jns	short loc_2308
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	short loc_230C
; ---------------------------------------------------------------------------

loc_2356:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o ...
		xor	esi, esi	; jumptable 0000216B cases 3,8
		xor	ebx, ebx
		mov	edi, [esp+8Ch+var_54]
		xchg	ax, ax

loc_2360:				; CODE XREF: _protobuf_c_message_pack_to_buffer+711j
					; DATA XREF: .debug_info:0000970Ao
		mov	eax, [edi+ebx*8]
		mov	edx, [edi+ebx*8+4]
		lea	ecx, [esp+8Ch+var_44]
		call	_uint64_pack

loc_2370:				; DATA XREF: .debug_info:00009720o
					; .debug_loc:off_12E6Bo
		lea	ecx, [esp+8Ch+var_44]
		mov	[esp+8Ch+var_84], ecx
		mov	[esp+8Ch+var_88], eax
		mov	[esp+8Ch+var_8C], ebp
		mov	[esp+8Ch+var_74], eax

loc_2383:				; DATA XREF: .debug_loc:00012E6Fo
		call	dword ptr [ebp+0]

loc_2386:				; DATA XREF: .debug_info:00009735o
		mov	eax, [esp+8Ch+var_74]
		add	esi, eax

loc_238C:				; DATA XREF: .debug_info:0000970Eo
		inc	ebx
		cmp	ebx, [esp+8Ch+var_68]
		jnz	short loc_2360

loc_2393:				; CODE XREF: _protobuf_c_message_pack_to_buffer+6B6j
		mov	[esp+8Ch+var_68], esi
		jmp	loc_22DC
; ---------------------------------------------------------------------------

loc_239C:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o
		xor	edi, edi	; jumptable 0000216B case 0
		xor	ebx, ebx
		jmp	short loc_2418
; ---------------------------------------------------------------------------
unk_23A2	db  66h	; f		; DATA XREF: .debug_loc:off_12E7Eo
					; .debug_loc:off_12EFEo ...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_23A4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+7A1j
					; DATA XREF: .debug_info:0000975Fo ...
		mov	ecx, eax
		or	ecx, 0FFFFFF80h
		mov	[esp+8Ch+var_44], cl
		mov	ecx, eax
		sar	ecx, 7
		or	ecx, 0FFFFFF80h
		mov	[esp+8Ch+var_43], cl
		mov	ecx, eax
		sar	ecx, 0Eh
		or	ecx, 0FFFFFF80h
		mov	[esp+8Ch+var_42], cl
		mov	ecx, eax
		sar	ecx, 15h
		or	ecx, 0FFFFFF80h
		mov	[esp+8Ch+var_41], cl
		sar	eax, 1Ch

loc_23D4:				; DATA XREF: .debug_loc:00012F02o
					; .debug_loc:00012FA0o
		or	eax, 0FFFFFF80h
		mov	[esp+8Ch+var_40], al
		mov	[esp+8Ch+var_3C], 0FFh
		mov	[esp+8Ch+var_3D], 0FFh
		mov	[esp+8Ch+var_3E], 0FFh
		mov	[esp+8Ch+var_3F], 0FFh
		mov	[esp+8Ch+var_3B], 1
		mov	esi, 0Ah

loc_23F9:				; CODE XREF: _protobuf_c_message_pack_to_buffer+802j
					; _protobuf_c_message_pack_to_buffer+94Fj ...
		lea	eax, [esp+8Ch+var_44]

loc_23FD:				; DATA XREF: .debug_loc:00012E82o
		mov	[esp+8Ch+var_84], eax
		mov	[esp+8Ch+var_88], esi
		mov	[esp+8Ch+var_8C], ebp
		call	dword ptr [ebp+0]

loc_240B:				; DATA XREF: .debug_info:000097DBo
		add	edi, esi

loc_240D:				; DATA XREF: .debug_ranges:00019D3Co
		inc	ebx
		cmp	ebx, [esp+8Ch+var_68]
		jz	loc_24BA

loc_2418:				; CODE XREF: _protobuf_c_message_pack_to_buffer+720j
					; DATA XREF: .debug_ranges:00019D40o
		mov	ecx, [esp+8Ch+var_54]
		mov	eax, [ecx+ebx*4]

loc_241F:				; DATA XREF: .debug_ranges:00019D78o
		test	eax, eax
		js	short loc_23A4

loc_2423:				; DATA XREF: .debug_info:000097ACo
					; .debug_loc:off_12FC2o ...
		cmp	eax, 7Fh ; ''
		jbe	loc_25C4
		mov	ecx, eax
		or	cl, 80h

loc_2431:				; DATA XREF: .debug_info:00007A20o
		mov	[esp+8Ch+var_44], cl

loc_2435:				; DATA XREF: .debug_loc:0001305Eo
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_267C

loc_2441:				; DATA XREF: .debug_ranges:00019DDCo
		mov	ecx, eax
		or	cl, 80h

loc_2446:				; DATA XREF: .debug_ranges:00019DE0o
		mov	[esp+8Ch+var_43], cl

loc_244A:				; DATA XREF: .debug_loc:0001306Ao
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_270E

loc_2456:				; DATA XREF: .debug_ranges:00019DE4o
		mov	ecx, eax
		or	cl, 80h

loc_245B:				; DATA XREF: .debug_ranges:00019DE8o
		mov	[esp+8Ch+var_42], cl

loc_245F:				; DATA XREF: .debug_loc:00013076o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_26DA

loc_246B:				; DATA XREF: .debug_ranges:00019DECo
					; .debug_info:00007A58o
		mov	ecx, eax
		or	cl, 80h

loc_2470:				; DATA XREF: .debug_ranges:00019DF0o
		mov	[esp+8Ch+var_41], cl

loc_2474:				; DATA XREF: .debug_loc:00013082o
		shr	eax, 7
		mov	esi, 5
		lea	ecx, [esp+8Ch+var_40]

loc_2480:				; DATA XREF: .debug_loc:0001308Eo
		mov	[ecx], al
		jmp	loc_23F9
; ---------------------------------------------------------------------------

loc_2487:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o ...
		shl	[esp+8Ch+var_68], 2 ; jumptable	0000216B cases 2,7,10

loc_248C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+82Cj
					; DATA XREF: .debug_info:00009531o
		mov	ecx, [esp+8Ch+var_54]
		mov	[esp+8Ch+var_84], ecx
		mov	ebx, [esp+8Ch+var_68]
		mov	[esp+8Ch+var_88], ebx
		mov	[esp+8Ch+var_8C], ebp
		call	dword ptr [ebp+0]

loc_24A2:				; DATA XREF: .debug_info:00009822o
		jmp	loc_22DC
; ---------------------------------------------------------------------------

loc_24A7:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_216Bj
					; DATA XREF: .rdata:off_5018o
		shl	[esp+8Ch+var_68], 3 ; jumptable	0000216B cases 5,9,11
		jmp	short loc_248C
; ---------------------------------------------------------------------------
		align 10h

loc_24B0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2D0j
					; DATA XREF: .debug_ranges:00019A94o ...
		xor	ecx, ecx

loc_24B2:				; DATA XREF: .debug_info:00007A85o
		jmp	loc_1FA8
; ---------------------------------------------------------------------------
		align 4

loc_24B8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+56Aj
					; _protobuf_c_message_pack_to_buffer+5FEj
		mov	ebp, esi

loc_24BA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+792j
					; DATA XREF: .debug_ranges:00019A98o ...
		mov	[esp+8Ch+var_68], edi
		jmp	loc_22DC
; ---------------------------------------------------------------------------
		align 4

loc_24C4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4B7j
					; DATA XREF: .debug_ranges:00019548o ...
		mov	edx, 1
		jmp	loc_214E
; ---------------------------------------------------------------------------
		align 10h

loc_24D0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+59Fj
					; DATA XREF: .debug_ranges:0001954Co ...
		mov	ebp, 2
		lea	ecx, [esp+8Ch+var_43]
		jmp	loc_2264
; ---------------------------------------------------------------------------
		align 10h

loc_24E0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+50Bj
					; DATA XREF: .debug_ranges:00019B58o ...
		mov	ebp, 2
		lea	ecx, [esp+8Ch+var_43]
		jmp	loc_21D0
; ---------------------------------------------------------------------------
unk_24EE	db  66h	; f		; DATA XREF: .debug_loc:off_121E9o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_24F0:				; CODE XREF: _protobuf_c_message_pack_to_buffer+28Aj
					; DATA XREF: .debug_info:00009346o ...
		cmp	edx, 1FFFFFh
		ja	loc_26CA
		mov	edx, 3

loc_2501:				; DATA XREF: .debug_loc:000121EDo
					; .debug_loc:000121F4o
		jmp	loc_1F15
; ---------------------------------------------------------------------------
unk_2506	db  66h	; f		; DATA XREF: .debug_loc:000121F8o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2508:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3F7j
					; DATA XREF: .debug_ranges:000196DCo ...
		cmp	edx, 3FFh
		ja	loc_2696
		mov	edx, 6
		jmp	loc_2082
; ---------------------------------------------------------------------------
		align 10h

loc_2520:				; CODE XREF: _protobuf_c_message_pack_to_buffer+38Fj
					; DATA XREF: .debug_ranges:00019740o ...
		cmp	edx, 3FFh
		ja	loc_26A8
		mov	edi, 6
		jmp	loc_201A
; ---------------------------------------------------------------------------
unk_2536	db  66h	; f		; DATA XREF: .debug_loc:off_1215Bo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2538:				; CODE XREF: _protobuf_c_message_pack_to_buffer+46Ej
					; DATA XREF: .debug_info:000092E8o ...
		cmp	edx, 1FFFFFh
		ja	loc_26BA
		mov	edx, 3

loc_2549:				; DATA XREF: .debug_loc:0001215Fo
					; .debug_info:00007B38o
		jmp	loc_20F9
; ---------------------------------------------------------------------------
		align 10h

loc_2550:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3AEj
					; DATA XREF: .debug_ranges:00019614o ...
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	loc_2038
; ---------------------------------------------------------------------------
		align 4

loc_2568:				; CODE XREF: _protobuf_c_message_pack_to_buffer+486j
					; DATA XREF: .debug_ranges:00019618o ...
		neg	edx
		lea	edx, [edx+edx-1]
		jmp	loc_210E
; ---------------------------------------------------------------------------
		align 4

loc_2574:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2E4j
					; DATA XREF: .debug_ranges:00019554o ...
		mov	ecx, 1
		jmp	loc_1FA8
; ---------------------------------------------------------------------------
		align 10h

loc_2580:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_228Dj
					; DATA XREF: .debug_ranges:00019AA8o ...
		neg	eax

loc_2582:				; DATA XREF: .debug_info:00007B70o
		lea	eax, [eax+eax-1]
		jmp	loc_2295
; ---------------------------------------------------------------------------
		align 4

loc_258C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3C1j
					; DATA XREF: .debug_ranges:00019558o ...
		mov	edi, 1
		jmp	loc_201A
; ---------------------------------------------------------------------------
		align 4

loc_2598:				; CODE XREF: _protobuf_c_message_pack_to_buffer+41Bj
					; DATA XREF: .debug_ranges:00019754o ...
		mov	edx, 1
		jmp	loc_2082
; ---------------------------------------------------------------------------
		align 4

loc_25A4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+5B4j
					; DATA XREF: .debug_ranges:0001955Co ...
		mov	ebp, 3
		lea	ecx, [esp+8Ch+var_42]
		jmp	loc_2264
; ---------------------------------------------------------------------------
		align 4

loc_25B4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+520j
					; DATA XREF: .debug_ranges:00019B60o ...
		mov	ebp, 3
		lea	ecx, [esp+8Ch+var_42]
		jmp	loc_21D0
; ---------------------------------------------------------------------------
		align 4

loc_25C4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+7A6j
					; DATA XREF: .debug_ranges:00019B64o ...
		mov	esi, 1
		lea	ecx, [esp+8Ch+var_44]
		mov	[ecx], al
		jmp	loc_23F9
; ---------------------------------------------------------------------------

loc_25D4:				; CODE XREF: _protobuf_c_message_pack_to_buffer+4C3j
					; DATA XREF: .debug_info:00009499o ...
		cmp	edx, 1FFFFFh
		jg	loc_271E
		mov	edx, 3

loc_25E5:				; DATA XREF: .debug_loc:000126CDo
					; .debug_loc:000126D4o
		jmp	loc_214E
; ---------------------------------------------------------------------------
unk_25EA	db  66h	; f		; DATA XREF: .debug_loc:000126D8o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_25EC:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2F9j
					; DATA XREF: .debug_ranges:00019564o ...
		mov	ecx, 2

loc_25F1:				; DATA XREF: .debug_info:00007BA8o
		jmp	loc_1FA8
; ---------------------------------------------------------------------------
		align 4

loc_25F8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3A1j
		mov	edi, [esp+8Ch+var_58]
		mov	esi, [esp+8Ch+var_50]
		mov	[esp+8Ch+var_5C], ebx
		jmp	loc_1F3C
; ---------------------------------------------------------------------------
		align 4

loc_260C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+409j
		mov	edi, [esp+8Ch+var_58]
		mov	[esp+8Ch+var_5C], ecx
		jmp	loc_1F3C
; ---------------------------------------------------------------------------
		align 4

loc_261C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+37j
					; DATA XREF: .debug_ranges:00019444o ...
		mov	[esp+8Ch+var_6C], 0
		jmp	loc_1D80
; ---------------------------------------------------------------------------
		align 4

loc_262C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+5C9j
					; DATA XREF: .debug_ranges:00019448o ...
		mov	ebp, 4
		lea	ecx, [esp+8Ch+var_41]
		jmp	loc_2264
; ---------------------------------------------------------------------------
		align 4

loc_263C:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_21B5j
					; DATA XREF: .debug_ranges:00019B68o ...
		mov	ebp, 4
		lea	ecx, [esp+8Ch+var_41]
		jmp	loc_21D0
; ---------------------------------------------------------------------------
unk_264A	db  66h	; f		; DATA XREF: .debug_loc:off_1237Eo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_264C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+3CCj
					; DATA XREF: .debug_info:000093CDo ...
		cmp	eax, 1FFFFFh
		ja	loc_2742
		mov	edi, 3
		jmp	loc_201A
; ---------------------------------------------------------------------------
unk_2661	db  8Dh	; ç		; DATA XREF: .debug_loc:00012382o
					; .debug_loc:off_12624o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_2664:				; CODE XREF: _protobuf_c_message_pack_to_buffer+427j
					; DATA XREF: .debug_info:00009454o ...
		cmp	edi, 1FFFFFh
		ja	loc_2732
		mov	edx, 3
		jmp	loc_2082
; ---------------------------------------------------------------------------
unk_267A	db  66h	; f		; DATA XREF: .debug_loc:00012628o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_267C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+7BBj
					; DATA XREF: .debug_ranges:0001956Co ...
		mov	esi, 2
		lea	ecx, [esp+8Ch+var_43]
		mov	[ecx], al
		jmp	loc_23F9
; ---------------------------------------------------------------------------

loc_268C:				; CODE XREF: _protobuf_c_message_pack_to_buffer:loc_1F8Ej
					; DATA XREF: .debug_ranges:00019AC4o ...
		mov	ecx, 3
		jmp	loc_1FA8
; ---------------------------------------------------------------------------

loc_2696:				; CODE XREF: _protobuf_c_message_pack_to_buffer+88Ej
					; DATA XREF: .debug_ranges:00019570o ...
		cmp	edx, 1FFFFh
		ja	short loc_26EA
		mov	edx, 7
		jmp	loc_2082
; ---------------------------------------------------------------------------

loc_26A8:				; CODE XREF: _protobuf_c_message_pack_to_buffer+8A6j
					; DATA XREF: .debug_ranges:00019760o ...
		cmp	edx, 1FFFFh
		ja	short loc_26FC
		mov	edi, 7
		jmp	loc_201A
; ---------------------------------------------------------------------------

loc_26BA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+8BEj
					; DATA XREF: .debug_ranges:00019620o ...
		cmp	edx, 10000000h
		sbb	edx, edx
		add	edx, 5
		jmp	loc_20F9
; ---------------------------------------------------------------------------

loc_26CA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+876j
					; DATA XREF: .debug_ranges:00019624o ...
		cmp	edx, 10000000h
		sbb	edx, edx
		add	edx, 5
		jmp	loc_1F15
; ---------------------------------------------------------------------------

loc_26DA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+7E5j
					; DATA XREF: .debug_ranges:00019574o ...
		mov	esi, 4
		lea	ecx, [esp+8Ch+var_41]
		mov	[ecx], al
		jmp	loc_23F9
; ---------------------------------------------------------------------------

loc_26EA:				; CODE XREF: _protobuf_c_message_pack_to_buffer+A1Cj
					; DATA XREF: .debug_ranges:00019578o ...
		cmp	edx, 0FFFFFFh
		ja	short loc_275E
		mov	edx, 8
		jmp	loc_2082
; ---------------------------------------------------------------------------

loc_26FC:				; CODE XREF: _protobuf_c_message_pack_to_buffer+A2Ej
					; DATA XREF: .debug_ranges:00019768o ...
		cmp	edx, 0FFFFFFh
		ja	short loc_2751
		mov	edi, 8
		jmp	loc_201A
; ---------------------------------------------------------------------------

loc_270E:				; CODE XREF: _protobuf_c_message_pack_to_buffer+7D0j
					; DATA XREF: .debug_ranges:0001957Co ...
		mov	esi, 3
		lea	ecx, [esp+8Ch+var_42]
		mov	[ecx], al
		jmp	loc_23F9
; ---------------------------------------------------------------------------

loc_271E:				; CODE XREF: _protobuf_c_message_pack_to_buffer+95Aj
					; DATA XREF: .debug_ranges:00019580o ...
		cmp	edx, 0FFFFFFFh
		setnle	dl
		movzx	edx, dl
		add	edx, 4
		jmp	loc_214E
; ---------------------------------------------------------------------------

loc_2732:				; CODE XREF: _protobuf_c_message_pack_to_buffer+9EAj
					; DATA XREF: .debug_ranges:00019900o ...
		cmp	edi, 10000000h
		sbb	edx, edx
		add	edx, 5
		jmp	loc_2082
; ---------------------------------------------------------------------------

loc_2742:				; CODE XREF: _protobuf_c_message_pack_to_buffer+9D1j
					; DATA XREF: .debug_ranges:00019770o ...
		cmp	eax, 10000000h
		sbb	edi, edi
		add	edi, 5
		jmp	loc_201A
; ---------------------------------------------------------------------------

loc_2751:				; CODE XREF: _protobuf_c_message_pack_to_buffer+A82j
					; DATA XREF: .debug_ranges:00019894o ...
		sar	edi, 1Fh
		not	edi
		add	edi, 0Ah
		jmp	loc_201A
; ---------------------------------------------------------------------------

loc_275E:				; CODE XREF: _protobuf_c_message_pack_to_buffer+A70j
					; DATA XREF: .debug_ranges:00019774o ...
		sar	edx, 1Fh
		not	edx
		add	edx, 0Ah
		jmp	loc_2082
; ---------------------------------------------------------------------------

loc_276B:				; CODE XREF: _protobuf_c_message_pack_to_buffer+177j
					; DATA XREF: .debug_ranges:0001944Co ...
		call	__imp____stack_chk_fail
; ---------------------------------------------------------------------------

loc_2770:				; CODE XREF: _protobuf_c_message_pack_to_buffer+2Cj
					; DATA XREF: .debug_info:00009A8Eo
		mov	[esp+8Ch+var_84], 597h ; unsigned int
		mov	[esp+8Ch+var_88], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+8Ch+var_8C], offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		call	__assert
; ---------------------------------------------------------------------------

loc_278C:				; CODE XREF: _protobuf_c_message_pack_to_buffer+664j
					; DATA XREF: .debug_info:00009A97o ...
		mov	[esp+8Ch+var_84], 572h ; unsigned int
		mov	[esp+8Ch+var_88], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+8Ch+var_8C], offset aTmpPayload_len ; "tmp	== payload_len"
		call	__assert
_protobuf_c_message_pack_to_buffer endp


; =============== S U B	R O U T	I N E =======================================


_required_field_pack_to_buffer_isra_13 proc near
					; CODE XREF: _protobuf_c_message_pack_to_buffer+D9p
					; _protobuf_c_message_pack_to_buffer:loc_1E30p	...

var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_16C		= byte ptr -16Ch
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_140		= dword	ptr -140h
var_13C		= dword	ptr -13Ch
var_138		= dword	ptr -138h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_120		= byte ptr -120h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_27A9:				; DATA XREF: .debug_loc:00013456o
		push	edi
		push	esi
		push	ebx
		sub	esp, 16Ch
		mov	edi, edx
		mov	ebp, ecx
		mov	ebx, [esp+17Ch+arg_0]

loc_27BD:				; DATA XREF: .debug_info:00007910o
					; .debug_info:00007D3Ao ...
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+17Ch+var_20], edx
		xor	edx, edx
		lea	edx, [esp+17Ch+var_134]

loc_27D0:				; DATA XREF: .debug_loc:000134F0o
		call	_tag_pack

loc_27D5:				; DATA XREF: .debug_info:00009ECDo
					; .debug_loc:off_135AEo
		cmp	dword ptr [edi], 10h ; switch 17 cases
		jbe	short loc_27F8
		mov	[esp+17Ch+var_174], 49Bh ; jumptable 000027FC default case
		mov	[esp+17Ch+var_178], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+17Ch+var_17C], offset off_4E54 ; void *
		call	__assert
; ---------------------------------------------------------------------------
unk_27F6	db  66h	; f		; DATA XREF: .debug_info:00009EE2o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_27F8:				; CODE XREF: _required_field_pack_to_buffer_isra_13+30j
		mov	esi, eax

loc_27FA:				; DATA XREF: .debug_loc:000135B2o
		mov	eax, [edi]
		jmp	ds:off_5050[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_2804:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		mov	edi, [ebp+0]	; jumptable 000027FC case 15

loc_2807:				; DATA XREF: .debug_loc:off_13684o
		or	byte ptr [esp+17Ch+var_134], 2
		lea	edx, [esp+17Ch+var_134]
		add	edx, esi

loc_2812:				; DATA XREF: .debug_info:00009B2Eo
					; .debug_loc:off_136C3o ...
		mov	eax, edi

loc_2814:				; DATA XREF: .debug_ranges:off_19F60o
		cmp	edi, 7Fh ; ''
		jbe	loc_2CB8

loc_281D:				; DATA XREF: .debug_ranges:00019F64o
		or	al, 80h

loc_281F:				; DATA XREF: .debug_ranges:00019F68o
		mov	[edx], al

loc_2821:				; DATA XREF: .debug_loc:0001379Eo
		mov	eax, edi
		shr	eax, 7

loc_2826:				; DATA XREF: .debug_loc:00013706o
		cmp	eax, 7Fh ; ''
		jbe	loc_2C9C

loc_282F:				; DATA XREF: .debug_ranges:00019F6Co
		or	al, 80h

loc_2831:				; DATA XREF: .debug_ranges:00019F70o
		mov	[edx+1], al

loc_2834:				; DATA XREF: .debug_info:00007E20o
					; .debug_loc:000137AAo
		mov	eax, edi
		shr	eax, 0Eh
		cmp	eax, 7Fh ; ''
		jbe	loc_2DA3

loc_2842:				; DATA XREF: .debug_ranges:00019F74o
		or	al, 80h

loc_2844:				; DATA XREF: .debug_ranges:00019F78o
		mov	[edx+2], al

loc_2847:				; DATA XREF: .debug_loc:000137B6o
		mov	eax, edi
		shr	eax, 15h
		cmp	eax, 7Fh ; ''
		jbe	loc_2DF5

loc_2855:				; DATA XREF: .debug_ranges:00019F7Co
		or	al, 80h

loc_2857:				; DATA XREF: .debug_ranges:00019F80o
		mov	[edx+3], al

loc_285A:				; DATA XREF: .debug_loc:000137C2o
		mov	eax, edi
		shr	eax, 1Ch
		mov	ecx, 4

loc_2864:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_2CA1j
					; _required_field_pack_to_buffer_isra_13+512j ...
		mov	[edx+ecx], al

loc_2867:				; DATA XREF: .debug_loc:000137DAo
					; .debug_ranges:00019F34o ...
		lea	esi, [esi+ecx+1]

loc_286B:				; DATA XREF: .debug_info:00007E58o
		lea	edx, [esp+17Ch+var_134]

loc_286F:				; DATA XREF: .debug_loc:000136C7o
		mov	[esp+17Ch+var_174], edx
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_287C:				; DATA XREF: .debug_info:00009B60o
		mov	eax, [ebp+4]
		mov	[esp+17Ch+var_174], eax
		mov	[esp+17Ch+var_178], edi
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_288C:				; DATA XREF: .debug_info:00009B80o
		add	esi, edi
		jmp	loc_29FC
; ---------------------------------------------------------------------------
unk_2893	db  90h	; ê		; DATA XREF: .debug_loc:00013649o
					; .debug_loc:00013688o
; ---------------------------------------------------------------------------

loc_2894:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		mov	[esp+17Ch+var_148], offset _protobuf_c_buffer_simple_append ; jumptable	000027FC case 16
		mov	[esp+17Ch+var_144], 100h
		mov	[esp+17Ch+var_140], 0
		lea	eax, [esp+17Ch+var_120]
		mov	[esp+17Ch+var_13C], eax
		mov	[esp+17Ch+var_138], 0
		mov	eax, [ebp+0]

loc_28BF:				; DATA XREF: .debug_loc:off_1387Co
		or	byte ptr [esp+17Ch+var_134], 2
		test	eax, eax

loc_28C6:				; DATA XREF: .debug_info:00007E85o
		jz	loc_2D34
		lea	edx, [esp+17Ch+var_148]
		mov	[esp+17Ch+var_178], edx
		mov	[esp+17Ch+var_17C], eax

loc_28D7:				; DATA XREF: .debug_loc:00013880o
		call	_protobuf_c_message_pack_to_buffer

loc_28DC:				; DATA XREF: .debug_info:00009BF8o
		mov	edi, eax

loc_28DE:				; DATA XREF: .debug_loc:off_13826o
		lea	eax, [esp+17Ch+var_134]

loc_28E2:				; DATA XREF: .debug_loc:0001382Ao
		add	eax, esi

loc_28E4:				; DATA XREF: .debug_info:00009BC6o
					; .debug_loc:off_138A6o ...
		cmp	edi, 7Fh ; ''
		jbe	loc_2E1D

loc_28ED:				; DATA XREF: .debug_ranges:0001A01Co
		mov	edx, edi
		or	dl, 80h

loc_28F2:				; DATA XREF: .debug_ranges:0001A020o
		mov	[eax], dl

loc_28F4:				; DATA XREF: .debug_loc:0001399Eo
		mov	ecx, edi
		shr	ecx, 7

loc_28F9:				; DATA XREF: .debug_loc:000138F4o
		cmp	ecx, 7Fh ; ''
		jbe	loc_2C90

loc_2902:				; DATA XREF: .debug_ranges:0001A024o
		or	cl, 80h

loc_2905:				; DATA XREF: .debug_ranges:0001A028o
		mov	[eax+1], cl
		mov	ecx, edi
		shr	ecx, 0Eh
		cmp	ecx, 7Fh ; ''
		jbe	loc_2DAD

loc_2916:				; DATA XREF: .debug_ranges:0001A02Co
		or	cl, 80h

loc_2919:				; DATA XREF: .debug_ranges:0001A030o
		mov	[eax+2], cl
		mov	ecx, edi
		shr	ecx, 15h
		cmp	ecx, 7Fh ; ''
		jbe	loc_2DFF

loc_292A:				; DATA XREF: .debug_ranges:0001A034o
		or	cl, 80h

loc_292D:				; DATA XREF: .debug_ranges:0001A038o
		mov	[eax+3], cl
		mov	ecx, edi
		shr	ecx, 1Ch
		mov	edx, 4
		xchg	ax, ax

loc_293C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+4EDj
					; _required_field_pack_to_buffer_isra_13+598j ...
		mov	[eax+edx], cl

loc_293F:				; DATA XREF: .debug_ranges:00019FECo
					; .debug_ranges:0001A03Co
		lea	esi, [esi+edx+1]
		lea	ecx, [esp+17Ch+var_134]
		mov	[esp+17Ch+var_174], ecx
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx

loc_2952:				; DATA XREF: .debug_loc:000138AAo
		call	dword ptr [ebx]

loc_2954:				; DATA XREF: .debug_info:00009C0Eo
		mov	eax, [esp+17Ch+var_13C]
		mov	[esp+17Ch+var_174], eax
		mov	[esp+17Ch+var_178], edi
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_2965:				; DATA XREF: .debug_info:00009C2Eo
		add	esi, edi
		mov	ebx, [esp+17Ch+var_138]
		test	ebx, ebx
		jz	loc_29FC
		mov	eax, [esp+17Ch+var_13C]
		mov	[esp+17Ch+var_178], eax
		mov	[esp+17Ch+var_17C], offset dword_4D24
		call	off_4D18

loc_2988:				; DATA XREF: .debug_info:00009C46o
					; .debug_info:00007F52o
		jmp	short loc_29FC
; ---------------------------------------------------------------------------
		align 4

loc_298C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		lea	eax, [esp+17Ch+var_134]	; jumptable 000027FC case 0
		add	eax, esi
		mov	edx, [ebp+0]

loc_2995:				; DATA XREF: .debug_info:00009C5Bo
					; .debug_loc:off_13A32o ...
		test	edx, edx
		jns	loc_2CD0

loc_299D:				; DATA XREF: .debug_info:00009C81o
					; .debug_loc:off_13AB3o ...
		mov	ecx, edx
		or	ecx, 0FFFFFF80h
		mov	[eax], cl
		mov	ecx, edx
		sar	ecx, 7
		or	ecx, 0FFFFFF80h
		mov	[eax+1], cl
		mov	ecx, edx
		sar	ecx, 0Eh
		or	ecx, 0FFFFFF80h
		mov	[eax+2], cl
		mov	ecx, edx
		sar	ecx, 15h
		or	ecx, 0FFFFFF80h
		mov	[eax+3], cl
		sar	edx, 1Ch

loc_29C8:				; DATA XREF: .debug_loc:00013A6Ao
					; .debug_loc:00013ACAo
		or	edx, 0FFFFFF80h
		mov	[eax+4], dl

loc_29CE:				; DATA XREF: .debug_info:00007FA2o
		mov	byte ptr [eax+8], 0FFh
		mov	byte ptr [eax+7], 0FFh
		mov	byte ptr [eax+6], 0FFh
		mov	byte ptr [eax+5], 0FFh
		mov	byte ptr [eax+9], 1
		mov	ecx, 0Ah

loc_29E7:				; CODE XREF: _required_field_pack_to_buffer_isra_13+587j
					; DATA XREF: .debug_info:00009C85o ...
		add	esi, ecx

loc_29E9:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_2A9Fj
					; DATA XREF: .debug_loc:00013A36o
		lea	edi, [esp+17Ch+var_134]
		mov	[esp+17Ch+var_174], edi
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_29FA:				; DATA XREF: .debug_info:00009F0Co
		xchg	ax, ax

loc_29FC:				; CODE XREF: _required_field_pack_to_buffer_isra_13+E6j
					; _required_field_pack_to_buffer_isra_13+1C5j ...
		mov	eax, esi
		mov	edi, [esp+17Ch+var_20]
		xor	edi, dword ptr ds:___stack_chk_guard
		jnz	loc_2E53
		add	esp, 16Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_2A1C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o
		lea	edx, [esp+17Ch+var_134]	; jumptable 000027FC case 1
		add	edx, esi
		mov	eax, [ebp+0]

loc_2A25:				; DATA XREF: .debug_info:00009CDBo
					; .debug_info:00009D01o ...
		test	eax, eax
		js	loc_2D5B
		shl	eax, 1

loc_2A2F:				; CODE XREF: _required_field_pack_to_buffer_isra_13+5B9j
					; DATA XREF: .debug_info:00009D1Fo ...
		cmp	eax, 7Fh ; ''
		jbe	loc_2CC0

loc_2A38:				; DATA XREF: .debug_ranges:0001A174o
		mov	ecx, eax
		or	cl, 80h

loc_2A3D:				; DATA XREF: .debug_ranges:0001A178o
		mov	[edx], cl

loc_2A3F:				; DATA XREF: .debug_loc:00013CF3o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2C84

loc_2A4B:				; DATA XREF: .debug_ranges:0001A17Co
		mov	ecx, eax
		or	cl, 80h

loc_2A50:				; DATA XREF: .debug_ranges:0001A180o
		mov	[edx+1], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2D99

loc_2A5F:				; DATA XREF: .debug_ranges:0001A184o
		mov	ecx, eax
		or	cl, 80h

loc_2A64:				; DATA XREF: .debug_ranges:0001A188o
		mov	[edx+2], cl

loc_2A67:				; DATA XREF: .debug_info:00007FF4o
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2E13

loc_2A73:				; DATA XREF: .debug_ranges:0001A18Co
		mov	ecx, eax
		or	cl, 80h

loc_2A78:				; DATA XREF: .debug_ranges:0001A190o
		mov	[edx+3], cl
		shr	eax, 7
		mov	ecx, 4
		nop

loc_2A84:				; CODE XREF: _required_field_pack_to_buffer_isra_13+4E1j
					; _required_field_pack_to_buffer_isra_13+51Aj ...
		mov	[edx+ecx], al

loc_2A87:				; DATA XREF: .debug_ranges:0001A0F4o
					; .debug_ranges:0001A144o ...
		lea	esi, [esi+ecx+1]
		jmp	short loc_2AB7
; ---------------------------------------------------------------------------
unk_2A8D	db  8Dh	; ç		; DATA XREF: .debug_loc:00013BC5o
					; .debug_loc:00013C75o	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_2A90:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o
		or	byte ptr [esp+17Ch+var_134], 5 ; jumptable 000027FC cases 2,7,10

loc_2A95:				; DATA XREF: .debug_info:00009D52o
					; .debug_loc:off_13D7Bo ...
		mov	eax, [ebp+0]
		mov	[esp+esi+17Ch+var_134],	eax

loc_2A9C:				; DATA XREF: .debug_info:00009D56o
		add	esi, 4

loc_2A9F:				; DATA XREF: .debug_loc:00013D93o
		jmp	loc_29E9
; ---------------------------------------------------------------------------

loc_2AA4:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		lea	ecx, [esp+17Ch+var_134]	; jumptable 000027FC cases 3,8
		add	ecx, esi
		mov	eax, [ebp+0]
		mov	edx, [ebp+4]
		call	_uint64_pack

loc_2AB5:				; DATA XREF: .debug_info:00009F2Bo
		add	esi, eax

loc_2AB7:				; CODE XREF: _required_field_pack_to_buffer_isra_13+2E3j
		lea	ecx, [esp+17Ch+var_134]
		mov	[esp+17Ch+var_174], ecx
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_2AC8:				; DATA XREF: .debug_info:00009F46o
		jmp	loc_29FC
; ---------------------------------------------------------------------------
		align 10h

loc_2AD0:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o
		lea	ecx, [esp+17Ch+var_134]	; jumptable 000027FC case 4
		add	ecx, esi
		mov	eax, [ebp+0]
		mov	edx, [ebp+4]

loc_2ADC:				; DATA XREF: .debug_info:00009D79o
					; .debug_info:00009D9Fo ...
		test	edx, edx
		js	loc_2D66
		add	eax, eax

loc_2AE6:				; DATA XREF: .debug_loc:00013DF5o
		adc	edx, edx

loc_2AE8:				; CODE XREF: _required_field_pack_to_buffer_isra_13+5CFj
					; DATA XREF: .debug_ranges:0001A1DCo ...
		call	_uint64_pack

loc_2AED:				; DATA XREF: .debug_info:00009DB9o
					; .debug_ranges:0001A1C4o
		add	esi, eax

loc_2AEF:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_2BABj
		lea	edx, [esp+17Ch+var_134]

loc_2AF3:				; DATA XREF: .debug_info:000080E7o
		mov	[esp+17Ch+var_174], edx
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx

loc_2AFE:				; DATA XREF: .debug_info:00007DE4o
		call	dword ptr [ebx]

loc_2B00:				; DATA XREF: .debug_info:00009F66o
		jmp	loc_29FC
; ---------------------------------------------------------------------------
		align 4

loc_2B08:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o
		or	byte ptr [esp+17Ch+var_134], 1 ; jumptable 000027FC cases 5,9,11

loc_2B0D:				; DATA XREF: .debug_info:00009DC7o
					; .debug_loc:off_13E19o ...
		mov	eax, [ebp+0]
		mov	edx, [ebp+4]
		mov	[esp+esi+17Ch+var_134],	eax
		mov	[esp+esi+17Ch+var_130],	edx

loc_2B1B:				; DATA XREF: .debug_info:00009DCBo
		add	esi, 8

loc_2B1E:				; CODE XREF: _required_field_pack_to_buffer_isra_13+3F3j
					; DATA XREF: .debug_loc:00013E1Do ...
		lea	eax, [esp+17Ch+var_134]
		mov	[esp+17Ch+var_174], eax
		mov	[esp+17Ch+var_178], esi

loc_2B2A:				; DATA XREF: .debug_info:000089E4o
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_2B2F:				; DATA XREF: .debug_info:00009F86o
		jmp	loc_29FC
; ---------------------------------------------------------------------------

loc_2B34:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o
		lea	edx, [esp+17Ch+var_134]	; jumptable 000027FC cases 6,13
		add	edx, esi
		mov	eax, [ebp+0]

loc_2B3D:				; DATA XREF: .debug_info:00009DEEo
					; .debug_loc:off_13E49o ...
		cmp	eax, 7Fh ; ''
		jbe	loc_2CC8

loc_2B46:				; DATA XREF: .debug_ranges:0001A224o
		mov	ecx, eax
		or	cl, 80h

loc_2B4B:				; DATA XREF: .debug_ranges:0001A228o
		mov	[edx], cl

loc_2B4D:				; DATA XREF: .debug_loc:00013ECBo
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2C78

loc_2B59:				; DATA XREF: .debug_ranges:0001A22Co
		mov	ecx, eax
		or	cl, 80h

loc_2B5E:				; DATA XREF: .debug_ranges:0001A230o
		mov	[edx+1], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2D8F

loc_2B6D:				; DATA XREF: .debug_ranges:0001A234o
		mov	ecx, eax
		or	cl, 80h

loc_2B72:				; DATA XREF: .debug_ranges:0001A238o
		mov	[edx+2], cl
		shr	eax, 7
		cmp	eax, 7Fh ; ''
		jbe	loc_2E09

loc_2B81:				; DATA XREF: .debug_ranges:0001A23Co
		mov	ecx, eax
		or	cl, 80h

loc_2B86:				; DATA XREF: .debug_ranges:0001A240o
		mov	[edx+3], cl
		shr	eax, 7

loc_2B8C:				; DATA XREF: .debug_info:000084F0o
		mov	ecx, 4
		lea	esi, [esi+0]

loc_2B94:				; CODE XREF: _required_field_pack_to_buffer_isra_13+4D5j
					; _required_field_pack_to_buffer_isra_13:loc_2CCAj ...
		mov	[edx+ecx], al

loc_2B97:				; DATA XREF: .debug_ranges:0001A1F4o
					; .debug_ranges:0001A244o
		lea	esi, [esi+ecx+1]
		jmp	short loc_2B1E
; ---------------------------------------------------------------------------
unk_2B9D	db  8Dh	; ç		; DATA XREF: .debug_loc:00013E4Do
					; .debug_loc:00013E8Co	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_2BA0:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		mov	edi, [ebp+0]	; jumptable 000027FC case 12
		test	edi, edi
		setnz	byte ptr [esp+esi+17Ch+var_134]

loc_2BAA:				; DATA XREF: .debug_info:00009E28o
		inc	esi

loc_2BAB:				; DATA XREF: .debug_loc:00013F57o
		jmp	loc_2AEF
; ---------------------------------------------------------------------------

loc_2BB0:				; CODE XREF: _required_field_pack_to_buffer_isra_13+54j
					; DATA XREF: .rdata:off_5050o ...
		mov	edx, [ebp+0]	; jumptable 000027FC case 14

loc_2BB3:				; DATA XREF: .debug_loc:off_13F97o
		test	edx, edx
		jz	loc_2DC3
		xor	eax, eax

loc_2BBD:				; DATA XREF: .debug_info:00008510o
		mov	ecx, 0FFFFFFFFh
		mov	edi, edx
		repne scasb

loc_2BC6:				; DATA XREF: .debug_loc:00013F9Bo
		not	ecx
		lea	ebp, [ecx-1]

loc_2BCB:				; DATA XREF: .debug_loc:off_13FB5o
		or	byte ptr [esp+17Ch+var_134], 2
		lea	eax, [esp+17Ch+var_134]
		add	eax, esi

loc_2BD6:				; DATA XREF: .debug_info:00009E66o
					; .debug_loc:off_14000o ...
		cmp	ebp, 7Fh ; ''
		jbe	loc_2D48

loc_2BDF:				; DATA XREF: .debug_ranges:0001A2D4o
		mov	ecx, ebp
		or	cl, 80h

loc_2BE4:				; DATA XREF: .debug_ranges:0001A2D8o
		mov	[eax], cl

loc_2BE6:				; DATA XREF: .debug_loc:000140DCo
		mov	edi, ebp
		shr	edi, 7

loc_2BEB:				; DATA XREF: .debug_loc:00014043o
		cmp	edi, 7Fh ; ''
		jbe	loc_2CA8

loc_2BF4:				; DATA XREF: .debug_ranges:0001A2DCo
		mov	ecx, edi
		or	cl, 80h

loc_2BF9:				; DATA XREF: .debug_ranges:0001A2E0o
		mov	[eax+1], cl
		mov	edi, ebp
		shr	edi, 0Eh
		cmp	edi, 7Fh ; ''

loc_2C04:				; DATA XREF: .debug_info:00008534o
		jbe	loc_2D7C

loc_2C0A:				; DATA XREF: .debug_ranges:0001A2E4o
		mov	ecx, edi
		or	cl, 80h

loc_2C0F:				; DATA XREF: .debug_ranges:0001A2E8o
		mov	[eax+2], cl
		mov	edi, ebp
		shr	edi, 15h
		cmp	edi, 7Fh ; ''
		jbe	loc_2DE2

loc_2C20:				; DATA XREF: .debug_ranges:0001A2ECo
		mov	ecx, edi
		or	cl, 80h

loc_2C25:				; DATA XREF: .debug_ranges:0001A2F0o
		mov	[eax+3], cl
		mov	ecx, ebp
		shr	ecx, 1Ch
		mov	[esp+17Ch+var_16C], cl
		mov	[esp+17Ch+var_154], 4

loc_2C39:				; DATA XREF: .debug_loc:00013FB9o
		lea	esi, [esi+0]

loc_2C3C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+50Ej
					; _required_field_pack_to_buffer_isra_13+5AEj ...
		mov	cl, [esp+17Ch+var_16C]
		mov	edi, [esp+17Ch+var_154]
		mov	[eax+edi], cl

loc_2C47:				; DATA XREF: .debug_ranges:0001A2A4o
					; .debug_ranges:0001A2F4o
		lea	esi, [esi+edi+1]
		lea	eax, [esp+17Ch+var_134]

loc_2C4F:				; DATA XREF: .debug_loc:00014004o
		mov	[esp+17Ch+var_174], eax
		mov	[esp+17Ch+var_178], esi
		mov	[esp+17Ch+var_17C], ebx
		mov	[esp+17Ch+var_150], edx
		call	dword ptr [ebx]

loc_2C60:				; DATA XREF: .debug_info:00009E98o
		mov	edx, [esp+17Ch+var_150]
		mov	[esp+17Ch+var_174], edx
		mov	[esp+17Ch+var_178], ebp
		mov	[esp+17Ch+var_17C], ebx
		call	dword ptr [ebx]

loc_2C71:				; DATA XREF: .debug_info:00009EB8o
		add	esi, ebp
		jmp	loc_29FC
; ---------------------------------------------------------------------------

loc_2C78:				; CODE XREF: _required_field_pack_to_buffer_isra_13+3ABj
					; DATA XREF: .debug_loc:00013E54o ...
		mov	ecx, 1
		jmp	loc_2B94
; ---------------------------------------------------------------------------
unk_2C82	db  66h	; f		; DATA XREF: .debug_loc:00013BCCo
					; .debug_loc:00013C7Co	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2C84:				; CODE XREF: _required_field_pack_to_buffer_isra_13+29Dj
					; DATA XREF: .debug_ranges:0001A0F8o ...
		mov	ecx, 1
		jmp	loc_2A84
; ---------------------------------------------------------------------------
unk_2C8E	db  66h	; f		; DATA XREF: .debug_loc:00013BD0o
					; .debug_loc:00013C80o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2C90:				; CODE XREF: _required_field_pack_to_buffer_isra_13+154j
					; DATA XREF: .debug_ranges:00019FB8o ...
		mov	edx, 1
		jmp	loc_293C
; ---------------------------------------------------------------------------
unk_2C9A	db  66h	; f		; DATA XREF: .debug_loc:00013650o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2C9C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+81j
					; DATA XREF: .debug_ranges:00019F08o ...
		mov	ecx, 1

loc_2CA1:				; DATA XREF: .debug_info:00008700o
		jmp	loc_2864
; ---------------------------------------------------------------------------
unk_2CA6	db  66h	; f		; DATA XREF: .debug_loc:00013654o
					; .debug_loc:00013FC0o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2CA8:				; CODE XREF: _required_field_pack_to_buffer_isra_13+446j
		mov	ecx, edi
		mov	[esp+17Ch+var_16C], cl

loc_2CAE:				; DATA XREF: .debug_ranges:00019F0Co
					; .debug_ranges:00019F3Co ...
		mov	[esp+17Ch+var_154], 1
		jmp	short loc_2C3C
; ---------------------------------------------------------------------------

loc_2CB8:				; CODE XREF: _required_field_pack_to_buffer_isra_13+6Fj
					; DATA XREF: .debug_loc:00013FC4o ...
		xor	ecx, ecx
		jmp	loc_2864
; ---------------------------------------------------------------------------
		align 10h

loc_2CC0:				; CODE XREF: _required_field_pack_to_buffer_isra_13+28Aj
					; DATA XREF: .debug_ranges:00019F14o ...
		xor	ecx, ecx
		jmp	loc_2A84
; ---------------------------------------------------------------------------
		align 4

loc_2CC8:				; CODE XREF: _required_field_pack_to_buffer_isra_13+398j
					; DATA XREF: .debug_ranges:0001A104o ...
		xor	ecx, ecx

loc_2CCA:				; DATA XREF: .debug_info:00008924o
		jmp	loc_2B94
; ---------------------------------------------------------------------------
unk_2CCF	db  90h	; ê		; DATA XREF: .debug_loc:off_13AE5o
					; .debug_loc:off_13B0Eo ...
; ---------------------------------------------------------------------------

loc_2CD0:				; CODE XREF: _required_field_pack_to_buffer_isra_13+1EFj
					; DATA XREF: .debug_info:00009CA8o ...
		cmp	edx, 7Fh ; ''
		jbe	loc_2DB7

loc_2CD9:				; DATA XREF: .debug_ranges:0001A0B4o
		mov	ecx, edx
		or	cl, 80h

loc_2CDE:				; DATA XREF: .debug_ranges:0001A0B8o
		mov	[eax], cl

loc_2CE0:				; DATA XREF: .debug_loc:00013B3Bo
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_2E26

loc_2CEC:				; DATA XREF: .debug_ranges:0001A0BCo
		mov	ecx, edx
		or	cl, 80h

loc_2CF1:				; DATA XREF: .debug_ranges:0001A0C0o
		mov	[eax+1], cl
		shr	edx, 7
		cmp	edx, 7Fh ; ''

loc_2CFA:				; DATA XREF: .debug_info:0000873Co
		jbe	loc_2E35

loc_2D00:				; DATA XREF: .debug_ranges:0001A0C4o
		mov	ecx, edx
		or	cl, 80h

loc_2D05:				; DATA XREF: .debug_ranges:0001A0C8o
		mov	[eax+2], cl
		shr	edx, 7
		cmp	edx, 7Fh ; ''
		jbe	loc_2E44

loc_2D14:				; DATA XREF: .debug_ranges:0001A0CCo
		mov	ecx, edx
		or	cl, 80h

loc_2D19:				; DATA XREF: .debug_ranges:0001A0D0o
		mov	[eax+3], cl

loc_2D1C:				; DATA XREF: .debug_info:0000830Co
		shr	edx, 7
		mov	ecx, 5
		mov	edi, 4
		lea	esi, [esi+0]

loc_2D2C:				; CODE XREF: _required_field_pack_to_buffer_isra_13+616j
					; _required_field_pack_to_buffer_isra_13+688j ...
		mov	[eax+edi], dl
		jmp	loc_29E7
; ---------------------------------------------------------------------------

loc_2D34:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_28C6j
					; DATA XREF: .debug_loc:00013AE9o ...
		lea	eax, [esp+17Ch+var_134]
		add	eax, esi
		xor	ecx, ecx
		xor	edi, edi
		xor	edx, edx
		jmp	loc_293C
; ---------------------------------------------------------------------------
		align 4

loc_2D48:				; CODE XREF: _required_field_pack_to_buffer_isra_13+431j
		mov	ecx, ebp
		mov	[esp+17Ch+var_16C], cl

loc_2D4E:				; DATA XREF: .debug_ranges:00019FC4o
					; .debug_ranges:0001A280o ...
		mov	[esp+17Ch+var_154], 0
		jmp	loc_2C3C
; ---------------------------------------------------------------------------

loc_2D5B:				; CODE XREF: _required_field_pack_to_buffer_isra_13+27Fj
					; DATA XREF: .debug_ranges:0001A108o ...
		neg	eax
		lea	eax, [eax+eax-1]
		jmp	loc_2A2F
; ---------------------------------------------------------------------------

loc_2D66:				; CODE XREF: _required_field_pack_to_buffer_isra_13+336j
					; DATA XREF: .debug_ranges:0001A10Co ...
		neg	eax
		adc	edx, 0
		neg	edx
		add	eax, eax
		adc	edx, edx
		add	eax, 0FFFFFFFFh
		adc	edx, 0FFFFFFFFh
		jmp	loc_2AE8
; ---------------------------------------------------------------------------

loc_2D7C:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_2C04j
					; DATA XREF: .debug_info:000087F8o ...
		mov	ecx, edi
		mov	[esp+17Ch+var_16C], cl

loc_2D82:				; DATA XREF: .debug_ranges:0001A1CCo
					; .debug_ranges:0001A1E4o ...
		mov	[esp+17Ch+var_154], 2
		jmp	loc_2C3C
; ---------------------------------------------------------------------------

loc_2D8F:				; CODE XREF: _required_field_pack_to_buffer_isra_13+3BFj
					; DATA XREF: .debug_ranges:0001A208o ...
		mov	ecx, 2

loc_2D94:				; DATA XREF: .debug_info:00008E60o
		jmp	loc_2B94
; ---------------------------------------------------------------------------

loc_2D99:				; CODE XREF: _required_field_pack_to_buffer_isra_13+2B1j
					; DATA XREF: .debug_ranges:0001A110o ...
		mov	ecx, 2
		jmp	loc_2A84
; ---------------------------------------------------------------------------

loc_2DA3:				; CODE XREF: _required_field_pack_to_buffer_isra_13+94j
					; DATA XREF: .debug_ranges:00019F18o ...
		mov	ecx, 2
		jmp	loc_2864
; ---------------------------------------------------------------------------

loc_2DAD:				; CODE XREF: _required_field_pack_to_buffer_isra_13+168j
					; DATA XREF: .debug_ranges:00019F1Co ...
		mov	edx, 2
		jmp	loc_293C
; ---------------------------------------------------------------------------

loc_2DB7:				; CODE XREF: _required_field_pack_to_buffer_isra_13+52Bj
					; DATA XREF: .debug_loc:00013AF0o ...
		mov	ecx, 1
		xor	edi, edi
		jmp	loc_2D2C
; ---------------------------------------------------------------------------

loc_2DC3:				; CODE XREF: _required_field_pack_to_buffer_isra_13+40Dj
					; DATA XREF: .debug_loc:00013AF4o ...
		or	byte ptr [esp+17Ch+var_134], 2
		lea	eax, [esp+17Ch+var_134]
		add	eax, esi
		mov	[esp+17Ch+var_16C], 0
		xor	ebp, ebp
		mov	[esp+17Ch+var_154], 0
		jmp	loc_2C3C
; ---------------------------------------------------------------------------

loc_2DE2:				; CODE XREF: _required_field_pack_to_buffer_isra_13+472j
		mov	ecx, edi
		mov	[esp+17Ch+var_16C], cl

loc_2DE8:				; DATA XREF: .debug_ranges:0001A2C0o
					; .debug_ranges:0001A310o
		mov	[esp+17Ch+var_154], 3
		jmp	loc_2C3C
; ---------------------------------------------------------------------------

loc_2DF5:				; CODE XREF: _required_field_pack_to_buffer_isra_13+A7j
					; DATA XREF: .debug_ranges:00019F20o ...
		mov	ecx, 3
		jmp	loc_2864
; ---------------------------------------------------------------------------

loc_2DFF:				; CODE XREF: _required_field_pack_to_buffer_isra_13+17Cj
					; DATA XREF: .debug_ranges:00019F24o ...
		mov	edx, 3
		jmp	loc_293C
; ---------------------------------------------------------------------------

loc_2E09:				; CODE XREF: _required_field_pack_to_buffer_isra_13+3D3j
					; DATA XREF: .debug_ranges:00019FD4o ...
		mov	ecx, 3

loc_2E0E:				; DATA XREF: .debug_info:00008D17o
		jmp	loc_2B94
; ---------------------------------------------------------------------------

loc_2E13:				; CODE XREF: _required_field_pack_to_buffer_isra_13+2C5j
					; DATA XREF: .debug_ranges:0001A118o ...
		mov	ecx, 3
		jmp	loc_2A84
; ---------------------------------------------------------------------------

loc_2E1D:				; CODE XREF: _required_field_pack_to_buffer_isra_13+13Fj
		mov	ecx, edi

loc_2E1F:				; DATA XREF: .debug_ranges:00019FD8o
					; .debug_ranges:0001A008o ...
		xor	edx, edx
		jmp	loc_293C
; ---------------------------------------------------------------------------

loc_2E26:				; CODE XREF: _required_field_pack_to_buffer_isra_13+53Ej
					; DATA XREF: .debug_ranges:00019FDCo ...
		mov	ecx, 2
		mov	edi, 1
		jmp	loc_2D2C
; ---------------------------------------------------------------------------

loc_2E35:				; CODE XREF: _required_field_pack_to_buffer_isra_13:loc_2CFAj
		mov	ecx, 3
		mov	edi, 2
		jmp	loc_2D2C
; ---------------------------------------------------------------------------

loc_2E44:				; CODE XREF: _required_field_pack_to_buffer_isra_13+566j
		mov	ecx, 4
		mov	edi, 3
		jmp	loc_2D2C
; ---------------------------------------------------------------------------

loc_2E53:				; CODE XREF: _required_field_pack_to_buffer_isra_13+263j
					; DATA XREF: .debug_ranges:0001A084o ...
		call	__imp____stack_chk_fail
_required_field_pack_to_buffer_isra_13 endp


; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_init_generic
_protobuf_c_message_init_generic proc near ; CODE XREF:	_protobuf_c_message_unpack+79Ep
					; DATA XREF: .debug_info:00009AC6o ...

var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_2E59:				; DATA XREF: .debug_loc:0001417Ao
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_20], eax
		xor	eax, eax
		mov	ecx, [ebx+14h]
		mov	edi, esi
		rep stosb
		mov	[esi], ebx

loc_2E7B:				; DATA XREF: .debug_loc:off_1420Eo
		mov	ebp, [ebx+18h]
		test	ebp, ebp
		jz	short loc_2EBD
		xor	edx, edx

loc_2E84:				; CODE XREF: _protobuf_c_message_init_generic+63j
					; DATA XREF: .debug_loc:00014212o
		mov	eax, [ebx+1Ch]
		add	eax, ecx
		mov	edi, [eax+1Ch]
		test	edi, edi
		jz	short loc_2EB4	; jumptable 00002EA4 default case
		cmp	dword ptr [eax+8], 2
		jz	short loc_2EB4	; jumptable 00002EA4 default case

loc_2E96:				; DATA XREF: .debug_ranges:off_1A320o
		mov	ebp, [eax+14h]
		add	ebp, esi

loc_2E9B:				; DATA XREF: .debug_loc:off_1422Do
					; .debug_loc:off_1424Bo
		cmp	dword ptr [eax+0Ch], 10h ; switch 17 cases
		ja	short loc_2EB4	; jumptable 00002EA4 default case
		mov	eax, [eax+0Ch]
		jmp	ds:off_5094[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_2EAC:				; CODE XREF: _protobuf_c_message_init_generic+4Cj
					; DATA XREF: .rdata:off_5094o
		mov	eax, [edi]	; jumptable 00002EA4 cases 0-2,6,7,10,12,13
		mov	[ebp+0], eax

loc_2EB1:				; DATA XREF: .debug_loc:00014231o
					; .debug_loc:0001424Fo
		lea	esi, [esi+0]

loc_2EB4:				; CODE XREF: _protobuf_c_message_init_generic+36j
					; _protobuf_c_message_init_generic+3Cj	...
		inc	edx		; jumptable 00002EA4 default case
		add	ecx, 30h ; '0'
		cmp	[ebx+18h], edx
		ja	short loc_2E84

loc_2EBD:				; CODE XREF: _protobuf_c_message_init_generic+28j
					; DATA XREF: .debug_loc:0001421Eo
		mov	eax, [esp+2Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_2EE9
		add	esp, 1Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_2ED1	db  8Dh	; ç		; DATA XREF: .debug_loc:00014238o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_2ED4:				; CODE XREF: _protobuf_c_message_init_generic+4Cj
					; DATA XREF: .rdata:off_5094o ...
		mov	eax, [edi]	; jumptable 00002EA4 cases 3-5,8,9,11,15
		mov	[ebp+0], eax
		mov	eax, [edi+4]
		mov	[ebp+4], eax
		jmp	short loc_2EB4	; jumptable 00002EA4 default case
; ---------------------------------------------------------------------------
		align 4

loc_2EE4:				; CODE XREF: _protobuf_c_message_init_generic+4Cj
					; DATA XREF: .rdata:off_5094o
		mov	[ebp+0], edi	; jumptable 00002EA4 cases 14,16
		jmp	short loc_2EB4	; jumptable 00002EA4 default case
; ---------------------------------------------------------------------------

loc_2EE9:				; CODE XREF: _protobuf_c_message_init_generic+6Fj
					; DATA XREF: .debug_loc:0001423Co ...
		call	__imp____stack_chk_fail
_protobuf_c_message_init_generic endp

; ---------------------------------------------------------------------------
unk_2EEE	db  66h	; f		; DATA XREF: .debug_info:00009FD9o
					; .debug_info:0000A03Co
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_free_unpacked
_protobuf_c_message_free_unpacked proc near
					; CODE XREF: _protobuf_c_message_free_unpacked:loc_30B2p
					; _protobuf_c_message_free_unpacked+24Ep ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_2EF1:				; DATA XREF: .debug_loc:0001426Do
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, [esp+4Ch+arg_0]
		mov	esi, [esp+4Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	ebp, [edi]
		mov	[esp+4Ch+var_38], ebp

loc_2F10:				; DATA XREF: .debug_loc:off_14366o
		cmp	dword ptr [ebp+0], 28AAEEF9h
		jnz	loc_316B
		test	esi, esi
		jz	loc_3154

loc_2F25:				; CODE XREF: _protobuf_c_message_free_unpacked+269j
					; DATA XREF: .debug_loc:00014307o
		mov	dword ptr [edi], 0

loc_2F2B:				; DATA XREF: .debug_loc:off_143A7o
		xor	ebx, ebx
		mov	eax, [esp+4Ch+var_38]
		mov	eax, [eax+18h]
		test	eax, eax
		jz	loc_2FCE
		mov	[esp+4Ch+var_34], edi
		mov	edi, esi
		jmp	short loc_2F6C
; ---------------------------------------------------------------------------

loc_2F44:				; CODE XREF: _protobuf_c_message_free_unpacked+8Dj
					; DATA XREF: .debug_loc:0001436Ao ...
		mov	edx, [ecx+0Ch]
		cmp	edx, 0Eh
		jz	loc_303C
		cmp	edx, 0Fh
		jz	loc_306C
		cmp	edx, 10h
		jz	loc_3090

loc_2F62:				; CODE XREF: _protobuf_c_message_free_unpacked+BFj
					; _protobuf_c_message_free_unpacked+158j ...
		inc	ebx
		mov	esi, [esp+4Ch+var_38]
		cmp	[esi+18h], ebx
		jbe	short loc_2FC8

loc_2F6C:				; CODE XREF: _protobuf_c_message_free_unpacked+52j
					; _protobuf_c_message_free_unpacked+D6j
		lea	ecx, [ebx+ebx*2]
		shl	ecx, 4
		mov	esi, [esp+4Ch+var_38]
		add	ecx, [esi+1Ch]
		cmp	dword ptr [ecx+8], 2
		jnz	short loc_2F44

loc_2F7F:				; DATA XREF: .debug_ranges:off_1A338o
		mov	edx, [ecx+10h]
		mov	esi, [esp+4Ch+var_34]
		mov	eax, [esi+edx]

loc_2F89:				; DATA XREF: .debug_loc:off_143F4o
		mov	edx, [ecx+14h]
		mov	esi, [esi+edx]

loc_2F8F:				; DATA XREF: .debug_loc:off_14449o
		mov	ecx, [ecx+0Ch]
		cmp	ecx, 0Eh
		jz	loc_30BC
		cmp	ecx, 0Fh
		jz	loc_30F0
		cmp	ecx, 10h
		jz	loc_3124

loc_2FAD:				; CODE XREF: _protobuf_c_message_free_unpacked+1D0j
					; _protobuf_c_message_free_unpacked+1F9j ...
		test	esi, esi
		jz	short loc_2F62
		mov	[esp+4Ch+var_48], esi
		mov	edx, [edi+10h]
		mov	[esp+4Ch+var_4C], edx
		call	dword ptr [edi+4]

loc_2FBE:				; DATA XREF: .debug_info:0000A146o
					; .debug_ranges:0001A33Co
		inc	ebx
		mov	esi, [esp+4Ch+var_38]

loc_2FC3:				; DATA XREF: .debug_loc:0001444Do
		cmp	[esi+18h], ebx
		ja	short loc_2F6C

loc_2FC8:				; CODE XREF: _protobuf_c_message_free_unpacked+7Aj
		mov	esi, edi
		mov	edi, [esp+4Ch+var_34]

loc_2FCE:				; CODE XREF: _protobuf_c_message_free_unpacked+46j
		mov	eax, [edi+4]
		test	eax, eax
		jz	loc_315E
		mov	edx, [edi+8]
		xor	ebx, ebx
		xchg	ax, ax

loc_2FE0:				; CODE XREF: _protobuf_c_message_free_unpacked+111j
		mov	eax, ebx
		shl	eax, 4
		mov	eax, [edx+eax+0Ch]
		test	eax, eax
		jz	short loc_2FFD
		mov	[esp+4Ch+var_48], eax
		mov	eax, [esi+10h]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [esi+4]
		mov	edx, [edi+8]

loc_2FFD:				; CODE XREF: _protobuf_c_message_free_unpacked+FBj
		inc	ebx

loc_2FFE:				; DATA XREF: .debug_info:000085B8o
		cmp	[edi+4], ebx
		ja	short loc_2FE0

loc_3003:				; CODE XREF: _protobuf_c_message_free_unpacked+271j
		test	edx, edx
		jz	short loc_3014
		mov	[esp+4Ch+var_48], edx
		mov	eax, [esi+10h]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [esi+4]

loc_3014:				; CODE XREF: _protobuf_c_message_free_unpacked+115j
		mov	ebp, [esp+4Ch+var_20]
		xor	ebp, dword ptr ds:___stack_chk_guard
		jnz	loc_3166
		mov	[esp+4Ch+arg_4], edi
		mov	eax, [esi+10h]
		mov	[esp+4Ch+arg_0], eax
		mov	eax, [esi+4]
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	eax
; ---------------------------------------------------------------------------
		align 4

loc_303C:				; CODE XREF: _protobuf_c_message_free_unpacked+5Aj
					; DATA XREF: .debug_info:0000A154o
		mov	edx, [ecx+14h]

loc_303F:				; DATA XREF: .debug_info:00008618o
		mov	eax, [esp+4Ch+var_34]
		mov	edx, [eax+edx]

loc_3046:				; DATA XREF: .debug_loc:off_144C4o
		test	edx, edx
		jz	loc_2F62
		cmp	[ecx+1Ch], edx
		jz	loc_2F62

loc_3057:				; CODE XREF: _protobuf_c_message_free_unpacked+194j
					; _protobuf_c_message_free_unpacked+199j
					; DATA XREF: ...
		mov	[esp+4Ch+var_48], edx
		mov	edx, [edi+10h]
		mov	[esp+4Ch+var_4C], edx
		call	dword ptr [edi+4]
		jmp	loc_2F62
; ---------------------------------------------------------------------------
		align 4

loc_306C:				; CODE XREF: _protobuf_c_message_free_unpacked+63j
		mov	edx, [ecx+14h]

loc_306F:				; DATA XREF: .debug_info:00008664o
		mov	esi, [esp+4Ch+var_34]
		mov	edx, [esi+edx+4]

loc_3077:				; DATA XREF: .debug_loc:off_144D7o
		mov	ecx, [ecx+1Ch]

loc_307A:				; DATA XREF: .debug_loc:off_144EAo
		test	edx, edx
		jz	loc_2F62
		test	ecx, ecx
		jz	short loc_3057
		cmp	[ecx+4], edx
		jnz	short loc_3057
		jmp	loc_2F62
; ---------------------------------------------------------------------------

loc_3090:				; CODE XREF: _protobuf_c_message_free_unpacked+6Cj
					; DATA XREF: .debug_info:0000A176o ...
		mov	edx, [ecx+14h]
		mov	eax, [esp+4Ch+var_34]
		mov	edx, [eax+edx]

loc_309A:				; DATA XREF: .debug_loc:off_144FDo
		test	edx, edx
		jz	loc_2F62
		cmp	[ecx+1Ch], edx

loc_30A5:				; DATA XREF: .debug_info:00008694o
		jz	loc_2F62
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], edx

loc_30B2:				; DATA XREF: .debug_loc:00014501o
		call	_protobuf_c_message_free_unpacked

loc_30B7:				; DATA XREF: .debug_info:0000A1C3o
		jmp	loc_2F62
; ---------------------------------------------------------------------------

loc_30BC:				; CODE XREF: _protobuf_c_message_free_unpacked+A5j
					; DATA XREF: .debug_info:0000A0E1o ...
		xor	ebp, ebp
		test	eax, eax
		jz	loc_2FAD
		mov	[esp+4Ch+var_30], ebx
		mov	ebx, eax

loc_30CC:				; CODE XREF: _protobuf_c_message_free_unpacked+1F3j
					; DATA XREF: .debug_loc:0001446Bo
		mov	eax, [esi+ebp*4]
		test	eax, eax
		jz	short loc_30E0
		mov	[esp+4Ch+var_48], eax
		mov	eax, [edi+10h]
		mov	[esp+4Ch+var_4C], eax

loc_30DD:				; DATA XREF: .debug_info:000086CCo
		call	dword ptr [edi+4]

loc_30E0:				; CODE XREF: _protobuf_c_message_free_unpacked+1E1j
		inc	ebp
		cmp	ebp, ebx
		jnz	short loc_30CC
		mov	ebx, [esp+4Ch+var_30]
		jmp	loc_2FAD
; ---------------------------------------------------------------------------
unk_30EE	db  66h	; f		; DATA XREF: .debug_loc:off_14486o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_30F0:				; CODE XREF: _protobuf_c_message_free_unpacked+AEj
					; DATA XREF: .debug_info:0000A0E5o ...
		test	eax, eax
		jz	loc_2FAD
		xor	ebp, ebp
		mov	[esp+4Ch+var_30], ebx
		mov	ebx, eax

loc_3100:				; CODE XREF: _protobuf_c_message_free_unpacked+228j
					; DATA XREF: .debug_loc:0001448Ao ...
		mov	eax, [esi+ebp*8+4]
		test	eax, eax
		jz	short loc_3115
		mov	[esp+4Ch+var_48], eax
		mov	eax, [edi+10h]
		mov	[esp+4Ch+var_4C], eax
		call	dword ptr [edi+4]

loc_3115:				; CODE XREF: _protobuf_c_message_free_unpacked+216j
		inc	ebp
		cmp	ebp, ebx
		jnz	short loc_3100
		mov	ebx, [esp+4Ch+var_30]
		jmp	loc_2FAD
; ---------------------------------------------------------------------------
unk_3123	db  90h	; ê		; DATA XREF: .debug_loc:off_144A5o
; ---------------------------------------------------------------------------

loc_3124:				; CODE XREF: _protobuf_c_message_free_unpacked+B7j
					; DATA XREF: .debug_info:0000A101o ...
		test	eax, eax
		jz	loc_2FAD
		xor	ebp, ebp
		mov	[esp+4Ch+var_30], ebx
		mov	ebx, eax

loc_3134:				; CODE XREF: _protobuf_c_message_free_unpacked+256j
					; DATA XREF: .debug_loc:000144A9o
		mov	[esp+4Ch+var_48], edi
		mov	eax, [esi+ebp*4]
		mov	[esp+4Ch+var_4C], eax
		call	_protobuf_c_message_free_unpacked

loc_3143:				; DATA XREF: .debug_info:0000A134o
		inc	ebp
		cmp	ebp, ebx
		jnz	short loc_3134
		mov	ebx, [esp+4Ch+var_30]
		jmp	loc_2FAD
; ---------------------------------------------------------------------------
unk_3151	db  8Dh	; ç		; DATA XREF: .debug_loc:00014458o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3154:				; CODE XREF: _protobuf_c_message_free_unpacked+2Fj
					; DATA XREF: .debug_info:0000A11Do ...
		mov	esi, offset _protobuf_c_default_allocator
		jmp	loc_2F25
; ---------------------------------------------------------------------------

loc_315E:				; CODE XREF: _protobuf_c_message_free_unpacked+E3j
		mov	edx, [edi+8]
		jmp	loc_3003
; ---------------------------------------------------------------------------

loc_3166:				; CODE XREF: _protobuf_c_message_free_unpacked+12Ej
		call	__imp____stack_chk_fail
; ---------------------------------------------------------------------------

loc_316B:				; CODE XREF: _protobuf_c_message_free_unpacked+27j
					; DATA XREF: .debug_info:0000A1D5o
		mov	[esp+4Ch+var_44], 99Ch ; unsigned int
		mov	[esp+4Ch+var_48], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+4Ch+var_4C], offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		call	__assert
_protobuf_c_message_free_unpacked endp

; ---------------------------------------------------------------------------
unk_3187	db  90h	; ê		; DATA XREF: .debug_info:0000A070o
					; .debug_info:0000A1DEo

; =============== S U B	R O U T	I N E =======================================


_parse_required_member proc near	; CODE XREF: _protobuf_c_message_unpack:loc_3EE0p
					; _protobuf_c_message_unpack:loc_3F8Ep	...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_3189:				; DATA XREF: .debug_loc:00014514o
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebp, edx
		mov	edx, [esp+5Ch+arg_0]

loc_3195:				; DATA XREF: .debug_loc:000146C9o
					; .debug_loc:000146D0o
		mov	[esp+5Ch+var_34], edx
		mov	ebx, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], ebx
		xor	ebx, ebx
		mov	edi, [eax+0Ch]
		mov	[esp+5Ch+var_44], edi

loc_31AC:				; DATA XREF: .debug_loc:off_147FEo
		mov	edx, [eax+10h]

loc_31AF:				; DATA XREF: .debug_loc:off_14977o
		movzx	esi, byte ptr [eax+4]

loc_31B3:				; DATA XREF: .debug_loc:off_14A29o
		mov	ebx, [eax+8]
		cmp	dword ptr [ebx+0Ch], 10h ; switch 17 cases
		ja	short loc_31D0	; jumptable 000031BF default case

loc_31BC:				; DATA XREF: .debug_info:0000874Ao
		mov	edi, [ebx+0Ch]

loc_31BF:				; DATA XREF: .debug_loc:00014802o
		jmp	ds:off_50D8[edi*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_31C8:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o
		dec	esi		; jumptable 000031BF cases 5,9,11

loc_31C9:				; DATA XREF: .debug_loc:00014A2Do
		jz	loc_34B4
		nop

loc_31D0:				; CODE XREF: _parse_required_member+32j
					; _parse_required_member+66j ...
		xor	eax, eax	; jumptable 000031BF default case

loc_31D2:				; CODE XREF: _parse_required_member:loc_3244j
					; _parse_required_member+13Aj ...
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_3546
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_31E9:				; DATA XREF: .debug_loc:000146D4o
		retn
; ---------------------------------------------------------------------------
unk_31EA	db  66h	; f		; DATA XREF: .debug_loc:00014A34o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_31EC:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o
		test	esi, esi	; jumptable 000031BF cases 0,6,13
		jnz	short loc_31D0	; jumptable 000031BF default case

loc_31F0:				; DATA XREF: .debug_info:0000A2B6o
					; .debug_info:0000A2D8o ...
		mov	al, [edx]
		and	eax, 7Fh

loc_31F5:				; DATA XREF: .debug_loc:off_14B15o
		cmp	[esp+5Ch+var_44], 1
		jbe	short loc_323C
		mov	cl, [edx+1]
		and	ecx, 7Fh
		shl	ecx, 7
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 2
		jz	short loc_323C
		mov	cl, [edx+2]
		and	ecx, 7Fh
		shl	ecx, 0Eh
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 3
		jz	short loc_323C

loc_3220:				; DATA XREF: .debug_info:00008810o
		mov	cl, [edx+3]
		and	ecx, 7Fh
		shl	ecx, 15h
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 4
		jz	short loc_323C
		movzx	edx, byte ptr [edx+4]

loc_3236:				; DATA XREF: .debug_loc:00014AE2o
		shl	edx, 1Ch
		or	eax, edx

loc_323B:				; DATA XREF: .debug_loc:00014B04o
		nop

loc_323C:				; CODE XREF: _parse_required_member+72j
					; _parse_required_member+84j ...
		mov	[ebp+0], eax
		mov	eax, 1

loc_3244:				; DATA XREF: .debug_loc:00014B19o
					; .debug_loc:00014B20o
		jmp	short loc_31D2
; ---------------------------------------------------------------------------
unk_3246	db  66h	; f		; DATA XREF: .debug_loc:00014B24o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_3248:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o
		cmp	esi, 2		; jumptable 000031BF case 16
		jnz	short loc_31D0	; jumptable 000031BF default case

loc_324D:				; DATA XREF: .debug_info:0000A2ECo
					; .debug_loc:off_14B34o
		movzx	esi, byte ptr [eax+5]

loc_3251:				; DATA XREF: .debug_loc:00014A38o
					; .debug_loc:off_14B91o
		mov	edi, [ebx+1Ch]
		mov	[esp+5Ch+var_30], edi

loc_3258:				; DATA XREF: .debug_loc:off_14B66o
		mov	edi, [esp+5Ch+var_34]

loc_325C:				; DATA XREF: .debug_loc:00014B6Ao
		test	edi, edi
		jz	short loc_3298
		mov	edi, [ebp+0]
		mov	[esp+5Ch+var_34], edi
		test	edi, edi
		jz	short loc_3298
		cmp	[esp+5Ch+var_30], edi

loc_326F:				; DATA XREF: .debug_info:0000885Bo
		jz	short loc_3298
		mov	[esp+5Ch+var_58], ecx
		mov	[esp+5Ch+var_5C], edi
		mov	[esp+5Ch+var_38], eax
		mov	[esp+5Ch+var_40], edx
		mov	[esp+5Ch+var_3C], ecx

loc_3284:				; DATA XREF: .debug_info:0000888Do
		call	_protobuf_c_message_free_unpacked

loc_3289:				; DATA XREF: .debug_info:0000A344o
		mov	eax, [esp+5Ch+var_38]
		mov	ebx, [eax+8]
		mov	ecx, [esp+5Ch+var_3C]
		mov	edx, [esp+5Ch+var_40]

loc_3298:				; CODE XREF: _parse_required_member+D6j
					; _parse_required_member+E1j ...
		add	edx, esi
		mov	[esp+5Ch+var_50], edx
		mov	edx, [esp+5Ch+var_44]
		sub	edx, esi
		mov	[esp+5Ch+var_54], edx
		mov	[esp+5Ch+var_58], ecx
		mov	eax, [ebx+18h]

loc_32AF:				; DATA XREF: .debug_info:000088A3o
		mov	[esp+5Ch+var_5C], eax
		call	_protobuf_c_message_unpack

loc_32B7:				; DATA XREF: .debug_info:0000A361o
					; .debug_loc:off_14B47o
		mov	[ebp+0], eax
		test	eax, eax
		setnz	al

loc_32BF:				; DATA XREF: .debug_loc:00014B4Bo
		movzx	eax, al
		jmp	loc_31D2
; ---------------------------------------------------------------------------
unk_32C7	db  90h	; ê		; DATA XREF: .debug_loc:00014B38o
					; .debug_loc:00014B95o
; ---------------------------------------------------------------------------

loc_32C8:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		cmp	esi, 2		; jumptable 000031BF case 15
		jnz	loc_31D0	; jumptable 000031BF default case

loc_32D1:				; DATA XREF: .debug_loc:off_14BA4o
					; .debug_ranges:off_1A350o
		movzx	esi, byte ptr [eax+5]

loc_32D5:				; DATA XREF: .debug_loc:off_14BE7o
		mov	eax, [ebx+1Ch]

loc_32D8:				; DATA XREF: .debug_loc:off_14BC2o
					; .debug_info:000088CDo
		mov	ebx, [esp+5Ch+var_34]
		test	ebx, ebx
		jz	short loc_330D
		mov	ebx, [ebp+4]
		test	ebx, ebx
		jz	short loc_330D
		test	eax, eax
		jz	short loc_32F0
		cmp	ebx, [eax+4]
		jz	short loc_330D

loc_32F0:				; CODE XREF: _parse_required_member+161j
		mov	[esp+5Ch+var_58], ebx
		mov	eax, [ecx+10h]

loc_32F7:				; DATA XREF: .debug_loc:00014BC6o
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_40], edx

loc_32FE:				; DATA XREF: .debug_info:0000851Do
		mov	[esp+5Ch+var_3C], ecx
		call	dword ptr [ecx+4]

loc_3305:				; DATA XREF: .debug_info:0000A3F5o
		mov	ecx, [esp+5Ch+var_3C]
		mov	edx, [esp+5Ch+var_40]

loc_330D:				; CODE XREF: _parse_required_member+156j
					; _parse_required_member+15Dj ...
		mov	ebx, [esp+5Ch+var_44]
		sub	ebx, esi

loc_3313:				; DATA XREF: .debug_loc:00014C09o
		jnz	loc_3514
		mov	dword ptr [ebp+4], 0
		xor	eax, eax

loc_3322:				; CODE XREF: _parse_required_member+3A5j
					; DATA XREF: .debug_ranges:0001A36Co
		add	esi, edx

loc_3324:				; DATA XREF: .debug_loc:00014BEBo
		mov	edi, eax
		mov	ecx, ebx
		rep movsb
		mov	[ebp+0], ebx
		mov	eax, 1
		jmp	loc_31D2
; ---------------------------------------------------------------------------
unk_3337	db  90h	; ê		; DATA XREF: .debug_loc:00014BA8o
; ---------------------------------------------------------------------------

loc_3338:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		test	esi, esi	; jumptable 000031BF case 1
		jnz	loc_31D0	; jumptable 000031BF default case

loc_3340:				; DATA XREF: .debug_info:off_A407o
					; .debug_info:0000A429o ...
		mov	al, [edx]
		and	eax, 7Fh

loc_3345:				; DATA XREF: .debug_loc:off_14C88o
		cmp	[esp+5Ch+var_44], 1
		jbe	short loc_338C
		mov	cl, [edx+1]
		and	ecx, 7Fh
		shl	ecx, 7
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 2
		jz	short loc_338C
		mov	cl, [edx+2]
		and	ecx, 7Fh
		shl	ecx, 0Eh
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 3
		jz	short loc_338C
		mov	cl, [edx+3]
		and	ecx, 7Fh
		shl	ecx, 15h
		or	eax, ecx
		cmp	[esp+5Ch+var_44], 4
		jz	short loc_338C
		movzx	edx, byte ptr [edx+4]

loc_3386:				; DATA XREF: .debug_loc:00014C39o
					; .debug_loc:00014C40o
		shl	edx, 1Ch
		or	eax, edx
		nop

loc_338C:				; CODE XREF: _parse_required_member+1C2j
					; _parse_required_member+1D4j ...
		test	al, 1
		jz	loc_34CC
		shr	eax, 1

loc_3396:				; DATA XREF: .debug_loc:00014C8Co
		not	eax
		jmp	loc_323C
; ---------------------------------------------------------------------------
unk_339D	db  8Dh	; ç		; DATA XREF: .debug_loc:00014C44o
					; .debug_loc:00014C6Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_33A0:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		cmp	esi, 5		; jumptable 000031BF cases 2,7,10
		jnz	loc_31D0	; jumptable 000031BF default case

loc_33A9:				; DATA XREF: .debug_info:off_A45Bo
					; .debug_info:0000A474o ...
		mov	eax, [edx]

loc_33AB:				; DATA XREF: .debug_info:0000A45Fo
					; .debug_info:0000A478o ...
		mov	[ebp+0], eax
		mov	eax, 1

loc_33B3:				; DATA XREF: .debug_loc:00014CBDo
					; .debug_loc:00014CC4o
		jmp	loc_31D2
; ---------------------------------------------------------------------------

loc_33B8:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		test	esi, esi	; jumptable 000031BF cases 3,8
		jnz	loc_31D0	; jumptable 000031BF default case
		mov	eax, [esp+5Ch+var_44]
		call	_parse_uint64

loc_33C9:				; DATA XREF: .debug_info:0000A58Co
		mov	[ebp+0], eax
		mov	[ebp+4], edx
		mov	eax, 1
		jmp	loc_31D2
; ---------------------------------------------------------------------------
		align 4

loc_33DC:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o
		test	esi, esi	; jumptable 000031BF case 4
		jnz	loc_31D0	; jumptable 000031BF default case
		mov	eax, [esp+5Ch+var_44]
		call	_parse_uint64

loc_33ED:				; DATA XREF: .debug_info:0000A48Co
					; .debug_info:0000A5A2o ...
		mov	ecx, eax
		and	ecx, 1
		test	ecx, ecx

loc_33F4:				; DATA XREF: .debug_info:000089FEo
		jz	loc_34D4
		mov	ecx, eax
		mov	ebx, edx
		shrd	ecx, ebx, 1
		shr	ebx, 1
		mov	eax, ecx

loc_3406:				; DATA XREF: .debug_loc:00014CDCo
		not	eax
		mov	edx, ebx
		not	edx

loc_340C:				; CODE XREF: _parse_required_member:loc_34B9j
					; _parse_required_member+352j
					; DATA XREF: ...
		mov	[ebp+0], eax
		mov	[ebp+4], edx
		mov	eax, 1

loc_3417:				; DATA XREF: .debug_loc:00014DC2o
		jmp	loc_31D2
; ---------------------------------------------------------------------------

loc_341C:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		cmp	esi, 2		; jumptable 000031BF case 14
		jnz	loc_31D0	; jumptable 000031BF default case

loc_3425:				; DATA XREF: .debug_loc:off_14D00o
					; .debug_ranges:off_1A3B0o
		movzx	esi, byte ptr [eax+5]

loc_3429:				; DATA XREF: .debug_loc:off_14D1Eo
		mov	edi, [esp+5Ch+var_34]
		test	edi, edi
		jz	short loc_345A
		mov	eax, [ebp+0]
		test	eax, eax
		jz	short loc_345A

loc_3438:				; DATA XREF: .debug_info:0000A4D0o
					; .debug_loc:off_14D3Co
		cmp	eax, [ebx+1Ch]
		jz	short loc_345A
		mov	[esp+5Ch+var_58], eax
		mov	eax, [ecx+10h]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_40], edx
		mov	[esp+5Ch+var_3C], ecx

loc_344F:				; DATA XREF: .debug_loc:00014D40o
		call	dword ptr [ecx+4]
		mov	ecx, [esp+5Ch+var_3C]
		mov	edx, [esp+5Ch+var_40]

loc_345A:				; CODE XREF: _parse_required_member+2A7j
					; _parse_required_member+2AEj ...
		mov	ebx, [esp+5Ch+var_44]
		sub	ebx, esi

loc_3460:				; DATA XREF: .debug_loc:off_14D50o
		mov	edi, ebx
		inc	edi

loc_3463:				; DATA XREF: .debug_loc:00014D54o
		jnz	short loc_34DF

loc_3465:				; DATA XREF: .debug_info:00008A40o
		mov	dword ptr [ebp+0], 0
		xor	eax, eax

loc_346E:				; CODE XREF: _parse_required_member+370j
					; DATA XREF: .debug_ranges:0001A3CCo
		add	esi, edx

loc_3470:				; DATA XREF: .debug_loc:00014D22o
		mov	edi, eax
		mov	ecx, ebx
		rep movsb
		mov	eax, [ebp+0]
		mov	byte ptr [eax+ebx], 0
		mov	eax, 1
		jmp	loc_31D2
; ---------------------------------------------------------------------------
unk_3487	db  90h	; ê		; DATA XREF: .debug_loc:00014D04o
					; .debug_loc:off_14D88o
; ---------------------------------------------------------------------------

loc_3488:				; CODE XREF: _parse_required_member:loc_31BFj
					; DATA XREF: .rdata:off_50D8o ...
		mov	eax, [esp+5Ch+var_44] ;	jumptable 000031BF case	12
		test	eax, eax
		jz	short loc_34AC
		test	byte ptr [edx],	7Fh
		jnz	short loc_34C0
		lea	eax, [edx+1]
		add	edx, [esp+5Ch+var_44]
		jmp	short loc_34A8
; ---------------------------------------------------------------------------
unk_349E	db  66h	; f		; DATA XREF: .debug_loc:00014D8Co
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_34A0:				; CODE XREF: _parse_required_member+322j
					; DATA XREF: .debug_ranges:0001A3FCo
		mov	cl, [eax]
		inc	eax

loc_34A3:				; DATA XREF: .debug_ranges:0001A400o
		and	ecx, 7Fh
		jnz	short loc_34C0

loc_34A8:				; CODE XREF: _parse_required_member+314j
		cmp	eax, edx
		jnz	short loc_34A0

loc_34AC:				; CODE XREF: _parse_required_member+306j
		xor	eax, eax

loc_34AE:				; DATA XREF: .debug_info:00008F0Co
		jmp	loc_323C
; ---------------------------------------------------------------------------
unk_34B3	db  90h	; ê		; DATA XREF: .debug_loc:off_14D9Co
; ---------------------------------------------------------------------------

loc_34B4:				; CODE XREF: _parse_required_member:loc_31C9j
					; DATA XREF: .debug_info:0000A55Fo ...
		mov	eax, [edx]
		mov	edx, [edx+4]

loc_34B9:				; DATA XREF: .debug_loc:00014DA0o
		jmp	loc_340C
; ---------------------------------------------------------------------------
		align 10h

loc_34C0:				; CODE XREF: _parse_required_member+30Bj
					; _parse_required_member+31Ej
					; DATA XREF: ...
		mov	eax, 1
		jmp	loc_323C
; ---------------------------------------------------------------------------
		align 4

loc_34CC:				; CODE XREF: _parse_required_member+206j
					; DATA XREF: .debug_ranges:0001A388o ...
		shr	eax, 1
		jmp	loc_323C
; ---------------------------------------------------------------------------
		align 4

loc_34D4:				; CODE XREF: _parse_required_member:loc_33F4j
					; DATA XREF: .debug_ranges:0001A38Co ...
		shrd	eax, edx, 1
		shr	edx, 1
		jmp	loc_340C
; ---------------------------------------------------------------------------

loc_34DF:				; CODE XREF: _parse_required_member:loc_3463j
					; DATA XREF: .debug_ranges:0001A3A4o ...
		mov	[esp+5Ch+var_58], edi
		mov	eax, [ecx+10h]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_40], edx
		call	dword ptr [ecx]

loc_34EF:				; DATA XREF: .debug_info:0000A503o
		mov	[ebp+0], eax
		test	eax, eax
		mov	edx, [esp+5Ch+var_40]
		jnz	loc_346E
		mov	edx, 70Eh
		mov	eax, edi
		call	_alloc_failed_warning_constprop_14

loc_350A:				; DATA XREF: .debug_info:0000A514o
		xor	eax, eax
		jmp	loc_31D2
; ---------------------------------------------------------------------------
		align 4

loc_3514:				; CODE XREF: _parse_required_member:loc_3313j
					; DATA XREF: .debug_ranges:0001A358o ...
		mov	[esp+5Ch+var_58], ebx
		mov	eax, [ecx+10h]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_40], edx
		call	dword ptr [ecx]

loc_3524:				; DATA XREF: .debug_info:00008C30o
					; .debug_info:0000A3CCo
		mov	[ebp+4], eax
		test	eax, eax
		mov	edx, [esp+5Ch+var_40]
		jnz	loc_3322
		mov	edx, 71Fh
		mov	eax, ebx
		call	_alloc_failed_warning_constprop_14

loc_353F:				; DATA XREF: .debug_info:0000A3DDo
		xor	eax, eax
		jmp	loc_31D2
; ---------------------------------------------------------------------------

loc_3546:				; CODE XREF: _parse_required_member+54j
					; DATA XREF: .debug_ranges:0001A35Co ...
		call	__imp____stack_chk_fail
_parse_required_member endp

; ---------------------------------------------------------------------------
unk_354B	db  90h	; ê		; DATA XREF: .debug_info:0000A22Do
					; .debug_info:0000A5B8o

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_unpack
_protobuf_c_message_unpack proc	near	; CODE XREF: _parse_required_member+12Ap
					; DATA XREF: .debug_info:0000AAB0o ...

var_24C		= dword	ptr -24Ch
var_248		= dword	ptr -248h
var_244		= dword	ptr -244h
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_208		= dword	ptr -208h
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= dword	ptr -1F8h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1E0		= dword	ptr -1E0h
var_1DC		= byte ptr -1DCh
var_1DB		= byte ptr -1DBh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= dword	ptr -1D0h
var_1CC		= dword	ptr -1CCh
var_170		= byte ptr -170h
var_30		= byte ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp

loc_354D:				; DATA XREF: .debug_loc:00014DDAo
		push	edi
		push	esi
		push	ebx
		sub	esp, 23Ch
		mov	ebx, [esp+24Ch+arg_0]
		mov	[esp+24Ch+var_220], ebx
		mov	ebx, [esp+24Ch+arg_4]
		mov	[esp+24Ch+var_208], ebx
		mov	ebp, [esp+24Ch+arg_8]
		mov	edx, [esp+24Ch+arg_C]
		mov	[esp+24Ch+var_1FC], edx
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+24Ch+var_20], ecx
		xor	ecx, ecx

loc_358D:				; DATA XREF: .debug_loc:off_14F0Ao
					; .debug_loc:off_15018o
		mov	ebx, [esp+24Ch+var_220]

loc_3591:				; DATA XREF: .debug_info:00008994o
					; .debug_info:00008A11o ...
		mov	ebx, [ebx+1Ch]
		mov	[esp+24Ch+var_224], ebx

loc_3598:				; DATA XREF: .debug_loc:off_15189o
					; .debug_loc:off_152E6o ...
		lea	edi, [esp+24Ch+var_30]
		mov	cl, 10h
		xor	eax, eax
		rep stosb
		mov	ebx, [esp+24Ch+var_220]

loc_35A9:				; DATA XREF: .debug_loc:0001518Do
					; .debug_loc:00015194o
		cmp	dword ptr [ebx], 28AAEEF9h
		jnz	loc_4377
		mov	eax, [esp+24Ch+var_208]
		test	eax, eax
		jz	loc_3CF4

loc_35C1:				; CODE XREF: _protobuf_c_message_unpack+7B0j
					; DATA XREF: .debug_loc:00014E74o ...
		mov	esi, [esp+24Ch+var_220]
		mov	ebx, [esi+14h]

loc_35C8:				; DATA XREF: .debug_loc:00015198o
					; .debug_loc:off_155A9o
		test	ebx, ebx
		jnz	loc_3C3A
		mov	[esp+24Ch+var_204], 0

loc_35D8:				; CODE XREF: _protobuf_c_message_unpack+704j
					; DATA XREF: .debug_loc:off_14EC3o ...
		lea	eax, [esp+24Ch+var_170]
		mov	[esp+24Ch+var_1CC], eax
		mov	ebx, [esp+24Ch+var_220]

loc_35EA:				; DATA XREF: .debug_loc:000155ADo
		mov	eax, [ebx+2Ch]
		test	eax, eax
		jz	loc_3CDB

loc_35F5:				; DATA XREF: .debug_info:0000ACA8o
					; .debug_loc:off_155C7o ...
		mov	esi, [esp+24Ch+var_204]
		mov	[esp+24Ch+var_24C], esi
		call	eax

loc_35FE:				; CODE XREF: _protobuf_c_message_unpack:loc_3CEFj
					; DATA XREF: .debug_info:0000ACACo ...
		test	ebp, ebp
		jz	loc_402C
		mov	edx, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_21C], edx
		mov	[esp+24Ch+var_22C], ebp
		mov	[esp+24Ch+var_20C], 0
		mov	[esp+24Ch+var_1F8], 0
		mov	[esp+24Ch+var_218], 0
		mov	[esp+24Ch+var_210], 0
		lea	edi, [esp+24Ch+var_1E0]
		mov	[esp+24Ch+var_234], edi

loc_363A:				; CODE XREF: _protobuf_c_message_unpack+4C8j
					; DATA XREF: .debug_info:0000AD37o ...
		mov	edx, [esp+24Ch+var_21C]
		mov	al, [edx]
		mov	ebx, eax
		and	ebx, 7Fh
		sar	ebx, 3
		mov	[esp+24Ch+var_230], ebx

loc_364C:				; DATA XREF: .debug_loc:off_15B28o
					; .debug_loc:off_15BEBo ...
		mov	dl, al
		and	edx, 7
		mov	byte ptr [esp+24Ch+var_228], dl

loc_3655:				; DATA XREF: .debug_info:00008BF2o
					; .debug_ranges:0001A4C0o
		movzx	ebx, dl

loc_3658:				; DATA XREF: .debug_loc:00015B2Co
		mov	[esp+24Ch+var_200], ebx

loc_365C:				; DATA XREF: .debug_loc:off_15686o
		test	al, al
		js	loc_3830
		mov	[esp+24Ch+var_214], 1

loc_366C:				; CODE XREF: _protobuf_c_message_unpack+63Bj
					; DATA XREF: .debug_loc:off_155EFo ...
		mov	edi, [esp+24Ch+var_234]
		mov	ecx, 14h
		xor	eax, eax
		rep stosb
		mov	eax, [esp+24Ch+var_224]
		test	eax, eax
		jz	short loc_3692
		mov	ebx, [esp+24Ch+var_230]
		mov	edx, [esp+24Ch+var_224]
		cmp	[edx+4], ebx
		jz	loc_371F

loc_3692:				; CODE XREF: _protobuf_c_message_unpack+133j
					; DATA XREF: .debug_ranges:off_1A4F0o
		mov	ebx, [esp+24Ch+var_220]
		mov	edi, [ebx+28h]
		mov	eax, [ebx+24h]

loc_369C:				; DATA XREF: .debug_info:0000ADB9o
					; .debug_loc:off_15C86o ...
		test	eax, eax
		jz	loc_3818
		xor	esi, esi

loc_36A6:				; DATA XREF: .debug_loc:off_15D5Eo
					; .debug_loc:off_15D9Do
		cmp	eax, 1
		jbe	loc_380D

loc_36AF:				; DATA XREF: .debug_loc:00015D0Fo
					; .debug_loc:00015D62o
		nop

loc_36B0:				; CODE XREF: _protobuf_c_message_unpack+180j
					; _protobuf_c_message_unpack+2BBj
					; DATA XREF: ...
		mov	ebp, eax
		shr	ebp, 1
		lea	ecx, [ebp+esi+0]

loc_36B8:				; DATA XREF: .debug_loc:off_15DD1o
		lea	ebx, [edi+ecx*8]
		mov	edx, [ebx]
		cmp	[esp+24Ch+var_230], edx
		jge	loc_37E8

loc_36C7:				; DATA XREF: .debug_info:00008CB4o
		mov	eax, ebp

loc_36C9:				; DATA XREF: .debug_ranges:0001A554o
		cmp	ebp, 1
		jnz	short loc_36B0

loc_36CE:				; CODE XREF: _protobuf_c_message_unpack+2C3j
					; DATA XREF: .debug_info:0000AE1Do ...
		lea	eax, [edi+esi*8]

loc_36D1:				; DATA XREF: .debug_loc:00015DA1o
		mov	edx, [eax+4]

loc_36D4:				; DATA XREF: .debug_loc:off_15E1Co
		mov	ecx, [edi+esi*8+0Ch]

loc_36D8:				; DATA XREF: .debug_loc:off_15E2Fo
		mov	eax, [eax]
		cmp	[esp+24Ch+var_230], eax
		jl	loc_3818
		mov	ebx, eax
		sub	ebx, edx
		add	ecx, ebx

loc_36EA:				; DATA XREF: .debug_loc:00015E33o
		cmp	[esp+24Ch+var_230], ecx
		jge	loc_3818
		mov	ebp, [esp+24Ch+var_230]
		sub	ebp, eax
		add	edx, ebp

loc_36FC:				; CODE XREF: _protobuf_c_message_unpack+44Ej
					; DATA XREF: .debug_info:0000AE21o ...
		test	edx, edx

loc_36FE:				; DATA XREF: .debug_info:00008CECo
		js	loc_3818
		mov	[esp+24Ch+var_20C], edx
		lea	ebx, [edx+edx*2]
		shl	ebx, 4

loc_370E:				; DATA XREF: .debug_loc:off_15733o
					; .debug_ranges:0001A4F4o
		mov	edi, [esp+24Ch+var_220]

loc_3712:				; DATA XREF: .debug_loc:00015CC6o
					; .debug_info:00008D1Bo
		add	ebx, [edi+1Ch]

loc_3715:				; DATA XREF: .debug_loc:00015737o
		jz	loc_435B
		mov	[esp+24Ch+var_224], ebx

loc_371F:				; CODE XREF: _protobuf_c_message_unpack+140j
					; DATA XREF: .debug_loc:00015C8Ao
		mov	edx, [esp+24Ch+var_224]
		mov	eax, [edx+8]
		test	eax, eax
		jnz	loc_3824
		mov	eax, [esp+24Ch+var_20C]
		shr	eax, 3
		and	eax, 0Fh
		mov	ecx, [esp+24Ch+var_20C]
		and	ecx, 7
		mov	edx, 1
		shl	edx, cl
		or	[esp+eax+24Ch+var_30], dl
		mov	ebx, [esp+24Ch+var_224]

loc_3751:				; CODE XREF: _protobuf_c_message_unpack+2D2j
					; _protobuf_c_message_unpack+2DCj ...
		mov	ebp, [esp+24Ch+var_21C]
		add	ebp, [esp+24Ch+var_214]
		mov	edx, [esp+24Ch+var_22C]
		sub	edx, [esp+24Ch+var_214]
		mov	[esp+24Ch+var_22C], edx
		mov	esi, [esp+24Ch+var_230]
		mov	[esp+24Ch+var_1E0], esi
		mov	dl, byte ptr [esp+24Ch+var_228]
		mov	[esp+24Ch+var_1DC], dl
		mov	[esp+24Ch+var_1D8], ebx
		mov	[esp+24Ch+var_1D0], ebp
		cmp	dl, 1
		jz	loc_39A0
		jnb	loc_394C

loc_378C:				; DATA XREF: .debug_ranges:off_1A570o
		mov	edx, [esp+24Ch+var_22C]
		cmp	edx, 0Ah
		ja	loc_3B96

loc_3799:				; DATA XREF: .debug_loc:off_15E5Fo
					; .debug_loc:off_15E74o
		mov	eax, [esp+24Ch+var_22C]
		test	eax, eax
		jz	short loc_37C0

loc_37A1:				; CODE XREF: _protobuf_c_message_unpack+64Fj
					; DATA XREF: .debug_loc:00015E63o ...
		cmp	byte ptr [ebp+0], 0
		jns	loc_3E27
		xor	eax, eax
		jmp	short loc_37BB
; ---------------------------------------------------------------------------
		align 10h

loc_37B0:				; CODE XREF: _protobuf_c_message_unpack+272j
		cmp	byte ptr [ebp+eax+0], 0
		jns	loc_3C28

loc_37BB:				; CODE XREF: _protobuf_c_message_unpack+261j
		inc	eax
		cmp	eax, edx
		jnz	short loc_37B0

loc_37C0:				; CODE XREF: _protobuf_c_message_unpack+253j
					; _protobuf_c_message_unpack+6DEj
		mov	eax, ebp
		sub	eax, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aUnterminatedVa ; "unterminated varint at offset %u"
		call	_printf

loc_37D6:				; DATA XREF: .debug_info:0000AE67o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_37E2:				; DATA XREF: .debug_info:0000AE8Bo
		jmp	loc_38B4
; ---------------------------------------------------------------------------
unk_37E7	db  90h	; ê		; DATA XREF: .debug_loc:00015DA8o
					; .debug_loc:00015DDCo
; ---------------------------------------------------------------------------

loc_37E8:				; CODE XREF: _protobuf_c_message_unpack+175j
					; DATA XREF: .debug_ranges:0001A4F8o ...
		inc	ecx

loc_37E9:				; DATA XREF: .debug_loc:00015DE0o
		mov	ebp, [ebx+4]
		mov	ebx, edx
		sub	ebx, ebp
		add	ebx, [edi+ecx*8+4]
		cmp	[esp+24Ch+var_230], ebx
		jl	loc_3990

loc_37FE:				; DATA XREF: .debug_info:0000AE09o
					; .debug_loc:off_15E09o
		add	eax, esi

loc_3800:				; DATA XREF: .debug_loc:00015DACo
		sub	eax, ecx
		mov	esi, ecx

loc_3804:				; DATA XREF: .debug_info:0000AE0Do
					; .debug_ranges:0001A55Co
		cmp	eax, 1
		ja	loc_36B0

loc_380D:				; CODE XREF: _protobuf_c_message_unpack+15Dj
					; DATA XREF: .debug_loc:00015E0Do
		test	eax, eax
		jnz	loc_36CE
		lea	esi, [esi+0]

loc_3818:				; CODE XREF: _protobuf_c_message_unpack+152j
					; _protobuf_c_message_unpack+192j ...
		inc	[esp+24Ch+var_1F8]
		xor	ebx, ebx
		jmp	loc_3751
; ---------------------------------------------------------------------------
		align 4

loc_3824:				; CODE XREF: _protobuf_c_message_unpack+1DCj
					; DATA XREF: .debug_ranges:0001A4FCo
		mov	ebx, [esp+24Ch+var_224]
		jmp	loc_3751
; ---------------------------------------------------------------------------
unk_382D	db  8Dh	; ç		; DATA XREF: .debug_loc:000155F3o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3830:				; CODE XREF: _protobuf_c_message_unpack+112j
					; DATA XREF: .debug_ranges:0001A490o ...
		mov	ebx, [esp+24Ch+var_22C]
		cmp	ebx, 5
		jbe	loc_393C
		mov	ebx, 5

loc_3842:				; CODE XREF: _protobuf_c_message_unpack+3F5j
		mov	esi, [esp+24Ch+var_21C]
		movzx	edx, byte ptr [esi+1]

loc_384A:				; DATA XREF: .debug_info:00008E48o
		test	dl, dl
		jns	loc_3DD6
		mov	ecx, 4
		mov	eax, 1
		mov	edi, [esp+24Ch+var_21C]
		mov	esi, [esp+24Ch+var_230]
		jmp	short loc_3874
; ---------------------------------------------------------------------------
unk_3866	db  66h	; f		; DATA XREF: .debug_loc:off_15C44o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_3868:				; CODE XREF: _protobuf_c_message_unpack+335j
		movzx	edx, byte ptr [edi+eax]
		test	dl, dl
		jns	loc_3B78

loc_3874:				; CODE XREF: _protobuf_c_message_unpack+318j
					; DATA XREF: .debug_loc:00015C48o
		and	edx, 7Fh
		shl	edx, cl
		or	esi, edx
		add	ecx, 7
		inc	eax
		cmp	eax, ebx
		jnz	short loc_3868

loc_3883:				; CODE XREF: _protobuf_c_message_unpack+3FBj
					; DATA XREF: .debug_ranges:0001A494o ...
		mov	ecx, 14h
		xor	eax, eax
		mov	edi, [esp+24Ch+var_234]
		rep stosb
		mov	eax, [esp+24Ch+var_21C]
		sub	eax, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aErrorParsingTa ; "error parsing tag/wiretype at offset %u"
		call	_printf

loc_38A8:				; DATA XREF: .debug_info:0000B169o
		mov	[esp+24Ch+var_24C], 0Ah	; int

loc_38AF:				; DATA XREF: .debug_info:00008EB0o
		call	_putchar

loc_38B4:				; CODE XREF: _protobuf_c_message_unpack:loc_37E2j
					; _protobuf_c_message_unpack:loc_3988j	...
		mov	eax, [esp+24Ch+var_204]
		test	eax, eax
		jz	short loc_38D1
		mov	eax, [esp+24Ch+var_204]
		mov	[esp+24Ch+var_248], eax
		mov	ebx, [esp+24Ch+var_208]
		mov	eax, [ebx+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [ebx+4]

loc_38D1:				; CODE XREF: _protobuf_c_message_unpack+36Ej
					; DATA XREF: .debug_info:0000BAEFo
		mov	ebx, [esp+24Ch+var_208]
		mov	eax, [ebx+8]
		test	eax, eax
		jnz	short loc_3912

loc_38DC:				; DATA XREF: .debug_info:0000B24Fo
					; .debug_loc:off_16311o
		mov	eax, [esp+24Ch+var_210]
		test	eax, eax
		jz	short loc_3912
		mov	ebx, 1
		lea	ebp, [esp+24Ch+var_1CC]
		mov	esi, [esp+24Ch+var_210]
		mov	edi, [esp+24Ch+var_208]

loc_38F8:				; CODE XREF: _protobuf_c_message_unpack+3C4j
					; DATA XREF: .debug_loc:00016315o
		mov	eax, [ebp+ebx*4+0]
		test	eax, eax
		jz	short loc_390D
		mov	[esp+24Ch+var_248], eax
		mov	eax, [edi+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edi+4]

loc_390D:				; CODE XREF: _protobuf_c_message_unpack+3B2j
		inc	ebx
		cmp	esi, ebx
		jnb	short loc_38F8

loc_3912:				; CODE XREF: _protobuf_c_message_unpack+38Ej
					; _protobuf_c_message_unpack+396j ...
		mov	[esp+24Ch+var_204], 0

loc_391A:				; CODE XREF: _protobuf_c_message_unpack:loc_3C62j
					; _protobuf_c_message_unpack+9D1j ...
		mov	eax, [esp+24Ch+var_204]
		mov	esi, [esp+24Ch+var_20]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	loc_4368
		add	esp, 23Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_393C:				; CODE XREF: _protobuf_c_message_unpack+2EBj
					; DATA XREF: .debug_loc:00015782o ...
		cmp	[esp+24Ch+var_22C], 1
		ja	loc_3842
		jmp	loc_3883
; ---------------------------------------------------------------------------

loc_394C:				; CODE XREF: _protobuf_c_message_unpack+23Aj
					; DATA XREF: .debug_ranges:0001A49Co ...
		cmp	dl, 2
		jz	loc_3AF4
		cmp	dl, 5

loc_3958:				; DATA XREF: .debug_info:00008F64o
		jz	loc_3AD9
		mov	eax, ebp
		sub	eax, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_244], eax
		mov	ebx, [esp+24Ch+var_200]
		mov	[esp+24Ch+var_248], ebx
		mov	[esp+24Ch+var_24C], offset aUnsupportedTag ; "unsupported tag %u at offset %u"
		call	_printf

loc_397C:				; DATA XREF: .debug_info:0000B1A3o
		mov	[esp+24Ch+var_24C], 0Ah	; int

loc_3983:				; DATA XREF: .debug_info:00008F78o
		call	_putchar

loc_3988:				; DATA XREF: .debug_info:0000B1CEo
		jmp	loc_38B4
; ---------------------------------------------------------------------------
		align 10h

loc_3990:				; CODE XREF: _protobuf_c_message_unpack+2ACj
					; DATA XREF: .debug_ranges:0001A500o ...
		mov	esi, [esp+24Ch+var_230]
		sub	esi, edx
		mov	edx, esi
		add	edx, ebp
		jmp	loc_36FC
; ---------------------------------------------------------------------------
		align 10h

loc_39A0:				; CODE XREF: _protobuf_c_message_unpack+234j
					; DATA XREF: .debug_ranges:0001A504o ...
		cmp	[esp+24Ch+var_22C], 7
		jbe	loc_41DF
		mov	[esp+24Ch+var_1D4], 8

loc_39B3:				; CODE XREF: _protobuf_c_message_unpack:loc_3AECj
					; _protobuf_c_message_unpack+6D7j ...
		mov	ecx, [esp+24Ch+var_210]
		add	ecx, 4
		mov	eax, 1
		shl	eax, cl
		cmp	eax, [esp+24Ch+var_218]
		jz	loc_3A88
		mov	ecx, [esp+24Ch+var_218]
		lea	edx, [ecx+ecx*4]
		mov	esi, [esp+24Ch+var_210]
		mov	eax, [esp+esi*4+24Ch+var_1CC]
		lea	eax, [eax+edx*4]
		inc	ecx
		mov	[esp+24Ch+var_218], ecx

loc_39E5:				; CODE XREF: _protobuf_c_message_unpack+588j
					; _protobuf_c_message_unpack+75Aj ...
		mov	ecx, 5
		mov	edi, eax
		mov	esi, [esp+24Ch+var_234]
		rep movsd
		test	ebx, ebx
		jz	short loc_3A00
		cmp	dword ptr [ebx+8], 2
		jz	loc_3B60

loc_3A00:				; CODE XREF: _protobuf_c_message_unpack+4A8j
					; _protobuf_c_message_unpack+624j
					; DATA XREF: ...
		mov	eax, [esp+24Ch+var_1D4]

loc_3A04:				; CODE XREF: _protobuf_c_message_unpack:loc_3DD1j
					; _protobuf_c_message_unpack+8C3j ...
		add	ebp, eax
		mov	[esp+24Ch+var_21C], ebp

loc_3A0A:				; DATA XREF: .debug_ranges:0001A43Co
		mov	edx, [esp+24Ch+var_22C]
		sub	edx, eax
		mov	[esp+24Ch+var_22C], edx
		jnz	loc_363A

loc_3A1A:				; CODE XREF: _protobuf_c_message_unpack+AF8j
					; DATA XREF: .debug_loc:off_154D4o ...
		mov	ebx, [esp+24Ch+var_220]
		mov	ebp, [ebx+18h]
		test	ebp, ebp
		jz	loc_3E3B
		xor	ebx, ebx
		mov	ebp, [esp+24Ch+var_220]
		jmp	short loc_3A4D
; ---------------------------------------------------------------------------
unk_3A31	db  8Dh	; ç		; DATA XREF: .debug_loc:000154D8o
					; .debug_loc:off_16330o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3A34:				; CODE XREF: _protobuf_c_message_unpack+512j
					; DATA XREF: .debug_ranges:off_1A6F8o
		test	ecx, ecx
		jnz	short loc_3A43
		mov	ecx, [edx+1Ch]
		test	ecx, ecx
		jz	loc_3D53

loc_3A43:				; CODE XREF: _protobuf_c_message_unpack+4EAj
					; _protobuf_c_message_unpack+7CFj ...
		inc	ebx
		cmp	[ebp+18h], ebx
		jbe	loc_3E3B

loc_3A4D:				; CODE XREF: _protobuf_c_message_unpack+4E3j
					; DATA XREF: .debug_ranges:0001A700o
		mov	eax, [ebp+1Ch]
		lea	edx, [ebx+ebx*2]
		shl	edx, 4
		add	edx, eax
		mov	ecx, [edx+8]
		cmp	ecx, 2
		jnz	short loc_3A34

loc_3A60:				; DATA XREF: .debug_info:0000B2B1o
					; .debug_loc:off_16465o ...
		cmp	dword ptr [edx+0Ch], 10h ; switch 17 cases
		jbe	loc_3D01

loc_3A6A:				; CODE XREF: _protobuf_c_message_unpack+B23j
					; _protobuf_c_message_unpack+CC3j
					; DATA XREF: ...
		mov	[esp+24Ch+var_244], 36Bh ; jumptable 00003D04 default case
		mov	[esp+24Ch+var_248], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+24Ch+var_24C], offset off_4E54 ; void *
		call	__assert
; ---------------------------------------------------------------------------
byte_3A86	db 66h			; DATA XREF: .debug_info:0000B489o
					; .debug_loc:00015792o	...
		db  90h	; ê		; DATA XREF: .debug_info:00009258o
; ---------------------------------------------------------------------------

loc_3A88:				; CODE XREF: _protobuf_c_message_unpack+479j
					; DATA XREF: .debug_info:0000B473o ...
		cmp	[esp+24Ch+var_210], 16h
		jz	loc_41C2
		mov	esi, [esp+24Ch+var_210]
		inc	esi
		mov	ecx, [esp+24Ch+var_210]
		add	ecx, 5
		mov	edi, 14h
		shl	edi, cl

loc_3AA6:				; DATA XREF: .debug_loc:off_15EA9o
		mov	edx, [esp+24Ch+var_208]
		mov	eax, [edx+8]
		test	eax, eax
		jz	loc_3C89
		mov	[esp+24Ch+var_248], edi
		mov	edx, [edx+10h]
		mov	[esp+24Ch+var_24C], edx
		call	eax

loc_3AC1:				; DATA XREF: .debug_info:0000AEF8o
		mov	[esp+esi*4+24Ch+var_1CC], eax
		mov	[esp+24Ch+var_210], esi
		mov	[esp+24Ch+var_218], 1
		jmp	loc_39E5
; ---------------------------------------------------------------------------

loc_3AD9:				; CODE XREF: _protobuf_c_message_unpack:loc_3958j
					; DATA XREF: .debug_loc:00015EADo ...
		cmp	[esp+24Ch+var_22C], 3
		jbe	loc_419B
		mov	[esp+24Ch+var_1D4], 4

loc_3AEC:				; DATA XREF: .debug_info:00009A30o
		jmp	loc_39B3
; ---------------------------------------------------------------------------
		align 4

loc_3AF4:				; CODE XREF: _protobuf_c_message_unpack+403j
					; DATA XREF: .debug_info:0000AF4Fo ...
		mov	edi, [esp+24Ch+var_22C]
		cmp	edi, 5
		ja	loc_3B8C

loc_3B01:				; DATA XREF: .debug_loc:off_15FF9o
					; .debug_loc:off_1600Eo ...
		mov	eax, [esp+24Ch+var_22C]
		test	eax, eax
		jz	short loc_3B42

loc_3B09:				; CODE XREF: _protobuf_c_message_unpack:loc_3B91j
					; DATA XREF: .debug_loc:00015FFDo ...
		mov	cl, [ebp+0]
		and	ecx, 7Fh
		mov	esi, ecx
		cmp	byte ptr [ebp+0], 0
		jns	loc_3E31
		mov	ecx, 7
		xor	eax, eax
		jmp	short loc_3B3D
; ---------------------------------------------------------------------------

loc_3B24:				; CODE XREF: _protobuf_c_message_unpack+5F4j
		mov	dl, [ebp+eax+0]
		and	edx, 7Fh
		shl	edx, cl
		or	esi, edx
		add	ecx, 7

loc_3B32:				; DATA XREF: .debug_info:00009BFCo
		cmp	byte ptr [ebp+eax+0], 0
		jns	loc_3C01

loc_3B3D:				; CODE XREF: _protobuf_c_message_unpack+5D6j
		inc	eax
		cmp	eax, edi
		jnz	short loc_3B24

loc_3B42:				; CODE XREF: _protobuf_c_message_unpack+5BBj
					; _protobuf_c_message_unpack+6B7j
		mov	[esp+24Ch+var_24C], offset aErrorParsingLe ; "error parsing length for length-prefixe"...
		call	_printf

loc_3B4E:				; DATA XREF: .debug_info:0000AFA8o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_3B5A:				; DATA XREF: .debug_info:0000AFC0o
		jmp	loc_38B4
; ---------------------------------------------------------------------------
unk_3B5F	db  90h	; ê		; DATA XREF: .debug_loc:00015F12o
					; .debug_loc:00015F6Ao	...
; ---------------------------------------------------------------------------

loc_3B60:				; CODE XREF: _protobuf_c_message_unpack+4AEj
					; DATA XREF: .debug_ranges:0001A5DCo ...
		mov	esi, [esp+24Ch+var_204]
		add	esi, [ebx+10h]

loc_3B67:				; DATA XREF: .debug_loc:off_160DBo
		cmp	[esp+24Ch+var_200], 2
		jz	short loc_3BA0

loc_3B6E:				; CODE XREF: _protobuf_c_message_unpack+664j
		inc	dword ptr [esi]
		jmp	loc_3A00
; ---------------------------------------------------------------------------
unk_3B75	db  8Dh	; ç		; DATA XREF: .debug_loc:000160DFo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3B78:				; CODE XREF: _protobuf_c_message_unpack+322j
		mov	[esp+24Ch+var_230], esi
		inc	eax
		mov	[esp+24Ch+var_214], eax

loc_3B81:				; CODE XREF: _protobuf_c_message_unpack+897j
					; DATA XREF: .debug_ranges:0001A4A0o ...
		shl	edx, cl
		or	[esp+24Ch+var_230], edx
		jmp	loc_366C
; ---------------------------------------------------------------------------

loc_3B8C:				; CODE XREF: _protobuf_c_message_unpack+5AFj
					; DATA XREF: .debug_loc:00015F1Eo ...
		mov	edi, 5

loc_3B91:				; DATA XREF: .debug_loc:00015FB6o
		jmp	loc_3B09
; ---------------------------------------------------------------------------

loc_3B96:				; CODE XREF: _protobuf_c_message_unpack+247j
					; DATA XREF: .debug_loc:00015F22o ...
		mov	edx, 0Ah
		jmp	loc_37A1
; ---------------------------------------------------------------------------

loc_3BA0:				; CODE XREF: _protobuf_c_message_unpack+620j
					; DATA XREF: .debug_ranges:0001A57Co ...
		mov	eax, [ebx+20h]
		test	eax, eax
		mov	ecx, [ebx+0Ch]
		jnz	short loc_3BB2

loc_3BAA:				; DATA XREF: .debug_info:0000B021o
					; .debug_loc:off_1611Ao
		lea	eax, [ecx-0Eh]

loc_3BAD:				; DATA XREF: .debug_info:0000B025o
		cmp	eax, 2
		jbe	short loc_3B6E

loc_3BB2:				; CODE XREF: _protobuf_c_message_unpack+65Cj
					; DATA XREF: .debug_loc:0001611Eo ...
		movzx	edx, [esp+24Ch+var_1DB]
		mov	eax, [esp+24Ch+var_1D4]
		mov	ebx, eax
		sub	ebx, edx

loc_3BBF:				; DATA XREF: .debug_info:0000B054o
					; .debug_loc:off_16156o ...
		cmp	ecx, 0Dh	; switch 14 cases
		jbe	loc_3DBC
		mov	[esp+24Ch+var_248], ecx	; jumptable 00003DBC default case
		mov	[esp+24Ch+var_24C], offset aBadProtobufCTy ; "bad protobuf-c type %u for packed-repea"...

loc_3BD3:				; DATA XREF: .debug_loc:000161A2o
					; .debug_loc:000162A5o
		call	_printf

loc_3BD8:				; DATA XREF: .debug_info:0000B0BEo
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_3BE4:				; CODE XREF: _protobuf_c_message_unpack:loc_4279j
					; _protobuf_c_message_unpack:loc_4296j
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aCountingPacked ; "counting packed elements"
		call	_printf

loc_3BF0:				; DATA XREF: .debug_info:0000B13Fo
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_3BFC:				; DATA XREF: .debug_info:0000B157o
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_3C01:				; CODE XREF: _protobuf_c_message_unpack+5EBj
					; DATA XREF: .debug_loc:00015F2Eo ...
		cmp	edi, eax
		jz	loc_3B42
		inc	eax

loc_3C0A:				; CODE XREF: _protobuf_c_message_unpack+8EAj
					; DATA XREF: .debug_loc:off_15EF0o
		lea	edx, [eax+esi]
		cmp	[esp+24Ch+var_22C], edx
		jb	short loc_3C68

loc_3C13:				; DATA XREF: .debug_ranges:0001A61Co
					; .debug_ranges:0001A64Co
		mov	[esp+24Ch+var_1D4], edx
		test	edx, edx
		jz	loc_38B4
		mov	[esp+24Ch+var_1DB], al
		jmp	loc_39B3
; ---------------------------------------------------------------------------

loc_3C28:				; CODE XREF: _protobuf_c_message_unpack+269j
					; DATA XREF: .debug_loc:00015EF4o ...
		cmp	edx, eax
		jz	loc_37C0
		inc	eax

loc_3C31:				; CODE XREF: _protobuf_c_message_unpack+8E0j
		mov	[esp+24Ch+var_1D4], eax

loc_3C35:				; DATA XREF: .debug_ranges:0001A584o
		jmp	loc_39B3
; ---------------------------------------------------------------------------

loc_3C3A:				; CODE XREF: _protobuf_c_message_unpack+7Ej
					; DATA XREF: .debug_loc:00014EC7o ...
		mov	[esp+24Ch+var_248], ebx
		mov	edi, [esp+24Ch+var_208]
		mov	eax, [edi+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edi]

loc_3C4A:				; DATA XREF: .debug_info:0000AC7Bo
		mov	[esp+24Ch+var_204], eax
		test	eax, eax
		jnz	loc_35D8
		mov	edx, 89Ch
		mov	eax, ebx
		call	_alloc_failed_warning_constprop_14

loc_3C62:				; DATA XREF: .debug_info:0000AC8Co
		jmp	loc_391A
; ---------------------------------------------------------------------------
unk_3C67	db  90h	; ê		; DATA XREF: .debug_loc:000155B8o
					; .debug_loc:000157A2o	...
; ---------------------------------------------------------------------------

loc_3C68:				; CODE XREF: _protobuf_c_message_unpack+6C5j
					; DATA XREF: .debug_ranges:0001A424o ...
		mov	[esp+24Ch+var_248], esi
		mov	[esp+24Ch+var_24C], offset aDataTooShortAf ; "data too short after length-prefix of %"...
		call	_printf

loc_3C78:				; DATA XREF: .debug_info:0000AFD4o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_3C84:				; DATA XREF: .debug_info:0000AFF3o
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_3C89:				; CODE XREF: _protobuf_c_message_unpack+563j
					; DATA XREF: .debug_loc:00015EB4o ...
		test	edi, edi
		jnz	short loc_3CAB
		mov	[esp+esi*4+24Ch+var_1CC], 0
		mov	[esp+24Ch+var_210], esi
		mov	[esp+24Ch+var_218], 1
		xor	eax, eax
		jmp	loc_39E5
; ---------------------------------------------------------------------------

loc_3CAB:				; CODE XREF: _protobuf_c_message_unpack+73Fj
		mov	[esp+24Ch+var_248], edi
		mov	edx, [esp+24Ch+var_208]
		mov	eax, [edx+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edx]

loc_3CBB:				; DATA XREF: .debug_info:0000AECFo
		mov	[esp+esi*4+24Ch+var_1CC], eax
		test	eax, eax
		jz	loc_42FC
		mov	[esp+24Ch+var_210], esi
		mov	[esp+24Ch+var_218], 1
		jmp	loc_39E5
; ---------------------------------------------------------------------------

loc_3CDB:				; CODE XREF: _protobuf_c_message_unpack+A3j
					; DATA XREF: .debug_loc:000157A6o ...
		mov	eax, [esp+24Ch+var_204]
		mov	[esp+24Ch+var_248], eax
		mov	ebx, [esp+24Ch+var_220]
		mov	[esp+24Ch+var_24C], ebx
		call	_protobuf_c_message_init_generic

loc_3CEF:				; DATA XREF: .debug_info:0000BB02o
		jmp	loc_35FE
; ---------------------------------------------------------------------------

loc_3CF4:				; CODE XREF: _protobuf_c_message_unpack+6Fj
		mov	[esp+24Ch+var_208], offset _protobuf_c_default_allocator
		jmp	loc_35C1
; ---------------------------------------------------------------------------

loc_3D01:				; CODE XREF: _protobuf_c_message_unpack+518j
					; DATA XREF: .debug_ranges:0001A708o ...
		mov	eax, [edx+0Ch]

loc_3D04:				; DATA XREF: .debug_info:000092A4o
		jmp	ds:off_549C[eax*4] ; switch jump
; ---------------------------------------------------------------------------

loc_3D0B:				; CODE XREF: _protobuf_c_message_unpack:loc_3D04j
					; DATA XREF: .rdata:off_549Co
		mov	esi, 8		; jumptable 00003D04 cases 3-5,8,9,11,15

loc_3D10:				; CODE XREF: _protobuf_c_message_unpack:loc_3DEDj
					; DATA XREF: .debug_ranges:0001A77Co
		mov	ecx, [esp+24Ch+var_204]
		add	ecx, [edx+10h]

loc_3D17:				; DATA XREF: .debug_loc:off_16429o
		mov	eax, [ecx]
		test	eax, eax
		jz	loc_3A43

loc_3D21:				; DATA XREF: .debug_loc:off_164C2o
					; .debug_ranges:off_1A798o
		mov	dword ptr [ecx], 0
		mov	edi, [esp+24Ch+var_204]
		mov	edi, [edi]
		test	edi, edi
		jz	loc_4311

loc_3D35:				; DATA XREF: .debug_ranges:off_1A7B8o
		imul	esi, eax

loc_3D38:				; DATA XREF: .debug_loc:off_16509o
		test	esi, esi
		jnz	loc_3FB9
		mov	eax, [edx+14h]

loc_3D43:				; DATA XREF: .debug_loc:000164C6o
		mov	edx, [esp+24Ch+var_204]

loc_3D47:				; DATA XREF: .debug_info:0000931Fo
		mov	dword ptr [edx+eax], 0
		jmp	loc_3A43
; ---------------------------------------------------------------------------

loc_3D53:				; CODE XREF: _protobuf_c_message_unpack+4F1j
					; DATA XREF: .debug_loc:0001642Do ...
		mov	ecx, ebx
		shr	ecx, 3
		and	ecx, 0Fh
		movzx	esi, [esp+ecx+24Ch+var_30]
		mov	ecx, ebx
		and	ecx, 7
		sar	esi, cl
		and	esi, 1
		jnz	loc_3A43
		inc	ebx
		mov	ecx, [esp+24Ch+var_220]
		cmp	ebx, [ecx+18h]
		jnb	loc_432D
		lea	edx, [ebx+ebx*2]
		shl	edx, 4
		lea	eax, [eax+edx+8]
		jmp	short loc_3DA1
; ---------------------------------------------------------------------------
		align 10h

loc_3D90:				; CODE XREF: _protobuf_c_message_unpack+85Bj
					; _protobuf_c_message_unpack+86Bj
		inc	ebx
		add	eax, 30h ; '0'
		mov	edi, [esp+24Ch+var_220]
		cmp	[edi+18h], ebx
		jbe	loc_432D

loc_3DA1:				; CODE XREF: _protobuf_c_message_unpack+83Fj
		lea	edx, [eax-8]
		cmp	dword ptr [eax], 2
		jnz	short loc_3D90
		mov	ecx, [eax+8]
		mov	esi, [esp+24Ch+var_204]
		mov	dword ptr [esi+ecx], 0
		jmp	short loc_3D90
; ---------------------------------------------------------------------------
unk_3DB9	db  8Dh	; ç		; DATA XREF: .debug_loc:000157B2o
					; .debug_loc:0001585Ao	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3DBC:				; CODE XREF: _protobuf_c_message_unpack+676j
					; DATA XREF: .debug_ranges:0001A450o ...
		jmp	ds:off_54E0[ecx*4] ; switch jump
; ---------------------------------------------------------------------------

loc_3DC3:				; CODE XREF: _protobuf_c_message_unpack:loc_3DBCj
					; DATA XREF: .rdata:off_54E0o
		test	bl, 7		; jumptable 00003DBC cases 5,9,11
		jnz	loc_4261
		shr	ebx, 3

loc_3DCF:				; CODE XREF: _protobuf_c_message_unpack:loc_3DBCj
					; DATA XREF: .rdata:off_54E0o ...
		add	[esi], ebx	; jumptable 00003DBC case 12

loc_3DD1:				; DATA XREF: .debug_info:00009394o
					; .debug_ranges:0001A6A4o
		jmp	loc_3A04
; ---------------------------------------------------------------------------

loc_3DD6:				; CODE XREF: _protobuf_c_message_unpack+300j
					; DATA XREF: .debug_loc:00016131o ...
		mov	[esp+24Ch+var_214], 2
		mov	ecx, 4
		jmp	loc_3B81
; ---------------------------------------------------------------------------

loc_3DE8:				; CODE XREF: _protobuf_c_message_unpack:loc_3D04j
					; DATA XREF: .rdata:off_549Co ...
		mov	esi, 4		; jumptable 00003D04 cases 0-2,6,7,10,12-14,16

loc_3DED:				; DATA XREF: .debug_info:00009362o
		jmp	loc_3D10
; ---------------------------------------------------------------------------

loc_3DF2:				; CODE XREF: _protobuf_c_message_unpack:loc_3DBCj
					; DATA XREF: .rdata:off_54E0o ...
		lea	ecx, [ebp+edx+0] ; jumptable 00003DBC cases 0,1,3,4,6,8,13
		lea	edi, [ecx+ebx]

loc_3DF9:				; DATA XREF: .debug_ranges:0001A6ACo
		xor	ebx, ebx
		jmp	short loc_3E09
; ---------------------------------------------------------------------------
unk_3DFD	db  8Dh	; ç		; DATA XREF: .debug_loc:off_162EBo
					; .debug_loc:off_162FEo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_3E00:				; CODE XREF: _protobuf_c_message_unpack+8BFj
					; DATA XREF: .debug_info:0000B08Co ...
		mov	dl, [ecx]
		inc	ecx
		cmp	dl, 80h	; 'Ä'
		adc	ebx, 0

loc_3E09:				; CODE XREF: _protobuf_c_message_unpack+8AFj
		cmp	ecx, edi
		jnz	short loc_3E00

loc_3E0D:				; DATA XREF: .debug_info:0000B090o
					; .debug_info:0000B0AEo ...
		add	[esi], ebx
		jmp	loc_3A04
; ---------------------------------------------------------------------------

loc_3E14:				; CODE XREF: _protobuf_c_message_unpack:loc_3DBCj
					; DATA XREF: .rdata:off_54E0o ...
		test	bl, 3		; jumptable 00003DBC cases 2,7,10
		jnz	loc_427E
		shr	ebx, 2

loc_3E20:				; DATA XREF: .debug_ranges:0001A6E4o
		add	[esi], ebx
		jmp	loc_3A04
; ---------------------------------------------------------------------------

loc_3E27:				; CODE XREF: _protobuf_c_message_unpack+259j
					; DATA XREF: .debug_loc:0001617Ao ...
		mov	eax, 1
		jmp	loc_3C31
; ---------------------------------------------------------------------------

loc_3E31:				; CODE XREF: _protobuf_c_message_unpack+5C9j
					; DATA XREF: .debug_loc:00015F4Eo ...
		mov	eax, 1
		jmp	loc_3C0A
; ---------------------------------------------------------------------------

loc_3E3B:				; CODE XREF: _protobuf_c_message_unpack+4D7j
					; _protobuf_c_message_unpack+4FBj
					; DATA XREF: ...
		mov	edi, [esp+24Ch+var_1F8]
		test	edi, edi
		jz	short loc_3E5B

loc_3E43:				; DATA XREF: .debug_loc:off_17572o
					; .debug_ranges:off_1AA30o
		mov	ebx, [esp+24Ch+var_1F8]
		shl	ebx, 4

loc_3E4A:				; DATA XREF: .debug_loc:00017576o
		jnz	loc_42CC
		mov	eax, [esp+24Ch+var_204]

loc_3E54:				; DATA XREF: .debug_info:00009406o
		mov	dword ptr [eax+8], 0

loc_3E5B:				; CODE XREF: _protobuf_c_message_unpack+8F5j
					; _protobuf_c_message_unpack+D99j
					; DATA XREF: ...
		mov	[esp+24Ch+var_22C], 0
		lea	ebp, [esp+24Ch+var_1CC]
		mov	[esp+24Ch+var_200], ebp

loc_3E6E:				; CODE XREF: _protobuf_c_message_unpack+9BEj
					; DATA XREF: .debug_loc:00015518o ...
		mov	ebx, [esp+24Ch+var_210]
		cmp	[esp+24Ch+var_22C], ebx
		jz	loc_4254
		mov	ecx, [esp+24Ch+var_22C]
		add	ecx, 4
		mov	ebx, 1
		shl	ebx, cl
		mov	[esp+24Ch+var_21C], ebx

loc_3E8E:				; CODE XREF: _protobuf_c_message_unpack+D10j
					; DATA XREF: .debug_loc:off_16527o
		mov	ebx, [esp+24Ch+var_22C]
		mov	esi, [esp+24Ch+var_200]
		mov	ebx, [esi+ebx*4]

loc_3E99:				; DATA XREF: .debug_info:00009472o
		mov	[esp+24Ch+var_20C], ebx

loc_3E9D:				; DATA XREF: .debug_loc:off_1657Do
					; .debug_loc:off_165DEo
		mov	esi, [esp+24Ch+var_21C]
		test	esi, esi
		jz	short loc_3EFE
		mov	ebp, ebx
		mov	[esp+24Ch+var_214], 0

loc_3EAF:				; CODE XREF: _protobuf_c_message_unpack+9B0j
					; DATA XREF: .debug_loc:00016581o ...
		mov	eax, [ebp+8]

loc_3EB2:				; DATA XREF: .debug_loc:off_16727o
		test	eax, eax
		jz	loc_40D3
		mov	edx, [esp+24Ch+var_204]
		add	edx, [eax+14h]

loc_3EC1:				; DATA XREF: .debug_loc:off_16847o
		mov	ecx, [eax+8]
		cmp	ecx, 1
		jz	loc_3F81
		jnb	loc_3F5C
		mov	[esp+24Ch+var_24C], 1
		mov	ecx, [esp+24Ch+var_208]
		mov	eax, ebp

loc_3EE0:				; DATA XREF: .debug_loc:0001672Bo
					; .debug_loc:0001684Bo
		call	_parse_required_member

loc_3EE5:				; DATA XREF: .debug_info:0000BA06o
					; .debug_ranges:0001A82Co ...
		test	eax, eax
		jz	loc_4107

loc_3EED:				; CODE XREF: _protobuf_c_message_unpack+A57j
					; _protobuf_c_message_unpack+A68j ...
		inc	[esp+24Ch+var_214]
		add	ebp, 14h

loc_3EF4:				; DATA XREF: .debug_loc:000166C9o
					; .debug_loc:000166D0o
		mov	ebx, [esp+24Ch+var_21C]
		cmp	[esp+24Ch+var_214], ebx
		jnz	short loc_3EAF

loc_3EFE:				; CODE XREF: _protobuf_c_message_unpack+957j
					; DATA XREF: .debug_loc:00016603o ...
		inc	[esp+24Ch+var_22C]
		mov	ebx, [esp+24Ch+var_210]
		cmp	[esp+24Ch+var_22C], ebx
		jbe	loc_3E6E
		mov	ebp, [esp+24Ch+var_200]
		mov	ebx, [esp+24Ch+var_208]
		mov	ecx, [ebx+8]
		test	ecx, ecx
		jnz	loc_391A

loc_3F23:				; DATA XREF: .debug_loc:off_1759Fo
					; .debug_ranges:off_1AA48o
		mov	edx, [esp+24Ch+var_210]
		test	edx, edx
		jz	loc_391A
		mov	esi, [esp+24Ch+var_210]
		inc	esi

loc_3F34:				; DATA XREF: .debug_ranges:0001A7E0o
					; .debug_ranges:0001AA4Co
		mov	ebx, 1
		mov	edi, [esp+24Ch+var_208]

loc_3F3D:				; CODE XREF: _protobuf_c_message_unpack+A09j
					; DATA XREF: .debug_loc:000175A3o ...
		mov	eax, [ebp+ebx*4+0]
		test	eax, eax
		jz	short loc_3F52
		mov	[esp+24Ch+var_248], eax
		mov	eax, [edi+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edi+4]

loc_3F52:				; CODE XREF: _protobuf_c_message_unpack+9F7j
		inc	ebx
		cmp	ebx, esi
		jnz	short loc_3F3D
		jmp	loc_391A
; ---------------------------------------------------------------------------

loc_3F5C:				; CODE XREF: _protobuf_c_message_unpack+981j
					; DATA XREF: .debug_ranges:0001A7E8o ...
		cmp	ecx, 2
		jz	loc_4049
		mov	[esp+24Ch+var_244], 823h ; unsigned int
		mov	[esp+24Ch+var_248], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+24Ch+var_24C], offset off_4E54 ; void *
		call	__assert
; ---------------------------------------------------------------------------

loc_3F81:				; CODE XREF: _protobuf_c_message_unpack+97Bj
					; DATA XREF: .debug_info:0000B4D9o ...
		mov	[esp+24Ch+var_24C], 1
		mov	ecx, [esp+24Ch+var_208]
		mov	eax, ebp

loc_3F8E:				; DATA XREF: .debug_loc:00016AD6o
		call	_parse_required_member

loc_3F93:				; DATA XREF: .debug_info:0000B50Do
		test	eax, eax
		jz	loc_4107
		mov	eax, [ebp+8]
		mov	eax, [eax+10h]
		test	eax, eax
		jz	loc_3EED
		mov	edx, [esp+24Ch+var_204]
		mov	dword ptr [edx+eax], 1
		jmp	loc_3EED
; ---------------------------------------------------------------------------

loc_3FB9:				; CODE XREF: _protobuf_c_message_unpack+7EEj
					; DATA XREF: .debug_info:0000B4DDo ...
		mov	edi, [esp+24Ch+var_204]
		add	edi, [edx+14h]
		mov	[esp+24Ch+var_248], esi
		mov	ecx, [esp+24Ch+var_208]

loc_3FC8:				; DATA XREF: .debug_loc:00016438o
		mov	eax, [ecx+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [ecx]

loc_3FD0:				; DATA XREF: .debug_info:0000B2F7o
		mov	[edi], eax
		test	eax, eax
		jnz	loc_3A43
		mov	edx, 94Dh
		mov	eax, esi
		call	_alloc_failed_warning_constprop_14

loc_3FE6:				; DATA XREF: .debug_info:0000B308o
		inc	ebx
		mov	esi, [esp+24Ch+var_220]

loc_3FEB:				; DATA XREF: .debug_loc:00016518o
		cmp	ebx, [esi+18h]
		jnb	loc_413F
		lea	eax, [ebx+ebx*2]
		shl	eax, 4
		add	eax, [esi+1Ch]
		add	eax, 8
		jmp	short loc_4015
; ---------------------------------------------------------------------------
		align 4

loc_4004:				; CODE XREF: _protobuf_c_message_unpack+ACCj
					; _protobuf_c_message_unpack+ADCj
		inc	ebx

loc_4005:				; DATA XREF: .debug_info:000095B4o
		add	eax, 30h ; '0'
		mov	edx, [esp+24Ch+var_220]
		cmp	[edx+18h], ebx
		jbe	loc_413F

loc_4015:				; CODE XREF: _protobuf_c_message_unpack+AB4j
		cmp	dword ptr [eax], 2
		jnz	short loc_4004
		mov	edx, [eax+8]
		mov	edi, [esp+24Ch+var_204]

loc_4021:				; DATA XREF: .debug_info:0000959Bo
		mov	dword ptr [edi+edx], 0
		jmp	short loc_4004
; ---------------------------------------------------------------------------
		align 4

loc_402C:				; CODE XREF: _protobuf_c_message_unpack+B4j
					; DATA XREF: .debug_ranges:0001A724o ...
		mov	[esp+24Ch+var_1F8], 0
		mov	[esp+24Ch+var_218], 0
		mov	[esp+24Ch+var_210], 0
		jmp	loc_3A1A
; ---------------------------------------------------------------------------

loc_4049:				; CODE XREF: _protobuf_c_message_unpack+A13j
					; DATA XREF: .debug_ranges:0001A7F0o ...
		cmp	byte ptr [ebp+4], 2
		jnz	loc_4206
		mov	ebx, [eax+20h]
		test	ebx, ebx
		mov	ecx, [eax+0Ch]
		jnz	short loc_4069

loc_405D:				; DATA XREF: .debug_info:0000B530o
					; .debug_loc:off_16AF8o
		lea	ebx, [ecx-0Eh]

loc_4060:				; DATA XREF: .debug_info:0000B534o
		cmp	ebx, 2
		jbe	loc_4209

loc_4069:				; CODE XREF: _protobuf_c_message_unpack+B0Fj
					; DATA XREF: .debug_info:0000B54Eo ...
		mov	ebx, [eax+10h]

loc_406C:				; DATA XREF: .debug_info:0000B5D1o
					; .debug_loc:off_16CDDo ...
		cmp	ecx, 10h	; switch 17 cases
		ja	loc_3A6A	; jumptable 00003D04 default case

loc_4075:				; DATA XREF: .debug_info:00009641o
		jmp	ds:off_5518[ecx*4] ; switch jump
; ---------------------------------------------------------------------------

loc_407C:				; CODE XREF: _protobuf_c_message_unpack:loc_4075j
					; DATA XREF: .rdata:off_5518o
		mov	eax, 4		; jumptable 00004075 cases 0-2,6,7,10,12-14,16

loc_4081:				; CODE XREF: _protobuf_c_message_unpack+B85j
					; DATA XREF: .debug_loc:00016C4Bo ...
		add	ebx, [esp+24Ch+var_204]

loc_4085:				; DATA XREF: .debug_loc:00016CE1o
		mov	[esp+24Ch+var_228], ebx
		mov	edi, [ebx]
		imul	edi, eax
		mov	ebx, [edx]
		add	edi, ebx
		mov	[esp+24Ch+var_230], edi

loc_4096:				; DATA XREF: .debug_loc:off_16DCFo
		movzx	edx, byte ptr [ebp+5]

loc_409A:				; DATA XREF: .debug_loc:00016B3Eo
		mov	esi, [ebp+10h]
		add	esi, edx

loc_409F:				; DATA XREF: .debug_loc:off_16E95o
		mov	ebx, [ebp+0Ch]
		sub	ebx, edx

loc_40A4:				; DATA XREF: .debug_loc:off_16EF0o
					; .debug_loc:off_1707Co
		cmp	ecx, 0Dh	; switch 14 cases
		jbe	loc_42C5
		mov	[esp+24Ch+var_244], 7EDh ; jumptable 000042C5 default case
		mov	[esp+24Ch+var_248], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+24Ch+var_24C], offset off_4E54 ; void *

loc_40C4:				; DATA XREF: .debug_loc:0001716Bo
		call	__assert
; ---------------------------------------------------------------------------
unk_40C9	db  8Dh	; ç		; DATA XREF: .debug_info:0000B968o
					; .debug_loc:00016DD3o	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_40CC:				; CODE XREF: _protobuf_c_message_unpack:loc_4075j
					; DATA XREF: .rdata:off_5518o ...
		mov	eax, 8		; jumptable 00004075 cases 3-5,8,9,11,15
		jmp	short loc_4081
; ---------------------------------------------------------------------------

loc_40D3:				; CODE XREF: _protobuf_c_message_unpack+968j
					; DATA XREF: .debug_loc:00016B0Fo ...
		mov	esi, [esp+24Ch+var_204]
		mov	eax, [esi+4]
		mov	ebx, eax
		shl	ebx, 4
		add	ebx, [esi+8]

loc_40E2:				; DATA XREF: .debug_loc:off_17520o
		inc	eax
		mov	[esi+4], eax
		mov	eax, [ebp+0]
		mov	[ebx], eax
		movzx	eax, byte ptr [ebp+4]
		mov	[ebx+4], eax
		mov	esi, [ebp+0Ch]

loc_40F5:				; DATA XREF: .debug_info:00009692o
		mov	[ebx+8], esi

loc_40F8:				; DATA XREF: .debug_loc:off_17549o
					; .debug_ranges:off_1AA10o
		test	esi, esi
		jnz	loc_429B
		mov	dword ptr [ebx+0Ch], 0

loc_4107:				; CODE XREF: _protobuf_c_message_unpack+99Bj
					; _protobuf_c_message_unpack+A49j ...
		mov	ebx, [esp+24Ch+var_220]
		mov	edx, [ebx+4]
		mov	ebx, [esp+24Ch+var_20C]
		mov	eax, [ebx+8]
		test	eax, eax
		jz	loc_436D
		mov	eax, [eax]

loc_411F:				; CODE XREF: _protobuf_c_message_unpack+E26j
					; DATA XREF: .debug_info:00009728o
		mov	[esp+24Ch+var_244], edx
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aErrorParsingMe ; "error parsing member %s of %s"
		call	_printf

loc_4133:				; DATA XREF: .debug_info:0000BA50o
					; .debug_info:00009712o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_413F:				; CODE XREF: _protobuf_c_message_unpack+AA2j
					; _protobuf_c_message_unpack+AC3j ...
		mov	ebx, [esp+24Ch+var_208]
		mov	[esp+24Ch+var_248], ebx
		mov	eax, [esp+24Ch+var_204]
		mov	[esp+24Ch+var_24C], eax
		call	_protobuf_c_message_free_unpacked

loc_4153:				; DATA XREF: .debug_info:0000BB20o
		mov	eax, [ebx+8]
		test	eax, eax
		jnz	loc_3912

loc_415E:				; DATA XREF: .debug_info:0000BAD3o
					; .debug_loc:off_175BEo
		mov	eax, [esp+24Ch+var_210]
		test	eax, eax
		jz	loc_3912
		mov	ebx, 1
		lea	ebp, [esp+24Ch+var_1CC]
		mov	esi, [esp+24Ch+var_208]

loc_417A:				; CODE XREF: _protobuf_c_message_unpack+C48j
					; DATA XREF: .debug_loc:000175C2o
		mov	eax, [ebp+ebx*4+0]
		test	eax, eax
		jz	short loc_418F
		mov	[esp+24Ch+var_248], eax
		mov	eax, [esi+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [esi+4]

loc_418F:				; CODE XREF: _protobuf_c_message_unpack+C34j
		inc	ebx

loc_4190:				; DATA XREF: .debug_info:00009790o
		cmp	ebx, [esp+24Ch+var_210]
		jbe	short loc_417A
		jmp	loc_3912
; ---------------------------------------------------------------------------

loc_419B:				; CODE XREF: _protobuf_c_message_unpack+592j
					; DATA XREF: .debug_info:0000BAD7o ...
		mov	eax, ebp
		sub	eax, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aTooShortAfter3 ; "too short	after 32bit wiretype at	offse"...
		call	_printf

loc_41B1:				; DATA XREF: .debug_info:0000B1E2o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_41BD:				; DATA XREF: .debug_info:0000B206o
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_41C2:				; CODE XREF: _protobuf_c_message_unpack+541j
					; DATA XREF: .debug_ranges:0001A5A8o
		mov	[esp+24Ch+var_24C], offset aTooManyFields ; "too many fields"
		call	_printf

loc_41CE:				; DATA XREF: .debug_info:0000AF09o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_41DA:				; DATA XREF: .debug_info:0000AF21o
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_41DF:				; CODE XREF: _protobuf_c_message_unpack+459j
					; DATA XREF: .debug_ranges:0001A5ACo
		mov	eax, ebp

loc_41E1:				; DATA XREF: .debug_info:0000974Fo
		sub	eax, [esp+24Ch+var_1FC]
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aTooShortAfter6 ; "too short	after 64bit wiretype at	offse"...
		call	_printf

loc_41F5:				; DATA XREF: .debug_info:0000B21Ao
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4201:				; DATA XREF: .debug_info:0000B23Eo
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_4206:				; CODE XREF: _protobuf_c_message_unpack+B01j
					; DATA XREF: .debug_loc:000157D6o ...
		mov	ecx, [eax+0Ch]

loc_4209:				; CODE XREF: _protobuf_c_message_unpack+B17j
					; DATA XREF: .debug_loc:off_16978o ...
		mov	ebx, [eax+10h]

loc_420C:				; DATA XREF: .debug_loc:off_16A1Fo
					; .debug_loc:off_16A8Ao ...
		cmp	ecx, 10h	; switch 17 cases
		ja	loc_3A6A	; jumptable 00003D04 default case
		jmp	ds:off_555C[ecx*4] ; switch jump
; ---------------------------------------------------------------------------

loc_421C:				; CODE XREF: _protobuf_c_message_unpack+CC9j
					; DATA XREF: .rdata:off_555Co
		mov	eax, 8		; jumptable 00004215 cases 3-5,8,9,11,15

loc_4221:				; CODE XREF: _protobuf_c_message_unpack+D06j
					; DATA XREF: .debug_loc:000169EDo ...
		add	ebx, [esp+24Ch+var_204]

loc_4225:				; DATA XREF: .debug_loc:00016A23o
					; .debug_loc:off_16A61o
		imul	eax, [ebx]
		add	eax, [edx]

loc_422A:				; DATA XREF: .debug_info:000094E8o
		mov	[esp+24Ch+var_24C], 0
		mov	ecx, [esp+24Ch+var_208]

loc_4235:				; DATA XREF: .debug_loc:00016A8Eo
		mov	edx, eax

loc_4237:				; DATA XREF: .debug_loc:000169A6o
					; .debug_loc:00016A65o
		mov	eax, ebp

loc_4239:				; DATA XREF: .debug_loc:000169F8o
		call	_parse_required_member

loc_423E:				; DATA XREF: .debug_info:0000B4B2o
		test	eax, eax
		jz	loc_4107
		inc	dword ptr [ebx]
		jmp	loc_3EED
; ---------------------------------------------------------------------------

loc_424D:				; CODE XREF: _protobuf_c_message_unpack+CC9j
					; DATA XREF: .rdata:off_555Co ...
		mov	eax, 4		; jumptable 00004215 cases 0-2,6,7,10,12-14,16
		jmp	short loc_4221
; ---------------------------------------------------------------------------

loc_4254:				; CODE XREF: _protobuf_c_message_unpack+92Aj
					; DATA XREF: .debug_loc:0001697Co ...
		mov	ebx, [esp+24Ch+var_218]
		mov	[esp+24Ch+var_21C], ebx
		jmp	loc_3E8E
; ---------------------------------------------------------------------------

loc_4261:				; CODE XREF: _protobuf_c_message_unpack+87Aj
					; DATA XREF: .debug_loc:000157E2o ...
		mov	[esp+24Ch+var_24C], offset aLengthMustBeAM ; "length must be a multiple	of 8 for fixe"...
		call	_printf

loc_426D:				; DATA XREF: .debug_info:0000B0EAo
		mov	[esp+24Ch+var_24C], 0Ah	; int

loc_4274:				; DATA XREF: .debug_info:00009881o
		call	_putchar

loc_4279:				; DATA XREF: .debug_info:0000B102o
		jmp	loc_3BE4
; ---------------------------------------------------------------------------

loc_427E:				; CODE XREF: _protobuf_c_message_unpack+8CBj
		mov	[esp+24Ch+var_24C], offset aLengthMustBe_0 ; "length must be a multiple	of 4 for fixe"...
		call	_printf

loc_428A:				; DATA XREF: .debug_info:0000B116o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4296:				; DATA XREF: .debug_info:0000B12Eo
					; .debug_info:00009891o
		jmp	loc_3BE4
; ---------------------------------------------------------------------------

loc_429B:				; CODE XREF: _protobuf_c_message_unpack+BAEj
					; DATA XREF: .debug_loc:000157E6o ...
		mov	[esp+24Ch+var_248], esi
		mov	edi, [esp+24Ch+var_208]
		mov	eax, [edi+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edi]

loc_42AB:				; DATA XREF: .debug_info:0000B9DCo
		mov	[ebx+0Ch], eax
		test	eax, eax
		jz	loc_4393

loc_42B6:				; DATA XREF: .debug_ranges:0001AA1Co
		mov	esi, [ebp+10h]

loc_42B9:				; DATA XREF: .debug_loc:00017558o
		mov	ecx, [ebx+8]
		mov	edi, eax
		rep movsb

loc_42C0:				; DATA XREF: .debug_info:00009242o
		jmp	loc_3EED
; ---------------------------------------------------------------------------

loc_42C5:				; CODE XREF: _protobuf_c_message_unpack+B5Bj
					; DATA XREF: .debug_loc:00016EA0o ...
		jmp	ds:off_55A0[ecx*4] ; switch jump
; ---------------------------------------------------------------------------

loc_42CC:				; CODE XREF: _protobuf_c_message_unpack:loc_3E4Aj
					; DATA XREF: .debug_loc:00016EA4o ...
		mov	[esp+24Ch+var_248], ebx
		mov	edx, [esp+24Ch+var_208]
		mov	eax, [edx+10h]
		mov	[esp+24Ch+var_24C], eax
		call	dword ptr [edx]

loc_42DC:				; DATA XREF: .debug_info:0000BA92o
		mov	ecx, [esp+24Ch+var_204]
		mov	[ecx+8], eax
		test	eax, eax
		jnz	loc_3E5B
		mov	edx, 962h
		mov	eax, ebx
		call	_alloc_failed_warning_constprop_14

loc_42F7:				; DATA XREF: .debug_info:0000BAA3o
		jmp	loc_413F
; ---------------------------------------------------------------------------

loc_42FC:				; CODE XREF: _protobuf_c_message_unpack+778j
					; DATA XREF: .debug_loc:000157F2o ...
		mov	edx, 91Ah
		mov	eax, edi
		call	_alloc_failed_warning_constprop_14

loc_4308:				; DATA XREF: .debug_info:0000AEE0o
		mov	[esp+24Ch+var_210], esi
		jmp	loc_38B4
; ---------------------------------------------------------------------------

loc_4311:				; CODE XREF: _protobuf_c_message_unpack+7E3j
					; DATA XREF: .debug_loc:000157F6o ...
		mov	[esp+24Ch+var_244], 943h ; unsigned int
		mov	[esp+24Ch+var_248], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+24Ch+var_24C], offset aRvDescriptorNu ; "rv->descriptor !=	NULL"
		call	__assert
; ---------------------------------------------------------------------------

loc_432D:				; CODE XREF: _protobuf_c_message_unpack+82Fj
					; _protobuf_c_message_unpack+84Fj
					; DATA XREF: ...
		mov	eax, [edx]
		mov	[esp+24Ch+var_244], eax
		mov	ebx, [esp+24Ch+var_220]
		mov	eax, [ebx+4]
		mov	[esp+24Ch+var_248], eax
		mov	[esp+24Ch+var_24C], offset aMessageSMissin ; "message '%s': missing required field '%"...
		call	_printf

loc_434A:				; DATA XREF: .debug_info:0000B348o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4356:				; DATA XREF: .debug_info:0000B360o
		jmp	loc_413F
; ---------------------------------------------------------------------------

loc_435B:				; CODE XREF: _protobuf_c_message_unpack:loc_3715j
					; DATA XREF: .debug_loc:00015802o ...
		mov	[esp+24Ch+var_224], 0
		jmp	loc_3751
; ---------------------------------------------------------------------------

loc_4368:				; CODE XREF: _protobuf_c_message_unpack+3DFj
					; DATA XREF: .debug_loc:00015806o ...
		call	__imp____stack_chk_fail
; ---------------------------------------------------------------------------

loc_436D:				; CODE XREF: _protobuf_c_message_unpack+BCBj
					; DATA XREF: .debug_info:0000BB3Eo ...
		mov	eax, offset aUnknownField ; "*unknown-field*"
		jmp	loc_411F
; ---------------------------------------------------------------------------

loc_4377:				; CODE XREF: _protobuf_c_message_unpack+63j
					; DATA XREF: .debug_ranges:0001A80Co
		mov	[esp+24Ch+var_244], 891h ; unsigned int
		mov	[esp+24Ch+var_248], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+24Ch+var_24C], offset aDescMagicProto ; "(desc)->magic == PROTOBUF_C_MESSAGE_DES"...
		call	__assert
; ---------------------------------------------------------------------------

loc_4393:				; CODE XREF: _protobuf_c_message_unpack+D64j
					; DATA XREF: .debug_info:0000BB47o ...
		mov	edx, 80Fh
		mov	eax, esi
		call	_alloc_failed_warning_constprop_14

loc_439F:				; DATA XREF: .debug_info:0000B9EDo
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_43A4:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o ...
		xor	edi, edi	; jumptable 000042C5 cases 6,13
		test	ebx, ebx
		jz	short loc_441F

loc_43AA:				; CODE XREF: _protobuf_c_message_unpack+ECFj
					; DATA XREF: .debug_loc:off_17237o ...
		mov	eax, ebx
		cmp	ebx, 0Ah
		jbe	short loc_43B6

loc_43B1:				; DATA XREF: .debug_loc:00017259o
					; .debug_loc:00017260o
		mov	eax, 0Ah

loc_43B6:				; CODE XREF: _protobuf_c_message_unpack+E63j
					; DATA XREF: .debug_loc:off_1727Eo
		xor	edx, edx
		jmp	short loc_43BF
; ---------------------------------------------------------------------------

loc_43BA:				; CODE XREF: _protobuf_c_message_unpack+E77j
					; DATA XREF: .debug_info:0000B5FFo ...
		inc	edx
		cmp	eax, edx

loc_43BD:				; DATA XREF: .debug_info:000099C4o
		jbe	short loc_43C5

loc_43BF:				; CODE XREF: _protobuf_c_message_unpack+E6Cj
					; DATA XREF: .debug_loc:0001728Eo
		cmp	byte ptr [esi+edx], 0
		js	short loc_43BA

loc_43C5:				; CODE XREF: _protobuf_c_message_unpack:loc_43BDj
		cmp	eax, edx
		jz	short loc_442A

loc_43C9:				; DATA XREF: .debug_info:0000B603o
					; .debug_info:0000B625o
		inc	edx
		jz	short loc_442A

loc_43CC:				; DATA XREF: .debug_info:0000B639o
					; .debug_info:0000B65Bo ...
		mov	al, [esi]

loc_43CE:				; DATA XREF: .debug_loc:00017264o
		and	eax, 7Fh

loc_43D1:				; DATA XREF: .debug_loc:off_172C3o
		cmp	edx, 1
		jz	short loc_440F
		mov	cl, [esi+1]
		and	ecx, 7Fh
		shl	ecx, 7
		or	eax, ecx
		cmp	edx, 2
		jz	short loc_440F
		mov	cl, [esi+2]
		and	ecx, 7Fh
		shl	ecx, 0Eh
		or	eax, ecx
		cmp	edx, 3
		jz	short loc_440F
		mov	cl, [esi+3]
		and	ecx, 7Fh

loc_43FC:				; DATA XREF: .debug_info:000091C3o
		shl	ecx, 15h
		or	eax, ecx
		cmp	edx, 4
		jz	short loc_440F
		movzx	ecx, byte ptr [esi+4]
		shl	ecx, 1Ch
		or	eax, ecx

loc_440F:				; CODE XREF: _protobuf_c_message_unpack+E88j
					; _protobuf_c_message_unpack+E98j ...
		mov	ecx, [esp+24Ch+var_230]
		mov	[ecx+edi*4], eax
		inc	edi
		add	esi, edx

loc_4419:				; DATA XREF: .debug_loc:00016F20o
					; .debug_loc:0001723Bo	...
		sub	ebx, edx
		jnz	short loc_43AA

loc_441D:				; CODE XREF: _protobuf_c_message_unpack+10C0j
					; _protobuf_c_message_unpack+11AFj
					; DATA XREF: ...
		mov	ebx, edi

loc_441F:				; CODE XREF: _protobuf_c_message_unpack+E5Cj
					; _protobuf_c_message_unpack:loc_446Aj	...
		mov	eax, [esp+24Ch+var_228]
		add	[eax], ebx
		jmp	loc_3EED
; ---------------------------------------------------------------------------

loc_442A:				; CODE XREF: _protobuf_c_message_unpack+E7Bj
					; _protobuf_c_message_unpack+E7Ej
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aBadPackedRepea ; "bad packed-repeated enum or uint32 valu"...
		call	_printf

loc_4436:				; DATA XREF: .debug_info:0000B66Fo
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4442:				; DATA XREF: .debug_info:0000B687o
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_4447:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o ...
		shr	ebx, 3		; jumptable 000042C5 cases 5,9,11

loc_444A:				; CODE XREF: _protobuf_c_message_unpack+103Ej
					; DATA XREF: .debug_info:0000B5C8o
		mov	ecx, ebx
		imul	ecx, eax

loc_444F:				; DATA XREF: .debug_info:00009A5Bo
		mov	edi, [esp+24Ch+var_230]
		rep movsb
		mov	edx, [esp+24Ch+var_228]
		add	[edx], ebx
		jmp	loc_3EED
; ---------------------------------------------------------------------------

loc_4460:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o
		mov	[esp+24Ch+var_224], 0 ;	jumptable 000042C5 case	4
		test	ebx, ebx

loc_446A:				; DATA XREF: .debug_info:00009A6Bo
		jz	short loc_441F
		mov	[esp+24Ch+var_1FC], ebx

loc_4470:				; CODE XREF: _protobuf_c_message_unpack:loc_44E6j
					; DATA XREF: .debug_loc:off_172D6o ...
		mov	eax, [esp+24Ch+var_1FC]
		cmp	eax, 0Ah
		jbe	short loc_447E
		mov	eax, 0Ah

loc_447E:				; CODE XREF: _protobuf_c_message_unpack+F2Bj
					; DATA XREF: .debug_loc:000172F8o ...
		xor	edi, edi
		mov	ebx, [esp+24Ch+var_1FC]
		jmp	short loc_448B
; ---------------------------------------------------------------------------

loc_4486:				; CODE XREF: _protobuf_c_message_unpack+F43j
					; DATA XREF: .debug_info:0000B6ACo ...
		inc	edi
		cmp	eax, edi
		jbe	short loc_4491

loc_448B:				; CODE XREF: _protobuf_c_message_unpack+F38j
		cmp	byte ptr [esi+edi], 0
		js	short loc_4486

loc_4491:				; CODE XREF: _protobuf_c_message_unpack+F3Dj
					; DATA XREF: .debug_loc:000102D0o
		mov	[esp+24Ch+var_1FC], ebx
		cmp	eax, edi
		jz	short loc_4504

loc_4499:				; DATA XREF: .debug_info:0000B6B0o
					; .debug_info:0000B6D2o
		inc	edi
		jz	short loc_4504
		mov	edx, esi
		mov	eax, edi
		call	_parse_uint64

loc_44A5:				; DATA XREF: .debug_info:0000B6E6o
					; .debug_info:0000B700o ...
		mov	ecx, eax

loc_44A7:				; DATA XREF: .debug_info:0000995Co
					; .debug_info:000099D7o ...
		and	ecx, 1
		test	ecx, ecx
		jz	short loc_44F0
		shrd	eax, edx, 1

loc_44B2:				; DATA XREF: .debug_loc:00017342o
		shr	edx, 1
		mov	ebx, eax
		not	ebx
		mov	[esp+24Ch+var_1F4], ebx
		mov	ecx, edx
		not	ecx
		mov	[esp+24Ch+var_1F0], ecx

loc_44C4:				; CODE XREF: _protobuf_c_message_unpack+FB6j
					; DATA XREF: .debug_ranges:0001A97Co
		mov	eax, [esp+24Ch+var_1F4]
		mov	edx, [esp+24Ch+var_1F0]
		mov	ecx, [esp+24Ch+var_224]
		mov	ebx, [esp+24Ch+var_230]
		mov	[ebx+ecx*8], eax
		mov	[ebx+ecx*8+4], edx
		inc	ecx
		mov	[esp+24Ch+var_224], ecx
		add	esi, edi

loc_44E2:				; DATA XREF: .debug_loc:000172DAo
					; .debug_ranges:0001A964o
		sub	[esp+24Ch+var_1FC], edi

loc_44E6:				; DATA XREF: .debug_loc:00016F90o
		jnz	short loc_4470

loc_44E8:				; CODE XREF: _protobuf_c_message_unpack+1036j
		mov	ebx, ecx
		jmp	loc_441F
; ---------------------------------------------------------------------------
		align 10h

loc_44F0:				; CODE XREF: _protobuf_c_message_unpack+F60j
					; DATA XREF: .debug_ranges:0001A968o ...
		mov	ecx, eax
		mov	ebx, edx
		shrd	ecx, ebx, 1
		shr	ebx, 1
		mov	[esp+24Ch+var_1F4], ecx
		mov	[esp+24Ch+var_1F0], ebx
		jmp	short loc_44C4
; ---------------------------------------------------------------------------

loc_4504:				; CODE XREF: _protobuf_c_message_unpack+F4Bj
					; _protobuf_c_message_unpack+F4Ej
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aBadPackedRep_0 ; "bad packed-repeated sint64 value"
		call	_printf

loc_4510:				; DATA XREF: .debug_info:0000B71Ao
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_451C:				; DATA XREF: .debug_info:0000B732o
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_4521:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o ...
		xor	ecx, ecx	; jumptable 000042C5 cases 3,8
		test	ebx, ebx
		jz	loc_441F

loc_452B:				; CODE XREF: _protobuf_c_message_unpack:loc_4580j
					; DATA XREF: .debug_loc:off_17366o ...
		mov	eax, ebx
		cmp	ebx, 0Ah
		jbe	short loc_4537

loc_4532:				; DATA XREF: .debug_loc:00017388o
		mov	eax, 0Ah

loc_4537:				; CODE XREF: _protobuf_c_message_unpack+FE4j
					; DATA XREF: .debug_loc:off_173ADo
		xor	edi, edi
		jmp	short loc_4540
; ---------------------------------------------------------------------------

loc_453B:				; CODE XREF: _protobuf_c_message_unpack+FF8j
					; DATA XREF: .debug_info:0000B758o ...
		inc	edi
		cmp	edi, eax
		jnb	short loc_4546

loc_4540:				; CODE XREF: _protobuf_c_message_unpack+FEDj
		cmp	byte ptr [esi+edi], 0
		js	short loc_453B

loc_4546:				; CODE XREF: _protobuf_c_message_unpack+FF2j
		cmp	eax, edi
		jz	loc_4721

loc_454E:				; DATA XREF: .debug_info:0000B75Co
					; .debug_info:0000B77Eo
		inc	edi
		mov	[esp+24Ch+var_224], edi
		jz	loc_4721
		mov	edx, esi
		mov	eax, [esp+24Ch+var_224]
		mov	[esp+24Ch+var_238], ecx
		call	_parse_uint64

loc_4568:				; DATA XREF: .debug_info:0000B78Eo
					; .debug_info:00009B64o
		mov	ecx, [esp+24Ch+var_238]
		mov	edi, [esp+24Ch+var_230]
		mov	[edi+ecx*8], eax
		mov	[edi+ecx*8+4], edx
		inc	ecx
		add	esi, [esp+24Ch+var_224]

loc_457C:				; DATA XREF: .debug_loc:0001736Ao
					; .debug_ranges:0001A994o
		sub	ebx, [esp+24Ch+var_224]

loc_4580:				; DATA XREF: .debug_info:00009B13o
		jnz	short loc_452B
		jmp	loc_44E8
; ---------------------------------------------------------------------------

loc_4587:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o
		shr	ebx, 2		; jumptable 000042C5 cases 2,7,10
		jmp	loc_444A
; ---------------------------------------------------------------------------

loc_458F:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o
		xor	edi, edi	; jumptable 000042C5 case 0
		test	ebx, ebx
		jz	loc_441F

loc_4599:				; CODE XREF: _protobuf_c_message_unpack+10BEj
					; DATA XREF: .debug_loc:off_173CCo ...
		mov	eax, ebx
		cmp	ebx, 0Ah
		jbe	short loc_45A5

loc_45A0:				; DATA XREF: .debug_loc:000173EEo
		mov	eax, 0Ah

loc_45A5:				; CODE XREF: _protobuf_c_message_unpack+1052j
					; DATA XREF: .debug_loc:off_17413o
		xor	edx, edx
		jmp	short loc_45AE
; ---------------------------------------------------------------------------

loc_45A9:				; CODE XREF: _protobuf_c_message_unpack+1066j
					; DATA XREF: .debug_info:0000B7E5o ...
		inc	edx
		cmp	edx, eax
		jnb	short loc_45B4

loc_45AE:				; CODE XREF: _protobuf_c_message_unpack+105Bj
		cmp	byte ptr [esi+edx], 0
		js	short loc_45A9

loc_45B4:				; CODE XREF: _protobuf_c_message_unpack+1060j
		cmp	eax, edx
		jz	short loc_4611

loc_45B8:				; DATA XREF: .debug_info:0000B7E9o
					; .debug_info:0000B80Bo
		inc	edx
		jz	short loc_4611

loc_45BB:				; DATA XREF: .debug_info:0000B81Fo
					; .debug_info:0000B845o ...
		mov	al, [esi]
		and	eax, 7Fh

loc_45C0:				; DATA XREF: .debug_loc:off_17458o
		cmp	edx, 1
		jz	short loc_45FE
		mov	cl, [esi+1]
		and	ecx, 7Fh
		shl	ecx, 7
		or	eax, ecx
		cmp	edx, 2
		jz	short loc_45FE
		mov	cl, [esi+2]
		and	ecx, 7Fh
		shl	ecx, 0Eh
		or	eax, ecx
		cmp	edx, 3
		jz	short loc_45FE
		mov	cl, [esi+3]
		and	ecx, 7Fh
		shl	ecx, 15h
		or	eax, ecx
		cmp	edx, 4
		jz	short loc_45FE
		movzx	ecx, byte ptr [esi+4]

loc_45F9:				; DATA XREF: .debug_info:00009C00o
		shl	ecx, 1Ch
		or	eax, ecx

loc_45FE:				; CODE XREF: _protobuf_c_message_unpack+1077j
					; _protobuf_c_message_unpack+1087j ...
		mov	ecx, [esp+24Ch+var_230]
		mov	[ecx+edi*4], eax
		inc	edi
		add	esi, edx

loc_4608:				; DATA XREF: .debug_loc:000173D0o
					; .debug_loc:00017436o	...
		sub	ebx, edx
		jnz	short loc_4599
		jmp	loc_441D
; ---------------------------------------------------------------------------

loc_4611:				; CODE XREF: _protobuf_c_message_unpack+106Aj
					; _protobuf_c_message_unpack+106Dj
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aBadPackedRep_1 ; "bad packed-repeated int32	value"

loc_4618:				; DATA XREF: .debug_info:00009C12o
		call	_printf

loc_461D:				; DATA XREF: .debug_info:0000B878o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4629:				; DATA XREF: .debug_info:0000B890o
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_462E:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o ...
		test	ebx, ebx	; jumptable 000042C5 case 12

loc_4630:				; DATA XREF: .debug_info:00009C32o
		jz	loc_441F
		movzx	edx, byte ptr [esi]
		cmp	dl, 1
		ja	short loc_4659
		xor	eax, eax

loc_4640:				; CODE XREF: _protobuf_c_message_unpack+110Bj
					; DATA XREF: .debug_loc:0001714Co ...
		mov	edi, [esp+24Ch+var_230]
		mov	[edi+eax*4], edx
		inc	eax
		cmp	eax, ebx
		jz	loc_441F
		movzx	edx, byte ptr [esi+eax]
		cmp	dl, 1
		jbe	short loc_4640

loc_4659:				; CODE XREF: _protobuf_c_message_unpack+10F0j
		mov	[esp+24Ch+var_24C], offset aBadPackedRep_2 ; "bad packed-repeated boolean value"
		call	_printf

loc_4665:				; DATA XREF: .debug_info:0000B992o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4671:				; DATA XREF: .debug_info:0000B9AAo
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_4676:				; CODE XREF: _protobuf_c_message_unpack:loc_42C5j
					; DATA XREF: .rdata:off_55A0o
		xor	edi, edi	; jumptable 000042C5 case 1
		test	ebx, ebx
		jz	loc_441F

loc_4680:				; CODE XREF: _protobuf_c_message_unpack+11ADj
					; DATA XREF: .debug_loc:off_1746Bo ...
		mov	eax, ebx
		cmp	ebx, 0Ah
		jbe	short loc_468C

loc_4687:				; DATA XREF: .debug_loc:0001748Do
					; .debug_loc:00017494o
		mov	eax, 0Ah

loc_468C:				; CODE XREF: _protobuf_c_message_unpack+1139j
					; DATA XREF: .debug_loc:off_174B2o
		xor	edx, edx

loc_468E:				; DATA XREF: .debug_info:00009C8Co
		jmp	short loc_4695
; ---------------------------------------------------------------------------

loc_4690:				; CODE XREF: _protobuf_c_message_unpack+114Dj
					; DATA XREF: .debug_info:0000B8B5o ...
		inc	edx
		cmp	eax, edx
		jbe	short loc_469B

loc_4695:				; CODE XREF: _protobuf_c_message_unpack:loc_468Ej
					; DATA XREF: .debug_loc:000174C2o
		cmp	byte ptr [esi+edx], 0
		js	short loc_4690

loc_469B:				; CODE XREF: _protobuf_c_message_unpack+1147j
		cmp	eax, edx
		jz	short loc_4704

loc_469F:				; DATA XREF: .debug_info:0000B8B9o
					; .debug_info:0000B8DBo
		inc	edx
		jz	short loc_4704

loc_46A2:				; DATA XREF: .debug_info:0000B8EFo
					; .debug_info:0000B911o ...
		mov	al, [esi]

loc_46A4:				; DATA XREF: .debug_loc:00017498o
		and	eax, 7Fh

loc_46A7:				; DATA XREF: .debug_loc:off_17502o
		cmp	edx, 1
		jz	short loc_46E5
		mov	cl, [esi+1]
		and	ecx, 7Fh
		shl	ecx, 7
		or	eax, ecx
		cmp	edx, 2
		jz	short loc_46E5
		mov	cl, [esi+2]
		and	ecx, 7Fh
		shl	ecx, 0Eh
		or	eax, ecx
		cmp	edx, 3
		jz	short loc_46E5
		mov	cl, [esi+3]
		and	ecx, 7Fh
		shl	ecx, 15h
		or	eax, ecx
		cmp	edx, 4
		jz	short loc_46E5
		movzx	ecx, byte ptr [esi+4]
		shl	ecx, 1Ch
		or	eax, ecx

loc_46E5:				; CODE XREF: _protobuf_c_message_unpack+115Ej
					; _protobuf_c_message_unpack+116Ej ...
		test	al, 1
		jz	short loc_4700
		shr	eax, 1

loc_46EB:				; DATA XREF: .debug_loc:00017506o
		not	eax

loc_46ED:				; CODE XREF: _protobuf_c_message_unpack+11B6j
					; DATA XREF: .debug_ranges:0001A9DCo
		mov	ecx, [esp+24Ch+var_230]
		mov	[ecx+edi*4], eax
		inc	edi
		add	esi, edx

loc_46F7:				; DATA XREF: .debug_loc:0001746Fo
					; .debug_loc:000174D5o	...
		sub	ebx, edx
		jnz	short loc_4680
		jmp	loc_441D
; ---------------------------------------------------------------------------

loc_4700:				; CODE XREF: _protobuf_c_message_unpack+119Bj
					; DATA XREF: .debug_loc:000174DCo ...
		shr	eax, 1
		jmp	short loc_46ED
; ---------------------------------------------------------------------------

loc_4704:				; CODE XREF: _protobuf_c_message_unpack+1151j
					; _protobuf_c_message_unpack+1154j
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aBadPackedRep_3 ; "bad packed-repeated sint32 value"
		call	_printf

loc_4710:				; DATA XREF: .debug_info:0000B93Fo
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_471C:				; DATA XREF: .debug_info:0000B957o
		jmp	loc_4107
; ---------------------------------------------------------------------------

loc_4721:				; CODE XREF: _protobuf_c_message_unpack+FFCj
					; _protobuf_c_message_unpack+1007j
					; DATA XREF: ...
		mov	[esp+24Ch+var_24C], offset aBadPackedRep_4 ; "bad packed-repeated int64/uint64 value"
		call	_printf

loc_472D:				; DATA XREF: .debug_info:0000B7A8o
		mov	[esp+24Ch+var_24C], 0Ah	; int
		call	_putchar

loc_4739:				; DATA XREF: .debug_info:0000B7C0o
		jmp	loc_4107
_protobuf_c_message_unpack endp

; ---------------------------------------------------------------------------
unk_473E	db  66h	; f		; DATA XREF: .debug_info:0000AAB4o
					; .debug_ranges:0001A814o ...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_init
_protobuf_c_message_init proc near	; DATA XREF: .debug_info:0000BBA2o
					; .debug_loc:off_175DDo

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch

loc_4743:				; DATA XREF: .debug_loc:000175E1o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ecx
		xor	ecx, ecx
		mov	ecx, [esp+1Ch+var_10]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_476F
		mov	[esp+1Ch+arg_0], edx
		mov	eax, [eax+2Ch]
		add	esp, 1Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_476F:				; CODE XREF: _protobuf_c_message_init+21j
		call	__imp____stack_chk_fail
_protobuf_c_message_init endp


; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_service_generated_init
_protobuf_c_service_generated_init proc	near ; DATA XREF: .debug_info:0000BBA6o
					; .debug_info:0000BBC3o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi

loc_4775:				; DATA XREF: .debug_loc:00017619o
		sub	esp, 28h
		mov	edi, [esp+2Ch+arg_0]
		mov	eax, [esp+2Ch+arg_4]
		mov	edx, [esp+2Ch+arg_8]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], ecx
		xor	ecx, ecx
		cmp	dword ptr [eax], 14159BC3h
		jnz	short loc_47C4
		mov	[edi], eax
		mov	[edi+8], edx
		mov	dword ptr [edi+4], offset _protobuf_c_service_invoke_internal
		mov	ecx, [eax+14h]
		shl	ecx, 2
		lea	edx, [edi+0Ch]

loc_47AD:				; DATA XREF: .debug_info:00009D84o
		xor	eax, eax
		mov	edi, edx
		rep stosb
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_47E0
		add	esp, 28h
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_47C4:				; CODE XREF: _protobuf_c_service_generated_init+22j
		mov	[esp+2Ch+var_24], 0A07h	; unsigned int
		mov	[esp+2Ch+var_28], offset aLibProtobufC_c ; "lib/protobuf-c.c"
		mov	[esp+2Ch+var_2C], offset aDescriptorMagi ; "(descriptor)->magic	== PROTOBUF_C_SERVI"...
		call	__assert
; ---------------------------------------------------------------------------

loc_47E0:				; CODE XREF: _protobuf_c_service_generated_init+49j
					; DATA XREF: .debug_info:0000BC37o
		call	__imp____stack_chk_fail
_protobuf_c_service_generated_init endp

; ---------------------------------------------------------------------------
unk_47E5	db  8Dh	; ç		; DATA XREF: .debug_info:0000BBF8o
					; .debug_info:0000BC61o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_service_destroy
_protobuf_c_service_destroy proc near	; DATA XREF: .debug_info:0000BC8Bo
					; .debug_loc:off_17665o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_47EB:				; DATA XREF: .debug_loc:00017669o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4813
		mov	[esp+1Ch+arg_0], eax
		mov	eax, [eax+8]
		add	esp, 1Ch
		jmp	eax
; ---------------------------------------------------------------------------

loc_4813:				; CODE XREF: _protobuf_c_service_destroy+1Dj
		call	__imp____stack_chk_fail
_protobuf_c_service_destroy endp


; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_enum_descriptor_get_value_by_name
_protobuf_c_enum_descriptor_get_value_by_name proc near	; DATA XREF: .debug_info:0000BC8Fo
					; .debug_info:0000BCABo ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_4819:				; DATA XREF: .debug_loc:000176A1o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edx, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_30], edx
		mov	ecx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_34], ecx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_483A:				; DATA XREF: .debug_loc:off_17737o
		mov	ebx, [edx+1Ch]

loc_483D:				; DATA XREF: .debug_loc:off_17779o
		mov	[esp+4Ch+var_3C], 0

loc_4845:				; DATA XREF: .debug_loc:0001773Bo
		cmp	ebx, 1
		jbe	loc_48F2

loc_484E:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+D4j
		mov	edx, [esp+4Ch+var_30]
		mov	edx, [edx+20h]
		mov	[esp+4Ch+var_38], edx

loc_4859:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+71j
					; DATA XREF: .debug_ranges:off_1AA60o
		mov	esi, ebx
		shr	esi, 1
		mov	edi, [esp+4Ch+var_3C]
		add	edi, esi

loc_4863:				; DATA XREF: .debug_loc:off_177CEo
		mov	ecx, [esp+4Ch+var_38]
		lea	ebp, [ecx+edi*8]
		mov	edx, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_48], edx ;	char *
		mov	eax, [ebp+0]
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	_strcmp

loc_487D:				; DATA XREF: .debug_info:0000BD63o
					; .debug_loc:off_177F7o
		cmp	eax, 0
		jz	short loc_48FC
		jl	short loc_48D8

loc_4884:				; DATA XREF: .debug_loc:0001777Do
					; .debug_loc:00017784o	...
		mov	ebx, esi
		cmp	esi, 1
		ja	short loc_4859
		test	esi, esi
		jz	short loc_490E

loc_488F:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name:loc_48F6j
					; DATA XREF: .debug_loc:00017788o ...
		mov	edx, [esp+4Ch+var_30]
		mov	eax, [edx+20h]
		mov	ecx, [esp+4Ch+var_3C]
		lea	ebx, [eax+ecx*8]
		mov	edx, [esp+4Ch+var_34]

loc_48A1:				; DATA XREF: .debug_info:00009E9Co
		mov	[esp+4Ch+var_48], edx ;	char *
		mov	eax, [ebx]
		mov	[esp+4Ch+var_4C], eax ;	char *
		call	_strcmp

loc_48AF:				; DATA XREF: .debug_info:0000BD76o
		test	eax, eax
		jnz	short loc_490E
		mov	eax, [ebx+4]

loc_48B6:				; DATA XREF: .debug_info:00009E4Bo
		lea	edx, [eax+eax*2]
		mov	ecx, [esp+4Ch+var_30]
		mov	eax, [ecx+18h]
		lea	eax, [eax+edx*4]

loc_48C3:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+F4j
					; _protobuf_c_enum_descriptor_get_value_by_name+F8j
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard

loc_48CD:				; DATA XREF: .debug_info:00009ED5o
		jnz	short loc_4912
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_48D8:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+6Aj
		mov	ebp, edi

loc_48DA:				; DATA XREF: .debug_ranges:0001AA68o
		add	ebx, [esp+4Ch+var_3C]
		mov	eax, edi
		not	eax
		add	ebx, eax
		inc	ebp
		mov	[esp+4Ch+var_3C], ebp

loc_48E9:				; DATA XREF: .debug_ranges:0001AA6Co
		cmp	ebx, 1
		ja	loc_484E

loc_48F2:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+30j
		mov	esi, ebx
		test	esi, esi

loc_48F6:				; DATA XREF: .debug_info:00009EEAo
		jnz	short loc_488F
		jmp	short loc_490E
; ---------------------------------------------------------------------------
		align 4

loc_48FC:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+68j
					; DATA XREF: .debug_ranges:0001AA70o
		mov	eax, [ebp+4]
		lea	edx, [eax+eax*2]
		mov	ecx, [esp+4Ch+var_30]
		mov	eax, [ecx+18h]
		lea	eax, [eax+edx*4]
		jmp	short loc_48C3
; ---------------------------------------------------------------------------

loc_490E:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+75j
					; _protobuf_c_enum_descriptor_get_value_by_name+99j ...
		xor	eax, eax
		jmp	short loc_48C3
; ---------------------------------------------------------------------------

loc_4912:				; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name:loc_48CDj
					; DATA XREF: .debug_info:00009F10o
		call	__imp____stack_chk_fail
_protobuf_c_enum_descriptor_get_value_by_name endp

; ---------------------------------------------------------------------------
unk_4917	db  90h	; ê		; DATA XREF: .debug_info:0000BCEFo
					; .debug_info:0000BD8Co

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_enum_descriptor_get_value
_protobuf_c_enum_descriptor_get_value proc near	; DATA XREF: .debug_info:0000BDCFo
					; .debug_loc:off_17820o

var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_4919:				; DATA XREF: .debug_loc:00017824o
		push	edi
		push	esi
		push	ebx

loc_491C:				; DATA XREF: .debug_loc:off_17850o
		sub	esp, 2Ch

loc_491F:				; DATA XREF: .debug_loc:00017854o
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_30], eax
		mov	edx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_34], edx

loc_492F:				; DATA XREF: .debug_info:off_9F33o
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], ecx
		xor	ecx, ecx
		mov	edi, [eax+28h]
		mov	eax, [eax+24h]

loc_4941:				; DATA XREF: .debug_info:0000BE10o
					; .debug_loc:off_178BAo ...
		test	eax, eax
		jz	loc_49EE
		xor	esi, esi

loc_494B:				; DATA XREF: .debug_loc:off_17928o
					; .debug_loc:off_17967o
		cmp	eax, 1

loc_494E:				; DATA XREF: .debug_info:00009F4Ao
		jbe	loc_49DD

loc_4954:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+54j
					; _protobuf_c_enum_descriptor_get_value+BFj
					; DATA XREF: ...
		mov	ebp, eax
		shr	ebp, 1
		lea	ecx, [ebp+esi+0]

loc_495C:				; DATA XREF: .debug_loc:off_17990o
		lea	ebx, [edi+ecx*8]
		mov	edx, [ebx]
		cmp	[esp+3Ch+var_34], edx
		jge	short loc_49BC
		mov	eax, ebp

loc_4969:				; DATA XREF: .debug_ranges:0001AAB4o
		cmp	ebp, 1
		jnz	short loc_4954

loc_496E:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+C7j
					; DATA XREF: .debug_info:0000BE78o ...
		lea	eax, [edi+esi*8]

loc_4971:				; DATA XREF: .debug_info:00009F6Ao
					; .debug_loc:0001796Bo
		mov	edx, [eax+4]

loc_4974:				; DATA XREF: .debug_loc:off_179DBo
		mov	ecx, [edi+esi*8+0Ch]

loc_4978:				; DATA XREF: .debug_loc:off_179EEo
		mov	eax, [eax]
		cmp	[esp+3Ch+var_34], eax
		jl	short loc_49EE
		mov	ebx, eax
		sub	ebx, edx
		add	ecx, ebx

loc_4986:				; DATA XREF: .debug_loc:000179F2o
		cmp	[esp+3Ch+var_34], ecx
		jge	short loc_49EE
		mov	ebp, [esp+3Ch+var_34]

loc_4990:				; DATA XREF: .debug_info:00009F8Ao
		sub	ebp, eax
		add	ebp, edx

loc_4994:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+D4j
					; DATA XREF: .debug_info:0000BE7Co ...
		test	ebp, ebp
		js	short loc_49EE

loc_4998:				; DATA XREF: .debug_info:0000BB06o
		lea	edx, [ebp+ebp*2+0]
		mov	ecx, [esp+3Ch+var_30]
		mov	eax, [ecx+18h]
		lea	eax, [eax+edx*4]

loc_49A6:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+C9j
					; _protobuf_c_enum_descriptor_get_value+D8j
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_49F2
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi

loc_49B8:				; DATA XREF: .debug_loc:000178DDo
					; .debug_loc:000178E4o
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_49BA	db  66h	; f		; DATA XREF: .debug_loc:000178E8o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_49BC:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+4Dj
					; DATA XREF: .debug_ranges:0001AA88o ...
		inc	ecx
		mov	ebp, [ebx+4]
		mov	ebx, edx
		sub	ebx, ebp
		add	ebx, [edi+ecx*8+4]
		cmp	[esp+3Ch+var_34], ebx
		jl	short loc_49E4

loc_49CE:				; DATA XREF: .debug_info:0000BE64o
					; .debug_loc:off_179C8o
		add	eax, esi
		sub	eax, ecx
		mov	esi, ecx

loc_49D4:				; DATA XREF: .debug_info:0000BE68o
					; .debug_ranges:0001AABCo
		cmp	eax, 1
		ja	loc_4954

loc_49DD:				; CODE XREF: _protobuf_c_enum_descriptor_get_value:loc_494Ej
					; DATA XREF: .debug_loc:000179CCo
		test	eax, eax
		jnz	short loc_496E
		jmp	short loc_49A6
; ---------------------------------------------------------------------------
		align 4

loc_49E4:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+B4j
					; DATA XREF: .debug_ranges:0001AAC0o
		mov	eax, [esp+3Ch+var_34]
		sub	eax, edx
		add	ebp, eax
		jmp	short loc_4994
; ---------------------------------------------------------------------------

loc_49EE:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+2Bj
					; _protobuf_c_enum_descriptor_get_value+66j ...
		xor	eax, eax
		jmp	short loc_49A6
; ---------------------------------------------------------------------------

loc_49F2:				; CODE XREF: _protobuf_c_enum_descriptor_get_value+98j
		call	__imp____stack_chk_fail
_protobuf_c_enum_descriptor_get_value endp

; ---------------------------------------------------------------------------
unk_49F7	db  90h	; ê		; DATA XREF: .debug_info:0000BDD3o
					; .debug_info:0000BE96o

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_descriptor_get_field_by_name
_protobuf_c_message_descriptor_get_field_by_name proc near
					; DATA XREF: .debug_info:0000BED9o
					; .debug_loc:off_17A1Eo

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_49F9:				; DATA XREF: .debug_loc:00017A22o
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_30], edx
		mov	edx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_34], edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_4A1A:				; DATA XREF: .debug_loc:off_17AB8o
		mov	edx, [esp+5Ch+var_30]
		mov	ebx, [edx+18h]

loc_4A21:				; DATA XREF: .debug_loc:off_17AFAo
					; .debug_info:0000A017o
		mov	[esp+5Ch+var_3C], 0

loc_4A29:				; DATA XREF: .debug_loc:00017ABCo
		cmp	ebx, 1

loc_4A2C:				; DATA XREF: .debug_info:0000A138o
					; .debug_info:0000A1C7o ...
		jbe	loc_4AF2

loc_4A32:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+F4j
		mov	edx, [esp+5Ch+var_30]
		mov	edx, [edx+1Ch]
		mov	[esp+5Ch+var_38], edx
		mov	edx, [esp+5Ch+var_30]
		mov	esi, [edx+20h]
		mov	ebp, esi

loc_4A46:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+8Ej
					; DATA XREF: .debug_ranges:off_1AAD0o
		mov	edx, ebx
		shr	edx, 1
		mov	[esp+5Ch+var_40], edx
		mov	esi, [esp+5Ch+var_3C]
		add	esi, edx

loc_4A54:				; DATA XREF: .debug_loc:off_17B90o
		mov	eax, [ebp+esi*4+0]
		lea	edi, [eax+eax*2]
		shl	edi, 4
		add	edi, [esp+5Ch+var_38]

loc_4A62:				; DATA XREF: .debug_loc:off_17B5Co
		mov	edx, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_58], edx ;	char *
		mov	eax, [edi]
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	_strcmp

loc_4A74:				; DATA XREF: .debug_info:0000BF61o
					; .debug_loc:off_17BB9o
		cmp	eax, 0
		jz	loc_4B00
		jl	short loc_4AD8

loc_4A7F:				; DATA XREF: .debug_loc:00017AFEo
					; .debug_ranges:0001AAD4o
		mov	ebx, [esp+5Ch+var_40]
		cmp	ebx, 1
		ja	short loc_4A46
		mov	edx, [esp+5Ch+var_40]
		test	edx, edx
		jz	short loc_4B04

loc_4A90:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+104j
					; DATA XREF: .debug_loc:00017B60o ...
		mov	edx, [esp+5Ch+var_30]
		mov	eax, [edx+20h]
		mov	edx, [esp+5Ch+var_3C]
		mov	eax, [eax+edx*4]
		lea	ebp, [eax+eax*2]
		shl	ebp, 4
		mov	edx, [esp+5Ch+var_30]
		add	ebp, [edx+1Ch]
		mov	edx, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_58], edx ;	char *
		mov	eax, [ebp+0]
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	_strcmp

loc_4ABE:				; DATA XREF: .debug_info:0000BF74o
		test	eax, eax
		jnz	short loc_4B04

loc_4AC2:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+10Aj
					; _protobuf_c_message_descriptor_get_field_by_name+10Ej
		mov	eax, ebp
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4B08
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_4AD8:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+85j
					; DATA XREF: .debug_loc:00017BC4o
		mov	edi, esi

loc_4ADA:				; DATA XREF: .debug_ranges:0001AAD8o
		add	ebx, [esp+5Ch+var_3C]
		mov	eax, esi

loc_4AE0:				; DATA XREF: .debug_loc:00017BC8o
		not	eax
		add	ebx, eax
		inc	edi

loc_4AE5:				; DATA XREF: .debug_info:0000A0E9o
		mov	[esp+5Ch+var_3C], edi

loc_4AE9:				; DATA XREF: .debug_ranges:0001AADCo
		cmp	ebx, 1
		ja	loc_4A32

loc_4AF2:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name:loc_4A2Cj
		mov	[esp+5Ch+var_40], ebx
		mov	edx, [esp+5Ch+var_40]
		test	edx, edx
		jnz	short loc_4A90
		jmp	short loc_4B04
; ---------------------------------------------------------------------------

loc_4B00:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+7Fj
		mov	ebp, edi
		jmp	short loc_4AC2
; ---------------------------------------------------------------------------

loc_4B04:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+96j
					; _protobuf_c_message_descriptor_get_field_by_name+C8j	...
		xor	ebp, ebp
		jmp	short loc_4AC2
; ---------------------------------------------------------------------------

loc_4B08:				; CODE XREF: _protobuf_c_message_descriptor_get_field_by_name+D6j
		call	__imp____stack_chk_fail
_protobuf_c_message_descriptor_get_field_by_name endp

; ---------------------------------------------------------------------------
unk_4B0D	db  8Dh	; ç		; DATA XREF: .debug_info:0000BEDDo
					; .debug_info:0000BF8Ao
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_message_descriptor_get_field
_protobuf_c_message_descriptor_get_field proc near ; DATA XREF:	.debug_info:0000BFC5o
					; .debug_loc:off_17BE2o

var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_4B11:				; DATA XREF: .debug_loc:00017BE6o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [esp+3Ch+arg_0]
		mov	[esp+3Ch+var_30], eax
		mov	edx, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_34], edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], eax

loc_4B30:				; DATA XREF: .debug_info:0000A121o
		xor	eax, eax
		mov	edx, [esp+3Ch+var_30]
		mov	edi, [edx+28h]
		mov	eax, [edx+24h]

loc_4B3C:				; DATA XREF: .debug_info:0000C006o
					; .debug_loc:off_17C7Co ...
		test	eax, eax

loc_4B3E:				; DATA XREF: .debug_info:0000A0BEo
		jz	loc_4BEA
		xor	esi, esi

loc_4B46:				; DATA XREF: .debug_loc:off_17CCBo
					; .debug_loc:off_17CFFo
		cmp	eax, 1
		jbe	loc_4BD9

loc_4B4F:				; DATA XREF: .debug_loc:00017CADo
					; .debug_loc:00017CB4o
		nop

loc_4B50:				; CODE XREF: _protobuf_c_message_descriptor_get_field+58j
					; _protobuf_c_message_descriptor_get_field+C3j
					; DATA XREF: ...
		mov	ebp, eax
		shr	ebp, 1
		lea	ecx, [ebp+esi+0]

loc_4B58:				; DATA XREF: .debug_loc:off_17D28o
		lea	ebx, [edi+ecx*8]
		mov	edx, [ebx]

loc_4B5D:				; DATA XREF: .debug_info:0000A15Co
		cmp	[esp+3Ch+var_34], edx
		jge	short loc_4BB8
		mov	eax, ebp

loc_4B65:				; DATA XREF: .debug_ranges:0001AB1Co
		cmp	ebp, 1
		jnz	short loc_4B50

loc_4B6A:				; CODE XREF: _protobuf_c_message_descriptor_get_field+CBj
					; DATA XREF: .debug_info:0000C06Do ...
		lea	eax, [edi+esi*8]

loc_4B6D:				; DATA XREF: .debug_loc:00017D03o
		mov	edx, [eax+4]

loc_4B70:				; DATA XREF: .debug_loc:off_17D73o
		mov	ecx, [edi+esi*8+0Ch]

loc_4B74:				; DATA XREF: .debug_loc:off_17D86o
		mov	eax, [eax]
		cmp	[esp+3Ch+var_34], eax
		jl	short loc_4BEA
		mov	ebx, eax
		sub	ebx, edx
		add	ecx, ebx

loc_4B82:				; DATA XREF: .debug_loc:00017D8Ao
		cmp	[esp+3Ch+var_34], ecx
		jge	short loc_4BEA
		mov	ebp, [esp+3Ch+var_34]
		sub	ebp, eax
		add	ebp, edx

loc_4B90:				; CODE XREF: _protobuf_c_message_descriptor_get_field+D8j
					; DATA XREF: .debug_info:0000C071o ...
		test	ebp, ebp

loc_4B92:				; DATA XREF: .debug_info:0000A17Ao
		js	short loc_4BEA
		lea	eax, [ebp+ebp*2+0]
		shl	eax, 4
		mov	edx, [esp+3Ch+var_30]
		add	eax, [edx+1Ch]

loc_4BA2:				; CODE XREF: _protobuf_c_message_descriptor_get_field+CDj
					; _protobuf_c_message_descriptor_get_field+DCj
					; DATA XREF: ...
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4BEE
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi

loc_4BB4:				; DATA XREF: .debug_loc:00017C80o
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_4BB8:				; CODE XREF: _protobuf_c_message_descriptor_get_field+51j
					; DATA XREF: .debug_ranges:0001AAF0o ...
		inc	ecx
		mov	ebp, [ebx+4]
		mov	ebx, edx
		sub	ebx, ebp

loc_4BC0:				; DATA XREF: .debug_info:0000A1AFo
		add	ebx, [edi+ecx*8+4]
		cmp	[esp+3Ch+var_34], ebx
		jl	short loc_4BE0

loc_4BCA:				; DATA XREF: .debug_info:0000C059o
					; .debug_loc:off_17D60o
		add	eax, esi
		sub	eax, ecx
		mov	esi, ecx

loc_4BD0:				; DATA XREF: .debug_info:0000C05Do
					; .debug_ranges:0001AB24o
		cmp	eax, 1
		ja	loc_4B50

loc_4BD9:				; CODE XREF: _protobuf_c_message_descriptor_get_field+39j
					; DATA XREF: .debug_loc:00017D64o
		test	eax, eax
		jnz	short loc_4B6A
		jmp	short loc_4BA2
; ---------------------------------------------------------------------------
		align 10h

loc_4BE0:				; CODE XREF: _protobuf_c_message_descriptor_get_field+B8j
					; DATA XREF: .debug_ranges:0001AB28o
		mov	eax, [esp+3Ch+var_34]
		sub	eax, edx
		add	ebp, eax
		jmp	short loc_4B90
; ---------------------------------------------------------------------------

loc_4BEA:				; CODE XREF: _protobuf_c_message_descriptor_get_field:loc_4B3Ej
					; _protobuf_c_message_descriptor_get_field+6Aj	...
		xor	eax, eax
		jmp	short loc_4BA2
; ---------------------------------------------------------------------------

loc_4BEE:				; CODE XREF: _protobuf_c_message_descriptor_get_field+9Cj
					; DATA XREF: .debug_info:0000A078o ...
		call	__imp____stack_chk_fail
_protobuf_c_message_descriptor_get_field endp

; ---------------------------------------------------------------------------
unk_4BF3	db  90h	; ê		; DATA XREF: .debug_info:0000BFC9o
					; .debug_info:0000C08Bo

; =============== S U B	R O U T	I N E =======================================


		public _protobuf_c_service_descriptor_get_method_by_name
_protobuf_c_service_descriptor_get_method_by_name proc near
					; DATA XREF: .debug_info:0000C0CFo
					; .debug_loc:off_17DB6o

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_4BF5:				; DATA XREF: .debug_loc:00017DBAo
		push	edi

loc_4BF6:				; DATA XREF: .debug_info:0000B4B6o
					; .debug_info:0000B511o ...
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_30], edx
		mov	ecx, [esp+5Ch+arg_4]
		mov	[esp+5Ch+var_34], ecx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_4C16:				; DATA XREF: .debug_loc:off_17E50o
		mov	ebx, [edx+14h]

loc_4C19:				; DATA XREF: .debug_loc:off_17E92o
		mov	[esp+5Ch+var_3C], 0

loc_4C21:				; DATA XREF: .debug_loc:00017E54o
		cmp	ebx, 1
		jbe	loc_4CE2

loc_4C2A:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+E8j
		mov	edx, [esp+5Ch+var_30]
		mov	esi, [edx+1Ch]
		mov	ecx, [edx+18h]
		mov	[esp+5Ch+var_38], ecx

loc_4C38:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+83j
					; DATA XREF: .debug_ranges:off_1AB38o
		mov	edx, ebx
		shr	edx, 1
		mov	[esp+5Ch+var_40], edx
		mov	ebp, [esp+5Ch+var_3C]
		add	ebp, edx

loc_4C46:				; DATA XREF: .debug_loc:off_17EF4o
					; .debug_loc:off_17F30o
		mov	eax, [esi+ebp*4]
		lea	eax, [eax+eax*2]
		mov	ecx, [esp+5Ch+var_38]
		lea	edi, [ecx+eax*4]

loc_4C53:				; DATA XREF: .debug_loc:off_17F49o
		mov	edx, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_58], edx ;	char *
		mov	eax, [edi]
		mov	[esp+5Ch+var_5C], eax ;	char *

loc_4C60:				; DATA XREF: .debug_loc:00017F34o
					; .debug_loc:00017F4Do
		call	_strcmp

loc_4C65:				; DATA XREF: .debug_info:0000C172o
					; .debug_loc:off_17F5Do
		cmp	eax, 0
		jz	loc_4CF0
		jl	short loc_4CC8

loc_4C70:				; DATA XREF: .debug_loc:00017E96o
					; .debug_ranges:0001AB3Co
		mov	ebx, [esp+5Ch+var_40]
		cmp	ebx, 1
		ja	short loc_4C38
		mov	ecx, [esp+5Ch+var_40]
		test	ecx, ecx
		jz	short loc_4CF4

loc_4C81:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+F8j
					; DATA XREF: .debug_loc:00017EF8o ...
		mov	ecx, [esp+5Ch+var_30]
		mov	eax, [ecx+1Ch]
		mov	edx, [esp+5Ch+var_3C]
		mov	eax, [eax+edx*4]
		lea	edx, [eax+eax*2]
		mov	eax, [ecx+18h]
		lea	ebp, [eax+edx*4]
		mov	ecx, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_58], ecx ;	char *
		mov	eax, [ebp+0]
		mov	[esp+5Ch+var_5C], eax ;	char *
		call	_strcmp

loc_4CAB:				; DATA XREF: .debug_info:0000C185o
		test	eax, eax
		jnz	short loc_4CF4

loc_4CAF:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+FEj
					; _protobuf_c_service_descriptor_get_method_by_name+102j
		mov	eax, ebp
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4CF8
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_4CC5	db  8Dh	; ç		; DATA XREF: .debug_loc:00017F68o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_4CC8:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+7Aj
		mov	edi, ebp

loc_4CCA:				; DATA XREF: .debug_ranges:0001AB40o
		add	ebx, [esp+5Ch+var_3C]
		mov	eax, ebp

loc_4CD0:				; DATA XREF: .debug_loc:00017F6Co
		not	eax
		add	ebx, eax
		inc	edi
		mov	[esp+5Ch+var_3C], edi

loc_4CD9:				; DATA XREF: .debug_ranges:0001AB44o
		cmp	ebx, 1
		ja	loc_4C2A

loc_4CE2:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+30j
		mov	[esp+5Ch+var_40], ebx
		mov	ecx, [esp+5Ch+var_40]
		test	ecx, ecx
		jnz	short loc_4C81
		jmp	short loc_4CF4
; ---------------------------------------------------------------------------

loc_4CF0:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+74j
		mov	ebp, edi
		jmp	short loc_4CAF
; ---------------------------------------------------------------------------

loc_4CF4:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+8Bj
					; _protobuf_c_service_descriptor_get_method_by_name+B9j ...
		xor	ebp, ebp
		jmp	short loc_4CAF
; ---------------------------------------------------------------------------

loc_4CF8:				; CODE XREF: _protobuf_c_service_descriptor_get_method_by_name+C7j
		call	__imp____stack_chk_fail
_protobuf_c_service_descriptor_get_method_by_name endp

; ---------------------------------------------------------------------------
unk_4CFD	db  90h	; ê		; DATA XREF: .debug_info:00005688o
					; .debug_info:0000C0D3o ...
		db  90h	; ê
unk_4CFF	db  90h	; ê		; DATA XREF: .eh_frame:0001C098o
					; .eh_frame:0001C0B8o ...
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 4D00h
		public _protobuf_c_system_allocator
_protobuf_c_system_allocator dd	offset _system_alloc ; DATA XREF: .debug_info:0000C24Co
		dd offset _system_free	; jumptable 00000717 case 11
		dd 0
		dd offset loc_1FFE+2
		dd 0
		public _protobuf_c_default_allocator
_protobuf_c_default_allocator dd offset	_system_alloc
					; DATA XREF: _protobuf_c_buffer_simple_append:loc_1EEr
					; _protobuf_c_message_free_unpacked:loc_3154o ...
off_4D18	dd offset _system_free	; DATA XREF: _protobuf_c_buffer_simple_append:loc_22Dr
					; _required_field_pack_to_buffer_isra_13+1DAr
					; jumptable 00000717 case 11
		dd 0
		dd offset loc_1FFE+2
; int dword_4D24
dword_4D24	dd 0			; DATA XREF: _protobuf_c_buffer_simple_append+4Ar
					; _protobuf_c_buffer_simple_append+84r	...
		public _protobuf_c_out_of_memory
_protobuf_c_out_of_memory dd offset _protobuf_c_out_of_memory_default
					; DATA XREF: _system_alloc+3Cr
					; .debug_info:0000C275o
		public _protobuf_c_minor
_protobuf_c_minor dd 0Eh		; DATA XREF: .debug_info:0000C1F7o
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 4D30h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		public _protobuf_c_major
_protobuf_c_major dd ?			; DATA XREF: .debug_info:0000C1D8o
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 4D34h
aOutOfMemory	db 'Out Of Memory!!!',0Ah,0
					; DATA XREF: _protobuf_c_out_of_memory_default+2Ao
					; .debug_info:00007253o
aLibProtobufC_c	db 'lib/protobuf-c.c',0 ; DATA XREF: _protobuf_c_service_invoke_internal+5Do
					; _alloc_failed_warning_constprop_14+13o ...
		align 4
aMethod_indexSe	db 'method_index < service->descriptor->n_methods',0
					; DATA XREF: _protobuf_c_service_invoke_internal+65o
					; .debug_info:0000730Co ...
		align 4
; char aWarningOutOfMe[]
aWarningOutOfMe	db 'WARNING: out-of-memory allocating a block of size %u (%s:%u)',0Ah,0
					; DATA XREF: _alloc_failed_warning_constprop_14:loc_16Bo
					; .debug_info:00007376o
		align 4
aMessageDescrip	db '((message)->descriptor)->magic == PROTOBUF_C_MESSAGE_DESCRIPTOR_M'
					; DATA XREF: _protobuf_c_message_get_packed_size+6C5o
					; sub_1764+10o	...
		db 'AGIC',0
		align 10h
off_4E10	dd offset loc_888	; DATA XREF: _protobuf_c_message_get_packed_size+193r
		dd offset loc_974
		dd offset loc_96C
		dd offset loc_924
		dd offset loc_8C4
		dd offset loc_880
		dd offset loc_84C
		dd offset loc_96C
		dd offset loc_924
		dd offset loc_880
		dd offset loc_96C
		dd offset loc_880
off_4E40	dd offset loc_72C	; DATA XREF: .debug_info:0000A44Co
		dd offset loc_84C
		dd offset loc_7F0
		dd offset loc_7B8
		dd offset loc_9B4
off_4E54	dd offset loc_30	; DATA XREF: _required_field_get_packed_size_isra_11+38o
					; sub_118D+19o	...
off_4E58	dd offset loc_D5C	; DATA XREF: _required_field_get_packed_size_isra_11:loc_CB0r
		dd offset loc_D4C	; jump table for switch	statement
		dd offset loc_CDC
		dd offset loc_DF4
		dd offset loc_DC4
		dd offset loc_CC0
		dd offset loc_CE4
		dd offset loc_CDC
		dd offset loc_DF4
		dd offset loc_CC0
		dd offset loc_CDC
		dd offset loc_CC0
		dd offset loc_D44
		dd offset loc_CE4
		dd offset loc_D90
		dd offset loc_E2C
		dd offset loc_D14
aActual_length_	db 'actual_length_size == length_size_min + 1',0 ; DATA XREF: sub_1748+10o
					; .debug_info:off_88FDo
		align 4
off_4EC8	dd offset loc_12A4	; DATA XREF: sub_1214+37r
		dd offset loc_12A4	; jump table for switch	statement
		dd offset loc_12A4
		dd offset loc_1254
		dd offset loc_1254
		dd offset loc_1254
		dd offset loc_12A4
		dd offset loc_12A4
		dd offset loc_1254
		dd offset loc_1254
		dd offset loc_12A4
		dd offset loc_1254
		dd offset loc_12A4
		dd offset loc_12A4
		dd offset loc_12A4
		dd offset loc_1254
		dd offset loc_12A4
off_4F0C	dd offset loc_1546	; DATA XREF: sub_12BCr
					; .debug_info:0000A4AAo
		dd offset loc_14BA	; jump table for switch	statement
		dd offset loc_1493
		dd offset loc_146D
		dd offset loc_142C
		dd offset loc_135C
		dd offset loc_12DD
		dd offset loc_1493
		dd offset loc_146D
		dd offset loc_135C
		dd offset loc_1493
		dd offset loc_135C
		dd offset loc_1615
		dd offset loc_12DD
off_4F44	dd offset loc_1900	; DATA XREF: _required_field_pack_isra_12+49r
					; .debug_info:0000A53Co
		dd offset loc_195C	; jump table for switch	statement
		dd offset loc_19C4
		dd offset loc_19D4
		dd offset loc_19E8
		dd offset loc_1A00
		dd offset loc_1A18
		dd offset loc_19C4
		dd offset loc_19D4
		dd offset loc_1A00
		dd offset loc_19C4
		dd offset loc_1A00
		dd offset loc_1A24
		dd offset loc_1A18
		dd offset loc_1A34
		dd offset loc_17D0
		dd offset loc_1860
aTmpPayload_len	db 'tmp == payload_len',0
					; DATA XREF: _protobuf_c_message_pack_to_buffer+B1Co
					; .debug_info:000098BCo ...
		align 4
off_4F9C	dd offset loc_211A	; DATA XREF: _protobuf_c_message_pack_to_buffer+1FBr
					; .debug_info:0000A5AAo
		dd offset loc_20D1	; jump table for switch	statement
		dd offset loc_20B4
		dd offset loc_2059
		dd offset loc_1FEB
		dd offset loc_1F30
		dd offset loc_1EEA
		dd offset loc_20B4
		dd offset loc_2059
		dd offset loc_1F30
		dd offset loc_20B4
		dd offset loc_1F30
		dd offset loc_20C4
		dd offset loc_1EEA
off_4FD4	dd offset loc_1EE0	; DATA XREF: _protobuf_c_message_pack_to_buffer:loc_1E87r
		dd offset loc_1EE0	; jump table for switch	statement
		dd offset loc_1EE0
		dd offset loc_1E90
		dd offset loc_1E90
		dd offset loc_1E90
		dd offset loc_1EE0
		dd offset loc_1EE0
		dd offset loc_1E90
		dd offset loc_1E90
		dd offset loc_1EE0
		dd offset loc_1E90
		dd offset loc_1EE0
		dd offset loc_1EE0
		dd offset loc_1EE0
		dd offset loc_1E90
		dd offset loc_1EE0
off_5018	dd offset loc_239C	; DATA XREF: _protobuf_c_message_pack_to_buffer:loc_216Br
					; .debug_info:0000AD70o
		dd offset loc_2207	; jump table for switch	statement
		dd offset loc_2487
		dd offset loc_2356
		dd offset loc_22FD
		dd offset loc_24A7
		dd offset loc_2172
		dd offset loc_2487
		dd offset loc_2356
		dd offset loc_24A7
		dd offset loc_2487
		dd offset loc_24A7
		dd offset loc_22A9
		dd offset loc_2172
off_5050	dd offset loc_298C	; DATA XREF: _required_field_pack_to_buffer_isra_13+54r
		dd offset loc_2A1C	; jump table for switch	statement
		dd offset loc_2A90
		dd offset loc_2AA4
		dd offset loc_2AD0
		dd offset loc_2B08
		dd offset loc_2B34
		dd offset loc_2A90
		dd offset loc_2AA4
		dd offset loc_2B08
		dd offset loc_2A90
		dd offset loc_2B08
		dd offset loc_2BA0
		dd offset loc_2B34
		dd offset loc_2BB0
		dd offset loc_2804
		dd offset loc_2894
off_5094	dd offset loc_2EAC	; DATA XREF: _protobuf_c_message_init_generic+4Cr
		dd offset loc_2EAC	; jump table for switch	statement
		dd offset loc_2EAC
		dd offset loc_2ED4
		dd offset loc_2ED4
		dd offset loc_2ED4
		dd offset loc_2EAC
		dd offset loc_2EAC
		dd offset loc_2ED4
		dd offset loc_2ED4
		dd offset loc_2EAC
		dd offset loc_2ED4
		dd offset loc_2EAC
		dd offset loc_2EAC
		dd offset loc_2EE4
		dd offset loc_2ED4
		dd offset loc_2EE4
off_50D8	dd offset loc_31EC	; DATA XREF: _parse_required_member:loc_31BFr
		dd offset loc_3338	; jump table for switch	statement
		dd offset loc_33A0
		dd offset loc_33B8
		dd offset loc_33DC
		dd offset loc_31C8
		dd offset loc_31EC
		dd offset loc_33A0
		dd offset loc_33B8
		dd offset loc_31C8
		dd offset loc_33A0
		dd offset loc_31C8
		dd offset loc_3488
		dd offset loc_31EC
		dd offset loc_341C
		dd offset loc_32C8
		dd offset loc_3248
aUnknownField	db '*unknown-field*',0  ; DATA XREF: _protobuf_c_message_unpack:loc_436Do
aDescMagicProto	db '(desc)->magic == PROTOBUF_C_MESSAGE_DESCRIPTOR_MAGIC',0
					; DATA XREF: _protobuf_c_message_unpack+E3Bo
					; .debug_info:0000BB55o
		align 4
; char aUnterminatedVa[]
aUnterminatedVa	db 'unterminated varint at offset %u',0
					; DATA XREF: _protobuf_c_message_unpack+27Eo
					; .debug_info:0000AE79o
		align 4
; char aTooShortAfter6[]
aTooShortAfter6	db 'too short after 64bit wiretype at offset %u',0
					; DATA XREF: _protobuf_c_message_unpack+C9Do
					; .debug_info:0000B22Co
; char aErrorParsingLe[]
aErrorParsingLe	db 'error parsing length for length-prefixed data',0
					; DATA XREF: _protobuf_c_message_unpack:loc_3B42o
					; .debug_info:0000AFBAo ...
		align 4
; char aDataTooShortAf[]
aDataTooShortAf	db 'data too short after length-prefix of %u',0
					; DATA XREF: _protobuf_c_message_unpack+720o
					; .debug_info:0000AFE6o
		align 10h
; char aTooShortAfter3[]
aTooShortAfter3	db 'too short after 32bit wiretype at offset %u',0
					; DATA XREF: _protobuf_c_message_unpack+C59o
					; .debug_info:0000B1F4o
; char aUnsupportedTag[]
aUnsupportedTag	db 'unsupported tag %u at offset %u',0
					; DATA XREF: _protobuf_c_message_unpack+424o
					; .debug_info:0000B1B5o
; char aTooManyFields[]
aTooManyFields	db 'too many fields',0  ; DATA XREF: _protobuf_c_message_unpack:loc_41C2o
					; .debug_info:0000AF1Bo
; char aLengthMustBe_0[]
aLengthMustBe_0	db 'length must be a multiple of 4 for fixed-length 32-bit types',0
					; DATA XREF: _protobuf_c_message_unpack:loc_427Eo
					; .debug_info:0000B128o
		align 4
; char aLengthMustBeAM[]
aLengthMustBeAM	db 'length must be a multiple of 8 for fixed-length 64-bit types',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4261o
					; .debug_info:0000B0FCo ...
		align 4
; char aBadProtobufCTy[]
aBadProtobufCTy	db 'bad protobuf-c type %u for packed-repeated',0
					; DATA XREF: _protobuf_c_message_unpack+680o
					; .debug_info:0000B0D0o
aRvDescriptorNu	db 'rv->descriptor != NULL',0 ; DATA XREF: _protobuf_c_message_unpack+DD5o
					; .debug_info:0000B32Eo
		align 10h
; char aMessageSMissin[]
aMessageSMissin	db 'message ',27h,'%s',27h,': missing required field ',27h,'%s',27h,0
					; DATA XREF: _protobuf_c_message_unpack+DF2o
					; .debug_info:0000B35Ao
		align 4
; char aBadPackedRep_1[]
aBadPackedRep_1	db 'bad packed-repeated int32 value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4611o
					; .debug_info:0000B88Ao ...
; char aBadPackedRep_3[]
aBadPackedRep_3	db 'bad packed-repeated sint32 value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4704o
					; .debug_info:0000B951o
		align 10h
; char aBadPackedRepea[]
aBadPackedRepea	db 'bad packed-repeated enum or uint32 value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_442Ao
					; .debug_info:0000B681o
		db 2 dup(0)
		db    0			; DATA XREF: .debug_info:0000B5F4o
; char aBadPackedRep_0[]
aBadPackedRep_0	db 'bad packed-repeated sint64 value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4504o
					; .debug_info:0000B72Co
		align 10h
; char aBadPackedRep_4[]
aBadPackedRep_4	db 'bad packed-repeated int64/uint64 value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4721o
					; .debug_info:0000B7BAo
		align 4
; char aBadPackedRep_2[]
aBadPackedRep_2	db 'bad packed-repeated boolean value',0
					; DATA XREF: _protobuf_c_message_unpack:loc_4659o
					; .debug_info:0000B9A4o
; char aErrorParsingMe[]
aErrorParsingMe	db 'error parsing member %s of %s',0
					; DATA XREF: _protobuf_c_message_unpack+BDBo
					; .debug_info:0000BA62o ...
; char aErrorParsingTa[]
aErrorParsingTa	db 'error parsing tag/wiretype at offset %u',0
					; DATA XREF: _protobuf_c_message_unpack+350o
					; .debug_info:0000B17Bo
; char aCountingPacked[]
aCountingPacked	db 'counting packed elements',0
					; DATA XREF: _protobuf_c_message_unpack:loc_3BE4o
					; .debug_info:0000B151o
		align 4
off_549C	dd offset loc_3DE8	; DATA XREF: _protobuf_c_message_unpack:loc_3D04r
		dd offset loc_3DE8	; jump table for switch	statement
		dd offset loc_3DE8
		dd offset loc_3D0B
		dd offset loc_3D0B
		dd offset loc_3D0B
		dd offset loc_3DE8
		dd offset loc_3DE8
		dd offset loc_3D0B
		dd offset loc_3D0B
		dd offset loc_3DE8
		dd offset loc_3D0B
		dd offset loc_3DE8
		dd offset loc_3DE8
		dd offset loc_3DE8
		dd offset loc_3D0B
		dd offset loc_3DE8
off_54E0	dd offset loc_3DF2	; DATA XREF: _protobuf_c_message_unpack:loc_3DBCr
		dd offset loc_3DF2	; jump table for switch	statement
		dd offset loc_3E14
		dd offset loc_3DF2
		dd offset loc_3DF2
		dd offset loc_3DC3
		dd offset loc_3DF2
		dd offset loc_3E14
		dd offset loc_3DF2
		dd offset loc_3DC3
		dd offset loc_3E14
		dd offset loc_3DC3
		dd offset loc_3DCF
		dd offset loc_3DF2
off_5518	dd offset loc_407C	; DATA XREF: _protobuf_c_message_unpack:loc_4075r
		dd offset loc_407C	; jump table for switch	statement
		dd offset loc_407C
		dd offset loc_40CC
		dd offset loc_40CC
		dd offset loc_40CC
		dd offset loc_407C
		dd offset loc_407C
		dd offset loc_40CC
		dd offset loc_40CC
		dd offset loc_407C
		dd offset loc_40CC
		dd offset loc_407C
		dd offset loc_407C
		dd offset loc_407C
		dd offset loc_40CC
		dd offset loc_407C
off_555C	dd offset loc_424D	; DATA XREF: _protobuf_c_message_unpack+CC9r
		dd offset loc_424D	; jump table for switch	statement
		dd offset loc_424D
		dd offset loc_421C
		dd offset loc_421C
		dd offset loc_421C
		dd offset loc_424D
		dd offset loc_424D
		dd offset loc_421C
		dd offset loc_421C
		dd offset loc_424D
		dd offset loc_421C
		dd offset loc_424D
		dd offset loc_424D
		dd offset loc_424D
		dd offset loc_421C
		dd offset loc_424D
off_55A0	dd offset loc_458F	; DATA XREF: _protobuf_c_message_unpack:loc_42C5r
		dd offset loc_4676	; jump table for switch	statement
		dd offset loc_4587
		dd offset loc_4521
		dd offset loc_4460
		dd offset loc_4447
		dd offset loc_43A4
		dd offset loc_4587
		dd offset loc_4521
		dd offset loc_4447
		dd offset loc_4587
		dd offset loc_4447
		dd offset loc_462E
		dd offset loc_43A4
aDescriptorMagi	db '(descriptor)->magic == PROTOBUF_C_SERVICE_DESCRIPTOR_MAGIC',0
					; DATA XREF: _protobuf_c_service_generated_init+60o
					; .debug_info:0000BC49o
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 5614h
off_5614	dd offset dword_6DD0	; DATA XREF: .debug_aranges:00017F8Eo
		db 2, 0
		dd offset dword_C3E8
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		db    1
aLibProtobufC_0	db 'lib/protobuf-c.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple\\protocols'
		db '\\gg',0
		dd offset _system_free	; jumptable 00000717 case 11
		dd offset unk_4CFD
off_568C	dd offset off_1AB50	; DATA XREF: .debug_info:0000AC66o
		db    2
aLongLongUnsign	db 8,7,'long long unsigned int',0
		dw 7303h
aIze_t		db 'ize_t',0
		dw 0D503h
		dd offset loc_A4
		db    2
		db 4, 7, 75h
aNsignedInt	db 'nsigned int',0
		db    2
		db 2, 7, 73h
aHortUnsignedIn	db 'hort unsigned int',0
		dw 102h
		db    6
aChar		db 'char',0
		dw 5F04h
aIobuf		db 'iobuf',0
		dw 220h
		dd offset byte_16981
		db    0
		db 5, 5Fh, 70h
		db  74h	; t
		db 72h,	0, 2
		dd offset off_16983
unk_5700	db    0			; DATA XREF: .debug_loc:00010F48o
		db 2, 23h, 0
		db    5
a_cnt		db '_cnt',0
		dw 8402h
		dd offset loc_16B+4
		db    2
		db 23h,	4, 5
a_base		db '_base',0
		dw 8502h
		dd offset loc_167+2
		db    2
		db 23h,	8, 5
a_flag		db '_flag',0
		dw 8602h
		dd offset loc_16B+4
		db    2
		db 23h,	0Ch, 5
a_file		db '_file',0
		dw 8702h
		dd offset loc_16B+4
		db    2
		db 23h,	10h, 5
a_charbuf	db '_charbuf',0
		db 2, 88h, 6Fh
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 14h,	5, 5Fh
aBufsiz		db 'bufsiz',0
		db 2
		dd offset aSaTd		; "ëÄ|‚D"
		db    0
		db 2, 23h, 18h
		db    5
a_tmpfname	db '_tmpfname',0
		db 2
		dd offset word_1698A
		db    0
		db 2, 23h, 1Ch
		db    0
		db 6, 4, 0CAh
		db    0
		db 2 dup(0), 2
		db    4
		db 5, 69h, 6Eh
		db  74h	; t
		align 2
		dw 4603h
		db  49h	; I
		db 4Ch,	45h, 0
		db    2
		dd offset off_D28B
		align 2
		dw 802h
		db    5
aLongLongInt	db 'long long int',0
		db 2
		db    4
		db 5, 6Ch, 6Fh
aNgInt		db 'ng int',0
		db 2
		db    2
		db 5, 73h, 68h
aOrtInt		db 'ort int',0
		db    2
		db 1, 6, 73h
aIgnedChar	db 'igned char',0
		db 3
aUint8_t	db 'uint8_t',0
		db    4
		db 1Ch,	0CAh, 1
		db    0
		align 2
		dw 102h
aUnsignedChar	db 8,'unsigned char',0
		db 3
aInt32_t	db 'int32_t',0
		db    4
		dd offset byte_16F1F
		align 2
		dw 7503h
aInt32_t_0	db 'int32_t',0
unk_5808	db    4			; DATA XREF: .debug_info:0000ADFBo
		dd offset off_A420
		align 2
		dw 6903h
aNt64_t		db 'nt64_t',0
		db 4
		dd offset byte_18221
		db    0
		db 3, 75h, 69h
aNt64_t_0	db 'nt64_t',0
byte_5827	db 4			; DATA XREF: .debug_info:0000AD9Ao
		dd offset off_7C21+1
		db    0
		db 2, 4, 7
aSizetype	db 'sizetype',0
		db 7, 4, 6
		db    4
		dd offset loc_22D
		dd offset off_CA08
		align 2
		dw 406h
		dd offset loc_237+1
		db    9
		db 1, 49h, 2
		db    0
		align 2
		dw 250Ah
		db    2
		db 2 dup(0), 0Ah
		dd offset loc_225
		db    0
		db 6, 4, 69h
		db    1
		db 2 dup(0), 6
		dd offset byte_1BB04
		db    0
		db 0Bh,	4, 5
		db  4Eh	; N
		dd offset loc_2B1+1
		db 0Ch,	50h, 52h
aOtobuf_c_label	db 'OTOBUF_C_LABEL_REQUIRED',0 ; DATA XREF: .debug_info:0000AE6Fo
		db    0
		db 0Ch,	50h, 52h
aOtobuf_c_lab_0	db 'OTOBUF_C_LABEL_OPTIONAL',0
		db    1
		db 0Ch,	50h, 52h
aOtobuf_c_lab_1	db 'OTOBUF_C_LABEL_REPEATED',0
		db    2
		align 2
		dw 5003h
aRotobufclabel	db 'rotobufCLabel',0    ; DATA XREF: .debug_info:0000AED3o
		dw 5205h
		dd offset loc_253+2
		db  0Bh
		db 4, 5, 55h
off_58E0	dd offset loc_479	; DATA XREF: .debug_info:0000AEBAo
		db  0Ch
aProtobuf_c_typ	db 'PROTOBUF_C_TYPE_INT32',0 ; DATA XREF: .debug_info:0000AEFCo
		align 4
		db  0Ch
aProtobuf_c_t_0	db 'PROTOBUF_C_TYPE_SINT32',0 ; DATA XREF: .debug_info:0000AF11o
		db    1
		db 0Ch,	50h, 52h
aOtobuf_c_type_	db 'OTOBUF_C_TYPE_SFIXED32',0 ; DATA XREF: .debug_info:0000AEA0o
		db 2
		db  0Ch
aProtobuf_c_t_1	db 'PROTOBUF_C_TYPE_INT64',0
		db 3
		db  0Ch
aProtobuf_c_t_2	db 'PROTOBUF_C_TYPE_SINT64',0
		db    4
		db 0Ch,	50h, 52h
aOtobuf_c_typ_0	db 'OTOBUF_C_TYPE_SFIXED64',0
		db 5
		db  0Ch
aProtobuf_c_t_3	db 'PROTOBUF_C_TYPE_UINT32',0
		db    6
		db 0Ch,	50h, 52h
aOtobuf_c_typ_1	db 'OTOBUF_C_TYPE_FIXED32',0
		dw 0C07h
aProtobuf_c_t_4	db 'PROTOBUF_C_TYPE_UINT64',0 ; DATA XREF: .debug_info:0000AFC8o
		db 8
		db  0Ch
aProtobuf_c_t_5	db 'PROTOBUF_C_TYPE_FIXED64',0
		db 9, 0Ch, 50h
aRotobuf_c_type	db 'ROTOBUF_C_TYPE_FLOAT',0 ; DATA XREF: .debug_info:0000AF36o
		db 0Ah,	0Ch, 50h
aRotobuf_c_ty_0	db 'ROTOBUF_C_TYPE_DOUBLE',0
		dw 0C0Bh
aProtobuf_c_t_6	db 'PROTOBUF_C_TYPE_BOOL',0
		db 2 dup(0Ch), 50h
aRotobuf_c_ty_1	db 'ROTOBUF_C_TYPE_ENUM',0
		db  0Dh
		db 0Ch,	50h, 52h
aOtobuf_c_typ_2	db 'OTOBUF_C_TYPE_STRING',0
		db 0Eh,	0Ch, 50h
aRotobuf_c_ty_2	db 'ROTOBUF_C_TYPE_BYTES',0
		db 0Fh,	0Ch, 50h
aRotobuf_c_ty_3	db 'ROTOBUF_C_TYPE_MESSAGE',0
		db 10h
		db    0
		db 3, 50h, 72h
aOtobufctype	db 'otobufCType',0
		db    5
		db 68h,	0C8h, 2
		db    0
		align 2
		dw 7003h
aRotobuf_c_bool	db 'rotobuf_c_boolean',0
		dw 6B05h
		dd offset loc_16B+4
		db    3
aProtobufcbinar	db 'ProtobufCBinaryData',0 ; DATA XREF: .debug_info:0000B0C6o
		db 5, 71h, 0C3h
dword_5AD4	dd 4000004h		; DATA XREF: .debug_info:0000B0DEo
a_protobufcbina	db '_ProtobufCBinaryData',0
byte_5AED	db 8, 5, 72h		; DATA XREF: .debug_info:0000B0F2o
		dd offset loc_4FD
		dd 6E656C05h, 96740500h, 2000000h
byte_5B00	db 23h,	0, 0Dh		; DATA XREF: .debug_info:0000B10Ao
		dd offset aData		; "data"
		db 5
		db  75h	; u
		dd offset loc_24F
		db 2, 23h, 4
		db    0
		db 3, 50h, 72h
aOtobufcintrang	db 'otobufCIntRange',0  ; DATA XREF: .debug_info:0000B11Eo
		db    5
		db 78h,	16h, 5
		db    0
		align 2
		dw 5F0Eh
aProtobufcintra	db 'ProtobufCIntRange',0
		dw 508h
		db    1
byte_5B41	db 2, 60h, 5		; DATA XREF: .debug_info:0000B147o
		db    0
		align 2
		dw 730Fh
aTart_value	db 'tart_value',0
		db 5
unk_5B54	db    3			; DATA XREF: .debug_info:0000B00Ao
		dd offset word_16F02
		align 2
		dw 2302h
		db    0
		db 0Fh,	6Fh, 72h
aIg_index	db 'ig_index',0
		db 5, 4, 2
		dd offset loc_A4
		db    2
		db 23h,	4, 0
		db    3
aProtobufcalloc	db 'ProtobufCAllocator',0 ; DATA XREF: .debug_info:0000B171o
		db    5
		db 7Bh,	7Ah, 5
		db    0
		align 2
word_5B8E	dw 5F04h		; DATA XREF: .debug_info:0000B197o
aProtobufcall_0	db 'ProtobufCAllocator',0
		db 14h
dword_5BA4	dd 5ED7C05h, 61050000h,	636F6C6Ch, 27E0500h, 2000006h
		dd 66050023h, 656572h, 2327F05h, 23020000h, 6D740504h
		dd 6C615F70h, 636F6Ch, 6028005h, 23020000h, 616D0508h
		dd 6C615F78h, 61636F6Ch, 0A4810500h, 2000000h
byte_5BF0	db 23h,	0Ch, 0Dh	; DATA XREF: .debug_info:0000B1EAo
		dd offset aAllocator_data ; "allocator_data"
		db 5
dword_5BF8	dd 22582h, 10230200h, 25011000h, 2000002h, 0A000006h, 225h
					; DATA XREF: .debug_info:0000B20Eo
		dd 960Ah, 4060000h, 5EDh, 6F725003h, 75626F74h,	75424366h
		dd 72656666h, 1F9A0500h, 4000006h, 6F72505Fh, 75626F74h
		dd 75424366h, 72656666h, 9B050400h, 64Ah, 70706105h, 646E65h
		dd 6719D05h, 23020000h,	1090000h, 660h,	6600Ah,	960A00h
		dd 660A0000h, 6, 6080406h, 4060000h, 66Ch, 1BB08h, 4A040600h
		dd 3000006h
aProtobufcenumv	db 'ProtobufCEnumValue',0
		db 5
		db 0A2h	; ¢
		dd offset loc_691
		db 4, 5Fh, 50h
aRotobufcenumva	db 'rotobufCEnumValue',0 ; DATA XREF: .debug_info:0000B2BCo
		dw 50Ch
		dd 6D8ACh
		db 0, 0Dh
		dd offset aName		; "name"
		dw 0AE05h
		dd offset loc_225+2
		dd 0D002302h
		dd offset aC_name	; "c_name"
		dd 227AF05h, 23020000h
		db 4, 0Dh
		dd offset aValue	; "value"
		dw 0B005h
		dd offset loc_16B+4
		db    2
		db 23h,	8, 0
		db    3
aProtobufcenu_0	db 'ProtobufCEnumValueIndex',0 ; DATA XREF: .debug_info:0000B2FBo
		db 5, 0A3h, 0F7h
dword_5D08	dd 0E000006h		; DATA XREF: .debug_info:0000B2E2o
a_protobufcenum	db '_ProtobufCEnumValueIndex',0
		db 8, 5, 0F4h
		dd 73A01h
		db 0, 11h
		dd offset aName		; "name"
word_5D32	dw 0F605h		; DATA XREF: .debug_info:0000B288o
		db    1
		dd offset loc_225+2
		db 2, 23h, 0
		db  0Fh
aIndex		db 'index',0
		db 5
		db 0F7h	; ˜
		dd offset byte_A401
		align 2
word_5D4A	dw 2302h		; DATA XREF: .debug_info:0000B350o
		db    4
		align 2
		dw 5003h
aRotobufcenumde	db 'rotobufCEnumDescriptor',0 ; DATA XREF: .debug_info:0000B26Fo
		db 5
		db 0A4h	; §
		dd offset loc_758+1
		db 4, 5Fh, 50h
aRotobufcenum_0	db 'rotobufCEnumDescriptor',0
		db 3Ch
		dd 886C405h, 6D050000h,	63696761h, 0EAC60500h, 2000001h
		db 23h,	0, 0Dh
		dd offset aName		; "name"
		db 5
		dd 227C8h, 4230200h
		db 0Dh
		dd offset aShort_name	; "short_name"
		db 5, 0C9h, 27h
		dd 2000002h
		db 23h,	8, 0Dh
		dd offset aC_name	; "c_name"
		db 5
		dd 227CAh, 0C230200h
		db 0Dh
		dd offset aPackage_name	; "package_name"
		db 5, 0CBh, 27h
		dd 2000002h, 6E051023h,	6C61765Fh, 736575h, 0A4CE05h, 23020000h
		dd 61760514h, 7365756Ch, 86CF0500h, 2000008h, 6E051823h
		dd 6C61765Fh, 6E5F6575h, 73656D61h, 0A4D20500h,	2000000h
		dd 76051C23h, 65756C61h, 79625F73h, 6D616E5Fh, 0D3050065h
		dd 891h, 5202302h, 61765F6Eh, 5F65756Ch, 676E6172h, 5007365h
		dd 0A4D6h, 24230200h, 6C617605h, 725F6575h, 65676E61h
		dd 0D7050073h, 89Ch, 0D282302h
		dd offset aReserved1	; "reserved1"
		dd 225D905h, 23020000h
		db 2Ch,	0Dh
		dd offset aReserved2	; "reserved2"
		dw 0DA05h
		dd offset loc_225
		dd 0D302302h
		dd offset aReserved3	; "reserved3"
		dd 225DB05h, 23020000h,	65720534h, 76726573h, 346465h
		dd 225DC05h, 23020000h,	4060038h, 88Ch,	67708h,	97040600h
		dd 8000008h, 6D8h, 8A20406h, 0FD080000h, 3000004h
aProtobufcmessa	db 'ProtobufCMessageDescriptor',0
		db 5
		db 0E0h	; ‡
		dd offset loc_8C9
		db 0Eh,	5Fh, 50h
aRotobufcmessag	db 'rotobufCMessageDescriptor',0
		dw 53Ch
		dd 0A140115h, 6D0F0000h, 63696761h, 1170500h, 1EAh, 11002302h
off_5F14	dd offset aName		; DATA XREF: .debug_info:0000B4E4o
					; "name"
		dd 27011905h, 2000002h
		db 23h,	4, 11h
		dd offset aShort_name	; "short_name"
		db 5
		dd 227011Ah, 23020000h
		db 8, 11h
		dd offset aC_name	; "c_name"
		dw 1B05h
		dd 22701h, 0C230200h
		db 11h
		dd offset aPackage_name	; "package_name"
		db 5, 1Ch, 1
		dd offset loc_225+2
		dd 0F102302h, 657A6973h, 6D5F666Fh, 61737365h, 5006567h
		dd 96011Eh, 23020000h, 5F6E0F14h, 6C656966h, 5007364h
		dd 0A40121h, 23020000h,	69660F18h, 73646C65h, 1220500h
		dd 0BE3h, 0F1C2302h
aFields_sorted_	db 'fields_sorted_by_name',0
		dw 2305h
dword_5FA8	dd 0BEE01h, 20230200h, 665F6E0Fh, 646C6569h, 6E61725Fh
		dd 736567h, 0A4012605h,	2000000h, 660F2423h, 646C6569h
		dd 6E61725Fh, 736567h, 9C012705h, 2000008h, 6D0F2823h
		dd 61737365h, 695F6567h, 74696Eh, 0A8012905h, 200000Bh
		db 23h,	2Ch, 11h
		dd offset aReserved1	; "reserved1"
		db 5
		dd 225012Ah, 23020000h
		db 30h,	11h
		dd offset aReserved2	; "reserved2"
		dw 2B05h
		dd 22501h, 34230200h
		db 11h
		dd offset aReserved3	; "reserved3"
		db 5, 2Ch, 1
		dd offset loc_225
		db    2
		db 23h,	38h, 0
		db    3
aProtobufcfield	db 'ProtobufCFieldDescriptor',0
		dw 0E105h
		dd offset loc_A34
		db    4
a_protobufcfiel	db '_ProtobufCFieldDescriptor',0
		db 30h
		dd 0B2FF705h
		db 2 dup(0), 0Dh
		dd offset aName		; "name"
		db 5
		db 0F9h	; ˘
off_6071	dd offset loc_225+2	; DATA XREF: .debug_info:0000B677o
		db 2, 23h, 0
		db    5
		db 69h,	64h, 0
		db    5
		db 0FAh, 0EAh, 1
		db    0
		align 2
word_6082	dw 2302h		; DATA XREF: .debug_info:0000B5EFo
		db    4
		db 5, 6Ch, 61h
		db  62h	; b
		db 65h,	6Ch, 0
		db    5
		db 0FBh, 0B2h, 2
		db    0
		align 2
		dw 2302h
		db    8
		db 5, 74h, 79h
		db  70h	; p
		db 65h,	0, 5
		db 0FCh	; ¸
		dd offset loc_479
		db 2, 23h, 0Ch
		db    5
aQuantifier_off	db 'quantifier_offset',0
		db 5
		dd offset byte_A4FD
		dd 10230200h, 66666F05h, 746573h, 0A4FE05h, 23020000h
		db 14h,	0Dh
		dd offset aDescriptor	; "descriptor"
		dw 0FF05h
		dd offset loc_BDC
dword_60DC	dd 0F182302h, 61666564h, 5F746C75h, 756C6176h, 50065h
		dd 0BDC01h, 1C230200h, 6361700Fh, 64656Bh, 8E010105h, 2000004h
		dd 720F2023h, 72657365h, 5F646576h, 67616C66h, 3050073h
		dd 0A401h, 24230200h
		db 11h
		dd offset aReserved2	; "reserved2"
		db 5, 4, 1
off_612C	dd offset loc_225	; DATA XREF: .debug_info:0000B69Co
		dd 11282302h
		dd offset aReserved3	; "reserved3"
		dd 25010505h, 2000002h,	3002C23h, 746F7250h, 6675626Fh
		dd 73654D43h, 65676173h, 47E20500h, 0E00000Bh
a_protobufcmess	db '_ProtobufCMessage',0
		dw 50Ch
		dd 0BA80145h
		db 2 dup(0), 11h
		dd offset aDescriptor	; "descriptor"
		db 5
		db  47h	; G
		db 1, 82h, 0Ch
		db    0
		align 2
		dw 2302h
		db    0
		db 0Fh,	6Eh, 5Fh
aUnknown_fields	db 'unknown_fields',0   ; DATA XREF: .debug_info:0000B796o
		db 5
		db  48h	; H
		dd offset byte_A401
		align 2
		dw 2302h
		db    4
		db 0Fh,	75h, 6Eh
aKnown_fields	db 'known_fields',0     ; DATA XREF: .debug_info:0000B7B0o
		db 5, 49h, 1
		dd offset loc_C88+5
		db    2
		db 23h,	8, 0
unk_61BC	db    3			; DATA XREF: .debug_info:0000B747o
aProtobufcmes_0	db 'ProtobufCMessageInit',0
		dw 0E305h
		dd offset loc_BC4
		db    6
		db 4, 0CAh, 0Bh
		db    0
		align 2
		dw 109h
		dd offset loc_BD4+2
		db  0Ah
		dd offset loc_BD4+2
		align 2
		dw 406h
		dd offset loc_B2F
		db    6
		db 4, 0E2h, 0Bh
		db    0
		align 2
		dw 612h
		db    4
		dd offset loc_BE9
		db 8, 14h, 0Ah
		db    0
		align 2
		dw 406h
off_6204	dd offset loc_BF2+2	; DATA XREF: .debug_info:0000B7F0o
		dd offset off_A407+1
		db    0
		db 13h,	50h, 72h
aOtobufcmessage	db 'otobufCMessageUnknownField',0
		db 5
		db  44h	; D
		db 1, 1Eh, 0Ch
		db    0
		align 2
		dw 5F0Eh
aProtobufcmes_1	db 'ProtobufCMessageUnknownField',0
		db 10h,	5, 0B3h
		dd 0C8201h, 61740F00h, 0B5050067h, 1EA01h, 230200h
		db 11h
		dd offset aWire_type	; "wire_type"
		db 5, 0B6h, 1
		dd offset loc_FB4+1
dword_6274	dd 0F042302h, 6E656Ch, 9601B705h, 2000000h
					; DATA XREF: .debug_info:0000B880o
		db 23h,	8, 11h
		dd offset aData		; "data"
		db 5
dword_628C	dd 24F01B8h, 23020000h,	406000Ch, 0C88h, 8A708h, 0F9040600h
					; DATA XREF: .debug_info:0000B7D5o
		dd 1300000Bh
aProtobufcmetho	db 'ProtobufCMethodDescriptor',0
		dw 6905h
		db    1
		dd offset loc_CB0+5
		db 0Eh,	5Fh, 50h
aRotobufcmethod	db 'rotobufCMethodDescriptor',0 ; DATA XREF: .debug_info:0000B8C0o
		db 0Ch,	5, 6Ch
		dd 0D0C01h
		db 0, 11h
		dd offset aName		; "name"
		dw 6E05h
		db    1
		dd offset loc_225+2
		db 2, 23h, 0
		db  0Fh
aInput		db 'input',0
		db 5
		db  6Fh	; o
		db 1, 82h, 0Ch
		db    0
		align 2
		dw 2302h
		db    4
		db 0Fh,	6Fh, 75h
aTput		db 'tput',0
		db 5, 70h, 1
		dd offset loc_C80+2	; jumptable 00000CB0 default case
		db    2
		db 23h,	8, 0
		db  13h
aProtobufcservi	db 'ProtobufCServiceDescriptor',0 ; DATA XREF: .debug_info:0000B934o
dword_633C	dd 2F016A05h, 0E00000Dh	; DATA XREF: .debug_info:0000B947o
a_protobufcserv	db '_ProtobufCServiceDescriptor',0 ; DATA XREF: .debug_info:0000B8A5o
		dd 1720520h, 0DF0h, 67616D0Fh, 5006369h, 1EA0174h, 23020000h
		db 0, 11h
off_637A	dd offset aName		; DATA XREF: .debug_info:0000B970o
					; "name"
		dw 7605h
		dd 22701h, 4230200h
		db 11h
		dd offset aShort_name	; "short_name"
		db 5, 77h, 1
		dd offset loc_225+2
dword_6394	dd 11082302h		; DATA XREF: .debug_info:0000B99Ao
		dd offset aC_name	; "c_name"
		db    5
		db 78h,	1, 27h
		db    2
		db 2 dup(0), 2
		db  23h	; #
		db 0Ch,	0Fh, 70h
aAckage		db 'ackage',0
		db 5
		db  79h	; y
		db 1, 27h, 2
		db    0
		align 2
		dw 2302h
		db  10h
		db 0Fh,	6Eh, 5Fh
aMethods	db 'methods',0
		db    5
		db 7Ah,	1, 0A4h
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 14h,	0Fh, 6Dh
aEthods		db 'ethods',0
		db 5
unk_63D8	db  7Bh	; {		; DATA XREF: .debug_info:0000B9E0o
		db 1, 0F0h, 0Dh
		db    0
		align 2
		dw 2302h
		db  18h
		db 0Fh,	6Dh, 65h
aThod_indices_b	db 'thod_indices_by_name',0 ; DATA XREF: .debug_info:0000B9C0o
		db 5, 7Ch, 1
		dd offset loc_BEC+2
		db    2
		db 23h,	1Ch, 0
		db    6
		db 4, 0F6h, 0Dh
		db    0
		align 2
		dw 9308h
		db  0Ch
		db 2 dup(0), 13h
aProtobufcser_0	db 'ProtobufCService',0 ; DATA XREF: .debug_info:0000BA0Eo
		db 5, 7Fh, 1
		dd offset loc_E14
		db  0Eh
a_protobufcse_0	db '_ProtobufCService',0
byte_643B	db 0Ch			; DATA XREF: .debug_info:0000B3B8o
		dd 64018205h, 1100000Eh
		dd offset aDescriptor	; "descriptor"
		db    5
		db 84h,	1, 9Fh
		db  0Eh
		db 2 dup(0), 2
		db  23h	; #
		align 2
word_6452	dw 690Fh		; DATA XREF: .debug_info:0000BA58o
aNvoke		db 'nvoke',0
		dw 8505h
		db    1
		dd offset loc_ED0
		db 2, 23h, 4
unk_6464	db  0Fh			; DATA XREF: .debug_info:0000B375o
aDestroy	db 'destroy',0
		db 5, 8Ah, 1
		dd offset loc_EDE+4
		db    2
		db 23h,	8, 0
		db  13h
aProtobufcclosu	db 'ProtobufCClosure',0
		dw 8005h
		db    1
off_648D	dd offset loc_E7B+2	; DATA XREF: .debug_info:0000BA96o
		db 6, 4, 83h
		db  0Eh
		db 2 dup(0), 9
		db    1
		dd offset loc_E93+1
		db 0Ah,	94h, 0Eh
		db    0
		align 2
		dw 250Ah
		db    2
		db 0
		db    0			; DATA XREF: .debug_info:0000BA7Do
		db    0
		db    6
		db 4, 9Ah, 0Eh
		db    0
		align 2
		dw 2F08h
		db  0Bh
		db 2 dup(0), 6
		db    4
		dd offset loc_EA2+3
		db 8, 0Ch, 0Dh
		db    0
		align 2
word_64BE	dw 109h			; DATA XREF: .debug_info:0000BABFo
		dd offset loc_EC9+1
		db  0Ah
		dd offset loc_EC9+1
		dd offset off_A407+3
		align 2
		dw 940Ah
		db  0Eh
		db 2 dup(0), 0Ah
		dd offset loc_E64
		db  0Ah
off_64D9	dd offset loc_225	; DATA XREF: .debug_info:0000BADBo
		align 2
		dw 406h
		dd offset loc_DFB
		db    6
		db 4, 0AAh, 0Eh
		db    0
		align 2
		dw 109h
off_64EC	dd offset loc_EDE+4	; DATA XREF: .debug_info:0000BAF3o
		db  0Ah
		dd offset loc_EC9+1
		align 2
		dw 406h
		dd offset loc_ED2+4
		db  14h
		db 4, 5, 0A9h
		db    1
		dd offset loc_FB4+1
		db 0Ch,	50h, 52h
aOtobuf_c_wire_	db 'OTOBUF_C_WIRE_TYPE_VARINT',0 ; DATA XREF: .debug_info:0000BB0Ao
		dw 0C00h
aProtobuf_c_wir	db 'PROTOBUF_C_WIRE_TYPE_64BIT',0 ; DATA XREF: .debug_info:0000BB28o
		db 1
		db  0Ch
aProtobuf_c_w_0	db 'PROTOBUF_C_WIRE_TYPE_LENGTH_PREFIXED',0
		dw 0C02h
aProtobuf_c_w_1	db 'PROTOBUF_C_WIRE_TYPE_START_GROUP',0
		db 3, 0Ch, 50h
aRotobuf_c_wire	db 'ROTOBUF_C_WIRE_TYPE_END_GROUP',0
		dw 0C04h
aProtobuf_c_w_2	db 'PROTOBUF_C_WIRE_TYPE_32BIT',0 ; DATA XREF: .debug_info:0000BBAEo
		db 5
		db    0
		db 13h,	50h, 72h
aOtobufcwiretyp	db 'otobufCWireType',0
		dd 0E801B005h, 1300000Eh
aProtobufcbuffe	db 'ProtobufCBufferSimple',0
		dw 0BC05h
		db    1
		dd offset loc_FEB+2
		db 0Eh,	5Fh, 50h
aRotobufcbuffer	db 'rotobufCBufferSimple',0
		db 14h,	5, 0BDh
dword_661C	dd 106901h, 61620F00h, 5006573h, 60801BFh, 23020000h, 6C610F00h
		dd 65636F6Ch, 0C0050064h, 9601h, 4230200h, 6E656C0Fh, 1C10500h
		dd 96h,	11082302h
		dd offset aData		; "data"
		db    5
		db 0C2h, 1, 4Fh
		db    2
		db 2 dup(0), 2
		db  23h	; #
		db 0Ch,	0Fh, 6Dh
aUst_free_data	db 'ust_free_data',0
		dw 0C305h
		db    1
		dd offset loc_48C+2
		db 2, 23h, 10h
		db    0
		db 13h,	50h, 72h
aOtobufcservice	db 'otobufCServiceDestroy',0
		dw 1705h
		db    2
		dd offset loc_EDE+4
		db 2, 4, 7
aLongUnsignedIn	db 'long unsigned int',0 ; DATA XREF: .debug_info:0000BC97o
		dw 402h
		dd 6F6C6604h, 13007461h, 6E616353h, 4D64656Eh, 65626D65h
		dd 0F9010072h, 10BD05h,	535F0E00h, 6E6E6163h, 654D6465h
		dd 7265626Dh, 0FA011400h, 113E05h, 61740F00h, 0FC010067h
		dd 1EA05h, 230200h
		db 11h
		dd offset aWire_type	; "wire_type"
		db 1, 0FDh, 5
		dd offset loc_1B8+3
		dd 0F042302h
aLength_prefix_	db 'length_prefix_len',0
		dw 0FE01h
		dd offset byte_1BB05
		dd 5230200h
		db 11h
		dd offset aField	; "field"
		db 1, 0FFh, 5
		dd offset loc_BDF+4
		dd 0F082302h, 6E656Ch, 96060001h, 2000000h
		db 23h,	0Ch, 11h
		dd offset aData		; "data"
		db 1
		db    1
		db 6, 66h, 6
		db    0
		align 2
		dw 2302h
		db  10h
		align 2
		dw 4713h
aEnerichandler	db 'enericHandler',0    ; DATA XREF: .debug_info:0000BD3Fo
		dw 0E301h
		db    9
		dd offset sub_1154+1
		db 6, 4, 5Bh
		db  11h
		db 2 dup(0), 9
		db    1
		dd offset loc_116F+7
byte_6775	db 0Ah,	25h, 2		; DATA XREF: .debug_info:0000BD7Eo
		db    0
		align 2
		dw 940Ah
		db  0Eh
		db 2 dup(0), 0Ah
off_6780	dd offset loc_E64	; DATA XREF: .debug_info:0000BCF8o
					; .debug_info:0000BD04o ...
		db  0Ah
		dd offset loc_225
		align 2
		dw 6715h
aEt_tag_size	db 'et_tag_size',0
		db    1
		db 0F1h, 1, 96h
		db    0
		db 2 dup(0), 3
		dd offset loc_119E+1
		db  16h
aNumber		db 'number',0
		db    1
		dd offset off_A4EE+3
		db 2 dup(0), 17h
aUint32_size	db 'uint32_size',0
		db    1
		db 3, 2	dup(1)
		dd offset sub_96
		db    3
		dd offset loc_11C2+2
		db 18h,	76h, 0
		db    1
		db 3, 1, 0EAh
		db    1
		align 4
		db  17h
aInt32_size	db 'int32_size',0
		db    1
		db 14h,	2 dup(1)
		dd offset sub_96
		db    3
		dd offset loc_11E7+1
		db 18h,	76h, 0
		db    1
		db 14h,	1, 0DBh
		db    1
		align 4
		db  17h
aZigzag32	db 'zigzag32',0
		dw 2501h
		db    1
		db 1, 0EAh, 1
		db    0
		align 2
		dw 0A03h
		db  12h
		db 2 dup(0), 18h
		db  76h	; v
		align 2
		dw 2501h
		db    1
		dd offset loc_1DA+1
		align 2
		dw 7A17h
aIgzag64	db 'igzag64',0
		db    1
		db 4Fh,	2 dup(1)
		dd offset loc_208+1
		db    3
		dd offset loc_122A+2
		db 18h,	76h, 0
		db    1
		db 4Fh,	1, 0FAh
		db    1
		align 10h
		db  17h
aUnknown_field_	db 'unknown_field_get_packed_size',0
		db 1
dword_6860	dd 9601020Ah, 3000000h,	1265h ;	DATA XREF: .debug_info:0000BE56o
		db 19h
		dd offset aField	; "field"
		db 1, 0Ah, 2
		dd offset loc_1262+3
dword_6878	dd 6B040600h, 8000012h,	0BF9h, 746E6917h, 705F3233h, 6B6361h
		dd 1024A01h, 96h, 12A203h
		db 0, 19h
		dd offset aValue	; "value"
		dw 4A01h
		dd 1DB02h, 756F1800h, 4A010074h, 24F02h, 74170000h, 705F6761h
		dd 6B6361h, 102F301h, 96h, 12D101h, 64691800h, 2F30100h
		dd 1EAh, 74756F18h, 2F30100h, 24Fh, 61701700h, 5F657372h
		dd 746E6975h, 1003436h,	9010694h, 1000002h, 1328h, 6E656C18h
		dd 6940100h, 0A4h
		db 19h
		dd offset aData		; "data"
		db 1, 94h, 6
		dd offset loc_665+1
		db  1Ah
aShift		db 'shift',0
		db 1
		db  96h	; ñ
		dd offset byte_A406
		align 2
		dw 691Ah
		db    0
		db 1, 96h, 6
		dd offset loc_A4
		db  1Ah
		db 72h,	76h, 0
		db    1
		db 97h,	6, 9
		db    2
		align 4
		db  1Bh
		db 1, 70h, 72h
aOtobuf_c_servi	db 'otobuf_c_service_invoke_internal',0
		db 1, 0E8h, 9
		dd 13CC0101h
		db 2 dup(0), 19h
		dd offset aService	; "service"
		db 1
		db 0E8h	; Ë
		db 9, 0CAh, 0Eh
		db    0
unk_6975	db    0			; DATA XREF: .debug_info:0000BF7Co
		dw 6D18h
aEthod_index	db 'ethod_index',0
		db    1
		db 0E9h, 9, 0A4h
		db    0
		db 2 dup(0), 18h
aInput_0	db 'input',0
		dw 0EA01h
		db    9
		dd offset loc_E93+1
		db 18h,	63h, 6Ch
aOsure		db 'osure',0
		dw 0EB01h
		db    9
		dd offset loc_E64
		db 18h,	63h, 6Ch
aOsure_data	db 'osure_data',0
		db 1
		db 0ECh	; Ï
		db 9, 25h, 2
		db    0
		align 2
		dw 681Ah
aAndlers	db 'andlers',0
		db    1
		db 0EEh, 9, 0CCh
		db  13h
		db 2 dup(0), 1Ah
aHandler	db 'handler',0
		db    1
		db 0EFh, 9, 3Eh
		db  11h
		align 10h
		db    6
		db 4, 3Eh, 11h
		db    0
		align 2
		dw 7317h
aIzeof_elt_in_r	db 'izeof_elt_in_repeated_array',0
		dd 1035001h, 96h, 140B03h, 79741800h, 1006570h,	4790350h
		dd 17000000h
aGet_packed_pay	db 'get_packed_payload_length',0
		dw 0B601h
		dd 960104h, 0C3010000h,	19000014h
		dd offset aField	; "field"
		dd 0E304B601h, 1900000Bh
		dd offset aCount	; "count"
dword_6A58	dd 0A404B701h, 19000000h ; DATA	XREF: .debug_info:0000C04Bo
		dd offset aArray	; "array"
		dd 0DC04B801h, 1A00000Bh, 1007672h, 0A404BAh, 691A0000h
		dd 4BB0100h, 0A4h, 147E1Ch, 72611A00h, 0CA010072h, 14C304h
		dd 901C0000h, 1A000014h, 727261h, 0C304D201h, 14h, 14A21Ch
		dd 72611A00h, 0DA010072h, 14CE04h, 0B41C0000h, 1A000014h
		dd 727261h, 0D904E201h,	14h, 72611A1Dh,	0EA010072h, 14E404h
		dd 6000000h, 14C904h, 1DB0800h,	4060000h, 14D4h, 1EA08h
		dd 0DF040600h, 8000014h, 1FAh, 14EA0406h, 9080000h, 17000002h
		dd 6C6F6F62h, 5F6E6165h, 6B636170h, 2B50100h, 9601h, 15230300h
		db 2 dup(0), 19h
		dd offset aValue	; "value"
		db 1
		dd 48E02B5h, 6F180000h,	1007475h, 24F02B5h, 17000000h
aPack_buffer_pa	db 'pack_buffer_packed_payload',0
		db 1
		dd 960104F7h, 1000000h,	161Ch
		db 19h
		dd offset aField	; "field"
		db 1, 0F7h, 4
		dd offset loc_BDF+4
		db 19h
off_6B6D	dd offset aCount	; DATA XREF: .debug_info:0000C123o
					; "count"
		db 1, 0F8h, 4
		dd offset loc_A4
		db 19h
		dd offset aArray	; "array"
		db 1, 0F9h, 4
		dd offset loc_BDC
		db 19h
off_6B85	dd offset aBuffer	; DATA XREF: .debug_info:0000C18Do
					; "buffer"
		db 1, 0FAh, 4
		dd offset loc_65E+2
byte_6B90	db 1Eh			; DATA XREF: .debug_info:0000C0DCo
		dd offset aScratch	; "scratch"
		db 1, 0FCh, 4
off_6B98	dd offset loc_161B+1	; DATA XREF: .debug_info:0000C1A9o
		dd 76721Ah, 9604FD01h, 1A000000h, 0FE010069h, 0A404h, 6F6E1F00h
		dd 6361705Fh, 676E696Bh, 65656E5Fh, 646564h, 1C055901h
		dd 15C5h, 6E656C1Ah, 5220100h, 0A4h, 15D71C00h,	6C1A0000h
		dd 1006E65h, 0A4052Bh, 1C000000h, 15E9h, 6E656C1Ah, 5340100h
		dd 0A4h, 15FB1C00h, 6C1A0000h, 1006E65h, 0A4053Dh, 1C000000h
		dd 160Dh, 6E656C1Ah, 5460100h, 0A4h, 6C1A1D00h,	1006E65h
		dd 0A4054Eh, 0
		dd offset dword_1BB20
		dd 162C00h, 2192100h, 0F0000h, 78616D17h, 3231625Fh, 756E5F38h
		dd 7265626Dh, 24010073h, 960106h, 6F010000h, 18000016h
		dd 6E656Ch, 96062401h, 19000000h
		dd offset aData		; "data"
dword_6C70	dd 66062401h, 1A000006h, 1007672h, 960626h, 17000000h
		dd 6E616373h, 7261765Fh, 746E69h, 1075E01h, 0A4h, 16AC01h
		dd 656C1800h, 5E01006Eh, 0A407h
		db 0, 19h
		dd offset aData		; "data"
		dw 5E01h
dword_6CB0	dd 66607h, 691A00h, 0A4076001h,	0 ; DATA XREF: .debug_info:00007245o
		dd 72617017h, 695F6573h, 3233746Eh, 67C0100h, 1EA01h, 16DF0300h
		dd 6C180000h, 1006E65h,	0A4067Ch
		db 2 dup(0), 19h
		dd offset aData		; "data"
		db 1
dword_6CEC	dd 666067Ch, 17000000h,	697A6E75h, 67617A67h, 1003233h
					; DATA XREF: .debug_info:00007269o
					; .debug_info:00007302o ...
		dd 0DB010681h, 3000001h, 1703h,	1007618h, 1EA0681h, 17000000h
		dd 697A6E75h, 67617A67h, 1003436h, 0FA0106A7h, 3000001h
		dd 1727h, 1007618h, 20906A7h, 17000000h
aRequired_field	db 'required_field_get_packed_size',0 ; DATA XREF: .debug_info:000088C9o
					; .debug_info:00008D2Co
		db 1
		dd 96010164h, 1000000h,	17C4h
		db 19h
off_6D69	dd offset aField	; DATA XREF: .debug_info:0000AE6Bo
					; .debug_info:0000AF0Do ...
					; "field"
		db 1, 64h, 1
		dd offset loc_BDF+4
		db 19h
		dd offset aMember	; "member"
		db 1, 65h, 1
		dd offset loc_BDC
dword_6D80	dd 76721Ah, 96016701h, 1C000000h, 1795h, 7274731Ah, 1860100h
					; DATA XREF: .debug_info:0000AE8Fo
					; .debug_info:0000AF25o ...
		dd 227h, 6E656C1Ah, 1870100h, 96h, 17A71C00h, 6C1A0000h
		dd 1006E65h, 96018Ch, 1D000000h, 67736D1Ah, 1920100h, 0E94h
		dd 6275731Ah, 1007672h
dword_6DD0	dd 960193h, 0		; DATA XREF: .debug_info:off_5614o
		dd 78696617h, 32336465h, 6361705Fh, 9001006Bh, 960102h
		dd 0F8030000h, 19000017h
		dd offset aValue	; "value"
		dd 0EA029001h, 18000001h, 74756Fh, 25029001h, 2, 78696617h
		dd 34366465h, 6361705Fh, 0A401006Bh, 960102h, 2C030000h
		dd 19000018h
		dd offset aValue	; "value"
		db    1
		db 0A4h, 2, 9
		db    2
		db 2 dup(0), 18h
		db  6Fh	; o
		db 75h,	74h, 0
		db    1
		db 0A4h, 2, 25h
		db    2
		align 10h
		db  17h
aRequired_fie_0	db 'required_field_pack',0
		db 1, 0FCh, 2
		dd offset off_9601
		dd 188B0100h
		db 2 dup(0), 19h
		dd offset aField	; "field"
		db 1
		dd 0BE302FCh
		db 2 dup(0), 19h
		dd offset aMember	; "member"
		db 1
		db 0FDh	; ˝
		db 2, 0DCh, 0Bh
		db    0
		align 2
		dw 6F18h
		db  75h	; u
		db 74h,	0, 1
		db 0FEh	; ˛
		db 2, 4Fh, 2
		db    0
		align 2
		dw 721Ah
		dd offset word_10076
		dd offset off_9601+2
		db    0
		db 1Dh,	1Ah, 62h
		db  64h	; d
		align 2
		dw 2901h
		db    3
		dd offset loc_1889+2
		db 2 dup(0), 6
		db    4
		dd offset loc_188E+3
		db 8, 0A8h, 4
		db    0
		align 2
		dw 6717h
aEt_type_min_si	db 'et_type_min_size',0
		db 1, 89h, 3
		dd offset byte_A401
		db    0
		db 1, 0C4h, 18h
		db    0
		align 2
		dw 7418h
		db  79h	; y
		db 70h,	65h, 0
		db    1
		db 89h,	3, 79h
		db    4
		align 4
		db  17h
aRequired_fie_1	db 'required_field_pack_to_buffer',0
		db 1
		dd 96010438h, 1000000h,	19B5h
		db 19h
		dd offset aField	; "field"
		db 1, 38h, 4
		dd offset loc_BDF+4
		db 19h
		dd offset aMember	; "member"
		db 1, 39h, 4
		dd offset loc_BDC
		db 19h
		dd offset aBuffer	; "buffer"
		db 1, 3Ah, 4
		dd offset loc_65E+2
		dd 76721Ah, 96043C01h, 1E000000h
		dd offset aScratch	; "scratch"
		dd 0B5043D01h, 1C000019h, 1949h, 7274731Ah, 4710100h, 227h
		db 1Eh
		dd offset aSublen	; "sublen"
		db 1, 72h, 4
		dd offset sub_96
		dd 19661C00h, 621A0000h, 7D010064h, 188B04h
		db 0, 1Eh
		dd offset aSublen	; "sublen"
		dw 7E01h
		dd offset off_9601+3
		dd 1A1D0000h
aSimple_buffer_	db 'simple_buffer_scratch',0
		dw 8901h
		dd 19C504h
		db 0, 1Eh
		dd offset aSublen	; "sublen"
		dw 8A01h
		dd offset off_9601+3
		db    0
		db 1Ah,	73h, 69h
aMple_buffer	db 'mple_buffer',0
		db    1
		db 8Bh,	4, 0CFh
		db  0Fh
		db 2 dup(0), 1Ah
		db  6Dh	; m
		db 73h,	67h, 0
		db    1
		db 8Dh,	4, 94h
		db  0Eh
		align 4
		db    0
		dd offset dword_1BB20
		align 2
		dd offset loc_19C4+1	; jumptable 000017C9 cases 2,7,10
		dw 1921h
		db    2
		db 2 dup(0), 13h
		db    0
		dd offset dword_1BB20
		align 2
		dd offset loc_19D4+1	; jumptable 000017C9 cases 3,8
		dw 1921h
		db    2
		db 2 dup(0), 0FFh
		db    0
		db 1Bh,	1, 70h
aRotobuf_c_mess	db 'rotobuf_c_message_init',0
		db 1
		dd 10109DCh, 1A11h
		db 19h
		dd offset aDescriptor	; "descriptor"
		db 1, 0DCh, 9
		dd offset loc_C80+2	; jumptable 00000CB0 default case
		db 19h
		dd offset aMessage	; "message"
		db 1, 0DDh, 9
		dd offset loc_225
		db    0
		db 17h,	69h, 73h
a_packable_type	db '_packable_type',0
		db 1
		db 0FBh	; ˚
		db 7, 1, 8Eh
		db    4
		db 2 dup(0), 1
		dd offset loc_1A3E
		db  18h
aType		db 'type',0
		dw 0FB01h
		db    7
		dd offset loc_479
		align 2
		dw 7017h
aArse_fixed_uin	db 'arse_fixed_uint32',0
		dw 8901h
		dd 1EA0106h, 76030000h,	1900001Ah
		dd offset aData		; "data"
		db    1
		db 89h,	6, 66h
		db    6
		db 2 dup(0), 1Ah
		db  74h	; t
		align 2
		dw 8C01h
		db    6
		dd offset loc_1EA
		align 2
		dw 7017h
aArse_fixed_u_0	db 'arse_fixed_uint64',0
		dw 0AF01h
		dd 2090106h, 0AE030000h, 1900001Ah
		dd offset aData		; "data"
		dd 6606AF01h, 1A000006h, 0B2010074h, 20906h, 70170000h
		dd 65737261h, 6F6F625Fh, 6E61656Ch, 6BB0100h, 48E01h, 1AED0100h
		dd 6C180000h, 1006E65h,	0A406BBh
		db 2 dup(0), 19h
		dd offset aData		; "data"
		db 1
		dd 66606BBh, 691A0000h,	6BD0100h, 0A4h,	6C612200h, 5F636F6Ch
		dd 6C696166h, 775F6465h, 696E7261h, 100676Eh, 34010177h
		dd 1600001Bh, 657A6973h, 0A4770100h, 16000000h,	656C6966h
		dd 656D616Eh, 27770100h, 16000002h, 656E696Ch, 0A4770100h
		dd 0
aSystem_free	db '#system_free',0
		db 1, 0ADh, 1
		dd offset _system_free	; jumptable 00000717 case 11
		dd offset unk_45
		dd offset dword_C940
		dd 1B8501h
		db 0, 24h
		dd offset aAllocator_data ; "allocator_data"
		dw 0AD01h
		dd offset loc_225
		dd 24009102h
		dd offset aData		; "data"
		dd 225AD01h, 91020000h
		db 4, 25h
		dd offset loc_2F
		dw 6B01h
		dd 2600006Ch
		dd offset unk_45
		dd offset dword_6C70+11h
		dd 79732700h, 6D657473h, 6C6C615Fh, 100636Fh, 22501A1h
		db 2 dup(0)
		dd offset _system_alloc
		dd offset byte_95
		dd offset off_C990
		dw 0F601h
		dd 2400001Bh
		dd offset aAllocator_data ; "allocator_data"
		dd 225A101h, 91020000h,	69732800h, 100657Ah, 96A1h, 4910200h
		dd 767229h, 225A301h
		db 2 dup(0)
		dd offset off_C9CA
		db 2Ah
		dd offset loc_67
		dd offset dword_6C70+27h
		dd offset loc_1BEA+2
		db 2Bh
		dd 3007402h, 60491h
		db 26h
		dd offset byte_95
		dd offset dword_6C70+11h
		align 2
aProtobuf_c_out	db '#protobuf_c_out_of_memory_default',0
		db 1, 9Ah, 1
		dd offset _protobuf_c_out_of_memory_default
		dd offset unk_D3
		dd offset off_C9E8
		db 1
		dd offset loc_1C5A
		db 2Ah
		dd offset loc_CE
		dd offset dword_6CB0+3
		dd offset loc_1C50
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aOutOfMemory	; "Out Of Memory!!!\n"
		db 2Bh
		dd 1047402h, 74022B31h,	410108h
		db 26h
		dd offset unk_D3
		dd offset dword_6CEC+2
		align 2
		dw 282Ch
		db 13h,	2 dup(0)
		dd offset _protobuf_c_service_invoke_internal
		dd offset unk_14A
		dd offset off_CA08
		dd offset loc_1D1A+1
		db 2Dh
		dd offset loc_1353+3
		dd 2D009102h, 1362h, 2D049102h,	1377h, 2D089102h, 1385h
		dd 2D0C9102h, 1395h, 2E109102h,	13AAh
		dd offset off_CA88
		dd 13BB2Eh
		db 0
		dd offset off_CACA
		db 2Fh,	28h, 13h
		db 2 dup(0)
		dd offset loc_129
		dd offset loc_145
		dw 0E801h
		dd 1D1109h
		db 0, 30h
		dd offset loc_129
		dd offset loc_145
		dw 0AA31h
		dd 31000013h, 13BBh, 139532h, 13853200h, 77320000h, 32000013h
		dd 1362h, 135632h
		db 0, 33h
		dd offset loc_145
		dd offset dword_6CEC+0Fh
		dw 22Bh
		dd 3050074h
		dd offset aMethod_indexSe ; "method_index < service->descriptor->n_m"...
		dd 474022Bh
		db 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dw 22Bh
		dd 0A030874h, 9F5h
		db 0, 26h
		dd offset unk_14A
		dd offset dword_6C70+11h
		dw 3400h
		dd offset loc_1AEC+1
		dd offset _alloc_failed_warning_constprop_14
		dd offset _protobuf_c_buffer_simple_append
		dd offset off_CB0C
		dd 1D8B01h, 1B0B3500h
		db 2 dup(0)
		dd offset off_CB46
		dw 2735h
		db 1Bh,	2 dup(0)
		dd offset off_CB73
		db 2Dh
		dd offset loc_1B17
		db 6, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dw 2A9Fh
		dd offset loc_183
		dd offset dword_6CEC+31h
		dd offset loc_1D80+1
		dd 474022Bh
		db 5, 3
		dd offset aWarningOutOfMe ; "WARNING: out-of-memory allocating a blo"...
		dw 22Bh
		dd 0F3030874h, 22B5001h, 3050C74h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 1074022Bh, 5201F303h
		db 0, 26h
		dd offset _protobuf_c_buffer_simple_append
		dd offset dword_6C70+11h
		dw 3600h
		db    1
aProtobuf_c_buf	db 'protobuf_c_buffer_simple_append',0
		db 1, 0D0h, 1
		dd offset _protobuf_c_buffer_simple_append
		dd offset _parse_uint64
		dd offset off_CB94
		dd 1E8401h
		db 0, 24h
		dd offset aBuffer	; "buffer"
		dw 0D001h
		dd offset loc_65E+2
		dd 28009102h, 6E656Ch, 96D101h,	91020000h
		db 4, 24h
		dd offset aData		; "data"
		dw 0D201h
		dd offset loc_665+1
		dd 29089102h, 706D6973h, 84D40100h
		db 1Eh,	2 dup(0)
		dd offset off_CC77
aNew_len	db ')new_len',0
		dd 96D501h
		db 2 dup(0)
		dd offset off_CCB8
		db 37h
		dd offset off_17FA8
		dd offset loc_1E78+2
aNew_alloced	db ')new_alloced',0
		dd 96D801h
		db 2 dup(0)
		dd offset off_CCE1
aNew_data	db ')new_data',0
		dd 24FD901h
		db 2 dup(0)
		dd offset off_CD0A
		db 38h
		dd offset off_17FC8
		db 39h
		dd offset aDa__allocation ; "da__allocation_size"
		dd 96DC01h
		db 2 dup(0)
		dd offset off_CD33
		db 3Ah
		dd offset loc_1F4
		dd offset unk_1E67
		db 2Bh
		dd 2047402h, 3B000073h
		dd offset loc_2A3
		dd 1D1B01h, 52012B00h, 0DC0802h
		db 2 dup(0), 26h
		dd offset _parse_uint64
		dd offset dword_6C70+11h
		align 4
		dd 0FCF0406h, 70170000h, 65737261h, 6E69755Fh, 323374h
		dd 1066801h, 1EAh, 1EC903h, 656C1800h, 6801006Eh, 0A406h
		db 0, 19h
		dd offset aData		; "data"
		dw 6801h
		dd 66606h, 76721A00h, 66A0100h,	0A4h, 12D13400h
		db 2 dup(0)
		dd offset _parse_uint64
		dd offset unk_37A
		dd offset off_CD46
		dw 8F01h
		dd 3500001Fh, 12ECh
		dd offset off_CDE0
		dd 12F835h
byte_7500	db 0			; DATA XREF: .debug_loc:00013D84o
					; .debug_loc:00013F8Co
		dd offset off_CE25
		db 31h,	4, 13h
		dd 12310000h, 3C000013h, 131Ch,	4935006h, 3D049352h, 12D1h
		dd offset loc_2C3
		dd offset off_17FE8
		dd 4F069401h, 3500001Fh, 12F8h
		dd offset off_CE75
		dd 12EC35h
		db 0
		dd offset off_CEA1
		db 38h
		dd offset off_18000
		dw 42Eh
		db 13h,	2 dup(0)
		dd offset off_CEC2
		db 2Eh
		dd offset loc_1311+1
		dd offset off_CEE2
		dd 131C2Eh
		db 0
		dd offset off_CEF6
		db 2 dup(0), 2Fh
		dd offset loc_1E87+3
		dd offset loc_33C
		dd offset loc_371
		dd 85069901h, 3500001Fh, 1EB1h
		dd offset off_CF1E
		dd 1EA535h
		db 0
		dd offset off_CF3C
		db 38h
		dd offset off_18018
		dw 0BD2Eh
		db 1Eh,	2 dup(0)
		dd offset off_CF4F
		align 4
		db 0, 26h
		dd offset unk_37A
		dd offset dword_6C70+11h
		dw 1700h
aUint32_pack	db 'uint32_pack',0
		dd 1022B01h, 96h, 1FCD03h
		db 0, 19h
		dd offset aValue	; "value"
		dw 2B01h
		dd 1EA02h, 756F1800h, 2B010074h, 24F02h, 76721A00h, 22D0100h
		dd 0A4h, 69753E00h, 3436746Eh, 6361705Fh, 6501006Bh, 960102h
		db 2 dup(0)
		dd offset _uint64_pack
		dd offset unk_4A9
		dd offset off_CF62
word_7602	dw 7E01h		; DATA XREF: .debug_info:00008A74o
		dd 3F000020h
		dd offset aValue	; "value"
		dd 9026501h
		db 2, 2	dup(0)
		dd offset off_CFB2
a@out		db '@out',0
		dd 4F026501h
		db 2, 2	dup(0)
		dd offset off_D01A
		db 41h
		dd 1006968h, 1EA0267h
		db 2 dup(0)
		dd offset off_D03B
		dw 6C42h
		dd 6801006Fh, 1EA02h, 41530100h, 1007672h, 0A40269h
		db 2 dup(0)
		dd offset off_D085
		dw 8F3Dh
		db 1Fh,	2 dup(0)
		dd offset loc_420
		dd offset off_18030
		db 1
		dd 2074026Bh, 0B5350000h
		db 1Fh,	2 dup(0)
		dd offset off_D0BB
		db 35h
		dd offset loc_1FA8+1
		dd offset off_D0D9
		db 38h
		dd offset off_18050
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_D118
		align 4
		db 26h
		dd offset unk_4A9
		dd offset dword_6C70+11h
		align 2
		dw 0A234h
		db 12h,	2 dup(0)
		dd offset _tag_pack
		dd offset unk_581
		dd offset off_D1A2
		db 1
		dd offset loc_211E+1
		dd 12B935h
		db 0
		dd offset off_D216
		db 35h,	0C4h, 12h
		db 2 dup(0)
		dd offset off_D250
		dw 0A23Dh
		db 12h,	2 dup(0)
		dd offset loc_4E8
		dd offset off_18088
		db 1
		dd 20FF02F3h, 0C4350000h
		db 12h,	2 dup(0)
		dd offset off_D295
		db 35h
		dd offset loc_12B5+4
		dd offset off_D2A8
		dd 1F8F43h
		db 0
		dd offset loc_4EB
		dd offset off_180A0
		db 1, 0F6h, 2
		dd 1FB535h
		db 0
		dd offset off_D2C9
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_D2DC
byte_7702	db 38h			; DATA XREF: .debug_info:00008710o
		dd offset off_180B8
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_D2FA
		dd 44000000h
		dd offset unk_4E7
		dd 1FCD01h, 211500h, 51012B00h,	5201F303h
		db 0, 26h
		dd offset unk_581
		dd offset dword_6C70+11h
		dw 1700h
aOptional_field	db 'optional_field_get_packed_size',0
		db 1
		dd 9601019Fh, 1000000h,	217Fh
		db 19h
		dd offset aField	; "field"
		db 1, 9Fh, 1
		dd offset loc_BDF+4
		dd 73616818h, 1A00100h,	217Fh
		db 19h
		dd offset aMember	; "member"
		db 1, 0A1h, 1
		dd offset loc_BDC
		db  1Dh
		db 1Ah,	70h, 74h
		db  72h	; r
		align 2
		dw 0A601h
		db    1
		dd offset loc_BDC
		db 2 dup(0), 6
		db    4
		dd offset loc_2185
		db 8, 8Eh, 4
		db    0
		align 2
		dw 7217h
aEpeated_field_	db 'epeated_field_get_packed_size',0
		dw 0B701h
		dd 960101h, 43010000h, 19000022h
		dd offset aField	; "field"
		dd 0E301B701h, 1900000Bh
		dd offset aCount	; "count"
		dd 9601B801h, 19000000h
		dd offset aMember	; "member"
		dd 0DC01B901h, 1A00000Bh, 64616568h, 735F7265h,	657A69h
		dd 9601BB01h, 1A000000h, 1007672h, 9601BCh, 691A0000h
		dd 1BD0100h, 0A4h
		db 1Eh
		dd offset aArray	; "array"
		db 1, 0BEh, 1
		dd offset loc_225
		dd 22221Ch, 656C1A00h, 0EC01006Eh, 9601h, 341C0000h, 1A000022h
		dd 6E656Ch, 9601F401h, 0
		dd 656C1A1Dh, 0FB01006Eh, 9601h, 17000000h, 746E6973h
		dd 735F3233h, 657A69h, 1013101h, 96h, 226803h, 761800h
		dd 0DB013101h, 1, 6E697317h, 5F343674h,	657A6973h, 15C0100h
		dd 9601h, 228D0300h, 76180000h,	15C0100h, 1FAh,	69751700h
		dd 3436746Eh, 7A69735Fh, 3A010065h, 960101h, 0C2030000h
		dd 18000022h, 3A010076h, 20901h, 70751A00h, 5F726570h
		dd 3C010076h, 1EA01h, 1450000h
aProtobuf_c_mes	db 'protobuf_c_message_get_packed_size',0
		db 1
		dd 96010211h
		db 3 dup(0)
		dd offset _protobuf_c_message_get_packed_size
		dd offset unk_C55
		dd offset off_D38F
		db 1
		dd offset loc_27BD+1
		db 46h
		dd offset aMessage	; "message"
		db 1, 11h, 2
		dd offset loc_E93+1
		dd 41009102h, 13010069h, 0A402h
		db 0
		dd offset off_D429
		db 41h,	72h, 76h
		dd 2140100h, 96h
		dd offset off_D454
		db 37h
		dd offset off_180F0
		dd offset loc_2732+3
		db 1Eh
		dd offset aField	; "field"
		dw 1801h
		dd 0BE302h
		db 0, 47h
		dd offset aMember	; "member"
		dw 1901h
		dd 0BDC02h
		db 0
		dd offset off_D4DD
		db 47h
		dd offset aQmember	; "qmember"
		dw 1A01h
		dd 0BDC02h
		db 0
		dd offset off_D7DA
		db 3Dh,	8Ah, 21h
		db 2 dup(0)
		dd offset loc_5C3
		dd offset off_18118
		dw 2101h
		dd 26DF02h, 21CF3500h
		db 2 dup(0)
		dd offset off_DABA
		dw 0C335h
		db 21h,	2 dup(0)
		dd offset off_DDAC
		db 32h
		dd offset loc_21B5+2
		db 38h
		dd offset off_18148
		db 2Eh,	0DBh, 21h
		db 2 dup(0)
		dd offset off_E0DF
		dw 0EF2Eh
		db 21h,	2 dup(0)
		dd offset off_E11B
		db 2Eh
		dd offset loc_21FA
		dd offset off_E287
		dd 22042Eh
		db 0
		dd offset off_E2A5
		db 37h
		dd offset off_18178
		dd offset loc_23F9+3
		dw 152Eh
		db 22h,	2 dup(0)
		dd offset off_E56C
		db 43h
		dd offset loc_119E+1
		dd offset loc_7BB
		dd offset off_181B0
		dd 3501ED01h, 11B9h
		dd offset off_E56C
		dd 119F43h
		db 0
		dd offset loc_A78
		dd offset off_181E0
		db 1, 11h, 2
		dd 11B935h
		db 0
		dd offset off_E5AD
		align 10h
		dd 11763Dh
		db 0
		dd offset loc_5F9
		dd offset off_181F8
		db 1, 0C1h, 1
		dd offset loc_2431+3
		dd 119035h
		db 0
		dd offset off_E5CB
		db 43h,	76h, 11h
		db 2 dup(0)
		dd offset loc_788
		dd offset off_18228
		dw 1101h
		dd 11903502h
		db 2 dup(0)
		dd offset off_E770
		align 4
		dd 119F3Dh
		db 0
		dd offset loc_738
		dd offset off_18240
		db 1, 2	dup(2)
		dd offset loc_246B+1
		dd 11B935h
		db 0
		dd offset off_E79A
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_AE4
		dd offset off_18260
		dw 1101h
		dd 11B93502h
		db 2 dup(0)
		dd offset off_E7C3
		align 10h
		db 37h
		dd offset off_18278
		dd offset loc_24B2+1
		db 2Eh,	27h, 22h
		db 2 dup(0)
		dd offset off_E7E1
		dw 9F43h
		db 11h,	2 dup(0)
		dd offset loc_7C0
		dd offset off_182A0
		db 1
		dd 0B93501F5h
		db 11h,	2 dup(0)
		dd offset off_E7E1
		db 43h
		dd offset loc_119E+1
		dd offset loc_A90
		dd offset off_182C8
		dd 35021101h, 11B9h
		dd offset off_E82D
		dd 3D000000h, 228Dh
		dd offset loc_7F3
		dd offset off_182E0
		dd 1401DA01h, 35000025h, 22A7h
		dd offset off_E84B
		db 38h
		dd offset off_18338
		db 2Eh,	0B1h, 22h
		db 2 dup(0)
		dd offset off_E98D
		dw 9F43h
		db 11h,	2 dup(0)
		dd offset loc_950
		dd offset off_18390
		db 1
		dd 0B935013Eh
		db 11h,	2 dup(0)
		dd offset off_EA70
		db 43h
		dd offset loc_119E+1
		dd offset loc_B14
		dd offset off_183B8
		dd 35021101h, 11B9h
		dd offset off_EAA4
		align 8
		dd 11C43Dh
		db 0
		dd offset loc_84F
		dd offset off_183D0
		db 1, 0CCh, 1
		dd offset loc_2549+3
		dd 11DD35h
		db 0
		dd offset off_EAC2
		db 43h,	0C4h, 11h
		db 2 dup(0)
		dd offset loc_AFC
		dd offset off_18408
		dw 1101h
		dd 11DD3502h
		db 2 dup(0)
		dd offset off_EB49
		align 10h
		dd 119F3Dh
		db 0
		dd offset loc_854
		dd offset off_18420
		db 1, 0D1h, 1
		dd offset loc_2582+2
		dd 11B935h
		db 0
		dd offset off_EB7F
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_A48
		dd offset off_18450
		dw 1101h
		dd 11B93502h
		db 2 dup(0)
		dd offset off_EBEF
		align 4
		dd 22433Dh
		db 0
		dd offset loc_88B
		dd offset off_18468
		db 1, 0C8h, 1
		dd offset loc_25F1+3
		dd 225D35h
		db 0
		dd offset off_EC25
		db 3Dh,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_88B
		dd offset off_184A0
		dw 3301h
		dd 25D901h, 11B93500h
		db 2 dup(0)
off_7BCE	dd offset off_EC8B	; DATA XREF: .debug_loc:00016004o
		dw 9F43h
		db 11h,	2 dup(0)
		dd offset loc_A1C
		dd offset off_184D0
		db 1
		dd 0B9350211h
		db 11h,	2 dup(0)
		dd offset off_ECBF
		align 4
		dd 11E84300h
		db 2 dup(0)
		dd offset loc_99B	; DATA XREF: .debug_loc:off_16983o
off_7BF6	dd offset off_184E8	; DATA XREF: .debug_loc:00016998o
					; .debug_loc:00016AC8o
		dw 3301h
		dd 11FF3501h
		db 2 dup(0)
		dd offset off_EC25
		align 4
		dd 22683Dh
		db 0
		dd offset loc_8D4
		dd offset off_18500
		db 1, 0D5h, 1
		dd offset loc_268C+1
		dd 228235h
		db 0
off_7C21	dd offset off_ECDD	; DATA XREF: .debug_info:00005828o
		db 3Dh,	8Dh, 22h
		db 2 dup(0)
		dd offset loc_8D4
		dd offset off_18558
		dw 5E01h
		dd 267201h, 22A73500h
		db 2 dup(0)
		dd offset off_ED05
		db 38h
		dd offset off_185B0
		db 2Eh
		dd offset loc_22AF+2
		dd offset off_ED9D
		dd 119F43h
		db 0
		dd offset loc_906
		dd offset off_18608
		db 1, 3Eh, 1
		dd 11B935h
		db 0
		dd offset off_EE08
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_B28
		dd offset off_18630
		dw 1101h
		dd 11B93502h
		db 2 dup(0)
		dd offset off_EE3C
		align 4
		dd 0A430000h
		db 12h,	2 dup(0)
		dd offset loc_8F4
		dd offset off_18648
		db 1
		dd 2135015Eh
		db 12h,	2 dup(0)
		dd offset off_ECDD
		align 10h
		db 0, 38h
		dd offset off_18660
		dw 352Eh
		db 22h,	2 dup(0)
		dd offset off_EE5A
		db 3Dh
		dd offset loc_119E+1
		dd offset loc_9C8
		dd offset off_18688
		dd 0D301FC01h, 35000026h, 11B9h
		dd offset off_EE5A
		dd 119F43h
		db 0
		dd offset loc_A34
		dd offset off_186B0
		db 1, 11h, 2
		dd 11B935h
		db 0
		dd offset off_EE8E
		db 2 dup(0), 26h
		dd offset loc_9EC
		dd offset loc_22C2
		dd 3D000000h, 211Fh
		dd offset loc_6F0
		dd offset off_186C8
		dd 2B021F01h, 35000027h, 2164h
		dd offset off_EEAC
		dd 215835h
		db 0
		dd offset off_EECA
		db 32h,	4Ch, 21h
		db 2 dup(0), 48h
		dd offset loc_768
		dd offset loc_774
		dd offset loc_271E+3
		db 2Eh
		dd offset loc_216B+6
		dd offset off_EEE8
		db 0, 26h
		dd offset loc_70B
		dd offset loc_27BD+1
		dw 2600h
		dd offset loc_6CB
		dd offset loc_27BD+1
		dd 122C3D00h
		db 2 dup(0)
		dd offset loc_674
		dd offset off_186E0
		dw 2401h
		dd 278E02h
		db 0, 38h
		dd offset off_18708
		dw 5832h
		dd 32000012h, 1258h, 117643h
		db 0
		dd offset loc_674
		dd offset off_18730
		db 1, 0Ch, 2
		dd 119035h
		db 0
		dd offset off_EEFB
		db 43h,	76h, 11h
		db 2 dup(0)
		dd offset loc_6D4
		dd offset off_18758
		dw 1101h
		dd 11903502h
		db 2 dup(0)
		dd offset off_EF77
		align 10h
		db 2 dup(0), 26h
		dd offset loc_C39
		dd offset dword_6C70+11h
		db 33h
		dd offset unk_C55
		dd offset dword_6CEC+0Fh
		dd 74022Bh
		db 5, 3
		dd offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 2150A03h, 27340000h
		db 17h,	2 dup(0)
		dd offset _required_field_get_packed_size_isra_11
		dd offset unk_FBE
		dd offset off_EFAD
		db 1
		dd offset loc_2AFE
		dd 176035h
		db 0
		dd offset off_F02D
		db 2Dh,	54h, 17h
		dd 0FA060000h, 1754h, 17542D9Fh, 0FA060000h, 1754h, 176C3C9Fh
		dd 56010000h, 11763Dh
		db 0
		dd offset loc_C6A
		dd offset off_18770
		db 1, 67h, 1
		dd offset loc_2834
		dd 119035h
		db 0
		dd offset off_F1AC
		db 43h,	76h, 11h
		db 2 dup(0)
		dd offset loc_C9C
		dd offset off_18798
		dw 6401h
		dd 11903501h
		db 2 dup(0)
		dd offset off_F264
		align 4
		dd 119F3Dh
		db 0
		dd offset loc_CE6
		dd offset off_187B0
		db 1, 83h, 1
		dd offset loc_286B+1
		dd 11B935h
		db 0
		dd offset off_F282
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_D84
		dd offset off_187D0
		dw 6401h
		dd 11B93501h
		db 2 dup(0)
		dd offset off_F2A0
		align 10h
		db 37h
		dd offset off_187E8
		dd offset loc_28C6+3
		db 2Eh,	0A8h, 17h
		db 2 dup(0)
		dd offset off_F2B3
		dw 0B42Eh
		db 17h,	2 dup(0)
		dd offset off_F2C6
		db 3Dh
		dd offset loc_119E+1
		dd offset loc_D26
		dd offset off_18870
		dd 0BF019401h, 35000028h, 11B9h
		dd offset off_F2C6
		dd 119F43h
		db 0
		dd offset loc_EEA
		dd offset off_18890
		db 1, 64h, 1
		dd 11B935h
		db 0
		dd offset off_F314
		db 2 dup(0), 26h
		dd offset loc_D26
		dd offset loc_22C2
		dd 22433D00h
		db 2 dup(0)
		dd offset loc_D4E
		dd offset off_188A8
		dw 6B01h
		dd 290101h, 225D3500h
		db 2 dup(0)
		dd offset off_F332
		dw 0E843h
		db 11h,	2 dup(0)
		dd offset loc_D4E
		dd offset off_188C0
		db 1
		dd 0FF350133h
		db 11h,	2 dup(0)
		dd offset off_F332
		align 4
		dd 11C43D00h
		db 2 dup(0)
		dd offset loc_D5E
		dd offset off_188D8
		dw 6D01h
		dd 293901h, 11DD3500h
		db 2 dup(0)
		dd offset off_F368
		dw 0C443h
		db 11h,	2 dup(0)
		dd offset loc_D76
		dd offset off_188F8
		db 1
		dd 0DD350164h
		db 11h,	2 dup(0)
		dd offset off_F3A9
		align 4
		db 0, 37h
		dd offset off_18910
		dd offset loc_2988+1
		dw 7C2Eh
		db 17h,	2 dup(0)
		dd offset off_F3D3
		db 2Eh
		dd offset loc_1787+1
		dd offset off_F3F1
		dd 119F43h
		db 0
		dd offset loc_DA8
		dd offset off_18930
		db 1, 88h, 1
		dd 11B935h
		db 0
		dd offset off_F3F1
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_ED7
		dd offset off_18950
		dw 6401h
		dd 11B93501h
		db 2 dup(0)
		dd offset off_F41A
		align 4
		db 0, 37h
		dd offset off_18968
		dd offset loc_29CE+2
		dw 9A2Eh
		db 17h,	2 dup(0)
		dd offset off_F438
		db 43h
		dd offset loc_119E+1
		dd offset loc_E2E
		dd offset off_18998
		dd 35018D01h, 11B9h
		dd offset off_F438
		dd 119F43h
		db 0
		dd offset loc_EFF
		dd offset off_189C0
		db 1, 64h, 1
		dd 11B935h
		db 0
		dd offset off_F46C
		align 4
		dd 22683Dh
		db 0
		dd offset loc_DC9
		dd offset off_189D8
		db 1, 71h, 1
		dd offset loc_2A67+2
		dd 228235h
		db 0
		dd offset off_F48A
		db 3Dh,	0Ah, 12h
		db 2 dup(0)
		dd offset loc_DC9
		dd offset off_189F8
		dw 5E01h
		dd 2A0B01h, 12213500h
		db 2 dup(0)
		dd offset off_F48A
		dw 4300h
		dd offset loc_228D
		dd offset loc_DD5
		dd offset off_18A10
		dd 35015E01h, 22A7h
		dd offset off_F4B2
		db 38h
		dd offset off_18A28
		db 2Eh,	0B1h, 22h
		db 2 dup(0)
		dd offset off_F4DA
		dw 9F49h
		db 11h,	2 dup(0)
		dd offset loc_E70
off_804F	dd offset loc_E98	; DATA XREF: .debug_loc:0000C9D4o
		db 1
		dd 0B935013Eh
		db 11h,	2 dup(0)
		dd offset off_F503
		db 49h
		dd offset loc_119E+1
		dd offset loc_E81
		dd offset loc_E98
		dd 35016401h, 11B9h
		dd offset off_F516
		dd 0
		dd 228D3D00h
		db 2 dup(0)
		dd offset loc_DDF
		dd offset off_18A40
		dw 7401h
		dd 2ACA01h, 22A73500h
		db 2 dup(0)
		dd offset off_F529
		db 38h
		dd offset off_18A78
		db 2Eh
		dd offset loc_22AF+2
		dd offset off_F552
		dd 119F49h
		db 0
		dd offset loc_DFD
		dd offset loc_E25
		db 1, 3Eh, 1
		dd 11B935h
		db 0
		dd offset off_F571
		db 49h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_E0E
		dd offset loc_E25
		dw 6401h
		dd 11B93501h
		db 2 dup(0)
		dd offset off_F584
		align 4
		db 2 dup(0), 2Ah
		dd offset loc_C9C
		dd offset dword_6CEC+0Fh
		dd offset loc_2AF3+1
		db 2Bh
		dd 5007402h
		db 3
		dd offset off_4E54
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 1970Ah
		db 26h
		dd offset unk_FBE
		dd offset dword_6C70+11h
		align 2
		dw 6F17h
aPtional_field_	db 'ptional_field_pack',0
		db 1
		dd 96010339h, 1000000h,	2B5Fh
		db 19h
		dd offset aField	; "field"
		db 1, 39h, 3
		dd offset loc_BDF+4
		dd 73616818h, 33A0100h,	217Fh
		db 19h
		dd offset aMember	; "member"
		db 1, 3Bh, 3
		dd offset loc_BDC
		dd 74756F18h, 33C0100h,	24Fh, 74701A1Dh, 41010072h, 0BDC03h
		dd 17000000h
aRepeated_field	db 'repeated_field_pack',0
		dd 1039701h, 96h, 2CD901h
		db 0, 19h
		dd offset aField	; "field"
		dw 9701h
		dd 0BE303h
		db 0, 19h
		dd offset aCount	; "count"
		dw 9801h
		dd offset off_9601+2
		db 0, 19h
		dd offset aMember	; "member"
		dw 9901h
		dd 0BDC03h, 756F1800h, 9A010074h, 24F03h
		db 0, 1Eh
		dd offset aArray	; "array"
		dw 9C01h
		dd 22503h, 691A00h, 0A4039D01h,	1C000000h, 2CBFh, 6165681Ah
		dd 5F726564h, 6E656Ch, 0A403A001h, 1A000000h, 5F6E656Ch
		dd 72617473h, 0A1010074h, 0A403h, 696D1A00h, 656C5F6Eh
		dd 6874676Eh, 3A20100h,	0A4h
		db 1Eh
		dd offset aPayload_len	; "payload_len"
		db 1, 0A3h, 3
		dd offset loc_A4
		dd 6E656C1Ah, 5F687467h, 657A6973h, 6E696D5Fh, 3A40100h
		dd 0A4h, 7463611Ah, 5F6C6175h, 676E656Ch, 735F6874h, 657A69h
		dd 0A403A501h, 1A000000h, 6C796170h, 5F64616Fh,	1007461h
		dd 24F03A6h, 681C0000h,	1A00002Ch, 727261h, 0C303C201h
		dd 14h,	2C7A1Ch, 72611A00h, 0CA010072h,	14C303h, 8C1C0000h
		dd 1A00002Ch, 727261h, 0D903D201h, 14h,	2C9E1Ch, 72611A00h
		dd 0DA010072h, 14CE03h,	0B01C0000h, 1A00002Ch, 727261h
		dd 0E403E201h, 14h, 72611A1Dh, 0E9010072h, 217F03h, 1D000000h
		dd 76721Ah, 96040001h, 1A000000h, 7A6973h, 0A4040101h
		dd 0
		db    0
aJcopy_to_littl	db 'Jcopy_to_little_endian_32',0
		db 1
		db  70h	; p
		db 3, 2	dup(1)
		dd offset loc_2D1C+2
		db  18h
		db 6Fh,	75h, 74h
		db    0
		db 1, 70h, 3
		dd offset loc_225
		db  18h
		db 69h,	6Eh, 0
		db    1
		db 70h,	3, 0DCh
		db  0Bh
		db 2 dup(0), 18h
		db  4Eh	; N
		align 2
		dw 7001h
		dd offset byte_A403
		db    0
		align 2
aJcopy_to_lit_0	db 'Jcopy_to_little_endian_64',0
		dd 1037C01h, 2D6301h, 756F1800h, 7C010074h, 22503h, 6E691800h
		dd 37C0100h, 0BDCh, 1004E18h, 0A4037Ch,	17000000h, 746E6973h
		dd 705F3233h, 6B6361h, 1025D01h, 96h, 2D9603h
		db 0, 19h
		dd offset aValue	; "value"
		dw 5D01h
		dd 1DB02h, 756F1800h, 5D010074h, 24F02h, 73170000h, 36746E69h
		dd 61705F34h, 1006B63h,	96010288h, 3000000h, 2DC9h
		db 19h
		dd offset aValue	; "value"
		db 1, 88h, 2
		dd offset loc_1FA
		db  18h
		db 6Fh,	75h, 74h
		db    0
		db 1, 88h, 2
		dd offset loc_24F
		db    0
		db 17h,	75h, 6Eh
aKnown_field_pa	db 'known_field_pack',0
		db 1, 0Bh, 4
		dd offset off_9601
		dd 2E0E0100h
		db 2 dup(0), 19h
		dd offset aField	; "field"
		db 1
		dd 1265040Bh, 6F180000h, 1007475h, 24F040Ch, 721A0000h
		dd 0E010076h, 9604h, 1450000h
aProtobuf_c_m_0	db 'protobuf_c_message_pack',0
		dd 1041501h, 96h
		dd offset _protobuf_c_message_pack
		dd offset _required_field_pack_isra_12
		dd offset off_F597
		dd 349601h
		db 0, 46h
		dd offset aMessage	; "message"
		dw 1501h
		dd 0E9404h, 910200h, 74756F4Bh,	4160100h, 24Fh,	41049102h
		dd 18010069h, 0A404h
		db 0
		dd offset off_F631
		db 41h,	72h, 76h
		dd 4190100h, 96h
		dd offset off_F66B
		db 37h
		dd offset off_18AB0
		dd offset loc_341C	; jumptable 000031BF case 14
		db 47h
		dd offset aField	; "field"
		dw 1D01h
		dd 0BE304h
		db 0
		dd offset off_F6E9
		db 47h
		dd offset aMember	; "member"
		dw 1E01h
		dd 0BDC04h
		db 0
		dd offset off_F78F
		db 47h
		dd offset aQmember	; "qmember"
		dw 2601h
		dd 0BDC04h
		db 0
		dd offset off_F7E4
		db 3Dh,	5Fh, 2Bh
		db 2 dup(0)
		dd offset loc_104D
		dd offset off_18AD0
		dw 2F01h
		dd 33A904h, 2BA53500h
		db 2 dup(0)
		dd offset off_F890
		dw 9935h
		db 2Bh,	2 dup(0)
		dd offset off_F905
		db 35h
		dd offset loc_2B8C+1
		dd offset off_F944
		dd 2B8135h
		db 0
		dd offset off_FA89
		db 38h
		dd offset off_18B00
		dw 0B12Eh
		db 2Bh,	2 dup(0)
		dd offset off_FB15
		db 2Eh
		dd offset loc_2BBD
		dd offset off_FB54
		db 37h
		dd offset off_18B30
		dd offset loc_32FE+3
		db 2Eh,	0CCh, 2Bh
		db 2 dup(0)
		dd offset off_FB94
		dw 0F12Eh
		db 2Bh,	2 dup(0)
		dd offset off_FCC9
		db 2Eh
		dd offset loc_2C04
		dd offset off_FCFD
		dd 2C103Ch, 38740200h, 2C283Ch,	2E500100h, 2C43h
		dd offset off_FD73
		dd 2BDF2Eh
		db 0
		dd offset off_FE7B
		db 3Dh,	96h, 18h
		db 2 dup(0)
		dd offset loc_110E
		dd offset off_18B58
		dw 0AC01h
		dd 2F6703h, 18B63500h
		db 2 dup(0)
		dd offset off_FEB2
		dw 3D00h
		dd offset loc_119E+1
		dd offset loc_1142
		dd offset off_18B78
		dd 9F03AD01h, 3500002Fh, 11B9h
		dd offset off_FCC9
		dd 119F43h
		db 0
		dd offset sub_12C4
		dd offset off_18BA8
		db 1, 15h, 4
		dd 11B935h
		db 0
		dd offset off_FF4C
		db 2 dup(0), 37h
		dd offset off_18BC0
		dd offset loc_2FFE+1
		dd 2C7F31h, 2D964300h
		db 2 dup(0)
		dd offset loc_1438
		dd offset off_18BD8
		dw 0D401h
		dd 2DBC3503h
		db 2 dup(0)
		dd offset off_FF6A
		dw 0B035h
		db 2Dh,	2 dup(0)
		dd offset off_FF88
		db 3Dh
		dd offset loc_1209+1
		dd offset loc_1438
		dd offset off_18BF0
		dd 0ED028A01h, 3500002Fh, 1221h
		dd offset off_FF88
		db 0, 33h
		dd offset loc_1443
		dd offset loc_1FC9+4
		dw 12Bh
		dd 770251h, 37000000h
		dd offset off_18C08
		dd offset loc_303F+1
		dd 2C9131h, 1F8F4300h
		db 2 dup(0)
		dd offset loc_12F0
		dd offset off_18C30
		dw 0DC01h
		dd 1FB53503h
		db 2 dup(0)
		dd offset off_FFB0
		dw 0A935h
		db 1Fh,	2 dup(0)
		dd offset off_FFEF
		db 38h
		dd offset off_18C60
		dd 1FC12Eh
		db 0
		dd offset off_1002E
		align 4
		dd 2D1E2Fh
		db 0
		dd offset loc_135C	; jumptable 000012BC cases 5,9,11
		dd offset loc_1363
		db 1, 0BCh, 3
		dd offset loc_306F+1
		dd 2D5835h
		db 0
		dd offset off_100B8
		db 35h,	4Dh, 2Dh
		db 2 dup(0)
		dd offset off_100CD
		dw 4135h
		db 2Dh,	2 dup(0)
		dd offset off_100E0
		align 4
		dd 119F3Dh
		db 0
		dd offset sub_1370
		dd offset off_18CA8
		db 1, 0F3h, 3
		dd offset loc_30A5+3
		dd 11B935h
		db 0
		dd offset off_FCFD
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset sub_1678
		dd offset off_18CD0
		dw 1501h
		dd 11B93504h
		db 2 dup(0)
		dd offset off_100F4
		align 4
		dd 1F8F3Dh
		db 0
		dd offset loc_13C5
		dd offset off_18CE8
		db 1, 0FAh, 3
		dd offset loc_30DD+1
		dd 1FB535h
		db 0
		dd offset off_10112
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_10164
		db 38h
		dd offset off_18D18
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_10212
		db 2 dup(0), 48h
		dd offset loc_1478
		dd offset loc_1493	; jumptable 000012BC cases 2,7,10
		dd offset loc_3100+1
		db 31h
		dd offset loc_2CA1+2
		db 33h
		dd offset loc_1487
		dd offset loc_1FC9+4
		db 2Bh,	1, 51h
		dd offset byte_7702
		dd 2CD92F00h
		db 2 dup(0)
		dd offset loc_1493	; jumptable 000012BC cases 2,7,10
		dd offset loc_149A
		dw 0B501h
		dd 313103h, 2D133500h
		db 2 dup(0)
		dd offset off_1029E
		dw 835h
		db 2Dh,	2 dup(0)
		dd offset off_102B3
		db 35h
		dd offset loc_2CFA+2
		dd offset off_102C6
		db 0, 37h
		dd offset off_18D60
		dd offset loc_31BC
		dw 5B31h
		dd 4300002Ch, 1270h
		dd offset loc_14C4
		dd offset off_18D90
		dd 3503C401h, 1295h
		dd offset off_102DA
		dd 128935h
		db 0
		dd offset off_10319
		db 3Dh,	70h, 12h
		db 2 dup(0)
		dd offset loc_14C4
		dd offset off_18DC8
		dw 1501h
		dd 318804h, 12953500h
		db 2 dup(0)
		dd offset off_1037E
		dw 8935h
		db 12h,	2 dup(0)
		dd offset off_10391
		align 4
		dd 1F8F43h
		db 0
		dd offset sub_15B5
		dd offset off_18DE0
		db 1, 58h, 2
		dd 1FB535h
		db 0
		dd offset off_103B0
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_103E4
		db 38h
		dd offset off_18E08
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_10418
		align 10h
		db 37h
		dd offset off_18E48
		dd offset loc_323C+2
		db 31h,	6Dh, 2Ch
		dd 63430000h
		db 2Dh,	2 dup(0)
		dd offset loc_14CC
		dd offset off_18E70
		db 1
		dd 893503CCh
		db 2Dh,	2 dup(0)
		dd offset off_104A2
		db 35h
		dd offset loc_2D7C+1
		dd offset off_104E1
		dd 1F8F3Dh
		db 0
		dd offset loc_14CC
		dd offset off_18EA0
		db 1, 5Fh, 2
		dd offset loc_3220+2
		dd 1FB535h
		db 0
		dd offset off_10553
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_10592
		db 38h
		dd offset off_18ED0
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_105D1
		dd 0E8430000h
		db 11h,	2 dup(0)
		dd offset loc_152E
		dd offset off_18F18
		db 1
		dd 0FF35025Fh
		db 11h,	2 dup(0)
		dd offset off_104E1
		align 10h
		db 2 dup(0), 48h
		dd offset sub_1620
		dd offset sub_1638
		dd offset loc_326F+1
		db 31h
		dd offset loc_2CAE+3
		dd 14EF49h
		db 0
		dd offset sub_1620
		dd offset loc_162A
		db 1, 0EBh, 3
		dd 150A35h
		db 0
		dd offset off_1065B
		db 32h,	16h, 15h
		dd 0
		db 2Ah
		dd offset sub_1100
		dd offset loc_129E+4
		dd offset loc_3284+2
		db 2Bh,	1, 52h
		dd 7FB49104h
		db 6, 0, 2Ah
		dd offset unk_11B2
		dd offset dword_6CEC+0Fh
		dd offset loc_32AF+1
		db 2Bh
		dd 5007402h
		db 3
		dd offset off_4E54
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 3F00Ah
		db 2Ah
		dd offset loc_13BD
		dd offset aRequired_field+0Ah ;	"ield_get_packed_size"
		dd offset loc_32D8+2
		db 2Bh,	2, 74h
		dd 0B4910800h, 4091067Fh, 22B2206h, 91030474h, 22B0644h
		dd 77020874h
		db 2 dup(0), 33h
		dd offset sub_1764
		dd offset dword_6CEC+0Fh
		db 2Bh
		dd 5007402h
		db 3
off_88FD	dd offset aActual_length_ ; DATA XREF: .debug_loc:0000C9D8o
					; "actual_length_size == length_size_min +"...
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 3F60Ah
		db 0, 38h
		dd offset off_18F30
		dw 0C02Eh
		db 2Ch,	2 dup(0)
		dd offset off_10685
		db 3Ch
		dd offset loc_2CCA+1
		dd 3D307402h, 13D2h
		dd offset sub_1214
		dd offset off_18F50
		dd 7B040101h, 35000033h, 13FDh
		dd offset off_106BC
		dd 13D249h
		db 0
		dd offset loc_121A	; jumptable 0000124B default case
		dd offset loc_1238
		db 1, 15h, 4
		db 30h
		dd offset loc_121A	; jumptable 0000124B default case
		dd offset loc_1238
		db 32h,	0FDh, 13h
		db 2 dup(0), 33h
		dd offset unk_1236
		dd offset dword_6CEC+0Fh
		db 2Bh
		dd 5007402h
		db 3
		dd offset off_4E54
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 36B0Ah, 33000000h
		dd offset loc_128B
		dd offset loc_3591
		dd 352012Bh, 2B064491h,	75025101h, 74022B00h, 0B4910700h
		dd 76067Fh, 184E4C22h, 73020000h, 0
		dd 2AFE3D00h
		db 2 dup(0)
		dd offset sub_11DC
		dd offset off_18F70
		dw 2D01h
		dd 340A04h, 2B443500h
		db 2 dup(0)
		dd offset off_106E8
		dw 3835h
		db 2Bh,	2 dup(0)
		dd offset off_10718
		db 35h
		dd offset loc_2B2A+2
		dd offset off_10736
		dd 2B2035h
		db 0
		dd offset off_10754
		db 48h
		dd offset loc_1238
		dd offset loc_1244
		dd offset loc_33F4+4
		dw 512Eh
		db 2Bh,	2 dup(0)
		dd offset off_1077F
		align 4
		db 33h
		dd offset sub_1205
		dd offset loc_3591
		db 2Bh,	2, 74h
		dd 730200h
		db 2 dup(0), 33h
		dd offset sub_11CA
		dd offset loc_3591
		db 2Bh
		dd 2007402h, 73h, 2DC92Fh
		db 0
		dd offset loc_10A8
		dd offset loc_10C5
		db 1, 32h, 4
		dd offset loc_3465+1
		dd 2DF635h
		db 0
		dd offset off_10792
		db 35h,	0EAh, 2Dh
		db 2 dup(0)
		dd offset off_107B7
		db 30h
		dd offset loc_10A8
		dd offset loc_10C5
		db 2Eh
		dd offset loc_2DFF+3
		dd offset off_107CA
		db 33h
		dd offset loc_10B1
		dd offset loc_129E+4
		db 2Bh,	1, 52h
		dd offset word_7602
		db 2 dup(0), 26h
		dd offset sub_1748
		dd offset dword_6C70+11h
		db 33h
		dd offset _required_field_pack_isra_12
		dd offset dword_6CEC+0Fh
		dd 74022Bh
		db 5, 3
		dd offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 41A0A03h, 73170000h, 6E697274h, 61705F67h
		dd 1006B63h, 960102C5h,	3000000h, 34E2h, 72747318h, 2C50100h
		dd 227h, 74756F18h, 2C50100h, 24Fh, 656C1A1Dh, 0CE01006Eh
		dd 9602h, 76721A00h, 2CF0100h, 96h, 62170000h, 72616E69h
		dd 61645F79h, 705F6174h, 6B6361h, 102D601h, 96h, 353003h
		dd 64621800h, 2D60100h,	188Bh, 74756F18h, 2D60100h, 24Fh
		dd 6E656C1Ah, 2D80100h,	96h, 76721Ah, 9602D901h, 0
		db  17h
aPrefixed_messa	db 'prefixed_message_pack',0
		db 1
		dd 960102DFh, 3000000h,	3591h
		db 19h
		dd offset aMessage	; "message"
		db 1, 0DFh, 2
		dd offset loc_E93+1
		dd 74756F18h, 2DF0100h,	24Fh, 76721A1Dh, 2E80100h, 96h
		dd 5F76721Ah, 6B636170h, 735F6465h, 657A69h, 0EA02E901h
		dd 1, 182C3400h
		db 2 dup(0)
		dd offset _required_field_pack_isra_12
		dd offset unk_1C7D
		dd offset off_107DD
		dw 9801h
		dd 35000039h, 185Ah
		dd offset off_10877
		dd 18662Dh, 910200h, 184E2Dh, 4EFA0600h, 9F000018h, 184E2Dh
		dd 4EFA0600h, 9F000018h, 18722Eh
		db 0
		dd offset off_10984
		db 37h
		dd offset off_18F90
		dd offset loc_3655
		dw 7E2Eh
		db 18h,	2 dup(0)
		dd offset off_10997
		db 43h
		dd offset loc_34DF+3
		dd offset loc_17D6
		dd offset off_18FC0
		dd 35032B01h, 350Ch
		dd offset off_109E4
		dd 350135h
		db 0
		dd offset off_10A34
		db 38h
		dd offset off_18FF0
		dw 182Eh
		db 35h,	2 dup(0)
		dd offset off_10A81
		db 31h
		dd offset loc_3524
		dd 1F8F43h
		db 0
		dd offset loc_17D8
		dd offset off_19020
		db 1, 0D9h, 2
		dd 1FB535h
		db 0
		dd offset off_10AC0
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_10B10
		db 38h
		dd offset off_19050
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_10BA8
		dd 0
		dd 35303D00h
		db 2 dup(0)
		dd offset loc_1867
		dd offset off_190A0
		dw 3101h
		dd 372D03h, 35603500h
		db 2 dup(0)
		dd offset off_10C32
		dw 5435h
		db 35h,	2 dup(0)
		dd offset off_10C92
		db 38h
		dd offset off_190E8
		dd 356D2Eh
		db 0
		dd offset off_10CBC
		db 3Ch,	78h, 35h
		dd 50010000h, 119F3Dh
		db 0
		dd offset loc_1880
		dd offset off_19128
		db 1, 0E9h, 2
		dd offset loc_36C7+1
		dd 11B935h
		db 0
		dd offset off_10CBC
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_1BCF
		dd offset off_19150
		dw 0FC01h
		dd 11B93502h
		db 2 dup(0)
		dd offset off_10D32
		align 4
		dd 1F8F3Dh
		db 0
		dd offset loc_18AB
		dd offset off_19168
		db 1, 0ECh, 2
		dd offset loc_36FE
		dd 1FB535h
		db 0
		dd offset off_10D66
		db 35h,	0A9h, 1Fh
		db 2 dup(0)
		dd offset off_10D9A
		db 38h
		dd offset off_19190
		db 2Eh
		dd offset loc_1FBF+2
		dd offset off_10E27
		db 2 dup(0), 2Ah
		dd offset loc_187E
		dd offset loc_2E0E
		dd offset loc_3712+1
		db 2Bh
		dd 2047402h, 33000075h
		dd offset loc_18AB
		dd offset aRequired_field+0Ah ;	"ield_get_packed_size"
		dd 474022Bh, 2B007502h,	2087402h, 76h, 12703D00h
		db 2 dup(0)
		dd offset loc_1904
		dd offset off_191D0
		dw 801h
		dd 37AD03h, 12953500h
		db 2 dup(0)
		dd offset off_10EA7
		dw 8935h
		db 12h,	2 dup(0)
		dd offset off_10EE6
		db 2Fh
		dd offset loc_126F+1
		dd offset loc_190C
		dd offset loc_195C	; jumptable 000017C9 case 1
		dd 7A02FC01h, 35000037h, 1295h
		dd offset off_10F3F
		dd 128935h
		db 0
		dd offset off_10F52
		align 2
		dw 8F43h
		db 1Fh,	2 dup(0)
		dd offset loc_1B14
		dd offset off_19200
		db 1
		dd 0B5350258h
		db 1Fh,	2 dup(0)
		dd offset off_10F71
		db 35h
		dd offset loc_1FA8+1
		dd offset off_10FA5
		db 38h
		dd offset off_19228
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_10FD9
		align 10h
		dd 2D633D00h
		db 2 dup(0)
		dd offset loc_1960
		dd offset off_19270
		dw 501h
		dd 37EE03h, 2D893500h
		db 2 dup(0)
		dd offset off_11063
		dw 7D35h
		db 2Dh,	2 dup(0)
		dd offset off_11081
		db 43h
		dd offset loc_11E7+1
		dd offset loc_1960
		dd offset off_19288
		dd 35025F01h, 11FFh
		dd offset off_11081
		dd 8F3D0000h
		db 1Fh,	2 dup(0)
		dd offset loc_196A
		dd offset off_192A0
		db 1
		dd 3824030Ch, 0B5350000h
		db 1Fh,	2 dup(0)
		dd offset off_110AB
		db 35h
		dd offset loc_1FA8+1
		dd offset off_110EA
		db 38h
		dd offset off_192D0
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_11129
		align 4
		dd 17C42Fh
		db 0
		dd offset loc_19C9
		dd offset loc_19CC
		db 1, 18h, 3
		dd offset loc_384A+1
		dd 17DF35h
		db 0
		dd offset off_111B5
		db 35h,	0EBh, 17h
		db 2 dup(0)
		dd offset off_111D4
		dw 3D00h
		dd offset loc_2D94+2
		dd offset loc_19F0
		dd offset off_19320
		dd 8C030F01h, 35000038h, 2DBCh
		dd offset off_111EC
		dd 2DB035h
		db 0
		dd offset off_1120A
		db 43h,	0Ah, 12h
		db 2 dup(0)
		dd offset loc_19F0
		dd offset off_19338
		dw 8A01h
		dd 12213502h
		db 2 dup(0)
		dd offset off_1120A
		align 10h
		dd 17F82Fh
		db 0
		dd offset loc_1A08
		dd offset loc_1A0F
		db 1, 1Dh, 3
		dd offset loc_38AF+4
		dd 181F35h
		db 0
		dd offset off_11232
		db 35h,	13h, 18h
		db 2 dup(0)
		dd offset off_1124A
		dw 2F00h
		dd offset loc_14ED+2
		dd offset loc_1A24	; jumptable 000017C9 case 12
		dd offset loc_1A2C
		dd 0DA032001h, 35000038h, 150Ah
		dd offset off_11262
		dd 151635h
		db 0
		dd offset off_11276
		align 2
		dw 963Dh
		db 34h,	2 dup(0)
		dd offset loc_1A3C
		dd offset off_19350
		db 1
		dd 39470324h, 0BC350000h
		db 34h,	2 dup(0)
		dd offset off_1128E
		db 35h
		dd offset loc_34AE+2
		dd offset off_112E9
		db 38h
		dd offset off_19388
		db 2Eh,	0C9h, 34h
		db 2 dup(0)
		dd offset off_11340
		dw 0D531h
		dd 43000034h, 1F8Fh
		dd offset loc_1A54
		dd offset off_193B8
		dd 3502CF01h, 1FB5h
		dd offset off_1137F
		dd 1FA935h
		db 0
		dd offset off_113CF
		db 38h
		dd offset off_193E8
		dw 0C12Eh
		db 1Fh,	2 dup(0)
		dd offset off_11467
		align 4
		dd 2A000000h
		dd offset loc_17A2
		dd offset loc_129E+4
		dd offset loc_3958+3
		dd 252012Bh, 2A000077h
		dd offset loc_17C4
		dd offset dword_6CEC+0Fh
		dd offset loc_3983+2
		dd 74022Bh
		db 5, 3
		dd offset off_4E54
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 3350A03h
		db 0, 26h
		dd offset loc_19E1
		dd offset loc_1FC9+4
		db 26h
		dd offset unk_1C7D
		dd offset dword_6C70+11h
		align 4
		db  17h
aOptional_fie_0	db 'optional_field_pack_to_buffer',0
		db 1
		dd 960104A0h, 1000000h,	3A03h
		db 19h
		dd offset aField	; "field"
		db 1, 0A0h, 4
		dd offset loc_BDF+4
		dd 73616818h, 4A10100h,	217Fh
		db 19h
		dd offset aMember	; "member"
		db 1, 0A2h, 4
		dd offset loc_BDC
		db 19h
		dd offset aBuffer	; "buffer"
		db 1, 0A3h, 4
		dd offset loc_65E+2
		dd 74701A1Dh, 0A8010072h, 0BDC04h, 17000000h
aRepeated_fie_0	db 'repeated_field_pack_to_buffer',0
		dw 6001h
		dd 960105h, 0C4010000h,	1900003Ah
		dd offset aField	; "field"
		dd 0E3056001h, 1900000Bh
		dd offset aCount	; "count"
		dd 0A4056101h, 19000000h
		dd offset aMember	; "member"
		dd 0DC056201h, 1900000Bh
		dd offset aBuffer	; "buffer"
		dd 60056301h, 1E000006h
		dd offset aArray	; "array"
		dd 69056501h, 1C000001h, 3AA0h
		db 1Eh
		dd offset aScratch	; "scratch"
		db 1, 6Ah, 5
		dd offset loc_19B3+2
		dd 76721Ah, 96056B01h, 1E000000h
		dd offset aPayload_len	; "payload_len"
		dd 96056C01h, 1A000000h, 706D74h, 96056D01h, 0
		dd 69731A1Dh, 7701007Ah, 9605h,	691A00h, 0A4057801h, 1A000000h
		dd 1007672h, 0A4057Ah, 0
		db  17h
aUnknown_fiel_0	db 'unknown_field_pack_to_buffer',0
		dw 8601h
		dd 960105h, 22010000h, 1900003Bh
		dd offset aField	; "field"
		dd 65058601h, 19000012h
		dd offset aBuffer	; "buffer"
		dd 60058701h, 1A000006h, 64616568h, 1007265h, 3B220589h
		dd 721A0000h, 8A010076h, 9605h,	0BB200000h, 32000001h
		dd 2100003Bh, 219h, 1450009h
aProtobuf_c_m_1	db 'protobuf_c_message_pack_to_buffer',0
		dw 9201h
		dd 960105h
		db 2 dup(0)
		dd offset _protobuf_c_message_pack_to_buffer
		dd offset _required_field_pack_to_buffer_isra_13
		dd offset off_114F1
		dw 0A901h
		dd 46000044h
		dd offset aMessage	; "message"
		dd 94059201h, 200000Eh
		db 91h,	0, 46h
		dd offset aBuffer	; "buffer"
		db 1
		dd 6600593h, 91020000h,	694104h, 0A4059501h
		db 3 dup(0)
		dd offset off_1158B
		db 41h
		dd 1007672h, 960596h
		db 2 dup(0)
		dd offset off_115CF
		db 37h
		dd offset off_19438
		dd offset loc_43FC+2
		db 47h
		dd offset aField	; "field"
		dd 0E3059A01h
		db 0Bh,	2 dup(0)
		dd offset off_1162F
		db 47h
		dd offset aMember	; "member"
		dd 0DC059B01h
		db 0Bh,	2 dup(0)
		dd offset off_11760
		db 47h
		dd offset aQmember	; "qmember"
		dd 0DC059C01h
		db 0Bh,	2 dup(0)
		dd offset off_1180A
		db 3Dh
		dd offset loc_3A00+3
		dd offset loc_1D01
		dd offset off_19460
		dd 6F05A301h, 35000043h, 3A53h
		dd offset off_118CD
		dd 3A4735h
		db 0
		dd offset off_119A6
		db 35h,	3Bh, 3Ah
		db 2 dup(0)
		dd offset off_11A2F
		dw 2F35h
		db 3Ah,	2 dup(0)
		dd offset off_11B7F
		db 38h
		dd offset off_194A0
		dd 3A5F2Eh
		db 0
		dd offset off_11CBB
		db 37h
		dd offset off_194E0
		dd offset loc_42C0
		dw 703Ch
		dd 200003Ah, 7C2E4891h
		db 3Ah,	2 dup(0)
		dd offset off_11D7B
		db 31h
		dd offset unk_3A87
		dd 3A9331h, 140B3D00h
		db 2 dup(0)
		dd offset loc_1D28
		dd offset off_19520
		dw 6C01h
		dd 3EC405h, 144B3500h
		db 2 dup(0)
		dd offset off_11F6E
		dw 3F35h
		db 14h,	2 dup(0)
		dd offset off_11FB7
		db 38h
		dd offset off_19590
		dd 143332h, 14572E00h
		db 2 dup(0)
		dd offset off_12000
		dw 6231h
		dd 37000014h
		dd offset off_19600
		dd offset loc_3D04+2
		dd 148331h, 22434300h
		db 2 dup(0)
		dd offset loc_1EF5
		dd offset off_19630
		dw 0D401h
		dd 225D3504h
		db 2 dup(0)
		dd offset off_120C1
		dw 9F3Dh
		db 11h,	2 dup(0)
		dd offset loc_1EF5
		dd offset off_19668
		db 1
		dd 3CEA0133h, 0B9350000h
		db 11h,	2 dup(0)
		dd offset off_12127
		db 43h
		dd offset loc_119E+1
		dd offset loc_2538
		dd offset off_19698
		dd 35059201h, 11B9h
		dd offset off_1215B
		dd 0E8430000h
		db 11h,	2 dup(0)
		dd offset loc_2104
		dd offset off_196B0
		db 1
		dd 0FF350133h
		db 11h,	2 dup(0)
		dd offset off_120C1
		align 4
		db 2 dup(0), 37h
		dd offset off_196C8
		dd offset loc_3D47+2
		db 31h
		dd offset loc_1493+2	; jumptable 000012BC cases 2,7,10
		dd 119F43h
		db 0
		dd offset loc_1F04
		dd offset off_196F0
		db 1, 0DCh, 4
		dd 11B935h
		db 0
		dd offset off_12179
		db 43h,	9Fh, 11h
		db 2 dup(0)
		dd offset loc_24F0
		dd offset off_19720
		dw 9201h
		dd 11B93505h
		db 2 dup(0)
		dd offset off_121E9
		align 4
		db 0, 37h
		dd offset off_19738
		dd offset loc_3DED
		dw 0A731h
		dd 43000014h, 2268h
		dd offset loc_200C
		dd offset off_19780
		dd 3504E401h, 2282h
		dd offset off_1221F
		dd 228D3Dh
		db 0
		dd offset loc_200C
		dd offset off_197D8
		db 1, 5Eh, 1
		dd offset loc_3DD1
		dd 22A735h
		db 0
		dd offset off_12247
		db 38h
		dd offset off_19828
		dw 0B12Eh
		db 22h,	2 dup(0)
		dd offset off_122DF
		db 43h
		dd offset loc_119E+1
		dd offset loc_203E
		dd offset off_19878
		dd 35013E01h, 11B9h
		dd offset off_1234A
		dd 119F43h
		db 0
		dd offset loc_264C
		dd offset off_198A0
		db 1, 92h, 5
		dd 11B935h
		db 0
		dd offset off_1237E
		align 4
		dd 120A4300h
		db 2 dup(0)
		dd offset loc_202C
		dd offset off_198B8
		dw 5E01h
		dd 12213501h
		db 2 dup(0)
		dd offset off_1221F
		align 10h
		db 0, 37h
		dd offset off_198D0
		dd offset loc_3E54+5
		dw 0B531h
		dd 43000014h, 228Dh
		dd offset loc_2074
		dd offset off_19918
		dd 3504EC01h, 22A7h
		dd offset off_1239C
		db 38h
		dd offset off_19968
		db 2Eh,	0B1h, 22h
		db 2 dup(0)
		dd offset off_12501
		dw 9F43h
		db 11h,	2 dup(0)
		dd offset loc_2098
		dd offset off_199B8
		db 1
		dd 0B935013Eh
		db 11h,	2 dup(0)
		dd offset off_125F0
		db 43h
		dd offset loc_119E+1
		dd offset loc_2664
		dd offset off_199E0
		dd 35059201h, 11B9h
		dd offset off_12624
		dd 0
		db 0, 37h
		dd offset off_199F8
		dd offset loc_3E99+3
		dw 7131h
		dd 43000014h, 11C4h
		dd offset loc_20DC
		dd offset off_19A28
		dd 3504CC01h, 11DDh
		dd offset off_12642
		dd 11C443h
		db 0
		dd offset loc_25D4
		dd offset off_19A60
		db 1, 92h, 5
		dd 11DD35h
		db 0
		dd offset off_126C9
		align 10h
		db 33h
		dd offset unk_1D4E
		dd offset dword_6CEC+0Fh
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset off_4E54
		db 2Bh
		dd 5047402h
		db 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh,	2, 74h
		dd 0F20A0308h, 4, 15233Dh
		db 0
		dd offset loc_1E98
		dd offset off_19A78
		db 1, 71h, 5
		dd offset loc_422A+4
		dd 157035h
		db 0
		dd offset off_126FF
		db 35h,	64h, 15h
		db 2 dup(0)
		dd offset off_127C2
		dw 5835h
		db 15h,	2 dup(0)
		dd offset off_12859
		db 38h
		dd offset off_19AE0
		dd 154C32h, 157C3C00h, 91030000h, 882E7FB8h
		db 15h,	2 dup(0)
		dd offset off_128F0
		db 2Eh
		dd offset loc_1591+2
		dd offset off_129C0
		dd 159D4Dh
		db 0
		dd offset loc_248C
		db 37h
		dd offset off_19B48
		dd offset loc_3F81+1
		dw 0DC31h
		dd 3D000015h, 1F8Fh
		dd offset loc_217C
		dd offset off_19B78
		dd 65053401h, 3500003Fh, 1FB5h
		dd offset off_12A15
		dd 1FA935h
		db 0
		dd offset off_12A87
		db 38h
		dd offset off_19BA8
		dw 0C12Eh
		db 1Fh,	2 dup(0)
		dd offset off_12AC6
		align 4
		db 0, 4Eh
		dd offset loc_21E3
		dw 22Bh
		dd 76020074h, 74022B00h, 750204h, 874022Bh, 7FB89103h
		db 2 dup(0), 37h
		dd offset off_19BF0
		dd offset loc_4021+3
		db 31h
		dd offset loc_15C8+2
		dd 2D633Dh
		db 0
		dd offset loc_2210
		dd offset off_19C28
		db 1, 2Bh, 5
		dd offset loc_4005+2
		dd 2D8935h
		db 0
		dd offset off_12B45
		db 35h,	7Dh, 2Dh
		db 2 dup(0)
		dd offset off_12BC5
		dw 8F3Dh
		db 1Fh,	2 dup(0)
		dd offset loc_2210
		dd offset off_19C60
		db 1
		dd 3FEC025Fh, 0B5350000h
		db 1Fh,	2 dup(0)
		dd offset off_12C75
		db 35h
		dd offset loc_1FA8+1
		dd offset off_12CE7
		db 38h
		dd offset off_19C90
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_12D26
		align 10h
		db 43h
off_9601	dd offset loc_11E7+1	; DATA XREF: .debug_info:00006E58o
					; .debug_info:000083F4o ...
off_9605	dd offset loc_228B	; DATA XREF: .debug_info:0000AB14o
					; .debug_info:0000ABC0o
off_9609	dd offset off_19CD8	; DATA XREF: .debug_info:0000AEACo
					; .debug_info:0000BA88o
		db 1, 5Fh, 2
		dd 11FF35h
		db 0
		dd offset off_12BC5
		db 2 dup(0), 4Eh
		dd offset loc_2277
		dd 74022Bh, 2B007602h, 2047402h, 22B0075h, 91030874h, 7FB8h
		db 48h
		dd offset loc_22B4
		dd offset loc_22D4
		dd offset loc_4075+4
		db 31h,	0Eh, 16h
		dd 0EF2F0000h
		db 14h,	2 dup(0)
		dd offset loc_22B4
		dd offset loc_22BE
		db 1
		dd 405D054Eh, 16350000h
		db 15h,	2 dup(0)
		dd offset off_12DA5
		db 35h
		dd offset loc_1509+1
		dd offset off_12DD4
		db 0, 4Eh
		dd offset loc_22D4
		dw 22Bh
		dd 75020074h, 74022B00h, 2B310104h, 3087402h, 7FB891h
		db 0, 37h
		dd offset off_19CF0
		dd offset loc_40F5
		dw 0EE3Ch
		dd 1000015h, 2D963D50h
		db 2 dup(0)
		dd offset loc_2308
		dd offset off_19D08
		dw 3D01h
		dd 40DF05h, 2DBC3500h
		db 2 dup(0)
		dd offset off_12DED
		dw 0B035h
		db 2Dh,	2 dup(0)
		dd offset off_12E43
		db 3Dh
		dd offset loc_1209+1
		dd offset loc_2308
		dd offset off_19D20
		dd 0CD028A01h, 35000040h, 1221h
		dd offset off_12E43
		db 0, 33h
		dd offset loc_2315
		dd offset loc_1FC9+4
		dw 12Bh
		dd 0B8910351h, 4E00007Fh
		dd offset loc_232B
		dd 74022Bh, 2B007502h, 3087402h, 7FB891h
		db 0, 48h
		dd offset loc_2360
		dd offset loc_238C
		dd offset loc_4133+3
		dw 2Eh
		db 16h,	2 dup(0)
		dd offset off_12E6B
		db 2Ah
		dd offset loc_2370
		dd offset loc_1FC9+4
		dd offset loc_411F+1
		dd 351012Bh, 7FB891h
		db 4Eh
		dd offset loc_2386
		db 2Bh,	2, 74h
		dd 750200h, 874022Bh, 7FB89103h
		db 2 dup(0), 37h
		dd offset off_19D38
		dd offset loc_41E1+2
		db 3Ch
		dd offset loc_15B8
		dd 703D5601h
		db 12h,	2 dup(0)
		dd offset loc_23A4
		dd offset off_19D70
		db 1
		dd 41C60522h, 95350000h
		db 12h,	2 dup(0)
		dd offset off_12E7E
		db 35h
		dd offset loc_1286+3
		dd offset off_12EFE
		dd 12702Fh
		db 0
		dd offset loc_23A4
		dd offset loc_23F9
		db 1, 92h, 5
		dd offset loc_4190+3
		dd 129535h
		db 0
		dd offset off_12F86
		db 35h,	89h, 12h
		db 2 dup(0)
		dd offset off_12F9C
		dw 4300h
		dd offset loc_1F8E+1
		dd offset loc_2423
		dd offset off_19DA8
		dd 35025801h, 1FB5h
		dd offset off_12FC2
		dd 1FA935h
		db 0
		dd offset off_1301B
		db 38h
		dd offset off_19DD8
		dw 0C12Eh
		db 1Fh,	2 dup(0)
		dd offset off_1305A
		align 4
		db 2 dup(0), 4Eh
		dd offset loc_240B
		db 2Bh
		dd 2007402h, 22B0075h, 76020474h, 74022B00h, 0B8910308h
		dd 2A00007Fh
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		dd offset dword_6CEC+0Fh
		dd offset loc_420C+1
		dd 74022Bh
		db 5, 3
		dd offset off_4E54
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 5540A03h
		db 0, 4Eh
		dd offset loc_24A2
		dw 22Bh
		dd 75020074h, 74022B00h, 94910404h, 22B067Fh, 91040874h
		dd 67FA8h, 8F3D0000h
		db 1Fh,	2 dup(0)
		dd offset loc_1F47
		dd offset off_19E20
		db 1
		dd 4264056Fh, 0B5350000h
		db 1Fh,	2 dup(0)
		dd offset off_13105
		db 35h
		dd offset loc_1FA8+1
		dd offset off_131DC
		db 38h
		dd offset off_19E50
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_1327C
		align 4
		db 2Ah
		dd offset loc_1D26
		dd offset loc_129E+4
		dd offset loc_4274+4
		db 2Bh,	1, 52h
		dd 489102h
		db 3Ah
		dd offset loc_1FC5
		dd offset loc_4296+3
		db 2Bh,	2, 74h
		dd 750200h, 474022Bh, 7FA49104h, 74022B06h, 48910208h
		db 0, 33h
		dd offset _required_field_pack_to_buffer_isra_13
		dd offset dword_6CEC+0Fh
		dw 22Bh
		dd 3050074h
		dd offset aTmpPayload_len ; "tmp == payload_len"
		dd 474022Bh
		db 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dw 22Bh
		dd 0A030874h, 572h
		db 38h
		dd offset off_19EA0
		db 3Ch,	0A1h, 3Ah
		dd 74020000h, 3AAD2E30h
		db 2 dup(0)
		dd offset off_13308
		dw 0B72Eh
		db 3Ah,	2 dup(0)
		dd offset off_1331B
		db 3Dh
		dd offset loc_13D2
		dd offset loc_1E44
		dd offset off_19EC0
		dd 43057B01h, 35000043h, 13FDh
		dd offset off_13352
		dd 13D249h
		db 0
		dd offset loc_1E4A	; jumptable 00001E87 default case
		dd offset loc_1E68
		db 1, 92h, 5
		db 30h
		dd offset loc_1E4A	; jumptable 00001E87 default case
		dd offset loc_1E68
		db 32h,	0FDh, 13h
		db 2 dup(0), 33h
		dd offset byte_1E66
		dd offset dword_6CEC+0Fh
		db 2Bh
		dd 5007402h
		db 3
		dd offset off_4E54
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 36B0Ah, 33000000h
		dd offset loc_1EC5
		dd offset loc_44A7+2
		dd 452012Bh, 67FA491h, 251012Bh, 22B0076h, 75020074h, 18F04C00h
		dd 91040000h, 67FACh, 3D000000h, 3998h
		dd offset loc_1E14
		dd offset off_19EE0
		dd 0DE05A101h, 35000043h, 39E8h
		dd offset off_1338E
		dd 39DC35h
		db 0
		dd offset off_133AC
		db 35h,	0D0h, 39h
		db 2 dup(0)
		dd offset off_133CA
		dw 0C435h
		db 39h,	2 dup(0)
		dd offset off_133E8
		db 48h
		dd offset loc_1E68
		dd offset loc_1E74
		dd offset loc_43BD+1
		dd 39F52Eh
		db 0
		dd offset off_13406
		align 2
		db 33h
		dd offset loc_1E35
		dd offset loc_44A7+2
		db 2Bh
		dd 77025201h, 74022B0Ch, 750200h, 18F04Ch, 770200h
		db 2 dup(0), 33h
		dd offset loc_1D5E
		dd offset loc_44A7+2
		db 2Bh
		dd 77025201h, 74022B0Ch, 750200h, 18F04Ch, 770200h, 0C42F0000h
		db 3Ah,	2 dup(0)
		dd offset loc_1DA0
		dd offset loc_1DDB
		db 1
		dd 447905A6h, 0FB350000h
		db 3Ah,	2 dup(0)
		dd offset off_13419
		db 35h
		dd offset loc_3AEC+3
		dd offset off_1342C
		db 30h
		dd offset loc_1DA0
		dd offset loc_1DDB
		db 3Ch,	7, 3Bh
		dd 91020000h, 3B162E48h
		db 2 dup(0)
		dd offset off_1343F
		db 2Ah
		dd offset loc_1DA9
		dd offset loc_129E+4
		dd offset loc_444F+3
		db 2Bh
		dd 76025201h
		db 2 dup(0), 3Ah
		dd offset loc_1DC1
		dd offset loc_446A
		db 2Bh
		dd 2007402h, 22B0077h, 76020874h
		db 2 dup(0), 4Eh
		dd offset loc_1DD4
		db 2Bh
		dd 2007402h, 77h
		db 0, 26h
		dd offset loc_2770
		dd offset dword_6C70+11h
		db 33h
		dd offset loc_278C
		dd offset dword_6CEC+0Fh
		db 2Bh
		dd 5007402h
		db 3
		dd offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 5970Ah, 18C43400h
		db 2 dup(0)
		dd offset _required_field_pack_to_buffer_isra_13
		dd offset _protobuf_c_message_init_generic
		dd offset off_13452
		dw 9B01h
		dd 35000049h, 18FCh
		dd offset off_134EC
		dd 19082Dh, 910200h, 18F02Dh, 0F0FA0600h, 9F000018h, 18F02Dh
		dd 0F0FA0600h, 9F000018h, 19142Eh
		db 0
		dd offset off_135AE
		db 3Ch,	1Fh, 19h
		dd 91030000h
		db 0C8h, 7Dh, 37h
		dd offset off_19F00
		dd offset loc_4580
		db 2Eh
		dd offset loc_194D+1
		dd offset off_13645
		dd 19592Eh
		db 0
		dd offset off_13684
		db 3Dh,	8Fh, 1Fh
		db 2 dup(0)
		dd offset loc_2812
		dd offset off_19F30
		dw 8001h
		dd 454B04h, 1FB53500h
		db 2 dup(0)
		dd offset off_136C3
		dw 0A935h
		db 1Fh,	2 dup(0)
		dd offset off_13702
		db 38h
		dd offset off_19F60
		dd 1FC12Eh
		db 0
		dd offset off_1379A
		db 2 dup(0), 3Ah
		dd offset loc_287C
		dd offset loc_4568+3
		dd 74022Bh, 2B007302h, 2047402h, 22B0076h, 91030874h, 4E007DC8h
		dd offset loc_288C
		dd 74022Bh, 2B007302h, 2047402h, 77h
		db 37h
		dd offset off_19FB0
		dd offset loc_4640+2
		db 3Ch,	67h, 19h
		dd 91030000h, 852E7DDCh
		db 19h,	2 dup(0)
		dd offset off_13826
		db 3Ch
		dd offset loc_1991
		dd 7DB49103h, 19A72Eh
		db 0
		dd offset off_1387C
		db 3Dh,	8Fh, 1Fh
		db 2 dup(0)
		dd offset loc_28E4
		dd offset off_19FE8
		dw 9301h
		dd 45E304h, 1FB53500h
		db 2 dup(0)
		dd offset off_138A6
		dw 0A935h
		db 1Fh,	2 dup(0)
		dd offset off_138F0
		db 38h
		dd offset off_1A018
		dd 1FC12Eh
		db 0
		dd offset off_1399A
		db 2 dup(0), 2Ah
		dd offset loc_28DC
		dd offset loc_3B32
		dd offset loc_45F9
		dd 474022Bh, 7DB49103h
		db 0, 3Ah
		dd offset loc_2954
		dd offset loc_4618+1
		dw 22Bh
		dd 73020074h, 74022B00h, 760204h, 874022Bh, 7DC89103h
		db 0, 3Ah
		dd offset loc_2965
		dd offset loc_4630+1
		dw 22Bh
		dd 73020074h, 74022B00h, 770204h
		db 0, 4Eh
		dd offset loc_2988
		dw 22Bh
		dd 3050074h
		dd offset dword_4D24
		dd 703D0000h
		db 12h,	2 dup(0)
		dd offset loc_2995
		dd offset off_1A068
		db 1
		dd 46C20448h, 95350000h
		db 12h,	2 dup(0)
		dd offset off_13A32
		db 35h
		dd offset loc_1286+3
		dd offset off_13A66
		dd 12702Fh
		db 0
		dd offset loc_299D
		dd offset loc_29E7
		db 1, 38h, 4
		dd offset loc_468E+1
		dd 129535h
		db 0
		dd offset off_13AB3
		db 35h,	89h, 12h
		db 2 dup(0)
		dd offset off_13AC6
		dw 4300h
		dd offset loc_1F8E+1
		dd offset loc_2CD0
		dd offset off_1A090
		dd 35025801h, 1FB5h
		dd offset off_13AE5
		dd 1FA935h
		db 0
		dd offset off_13B0E
		db 38h
		dd offset off_1A0B0
		dw 0C12Eh
		db 1Fh,	2 dup(0)
		dd offset off_13B37
		align 4
		dd 633D0000h
		db 2Dh,	2 dup(0)
		dd offset loc_2A25
		dd offset off_1A0F0
		db 1
		dd 47390443h, 89350000h
		db 2Dh,	2 dup(0)
		dd offset off_13BC1
		db 35h
		dd offset loc_2D7C+1
		dd offset off_13C0B
		dd 11E83Dh
		db 0
		dd offset loc_2A25
		dd offset off_1A128
		db 1, 5Fh, 2
		dd offset loc_4704+2
		dd 11FF35h
		db 0
		dd offset off_13C0B
		align 2
		dw 8F43h
		db 1Fh,	2 dup(0)
		dd offset loc_2A2F
		dd offset off_1A140
		db 1
		dd 0B535025Fh
		db 1Fh,	2 dup(0)
		dd offset off_13C71
		db 35h
		dd offset loc_1FA8+1
		dd offset off_13CB0
		db 38h
		dd offset off_1A170
		db 2Eh,	0C1h, 1Fh
		db 2 dup(0)
		dd offset off_13CEF
		align 4
		dd 17C42F00h
		db 2 dup(0)
		dd offset loc_2A95
		dd offset loc_2A9C
		dw 6001h
		dd 476004h, 17DF3500h
		db 2 dup(0)
		dd offset off_13D7B
		dw 0EB35h
		db 17h,	2 dup(0)
		dd offset off_13D8F
		align 4
		dd 2D963Dh
		db 0
		dd offset loc_2ADC
		dd offset off_1A1C0
		db 1, 53h, 4
		dd offset loc_47AD+1
		dd 2DBC35h
		db 0
		dd offset off_13DBF
		db 35h,	0B0h, 2Dh
		db 2 dup(0)
		dd offset off_13DF1
		dw 0A3Dh
		db 12h,	2 dup(0)
		dd offset loc_2ADC
		dd offset off_1A1D8
		db 1
		dd 47A4028Ah, 21350000h
		db 12h,	2 dup(0)
		dd offset off_13DF1
		align 4
		db 26h
		dd offset loc_2AED
		dd offset loc_1FC9+4
		align 2
		dw 0F82Fh
		db 17h,	2 dup(0)
		dd offset loc_2B0D
		dd offset loc_2B1B
		db 1
		dd 47D50467h, 1F350000h
		db 18h,	2 dup(0)
		dd offset off_13E19
		db 35h
		dd offset loc_1811+2
		dd offset off_13E35
		dd 1F8F3D00h
		db 2 dup(0)
		dd offset loc_2B3D
		dd offset off_1A1F0
		dw 4E01h
		dd 480B04h, 1FB53500h
		db 2 dup(0)
		dd offset off_13E49
		dw 0A935h
		db 1Fh,	2 dup(0)
		dd offset off_13E88
		db 38h
		dd offset off_1A220
		dd 1FC12Eh
		db 0
		dd offset off_13EC7
		db 2 dup(0), 2Fh
		dd offset loc_14ED+2
		dd offset loc_2BA0	; jumptable 000027FC case 12
		dd offset loc_2BAA
		dd 32046C01h, 35000048h, 1516h
		dd offset off_13F53
		dd 150A35h
		db 0
		dd offset off_13F83
		align 2
		db 37h
		dd offset off_1A270
		dd offset loc_48B6+2
		db 2Eh
		dd offset loc_192E+2
		dd offset off_13F97
		dd 193C2Eh
		db 0
		dd offset off_13FB5
		db 3Dh,	8Fh, 1Fh
		db 2 dup(0)
		dd offset loc_2BD6
		dd offset off_1A2A0
		dw 7401h
		dd 488304h, 1FB53500h
		db 2 dup(0)
		dd offset off_14000
		dw 0A935h
		db 1Fh,	2 dup(0)
		dd offset off_1403F
		db 38h
		dd offset off_1A2D0
		dd 1FC12Eh
		db 0
		dd offset off_140D8
		db 2 dup(0), 3Ah
		dd offset loc_2C60
		dd offset loc_48A1+2
		dd 74022Bh, 2B007302h, 2047402h, 22B0076h, 91030874h, 4E007DC8h
		dd offset loc_2C71
		dd 74022Bh, 2B007302h, 2047402h, 75h
		db 2Ah
		dd offset loc_27D5
		dd offset loc_129E+4
		dd offset loc_48CD
		db 2Bh,	1, 52h
		dd 7DC89103h
		db 0, 2Ah
		dd offset unk_27F6
		dd offset dword_6CEC+0Fh
		dd offset loc_48F6+1
		dw 22Bh
		dd 3050074h
		dd offset off_4E54
		dd 474022Bh
		db 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dw 22Bh
		dd 0A030874h, 3A00049Bh
		dd offset loc_29FA
		dd offset loc_4912+4
		dd 74022Bh, 2B007302h, 2047402h, 22B0076h, 77020874h
		db 2 dup(0), 2Ah
		dd offset loc_2AB5
		dd offset loc_1FC9+4
off_9F33	dd offset loc_492F+2	; DATA XREF: .debug_loc:0000CEECo
		db 2Bh
		dd 91095101h, 22007600h, 1C01380Ah
		db 0, 3Ah
		dd offset loc_2AC8
		dd offset loc_494E+3
		dw 22Bh
		db 74h,	0
word_9F52	dw 7302h		; DATA XREF: .debug_loc:off_D28Bo
		dd 74022B00h, 760204h, 874022Bh, 7DC89103h
		db 0, 3Ah
		dd offset loc_2B00
		dd offset loc_4971
		dw 22Bh
		dd 73020074h, 74022B00h, 760204h, 874022Bh, 7DC89103h
		db 0, 3Ah
		dd offset loc_2B2F
		dd offset loc_4990+1
		dw 22Bh
		dd 73020074h, 74022B00h, 760204h, 874022Bh, 7DC89103h
		db 0, 26h
		dd offset _protobuf_c_message_init_generic
		dd offset dword_6C70+11h
		dw 4F00h
		db    1
aProtobuf_c_m_2	db 'protobuf_c_message_init_generic',0
		db 1, 30h, 8
		db 1
		dd offset _protobuf_c_message_init_generic
		dd offset unk_2EEE
		dd offset off_14176
		db 1, 31h, 4Ah
		db 2 dup(0), 46h
		dd offset aDesc		; "desc"
		db 1
		dd 0C820830h, 91020000h
		db 0, 46h
		dd offset aMessage	; "message"
		dw 3101h
		dd 0BD608h, 4910200h, 1006941h,	0A40833h
		db 2 dup(0)
		dd offset off_1420E
		db 37h
		dd offset off_1A320
		dd offset loc_4A21+6
		db 47h
		dd offset aField	; "field"
		dd 25083A01h
		db 2, 2	dup(0)
		dd offset off_1422D
		db 41h
		dd 1007664h, 0BDC083Bh
		db 2 dup(0)
		dd offset off_1424B
		dw 2600h
		dd offset unk_2EEE
		dd offset dword_6C70+11h
		db    0
		db 50h,	1, 70h
aRotobuf_c_me_0	db 'rotobuf_c_message_free_unpacked',0
		dd 1099701h
		dd offset _protobuf_c_message_free_unpacked
		dd offset unk_3187
		dd offset off_14269
		dd offset loc_4BEE+2
		db 46h
		dd offset aMessage	; "message"
		db 1, 97h, 9
		dd offset loc_BD4+2
		dd 3F009102h
		dd offset aAllocator	; "allocator"
		dd 0F0099801h
		db 4Bh,	2 dup(0)
		dd offset off_14303
		db 47h
		dd offset aDesc		; "desc"
		dd 82099A01h
		db 0Ch,	2 dup(0)
		dd offset off_14366
		db 41h
		dd 9B010066h, 0A409h
		db 0
		dd offset off_143A7
		db 37h
		dd offset off_1A338
		dd offset loc_4B3E+1
		dw 6E41h
		dd 9A40100h, 96h
		dd offset off_143F4
aAarr		db 'Aarr',0
		db 1, 0A5h, 9
		dd offset loc_225
		dd offset off_14449
		db 48h
		dd offset loc_30BC
		dd offset loc_30F0
		dd offset loc_4AE5+3
		db 41h,	69h, 0
		dd 0A409A801h
		db 3 dup(0)
		dd offset off_14467
		align 4
		db 48h
		dd offset loc_30F0
		dd offset loc_3124
		dd offset loc_4B04
		db 41h,	69h, 0
		dd 0A409AE01h
		db 3 dup(0)
		dd offset off_14486
		align 4
		db 48h
		dd offset loc_3124
		dd offset loc_3154
		dd offset loc_4B30+1
		db 41h,	69h, 0
		dd 0A409B401h
		db 3 dup(0)
		dd offset off_144A5
		db 33h
		dd offset loc_3143
		dd offset loc_4A2C+5
		dd 474022Bh, 7702h
		db 0, 4Eh
		dd offset loc_2FBE
		dw 22Bh
		dd 76020474h, 48000000h
		dd offset loc_303C
		dd offset loc_3057
		dd offset loc_4B5D
aAstr		db 'Astr',0
		db 1, 0BDh, 9
		dd offset loc_167+2
		dd offset off_144C4
		db 0, 48h
		dd offset loc_3057
		dd offset loc_3090
		dd offset loc_4B92
		db 47h
		dd offset aData		; "data"
		db 1
		dd 22509C3h
		db 2 dup(0)
		dd offset off_144D7
aAdefault_bd	db 'Adefault_bd',0
		dw 0C401h
		dd 188B09h
		db 0
		dd offset off_144EA
		align 2
		db 48h
		dd offset loc_3090
		dd offset loc_30BC
		dd offset loc_4BC0
		db 41h
		dd 1006D73h, 0BD609CCh
		db 2 dup(0)
		dd offset off_144FD
		db 33h
		dd offset loc_30B7
		dd offset loc_4A2C+5
		db 2Bh
		dd 2047402h, 77h
		db 26h
		dd offset loc_316B
		dd offset dword_6C70+11h
		db 33h
		dd offset unk_3187
		dd offset dword_6CEC+0Fh
		dw 22Bh
		dd 3050074h
		dd offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		dd 474022Bh
		db 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dw 22Bh
		db  74h	; t
		db 8, 3, 0Ah
		dd offset loc_99B+1
		db    6
		db 4, 60h, 5
		db    0
		align 2
aQparse_require	db 'Qparse_required_member',0
		db 1, 0C4h, 6
		dd 48E01h
		db 0
		dd offset _parse_required_member
		dd offset unk_354B
		dd offset off_14510
		db 1, 0ADh, 4Fh
		db 2 dup(0), 3Fh
		dd offset aScanned_member ; "scanned_member"
		db 1
		dd 4FAD06C4h
		db 2 dup(0)
		dd offset off_145AA
		db 3Fh
		dd offset aMember	; "member"
		db 1
		dd 22506C5h
		db 2 dup(0)
		dd offset off_146C5
		db 3Fh
		dd offset aAllocator	; "allocator"
		db 1
		dd 4BF006C6h
		db 2 dup(0)
		dd offset off_146FC
aKmaybe_clear	db 'Kmaybe_clear',0
		db 1
		dd 48E06C7h, 91020000h,	656C4100h, 0C901006Eh, 0A406h
		db 0
		dd offset off_147FE
		db 47h
		dd offset aData		; "data"
		dw 0CA01h
		dd 66606h
		db 0
		dd offset off_14977
		db 47h
		dd offset aWire_type	; "wire_type"
		dw 0CB01h
		dd 0FB506h
		db 0
		dd offset off_14A29
		db 2Fh,	8Ah, 1Eh
		db 2 dup(0)
		dd offset loc_31F0
		dd offset loc_323C
		dw 0FF01h
		dd 4CD706h, 1EB13500h
		db 2 dup(0)
		dd offset off_14ADE
		dw 0A535h
		db 1Eh,	2 dup(0)
		dd offset off_14B00
		db 30h
		dd offset loc_31F0
		dd offset loc_323C
		dd 1EBD2Eh
		db 0
		dd offset off_14B15
		db 2 dup(0), 48h
		dd offset loc_324D
		dd offset loc_32C8	; jumptable 000031BF case 15
		dd offset aMethod_indexSe+0Bh ;	"x < service->descriptor->n_methods"
aApmessage	db 'Apmessage',0
		dw 2901h
		dd 4FB307h
		db 0
		dd offset off_14B34
aAsubm		db 'Asubm',0
		db 1
		db '*',7,'÷',0Bh,0
		align 2
		dd offset off_14B47
aAdef_mess	db 'Adef_mess',0
		dd 94072B01h
		db 0Eh,	2 dup(0)
		dd offset off_14B66
		db 47h
		dd offset aPref_len	; "pref_len"
		dd 0A4072C01h
		db 3 dup(0)
		dd offset off_14B91
		db 2Ah
		dd offset loc_3289
		dd offset loc_4A2C+5
		dd offset aLibProtobufC_c+6 ; "otobuf-c.c"
		dd 74022Bh, 2B007702h, 3047402h, 5101F3h
		db 33h
		dd offset loc_32B7
		dd offset aErrorParsingTa+20h ;	"fset %u"
		db 2Bh,	2, 74h
		dd 0B8910708h, 76067Fh,	3700001Ch
		dd offset off_1A350
		dd offset aMessageDescrip+26h ;	"OBUF_C_MESSAGE_DESCRIPTOR_MAGIC"
		dd 646241h, 0B9071701h
		db 4Fh,	2 dup(0)
		dd offset off_14BA4
aAdef_bd	db 'Adef_bd',0
		db 1
		dd 188B0718h
		db 2 dup(0)
		dd offset off_14BC2
		db 47h
		dd offset aPref_len	; "pref_len"
		db 1
		dd 0A40719h
		db 2 dup(0)
		dd offset off_14BE7
		db 37h
		dd offset off_1A368
		dd offset aMessageDescrip+18h ;	">magic	== PROTOBUF_C_MESSAGE_DESCRIPTOR"...
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		dd 96071F01h
		db 3 dup(0)
		dd offset off_14C05
		db 3Ah
		dd offset loc_3524
		dd offset aMessageDescrip ; "((message)->descriptor)->magic == PROTO"...
		dd 474022Bh, 7302h
		db 33h
		dd offset loc_353F
		dd offset loc_1D1A+1
		db 2Bh,	1, 50h
		dd 2B007302h, 0A035201h, 71Fh
		db 4Eh
		dd offset loc_3305
		db 2Bh,	2, 74h
		dd 730204h
		db 0
byte_A401	db 0, 2Fh		; DATA XREF: .debug_info:00005D45o
					; .debug_info:00006199o ...
byte_A403	db 8Ah			; DATA XREF: .debug_info:0000832Co
byte_A404	db 1Eh,	0		; DATA XREF: .debug_info:0000A6C8o
byte_A406	db 0			; DATA XREF: .debug_info:00006921o
off_A407	dd offset loc_3340	; DATA XREF: .debug_info:0000A99Do
					; .debug_info:00006208o ...
		dd offset loc_338C
		db 1
		dd 4E2806DBh, 0B1350000h
		db 1Eh,	2 dup(0)
		dd offset off_14C35
		db 35h
off_A420	dd offset loc_1EA3+2	; DATA XREF: .debug_info:00005809o
		dd offset off_14C66
		db 30h
		dd offset loc_3340
		dd offset loc_338C
		db 2Eh,	0BDh, 1Eh
		db 2 dup(0)
		dd offset off_14C88
		align 4
		dd 16DF3Dh
		db 0
		dd offset loc_338C
		dd offset off_1A380
		db 1, 0DBh, 6
		dd offset off_4E40+2
		dd 16F832h, 3E2F0000h
		db 1Ah,	2 dup(0)
off_A45B	dd offset loc_33A9	; DATA XREF: .debug_info:0000C1D0o
		dd offset loc_33AB
		db 1
		dd 4E7306E2h, 5F350000h
		db 1Ah,	2 dup(0)
		dd offset off_14CA6
		db 30h
		dd offset loc_33A9
		dd offset loc_33AB
		dd 1A6B2Eh
		db 0
		dd offset off_14CB9
		db 2 dup(0), 3Dh
		dd offset sub_1701+2
		dd offset loc_33ED
		dd offset off_1A398
		dd 9106EE01h, 3500004Eh, 171Ch
		dd offset off_14CD8
		db 0, 37h
		dd offset off_1A3B0
		dd offset off_4F0C+0Ch
aApstr		db 'Apstr',0
		dd 49070601h
		db 2, 2	dup(0)
		dd offset off_14D00
		db 47h
		dd offset aPref_len	; "pref_len"
		dd 0A4070701h
		db 3 dup(0)
		dd offset off_14D1E
		db 48h
		dd offset loc_3438
		dd offset loc_345A
		dd offset off_4EC8+11h
aAdef		db 'Adef',0
		db 1, 0Ah, 7
		dd offset loc_225+2
		dd offset off_14D3C
		db 0, 38h
off_A4EE	dd offset off_1A3C8	; DATA XREF: .debug_info:000067ADo
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		db 1
		dd 96070Eh
		db 0
byte_A4FD	db 0			; DATA XREF: .debug_info:000060B8o
		dd offset off_14D50
		db 3Ah
		dd offset loc_34EF
		dd offset off_4EC8+37h
		db 2Bh
		dd 2047402h, 33000077h
		dd offset loc_350A
		dd offset loc_1D1A+1
		dd 250012Bh, 12B0077h, 0E0A0352h, 7, 1AAE3Dh
		db 0
		dd offset loc_3488	; jumptable 000031BF case 12
		dd offset off_1A3E0
		db 1, 0F9h, 6
		dd offset off_4F44+2
		dd 1AD632h, 1ACA3200h
		db 2 dup(0), 38h
		dd offset off_1A3F8
		db 2Eh
		dd offset loc_1AE2
		dd offset off_14D88
		dd 762F0000h
		db 1Ah,	2 dup(0)
		dd offset loc_34B4
		dd offset loc_34C0
		db 1
		dd 4F7706F5h, 97350000h
		db 1Ah,	2 dup(0)
		dd offset off_14D9C
		db 30h
		dd offset loc_34B4
		dd offset loc_34C0
		dd 1AA32Eh
		db 0
		dd offset off_14DBE
		db 2 dup(0), 2Ah
		dd offset loc_33C9
		dd offset loc_12D0+1
		dd offset aTmpPayload_len+5 ; "= payload_len"
		dd 450012Bh, 67FB891h
		db 0, 2Ah
		dd offset loc_33ED
		dd offset loc_12D0+1
		dd offset off_4F9C+7
		dw 12Bh
		dd 0B8910450h, 2600067Fh
		dd offset unk_354B
		dd offset dword_6C70+11h
		dd 0A7040600h, 6000010h, 0BD604h, 0A8040600h, 17000004h
aParse_tag_and_	db 'parse_tag_and_wiretype',0
		db 1
		dd 960105D9h, 1000000h,	5056h, 6E656C18h, 5D90100h, 96h
		db 19h
		dd offset aData		; "data"
		db 1, 0DAh, 5
		dd offset loc_665+1
		dd 67617418h, 74756F5Fh, 5DB0100h, 5056h, 72697718h, 70797465h
		dd 756F5F65h, 0DC010074h, 505C05h, 616D1A00h, 76725F78h
		dd 5DE0100h, 0A4h, 6761741Ah, 5DF0100h,	1EAh, 6968731Ah
		dd 1007466h, 0A405E0h, 721A0000h, 0E1010076h, 0A405h, 4060000h
		dd 1EAh, 0FB50406h, 69170000h, 725F746Eh, 65676E61h, 6F6F6C5Fh
		dd 70756Bh, 105B301h, 16Fh, 511803h, 5F6E1800h,	676E6172h
		dd 1007365h, 0A405B3h, 72180000h, 65676E61h, 0B4010073h
		dd 89C05h
		db 0, 19h
		dd offset aValue	; "value"
		dw 0B501h
		dd offset byte_16F05
		db 0, 1Eh
		dd offset aStart	; "start"
		dw 0B701h
		dd offset byte_A404+1
		dd 6E1A00h, 0A405B701h,	1C000000h, 50E9h, 64696D1Ah, 5BE0100h
		dd 0A4h, 656E1A1Dh, 74735F77h, 747261h,	0A405C501h, 0
		dd 731A1D00h, 74726174h, 69726F5Fh, 6E695F67h, 786564h
		dd 0A405CE01h, 1A000000h, 676E6172h, 69735F65h,	100657Ah
		dd 0A405CFh, 0
		db  17h
aScan_length_pr	db 'scan_length_prefixed_data',0
		db 1
		dd 0EA010605h, 3000001h, 51B4h,	6E656C18h, 6050100h, 96h
		db 19h
		dd offset aData		; "data"
		db 1, 5, 6
		dd offset loc_665+1
		dd 65727018h, 5F786966h, 5F6E656Ch, 74756Fh, 0B4060501h
		dd 1A000051h, 5F726468h, 78616Dh, 0A4060701h, 1A000000h
		dd 5F726468h, 6E656Ch, 0A4060801h, 1A000000h, 6C6176h
		dd 0EA060901h, 1A000001h, 0A010069h, 0A406h, 68731A00h
		dd 746669h, 0A4060B01h,	0
		db    6
		dd offset off_9601+3
		align 2
		dw 6317h
aOunt_packed_el	db 'ount_packed_elements',0
		db 1, 34h, 6
		dd 48E01h, 52160100h, 74180000h, 657079h, 79063401h, 18000004h
		dd 6E656Ch, 96063501h, 19000000h
		dd offset aData		; "data"
		dd 66063601h, 18000006h, 6E756F63h, 756F5F74h, 37010074h
		dd 51B406h, 70170000h, 65737261h, 6D656D5Fh, 726562h, 1080301h
		dd 48Eh, 528D01h
		db 0, 19h
		dd offset aScanned_member ; "scanned_member"
		dw 301h
		dd 4FAD08h
		db 0, 19h
		dd offset aMessage	; "message"
		dw 401h
		dd 0BD608h
		db 0, 19h
		dd offset aAllocator	; "allocator"
		dw 501h
		dd 4BF008h
		db 0, 1Eh
		dd offset aField	; "field"
		dw 701h
		dd 0BE308h
		db 0, 1Eh
		dd offset aMember	; "member"
		dw 801h
		dd 22508h, 751A1D00h, 6C656966h, 0B010064h, 0C8D08h
		db 0, 1Dh, 1Eh
		dd offset aDa__allocation ; "da__allocation_size"
		db 1
		dd 96080Fh, 0
		db    0
		db 17h,	70h, 61h
aRse_optional_m	db 'rse_optional_member',0
		dd 1073D01h, 48Eh, 52E201h
		db 0, 19h
		dd offset aScanned_member ; "scanned_member"
		dw 3D01h
		dd 4FAD07h
		db 0, 19h
		dd offset aMember	; "member"
		dw 3E01h
		dd 22507h
		db 0, 19h
		dd offset aMessage	; "message"
		dw 3F01h
		dd 0BD607h
		db 0, 19h
		dd offset aAllocator	; "allocator"
		dw 4001h
		db    7
		dd offset loc_4BEE+2
		align 2
		dw 7017h
aArse_packed_re	db 'arse_packed_repeated_member',0
		dd 1076C01h, 48Eh, 53F301h
		db 0, 19h
		dd offset aScanned_member ; "scanned_member"
		dw 6C01h
		dd 4FAD07h
		db 0, 19h
		dd offset aMember	; "member"
		dw 6D01h
		dd 22507h
		db 0, 19h
		dd offset aMessage	; "message"
		dw 6E01h
		dd 0BD607h
		db 0, 1Eh
		dd offset aField	; "field"
		dw 7001h
		dd 0BE307h, 5F701A00h, 7101006Eh, 51B407h, 69731A00h, 7201007Ah
		dd 9607h
		db 0, 1Eh
		dd offset aArray	; "array"
		dw 7301h
		dd 22507h, 74611A00h, 7740100h,	666h, 6D65721Ah, 7750100h
		dd 96h
		db 1Eh
		dd offset aCount	; "count"
		db 1, 76h, 7
		dd offset sub_96
		db  1Ah
		db 69h,	0, 1
		db  77h	; w
		dd offset off_A407
		align 2
		dw 6E1Fh
aO_unpacking_ne	db 'o_unpacking_needed',0
		db 1
		dd 0B61C07F3h, 1A000053h, 99010073h, 0A407h, 0C61C0000h
		dd 1A000053h, 0A8010073h, 0A407h, 0D61C0000h, 1A000053h
		dd 0B7010073h, 0A407h, 0E61C0000h, 1A000053h, 0C6010073h
		dd 0A407h, 1A1D0000h, 0D5010073h, 0A407h, 17000000h
aParse_repeated	db 'parse_repeated_member',0
		dw 4C01h
		dd 48E0107h, 78010000h,	19000054h
		dd offset aScanned_member ; "scanned_member"
		dd 0AD074C01h, 1900004Fh
		dd offset aMember	; "member"
		dd 25074D01h, 19000002h
		dd offset aMessage	; "message"
		dd 0D6074E01h, 1900000Bh
		dd offset aAllocator	; "allocator"
		dd 0F0074F01h, 1E00004Bh
		dd offset aField	; "field"
		dd 0E3075101h, 1A00000Bh, 6E5F70h, 0B4075201h, 1A000051h
		dd 7A6973h, 96075301h, 1E000000h
		dd offset aArray	; "array"
		db    1
		db 54h,	7, 69h
		db    1
		align 4
		db  52h	; R
		db 1, 70h, 72h
aOtobuf_c_messa	db 'otobuf_c_message_unpack',0
		dd 1087801h, 0BD6h
		dd offset _protobuf_c_message_unpack
		dd offset unk_473E
		dd offset off_14DD6
		dd 655901h
		db 0, 46h
		dd offset aDesc		; "desc"
		dw 7801h
		dd 0C8208h, 910200h
		db 3Fh
		dd offset aAllocator	; "allocator"
		db 1, 79h, 8
		dd offset loc_4BEE+2
		dd offset off_14E70
aKlen		db 'Klen',0
		db 1, 7Ah, 8
		dd offset sub_96
		dd 46089102h
		dd offset aData		; "data"
		dd 66087B01h, 2000006h,	72410C91h, 7D010076h, 0BD608h
		db 0
		dd offset off_14EC3
aArem		db 'Arem',0
		dw 7E01h
		dd offset off_9605+3
		db 0
		dd offset off_14F0A
		db 41h,	61h, 74h
		dd 87F0100h, 666h
		dd offset off_15018
aAlast_field	db 'Alast_field',0
		dd 0E3088001h
		db 0Bh,	2 dup(0)
		dd offset off_15189
aBfirst_member_	db 'Bfirst_member_slab',0
		dw 8101h
		dd 655908h, 8C910300h
aBscanned_membe	db '}Bscanned_member_slabs',0
		db 1
aZIe		db 'á',8,'ie',0
		align 2
		dw 9103h
aAwhich_slab	db '∞|Awhich_slab',0
		dw 8801h
		dd offset off_A407+1
		db 0
		dd offset off_152E6
aAin_slab_index	db 'Ain_slab_index',0
		dd 0A4088901h
		db 3 dup(0)
		dd offset off_153A6
aAn_unknown	db 'An_unknown',0
		dw 8A01h
		dd offset off_9605+3
		db 0
		dd offset off_1545C
		db 41h,	66h, 0
		dd 0A4088B01h
		db 3 dup(0)
		dd offset off_154D4
aAi_slab	db 'Ai_slab',0
		db 1
		dd 0A4088Ch
		db 2 dup(0)
		dd offset off_15514
aAlast_field_in	db 'Alast_field_index',0
		dd 0A4088D01h
		db 3 dup(0)
		dd offset off_15535
aBrequired_fiel	db 'Brequired_fields_bitmap',0
		db 1
aOYe		db 'é',8,'ye',0
		align 2
		dw 9102h
aLserror_cleanu	db 'LSerror_cleanup_during_scan',0
		db 1, 8Ah, 9
		dd offset loc_38B4
aSerror_cleanup	db 'Serror_cleanup',0
		dw 8001h
		db 9
		dd offset loc_413F
		db 37h
		dd offset off_1A418
		dd offset off_568C+3
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		db 1
		dd 96089Ch
		db 2 dup(0)
		dd offset off_155A9
		db 3Ah
		dd offset loc_3C4A
		dd offset aCWorkspacePidg+39h ;	"rotocols\\\\gg"
		db 2Bh
		dd 2047402h, 33000073h
		dd offset loc_3C62
		dd offset loc_1D1A+1
		dd 250012Bh, 12B0073h, 9C0A0352h, 2F000008h, 19D5h
		dd offset loc_35F5
		dd offset loc_35FE
		dd 0C508A501h, 35000056h, 1A04h
		dd offset off_155C7
		dd 19F835h
		db 0
		dd offset off_155DC
		db 4Eh
		dd offset loc_35FE
		dw 22Bh
		dd 91040074h, 67BF8h
		db 0, 37h
		dd offset off_1A430
		dd offset dword_5BF8+42h
aAtag		db 'Atag',0             ; DATA XREF: .debug_loc:00015825o
					; .debug_loc:00015835o	...
		db 1
		dd 1EA08ABh
		db 2 dup(0)
		dd offset off_155EF
byte_ACF2	db 47h			; DATA XREF: .debug_loc:0001577Do
					; .debug_loc:0001578Do	...
		dd offset aWire_type	; "wire_type"
		db 1
		dd 0FB508ACh
		db 2 dup(0)
		dd offset off_15686
aBused		db 'Bused',0
		dd 9608AD01h, 2000000h
		db 74h,	38h, 47h
		dd offset aField	; "field"
		db 1
aOU		db 'Æ',8,'„',0Bh,0
		align 2
		dd offset off_15733
aBtmp		db 'Btmp',0
		db 1
		dd 10A708AFh, 91030000h, 0BF3D7C9Ch
		db 4Fh,	2 dup(0)
		dd offset loc_363A
		dd offset off_1A488
		db 1
aNBw		db '≠',8,'ÅW',0
		align 2
		dw 0C35h
		db 50h,	2 dup(0)
		dd offset off_15772
		db 35h
		dd offset off_4FD4+28h
		dd offset off_1581A
		dd 4FF035h
		db 0
		dd offset off_158C2
		db 35h,	0E4h, 4Fh
		db 2 dup(0)
		dd offset off_1594C
		db 38h
		dd offset off_1A4B8
		db 2Eh
		dd offset off_5018+9
		dd offset off_159D6
		dd 50302Eh
		db 0
		dd offset off_15B28
		db 2Eh,	3Ch, 50h
		db 2 dup(0)
		dd offset off_15BEB
		dw 4A2Eh
		db 50h,	2 dup(0)
		dd offset off_15C44
		align 4
		db 0, 37h
		dd offset off_1A4F0
		dd offset byte_5827
aBfield_index	db 'Bfield_index',0
		db 1
		dd 16F08BBh, 52010000h,	506243h
		db 0
		dd offset loc_369C
		dd offset off_1A510
		db 1, 0BBh, 8
		dd 50A135h
		db 0
		dd offset off_15C86
		db 35h,	92h, 50h
		db 2 dup(0)
		dd offset off_15CC2
		dw 8135h
		db 50h,	2 dup(0)
		dd offset off_15D0B
		db 38h
		dd offset off_1A530
		dd 50AD2Eh
		db 0
		dd offset off_15D5E
		db 2Eh,	0B9h, 50h
		db 2 dup(0)
		dd offset off_15D9D
		db 37h
		dd offset off_1A550
		dd offset unk_5808
		db 2Eh
		dd offset off_5094+34h
		dd offset off_15DD1
		db 30h
		dd offset loc_37FE
		dd offset loc_3804
		db 2Eh,	0D5h, 50h
		db 2 dup(0)
		dd offset off_15E09
		align 4
		db 30h
		dd offset loc_36CE
		dd offset loc_36FC
		db 2Eh,	0EAh, 50h
		db 2 dup(0)
		dd offset off_15E1C
		dw 32Eh
		db 51h,	2 dup(0)
		dd offset off_15E2F
		align 4
		dd 37000000h
		dd offset off_1A570
		dd offset aOtobuf_c_label+13h ;	"IRED"
aAmax_len	db 'Amax_len',0
		db 1, 0DAh, 8
		dd offset loc_A4
		dd offset off_15E5F
		dd 1006941h, 0A408DBh
		db 2 dup(0)
		dd offset off_15E74
		db 2Ah
		dd offset loc_37D6
		dd offset off_6D69+3
		dd offset aOtobuf_c_label+2 ; "OBUF_C_LABEL_REQUIRED"
		db 2Bh
		dd 5007402h
		db 3
		dd offset aUnterminatedVa ; "unterminated varint at offset %u"
		db 2Bh,	2, 74h
		dd 750704h, 67C8091h
		db 1Ch,	0, 33h
		dd offset loc_37E2
		dd offset dword_6D80+9
		db 2Bh
		dd 1007402h, 3700003Ah
		dd offset off_1A598
		dd offset aOtobuf_c_type_+5 ; "F_C_TYPE_SFIXED32"
aAsize		db 'Asize',0
		dw 0D01h
		dd offset off_9609
		db 0
		dd offset off_15EA9
		db 37h
		dd offset off_1A5C0
		dd offset off_58E0+3
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		db 1
		dd 96091Ah
		db 2 dup(0)
		dd offset off_15ED2
		db 3Ah
		dd offset loc_3CBB
		dd offset aRotobufclabel+3 ; "obufCLabel"
		db 2Bh
		dd 2047402h, 33000077h
		dd offset loc_4308
		dd offset loc_1D1A+1
		dd 250012Bh, 12B0077h, 1A0A0352h, 3A000009h
		dd offset loc_3AC1
		dd offset aProtobuf_c_typ+0Fh ;	"_INT32"
		dd 474022Bh, 7702h
		db 2Ah
		dd offset loc_41CE
		dd offset off_6D69+3
		dd offset aProtobuf_c_t_0+0Fh ;	"_SINT32"
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aTooManyFields ; "too	many fields"
		align 10h
		db 33h
		dd offset loc_41DA
		dd offset dword_6D80+9
		db 2Bh,	2, 74h
		dd 3A0100h
		db 0, 37h
		dd offset off_1A5D8
		dd offset aRotobuf_c_type+0Dh ;	"E_FLOAT"
byte_AF3A	db 47h			; DATA XREF: .debug_loc:00015F19o
					; .debug_loc:00015F29o	...
		dd offset aPref_len	; "pref_len"
		db 1
		dd 9608F3h
		db 2 dup(0)
		dd offset off_15EF0
		dw 1843h
		db 51h,	2 dup(0)
		dd offset loc_3AF4
		dd offset off_1A608
		db 1
		dd 583508F4h
		db 51h,	2 dup(0)
		dd offset off_15F0E
		db 35h
		dd offset aDescMagicProto+20h ;	"AGE_DESCRIPTOR_MAGIC"
		dd offset off_15F66
		dd 514035h
		db 0
		dd offset off_15FA5
		db 38h
		dd offset off_1A638
		dw 6F2Eh
		db 51h,	2 dup(0)
		dd offset off_15FF9
		db 2Eh
		dd offset aUnterminatedVa+1Bh ;	"et %u"
		dd offset off_15EF0
		dd 518F2Eh
		db 0
		dd offset off_1600E
		db 2Eh,	9Bh, 51h
		db 2 dup(0)
		dd offset off_16059
		dw 0A52Eh
		db 51h,	2 dup(0)
		dd offset off_1608E
		db 2Ah
		dd offset loc_3B4E
		dd offset off_6D69+3
		dd offset aOtobuf_c_typ_1+13h ;	"32"
		dd 74022Bh
		db 5, 3
		dd offset aErrorParsingLe ; "error parsing length for length-prefixe"...
		dw 2A00h
		dd offset loc_3B5A
		dd offset dword_6D80+9
		dd offset aProtobuf_c_t_4+0Fh ;	"_UINT64"
		dd 74022Bh, 2A003A01h
		dd offset loc_3C78
		dd offset off_6D69+3
		dd offset aProtobuf_c_t_5+15h ;	"64"
		dd 74022Bh
		db 5, 3
		dd offset aDataTooShortAf ; "data too short after length-prefix	of %"...
		dw 22Bh
		dd 76020474h
		db 2 dup(0), 33h
		dd offset loc_3C84
		dd offset dword_6D80+9
		db 2Bh
		dd 1007402h, 3Ah
		db 0, 37h
		dd offset off_1A668
		dd offset unk_5B54
		dw 6E41h
		dd 9200100h, 51B4h
		dd offset off_160DB
		dd 1A112Fh
		db 0
		dd offset loc_3BAA
		dd offset loc_3BAD
		db 1, 22h, 9
		dd offset aProtobuf_c_t_6+12h ;	"OL"
		dd 1A3035h
		db 0
		dd offset off_1611A
		align 2
		db 38h
		dd offset off_1A698
byte_B03F	db 47h			; DATA XREF: .debug_loc:00016161o
					; .debug_loc:00016171o	...
		dd offset aCount	; "count"
		dd 96092401h
		db 3 dup(0)
		dd offset off_1612D
		db 3Dh
		dd offset aErrorParsingLe+6 ; "parsing length for length-prefixed data"
		dd offset loc_3BBF
		dd offset off_1A6C8
		dd 2A092501h, 3500005Bh, 5203h
		dd offset off_16156
		dd 51F735h
		db 0
		dd offset off_1619E
		db 35h,	0EBh, 51h
		db 2 dup(0)
		dd offset off_1621C
		dw 0DE35h
		db 51h,	2 dup(0)
		dd offset off_162A1
		db 2Fh
		dd offset loc_162B+1
		dd offset loc_3E00
		dd offset loc_3E0D
		dd 0A9065801h, 3500005Ah, 1657h
		dd offset off_162EB
		dd 164B32h
		db 0, 30h
		dd offset loc_3E00
		dd offset loc_3E0D
		dw 632Eh
		db 16h,	2 dup(0)
		dd offset off_162FE
		align 4
		db 0, 2Ah
		dd offset loc_3BD8
		dd offset off_6D69+3
		dd offset aProtobufcbinar+4 ; "obufCBinaryData"
		dw 22Bh
		dd 3050074h
		dd offset aBadProtobufCTy ; "bad protobuf-c type %u for	packed-repea"...
		db 0, 2Ah
		dd offset loc_3BE4
		dd offset dword_6D80+9
		dd offset dword_5AD4+1
		dw 22Bh
		dd 3A010074h
		db 0, 2Ah
		dd offset loc_426D
		dd offset off_6D69+3
		dd offset byte_5AED
		dw 22Bh
		dd 3050074h
		dd offset aLengthMustBeAM ; "length must be a multiple of 8 for	fixe"...
		db 0, 2Ah
		dd offset loc_4279
		dd offset dword_6D80+9
		dd offset byte_5B00+1
		dw 22Bh
		dd 3A010074h
		db 0, 2Ah
		dd offset loc_428A
		dd offset off_6D69+3
		dd offset aOtobufcintrang+5 ; "fCIntRange"
		dw 22Bh
		dd 3050074h
		dd offset aLengthMustBe_0 ; "length must be a multiple of 4 for	fixe"...
		db 0, 33h
		dd offset loc_4296
		dd offset dword_6D80+9
		dw 22Bh
		dd 3A010074h
		db 2 dup(0), 2Ah
		dd offset loc_3BF0
		dd offset off_6D69+3
		dd offset byte_5B41+1
		db 2Bh
		dd 5007402h
		db 3
		dd offset aCountingPacked ; "counting packed elements"
		align 2
		db 33h
		dd offset loc_3BFC
		dd offset dword_6D80+9
		db 2Bh
		dd 1007402h, 3Ah
		db 2Ah
		dd offset loc_38A8
		dd offset off_6D69+3
		dd offset aProtobufcalloc+5 ; "bufCAllocator"
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aErrorParsingTa ; "error parsing tag/wiretype	at offset %u"
		db 2Bh
		dd 9047402h, 67BE091h, 67C8091h
		db 1Ch,	0, 2Ah
		dd offset loc_38B4
		dd offset dword_6D80+9
		dd offset word_5B8E
		db 2Bh
		dd 1007402h
		db 3Ah,	0, 2Ah
		dd offset loc_397C
		dd offset off_6D69+3
		dd offset dword_5BA4+15h
		db 2Bh
		dd 5007402h
		db 3
		dd offset aUnsupportedTag ; "unsupported tag %u	at offset %u"
		db 2Bh,	2, 74h
		dd 730204h, 874022Bh, 91007507h, 1C067C80h
		db 0, 2Ah
		dd offset loc_3988
		dd offset dword_6D80+9
		dd offset dword_5BA4+29h
		dw 22Bh
		dd 3A010074h
		db 0, 2Ah
		dd offset loc_41B1
		dd offset off_6D69+3
		dd offset byte_5BF0+1
		dw 22Bh
		dd 3050074h
		dd offset aTooShortAfter3 ; "too short after 32bit wiretype at offse"...
		dd 474022Bh, 91007507h,	1C067C80h
		db 0, 2Ah
		dd offset loc_41BD
		dd offset dword_6D80+9
		dd offset dword_5BF8+0Dh
		dw 22Bh
		dd 3A010074h
		db 0, 2Ah
		dd offset loc_41F5
		dd offset off_6D69+3
		dd offset dword_5BF8+31h
		dw 22Bh
		dd 3050074h
		dd offset aTooShortAfter6 ; "too short after 64bit wiretype at offse"...
		dd 474022Bh, 91007507h,	1C067C80h
		db 0, 33h
		dd offset loc_4201
		dd offset dword_6D80+9
		dw 22Bh
		dd 3A010074h
		db 2 dup(0), 48h
		dd offset loc_38DC
		dd offset loc_391A
		dd offset dword_5BF8+5Eh
		db 41h
		dd 8E01006Ah, 0A409h
		db 0
		dd offset off_16311
		align 2
		db 37h
		dd offset off_1A6F8
		dd offset aRotobufcenumde+0Ch ;	"Descriptor"
		db 47h
		dd offset aField	; "field"
		dd 0E3093A01h
		db 0Bh,	2 dup(0)
		dd offset off_16330
		db 37h
		dd offset off_1A738
		dd offset word_5D32+1
aBsiz		db 'Bsiz',0
		db 1, 3Dh, 9
		dd offset sub_96
		dd 6E415601h, 7274705Fh, 93E0100h, 51B4h
		dd offset off_16429
		dd 13D23Dh
		db 0
		dd offset loc_3A60
		dd offset off_1A770
		db 1, 3Dh, 9
		dd offset aRotobufcenumva+0Eh ;	"lue"
		dd 13FD35h
		db 0
		dd offset off_16465
		align 2
		db 38h
		dd offset off_1A798
		db 41h
		dd 4101006Eh, 0A409h
		db 0
		dd offset off_164C2
		db 37h
		dd offset off_1A7B8
		dd offset dword_5D08+3
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		db 1
		dd 96094Bh
		db 2 dup(0)
		dd offset off_16509
		db 3Ah
		dd offset loc_3FD0
		dd offset aProtobufcenu_0+6 ; "ufCEnumValueIndex"
		db 2Bh
		dd 2047402h, 33000076h
		dd offset loc_3FE6
		dd offset loc_1D1A+1
		dd 250012Bh, 12B0076h, 4D0A0352h, 33000009h
		dd offset loc_432D
		dd offset dword_6CEC+0Fh
		dd 74022Bh
		db 5, 3
		dd offset aRvDescriptorNu ; "rv->descriptor != NULL"
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 9430A03h, 2A000000h
		dd offset loc_434A
		dd offset off_6D69+3
		dd offset word_5D4A+1
		dd 74022Bh
		db 5, 3
		dd offset aMessageSMissin ; "message '%s': missing required field '%"...
		dw 3300h
		dd offset loc_4356
		dd offset dword_6D80+9
		dd 74022Bh, 3A01h
		db 37h
		dd offset off_1A7D0
		dd offset unk_6464
aAmax		db 'Amax',0
		dw 6801h
		dd offset off_A407+2
		db 0
		dd offset off_16527
aAslab		db 'Aslab',0
		db 1
aINo		db 'i',9,'≠O',0
		align 2
		dd offset off_1657D
		dw 6A41h
		dd 96A0100h, 0A4h
		dd offset off_165DE
		dd 52163Dh
		db 0
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset off_1A820
		db 1, 6Dh, 9
		dd offset byte_643B
		dd 524935h
		db 0
		dd offset off_165FF
		db 35h,	3Dh, 52h
		db 2 dup(0)
		dd offset off_16662
		dw 3135h
		db 52h,	2 dup(0)
		dd offset off_166C5
		db 38h
		dd offset off_1A860
		dd 52552Eh
		db 0
		dd offset off_16727
		db 2Eh,	61h, 52h
		db 2 dup(0)
		dd offset off_16847
		dw 0F33Dh
		db 53h,	2 dup(0)
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset off_1A8A0
		db 1
		db '!',8,'¿^',0
		align 2
a5T		db '5;T',0
		db 0
		dd offset off_16978
		db 35h
		dd offset aBadPackedRep_2+17h ;	"lean value"
		dd offset off_1698D
		dd 542335h
		db 0
		dd offset off_169A2
		db 35h,	17h, 54h
		db 2 dup(0)
		dd offset off_169D6
		db 38h
		dd offset off_1A8B8
		db 2Eh
		dd offset aErrorParsingMe+0Dh ;	" member %s of %s"
		dd offset off_169E9
		dd 54532Eh
		db 0
		dd offset off_16A1F
		db 3Ch,	5Fh, 54h
		dd 50010000h, 546B2Eh
		db 0
		dd offset off_16A61
		db 3Dh,	0D2h, 13h
		db 2 dup(0)
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset off_1A8D0
		dw 5301h
		dd 5E9D07h, 13FD3500h
		db 2 dup(0)
		dd offset off_16A8A
		dw 0D249h
		db 13h,	2 dup(0)
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset loc_3A88
		db 1
		db 78h,	8, 30h
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset loc_3A88
		db 32h
		dd offset loc_13FC+1
		db 33h
		dd offset byte_3A86
		dd offset dword_6CEC+0Fh
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset off_4E54
		db 2Bh
		dd 5047402h
		db 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh,	2, 74h
		dd 6B0A0308h, 3
		db 0, 33h
		dd offset loc_423E
		dd offset loc_4BF6
		dw 12Bh
		dd 750250h, 451012Bh, 67BF491h,	74022Bh, 7BD09104h, 6
		dd 528D2Fh
		db 0
		dd offset loc_3F81
		dd offset loc_3FB9
		db 1, 1Bh, 8
		dd offset off_5F14+3
		dd 52D535h
		db 0
		dd offset off_16AA8
		db 35h,	0C9h, 52h
		db 2 dup(0)
		dd offset off_16ABD
		dw 0BD35h
		db 52h,	2 dup(0)
		dd offset off_16AD2
		db 35h
		dd offset aLengthMustBeAM+5 ; "h must be a multiple of 8 for fixed-len"...
		dd offset off_16AE5
		db 33h
		dd offset loc_3F93
		dd offset loc_4BF6
		db 2Bh,	1, 50h
		dd 2B007502h, 91045101h, 2B067BF4h, 1007402h, 2F000031h
		dd 1A11h
		dd offset loc_405D
		dd offset loc_4060
		dd 35081E01h, 3500005Fh, 1A30h
		dd offset off_16AF8
		dd 52E23D00h
		db 2 dup(0)
		dd offset loc_4069
		dd offset off_1A8F0
		dw 1F01h
		dd 63A708h, 53253500h
		db 2 dup(0)
		dd offset off_16B0B
		dw 1935h
		db 53h,	2 dup(0)
		dd offset off_16B3A
		db 35h
		dd offset aBadProtobufCTy+21h ;	"-repeated"
		dd offset off_16C1E
		db 38h
		dd offset off_1A910
		db 2Eh,	31h, 53h
		db 2 dup(0)
		dd offset off_16C47
		dw 3D2Eh
		db 53h,	2 dup(0)
		dd offset off_16CDD
		db 3Ch
		dd offset aMessageSMissin+19h ;	"uired field '%s'"
		dd 552E5001h
		db 53h,	2 dup(0)
		dd offset off_16DCF
		db 2Eh
		dd offset aBadPackedRep_1+5 ; "acked-repeated int32 value"
		dd offset off_16E95
		dd 536C2Eh
		db 0
		dd offset off_16EF0
		db 2Eh,	78h, 53h
		db 2 dup(0)
		dd offset off_1707C
		dw 842Eh
		db 53h,	2 dup(0)
		dd offset off_17148
		db 4Dh
		dd offset aBadPackedRep_3+12h ;	"d sint32 value"
		dd offset loc_444A
		dd 13D23Dh
		db 0
		dd offset loc_406C
		dd offset off_1A930
		db 1, 72h, 7
		dd offset dword_5FA8+2Eh
		dd 13FD35h
		db 0
		dd offset off_17167
		align 2
		db 37h
		dd offset off_1A948
		dd offset word_6082+1
		db 3Ch
		dd offset unk_53CB
		dd 6F2F5201h
		db 16h,	2 dup(0)
		dd offset loc_43BA
		dd offset loc_43C9
		db 1
		db '∑',7,' `',0
		align 2
		dw 9535h
		db 16h,	2 dup(0)
		dd offset off_17237
		db 35h
		dd offset loc_1689
		dd offset off_17255
		db 30h
		dd offset loc_43BA
		dd offset loc_43C9
		db 2Eh,	0A1h, 16h
		db 2 dup(0)
		dd offset off_1727E
		align 4
		dd 1E8A2Fh
		db 0
		dd offset loc_43CC
		dd offset loc_440F
		db 1, 0BDh, 7
		dd offset a_protobufcfiel+11h ;	"scriptor"
		dd 1EB135h
		db 0
		dd offset off_1729D
		db 35h,	0A5h, 1Eh
		db 2 dup(0)
		dd offset off_172B0
		db 30h
		dd offset loc_43CC
		dd offset loc_440F
		db 2Eh
		dd offset loc_1EBC+1
		dd offset off_172C3
		db 2 dup(0), 2Ah
		dd offset loc_4436
		dd offset off_6D69+3
		dd offset off_6071+1
		db 2Bh
		dd 5007402h
		db 3
		dd offset aBadPackedRepea ; "bad packed-repeated enum or uint32	valu"...
		align 2
		db 33h
		dd offset loc_4442
		dd offset dword_6D80+9
		db 2Bh
		dd 1007402h, 3700003Ah
		dd offset off_1A960
		dd offset off_612C+2
		dd 53DB3Ch, 2F570100h, 166Fh
		dd offset loc_4486
		dd offset loc_4499
		dd 0CD07C601h, 35000060h, 1695h
		dd offset off_172D6
		dd 168935h
		db 0
		dd offset off_172F4
		db 30h
		dd offset loc_4486
		dd offset loc_4499
		dw 0A12Eh
		db 16h,	2 dup(0)
		dd offset off_1731F
		align 10h
		dd 17033D00h
		db 2 dup(0)
		dd offset loc_44A5
		dd offset off_1A978
		dw 0CC01h
		dd 60EB07h, 171C3500h
		db 2 dup(0)
		dd offset off_1733E
		dw 2A00h
		dd offset loc_44A5
		dd offset loc_12D0+1
		dd offset dword_60DC+29h
		dd 250012Bh, 12B0077h, 760252h
		db 0, 2Ah
		dd offset loc_4510
		dd offset off_6D69+3
		dd offset dword_60DC+41h
		dw 22Bh
		dd 3050074h
		dd offset aBadPackedRep_0 ; "bad packed-repeated sint64	value"
		db 0, 33h
		dd offset loc_451C
		dd offset dword_6D80+9
		dw 22Bh
		dd 3A010074h
		db 2 dup(0), 37h
		dd offset off_1A990
		dd offset unk_61BC
		db 3Ch
		dd offset aBadPackedRep_0+1Bh ;	"value"
		dd 2F287402h, 166Fh
		dd offset loc_453B
		dd offset loc_454E
		dd 7907D501h, 35000061h, 1695h
		dd offset off_17366
		dd 168935h
		db 0
		dd offset off_17384
		db 30h
		dd offset loc_453B
		dd offset loc_454E
		dw 0A12Eh
		db 16h,	2 dup(0)
		dd offset off_173AD
		align 4
		db 0, 2Ah
		dd offset loc_4568
		dd offset loc_12D0+1
		dd offset aUnknown_fields+0Bh ;	"lds"
		dw 12Bh
		dd 770250h, 252012Bh, 2A000076h
		dd offset loc_472D
		dd offset off_6D69+3
		dd offset aKnown_fields+7 ; "ields"
		dd 74022Bh
		db 5, 3
		dd offset aBadPackedRep_4 ; "bad packed-repeated int64/uint64 value"
		dw 3300h
		dd offset loc_4739
		dd offset dword_6D80+9
		dd 74022Bh, 3A01h
		db 37h
		dd offset off_1A9A8
		dd offset dword_628C
		db 3Ch,	0ABh, 53h
		dd 52010000h, 166F2Fh
		db 0
		dd offset loc_45A9
		dd offset loc_45B8
		db 1, 99h, 7
		dd offset off_6204+2
		dd 169535h
		db 0
		dd offset off_173CC
		db 35h,	89h, 16h
		db 2 dup(0)
		dd offset off_173EA
		db 30h
		dd offset loc_45A9
		dd offset loc_45B8
		db 2Eh
		dd offset sub_16A0+1
		dd offset off_17413
		dd 0AC2F0000h
		db 16h,	2 dup(0)
		dd offset loc_45BB
		dd offset loc_45FE
		db 1
aQCb		db 'ü',7,'cb',0
		align 2
		dw 0D235h
		db 16h,	2 dup(0)
		dd offset off_17432
		db 35h
		dd offset unk_16C6
		dd offset off_17445
		dd 1E8A49h
		db 0
		dd offset loc_45BB
		dd offset loc_45FE
		db 1, 7Eh, 6
		dd 1EB135h
		db 0
		dd offset off_17432
		db 35h,	0A5h, 1Eh
		db 2 dup(0)
		dd offset off_17445
		db 30h
		dd offset loc_45BB
		dd offset loc_45FE
		db 2Eh
		dd offset loc_1EBC+1
		dd offset off_17458
		dd 2A000000h
		dd offset loc_461D
		dd offset off_6D69+3
		dd offset dword_6274+7
		dd 74022Bh
		db 5, 3
		dd offset aBadPackedRep_1 ; "bad packed-repeated int32 value"
		dw 3300h
		dd offset loc_4629
		dd offset dword_6D80+9
		dd 74022Bh, 3A01h
		db 37h
		dd offset off_1A9C0
		dd offset a_protobufcserv+0Fh ;	"ceDescriptor"
		db 3Ch,	0BBh, 53h
		dd 52010000h, 166F2Fh
		db 0
		dd offset loc_4690
		dd offset loc_469F
		db 1, 0A8h, 7
		dd offset aRotobufcmethod+0Ah ;	"thodDescriptor"
		dd 169535h
		db 0
		dd offset off_1746B
		db 35h,	89h, 16h
		db 2 dup(0)
		dd offset off_17489
		db 30h
		dd offset loc_4690
		dd offset loc_469F
		db 2Eh
		dd offset sub_16A0+1
		dd offset off_174B2
		dd 8A2F0000h
		db 1Eh,	2 dup(0)
		dd offset loc_46A2
		dd offset loc_46E5
		db 1
		dd 631007AEh, 0B1350000h
		db 1Eh,	2 dup(0)
		dd offset off_174D1
		db 35h
		dd offset loc_1EA3+2
		dd offset off_174EF
		db 30h
		dd offset loc_46A2
		dd offset loc_46E5
		db 2Eh,	0BDh, 1Eh
		db 2 dup(0)
		dd offset off_17502
		align 4
		dd 16DF3Dh
		db 0
		dd offset loc_46E5
		dd offset off_1A9D8
		db 1, 0AEh, 7
		dd offset aProtobufcservi+9 ; "ServiceDescriptor"
		dd 16F832h
		db 2 dup(0), 2Ah
		dd offset loc_4710
		dd offset off_6D69+3
		dd offset dword_633C+6
		db 2Bh
		dd 5007402h
		db 3
		dd offset aBadPackedRep_3 ; "bad packed-repeated sint32	value"
		align 2
		db 33h
		dd offset loc_471C
		dd offset dword_6D80+9
		db 2Bh
		dd 1007402h, 2A00003Ah
		dd offset unk_40C9
		dd offset dword_6CEC+0Fh
		dd offset off_637A+3
		dd 74022Bh
		db 5, 3
		dd offset off_4E54
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 7ED0A03h
		db 0, 2Ah
		dd offset loc_4665
		dd offset off_6D69+3
		dd offset dword_6394+1
		dw 22Bh
		dd 3050074h
		dd offset aBadPackedRep_2 ; "bad packed-repeated boolean value"
		db 0, 33h
		dd offset loc_4671
		dd offset dword_6D80+9
		dw 22Bh
		dd 3A010074h, 37000000h
		dd offset off_1A9F0
		dd offset aThod_indices_b+0Dh ;	"by_name"
		dd 526E2Eh
		db 0
		dd offset off_17520
		db 38h
		dd offset off_1AA10
		dw 7E2Eh
		db 52h,	2 dup(0)
		dd offset off_17549
		db 3Ah
		dd offset loc_42AB
		dd offset unk_63D8
		dd 474022Bh, 7602h
		db 33h
		dd offset loc_439F
		dd offset loc_1D1A+1
		db 2Bh,	1, 50h
		dd 2B007602h, 0A035201h, 80Fh
		db 0, 2Ah
		dd offset loc_3EE5
		dd offset loc_4BF6
		dd offset aProtobufcser_0+3 ; "tobufCService"
		dw 12Bh
		dd 750250h, 451012Bh, 67BF491h,	74022Bh, 33003101h
		dd offset loc_3F81
		dd offset dword_6CEC+0Fh
		dd 74022Bh
		db 5, 3
		dd offset off_4E54
		dw 22Bh
		dd 3050474h
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		dd 874022Bh, 8230A03h, 2A000000h
		dd offset loc_4133
		dd offset off_6D69+3
		dd offset word_6452+1
		dd 74022Bh
		db 5, 3
		dd offset aErrorParsingMe ; "error parsing member %s of	%s"
		dw 3300h
		dd offset loc_413F
		dd offset dword_6D80+9
		dd 74022Bh, 3A01h
		db 37h
		dd offset off_1AA30
		dd offset unk_64A6
		db 47h
		dd offset aDa__allocation ; "da__allocation_size"
		dw 6001h
		dd offset off_9609
		db 0
		dd offset off_17572
		db 3Ah
		dd offset loc_42DC
		dd offset off_648D+1
		dw 22Bh
		dd 73020474h
		db 2 dup(0), 33h
		dd offset loc_42F7
		dd offset loc_1D1A+1
		db 2Bh
		dd 73025001h, 52012B00h, 9620A03h
		db 2 dup(0), 37h
		dd offset off_1AA48
		dd offset word_64BE
		db 41h
		dd 7901006Ah, 0A409h
		db 0
		dd offset off_1759F
		align 2
		db 48h
		dd offset loc_415E
		dd offset loc_419B
		dd offset off_64D9+1
		db 41h
		dd 8401006Ah, 0A409h
		db 0
		dd offset off_175BE
		align 2
		db 3Ah
		dd offset loc_38D1
		dd offset off_64EC+1
		db 2Bh
		dd 4047402h, 67BF891h
		db 0, 2Ah
		dd offset loc_3CEF
		dd offset loc_4998+3
		dd offset aOtobuf_c_wire_+3 ; "BUF_C_WIRE_TYPE_VARINT"
		dw 22Bh
		dd 73020074h, 74022B00h, 0F8910404h, 2A00067Bh
		dd offset loc_4153
		dd offset loc_4A2C+5
		dd offset aProtobuf_c_wir+5 ; "BUF_C_WIRE_TYPE_64BIT"
		dd 74022Bh, 7BF89104h, 74022B06h, 730204h
		db 0, 26h
		dd offset loc_436D
		dd offset dword_6C70+11h
		db 33h
		dd offset loc_4393
		dd offset dword_6CEC+0Fh
		db 2Bh
		dd 5007402h
		db 3
		dd offset aDescMagicProto ; "(desc)->magic == PROTOBUF_C_MESSAGE_DES"...
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 8910Ah, 10A72000h,	65690000h, 19210000h, 0F000002h
		dd 4FAD2000h, 65790000h, 19210000h, 16000002h, 1CA2000h
		dd 65890000h, 19210000h, 0F000002h, 19D52C00h
		db 2 dup(0)
		dd offset _protobuf_c_message_init
		dd offset _protobuf_c_service_generated_init
		dd offset off_175DD
		dd offset aProtobuf_c_w_2+0Ch ;	"IRE_TYPE_32BIT"
		dw 0F82Dh
		dd 2000019h, 42D0091h, 200001Ah
		db 91h,	4, 26h
		dd offset _protobuf_c_service_generated_init
		dd offset dword_6C70+11h
		align 4
		db  4Fh	; O
		db 1, 70h, 72h
aOtobuf_c_ser_0	db 'otobuf_c_service_generated_init',0
		dd 10A0301h
		dd offset _protobuf_c_service_generated_init
		dd offset unk_47E5
		dd offset off_17615
		dd 665601h
		db 0, 46h
		dd offset aService	; "service"
		dw 301h
		dd 0ECA0Ah, 910200h
		db 46h
		dd offset aDescriptor	; "descriptor"
		db 1, 4, 0Ah
		dd offset loc_E9F
		dd 4B049102h, 74736564h, 796F72h, 690A0501h, 2000010h
		db 91h,	8, 2Ah
		dd offset loc_47E0
		dd offset dword_6CEC+0Fh
		dd offset dword_661C+30h
		db 2Bh
		dd 5007402h
		db 3
		dd offset aDescriptorMagi ; "(descriptor)->magic == PROTOBUF_C_SERVI"...
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aLibProtobufC_c ; "lib/protobuf-c.c"
		db 2Bh
		dd 3087402h, 0A070Ah
		db 26h
		dd offset unk_47E5
		dd offset dword_6C70+11h
		align 2
		dw 150h
aProtobuf_c_ser	db 'protobuf_c_service_destroy',0
		db 1
		db 0Eh,	0Ah, 1
		dd offset _protobuf_c_service_destroy
		dd offset _protobuf_c_enum_descriptor_get_value_by_name
		dd offset off_17665
		dd offset aLongUnsignedIn ; "long unsigned int"
		db 46h
		dd offset aService	; "service"
		dd 0CA0A0E01h, 200000Eh
		db 91h,	0, 26h
		dd offset _protobuf_c_enum_descriptor_get_value_by_name
		dd offset dword_6C70+11h
		align 4
		db  45h	; E
		db 1, 70h, 72h
aOtobuf_c_enum_	db 'otobuf_c_enum_descriptor_get_value_by_name',0
		db 1
		dd 86010A15h
		db 8, 2	dup(0)
		dd offset _protobuf_c_enum_descriptor_get_value_by_name
		dd offset unk_4917
		dd offset off_1769D
		db 1
		dd offset off_6780+1
		db 46h
		dd offset aDesc		; "desc"
		db 1, 16h, 0Ah
		dd offset off_6780+1
		dd 46009102h
		dd offset aName		; "name"
		dd 270A1701h, 2000002h
		db 91h,	4, 47h
		dd offset aStart	; "start"
		db 1
		dd 0A40A19h
		db 2 dup(0)
		dd offset off_17737
		db 47h
		dd offset aCount	; "count"
		db 1
		dd 0A40A19h
		db 2 dup(0)
		dd offset off_17779
		db 37h
		dd offset off_1AA60
		dd offset aEnerichandler+0Dh ; ""
aAmid		db 'Amid',0
		dd 0A40A1C01h
		db 3 dup(0)
		dd offset off_177CE
		db 41h
		dd 1007672h, 16F0A1Dh
		db 2 dup(0)
		dd offset off_177F7
		db 33h
		dd offset loc_487D
		dd offset dword_6D80+37h
		db 2Bh
		dd 3047402h, 64891h
		db 0, 2Ah
		dd offset loc_48AF
		dd offset dword_6D80+37h
		dd offset byte_6775+2
		dw 22Bh
		dd 91030474h, 26000648h
		dd offset unk_4917
		dd offset dword_6C70+11h
		db    0
		db 6, 4, 87h
		db  67h	; g
		db 2 dup(0), 8
		dd offset loc_738+2
		db  45h	; E
		db 1, 70h, 72h
aOtobuf_c_enu_0	db 'otobuf_c_enum_descriptor_get_value',0
		db 1
		dd 86010A2Fh
		db 8, 2	dup(0)
		dd offset _protobuf_c_enum_descriptor_get_value
		dd offset unk_49F7
		dd offset off_17820
		db 1
		dd offset dword_6878+13h
		db 46h
		dd offset aDesc		; "desc"
		db 1, 30h, 0Ah
		dd offset off_6780+1
		dd 46009102h
		dd offset aValue	; "value"
		dd 6F0A3101h, 2000001h,	72420491h, 33010076h, 16F0Ah, 3D550100h
		dd 5062h
		dd offset loc_4941
		dd offset off_1AA80
		dd 810A3301h, 35000068h, 50A1h
		dd offset off_178BA
		dd 509235h
		db 0
		dd offset off_178D9
		db 35h,	81h, 50h
		db 2 dup(0)
		dd offset off_17906
		db 38h
		dd offset off_1AA98
		db 2Eh
		dd offset off_5094+19h
		dd offset off_17928
		dd 50B92Eh
		db 0
		dd offset off_17967
		db 37h
		dd offset off_1AAB0
		dd offset dword_6860+3
		dw 0C82Eh
		db 50h,	2 dup(0)
		dd offset off_17990
		db 30h
		dd offset loc_49CE
		dd offset loc_49D4
		dd 50D52Eh
		db 0
		dd offset off_179C8
		db 2 dup(0), 30h
		dd offset loc_496E
		dd offset loc_4994
		dd 50EA2Eh
		db 0
		dd offset off_179DB
		db 2Eh,	3, 51h
		db 2 dup(0)
		dd offset off_179EE
		align 4
		db 0, 26h
		dd offset unk_49F7
		dd offset dword_6C70+11h
		dw 4500h
		db    1
aProtobuf_c_m_3	db 'protobuf_c_message_descriptor_get_field_by_name',0
		db 1, 3Ah, 0Ah
		dd 0BE301h
		db 0
		dd offset _protobuf_c_message_descriptor_get_field_by_name
		dd offset unk_4B0D
		dd offset off_17A1E
		db 1, 7Fh, 69h
		db 2 dup(0), 46h
		dd offset aDesc		; "desc"
		db 1
		dd 0C820A3Bh, 91020000h
		db 0, 46h
		dd offset aName		; "name"
		dw 3C01h
		dd 2270Ah, 4910200h
		db 47h
		dd offset aStart	; "start"
		db 1, 3Eh, 0Ah
		dd offset loc_A4
		dd offset off_17AB8
		db 47h
		dd offset aCount	; "count"
		db 1, 3Eh, 0Ah
		dd offset loc_A4
		dd offset off_17AFA
		db 47h
		dd offset aField	; "field"
		db 1, 3Fh, 0Ah
		dd offset loc_BDF+4
		dd offset off_17B5C
		db 37h
		dd offset off_1AAD0
		dd offset aOtobuf_c_servi+1Fh ;	"l"
aAmid_0		db 'Amid',0
		dw 4201h
		dd offset off_A407+3
		db 0
		dd offset off_17B90
		db 41h,	72h, 76h
		dd 0A430100h, 16Fh
		dd offset off_17BB9
		db 33h
		dd offset loc_4A74
		dd offset dword_6D80+37h
		db 2Bh,	2, 74h
		dd 48910304h, 2A000006h
		dd offset loc_4ABE
		dd offset dword_6D80+37h
		dd offset unk_6975
		dd 474022Bh, 6489103h
		db 0, 26h
		dd offset unk_4B0D
		dd offset dword_6C70+11h
		dw 4500h
		db    1
aProtobuf_c_m_4	db 'protobuf_c_message_descriptor_get_field',0
		db 1, 59h, 0Ah
		dd 0BE301h
		db 0
		dd offset _protobuf_c_message_descriptor_get_field
		dd offset unk_4BF3
		dd offset off_17BE2
		db 1, 80h, 6Ah
		db 2 dup(0), 46h
		dd offset aDesc		; "desc"
		db 1
		dd 0C820A5Ah, 91020000h
		db 0, 46h
		dd offset aValue	; "value"
		dw 5B01h
		dd offset off_A407+3
		dd 4910200h, 767242h, 6F0A5D01h, 1000001h, 50623D55h
		db 2 dup(0)
		dd offset loc_4B3C
		dd offset off_1AAE8
		dw 5D01h
		dd 6A760Ah, 50A12D00h, 91020000h, 50923504h
		db 2 dup(0)
		dd offset off_17C7C
		dw 8135h
		db 50h,	2 dup(0)
		dd offset off_17CA9
		db 38h
		dd offset off_1AB00
		dd 50AD2Eh
		db 0
		dd offset off_17CCB
		db 2Eh,	0B9h, 50h
		db 2 dup(0)
		dd offset off_17CFF
		db 37h
		dd offset off_1AB18
		dd offset dword_6A58
		db 2Eh
		dd offset off_5094+34h
		dd offset off_17D28
		db 30h
		dd offset loc_4BCA
		dd offset loc_4BD0
		db 2Eh,	0D5h, 50h
		db 2 dup(0)
		dd offset off_17D60
		align 4
		db 30h
		dd offset loc_4B6A
		dd offset loc_4B90
		db 2Eh,	0EAh, 50h
		db 2 dup(0)
		dd offset off_17D73
		dw 32Eh
		db 51h,	2 dup(0)
		dd offset off_17D86
		align 4
		db 2 dup(0), 26h
		dd offset unk_4BF3
		dd offset dword_6C70+11h
		align 4
		db  45h	; E
		db 1, 70h, 72h
aOtobuf_c_ser_1	db 'otobuf_c_service_descriptor_get_method_by_name',0
		db 1
		dd 0F0010A66h
		db 0Dh,	2 dup(0)
		dd offset _protobuf_c_service_descriptor_get_method_by_name
		dd offset unk_4CFD
		dd offset off_17DB6
		db 1
		dd offset byte_6B90
		db 46h
		dd offset aDesc		; "desc"
		db 1, 67h, 0Ah
		dd offset loc_E9F
		dd 46009102h
		dd offset aName		; "name"
		dd 270A6801h, 2000002h
		db 91h,	4, 47h
		dd offset aStart	; "start"
		db 1
		dd 0A40A6Ah
		db 2 dup(0)
		dd offset off_17E50
		db 47h
		dd offset aCount	; "count"
		db 1
		dd 0A40A6Ah
		db 2 dup(0)
		dd offset off_17E92
		db 37h
		dd offset off_1AB38
		dd offset off_6B6D+3
aAmid_1		db 'Amid',0
		dd 0A40A6D01h
		db 3 dup(0)
		dd offset off_17EF4
aAmid_index	db 'Amid_index',0
		dw 6E01h
		dd offset off_A407+3
		db 0
		dd offset off_17F30
aAmid_name	db 'Amid_name',0
		db 1
		dd 2270A6Fh
		db 2 dup(0)
		dd offset off_17F49
		dw 7241h
		dd 70010076h, 16F0Ah
		db 0
		dd offset off_17F5D
		db 33h
		dd offset loc_4C65
		dd offset dword_6D80+37h
		dw 22Bh
		dd 91030474h, 648h
		db 2Ah
		dd offset loc_4CAB
		dd offset dword_6D80+37h
		dd offset off_6B85+1
		db 2Bh,	2, 74h
		dd 48910304h
		db 6, 0, 26h
		dd offset unk_4CFD
		dd offset dword_6C70+11h
		align 4
		dd offset dword_17620
		db    0
		dd offset off_6B98+3
		db 54h,	0, 55h
a_iob		db '_iob',0
		db 2, 9Ah, 90h
		db  6Bh	; k
		db 2 dup(0), 1
		db    1
aVprotobuf_c_ma	db 'Vprotobuf_c_major',0
		db 1
		dd offset off_A45B
		dd 3050100h
		dd offset _protobuf_c_major
aVprotobuf_c_mi	db 'Vprotobuf_c_minor',0
		dw 5C01h
		dd offset loc_A4
		db 1, 5, 3
		dd offset _protobuf_c_minor
aVprotobuf_c_de	db 'Vprotobuf_c_default_allocator',0
		db 1, 0B7h, 60h
		dd 1000005h
		db 5, 3
		dd offset _protobuf_c_default_allocator
aVprotobuf_c_sy	db 'Vprotobuf_c_system_allocator',0
		db 1
		dd 560C4h, 3050100h
		dd offset _protobuf_c_system_allocator
		db  57h	; W
		db 1, 56h, 70h
aRotobuf_c_out_	db 'rotobuf_c_out_of_memory',0
		dd 6C659F01h, 5010000h
		db 3
		dd offset _protobuf_c_out_of_memory
		db 6, 4, 3Ch
		dd 5800006Ch, 65726601h, 66060065h, 81010101h, 0A00006Ch
		dd 225h, 5F015900h, 6174735Fh, 635F6B63h, 665F6B68h, 6C6961h
		dd 5A010101h, 6C616D01h, 636F6Ch, 1016406h, 225h, 6CB301h
		dd 960A00h, 5B000000h, 625F5F01h, 746C6975h, 665F6E69h
		dd 74697277h, 70065h, 69727766h, 1006574h, 0A4h, 6CEE01h
		dd 0BDC0A00h, 0A40A0000h, 0A000000h, 0A4h, 2250Ah, 15C0000h
		dd 726F6261h, 67060074h, 5D010101h, 73615F01h, 74726573h
		dd 1260800h, 6D1D01h, 2270A00h,	270A0000h, 0A000002h, 16Fh
		dd 66015A00h, 6E697270h, 2006674h, 6F010125h, 1000001h
		dd 6D40h, 6D400Ah, 2270A00h, 5E0000h, 1760406h,	15F0000h
		dd 6D6D656Dh, 65766Fh, 25012709h, 1000002h, 6D6Ch, 2250Ah
		dd 0BDC0A00h, 960A0000h, 0
		db  5Ah	; Z
		db 1, 70h, 72h
aIntf		db 'intf',0
		db 2, 26h, 1
		dd offset byte_16F01
		db    0
		db 1, 89h, 6Dh
		db    0
		align 2
		dw 270Ah
		db    2
		db 2 dup(0), 5Eh
		db    0
		db 5Bh,	1, 5Fh
a_builtin_putch	db '_builtin_putchar',0
		db 7,0
aPutchar	db 'putchar',0
		dd offset byte_16F01
		align 10h
		dd 6DB701h, 16F0A00h, 60000000h, 72747301h, 706D63h, 6F012B09h
		dd 1000001h, 2270Ah, 2270A00h, 0
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 0C3E8h
dword_C3E8	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000561Ao
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 8030113h, 0B3A0B0Bh, 13010B3Bh, 0D050000h
		dd 3A080300h, 490B3B0Bh, 0A3813h, 0F0600h, 13490B0Bh, 0F070000h
		dd 0B0B00h, 260800h, 1349h, 27011509h, 13010Ch,	50A00h
		dd 1349h, 0B01040Bh, 3B0B3A0Bh,	13010Bh, 280C00h, 0D1C0803h
		dd 0D0D0000h, 3A0E0300h, 490B3B0Bh, 0A3813h, 1130E00h
		dd 0B0B0803h, 53B0B3Ah,	1301h, 3000D0Fh, 3B0B3A08h, 38134905h
		dd 1000000Ah, 0C270115h, 13011349h, 0D110000h, 3A0E0300h
		dd 49053B0Bh, 0A3813h, 261200h,	16130000h, 3A080300h, 49053B0Bh
		dd 14000013h, 0B0B0104h, 53B0B3Ah, 1301h, 3012E15h, 3B0B3A08h
		dd 490C270Bh, 10B2013h,	16000013h, 8030005h, 0B3B0B3Ah
		dd 1349h, 3012E17h, 3B0B3A08h, 490C2705h, 10B2013h, 18000013h
		dd 8030005h, 53B0B3Ah, 1349h, 3000519h,	3B0B3A0Eh, 134905h
		dd 341A00h, 0B3A0803h, 1349053Bh, 2E1B0000h, 30C3F01h
		dd 3B0B3A08h, 200C2705h, 13010Bh, 10B1C00h, 1301h, 10B1Dh
		dd 341E00h, 0B3A0E03h, 1349053Bh, 0A1F0000h, 3A080300h
		dd 53B0Bh, 1012000h, 13011349h,	21210000h, 2F134900h, 2200000Bh
		dd 803012Eh, 0B3B0B3Ah,	0B200C27h, 1301h, 3012E23h, 3B0B3A08h
		dd 110C270Bh, 40011201h, 0C429706h, 1301h, 3000524h, 3B0B3A0Eh
		dd 213490Bh, 2500000Ah,	18289h,	42950111h, 13310Ch, 82892600h
		dd 1110001h, 1331h, 3012E27h, 3B0B3A08h, 490C270Bh, 12011113h
		dd 96064001h, 13010C42h, 5280000h, 3A080300h, 490B3B0Bh
		dd 0A0213h, 342900h, 0B3A0803h,	13490B3Bh, 602h, 182892Ah
		dd 31011101h, 130113h, 828A2B00h, 0A020001h, 0A4291h, 12E2C00h
		dd 1111331h, 6400112h, 1301h, 3100052Dh, 0A0213h, 342E00h
		dd 6021331h, 1D2F0000h,	11133101h, 58011201h, 105590Bh
		dd 30000013h, 111010Bh,	112h, 31003431h, 32000013h, 13310005h
		dd 89330000h, 11010182h, 133101h, 12E3400h, 1111331h, 6400112h
		dd 10C4297h, 35000013h,	13310005h, 602h, 3F012E36h, 3A08030Ch
		dd 270B3B0Bh, 1201110Ch, 96064001h, 13010C42h, 0B370000h
		dd 1065501h, 38000013h,	655010Bh, 34390000h, 3A0E0300h
		dd 490B3B0Bh, 60213h, 82893A00h, 1110101h, 1301h, 182893Bh
		dd 95011101h, 13310C42h, 343C0000h, 2133100h, 3D00000Ah
		dd 1331011Dh, 6550152h,	5590B58h, 1301h, 3012E3Eh, 3B0B3A08h
		dd 490C2705h, 12011113h, 97064001h, 13010C42h, 53F0000h
		dd 3A0E0300h, 49053B0Bh, 60213h, 54000h, 0B3A0803h, 1349053Bh
		dd 602h, 3003441h, 3B0B3A08h, 2134905h,	42000006h, 8030034h
		dd 53B0B3Ah, 0A021349h,	1D430000h, 52133101h, 58065501h
		dd 5590Bh, 82894400h, 1110101h,	310C4295h, 130113h, 12E4500h
		dd 8030C3Fh, 53B0B3Ah, 13490C27h, 1120111h, 42970640h
		dd 13010Ch, 54600h, 0B3A0E03h, 1349053Bh, 0A02h, 3003447h
		dd 3B0B3A0Eh, 2134905h,	48000006h, 111010Bh, 13010112h
		dd 1D490000h, 11133101h, 58011201h, 5590Bh, 12E4A00h, 0B3A0803h
		dd 0C27053Bh, 13010B20h, 54B0000h, 3A080300h, 49053B0Bh
		dd 0A0213h, 828A4C00h, 13310001h, 0A4291h, 0A4D00h, 1111331h
		dd 894E0000h, 11010182h, 4F000001h, 0C3F012Eh, 0B3A0803h
		dd 0C27053Bh, 1120111h,	42970640h, 13010Ch, 12E5000h, 8030C3Fh
		dd 53B0B3Ah, 1110C27h, 6400112h, 1301h,	3012E51h, 3B0B3A08h
		dd 490C2705h, 12011113h, 96064001h, 13010C42h, 2E520000h
		dd 30C3F01h, 3B0B3A08h,	490C2705h, 12011113h, 96064001h
		dd 13010C42h, 0A530000h, 3A080300h, 11053B0Bh, 54000001h
		dd 21h,	3003455h, 3B0B3A08h, 3F13490Bh,	0C3C0Ch, 345600h
		dd 0B3A0803h, 13490B3Bh, 0A020C3Fh, 15570000h, 0C2700h
		dd 12E5800h, 8030C3Fh, 53B0B3Ah, 0C3C0C27h, 1301h, 3F002E59h
		dd 2708030Ch, 3C0C340Ch, 5A00000Ch, 0C3F012Eh, 0B3A0803h
		dd 0C27053Bh, 0C3C1349h, 1301h,	3F012E5Bh, 3A08030Ch, 870B3B0Bh
		dd 0C270840h, 0C3C1349h, 1301h,	3F002E5Ch, 3A08030Ch, 27053B0Bh
		dd 0C3C0Ch, 12E5D00h, 8030C3Fh,	0B3B0B3Ah, 0C3C0C27h, 1301h
		dd 185Eh, 12E5F00h, 8030C3Fh, 0B3B0B3Ah, 13490C27h, 13010C3Ch
		dd 2E600000h, 30C3F01h,	3B0B3A08h, 490C270Bh, 0C3C13h
		db 2 dup(0)
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 0C940h
dword_C940	dd 0			; DATA XREF: .debug_info:00007160o
		dd 3, 4740002h,	3, 2Ah,	20740002h, 2Ah,	30h, 4740002h
		dd 30h,	3Fh, 20740002h,	3Fh, 40h, 4740002h, 40h, 45h, 20740002h
		dd 2 dup(0)
off_C990	dd offset _system_alloc	; DATA XREF: .debug_info:000071B6o
		dd offset loc_4B
		dd 4740002h, 4Bh, 7Ah, 0C0740003h, 7A00h, 7C00h, 74000200h
		dd 7C04h, 9500h, 74000300h, 0C0h, 0
		db 2 dup(0)
off_C9CA	dd offset loc_67	; DATA XREF: .debug_info:000071E6o
		dd offset loc_6B
		dw 1
		dd offset off_804F+1
		dd offset off_88FD+3
		dd 50000100h, 2	dup(0)
off_C9E8	dd offset _protobuf_c_out_of_memory_default
					; DATA XREF: .debug_info:00007237o
		dd offset loc_9B
		dd 4740002h, 9Bh, 0D3h,	30740002h, 2 dup(0)
off_CA08	dd offset _protobuf_c_service_invoke_internal
					; DATA XREF: .debug_info:00005841o
					; .debug_info:0000727Bo
		dd offset loc_D5
		dd 4740002h, 0D5h, 0D6h, 8740002h, 0D6h, 0D7h, 0C740002h
		dd 0D7h, 0DAh, 10740002h, 0DAh,	124h, 30740002h, 124h
		dd 125h, 10740002h, 125h, 126h,	0C740002h, 126h, 127h
		dd 8740002h, 127h, 129h, 4740002h, 129h, 14Ah, 30740002h
		dd 2 dup(0)
off_CA88	dd offset loc_101	; DATA XREF: .debug_info:000072B0o
		dd offset loc_121
		dd 0C700003h, 1219Fh, 12900h, 91000600h, 0C230600h, 1459Fh
		dd 14900h, 70000300h, 1499F0Ch,	14A0000h, 60000h, 23060091h
		dd 9F0Ch, 0
		db 2 dup(0)
off_CACA	dd offset loc_101	; DATA XREF: .debug_info:000072B9o
		dd offset loc_121
		dw 9
		dd 24320072h, 23220070h, 1210Ch, 12800h, 72000A00h, 91243200h
		dd 23220600h, 1450Ch, 14900h, 72000900h, 70243200h, 0C232200h
		dd 2 dup(0)
off_CB0C	dd offset _alloc_failed_warning_constprop_14
					; DATA XREF: .debug_info:0000733Co
		dd offset loc_14F
		dd 4740002h, 14Fh, 192h, 0C0740003h, 19200h, 19300h, 74000200h
		dd 19304h, 19800h, 74000300h, 0C0h, 0
		db 2 dup(0)
off_CB46	dd offset _alloc_failed_warning_constprop_14
					; DATA XREF: .debug_info:0000734Ao
		dd offset loc_178
		dw 1
		dd offset off_17850
		dd offset off_18200
		dd 91000200h, 18248h, 19800h, 0F3000400h, 9F5001h, 0
		db 3 dup(0)
off_CB73	dd offset _alloc_failed_warning_constprop_14
					; DATA XREF: .debug_info:00007353o
		dd offset loc_17E+4
		db 1
		dd 1825200h, 1980000h, 40000h, 9F5201F3h, 2 dup(0)
off_CB94	dd offset _protobuf_c_buffer_simple_append
					; DATA XREF: .debug_info:000073CCo
		dd offset loc_199
		dd 4740002h, 199h, 19Ah, 8740002h, 19Ah, 19Bh, 0C740002h
		dd 19Bh, 19Ch, 10740002h, 19Ch,	19Fh, 14740002h, 19Fh
		dd 26Bh, 0D0740003h, 26B00h, 26C00h, 74000200h,	26C14h
		dd 26D00h, 74000200h, 26D10h, 26E00h, 74000200h, 26E0Ch
		dd 26F00h, 74000200h, 26F08h, 27000h, 74000200h, 27004h
		dd 29A00h, 74000300h, 29A00D0h,	29B0000h, 20000h, 29B1474h
		dd 29C0000h, 20000h, 29C1074h, 29D0000h, 20000h, 29D0C74h
		dd 29E0000h, 20000h, 29E0874h, 2A30000h, 20000h, 2A30474h
		dd 2A80000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_CC77	dd offset loc_1BE	; DATA XREF: .debug_info:0000740Bo
		dd offset locret_26F
		db 1
		dd 26F5500h, 2700000h, 20000h, 2700091h, 29E0000h, 10000h
		dd 29E55h, 2A300h, 91000200h, 2A300h, 2A800h, 55000100h
		dd 2 dup(0)
off_CCB8	dd offset loc_1C7	; DATA XREF: .debug_info:0000741Eo
		dd offset loc_1EE+5
		dd 46520001h, 4B000002h, 1000002h, 2795200h, 2820000h
		dd 10000h, 52h,	0
		db 0
off_CCE1	dd offset loc_1D0	; DATA XREF: .debug_info:0000743Eo
		dd offset unk_246
		db 1, 0, 53h
		dd offset loc_270
		dd offset loc_29B
		dd 9B530001h, 0A2000002h, 1000002h, 5000h, 0
		db 2 dup(0)
off_CD0A	dd offset loc_1F4	; DATA XREF: .debug_info:00007452o
		dd offset loc_22D+5
		dw 1
		dd 27050h, 27900h, 50000100h, 282h, 28Eh, 500001h, 0
		db 3 dup(0)
off_CD33	dd offset loc_279	; DATA XREF: .debug_info:00007466o
		dd offset unk_282
		db 1
		dd offset aBadProtobufCTy+14h ;	"%u for	packed-repeated"
		dd 0
		db 2 dup(0)
off_CD46	dd offset _parse_uint64	; DATA XREF: .debug_info:000074EAo
		dd offset loc_2A9
		dw 2
		dd 2A90474h, 2AA0000h, 20000h, 2AA0874h, 2AB0000h, 20000h
		dd 2AB0C74h, 2AC0000h, 20000h, 2AC1074h, 2AF0000h, 20000h
		dd 2AF1474h, 3340000h, 30000h, 3400C074h, 35000003h, 2000003h
		dd 35147400h, 36000003h, 2000003h, 36107400h, 37000003h
		dd 2000003h, 370C7400h,	38000003h, 2000003h, 38087400h
		dd 3C000003h, 2000003h,	3C047400h, 7A000003h, 3000003h
		dd 0C07400h, 2 dup(0)
off_CDE0	dd offset _parse_uint64	; DATA XREF: .debug_info:000074F8o
		dd offset loc_2BE
		dd 0BE500001h, 0EF000002h, 1000002h, 2EF5500h, 3390000h
		dd 40000h, 9F5001F3h, 339h, 375h, 75550001h, 7A000003h
		dd 4000003h, 5001F300h,	9Fh, 0
		db 0
off_CE25	dd offset _parse_uint64	; DATA XREF: .debug_info:00007501o
		dd offset loc_2CF
		db 1, 0, 52h
		dd offset loc_2CF
		dd offset loc_2F7
		dd 0F7510001h, 39000002h, 4000003h, 5201F300h, 3399Fh
		dd 34900h, 52000100h, 349h, 375h, 75510001h, 7A000003h
		dd 4000003h, 5201F300h,	9Fh, 0
		db 0
off_CE75	dd offset loc_2C3	; DATA XREF: .debug_info:00007534o
		dd offset loc_2CF
		db 1, 0, 52h
		dd offset loc_2CF
		dd offset loc_2F7
		dd 0F7510001h, 25000002h, 4000003h, 5201F300h, 9Fh, 0
		db 0
off_CEA1	dd offset loc_2C3	; DATA XREF: .debug_info:0000753Do
		dd offset loc_2EF
		db 1, 0, 55h
		dd offset loc_2EF
		dd offset loc_325
		dd 1F30004h, 9F50h, 0
		db 2 dup(0)
off_CEC2	dd offset loc_2EA	; DATA XREF: .debug_info:0000754Bo
		dd offset loc_2F7
		dw 2
		dd 3209F4Ch, 3250000h, 20000h, 4C91h, 0
		db 2 dup(0)
off_CEE2	dd offset loc_2EA	; DATA XREF: .debug_info:00007554o
		dd offset loc_2F7
		dw 2
		dd offset off_9F33+1
		dd 0
		db 2 dup(0)
off_CEF6	dd offset loc_2EA	; DATA XREF: .debug_info:0000755Do
		dd offset loc_319
		dw 6
		dd 52049350h, 31B0493h,	3250000h, 60000h, 52049350h, 493h
		dd 0
		db 2 dup(0)
off_CF1E	dd offset unk_339	; DATA XREF: .debug_info:0000757Co
		dd offset loc_349
		dw 1
		dd 34952h, 37500h, 51000100h, 2	dup(0)
off_CF3C	dd offset unk_339	; DATA XREF: .debug_info:00007585o
		dd offset loc_375
		dd 550001h, 0
		db 3 dup(0)
off_CF4F	dd offset loc_341	; DATA XREF: .debug_info:00007593o
		dd offset loc_375
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_CF62	dd offset _uint64_pack	; DATA XREF: .debug_info:000075FEo
		dd offset loc_37D
		dw 2
		dd 37D0474h, 3800000h, 20000h, 3800874h, 3E40000h, 20000h
		dd 3E42074h, 3E50000h, 20000h, 3E50874h, 3E80000h, 20000h
		dd 3E80474h, 4A90000h, 20000h, 2074h, 0
		db 2 dup(0)
off_CFB2	dd offset _uint64_pack	; DATA XREF: .debug_info:00007613o
		dd offset loc_3BF
		dw 6
		dd 52049350h, 3BF0493h,	4200000h, 60000h, 0F503F3h, 4209F7Ch
		dd 4270000h, 60000h, 52049350h,	4270493h, 4620000h, 60000h
		dd 0F503F3h, 4629F7Ch, 4690000h, 60000h, 52049350h, 4690493h
		dd 4A90000h, 60000h, 0F503F3h, 9F7Ch, 0
		db 2 dup(0)
off_D01A	dd offset _uint64_pack	; DATA XREF: .debug_info:00007623o
		dd offset loc_4A4+4
		dw 1
		dd 4A851h, 4A900h, 0F3000400h, 9F5101h,	0
		db 3 dup(0)
off_D03B	dd offset loc_38C	; DATA XREF: .debug_info:00007632o
		dd offset loc_3C7
		db 1
		dd 3E65200h, 4600000h, 10000h, 46252h, 46B00h, 52000100h
		dd 473h, 47Eh, 80520001h, 8A000004h, 1000004h, 48C5200h
		dd 4A20000h, 10000h, 52h, 0
		db 0
off_D085	dd offset loc_3FA	; DATA XREF: .debug_info:0000764Eo
		dd offset loc_408
		db 2, 0, 35h
		dd 4109Fh, 41B00h, 53000100h, 41Eh, 420h, 8C500001h, 98000004h
		dd 2000004h, 9F3500h, 0
		db 3 dup(0)
off_D0BB	dd offset loc_420	; DATA XREF: .debug_info:0000766Bo
		dd offset loc_48C
		db 1
		dd 4985100h, 4A40000h, 10000h, 51h, 0
		db 0
off_D0D9	dd offset loc_420	; DATA XREF: .debug_info:00007674o
		dd offset loc_427
		db 1, 0, 50h
		dd offset loc_427
		dd offset unk_462
		dd 62530001h, 69000004h, 1000004h, 4695000h, 48C0000h
		dd 10000h, 49853h, 4A400h, 53000100h, 2	dup(0)
off_D118	dd offset loc_420	; DATA XREF: .debug_info:00007682o
		dd offset loc_429
		dd 9F300002h, 429h, 438h, 9F310002h, 438h, 447h, 9F320002h
		dd 447h, 456h, 9F330002h, 456h,	462h, 9F340002h, 462h
		dd 46Bh, 9F300002h, 46Bh, 46Eh,	6E520001h, 73000004h, 1000004h
		dd 4735000h, 4800000h, 20000h, 4809F32h, 48C0000h, 20000h
		dd 4989F31h, 4A40000h, 20000h, 9F33h, 0
		db 2 dup(0)
off_D1A2	dd offset _tag_pack	; DATA XREF: .debug_info:0000769Fo
		dd offset loc_4AD
		dw 2
		dd 4AD0474h, 4B00000h, 20000h, 4B00874h, 4E10000h, 20000h
		dd 4E12074h, 4E20000h, 20000h, 4E20874h, 4E80000h, 20000h
		dd 4E80474h, 5480000h, 20000h, 5482074h, 5490000h, 20000h
		dd 5490874h, 54C0000h, 20000h, 54C0474h, 5810000h, 20000h
		dd 2074h, 0
		db 2 dup(0)
off_D216	dd offset _tag_pack	; DATA XREF: .debug_info:000076ADo
		dd offset loc_4DE
		dw 1
		dd 4DE50h, 4E700h, 0F3000400h, 0E79F5001h, 0EB000004h
		dd 1000004h, 4EB5000h, 5810000h, 40000h, 9F5001F3h, 2 dup(0)
off_D250	dd offset _tag_pack	; DATA XREF: .debug_info:000076B6o
		dd offset loc_4BE
		dd 0BE520001h, 0E6000004h, 1000004h, 4E65100h, 4E70000h
		dd 40000h, 9F5201F3h, 4E7h, 580h, 80510001h, 81000005h
		dd 4000005h
		db 0, 0F3h, 1
off_D28B	dd offset word_9F52	; DATA XREF: .debug_info:00005791o
		align 10h
		dd 0
		db 0
off_D295	dd offset unk_4E7	; DATA XREF: .debug_info:000076D3o
		dd offset loc_57C
		db 1, 0, 51h
		dd 2 dup(0)
off_D2A8	dd offset unk_4E7	; DATA XREF: .debug_info:000076DCo
		dd offset loc_4EB
		dd 0EB500001h, 7C000004h, 4000005h, 5001F300h, 9Fh, 0
		db 0
off_D2C9	dd offset loc_4EB	; DATA XREF: .debug_info:000076F5o
		dd offset loc_57C
		db 1, 0, 51h
		dd 2 dup(0)
off_D2DC	dd offset loc_4EB	; DATA XREF: .debug_info:000076FEo
		dd offset loc_539
		dd 4A500001h, 7C000005h, 1000005h, 5000h, 0
		db 2 dup(0)
off_D2FA	dd offset loc_4EB	; DATA XREF: .debug_info:0000770Co
		dd offset loc_4F7
		dw 2
		dd 4F79F30h, 5070000h, 20000h, 5079F31h, 5170000h, 20000h
		dd 5179F32h, 5270000h, 20000h, 5279F33h, 5340000h, 20000h
		dd 5349F34h, 5370000h, 10000h, 53753h, 54300h, 52000100h
		dd 543h, 54Ah, 4A500001h, 58000005h, 2000005h, 589F3100h
		dd 61000005h, 2000005h,	619F3000h, 70000005h, 2000005h
		dd 709F3200h, 7C000005h, 2000005h, 9F3300h, 0
		db 3 dup(0)
off_D38F	dd offset _protobuf_c_message_get_packed_size
					; DATA XREF: .debug_info:0000790Bo
		dd offset loc_585
		db 2
		dd 85047400h, 86000005h, 2000005h, 86087400h, 87000005h
		dd 2000005h, 870C7400h,	88000005h, 2000005h, 88107400h
		dd 8B000005h, 2000005h,	8B147400h, 0BB000005h, 3000006h
		dd 0E07400h, 6BBh, 6BCh, 14740002h, 6BCh, 6BDh,	10740002h
		dd 6BDh, 6BEh, 0C740002h, 6BEh,	6BFh, 8740002h,	6BFh, 6C0h
		dd 4740002h, 6C0h, 0C55h, 0E0740003h, 2	dup(0)
		db 0
off_D429	dd offset loc_5AD	; DATA XREF: .debug_info:0000792Do
		dd offset loc_5C7
		db 2, 0, 30h
		dd 64D9Fh, 65E00h, 55000100h, 65Eh, 673h, 9F300002h, 2 dup(0)
off_D454	dd offset loc_59F	; DATA XREF: .debug_info:0000793Co
		dd offset loc_5C7
		dd 9F300002h, 64Ch, 65Eh, 0B4910003h, 65E7Fh, 6B800h, 55000100h
		dd 6B8h, 6C0h, 0CF500001h, 0D4000006h, 3000006h, 7FB49100h
		dd 6D4h, 6E7h, 0F550001h, 14000007h, 3000007h, 7FB49100h
		dd 778h, 788h, 34550001h, 3800000Ch, 100000Ch, 0C385000h
		dd 0C390000h, 10000h, 0C3955h, 0C5500h,	30000200h, 9Fh
		dd 0
		db 0
off_D4DD	dd offset loc_5CF	; DATA XREF: .debug_info:00007961o
		dd offset loc_643
		db 1, 0, 51h
		dd offset loc_6C0
		dd offset loc_6C6+4
		dd 0E7510001h, 0A000006h, 1000007h, 7145100h, 71E0000h
		dd 10000h, 75751h, 77800h, 51000100h, 788h, 79Ch, 0A3510001h
		dd 0BF000007h, 1000007h, 7BF5100h, 7ED0000h, 90000h, 67FB891h
		dd 22061476h, 7ED9Fh, 7FD00h, 51000100h, 7FDh, 849h, 0B891000Ch
		dd 4891067Fh, 6142306h,	8499F22h, 84F0000h, 10000h, 84F51h
		dd 87F00h, 91000900h, 76067FB8h, 9F220614h, 87Fh, 88Bh
		dd 8B510001h, 0C3000008h, 9000008h, 7FB89100h, 6147606h
		dd 8C39F22h, 8C60000h, 10000h, 8C651h, 8D100h, 91000900h
		dd 76067FB8h, 9F220614h, 8D1h, 921h, 0B891000Ch, 4891067Fh
		dd 6142306h, 9219F22h, 92B0000h, 10000h, 92B51h, 96C00h
		dd 91000900h, 76067FB8h, 9F220614h, 96Ch, 977h,	77510001h
		dd 0B1000009h, 9000009h, 7FB89100h, 6147606h, 9B19F22h
		dd 9B60000h, 10000h, 9B651h, 9C200h, 91000900h,	76067FB8h
		dd 9F220614h, 9C2h, 9C6h, 0B891000Ch, 4C91067Fh, 6142306h
		dd 9F89F22h, 0A310000h,	90000h,	67FB891h, 22061476h, 0A469Fh
		dd 0A5D00h, 91000900h, 76067FB8h, 9F220614h, 0A5Dh, 0A8Eh
		dd 0B891000Ch, 4891067Fh, 6142306h, 0A8E9F22h, 0AB30000h
		dd 90000h, 67FB891h, 22061476h,	0AB39Fh, 0AD600h, 91000C00h
		dd 91067FB8h, 14230648h, 0D69F2206h, 0E200000Ah, 900000Ah
		dd 7FB89100h, 6147606h,	0AFA9F22h, 0B260000h, 90000h, 67FB891h
		dd 22061476h, 0B269Fh, 0B3900h,	91000C00h, 91067FB8h, 14230648h
		dd 399F2206h, 4900000Bh, 900000Bh, 7FB89100h, 6147606h
		dd 0B499F22h, 0B580000h, 0C0000h, 67FB891h, 23064891h
		dd 9F220614h, 0B58h, 0B7Fh, 0B8910009h,	1476067Fh, 7F9F2206h
		dd 9200000Bh, 0C00000Bh, 7FB89100h, 6489106h, 22061423h
		dd 0B929Fh, 0BA300h, 91000900h,	76067FB8h, 9F220614h, 0BB3h
		dd 0BC3h, 0B8910009h, 1476067Fh, 0C39F2206h, 0D400000Bh
		dd 0C00000Bh, 7FB89100h, 6489106h, 22061423h, 0BE49Fh
		dd 0BF700h, 91000900h, 76067FB8h, 9F220614h, 0BF7h, 0C09h
		dd 0B891000Ch, 4891067Fh, 6142306h, 0C099F22h, 0C1A0000h
		dd 90000h, 67FB891h, 22061476h,	0C1A9Fh, 0C2700h, 91000C00h
		dd 91067FB8h, 14230648h, 279F2206h, 3400000Ch, 900000Ch
		dd 7FB89100h, 6147606h,	9F22h, 0
		db 2 dup(0)
off_D7DA	dd offset loc_5D2	; DATA XREF: .debug_info:00007971o
		dd offset loc_5E3
		dw 8
		dd 67FB891h, 9F220072h,	5E3h, 5ECh, 0EC530001h,	0EE000005h
		dd 8000005h, 7FB89100h,	22007206h, 5EE9Fh, 64300h, 91000900h
		dd 76067FB8h, 9F220610h, 6C0h, 6C3h, 0B8910008h, 72067Fh
		dd 6C39F22h, 6CA0000h, 90000h, 67FB891h, 22061076h, 6E79Fh
		dd 6EF00h, 91000900h, 76067FB8h, 9F220610h, 6EFh, 714h
		dd 14530001h, 1E000007h, 9000007h, 7FB89100h, 6107606h
		dd 7579F22h, 7650000h, 90000h, 67FB891h, 22061076h, 7659Fh
		dd 77800h, 53000100h, 788h, 79Ch, 0B8910009h, 1076067Fh
		dd 0A39F2206h, 0FB000007h, 9000007h, 7FB89100h,	6107606h
		dd 7FB9F22h, 8490000h, 0C0000h,	67FB891h, 23064891h, 9F220610h
		dd 849h, 8D1h, 0B8910009h, 1076067Fh, 0D19F2206h, 21000008h
		dd 0C000009h, 7FB89100h, 6489106h, 22061023h, 9219Fh, 9C200h
		dd 91000900h, 76067FB8h, 9F220610h, 9C2h, 9C6h,	0B891000Ch
		dd 4C91067Fh, 6102306h,	9F89F22h, 0A310000h, 90000h, 67FB891h
		dd 22061076h, 0A469Fh, 0A5D00h,	91000900h, 76067FB8h, 9F220610h
		dd 0A5Dh, 0A8Eh, 0B891000Ch, 4891067Fh,	6102306h, 0A8E9F22h
		dd 0AB30000h, 90000h, 67FB891h,	22061076h, 0AB39Fh, 0AD600h
		dd 91000C00h, 91067FB8h, 10230648h, 0D69F2206h,	0E200000Ah
		dd 900000Ah, 7FB89100h,	6107606h, 0AFA9F22h, 0B260000h
		dd 90000h, 67FB891h, 22061076h,	0B269Fh, 0B3900h, 91000C00h
		dd 91067FB8h, 10230648h, 399F2206h, 4900000Bh, 900000Bh
		dd 7FB89100h, 6107606h,	0B499F22h, 0B580000h, 0C0000h
		dd 67FB891h, 23064891h,	9F220610h, 0B58h, 0B7Fh, 0B8910009h
		dd 1076067Fh, 7F9F2206h, 9200000Bh, 0C00000Bh, 7FB89100h
		dd 6489106h, 22061023h,	0B929Fh, 0BA300h, 91000900h, 76067FB8h
		dd 9F220610h, 0BB3h, 0BC3h, 0B8910009h,	1076067Fh, 0C39F2206h
		dd 0D400000Bh, 0C00000Bh, 7FB89100h, 6489106h, 22061023h
		dd 0BE49Fh, 0BF700h, 91000900h,	76067FB8h, 9F220610h, 0BF7h
		dd 0C09h, 0B891000Ch, 4891067Fh, 6102306h, 0C099F22h, 0C1A0000h
		dd 90000h, 67FB891h, 22061076h,	0C1A9Fh, 0C2700h, 91000C00h
		dd 91067FB8h, 10230648h, 279F2206h, 3400000Ch, 900000Ch
		dd 7FB89100h, 6107606h,	9F22h, 0
		db 2 dup(0)
off_DABA	dd offset loc_5EC	; DATA XREF: .debug_info:0000798Eo
		dd offset loc_643
		dw 1
		dd 6E751h, 6EF00h, 51000100h, 714h, 71Eh, 57510001h, 65000007h
		dd 1000007h, 7885100h, 79C0000h, 10000h, 7A351h, 7BF00h
		dd 51000100h, 7BFh, 7EDh, 0B8910009h, 1476067Fh, 0ED9F2206h
		dd 0FD000007h, 1000007h, 7FD5100h, 8490000h, 0C0000h, 67FB891h
		dd 23064891h, 9F220614h, 849h, 84Fh, 4F510001h,	7F000008h
		dd 9000008h, 7FB89100h,	6147606h, 87F9F22h, 88B0000h, 10000h
		dd 88B51h, 8C300h, 91000900h, 76067FB8h, 9F220614h, 8C3h
		dd 8C6h, 0C6510001h, 0D1000008h, 9000008h, 7FB89100h, 6147606h
		dd 8D19F22h, 9210000h, 0C0000h,	67FB891h, 23064891h, 9F220614h
		dd 921h, 92Bh, 2B510001h, 6C000009h, 9000009h, 7FB89100h
		dd 6147606h, 96C9F22h, 9770000h, 10000h, 97751h, 9B100h
		dd 91000900h, 76067FB8h, 9F220614h, 9B1h, 9B6h,	0B6510001h
		dd 0C2000009h, 9000009h, 7FB89100h, 6147606h, 9C29F22h
		dd 9C60000h, 0C0000h, 67FB891h,	23064C91h, 9F220614h, 9F8h
		dd 0A31h, 0B8910009h, 1476067Fh, 469F2206h, 5D00000Ah
		dd 900000Ah, 7FB89100h,	6147606h, 0A5D9F22h, 0A8E0000h
		dd 0C0000h, 67FB891h, 23064891h, 9F220614h, 0A8Eh, 0AB3h
		dd 0B8910009h, 1476067Fh, 0B39F2206h, 0D600000Ah, 0C00000Ah
		dd 7FB89100h, 6489106h,	22061423h, 0AD69Fh, 0AE200h, 91000900h
		dd 76067FB8h, 9F220614h, 0AFAh,	0B26h, 0B8910009h, 1476067Fh
		dd 269F2206h, 3900000Bh, 0C00000Bh, 7FB89100h, 6489106h
		dd 22061423h, 0B399Fh, 0B4900h,	91000900h, 76067FB8h, 9F220614h
		dd 0B49h, 0B58h, 0B891000Ch, 4891067Fh,	6142306h, 0B589F22h
		dd 0B7F0000h, 90000h, 67FB891h,	22061476h, 0B7F9Fh, 0B9200h
		dd 91000C00h, 91067FB8h, 14230648h, 929F2206h, 0A300000Bh
		dd 900000Bh, 7FB89100h,	6147606h, 0BB39F22h, 0BC30000h
		dd 90000h, 67FB891h, 22061476h,	0BC39Fh, 0BD400h, 91000C00h
		dd 91067FB8h, 14230648h, 0E49F2206h, 0F700000Bh, 900000Bh
		dd 7FB89100h, 6147606h,	0BF79F22h, 0C090000h, 0C0000h
		dd 67FB891h, 23064891h,	9F220614h, 0C09h, 0C1Ah, 0B8910009h
		dd 1476067Fh, 1A9F2206h, 2700000Ch, 0C00000Ch, 7FB89100h
		dd 6489106h, 22061423h,	0C279Fh, 0C3400h, 91000900h, 76067FB8h
		dd 9F220614h, 2	dup(0)
off_DDAC	dd offset loc_5EC	; DATA XREF: .debug_info:00007997o
		dd offset loc_637
		dd 37530001h, 43000006h, 8000006h, 7FB89100h, 6107606h
		dd 6E722h, 6EA00h, 53000100h, 6EAh, 6EFh, 0B8910008h, 1076067Fh
		dd 7142206h, 72C0000h, 10000h, 75753h, 76500h, 53000100h
		dd 788h, 79Ch, 0A3530001h, 0BD000007h, 1000007h, 7BD5300h
		dd 7ED0000h, 80000h, 67FB891h, 22061076h, 7EDh,	7F5h, 0F5530001h
		dd 0FB000007h, 8000007h, 7FB89100h, 6107606h, 7FB22h, 84900h
		dd 91000B00h, 91067FB8h, 10230648h, 8492206h, 8510000h
		dd 10000h, 85153h, 87F00h, 91000800h, 76067FB8h, 7F220610h
		dd 83000008h, 1000008h,	8835300h, 8880000h, 80000h, 67FB891h
		dd 22061076h, 888h, 88Dh, 8D530001h, 0C3000008h, 8000008h
		dd 7FB89100h, 6107606h,	8C322h,	8CB00h,	53000100h, 8CBh
		dd 8D1h, 0B8910008h, 1076067Fh,	8D12206h, 9210000h, 0B0000h
		dd 67FB891h, 23064891h,	21220610h, 29000009h, 1000009h
		dd 9295300h, 96C0000h, 80000h, 67FB891h, 22061076h, 96Ch
		dd 96Fh, 6F530001h, 74000009h, 8000009h, 7FB89100h, 6107606h
		dd 97422h, 97900h, 53000100h, 979h, 9B1h, 0B8910008h, 1076067Fh
		dd 9B12206h, 9F80000h, 10000h, 9F853h, 0A3100h,	91000800h
		dd 76067FB8h, 31220610h, 4600000Ah, 100000Ah, 0A465300h
		dd 0A5D0000h, 80000h, 67FB891h,	22061076h, 0A5Dh, 0A8Eh
		dd 0B891000Bh, 4891067Fh, 6102306h, 0A8E22h, 0AB300h, 91000800h
		dd 76067FB8h, 0B3220610h, 0D600000Ah, 0B00000Ah, 7FB89100h
		dd 6489106h, 22061023h,	0AD6h, 0AE2h, 0B8910008h, 1076067Fh
		dd 0AFA2206h, 0B260000h, 80000h, 67FB891h, 22061076h, 0B26h
		dd 0B39h, 0B891000Bh, 4891067Fh, 6102306h, 0B3922h, 0B4900h
		dd 91000800h, 76067FB8h, 49220610h, 5800000Bh, 0B00000Bh
		dd 7FB89100h, 6489106h,	22061023h, 0B58h, 0B7Fh, 0B8910008h
		dd 1076067Fh, 0B7F2206h, 0B920000h, 0B0000h, 67FB891h
		dd 23064891h, 92220610h, 0A300000Bh, 800000Bh, 7FB89100h
		dd 6107606h, 0BA322h, 0BB300h, 53000100h, 0BB3h, 0BC3h
		dd 0B8910008h, 1076067Fh, 0BC32206h, 0BD40000h,	0B0000h
		dd 67FB891h, 23064891h,	0E4220610h, 0F700000Bh,	800000Bh
		dd 7FB89100h, 6107606h,	0BF722h, 0C0900h, 91000B00h, 91067FB8h
		dd 10230648h, 0C092206h, 0C1A0000h, 80000h, 67FB891h, 22061076h
		dd 0C1Ah, 0C27h, 0B891000Bh, 4891067Fh,	6102306h, 0C2722h
		dd 0C3400h, 91000800h, 76067FB8h, 220610h, 0
		db 3 dup(0)
off_E0DF	dd offset loc_62B	; DATA XREF: .debug_info:000079AAo
		dd offset loc_648
		db 3
		dd 7FBC9100h, 714h, 757h, 0BC910003h, 79C7Fh, 7A300h, 91000300h
		dd 7B77FBCh, 0C340000h,	30000h,	7FBC91h, 0
		db 3 dup(0)
off_E11B	dd offset loc_5EC	; DATA XREF: .debug_info:000079B3o
		dd offset loc_643
		db 2
		dd 0E79F3000h, 0EF000006h, 2000006h, 149F3000h,	1E000007h
		dd 2000007h, 1E9F3000h,	2A000007h, 1000007h, 72A5500h
		dd 72C0000h, 10000h, 72C51h, 74E00h, 53000100h,	757h, 765h
		dd 9F300002h, 788h, 79Ch, 9F300002h, 7A3h, 7BFh, 9F300002h
		dd 7D4h, 7DFh, 0ED530001h, 0FD000007h, 2000007h, 159F3000h
		dd 1C000008h, 1000008h,	8385300h, 8490000h, 10000h, 84953h
		dd 85300h, 30000200h, 8669Fh, 87100h, 53000100h, 87Fh
		dd 883h, 9F300002h, 883h, 888h,	88530001h, 8F000008h, 2000008h
		dd 0AB9F3000h, 0B6000008h, 1000008h, 8C35300h, 8D30000h
		dd 20000h, 8E49F30h, 8EF0000h, 10000h, 92153h, 92B00h
		dd 30000200h, 93C9Fh, 94700h, 53000100h, 96Ch, 96Fh, 9F300002h
		dd 96Fh, 974h, 74530001h, 7B000009h, 2000009h, 8E9F3000h
		dd 99000009h, 1000009h,	9B15300h, 9C60000h, 20000h, 9D89F30h
		dd 9E10000h, 10000h, 0AE255h, 0AFA00h, 53000100h, 0BD4h
		dd 0BE4h, 530001h, 0
		db 3 dup(0)
off_E287	dd offset unk_71E	; DATA XREF: .debug_info:000079BCo
		dd offset loc_72C
		db 1
		dd 9D95700h, 9E10000h, 10000h, 57h, 0
		db 0
off_E2A5	dd offset loc_5EE	; DATA XREF: .debug_info:000079C5o
		dd offset loc_643
		db 1, 0, 52h
		dd offset unk_6E7
		dd offset unk_6EF
		dd 14520001h, 1E000007h, 1000007h, 71E5200h, 7240000h
		dd 10000h, 75756h, 76500h, 52000100h, 788h, 79Ch, 0A3520001h
		dd 0BF000007h, 1000007h, 7BF5200h, 7ED0000h, 80000h, 67FB891h
		dd 22061476h, 7EDh, 7FDh, 0FD520001h, 49000007h, 0B000008h
		dd 7FB89100h, 6489106h,	22061423h, 849h, 853h, 53520001h
		dd 7F000008h, 8000008h,	7FB89100h, 6147606h, 87F22h, 88F00h
		dd 52000100h, 88Fh, 8C3h, 0B8910008h, 1476067Fh, 8C32206h
		dd 8D30000h, 10000h, 8D352h, 92100h, 91000B00h,	91067FB8h
		dd 14230648h, 9212206h,	92B0000h, 10000h, 92B52h, 96C00h
		dd 91000800h, 76067FB8h, 6C220614h, 7B000009h, 1000009h
		dd 97B5200h, 9B10000h, 80000h, 67FB891h, 22061476h, 9B1h
		dd 9C6h, 0C6520001h, 0F8000009h, 1000009h, 9F85600h, 0A310000h
		dd 80000h, 67FB891h, 22061476h,	0A31h, 0A46h, 46560001h
		dd 5D00000Ah, 800000Ah,	7FB89100h, 6147606h, 0A5D22h, 0A8E00h
		dd 91000B00h, 91067FB8h, 14230648h, 0A8E2206h, 0AB30000h
		dd 80000h, 67FB891h, 22061476h,	0AB3h, 0AD6h, 0B891000Bh
		dd 4891067Fh, 6142306h,	0AD622h, 0AE200h, 91000800h, 76067FB8h
		dd 0FA220614h, 2600000Ah, 800000Bh, 7FB89100h, 6147606h
		dd 0B2622h, 0B3900h, 91000B00h,	91067FB8h, 14230648h, 0B392206h
		dd 0B490000h, 80000h, 67FB891h,	22061476h, 0B49h, 0B58h
		dd 0B891000Bh, 4891067Fh, 6142306h, 0B5822h, 0B7F00h, 91000800h
		dd 76067FB8h, 7F220614h, 9200000Bh, 0B00000Bh, 7FB89100h
		dd 6489106h, 22061423h,	0B92h, 0BA3h, 0B8910008h, 1476067Fh
		dd 0BA32206h, 0BB30000h, 10000h, 0BB356h, 0BC300h, 91000800h
		dd 76067FB8h, 0C3220614h, 0D400000Bh, 0B00000Bh, 7FB89100h
		dd 6489106h, 22061423h,	0BE4h, 0BF7h, 0B8910008h, 1476067Fh
		dd 0BF72206h, 0C090000h, 0B0000h, 67FB891h, 23064891h
		dd 9220614h, 1A00000Ch,	800000Ch, 7FB89100h, 6147606h
		dd 0C1A22h, 0C2700h, 91000B00h,	91067FB8h, 14230648h, 0C272206h
		dd 0C340000h, 80000h, 67FB891h,	22061476h, 2 dup(0)
off_E56C	dd offset unk_7FD	; DATA XREF: .debug_info:000079D7o
					; .debug_info:000079F0o
		dd offset loc_813
		dd 2A510001h, 36000008h, 1000008h, 8365100h, 83F0000h
		dd 30000h, 769F7F71h, 8E00000Ah, 100000Ah, 0BC35100h, 0BD40000h
		dd 10000h, 51h,	0
		db 0
off_E5AD	dd offset unk_A76	; DATA XREF: .debug_info:00007A09o
		dd offset unk_A8E
		db 1, 0, 51h
		dd offset unk_BC3
		dd offset loc_BD4
		dd 510001h, 0
		db 3 dup(0)
off_E5CB	dd offset loc_5F9	; DATA XREF: .debug_info:00007A29o
		dd offset loc_615
		db 1
		dd 6155000h, 6430000h, 20000h, 7140476h, 71E0000h, 20000h
		dd 7570476h, 7650000h, 10000h, 78850h, 79C00h, 50000100h
		dd 7A3h, 7ABh, 0AB500001h, 0FB000007h, 2000007h, 0FB047600h
		dd 49000007h, 5000008h,	6489100h, 8490423h, 8D10000h, 20000h
		dd 8D10476h, 9210000h, 50000h, 23064891h, 92104h, 9C200h
		dd 76000200h, 9C204h, 9C600h, 91000500h, 423064Ch, 9F8h
		dd 0A31h, 4760002h, 0A46h, 0A5Dh, 4760002h, 0A5Dh, 0A8Eh
		dd 48910005h, 8E042306h, 0B300000Ah, 200000Ah, 0B3047600h
		dd 0D600000Ah, 500000Ah, 6489100h, 0AD60423h, 0AE20000h
		dd 20000h, 0AFA0476h, 0B260000h, 20000h, 0B260476h, 0B390000h
		dd 50000h, 23064891h, 0B3904h, 0B4900h,	76000200h, 0B4904h
		dd 0B5800h, 91000500h, 4230648h, 0B58h,	0B7Fh, 4760002h
		dd 0B7Fh, 0B92h, 48910005h, 92042306h, 0A300000Bh, 200000Bh
		dd 0B3047600h, 0C300000Bh, 200000Bh, 0C3047600h, 0D400000Bh
		dd 500000Bh, 6489100h, 0BE40423h, 0BF70000h, 20000h, 0BF70476h
		dd 0C090000h, 50000h, 23064891h, 0C0904h, 0C1A00h, 76000200h
		dd 0C1A04h, 0C2700h, 91000500h,	4230648h, 0C27h, 0C34h
		dd 4760002h, 2 dup(0)
off_E770	dd offset loc_788	; DATA XREF: .debug_info:00007A42o
		dd offset loc_79C
		dd 0A3500001h, 0AB000007h, 1000007h, 7AB5000h, 7B70000h
		dd 20000h, 476h, 0
		db 2 dup(0)
off_E79A	dd offset loc_738	; DATA XREF: .debug_info:00007A61o
		dd offset loc_74E
		dw 1
		dd 0AE253h, 0AFA00h, 53000100h,	0BD4h, 0BE4h, 530001h
		dd 0
		db 3 dup(0)
off_E7C3	dd offset unk_AE2	; DATA XREF: .debug_info:00007A7Ao
		dd offset unk_AFA
		db 1
		dd 0BD45300h, 0BE40000h, 10000h, 53h, 0
		db 0
off_E7E1	dd offset unk_7BF	; DATA XREF: .debug_info:00007A8Eo
					; .debug_info:00007AA7o
		dd offset loc_7D2
		db 1, 0, 50h
		dd offset loc_7D2
		dd offset loc_7D7
		dd 720002h, 7D7h, 7DFh,	78720002h, 7E1h, 7EDh, 8E500001h
		dd 0A500000Ah, 100000Ah, 0B6D5000h, 0B7F0000h, 10000h
		dd 50h,	0
		db 0
off_E82D	dd offset unk_A8E	; DATA XREF: .debug_info:00007AC0o
		dd offset unk_AA5
		db 1, 0, 50h
		dd offset unk_B6D
		dd offset unk_B7F
		dd 500001h, 0
		db 3 dup(0)
off_E84B	dd offset unk_92B	; DATA XREF: .debug_info:00007AE0o
		dd offset loc_93A
		db 6
		dd 4935100h, 3A049350h,	3F000009h, 7000009h, 4935100h
		dd 4930472h, 93Fh, 947h, 93510007h, 937C7204h, 94C04h
		dd 96A00h, 51000600h, 93500493h, 96A04h, 96C00h, 51000700h
		dd 4720493h, 0A020493h,	0A140000h, 60000h, 50049351h, 0A140493h
		dd 0A190000h, 70000h, 72049351h, 0D6049304h
		db 0Ah,	2 dup(0)
; ---------------------------------------------------------------------------
		fisttp	qword ptr [edx]	; jumptable 00000717 case 16
; ---------------------------------------------------------------------------
		db 2 dup(0), 6
		dd 4935100h, 0DD049350h, 0E200000Ah, 700000Ah, 4935100h
		dd 4930472h, 0B11h, 0B21h, 93510006h, 4935004h,	0B21h
		dd 0B26h, 93510007h, 93047204h,	0B3904h, 0B4100h, 51000600h
		dd 93500493h, 0B4104h, 0B4900h,	51000700h, 4720493h, 0B580493h
		dd 0B680000h, 60000h, 50049351h, 0B680493h, 0B6D0000h
		dd 70000h, 72049351h, 9049304h,	1500000Ch, 600000Ch, 4935100h
		dd 15049350h, 1A00000Ch, 700000Ch, 4935100h, 4930472h
		dd 0C27h, 0C2Ah, 93510006h, 4935004h, 0C2Ah, 0C34h, 93510007h
		dd 93047204h, 4, 0
		db 0
off_E98D	dd offset unk_92B	; DATA XREF: .debug_info:00007AEEo
		dd offset loc_93A
		db 1, 0, 50h
		dd offset loc_93A
		dd offset loc_93F
		dd 4720002h, 93Fh, 947h, 7C720002h, 94Ch, 96Ah,	6A500001h
		dd 6C000009h, 2000009h,	2047200h, 1400000Ah, 100000Ah
		dd 0A145000h, 0A190000h, 20000h, 0AD60472h, 0ADD0000h
		dd 10000h, 0ADD50h, 0AE200h, 72000200h,	0B1104h, 0B2100h
		dd 50000100h, 0B21h, 0B26h, 4720002h, 0B39h, 0B41h, 41500001h
		dd 4900000Bh, 200000Bh,	58047200h, 6800000Bh, 100000Bh
		dd 0B685000h, 0B6D0000h, 20000h, 0C090472h, 0C150000h
		dd 10000h, 0C1550h, 0C1A00h, 72000200h,	0C2704h, 0C2A00h
		dd 50000100h, 0C2Ah, 0C34h, 4720002h, 2	dup(0)
off_EA70	dd offset loc_950	; DATA XREF: .debug_info:00007B07o
		dd offset loc_96C
		dd 0D6510001h, 0E200000Ah, 100000Ah, 0B115100h,	0B260000h
		dd 10000h, 0B3951h, 0B4900h, 51000100h,	2 dup(0)
off_EAA4	dd offset unk_B11	; DATA XREF: .debug_info:00007B20o
		dd offset unk_B26
		dd 39510001h, 4900000Bh, 100000Bh, 5100h, 0
		db 2 dup(0)
off_EAC2	dd offset unk_88F	; DATA XREF: .debug_info:00007B41o
		dd offset loc_8A9
		dw 1
		dd 8A950h, 8AE00h, 72000200h, 8AE00h, 8B600h, 72000200h
		dd 8B87Ch, 8C100h, 50000100h, 8C1h, 8C3h, 720002h, 9F8h
		dd 9FDh, 0FD500001h, 2000009h, 200000Ah, 0FA007200h, 0C00000Ah
		dd 100000Bh, 0B0C5000h,	0B110000h, 20000h, 0BE40072h, 0BEC0000h
		dd 10000h, 0BEC50h, 0BF700h, 72000200h,	2 dup(0)
		db 0
off_EB49	dd offset unk_AFA	; DATA XREF: .debug_info:00007B5Ao
		dd offset loc_B0C
		db 1, 0, 50h
		dd offset loc_B0C
		dd offset unk_B11
		dd 720002h, 0BE4h, 0BECh, 0EC500001h, 0F700000Bh, 200000Bh
		dd 7200h, 0
		db 3 dup(0)
off_EB7F	dd offset unk_853	; DATA XREF: .debug_info:00007B79o
		dd offset loc_864
		db 1
		dd 8645000h, 8690000h, 20000h, 8690072h, 8710000h, 20000h
		dd 8737C72h, 87D0000h, 10000h, 87D50h, 87F00h, 72000200h
		dd 0A4600h, 0A5800h, 50000100h,	0A58h, 0A5Dh, 720002h
		dd 0B92h, 0B9Bh, 9B500001h, 0A300000Bh,	200000Bh, 7200h
		dd 0
		db 3 dup(0)
off_EBEF	dd offset unk_A46	; DATA XREF: .debug_info:00007B92o
		dd offset loc_A58
		db 1
		dd 0A585000h, 0A5D0000h, 20000h, 0B920072h, 0B9B0000h
		dd 10000h, 0B9B50h, 0BA300h, 72000200h,	2 dup(0)
		db 0
off_EC25	dd offset unk_97B	; DATA XREF: .debug_info:00007BB1o
					; .debug_info:00007C02o
		dd offset loc_991
		db 2, 0, 72h
		dd 99100h, 99900h, 72000200h, 99B7Ch, 9A500h, 50000100h
		dd 9A5h, 9B1h, 720002h,	0A19h, 0A31h, 720002h, 0AA5h, 0AAAh
		dd 0AA500001h, 0B300000Ah, 200000Ah, 0B3007200h, 0C300000Bh
		dd 200000Bh, 7200h, 0
		db 3 dup(0)
off_EC8B	dd offset unk_97B	; DATA XREF: .debug_info:off_7BCEo
		dd offset loc_98C
		db 1
		dd 9A55000h, 9AF0000h, 10000h, 0A1950h,	0A2C00h, 50000100h
		dd 0BB3h, 0BBBh, 500001h, 0
		db 3 dup(0)
off_ECBF	dd offset unk_A19	; DATA XREF: .debug_info:00007BE7o
		dd offset loc_A2C
		db 1
		dd 0BB35000h, 0BBB0000h, 10000h, 50h, 0
		db 0
off_ECDD	dd offset loc_8F4	; DATA XREF: .debug_info:off_7C21o
					; .debug_info:00007C9Bo
		dd offset loc_8FE
		db 6, 0, 50h
		dd 93520493h, 0AB304h, 0AB600h,	50000600h, 93520493h, 4
		dd 0
		db 0
off_ED05	dd offset unk_8D3	; DATA XREF: .debug_info:00007C3Eo
		dd offset loc_8EF
		db 6, 0, 50h
		dd 93520493h, 90004h, 92100h, 50000600h, 93520493h, 0A5D04h
		dd 0A7600h, 50000600h, 93520493h, 0ACA04h, 0AD600h, 50000600h
		dd 93520493h, 0B2604h, 0B3900h,	50000600h, 93520493h, 0B4904h
		dd 0B5800h, 50000600h, 93520493h, 0B7F04h, 0B9200h, 50000600h
		dd 93520493h, 0BF704h, 0C0900h,	50000600h, 93520493h, 0C1A04h
		dd 0C2700h, 50000600h, 93520493h, 4, 0
		db 0
off_ED9D	dd offset unk_8D3	; DATA XREF: .debug_info:00007C4Co
		dd offset loc_8EF
		db 1, 0, 52h
		dd offset loc_902
		dd offset unk_921
		dd 5D520001h, 7600000Ah, 100000Ah, 0ACA5200h, 0AD60000h
		dd 10000h, 0B2652h, 0B3900h, 52000100h,	0B49h, 0B58h, 7F520001h
		dd 9200000Bh, 100000Bh,	0BF75200h, 0C090000h, 10000h, 0C1A52h
		dd 0C2700h, 52000100h, 2 dup(0)
off_EE08	dd offset loc_906	; DATA XREF: .debug_info:00007C65o
		dd offset unk_921
		dd 0CA500001h, 0D600000Ah, 100000Ah, 0B265000h,	0B390000h
		dd 10000h, 0B4950h, 0B5800h, 50000100h,	2 dup(0)
off_EE3C	dd offset unk_B26	; DATA XREF: .debug_info:00007C7Eo
		dd offset loc_B39
		dd 49500001h, 5800000Bh, 100000Bh, 5000h, 0
		db 2 dup(0)
off_EE5A	dd offset unk_9C6	; DATA XREF: .debug_info:00007CABo
					; .debug_info:00007CC8o
		dd offset loc_9D6
		dw 1
		dd 9EC50h, 9F800h, 50000100h, 0A31h, 0A46h, 0A3500001h
		dd 0B300000Bh, 100000Bh, 5000h,	0
		db 2 dup(0)
off_EE8E	dd offset unk_A31	; DATA XREF: .debug_info:00007CE1o
		dd offset unk_A46
		dw 1
		dd 0BA350h, 0BB300h, 50000100h,	2 dup(0)
off_EEAC	dd offset unk_6EF	; DATA XREF: .debug_info:00007D0Co
		dd offset loc_706+4
		dd 65510001h, 78000007h, 1000007h, 5100h, 0
		db 2 dup(0)
off_EECA	dd offset unk_6EF	; DATA XREF: .debug_info:00007D15o
		dd offset loc_714
		dw 1
		dd 76553h, 77800h, 53000100h, 2	dup(0)
off_EEE8	dd offset loc_76A	; DATA XREF: .debug_info:00007D30o
		dd offset loc_773
		dd 500001h, 0
		db 3 dup(0)
off_EEFB	dd offset unk_673	; DATA XREF: .debug_info:00007D81o
		dd offset loc_681
		db 1
		dd 6815200h, 6880000h, 20000h, 6880070h, 68C0000h, 20000h
		dd 6917070h, 69B0000h, 10000h, 69B52h, 6A200h, 70000200h
		dd 6A200h, 6A600h, 70000200h, 6D470h, 6E500h, 52000100h
		dd 6E5h, 6E7h, 700002h,	778h, 780h, 80520001h, 88000007h
		dd 2000007h, 7000h, 0
		db 3 dup(0)
off_EF77	dd offset loc_6D4	; DATA XREF: .debug_info:00007D9Ao
		dd offset loc_6E5
		db 1
		dd 6E55200h, 6E70000h, 20000h, 7780070h, 7800000h, 10000h
		dd 78052h, 78800h, 70000200h, 2	dup(0)
		db 0
off_EFAD	dd offset _required_field_get_packed_size_isra_11
					; DATA XREF: .debug_info:00007DDFo
		dd offset loc_C59
		db 2, 0, 74h
		dd 0C5904h, 0C5A00h, 74000200h,	0C5A08h, 0C5B00h, 74000200h
		dd 0C5B0Ch, 0C5E00h, 74000200h,	0C5E10h, 0CD700h, 74000200h
		dd 0CD730h, 0CD800h, 74000200h,	0CD810h, 0CD900h, 74000200h
		dd 0CD90Ch, 0CDA00h, 74000200h,	0CDA08h, 0CDC00h, 74000200h
		dd 0CDC04h, 0FBE00h, 74000200h,	30h, 0
		db 0
off_F02D	dd offset _required_field_get_packed_size_isra_11
					; DATA XREF: .debug_info:00007DEDo
		dd offset loc_C97+4
		db 1, 0, 51h
		dd offset loc_C97+4
		dd offset loc_C9C
		dd 1F30004h, 0C9C9F51h,	0CC30000h, 10000h, 0CC351h, 0CDB00h
		dd 0F3000400h, 0DB9F5101h, 0FA00000Ch, 100000Ch, 0CFA5100h
		dd 0D030000h, 40000h, 9F5101F3h, 0D03h,	0D25h, 25510001h
		dd 4100000Dh, 400000Dh,	5101F300h, 0D419Fh, 0D8100h, 51000100h
		dd 0D81h, 0D90h, 1F30004h, 0D909F51h, 0DA10000h, 10000h
		dd 0DA151h, 0DC100h, 0F3000400h, 0C19F5101h, 0C900000Dh
		dd 100000Dh, 0DC95100h,	0DF40000h, 40000h, 9F5101F3h, 0DF4h
		dd 0E44h, 44510001h, 5800000Eh,	400000Eh, 5101F300h, 0E589Fh
		dd 0E6900h, 51000100h, 0E69h, 0EA7h, 1F30004h, 0EA79F51h
		dd 0EC40000h, 10000h, 0EC451h, 0EFF00h,	0F3000400h, 0FF9F5101h
		dd 0C00000Eh, 100000Fh,	0F0C5100h, 0F290000h, 40000h, 9F5101F3h
		dd 0F29h, 0F34h, 34510001h, 4700000Fh, 400000Fh, 5101F300h
		dd 0F479Fh, 0F4C00h, 51000100h,	0F4Ch, 0F70h, 1F30004h
		dd 0F709F51h, 0F780000h, 10000h, 0F7851h, 0F9500h, 0F3000400h
		dd 959F5101h, 0AA00000Fh, 100000Fh, 0FAA5100h, 0FBE0000h
		dd 40000h, 9F5101F3h, 2	dup(0)
off_F1AC	dd offset loc_C6A	; DATA XREF: .debug_info:00007E29o
		dd offset loc_C97+4
		dd 9C500001h, 0C300000Ch, 100000Ch, 0CDB5000h, 0CDF0000h
		dd 10000h, 0CE150h, 0CE600h, 50000100h,	0D03h, 0D16h, 41500001h
		dd 4700000Dh, 100000Dh,	0D4C5000h, 0D4E0000h, 10000h, 0D5A50h
		dd 0D5E00h, 50000100h, 0D90h, 0D9Ch, 0C1500001h, 0D700000Dh
		dd 100000Dh, 0DF45000h,	0DF90000h, 10000h, 0E2C50h, 0E4B00h
		dd 50000100h, 0E64h, 0E70h, 0FF500001h,	2900000Eh, 100000Fh
		dd 0F475000h, 0F510000h, 10000h, 0F7050h, 0F8200h, 50000100h
		dd 2 dup(0)
off_F264	dd offset loc_C9C	; DATA XREF: .debug_info:00007E42o
		dd offset loc_CAD
		dd 3500001h, 1300000Dh,	100000Dh, 5000h, 0
		db 2 dup(0)
off_F282	dd offset loc_CE6	; DATA XREF: .debug_info:00007E61o
		dd offset loc_CFA
		dw 1
		dd 0EA750h, 0EBA00h, 50000100h,	2 dup(0)
off_F2A0	dd offset unk_EA7	; DATA XREF: .debug_info:00007E7Ao
		dd offset loc_EBA
		dd 500001h, 0
		db 3 dup(0)
off_F2B3	dd offset loc_D16	; DATA XREF: .debug_info:00007E8Eo
		dd offset loc_D21+4
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_F2C6	dd offset loc_D26	; DATA XREF: .debug_info:00007E97o
					; .debug_info:00007EB4o
		dd offset loc_D3D
		dw 1
		dd 0D3D50h, 0D3F00h, 70000300h,	0E9F9F7Eh, 0EA00000h, 10000h
		dd 0EA050h, 0EA200h, 70000300h,	0EEA9F7Fh, 0EF80000h, 10000h
		dd 0F6250h, 0F6E00h, 50000100h,	2 dup(0)
off_F314	dd offset loc_EEA	; DATA XREF: .debug_info:00007ECDo
		dd offset loc_EF8
		dd 62500001h, 6E00000Fh, 100000Fh, 5000h, 0
		db 2 dup(0)
off_F332	dd offset loc_D4E	; DATA XREF: .debug_info:00007EF6o
					; .debug_info:00007F0Fo
		dd offset loc_D58
		dw 1
		dd 0D5850h, 0D5A00h, 71000200h,	0F2900h, 0F2B00h, 50000100h
		dd 0F2Bh, 0F34h, 710002h, 2 dup(0)
off_F368	dd offset loc_D5E	; DATA XREF: .debug_info:00007F2Eo
		dd offset loc_D81
		dd 58500001h, 5D00000Eh, 100000Eh, 0E5D5000h, 0E640000h
		dd 20000h, 0F950071h, 0F9D0000h, 10000h, 0F9D50h, 0FAA00h
		dd 71000200h, 2	dup(0)
		db 0
off_F3A9	dd offset loc_D76	; DATA XREF: .debug_info:00007F47o
		dd offset loc_D81
		db 1, 0, 50h
		dd offset loc_F95
		dd offset loc_F9D
		dd 9D500001h, 0AA00000Fh, 200000Fh, 7100h, 0
		db 3 dup(0)
off_F3D3	dd offset loc_D92	; DATA XREF: .debug_info:00007F5Bo
		dd offset loc_DA3
		db 1
		dd 0F475700h, 0F510000h, 10000h, 57h, 0
		db 0
off_F3F1	dd offset loc_DA8	; DATA XREF: .debug_info:00007F64o
					; .debug_info:00007F7Do
		dd offset loc_DB9
		db 1, 0, 50h
		dd offset loc_ED7
		dd offset loc_EEA
		dd 51500001h, 6200000Fh, 100000Fh, 5000h, 0
		db 2 dup(0)
off_F41A	dd offset loc_ED7	; DATA XREF: .debug_info:00007F96o
		dd offset loc_EEA
		dw 1
		dd 0F5150h, 0F6200h, 50000100h,	2 dup(0)
off_F438	dd offset loc_E2E	; DATA XREF: .debug_info:00007FABo
					; .debug_info:00007FC4o
		dd offset unk_E4B
		dd 64520001h, 7000000Eh, 100000Eh, 0EFF5200h, 0F130000h
		dd 10000h, 0F7052h, 0F8200h, 52000100h,	2 dup(0)
off_F46C	dd offset loc_EFF	; DATA XREF: .debug_info:00007FDDo
		dd offset loc_F13
		dd 70520001h, 8200000Fh, 100000Fh, 5200h, 0
		db 2 dup(0)
off_F48A	dd offset loc_DC9	; DATA XREF: .debug_info:00007FFDo
					; .debug_info:0000801Ao
		dd offset loc_DD3
		dw 6
		dd 53049351h, 0F130493h, 0F150000h, 60000h, 53049351h
		dd 493h, 0
		db 2 dup(0)
off_F4B2	dd offset loc_DD5	; DATA XREF: .debug_info:00008034o
		dd offset loc_DDF
		dw 6
		dd 53049351h, 0E700493h, 0E9F0000h, 60000h, 53049351h
		dd 493h, 0
		db 2 dup(0)
off_F4DA	dd offset loc_DD7	; DATA XREF: .debug_info:00008042o
		dd offset loc_DDF
		dw 1
		dd 0E7050h, 0E9500h, 50000100h,	0E95h, 0E9Fh, 530001h
		dd 0
		db 3 dup(0)
off_F503	dd offset loc_E70	; DATA XREF: .debug_info:0000805Bo
		dd offset loc_E9F
		db 1
		dd offset off_50D8+28h
		dd 0
		db 2 dup(0)
off_F516	dd offset loc_E81	; DATA XREF: .debug_info:00008074o
		dd offset loc_E9F
		dw 1
		dd offset loc_4F+2
		dd 0
		db 0
off_F529	dd offset loc_DF9	; DATA XREF: .debug_info:00008096o
		dd offset loc_E22
		db 6, 0, 52h
		dd 93500493h, 0E2204h, 0E2C00h,	52000700h, 4710493h, 493h
		dd 0
		db 2 dup(0)
off_F552	dd offset loc_DF9	; DATA XREF: .debug_info:000080A4o
		dd offset loc_E22
		dw 1
		dd 0E2250h, 0E2C00h, 71000200h,	4, 0
		db 0
off_F571	dd offset loc_DFD	; DATA XREF: .debug_info:000080BDo
		dd offset loc_E2C	; jumptable 00000CB0 case 15
		db 1, 0, 52h
		dd 2 dup(0)
off_F584	dd offset loc_E0E	; DATA XREF: .debug_info:000080D6o
		dd offset loc_E2C	; jumptable 00000CB0 case 15
		dd 520001h, 0
		db 3 dup(0)
off_F597	dd offset _protobuf_c_message_pack ; DATA XREF:	.debug_info:0000844Co
		dd offset sub_FC1
		db 2
		dd 0C1047400h, 0C200000Fh, 200000Fh, 0C2087400h, 0C300000Fh
		dd 200000Fh, 0C30C7400h, 0C400000Fh, 200000Fh, 0C4107400h
		dd 0C700000Fh, 200000Fh, 0C7147400h, 0EE00000Fh, 3000010h
		dd 0F07400h, 10EEh, 10EFh, 14740002h, 10EFh, 10F0h, 10740002h
		dd 10F0h, 10F1h, 0C740002h, 10F1h, 10F2h, 8740002h, 10F2h
		dd 10F4h, 4740002h, 10F4h, 1780h, 0F0740003h, 2	dup(0)
		db 0
off_F631	dd offset loc_FF1	; DATA XREF: .debug_info:0000847Do
		dd offset loc_1014
		db 2, 0, 30h
		dd 106C9Fh, 107E00h, 91000300h,	107E7FB0h, 10910000h, 20000h
		dd 10CC9F30h, 10D90000h, 30000h, 7FA491h, 0
		db 3 dup(0)
off_F66B	dd offset loc_FE3	; DATA XREF: .debug_info:0000848Co
		dd offset loc_1014
		db 2
		dd 689F3000h, 7E000010h, 3000010h, 7FA49100h, 107Eh, 10C5h
		dd 0C8550001h, 0EB000010h, 1000010h, 10EB5500h,	10F30000h
		dd 10000h, 11CE50h, 11D900h, 91000300h,	120F7FA4h, 12140000h
		dd 30000h, 437FA491h, 47000017h, 1000017h, 17475000h, 17480000h
		dd 10000h, 176455h, 178000h, 30000200h,	9Fh, 0
		db 0
off_F6E9	dd offset loc_101B	; DATA XREF: .debug_info:000084A5o
		dd offset loc_1064
		db 1, 0, 53h
		dd offset unk_10F3
		dd offset sub_11BE
		dd 0BE530001h, 0C9000011h, 3000011h, 9F747200h,	11D9h
		dd 11F9h, 0F9530001h, 4000011h,	3000012h, 9F747200h, 1214h
		dd 12EDh, 5C530001h, 6B000013h,	1000013h, 142C5300h, 14320000h
		dd 10000h, 146D53h, 147300h, 53000100h,	1493h, 14AFh, 0BA530001h
		dd 0CA000014h, 1000014h, 15465300h, 15560000h, 10000h
		dd 161553h, 163800h, 53000100h,	1701h, 1715h, 530001h
		dd 0
		db 3 dup(0)
off_F78F	dd offset loc_1022	; DATA XREF: .debug_info:000084B5o
		dd offset loc_1064
		db 1
		dd 10F35100h, 10FF0000h, 10000h, 11B251h, 11C900h, 51000100h
		dd 11D9h, 1204h, 14510001h, 35000012h, 1000012h, 12365100h
		dd 12730000h, 10000h, 12A351h, 12AE00h,	51000100h, 2 dup(0)
off_F7E4	dd offset loc_1025	; DATA XREF: .debug_info:000084C5o
		dd offset loc_1034
		dd 0A8910008h, 76067Fh,	10349F22h, 10490000h, 10000h, 104956h
		dd 106400h, 91000900h, 73067FA8h, 9F220610h, 10F3h, 10FFh
		dd 0A8910009h, 1073067Fh, 0B29F2206h, 0D9000011h, 8000011h
		dd 7FA89100h, 22007606h, 11D99Fh, 121400h, 56000100h, 1214h
		dd 1235h, 0A8910009h, 1073067Fh, 369F2206h, 48000012h
		dd 1000012h, 12485600h,	12730000h, 90000h, 67FA891h, 22061073h
		dd 12A39Fh, 12AE00h, 91000900h,	73067FA8h, 9F220610h, 2	dup(0)
off_F890	dd offset loc_104D	; DATA XREF: .debug_info:000084E2o
		dd offset loc_1062
		dd 62500001h, 68000010h, 3000010h, 7FB49100h, 10F3h, 10F7h
		dd 0F7500001h, 0B2000010h, 3000011h, 7FB49100h,	1214h
		dd 1235h, 35500001h, 36000012h,	3000012h, 7FB49100h, 1248h
		dd 124Bh, 4B500001h, 43000012h,	3000017h, 7FB49100h, 1748h
		dd 1764h, 0B4910003h, 7Fh, 0
		db 0
off_F905	dd offset loc_104D	; DATA XREF: .debug_info:000084EBo
		dd offset loc_1064
		db 1, 0, 51h
		dd offset unk_10F3
		dd offset loc_10FB+4
		dd 14510001h, 35000012h, 1000012h, 12485100h, 12730000h
		dd 10000h, 12A351h, 12AE00h, 51000100h,	2 dup(0)
off_F944	dd offset loc_104D	; DATA XREF: .debug_info:000084F4o
		dd offset loc_1064
		dd 64560001h, 68000010h, 3000010h, 7FB89100h, 10F3h, 11B2h
		dd 14560001h, 36000012h, 1000012h, 12485600h, 126C0000h
		dd 10000h, 126C56h, 127300h, 91000800h,	73067FA8h, 73220610h
		dd 0A3000012h, 3000012h, 7FB89100h, 12A3h, 12E7h, 0E7560001h
		dd 5C000012h, 3000013h,	7FB89100h, 135Ch, 1369h, 69560001h
		dd 2C000013h, 3000014h,	7FB89100h, 142Ch, 1436h, 36560001h
		dd 6D000014h, 3000014h,	7FB89100h, 146Dh, 1477h, 77560001h
		dd 93000014h, 3000014h,	7FB89100h, 1493h, 14A0h, 0A0560001h
		dd 0BA000014h, 3000014h, 7FB89100h, 14BAh, 14C4h, 0C4560001h
		dd 46000014h, 3000015h,	7FB89100h, 1546h, 1550h, 50560001h
		dd 15000015h, 3000016h,	7FB89100h, 1615h, 1638h, 38560001h
		dd 1000016h, 3000017h, 7FB89100h, 1701h, 1715h,	15560001h
		dd 43000017h, 3000017h,	7FB89100h, 1748h, 1764h, 0B8910003h
		dd 7Fh,	0
		db 0
off_FA89	dd offset loc_104D	; DATA XREF: .debug_info:000084FDo
		dd offset loc_1064
		db 1, 0, 53h
		dd offset unk_10F3
		dd offset unk_11B2
		dd 14530001h, 36000012h, 1000012h, 12485300h, 12ED0000h
		dd 10000h, 135C53h, 136B00h, 53000100h,	142Ch, 1432h, 6D530001h
		dd 73000014h, 1000014h,	14935300h, 14AF0000h, 10000h, 14BA53h
		dd 14CA00h, 53000100h, 1546h, 1556h, 15530001h,	38000016h
		dd 1000016h, 17015300h,	17150000h, 10000h, 53h,	0
		db 0
off_FB15	dd offset loc_104F	; DATA XREF: .debug_info:0000850Bo
		dd offset loc_1068
		db 1, 0, 55h
		dd offset unk_10F3
		dd offset unk_11B2
		dd 14550001h, 36000012h, 1000012h, 12485500h, 17430000h
		dd 10000h, 174855h, 176400h, 55000100h,	2 dup(0)
off_FB54	dd offset sub_125C	; DATA XREF: .debug_info:00008514o
		dd offset loc_1273
		dd 9F300002h, 1292h, 12A3h, 46570001h, 4E000014h, 1000014h
		dd 148A5300h, 14930000h, 10000h, 162B53h, 163300h, 57000100h
		dd 2 dup(0)
off_FB94	dd offset sub_1104	; DATA XREF: .debug_info:00008526o
		dd offset loc_110E
		dd 0E500001h, 83000011h, 2000011h, 834C9100h, 0B1000011h
		dd 1000011h, 11B15200h,	11B20000h, 20000h, 12AE4091h, 12BA0000h
		dd 20000h, 12BA4C91h, 12C30000h, 10000h, 12C352h, 12DD00h
		dd 91000200h, 12DD4Ch, 12DF00h,	52000100h, 12DFh, 135Ch
		dd 40910002h, 135Ch, 136Bh, 6B520001h, 2C000013h, 2000014h
		dd 2C409100h, 38000014h, 1000014h, 14385200h, 146D0000h
		dd 20000h, 146D4091h, 14770000h, 10000h, 147752h, 149300h
		dd 91000200h, 149340h, 14AF00h,	52000100h, 14AFh, 14BAh
		dd 40910002h, 14BAh, 14BCh, 0BC520001h,	46000014h, 2000015h
		dd 46409100h, 4C000015h, 1000015h, 154C5200h, 16150000h
		dd 20000h, 16154091h, 161F0000h, 10000h, 161F52h, 170100h
		dd 91000200h, 170140h, 171500h,	91000200h, 17154Ch, 174300h
		dd 91000200h, 174840h, 176400h,	91000200h, 40h,	0
		db 0
off_FCC9	dd offset loc_1142	; DATA XREF: .debug_info:0000852Fo
					; .debug_info:00008594o
		dd offset unk_1152
		db 1, 0, 52h
		dd offset sub_115E
		dd offset sub_117B
		dd 0C3520001h, 0DD000012h, 1000012h, 17015200h,	17150000h
		dd 10000h, 52h,	0
		db 0
off_FCFD	dd offset sub_1370	; DATA XREF: .debug_info:00008538o
					; .debug_info:0000869Do
		dd offset loc_13D0
		db 1, 0, 57h
		dd offset loc_13D0
		dd offset loc_13D2
		dd 0D2500001h, 2C000013h, 1000014h, 14A65700h, 14BA0000h
		dd 10000h, 163857h, 163F00h, 50000100h,	166Bh, 168Eh, 0BC570001h
		dd 0C6000016h, 1000016h, 16F75700h, 17010000h, 10000h
		dd 171557h, 172500h, 57000100h,	1748h, 1764h, 570001h
		dd 0
		db 3 dup(0)
off_FD73	dd offset sub_118D	; DATA XREF: .debug_info:00008550o
		dd offset loc_11AD+4
		db 1
		dd 11B15100h, 11B20000h, 20000h, 12BA4491h, 12C30000h
		dd 10000h, 12DD51h, 12ED00h, 51000100h,	1345h, 134Ch, 5C570001h
		dd 60000013h, 1000013h,	13605100h, 136B0000h, 20000h, 136B4491h
		dd 13700000h, 10000h, 142C57h, 143800h,	51000100h, 1445h
		dd 144Eh, 6D570001h, 77000014h,	1000014h, 14895100h, 14930000h
		dd 10000h, 149357h, 149700h, 51000100h,	1497h, 14A2h, 44910002h
		dd 14A2h, 14A6h, 0A6570001h, 0AF000014h, 0B000014h, 7FB89100h
		dd 91243206h, 9F220644h, 14BAh,	14C0h, 0C0510001h, 0CA000014h
		dd 2000014h, 21449100h,	2C000015h, 1000015h, 15465700h
		dd 15560000h, 10000h, 15A451h, 15AF00h,	57000100h, 1615h
		dd 161Fh, 510001h, 0
		db 3 dup(0)
off_FE7B	dd offset loc_110B	; DATA XREF: .debug_info:00008559o
		dd offset loc_110E
		db 1
		dd 110E5000h, 11B20000h, 20000h, 12AE4C91h, 17430000h
		dd 20000h, 17484C91h, 17640000h, 20000h, 4C91h,	0
		db 2 dup(0)
off_FEB2	dd offset loc_110E	; DATA XREF: .debug_info:00008576o
		dd offset loc_11AD+4
		dw 1
		dd 12AE50h, 12E300h, 50000100h,	12E3h, 12EDh, 0C730002h
		dd 135Ch, 136Bh, 2C500001h, 38000014h, 1000014h, 146D5000h
		dd 14770000h, 10000h, 149350h, 14AF00h,	50000100h, 14BAh
		dd 14CAh, 46500001h, 48000015h,	1000015h, 15485000h, 15560000h
		dd 20000h, 16150C73h, 161B0000h, 10000h, 161B50h, 163800h
		dd 73000200h, 17010Ch, 171500h,	50000100h, 2 dup(0)
off_FF4C	dd offset unk_12C3	; DATA XREF: .debug_info:000085ADo
		dd offset loc_12DD	; jumptable 000012BC cases 6,13
		dd 1520001h, 15000017h,	1000017h, 5200h, 0
		db 2 dup(0)
off_FF6A	dd offset loc_1438	; DATA XREF: .debug_info:000085D6o
		dd offset loc_1445
		dw 1
		dd 145657h, 146D00h, 57000100h,	2 dup(0)
off_FF88	dd offset loc_1438	; DATA XREF: .debug_info:000085DFo
					; .debug_info:000085FCo
		dd offset loc_143A
		dd 93500006h, 4935204h,	1456h, 145Ch, 93500006h, 4935204h
		dd 2 dup(0)
off_FFB0	dd offset unk_12ED	; DATA XREF: .debug_info:00008636o
		dd offset loc_1345
		dd 4E570001h, 5C000013h, 1000013h, 163F5700h, 164F0000h
		dd 10000h, 169F57h, 16AF00h, 57000100h,	16C6h, 16D7h, 570001h
		dd 0
		db 3 dup(0)
off_FFEF	dd offset unk_12ED	; DATA XREF: .debug_info:0000863Fo
		dd offset loc_134C
		db 1
dword_FFF8	dd 134E5000h, 135C0000h, 10000h, 163F50h, 164F00h, 50000100h
					; DATA XREF: .debug_line:0001AB65o
		dd 169Fh, 16AFh, 0C6500001h, 0D7000016h, 1000016h, 5000h
		dd 0
		db 2 dup(0)
off_1002E	dd offset unk_12ED	; DATA XREF: .debug_info:0000864Do
		dd offset loc_12F7
		dw 2
		dd 12F79F30h, 130B0000h, 20000h, 130B9F31h, 131F0000h
		dd 20000h, 131F9F32h, 13330000h, 20000h, 13339F33h, 13400000h
		dd 20000h, 13409F34h, 13430000h, 10000h
		db 53h,	43h
word_10076	dw 13h			; DATA XREF: .debug_info:00006E88o
		dd 134C00h, 51000100h, 134Eh, 135Ch, 9F300002h,	163Fh
		dd 164Fh, 9F310002h, 169Fh, 16AFh, 9F320002h, 16C6h, 16D7h
		dd 9F330002h, 2	dup(0)
off_100B8	dd offset loc_135C	; DATA XREF: .debug_info:0000866Do
					; jumptable 000012BC cases 5,9,11
		dd offset loc_136B
		dd 0B8910003h, 7Fh, 0
		db 0
off_100CD	dd offset loc_135C	; DATA XREF: .debug_info:00008676o
					; jumptable 000012BC cases 5,9,11
		dd offset loc_136B
		db 1, 0, 55h
		align 10h
off_100E0	dd offset loc_135C	; DATA XREF: .debug_info:0000867Fo
					; jumptable 000012BC cases 5,9,11
		dd offset loc_136B
		dd 44910002h, 2	dup(0)
off_100F4	dd offset unk_1676	; DATA XREF: .debug_info:000086B6o
		dd offset unk_168E
dword_100FC	dd 15570001h, 25000017h, 1000017h, 5700h, 0
					; DATA XREF: .debug_line:0001AB61o
		db 2 dup(0)
off_10112	dd offset loc_13C5	; DATA XREF: .debug_info:000086D5o
		dd offset loc_1427
		dw 1
		dd 142752h, 142C00h, 91000900h,	91067FB4h, 9F22064Ch, 1638h
		dd 163Fh, 6B520001h, 76000016h,	1000016h, 16BC5200h, 16C60000h
		dd 10000h, 16F752h, 170100h, 52000100h,	2 dup(0)
off_10164	dd offset loc_13C5	; DATA XREF: .debug_info:000086DEo
		dd offset loc_13D0
		dd 0D0570001h, 0D2000013h, 1000013h, 13D25000h,	13D90000h
		dd 10000h, 13D957h, 13E400h, 50000100h,	13E4h, 13ECh, 770005h
		dd 0EC9F2537h, 0F7000013h, 1000013h, 13F75000h,	13FF0000h
		dd 50000h, 253E0077h, 13FF9Fh, 140A00h,	50000100h, 140Ah
		dd 1412h, 770005h, 129F2545h, 2C000014h, 1000014h, 16385000h
		dd 163F0000h, 10000h, 166B50h, 167600h,	50000100h, 16BCh
		dd 16C6h, 0F7500001h, 1000016h,	1000017h, 5000h, 0
		db 2 dup(0)
off_10212	dd offset loc_13C5	; DATA XREF: .debug_info:000086ECo
		dd offset loc_13D4
		dw 2
		dd 13D49F30h, 13E70000h, 20000h, 13E79F31h, 13FA0000h
		dd 20000h, 13FA9F32h, 140D0000h, 20000h, 140D9F33h, 14170000h
		dd 20000h, 14179F34h, 141B0000h, 10000h, 141B51h, 142500h
		dd 71000300h, 16389F01h, 163F0000h, 20000h, 166B9F30h
		dd 16760000h, 20000h, 16BC9F31h, 16C60000h, 20000h, 16F79F32h
		dd 17010000h, 20000h, 9F33h, 0
		db 2 dup(0)
off_1029E	dd offset loc_1493	; DATA XREF: .debug_info:0000872Eo
					; jumptable 000012BC cases 2,7,10
		dd offset loc_14AF
		dw 3
		dd 7FB891h, 0
		db 3 dup(0)
off_102B3	dd offset loc_1493	; DATA XREF: .debug_info:00008737o
					; jumptable 000012BC cases 2,7,10
		dd offset loc_14AF
		db 1
		dd offset off_54E0+20h
		dd 0
		db 2 dup(0)
off_102C6	dd offset loc_1493	; DATA XREF: .debug_info:00008740o
					; jumptable 000012BC cases 2,7,10
		dd offset loc_14AF
		dw 2
		dd offset loc_4491
		dd 0
		db 2 dup(0)
off_102DA	dd offset unk_1556	; DATA XREF: .debug_info:00008768o
		dd offset sub_15A4
		dw 1
		dd 15B157h, 161500h, 57000100h,	16AFh, 16BCh, 0E7570001h
		dd 0F7000016h, 1000016h, 17255700h, 17430000h, 10000h
		dd 57h,	0
		db 0
off_10319	dd offset unk_1556	; DATA XREF: .debug_info:00008771o
		dd offset loc_1583
		db 1, 0, 52h
		dd offset loc_1583
		dd offset loc_15A7
		dd 700002h, 15A7h, 15AFh, 7C700002h, 15B1h, 15C8h, 0C8520001h
		dd 15000015h, 2000016h,	0AF007000h, 0BC000016h,	1000016h
		dd 16E75200h, 16F70000h, 20000h, 17250070h, 17430000h
		dd 20000h, 70h,	0
		db 2 dup(0)
off_1037E	dd offset unk_1556	; DATA XREF: .debug_info:0000878Eo
		dd offset sub_15A2
		dw 1
		dd offset loc_55+2
		dd 0
		db 0
off_10391	dd offset unk_1556	; DATA XREF: .debug_info:00008797o
		dd offset loc_1583
		db 1, 0, 52h
		dd offset loc_1583
		dd offset sub_15A2
		dd 700002h, 2 dup(0)
off_103B0	dd offset sub_15B5	; DATA XREF: .debug_info:000087B1o
		dd offset loc_1615	; jumptable 000012BC case 12
		dd 0AF570001h, 0BC000016h, 1000016h, 16E75700h,	16F70000h
		dd 10000h, 172557h, 174300h, 57000100h,	2 dup(0)
off_103E4	dd offset sub_15B5	; DATA XREF: .debug_info:000087BAo
		dd offset loc_1615	; jumptable 000012BC case 12
		dd 0AF520001h, 0BC000016h, 1000016h, 16E75200h,	16F70000h
		dd 10000h, 172552h, 174300h, 52000100h,	2 dup(0)
off_10418	dd offset sub_15B5	; DATA XREF: .debug_info:000087C8o
		dd offset loc_15C5
		dd 9F300002h, 15C5h, 15D9h, 9F310002h, 15D9h, 15EDh, 9F320002h
		dd 15EDh, 1601h, 9F330002h, 1601h, 160Eh, 9F340002h, 160Eh
		dd 1613h, 13530001h, 15000016h,	1000016h, 16AF5100h, 16BC0000h
		dd 20000h, 16E79F30h, 16F70000h, 20000h, 17259F31h, 17340000h
		dd 20000h, 17349F32h, 17430000h, 20000h, 9F33h,	0
		db 2 dup(0)
off_104A2	dd offset unk_14CA	; DATA XREF: .debug_info:000087F3o
		dd offset loc_1521
		dw 1
		dd 152E57h, 154600h, 57000100h,	164Fh, 166Bh, 8E570001h
		dd 9F000016h, 1000016h,	16D75700h, 16E70000h, 10000h, 57h
		dd 0
		db 0
off_104E1	dd offset unk_14CA	; DATA XREF: .debug_info:000087FCo
					; .debug_info:0000884Bo
		dd offset loc_1524
		db 2, 0, 72h
		dd 152400h, 152C00h, 72000200h,	152E7Ch, 153800h, 50000100h
		dd 1538h, 1546h, 720002h, 164Fh, 165Fh,	720002h, 165Fh
		dd 1662h, 62500001h, 6B000016h,	2000016h, 8E007200h, 9F000016h
		dd 2000016h, 0D7007200h, 0E7000016h, 2000016h, 7200h, 0
		db 3 dup(0)
off_10553	dd offset unk_14CA	; DATA XREF: .debug_info:00008819o
		dd offset loc_1521
		db 1
		dd 15385700h, 15460000h, 10000h, 164F57h, 165F00h, 57000100h
		dd 168Eh, 169Fh, 0D7570001h, 0E7000016h, 1000016h, 5700h
		dd 0
		db 2 dup(0)
off_10592	dd offset unk_14CA	; DATA XREF: .debug_info:00008822o
		dd offset loc_152C
		dw 1
		dd 153850h, 154600h, 50000100h,	164Fh, 165Fh, 8E500001h
		dd 9F000016h, 1000016h,	16D75000h, 16E70000h, 10000h, 50h
		dd 0
		db 0
off_105D1	dd offset unk_14CA	; DATA XREF: .debug_info:00008830o
		dd offset loc_14D3
		db 2, 0, 30h
		dd 14D39Fh, 14E700h, 31000200h,	14E79Fh, 14FB00h, 32000200h
		dd 14FB9Fh, 150F00h, 33000200h,	150F9Fh, 151C00h, 34000200h
		dd 151C9Fh, 151F00h, 53000100h,	151Fh, 152Ch, 38510001h
		dd 46000015h, 2000015h,	4F9F3000h, 5F000016h, 2000016h
		dd 8E9F3100h, 9F000016h, 2000016h, 0D79F3200h, 0E7000016h
		dd 2000016h, 9F3300h, 0
		db 3 dup(0)
off_1065B	dd offset loc_161F	; DATA XREF: .debug_info:00008879o
		dd offset loc_162B
		db 7
		dd 32007700h, 22007524h, 162Bh,	1633h, 7F770007h, 752432h
		dd 22h,	0
		db 0
off_10685	dd offset sub_1214	; DATA XREF: .debug_info:0000891Fo
		dd offset unk_1236
		db 2, 0, 30h
		dd 12489Fh, 127300h, 30000200h,	128D9Fh, 12A300h, 56000100h
		dd 12A3h, 12AEh, 9F300002h, 2 dup(0)
off_106BC	dd offset sub_1214	; DATA XREF: .debug_info:00008944o
		dd offset loc_1231+4
		dd 0C730002h, 1248h, 1273h, 0C730002h, 12A3h, 12AEh, 0C730002h
		dd 2 dup(0)
off_106E8	dd offset unk_11D9	; DATA XREF: .debug_info:000089D6o
		dd offset sub_1214
		dd 0BC91000Ah, 0A491067Fh, 9F22067Fh, 1236h, 1248h, 0BC91000Ah
		dd 0A491067Fh, 9F22067Fh, 2 dup(0)
off_10718	dd offset unk_11D9	; DATA XREF: .debug_info:000089DFo
		dd offset loc_1200+4
		dd 36510001h, 48000012h, 1000012h, 5100h, 0
		db 2 dup(0)
off_10736	dd offset unk_11D9	; DATA XREF: .debug_info:000089E8o
		dd offset sub_1214
		dw 1
		dd 123656h, 124800h, 56000100h,	2 dup(0)
off_10754	dd offset unk_11D9	; DATA XREF: .debug_info:000089F1o
		dd offset sub_11F9
		dd 0F9530001h, 4000011h, 3000012h, 9F747200h, 1236h, 1248h
		dd 530001h, 0
		db 3 dup(0)
off_1077F	dd offset loc_123A	; DATA XREF: .debug_info:00008A07o
		dd offset loc_1243
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_10792	dd offset loc_10A8	; DATA XREF: .debug_info:00008A49o
		dd offset loc_10BC
		dw 1
		dd 10BC56h, 10C500h, 91000800h,	75067FBCh, 9F2200h, 0
		db 3 dup(0)
off_107B7	dd offset loc_10A8	; DATA XREF: .debug_info:00008A52o
		dd offset loc_10D9
		db 1
		dd offset aBadProtobufCTy+14h ;	"%u for	packed-repeated"
		dd 0
		db 2 dup(0)
off_107CA	dd offset loc_10B1	; DATA XREF: .debug_info:00008A64o
		dd offset loc_10D4
		dw 1
		dd offset loc_4F+1
		dd 0
		db 0
off_107DD	dd offset _required_field_pack_isra_12 ; DATA XREF: .debug_info:00008BB2o
		dd offset loc_1781
		db 2, 0, 74h
		dd 178104h, 178200h, 74000200h,	178208h, 178300h, 74000200h
		dd 17830Ch, 178400h, 74000200h,	178410h, 178700h, 74000200h
		dd 178714h, 185900h, 74000300h,	185900C0h, 185A0000h, 20000h
		dd 185A1474h, 185B0000h, 20000h, 185B1074h, 185C0000h
		dd 20000h, 185C0C74h, 185D0000h, 20000h, 185D0874h, 18600000h
		dd 20000h, 18600474h, 1C7D0000h, 30000h, 0C074h, 0
		db 3 dup(0)
off_10877	dd offset _required_field_pack_isra_12 ; DATA XREF: .debug_info:00008BC0o
		dd offset loc_179D+4
		db 1
		dd 17A15100h, 183C0000h, 10000h, 183C56h, 185E00h, 0F3000400h
		dd 5E9F5101h, 80000018h, 1000018h, 18805600h, 19000000h
		dd 40000h, 9F5101F3h, 1900h, 1A3Ch, 3C560001h, 0BE00001Ah
		dd 400001Ah, 5101F300h,	1ABE9Fh, 1ACE00h, 56000100h, 1ACEh
		dd 1AE1h, 1F30004h, 1AE19F51h, 1B740000h, 10000h, 1B7456h
		dd 1B8100h, 0F3000400h,	819F5101h, 0AC00001Bh, 100001Bh
		dd 1BAC5600h, 1BC50000h, 40000h, 9F5101F3h, 1BC5h, 1BCFh
		dd 0CF560001h, 0E000001Bh, 400001Bh, 5101F300h,	1BE09Fh
		dd 1BFB00h, 56000100h, 1BFBh, 1C14h, 1F30004h, 1C149F51h
		dd 1C320000h, 10000h, 1C3256h, 1C5A00h,	0F3000400h, 5A9F5101h
		dd 7800001Ch, 100001Ch,	1C785600h, 1C7D0000h, 40000h, 9F5101F3h
		dd 2 dup(0)
off_10984	dd offset loc_17A2	; DATA XREF: .debug_info:00008BE9o
		dd offset loc_17C6
		dd 530001h, 0
		db 3 dup(0)
off_10997	dd offset loc_17D0	; DATA XREF: .debug_info:00008BFBo
					; jumptable 000017C9 case 15
		dd offset loc_183C
		db 1
		dd 183C5600h, 18440000h, 40000h, 9F5101F3h, 1AEBh, 1AFBh
		dd 3560001h, 1200001Bh,	100001Bh, 1BE05600h, 1BEF0000h
		dd 10000h, 1C1456h, 1C2300h, 56000100h,	2 dup(0)
off_109E4	dd offset loc_17D6	; DATA XREF: .debug_info:00008C14o
		dd offset loc_1839
		dd 39520001h, 44000018h, 7000018h, 6009100h, 9F220073h
		dd 1AEBh, 1AFBh, 3520001h, 1200001Bh, 100001Bh,	1BE05200h
		dd 1BEF0000h, 10000h, 1C1452h, 1C2300h,	52000100h, 2 dup(0)
off_10A34	dd offset loc_17D6	; DATA XREF: .debug_info:00008C1Do
		dd offset loc_183C
		dd 3C560001h, 44000018h, 4000018h, 5101F300h, 1AEB9Fh
		dd 1AFB00h, 56000100h, 1B03h, 1B12h, 0E0560001h, 0EF00001Bh
		dd 100001Bh, 1C145600h,	1C230000h, 10000h, 56h,	0
		db 0
off_10A81	dd offset loc_17D8	; DATA XREF: .debug_info:00008C2Bo
		dd offset loc_1844
		db 1, 0, 55h
		dd offset unk_1AEB
		dd offset unk_1AFB
		dd 3550001h, 1200001Bh,	100001Bh, 1BE05500h, 1BEF0000h
		dd 10000h, 1C1455h, 1C2300h, 55000100h,	2 dup(0)
off_10AC0	dd offset loc_17D8	; DATA XREF: .debug_info:00008C49o
		dd offset loc_1839
		dd 39520001h, 44000018h, 7000018h, 6009100h, 9F220073h
		dd 1AEBh, 1AFBh, 3520001h, 1200001Bh, 100001Bh,	1BE05200h
		dd 1BEF0000h, 10000h, 1C1452h, 1C2300h,	52000100h, 2 dup(0)
off_10B10	dd offset loc_17D8	; DATA XREF: .debug_info:00008C52o
		dd offset loc_17EC
		dd 0EC550001h, 0F8000017h, 1000017h, 17F85100h,	18000000h
		dd 50000h, 25370075h, 18009Fh, 180C00h,	51000100h, 180Ch
		dd 1814h, 750005h, 149F253Eh, 20000018h, 1000018h, 18205100h
		dd 18280000h, 50000h, 25450075h, 18289Fh, 184000h, 51000100h
		dd 1AEBh, 1AFBh, 3510001h, 1200001Bh, 100001Bh,	1BE05500h
		dd 1BEF0000h, 10000h, 1C1451h, 1C2300h,	51000100h, 2 dup(0)
off_10BA8	dd offset loc_17D8	; DATA XREF: .debug_info:00008C60o
		dd offset loc_17E7
		dd 9F300002h, 17E7h, 17FBh, 9F310002h, 17FBh, 180Fh, 9F320002h
		dd 180Fh, 1823h, 9F330002h, 1823h, 1832h, 9F340002h, 1832h
		dd 1837h, 37570001h, 44000018h,	1000018h, 1AEB5000h, 1AFB0000h
		dd 20000h, 1B039F31h, 1B120000h, 20000h, 1BE09F30h, 1BEF0000h
		dd 20000h, 1C149F32h, 1C230000h, 20000h, 9F33h,	0
		db 2 dup(0)
off_10C32	dd offset loc_1867	; DATA XREF: .debug_info:00008C82o
		dd offset loc_1900	; jumptable 000017C9 case 0
		dw 1
		dd 1ACE57h, 1AD700h, 57000100h,	1B81h, 1B8Bh, 0AC570001h
		dd 0B600001Bh, 100001Bh, 1BCF5700h, 1BE00000h, 10000h
		dd 1BFB57h, 1C0500h, 57000100h,	1C32h, 1C3Ch, 4B570001h
		dd 5A00001Ch, 100001Ch,	5700h, 0
		db 2 dup(0)
off_10C92	dd offset loc_1867	; DATA XREF: .debug_info:00008C8Bo
		dd offset loc_1879+4
		dw 1
		dd 1B8150h, 1B8600h, 50000100h,	1B86h, 1B8Bh, 760002h
		dd 2 dup(0)
off_10CBC	dd offset loc_1880	; DATA XREF: .debug_info:00008C99o
					; .debug_info:00008CBDo
		dd offset loc_1899
		dd 99500001h, 18h, 1000019h, 1ACE5600h,	1AD70000h, 10000h
		dd 1BAC50h, 1BB600h, 56000100h,	1BCFh, 1BDBh, 0DB500001h
		dd 0E000001Bh, 100001Bh, 1BFB5600h, 1C050000h, 10000h
		dd 1C3256h, 1C3C00h, 56000100h,	1C4Bh, 1C52h, 52500001h
		dd 5A00001Ch, 100001Ch,	5600h, 0
		db 2 dup(0)
off_10D32	dd offset loc_1BCF	; DATA XREF: .debug_info:00008CD6o
		dd offset loc_1BDB
		dw 1
		dd 1BDB50h, 1BE000h, 56000100h,	1C4Bh, 1C52h, 52500001h
		dd 5A00001Ch, 100001Ch,	5600h, 0
		db 2 dup(0)
off_10D66	dd offset loc_18AB	; DATA XREF: .debug_info:00008CF5o
		dd offset loc_18F4
		dw 1
		dd 1BAC57h, 1BB600h, 57000100h,	1BFBh, 1C05h, 32570001h
		dd 3C00001Ch, 100001Ch,	5700h, 0
		db 2 dup(0)
off_10D9A	dd offset loc_18AB	; DATA XREF: .debug_info:00008CFEo
		dd offset loc_18B6
		dw 1
		dd 18B656h, 18C100h, 50000100h,	18C1h, 18C9h, 760005h
		dd 0C99F2537h, 0D4000018h, 1000018h, 18D45000h,	18DC0000h
		dd 50000h, 253E0076h, 18DC9Fh, 18E700h,	50000100h, 18E7h
		dd 18EFh, 760005h, 0EF9F2545h, 0FB000018h, 1000018h, 1BAC5000h
		dd 1BB60000h, 10000h, 1BFB50h, 1C0500h,	50000100h, 1C32h
		dd 1C3Ch, 500001h, 0
		db 3 dup(0)
off_10E27	dd offset loc_18AB	; DATA XREF: .debug_info:00008D0Co
		dd offset loc_18B1
		db 2
		dd 0B19F3000h, 0C4000018h, 2000018h, 0C49F3100h, 0D7000018h
		dd 2000018h, 0D79F3200h, 0EA000018h, 2000018h, 0EA9F3300h
		dd 0F4000018h, 2000018h, 0F49F3400h, 0F7000018h, 1000018h
		dd 18F75200h, 19000000h, 30000h, 0AC9F0172h, 0B600001Bh
		dd 200001Bh, 0FB9F3100h, 500001Bh, 200001Ch, 329F3200h
		dd 3C00001Ch, 200001Ch,	9F3300h, 0
		db 3 dup(0)
off_10EA7	dd offset loc_1904	; DATA XREF: .debug_info:00008D5Ao
		dd offset unk_195B
		db 1
		dd 1B125700h, 1B740000h, 10000h, 1BEF57h, 1BFB00h, 57000100h
		dd 1C23h, 1C32h, 5A570001h, 7800001Ch, 100001Ch, 5700h
		dd 0
		db 2 dup(0)
off_10EE6	dd offset loc_1904	; DATA XREF: .debug_info:00008D63o
		dd offset loc_1937
		dw 1
		dd 193752h, 195B00h, 76000200h,	1B1200h, 1B2600h, 52000100h
		dd 1B26h, 1B74h, 760002h, 1BEFh, 1BFBh,	23520001h, 3200001Ch
		dd 200001Ch, 5A007600h,	7800001Ch, 200001Ch, 7600h, 0
		db 3 dup(0)
off_10F3F	dd offset loc_190C	; DATA XREF: .debug_info:00008D80o
		dd offset unk_195B
		db 1
		dd offset unk_5700
		dd 0
		db 2 dup(0)
off_10F52	dd offset loc_190C	; DATA XREF: .debug_info:00008D89o
		dd offset loc_1937
		dw 1
		dd 193752h, 195B00h, 76000200h,	2 dup(0)
		db 0
off_10F71	dd offset unk_1B12	; DATA XREF: .debug_info:00008DA3o
		dd offset loc_1B74
		db 1, 0, 57h
		dd offset loc_1BEF
		dd offset loc_1BFB
		dd 23570001h, 3200001Ch, 100001Ch, 1C5A5700h, 1C780000h
		dd 10000h, 57h,	0
		db 0
off_10FA5	dd offset unk_1B12	; DATA XREF: .debug_info:00008DACo
		dd offset loc_1B74
		db 1, 0, 52h
		dd offset loc_1BEF
		dd offset loc_1BFB
		dd 23520001h, 3200001Ch, 100001Ch, 1C5A5200h, 1C780000h
		dd 10000h, 52h,	0
		db 0
off_10FD9	dd offset unk_1B12	; DATA XREF: .debug_info:00008DBAo
		dd offset loc_1B23
		db 2, 0, 30h
		dd 1B239Fh, 1B3600h, 31000200h,	1B369Fh, 1B4900h, 32000200h
		dd 1B499Fh, 1B5C00h, 33000200h,	1B5C9Fh, 1B6900h, 34000200h
		dd 1B699Fh, 1B6F00h, 51000100h,	1B6Fh, 1B74h, 0EF500001h
		dd 0FB00001Bh, 200001Bh, 239F3000h, 3200001Ch, 200001Ch
		dd 5A9F3100h, 6900001Ch, 200001Ch, 699F3200h, 7800001Ch
		dd 200001Ch, 9F3300h, 0
		db 3 dup(0)
off_11063	dd offset loc_1960	; DATA XREF: .debug_info:00008DDAo
		dd offset loc_196A
		db 1
		dd 1BA15700h, 1BAC0000h, 10000h, 57h, 0
		db 0
off_11081	dd offset loc_1960	; DATA XREF: .debug_info:00008DE3o
					; .debug_info:00008DFCo
		dd offset loc_196A
		db 1, 0, 50h
		dd offset loc_1BA1
		dd offset loc_1BA3
		dd 0A3500001h, 0AC00001Bh, 200001Bh, 7600h, 0
		db 3 dup(0)
off_110AB	dd offset loc_196A	; DATA XREF: .debug_info:00008E1Bo
		dd offset unk_19C3
		db 1
		dd 1ABE5700h, 1ACE0000h, 10000h, 1AE157h, 1AEB00h, 57000100h
		dd 1AFBh, 1B03h, 0C5570001h, 0CF00001Bh, 100001Bh, 5700h
		dd 0
		db 2 dup(0)
off_110EA	dd offset loc_196A	; DATA XREF: .debug_info:00008E24o
		dd offset unk_19C3
		dw 1
		dd 1ABE50h, 1AC900h, 50000100h,	1AE1h, 1AEBh, 0FB500001h
		dd 300001Ah, 100001Bh, 1BC55000h, 1BCF0000h, 10000h, 50h
		dd 0
		db 0
off_11129	dd offset loc_196A	; DATA XREF: .debug_info:00008E32o
		dd offset loc_197A
		db 2, 0, 30h
		dd 197A9Fh, 198E00h, 31000200h,	198E9Fh, 19A200h, 32000200h
		dd 19A29Fh, 19B600h, 33000200h,	19B69Fh, 19C300h, 34000200h
		dd 1ABE9Fh, 1AC200h, 30000200h,	1AC29Fh, 1AC500h, 52000100h
		dd 1AC5h, 1ACEh, 1720003h, 1AE19Fh, 1AEB00h, 32000200h
		dd 1AFB9Fh, 1B0300h, 31000200h,	1BC59Fh, 1BCF00h, 33000200h
		dd 9Fh,	0
		db 0
off_111B5	dd offset loc_19C9	; DATA XREF: .debug_info:00008E51o
		dd offset loc_19CF
		db 1, 0, 50h
		dd offset loc_19CF
		dd offset loc_19D4	; jumptable 000017C9 cases 3,8
		dd 760002h, 2 dup(0)
off_111D4	dd offset loc_19C9	; DATA XREF: .debug_info:00008E5Ao
		dd offset loc_19D4	; jumptable 000017C9 cases 3,8
		dd 770006h, 9F220073h, 2 dup(0)
off_111EC	dd offset loc_19F0	; DATA XREF: .debug_info:00008E78o
		dd offset unk_19FE
		dd 8B510001h, 0A100001Bh, 100001Bh, 5100h, 0
		db 2 dup(0)
off_1120A	dd offset loc_19F0	; DATA XREF: .debug_info:00008E81o
					; .debug_info:00008E9Ao
		dd offset loc_19FA
		dw 6
		dd 52049350h, 1B8B0493h, 1B8D0000h, 60000h, 52049350h
		dd 493h, 0
		db 2 dup(0)
off_11232	dd offset loc_1A08	; DATA XREF: .debug_info:00008EB9o
		dd offset unk_1A17
		dw 6
		dd 730077h, 9F22h, 0
		db 2 dup(0)
off_1124A	dd offset loc_1A08	; DATA XREF: .debug_info:00008EC2o
		dd offset loc_1A12
		dw 6
		dd 52049350h, 493h, 0
		db 2 dup(0)
off_11262	dd offset loc_1A24	; DATA XREF: .debug_info:00008EE0o
					; jumptable 000017C9 case 12
		dd offset loc_1A34	; jumptable 000017C9 case 14
		dw 2
		dd offset loc_75+1
		dd 0
		db 2 dup(0)
off_11276	dd offset loc_1A24	; DATA XREF: .debug_info:00008EE9o
					; jumptable 000017C9 case 12
		dd offset loc_1A34	; jumptable 000017C9 case 14
		dw 6
		dd 730077h, 9F22h, 0
		db 2 dup(0)
off_1128E	dd offset loc_1A3C	; DATA XREF: .debug_info:00008F07o
		dd offset loc_1AB1
		dw 1
		dd 1AB152h, 1ABE00h, 91000700h,	730600h, 1AD79F22h, 1AE10000h
		dd 10000h, 1B7452h, 1B8100h, 52000100h,	1BB6h, 1BC5h, 5520001h
		dd 1400001Ch, 100001Ch,	1C3C5200h, 1C4B0000h, 10000h, 52h
		dd 0
		db 0
off_112E9	dd offset loc_1A3C	; DATA XREF: .debug_info:00008F10o
		dd offset loc_1AB7
		db 1, 0, 56h
		dd offset loc_1AB7
		dd offset unk_1ABE
		dd 1F30003h, 1AD751h, 1AE100h, 56000100h, 1B74h, 1B81h
		dd 0B6560001h, 0C500001Bh, 100001Bh, 1C055600h,	1C140000h
		dd 10000h, 1C3C56h, 1C4B00h, 56000100h,	2 dup(0)
off_11340	dd offset loc_1A54	; DATA XREF: .debug_info:00008F1Eo
		dd offset loc_1AB9
		dd 0D7500001h, 0E100001Ah, 100001Ah, 1BB65000h,	1BC50000h
		dd 10000h, 1C0550h, 1C1400h, 50000100h,	1C3Ch, 1C4Bh, 500001h
		dd 0
		db 3 dup(0)
off_1137F	dd offset loc_1A54	; DATA XREF: .debug_info:00008F3Co
		dd offset loc_1AB1
		db 1
		dd 1AB15200h, 1ABE0000h, 70000h, 73060091h, 0D79F2200h
		dd 0E100001Ah, 100001Ah, 1BB65200h, 1BC50000h, 10000h
		dd 1C0552h, 1C1400h, 52000100h,	1C3Ch, 1C4Bh, 520001h
		dd 0
		db 3 dup(0)
off_113CF	dd offset loc_1A54	; DATA XREF: .debug_info:00008F45o
		dd offset loc_1A65
		db 1
		dd 1A655000h, 1A710000h, 10000h, 1A7151h, 1A7900h, 70000500h
		dd 9F253700h, 1A79h, 1A85h, 85510001h, 8D00001Ah, 500001Ah
		dd 3E007000h, 1A8D9F25h, 1A990000h, 10000h, 1A9951h, 1AA100h
		dd 70000500h, 9F254500h, 1AA1h,	1AB5h, 0D7510001h, 0E100001Ah
		dd 100001Ah, 1BB65000h,	1BC50000h, 10000h, 1C0551h, 1C1400h
		dd 51000100h, 1C3Ch, 1C4Bh, 510001h, 0
		db 3 dup(0)
off_11467	dd offset loc_1A54	; DATA XREF: .debug_info:00008F53o
		dd offset loc_1A60
		db 2
		dd 609F3000h, 7400001Ah, 200001Ah, 749F3100h, 8800001Ah
		dd 200001Ah, 889F3200h,	9C00001Ah, 200001Ah, 9C9F3300h
		dd 0AB00001Ah, 200001Ah, 0AB9F3400h, 0AF00001Ah, 100001Ah
		dd 1AAF5700h, 1ABE0000h, 10000h, 1AD755h, 1AE100h, 30000200h
		dd 1BB69Fh, 1BC500h, 31000200h,	1C059Fh, 1C1400h, 32000200h
		dd 1C3C9Fh, 1C4B00h, 33000200h,	9Fh, 0
		db 0
off_114F1	dd offset _protobuf_c_message_pack_to_buffer
					; DATA XREF: .debug_info:0000917Ao
		dd offset loc_1C81
		db 2, 0, 74h
		dd 1C8104h, 1C8200h, 74000200h,	1C8208h, 1C8300h, 74000200h
		dd 1C830Ch, 1C8400h, 74000200h,	1C8410h, 1C8700h, 74000200h
		dd 1C8714h, 1E0000h, 74000300h,	1E000190h, 1E010000h, 20000h
		dd 1E011474h, 1E020000h, 20000h, 1E021074h, 1E030000h
		dd 20000h, 1E030C74h, 1E040000h, 20000h, 1E040874h, 1E080000h
		dd 20000h, 1E080474h, 27A80000h, 30000h, 19074h, 0
		db 3 dup(0)
off_1158B	dd offset loc_1CB2	; DATA XREF: .debug_info:000091ABo
		dd offset loc_1CD7
		db 2
		dd 6C9F3000h, 8000001Dh, 300001Dh, 7F9C9100h, 1D80h, 1D93h
		dd 9F300002h, 1DE0h, 1DE9h, 19550001h, 29000026h, 2000026h
		dd 9F3000h, 0
		db 3 dup(0)
off_115CF	dd offset loc_1CA4	; DATA XREF: .debug_info:000091BAo
		dd offset loc_1CD7
		db 2
		dd 629F3000h, 500001Dh,	300001Eh, 7F909100h, 1E0Eh, 1E13h
		dd 90910003h, 1E3F7Fh, 1E4400h,	91000300h, 26197F90h, 26290000h
		dd 20000h, 276B9F30h, 27700000h, 30000h, 707F9091h, 8C000027h
		dd 2000027h, 9F3000h, 0
		db 3 dup(0)
off_1162F	dd offset loc_1CDF	; DATA XREF: .debug_info:000091D3o
		dd offset loc_1D68
		db 1
		dd 1E055700h, 1E0A0000h, 10000h, 1E1357h, 1EA900h, 57000100h
		dd 1EA9h, 1EDFh, 0AC910003h, 1EDF7Fh, 1F3B00h, 57000100h
		dd 1FEBh, 200Ch, 0C570001h, 59000020h, 3000020h, 7FA49100h
		dd 2059h, 2074h, 74570001h, 0B4000020h,	3000020h, 7FA49100h
		dd 20B4h, 2168h, 0C3570001h, 0CE000024h, 1000024h, 24EE5700h
		dd 25060000h, 10000h, 250657h, 253600h,	91000300h, 25367FA4h
		dd 254E0000h, 10000h, 254E57h, 256600h,	91000300h, 25667FA4h
		dd 25730000h, 10000h, 258B57h, 25A200h,	91000300h, 25D47FA4h
		dd 25EA0000h, 10000h, 25F657h, 261900h,	91000300h, 264A7FA4h
		dd 267A0000h, 30000h, 967FA491h, 0BA000026h, 3000026h
		dd 7FA49100h, 26BAh, 26DAh, 0EA570001h,	0E000026h, 3000027h
		dd 7FA49100h, 271Eh, 2732h, 32570001h, 6B000027h, 3000027h
		dd 7FA49100h, 2	dup(0)
off_11760	dd offset loc_1CE6	; DATA XREF: .debug_info:000091E3o
		dd offset loc_1D03
		dd 3510001h, 2500001Dh,	900001Dh, 7F8C9100h, 6147706h
		dd 1D4E9F22h, 1D5D0000h, 10000h, 1E0551h, 1E0A00h, 91000900h
		dd 77067F8Ch, 9F220614h, 1E13h,	1E34h, 44510001h, 6500001Eh
		dd 900001Eh, 7F8C9100h,	6147706h, 1E669F22h, 1E780000h
		dd 10000h, 1E8251h, 1EA900h, 91000900h,	77067F8Ch, 9F220614h
		dd 1EA9h, 1EADh, 8C91000Dh, 0AC91067Fh,	1423067Fh, 0DF9F2206h
		dd 0EA00001Eh, 900001Eh, 7F8C9100h, 6147706h, 9F22h, 0
		db 2 dup(0)
off_1180A	dd offset loc_1CE9	; DATA XREF: .debug_info:000091F3o
		dd offset loc_1CF4
		dw 8
		dd 67F8C91h, 9F220073h,	1CF4h, 1CFDh, 0FD530001h, 2500001Ch
		dd 900001Dh, 7F8C9100h,	6107706h, 1D4E9F22h, 1D660000h
		dd 80000h, 67F8C91h, 9F220073h,	1E05h, 1E0Ah, 8C910009h
		dd 1077067Fh, 139F2206h, 3900001Eh, 100001Eh, 1E445300h
		dd 1E650000h, 90000h, 67F8C91h,	22061077h, 1E669Fh, 1E7800h
		dd 53000100h, 1E82h, 1EA9h, 8C910009h, 1077067Fh, 0A99F2206h
		dd 0AD00001Eh, 0D00001Eh, 7F8C9100h, 7FAC9106h,	6102306h
		dd 1EDF9F22h, 1EEA0000h, 90000h, 67F8C91h, 22061077h, 9Fh
		dd 0
		db 0
off_118CD	dd offset loc_1D01	; DATA XREF: .debug_info:00009210o
		dd offset unk_1D4E
		db 1, 0, 55h
		dd offset unk_1E05
		dd offset unk_1E13
		dd 44550001h, 6600001Eh, 100001Eh, 1E785500h, 217A0000h
		dd 10000h, 217A55h, 220700h, 56000100h,	2207h, 220Fh, 0F550001h
		dd 0A9000022h, 1000022h, 22A95600h, 24B70000h, 10000h
		dd 24B755h, 24BA00h, 56000100h,	24BAh, 24CEh, 0CE550001h
		dd 0EE000024h, 1000024h, 24EE5600h, 257E0000h, 10000h
		dd 257E55h, 258B00h, 56000100h,	258Bh, 25A2h, 0A2550001h
		dd 0C2000025h, 1000025h, 25C25600h, 26190000h, 10000h
		dd 262955h, 264A00h, 56000100h,	264Ah, 276Bh, 8C550001h
		dd 0A8000027h, 1000027h, 5500h,	0
		db 2 dup(0)
off_119A6	dd offset loc_1D01	; DATA XREF: .debug_info:00009219o
		dd offset loc_1D03
		dw 1
		dd 1D0351h, 1D2500h, 91000900h,	77067F8Ch, 9F220614h, 1E05h
		dd 1E0Ah, 8C910009h, 1477067Fh,	449F2206h, 6500001Eh, 900001Eh
		dd 7F8C9100h, 6147706h,	1E829F22h, 1EA90000h, 90000h, 67F8C91h
		dd 22061477h, 1EA99Fh, 1EAD00h,	91000D00h, 91067F8Ch, 23067FACh
		dd 9F220614h, 1EDFh, 1EEAh, 8C910009h, 1477067Fh, 9F2206h
		dd 0
		db 3 dup(0)
off_11A2F	dd offset loc_1D01	; DATA XREF: .debug_info:00009222o
		dd offset unk_1D4E
		db 1
		dd 1E055300h, 1E0A0000h, 10000h, 1E0A53h, 1E1300h, 91000300h
		dd 1E447F94h, 1E660000h, 10000h, 1E7853h, 1E9A00h, 53000100h
		dd 1E9Ah, 1EA9h, 8C910008h, 1077067Fh, 1EA92206h, 1EAD0000h
		dd 0C0000h, 67F8C91h, 67FAC91h,	22061023h, 1EADh, 1EDFh
		dd 94910003h, 1EDF7Fh, 1EF200h,	53000100h, 1EF2h, 1F30h
		dd 94910003h, 1F307Fh, 1F3400h,	53000100h, 1F34h, 1FEBh
		dd 94910003h, 1FEB7Fh, 1FF300h,	53000100h, 1FF3h, 2059h
		dd 94910003h, 20597Fh, 206400h,	53000100h, 2064h, 20B4h
		dd 94910003h, 20B47Fh, 20B800h,	53000100h, 20B8h, 20C4h
		dd 94910003h, 20C47Fh, 20C800h,	53000100h, 20C8h, 20D1h
		dd 94910003h, 20D17Fh, 20D900h,	53000100h, 20D9h, 211Ah
		dd 94910003h, 211A7Fh, 212200h,	53000100h, 2122h, 2619h
		dd 94910003h, 26297Fh, 276B00h,	91000300h, 278C7F94h, 27A80000h
		dd 30000h, 7F9491h, 0
		db 3 dup(0)
off_11B7F	dd offset loc_1D01	; DATA XREF: .debug_info:0000922Bo
		dd offset unk_1D4E
		db 1
		dd 1E055700h, 1E0A0000h, 10000h, 1E4457h, 1E6600h, 57000100h
		dd 1E78h, 1EA9h, 0A9570001h, 0DF00001Eh, 300001Eh, 7FAC9100h
		dd 1EDFh, 1F3Bh, 0EB570001h, 0C00001Fh,	1000020h, 200C5700h
		dd 20590000h, 30000h, 597FA491h, 74000020h, 1000020h, 20745700h
		dd 20B40000h, 30000h, 0B47FA491h, 68000020h, 1000021h
		dd 24C35700h, 24CE0000h, 10000h, 24EE57h, 250600h, 57000100h
		dd 2506h, 2536h, 0A4910003h, 25367Fh, 254E00h, 57000100h
		dd 254Eh, 2566h, 0A4910003h, 25667Fh, 257300h, 57000100h
		dd 258Bh, 25A2h, 0A4910003h, 25D47Fh, 25EA00h, 57000100h
		dd 25F6h, 2619h, 0A4910003h, 264A7Fh, 267A00h, 91000300h
		dd 26967FA4h, 26BA0000h, 30000h, 0BA7FA491h, 0DA000026h
		dd 1000026h, 26EA5700h,	270E0000h, 30000h, 1E7FA491h, 32000027h
		dd 1000027h, 27325700h,	276B0000h, 30000h, 7FA491h, 0
		db 3 dup(0)
off_11CBB	dd offset loc_1D07	; DATA XREF: .debug_info:00009239o
		dd offset loc_1D21+4
		db 1
		dd 1D255100h, 1D4E0000h, 30000h, 57FA891h, 0A00001Eh, 100001Eh
		dd 1E445100h, 1E650000h, 10000h, 1E6551h, 1E6600h, 91000300h
		dd 1E787FA8h, 1E820000h, 30000h, 827FA891h, 9F00001Eh
		dd 100001Eh, 1E9F5100h,	1EA90000h, 80000h, 67F8C91h, 22061477h
		dd 1EA9h, 1EADh, 8C91000Ch, 0AC91067Fh,	1423067Fh, 1ECB2206h
		dd 1ED40000h, 10000h, 1EDF56h, 1EEA00h,	51000100h, 1EEAh
		dd 2619h, 0A8910003h, 26297Fh, 276B00h,	91000300h, 278C7FA8h
		dd 27A80000h, 30000h, 7FA891h, 0
		db 3 dup(0)
off_11D7B	dd offset loc_1D28	; DATA XREF: .debug_info:00009253o
		dd offset loc_1D49+4
		db 1
		dd 1D4D5000h, 1D4E0000h, 10000h, 1E7856h, 1E7B00h, 50000100h
		dd 1E7Bh, 1E82h, 0EA560001h, 3B00001Eh,	100001Fh, 1FB35600h
		dd 1FC40000h, 10000h, 1FC451h, 1FEB00h,	91000300h, 1FEB7FA4h
		dd 200A0000h, 10000h, 200A56h, 205900h,	91000300h, 20597FACh
		dd 21680000h, 10000h, 216856h, 24AE00h,	91000300h, 24B77FA4h
		dd 24C30000h, 30000h, 0C37FA491h, 0CE000024h, 1000024h
		dd 24CE5600h, 24EE0000h, 30000h, 0EE7FA491h, 1E000024h
		dd 1000025h, 251E5600h,	25360000h, 30000h, 367FAC91h, 4E000025h
		dd 1000025h, 254E5600h,	25660000h, 30000h, 667FAC91h, 73000025h
		dd 1000025h, 257E5600h,	258B0000h, 30000h, 8B7FA491h, 96000025h
		dd 3000025h, 7FAC9100h,	2596h, 25A2h, 0A2560001h, 0D4000025h
		dd 3000025h, 7FA49100h,	25D4h, 25EAh, 0F6560001h, 9000025h
		dd 3000026h, 7FAC9100h,	2609h, 2619h, 29560001h, 4A000026h
		dd 3000026h, 7FA49100h,	264Ah, 2661h, 0AC910003h, 26617Fh
		dd 267A00h, 56000100h, 267Ah, 268Ch, 0A4910003h, 26967Fh
		dd 26A800h, 56000100h, 26A8h, 26BAh, 0AC910003h, 26BA7Fh
		dd 26DA00h, 56000100h, 26DAh, 26EAh, 0A4910003h, 26EA7Fh
		dd 26FC00h, 56000100h, 26FCh, 270Eh, 0AC910003h, 270E7Fh
		dd 271E00h, 91000300h, 271E7FA4h, 27420000h, 10000h, 274256h
		dd 275E00h, 91000300h, 275E7FACh, 276B0000h, 10000h, 278C56h
		dd 27A800h, 91000300h, 7FA4h, 0
		db 2 dup(0)
off_11F6E	dd offset loc_1D28	; DATA XREF: .debug_info:0000927Ao
		dd offset unk_1D4E
		dw 3
		dd 787FA891h, 8200001Eh, 300001Eh, 7FA89100h, 1EEAh, 2619h
		dd 0A8910003h, 26297Fh,	276B00h, 91000300h, 278C7FA8h
		dd 27A80000h, 30000h, 7FA891h, 0
		db 3 dup(0)
off_11FB7	dd offset loc_1D28	; DATA XREF: .debug_info:00009283o
		dd offset unk_1D4E
		db 3
		dd 7F949100h, 1E78h, 1E82h, 94910003h, 1EEA7Fh,	261900h
		dd 91000300h, 26297F94h, 276B0000h, 30000h, 8C7F9491h
		dd 0A8000027h, 3000027h, 7F949100h, 2 dup(0)
off_12000	dd offset loc_1D28	; DATA XREF: .debug_info:00009296o
		dd offset unk_1D4E
		dd 9F300002h, 1E78h, 1E82h, 9F300002h, 1EEAh, 1F01h, 9F300002h
		dd 1F17h, 1F22h, 30530001h, 3B00001Fh, 200001Fh, 0EB9F3000h
		dd 0C00001Fh, 2000020h,	1C9F3000h, 27000020h, 1000020h
		dd 20595300h, 20740000h, 20000h, 20849F30h, 208F0000h
		dd 10000h, 20B451h, 20C800h, 30000200h,	20D19Fh, 20E800h
		dd 30000200h, 20FB9Fh, 210200h,	53000100h, 211Ah, 2131h
		dd 9F300002h, 2150h, 215Bh, 0F6530001h,	9000025h, 1000026h
		dd 26095300h, 26190000h, 10000h, 51h, 0
		db 0
off_120C1	dd offset loc_20E8	; DATA XREF: .debug_info:000092C2o
					; .debug_info:00009313o
		dd offset loc_20FE
		db 2, 0, 70h
		dd 20FE00h, 210200h, 70000200h,	21047Ch, 210E00h, 52000100h
		dd 210Eh, 211Ah, 700002h, 2536h, 254Eh,	700002h, 2566h
		dd 256Ah, 6A520001h, 73000025h,	2000025h, 0BA007000h, 0CA000026h
		dd 2000026h, 7000h, 0
		db 3 dup(0)
off_12127	dd offset loc_20E8	; DATA XREF: .debug_info:000092DFo
		dd offset loc_20F9
		db 1
		dd 210E5200h, 21180000h, 10000h, 253652h, 254900h, 52000100h
		dd 26BAh, 26C2h, 520001h, 0
		db 3 dup(0)
off_1215B	dd offset unk_2536	; DATA XREF: .debug_info:000092F8o
		dd offset loc_2549
		db 1
		dd 26BA5200h, 26C20000h, 10000h, 52h, 0
		db 0
off_12179	dd offset unk_1F01	; DATA XREF: .debug_info:0000933Do
		dd offset loc_1F15
		db 1, 0, 52h
		dd offset loc_1F15
		dd offset loc_1F1A
		dd 700002h, 1F1Ah, 1F22h, 7C700002h, 1F24h, 1F2Eh, 2E520001h
		dd 3000001Fh, 200001Fh,	0EE007000h, 1000024h, 1000025h
		dd 25015200h, 25060000h, 20000h, 26CA0070h, 26D20000h
		dd 10000h, 26D252h, 26DA00h, 70000200h,	2 dup(0)
		db 0
off_121E9	dd offset unk_24EE	; DATA XREF: .debug_info:00009356o
		dd offset loc_2501
		db 1, 0, 52h
		dd offset loc_2501
		dd offset unk_2506
		dd 700002h, 26CAh, 26D2h, 0D2520001h, 0DA000026h, 2000026h
		dd 7000h, 0
		db 3 dup(0)
off_1221F	dd offset loc_202C	; DATA XREF: .debug_info:00009380o
					; .debug_info:000093FAo
		dd offset loc_2036
		db 6
		dd 4935000h, 4E049352h,	52000025h, 6000025h, 4935000h
		dd 49352h, 0
		db 3 dup(0)
off_12247	dd offset loc_200C	; DATA XREF: .debug_info:0000939Do
		dd offset loc_2027
		db 6
		dd 4935000h, 38049352h,	59000020h, 6000020h, 4935000h
		dd 1E049352h, 36000025h, 6000025h, 4935000h, 8B049352h
		dd 96000025h, 6000025h,	4935000h, 0F6049352h, 9000025h
		dd 6000026h, 4935000h, 4A049352h, 61000026h, 6000026h
		dd 4935000h, 0A8049352h, 0BA000026h, 6000026h, 4935000h
		dd 0FC049352h, 0E000026h, 6000027h, 4935000h, 42049352h
		dd 5E000027h, 6000027h,	4935000h, 49352h, 0
		db 3 dup(0)
off_122DF	dd offset loc_200C	; DATA XREF: .debug_info:000093ABo
		dd offset loc_2027
		db 1
		dd 203A5200h, 20590000h, 10000h, 251E52h, 253600h, 52000100h
		dd 258Bh, 2596h, 0F6520001h, 9000025h, 1000026h, 264A5200h
		dd 26610000h, 10000h, 26A852h, 26BA00h,	52000100h, 26FCh
		dd 270Eh, 42520001h, 5E000027h,	1000027h, 5200h, 0
		db 2 dup(0)
off_1234A	dd offset loc_203E	; DATA XREF: .debug_info:000093C4o
		dd offset loc_2059	; jumptable 00001E7B cases 3,8
		dw 1
		dd 258B50h, 259600h, 50000100h,	264Ah, 2661h, 42500001h
		dd 51000027h, 1000027h,	5000h, 0
		db 2 dup(0)
off_1237E	dd offset unk_264A	; DATA XREF: .debug_info:000093DDo
		dd offset unk_2661
		dw 1
		dd 274250h, 275100h, 50000100h,	2 dup(0)
off_1239C	dd offset loc_2074	; DATA XREF: .debug_info:00009424o
		dd offset loc_2082
		dd 93570006h, 4935204h,	2082h, 2087h, 93570007h, 93047004h
		dd 208704h, 208F00h, 57000700h,	7C700493h, 20940493h, 20B20000h
		dd 60000h, 52049357h, 20B20493h, 20B40000h, 70000h, 70049357h
		dd 6049304h, 19000025h,	6000025h, 4935700h, 19049352h
		dd 1E000025h, 7000025h,	4935700h, 4930470h, 2596h, 259Dh
		dd 93570006h, 4935204h,	259Dh, 25A2h, 93570007h, 93047004h
		dd 260904h, 261000h, 57000700h,	7C700493h, 26100493h, 26190000h
		dd 80000h, 4937870h, 4937C70h, 2661h, 2675h, 93570006h
		dd 4935204h, 2675h, 267Ah, 93570007h, 93047004h, 269604h
		dd 26A300h, 57000600h, 93520493h, 26A304h, 26A800h, 57000700h
		dd 4700493h, 26EA0493h,	26F70000h, 60000h, 52049357h, 26F70493h
		dd 26FC0000h, 70000h, 70049357h, 32049304h, 3A000027h
		dd 6000027h, 4935700h, 3A049352h, 42000027h, 7000027h
		dd 4935700h, 4930470h, 275Eh, 2761h, 93570006h,	4935204h
		dd 2761h, 276Bh, 93570007h, 93047004h, 4, 0
		db 0
off_12501	dd offset loc_2074	; DATA XREF: .debug_info:00009432o
		dd offset loc_2082
		db 1, 0, 52h
		dd offset loc_2082
		dd offset loc_2087
		dd 4700002h, 2087h, 208Fh, 7C700002h, 2094h, 20B2h, 0B2520001h
		dd 0B4000020h, 2000020h, 6047000h, 19000025h, 1000025h
		dd 25195200h, 251E0000h, 20000h, 25960470h, 259D0000h
		dd 10000h, 259D52h, 25A200h, 70000200h,	260904h, 261900h
		dd 70000200h, 26617Ch, 267500h,	52000100h, 2675h, 267Ah
		dd 4700002h, 2696h, 26A3h, 0A3520001h, 0A8000026h, 2000026h
		dd 0EA047000h, 0F7000026h, 1000026h, 26F75200h,	26FC0000h
		dd 20000h, 27320470h, 273A0000h, 10000h, 273A52h, 274200h
		dd 70000200h, 275E04h, 276100h,	52000100h, 2761h, 276Bh
		dd 4700002h, 2 dup(0)
off_125F0	dd offset loc_2098	; DATA XREF: .debug_info:0000944Bo
		dd offset loc_20B4	; jumptable 00001E7B cases 2,7,10
		dd 96570001h, 0A2000025h, 1000025h, 26615700h, 267A0000h
		dd 10000h, 273257h, 274200h, 57000100h,	2 dup(0)
off_12624	dd offset unk_2661	; DATA XREF: .debug_info:00009464o
		dd offset unk_267A
		dd 32570001h, 42000027h, 1000027h, 5700h, 0
		db 2 dup(0)
off_12642	dd offset unk_2131	; DATA XREF: .debug_info:00009490o
		dd offset loc_214E
		dw 1
		dd 214E52h, 215300h, 70000200h,	215300h, 215B00h, 70000200h
		dd 215D7Ch, 216600h, 52000100h,	2166h, 2168h, 700002h
		dd 24C3h, 24C9h, 0C9520001h, 0CE000024h, 2000024h, 0D4007000h
		dd 0E5000025h, 1000025h, 25E55200h, 25EA0000h, 20000h
		dd 271E0070h, 27270000h, 10000h, 272752h, 273200h, 70000200h
		dd 2 dup(0)
		db 0
off_126C9	dd offset loc_25D4	; DATA XREF: .debug_info:000094A9o
		dd offset loc_25E5
		db 1, 0, 52h
		dd offset loc_25E5
		dd offset unk_25EA
		dd 700002h, 271Eh, 2727h, 27520001h, 32000027h,	2000027h
		dd 7000h, 0
		db 3 dup(0)
off_126FF	dd offset loc_1FC5	; DATA XREF: .debug_info:000094F1o
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		db 1
		dd 21685500h, 217A0000h, 10000h, 217A55h, 220700h, 56000100h
		dd 2207h, 220Fh, 0F550001h, 0A9000022h,	1000022h, 22A95600h
		dd 24AE0000h, 10000h, 24B755h, 24BA00h,	56000100h, 24BAh
		dd 24C3h, 0CE550001h, 0EE000024h, 1000024h, 257E5600h
		dd 258B0000h, 10000h, 25A256h, 25C200h,	56000100h, 25C2h
		dd 25D4h, 29550001h, 4A000026h,	1000026h, 267A5600h, 268C0000h
		dd 10000h, 26DA55h, 26EA00h, 55000100h,	270Eh, 271Eh, 8C550001h
		dd 0A8000027h, 1000027h, 5500h,	0
		db 2 dup(0)
off_127C2	dd offset loc_1FC5	; DATA XREF: .debug_info:000094FAo
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		dw 3
		dd 687FA891h, 0AE000021h, 3000024h, 7FA89100h, 24B7h, 24C3h
		dd 0A8910003h, 24CE7Fh,	24EE00h, 91000300h, 257E7FA8h
		dd 258B0000h, 30000h, 0A27FA891h, 0D4000025h, 3000025h
		dd 7FA89100h, 2629h, 264Ah, 0A8910003h,	267A7Fh, 268C00h
		dd 91000300h, 26DA7FA8h, 26EA0000h, 30000h, 0E7FA891h
		dd 1E000027h, 3000027h,	7FA89100h, 278Ch, 27A8h, 0A8910003h
		dd 7Fh,	0
		db 0
off_12859	dd offset loc_1FC5	; DATA XREF: .debug_info:00009503o
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		db 3, 0, 91h
		dd 21687F94h, 24AE0000h, 30000h, 0B77F9491h, 0C3000024h
		dd 3000024h, 7F949100h,	24CEh, 24EEh, 94910003h, 257E7Fh
		dd 258B00h, 91000300h, 25A27F94h, 25D40000h, 30000h, 297F9491h
		dd 4A000026h, 3000026h,	7F949100h, 267Ah, 268Ch, 94910003h
		dd 26DA7Fh, 26EA00h, 91000300h,	270E7F94h, 271E0000h, 30000h
		dd 8C7F9491h, 0A8000027h, 3000027h, 7F949100h, 2 dup(0)
off_128F0	dd offset loc_1FC5	; DATA XREF: .debug_info:0000951Fo
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		dd 9F300002h, 2168h, 217Ah, 9F300002h, 21E5h, 21F0h, 7570001h
		dd 0F000022h, 2000022h,	799F3000h, 84000022h, 1000022h
		dd 22A95700h, 22B30000h, 20000h, 22FD9F30h, 23070000h
		dd 20000h, 23319F30h, 23380000h, 10000h, 235656h, 235E00h
		dd 30000200h, 238C9Fh, 239C00h,	56000100h, 239Ch, 23A2h
		dd 9F300002h, 240Dh, 2418h, 87570001h, 8C000024h, 2000024h
		dd 8C9F3000h, 0A7000024h, 3000024h, 7F949100h, 24A7h, 24ACh
		dd 9F300002h, 24ACh, 24AEh, 94910003h, 24B77Fh,	24C300h
		dd 57000100h, 2	dup(0)
off_129C0	dd offset loc_21E6	; DATA XREF: .debug_info:00009528o
		dd offset loc_21F0
		dd 7A530001h, 84000022h, 1000022h, 22D55300h, 22D90000h
		dd 10000h, 233253h, 233800h, 53000100h,	238Dh, 239Ch, 0E530001h
		dd 18000024h, 1000024h,	24B75300h, 24C30000h, 10000h, 53h
		dd 0
		db 0
off_12A15	dd offset unk_217A	; DATA XREF: .debug_info:0000955Co
		dd offset loc_21D6
		db 4, 0, 91h
		dd 0D69F7FB8h, 0E2000021h, 1000021h, 21E25000h,	21F00000h
		dd 40000h, 9F7FB891h, 21F7h, 2205h, 0B8910004h,	22059F7Fh
		dd 22070000h, 10000h, 24DE51h, 24EE00h,	91000400h, 0B29F7FB8h
		dd 0C2000025h, 4000025h, 7FB89100h, 263A9Fh, 264A00h, 91000400h
		dd 9F7FB8h, 0
		db 3 dup(0)
off_12A87	dd offset unk_217A	; DATA XREF: .debug_info:00009565o
		dd offset loc_21D6
		db 1
		dd 21F75000h, 22070000h, 10000h, 24DE50h, 24EE00h, 50000100h
		dd 25B2h, 25C2h, 3A500001h, 4A000026h, 1000026h, 5000h
		dd 0
		db 2 dup(0)
off_12AC6	dd offset unk_217A	; DATA XREF: .debug_info:00009573o
		dd offset loc_2185
		dw 2
a0qe		db '0üÖ!',0
		align 2
		dd offset loc_219A
		dw 2
a1q		db '1üö!',0
		align 2
		dd offset loc_21AF
		dw 2
a2qp		db '2üØ!',0
		align 2
		dd offset loc_21C4
		dw 2
a3q		db '3üƒ!',0
		align 2
		dd offset loc_21D0
		dw 2
a4q		db '4ü“!',0
		align 2
		dd offset loc_21F0
		dw 1
		dd 21F755h, 220700h, 30000200h,	24DE9Fh, 24EE00h, 31000200h
		dd 25B29Fh, 25C200h, 32000200h,	263A9Fh, 264A00h, 33000200h
		dd 9Fh,	0
		db 0
off_12B45	dd offset unk_220F	; DATA XREF: .debug_info:000095BDo
		dd offset loc_226A
		db 4, 0, 91h
		dd 6A9F7FB8h, 76000022h, 1000022h, 22765000h, 22840000h
		dd 40000h, 9F7FB891h, 228Bh, 22A7h, 0B8910004h,	22A79F7Fh
		dd 22A90000h, 10000h, 24CE51h, 24DE00h,	91000400h, 7E9F7FB8h
		dd 8B000025h, 4000025h,	7FB89100h, 25A29Fh, 25B200h, 91000400h
		dd 299F7FB8h, 3A000026h, 4000026h, 7FB89100h, 9Fh, 0
		db 0
off_12BC5	dd offset unk_220F	; DATA XREF: .debug_info:000095C6o
					; .debug_info:00009615o
		dd offset loc_2212
		db 7, 0, 73h
		dd 71243200h, 22122200h, 22760000h, 90000h, 24320073h
		dd 67FA891h, 228B22h, 229500h, 50000100h, 2295h, 22A7h
		dd 730007h, 712432h, 22A722h, 22A900h, 73000900h, 91243200h
		dd 22067FA8h, 24CEh, 24DEh, 730009h, 0A8912432h, 7E22067Fh
		dd 82000025h, 1000025h,	25825000h, 258B0000h, 70000h, 24320073h
		dd 0A2220071h, 0B2000025h, 9000025h, 32007300h,	7FA89124h
		dd 26292206h, 263A0000h, 90000h, 24320073h, 67FA891h, 22h
		dd 0
		db 0
off_12C75	dd offset unk_220F	; DATA XREF: .debug_info:000095E3o
		dd offset loc_226A
		db 4, 0, 91h
		dd 6A9F7FB8h, 76000022h, 1000022h, 22765000h, 22840000h
		dd 40000h, 9F7FB891h, 2295h, 22A7h, 0B8910004h,	22A79F7Fh
		dd 22A90000h, 10000h, 24CE51h, 24DE00h,	91000400h, 0A29F7FB8h
		dd 0B2000025h, 4000025h, 7FB89100h, 26299Fh, 263A00h, 91000400h
		dd 9F7FB8h, 0
		db 3 dup(0)
off_12CE7	dd offset unk_220F	; DATA XREF: .debug_info:000095ECo
		dd offset loc_226A
		db 1
		dd 22955000h, 22A90000h, 10000h, 24CE50h, 24DE00h, 50000100h
		dd 25A2h, 25B2h, 29500001h, 3A000026h, 1000026h, 5000h
		dd 0
		db 2 dup(0)
off_12D26	dd offset unk_220F	; DATA XREF: .debug_info:000095FAo
		dd offset loc_2219
		dw 2
		dd 22199F30h, 222E0000h, 20000h, 222E9F31h, 22430000h
		dd 20000h, 22439F32h, 22580000h, 20000h, 22589F33h, 22640000h
		dd 20000h, 22669F34h, 22840000h, 10000h, 229555h, 22A900h
		dd 30000200h, 24CE9Fh, 24DE00h,	31000200h, 25A29Fh, 25B200h
		dd 32000200h, 26299Fh, 263A00h,	33000200h, 9Fh,	0
		db 0
off_12DA5	dd offset loc_22B3	; DATA XREF: .debug_info:00009663o
		dd offset loc_22C2
		db 4, 0, 91h
		dd 0C29F7FB8h, 0D3000022h, 1000022h, 22D35000h,	22D90000h
		dd 40000h, 9F7FB891h, 2	dup(0)
off_12DD4	dd offset loc_22B3	; DATA XREF: .debug_info:0000966Co
		dd offset loc_22D1+2
		dd 730007h, 762432h, 22h, 0
		db 0
off_12DED	dd offset unk_2307	; DATA XREF: .debug_info:000096B6o
		dd offset loc_2310
		db 4, 0, 91h
		dd 109F7FB8h, 14000023h, 1000023h, 23145100h, 23190000h
		dd 40000h, 9F7FB891h, 2319h, 232Ah, 2A520001h, 38000023h
		dd 4000023h, 7FB89100h,	233F9Fh, 235600h, 91000400h, 9F7FB8h
		dd 0
		db 3 dup(0)
off_12E43	dd offset unk_2307	; DATA XREF: .debug_info:000096BFo
					; .debug_info:000096DCo
		dd offset loc_230A
		db 6
		dd 4935000h, 3F049352h,	45000023h, 6000023h, 4935000h
		dd 49352h, 0
		db 3 dup(0)
off_12E6B	dd offset loc_2370	; DATA XREF: .debug_info:0000971Bo
		dd offset loc_2383+2
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_12E7E	dd offset unk_23A2	; DATA XREF: .debug_info:00009773o
		dd offset loc_23FD
		dw 4
		dd 9F7FB891h, 23FDh, 240Ah, 0A500001h, 18000024h, 4000024h
		dd 7FB89100h, 241F9Fh, 248700h,	91000400h, 0C29F7FB8h
		dd 0CD000025h, 4000025h, 7FB89100h, 25CD9Fh, 25D400h, 51000100h
		dd 267Ah, 268Ch, 0B8910004h, 26DA9F7Fh,	26EA0000h, 40000h
		dd 9F7FB891h, 270Eh, 271Eh, 0B8910004h,	9F7Fh, 0
		db 2 dup(0)
off_12EFE	dd offset unk_23A2	; DATA XREF: .debug_info:0000977Co
		dd offset loc_23D4
		dw 1
		dd 23D450h, 240A00h, 73000900h,	91243200h, 22067FA8h, 241Fh
		dd 2438h, 38500001h, 87000024h,	9000024h, 32007300h, 7FA89124h
		dd 25C22206h, 25D40000h, 10000h, 267A50h, 268C00h, 73000900h
		dd 91243200h, 22067FA8h, 26DAh,	26EAh, 730009h,	0A8912432h
		dd 0E22067Fh, 1E000027h, 9000027h, 32007300h, 7FA89124h
		dd 2206h, 0
		db 2 dup(0)
off_12F86	dd offset unk_23A2	; DATA XREF: .debug_info:00009799o
		dd offset loc_23F9
		dw 4
		dd 9F7FB891h, 2	dup(0)
off_12F9C	dd offset unk_23A2	; DATA XREF: .debug_info:000097A2o
		dd offset loc_23D4
		dd 0D4500001h, 0F9000023h, 9000023h, 32007300h,	7FA89124h
		dd 2206h, 0
		db 2 dup(0)
off_12FC2	dd offset loc_2423	; DATA XREF: .debug_info:000097BCo
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dw 4
		dd 9F7FB891h, 25C2h, 25CDh, 0B8910004h,	25CD9F7Fh, 25D40000h
		dd 10000h, 267A51h, 268C00h, 91000400h,	0DA9F7FB8h, 0EA000026h
		dd 4000026h, 7FB89100h,	270E9Fh, 271E00h, 91000400h, 9F7FB8h
		dd 0
		db 3 dup(0)
off_1301B	dd offset loc_2423	; DATA XREF: .debug_info:000097C5o
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		db 1
		dd 25C25000h, 25D40000h, 10000h, 267A50h, 268C00h, 50000100h
		dd 26DAh, 26EAh, 0E500001h, 1E000027h, 1000027h, 5000h
		dd 0
		db 2 dup(0)
off_1305A	dd offset loc_2423	; DATA XREF: .debug_info:000097D3o
		dd offset loc_2435
		dw 2
a0q5		db '0ü5$',0
		align 2
		dd offset loc_244A
		dw 2
a1qj		db '1üJ$',0
		align 2
		dd offset loc_245F
		dw 2
a2q_		db '2ü_$',0
		align 2
		dd offset loc_2474
		dw 2
a3qt		db '3üt$',0
		align 2
		dd offset loc_2480
		dw 2
a4qv		db '4üÇ$',0
		align 2
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dw 1
		dd 25C256h, 25CD00h, 30000200h,	25CF9Fh, 25D400h, 56000100h
		dd 267Ah, 2685h, 9F310002h, 2687h, 268Ch, 0DA560001h, 0E3000026h
		dd 2000026h, 0E59F3300h, 0EA000026h, 1000026h, 270E5600h
		dd 27170000h, 20000h, 27199F32h, 271E0000h, 10000h, 56h
		dd 0
		db 0
off_13105	dd offset loc_1F47	; DATA XREF: .debug_info:0000985Bo
		dd offset loc_1FC2+2
		db 1, 0, 52h
		dd offset loc_1FC2+2
		dd offset loc_1FEB	; jumptable 00001E7B case 4
		dd 910009h, 8220076h, 689F1C38h, 78000021h, 9000021h, 76009100h
		dd 38082200h, 22079F1Ch, 220D0000h, 90000h, 760091h, 1C380822h
		dd 22A99Fh, 22AF00h, 91000900h,	22007600h, 9F1C3808h, 22FDh
		dd 22FFh, 910009h, 8220076h, 569F1C38h,	58000023h, 9000023h
		dd 76009100h, 38082200h, 239C9F1Ch, 23A20000h, 90000h
		dd 760091h, 1C380822h, 24879Fh,	24AE00h, 91000900h, 22007600h
		dd 9F1C3808h, 24AEh, 24B7h, 73520001h, 7E000025h, 1000025h
		dd 25EA5200h, 25F60000h, 10000h, 268C52h, 269600h, 52000100h
		dd 2 dup(0)
off_131DC	dd offset loc_1F47	; DATA XREF: .debug_info:00009864o
		dd offset loc_1F61
		dd 0A0910003h, 1F617Fh,	1F6C00h, 50000100h, 1F6Ch, 1F76h
		dd 0A0910007h, 2537067Fh, 1F769Fh, 1F8100h, 50000100h
		dd 1F81h, 1F8Bh, 0A0910007h, 253E067Fh,	1F8B9Fh, 1F9600h
		dd 50000100h, 1F96h, 1FA0h, 0A0910007h,	2545067Fh, 1FA09Fh
		dd 1FB700h, 50000100h, 24AEh, 24B7h, 73500001h,	7E000025h
		dd 1000025h, 25EA5000h,	25F60000h, 10000h, 268C50h, 269600h
		dd 50000100h, 2	dup(0)
off_1327C	dd offset loc_1F47	; DATA XREF: .debug_info:00009872o
		dd offset loc_1F5A
		dd 9F300002h, 1F5Ah, 1F6Fh, 9F310002h, 1F6Fh, 1F84h, 9F320002h
		dd 1F84h, 1F99h, 9F330002h, 1F99h, 1FA5h, 9F340002h, 1FA5h
		dd 1FABh, 0AB510001h, 0AF00001Fh, 300001Fh, 9F017100h
		dd 24AEh, 24B7h, 9F300002h, 2573h, 257Eh, 9F310002h, 25EAh
		dd 25F6h, 9F320002h, 268Ch, 2696h, 9F330002h, 2	dup(0)
off_13308	dd offset loc_1ECC	; DATA XREF: .debug_info:000098E6o
		dd offset loc_1ED8
		dd 530001h, 0
		db 3 dup(0)
off_1331B	dd offset loc_1E44	; DATA XREF: .debug_info:000098EFo
		dd offset byte_1E66
		db 2
		dd 829F3000h, 0AD00001Eh, 200001Eh, 0C79F3000h,	0DF00001Eh
		dd 100001Eh, 1EDF5700h,	1EEA0000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_13352	dd offset loc_1E44	; DATA XREF: .debug_info:0000990Co
		dd offset loc_1E61+4
		dw 2
		dd 1E820C77h, 1EA90000h, 20000h, 1EA90C77h, 1EAD0000h
		dd 60000h, 67FAC91h, 1EDF0C23h,	1EEA0000h, 20000h, 0C77h
		dd 0
		db 2 dup(0)
off_1338E	dd offset unk_1E13	; DATA XREF: .debug_info:0000999Co
		dd offset loc_1E44
		dw 1
		dd 1E6655h, 1E7800h, 55000100h,	2 dup(0)
off_133AC	dd offset unk_1E13	; DATA XREF: .debug_info:000099A5o
		dd offset loc_1E30+4
		dd 66510001h, 7800001Eh, 100001Eh, 5100h, 0
		db 2 dup(0)
off_133CA	dd offset unk_1E13	; DATA XREF: .debug_info:000099AEo
		dd offset loc_1E39
		dw 1
		dd 1E6653h, 1E7800h, 53000100h,	2 dup(0)
off_133E8	dd offset unk_1E13	; DATA XREF: .debug_info:000099B7o
		dd offset loc_1E44
		dd 66570001h, 7800001Eh, 100001Eh, 5700h, 0
		db 2 dup(0)
off_13406	dd offset loc_1E6A	; DATA XREF: .debug_info:000099CDo
		dd offset loc_1E73
		dw 1
		dd offset loc_4F+1
		dd 0
		db 0
off_13419	dd offset loc_1DA0	; DATA XREF: .debug_info:00009A2Bo
		dd offset loc_1DE9
		db 1, 0, 57h
		dd 2 dup(0)
off_1342C	dd offset loc_1DA0	; DATA XREF: .debug_info:00009A34o
		dd offset loc_1DE4
		dd 530001h, 0
		db 3 dup(0)
off_1343F	dd offset loc_1DA9	; DATA XREF: .debug_info:00009A4Eo
		dd offset loc_1DBF+1
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_13452	dd offset _required_field_pack_to_buffer_isra_13
					; DATA XREF: .debug_info:00009ACAo
		dd offset loc_27A9
		dw 2
		dd 27A90474h, 27AA0000h, 20000h, 27AA0874h, 27AB0000h
		dd 20000h, 27AB0C74h, 27AC0000h, 20000h, 27AC1074h, 27B20000h
		dd 20000h, 27B21474h, 2A170000h, 30000h, 17038074h, 1800002Ah
		dd 200002Ah, 18147400h,	1900002Ah, 200002Ah, 19107400h
		dd 1A00002Ah, 200002Ah,	1A0C7400h, 1B00002Ah, 200002Ah
		dd 1B087400h, 1C00002Ah, 200002Ah, 1C047400h, 5800002Ah
		dd 300002Eh, 3807400h, 2 dup(0)
off_134EC	dd offset _required_field_pack_to_buffer_isra_13
					; DATA XREF: .debug_info:00009AD8o
		dd offset loc_27D0+4
		dd 0D4510001h, 0FA000027h, 1000029h, 29FA5500h,	2A1C0000h
		dd 40000h, 9F5101F3h, 2A1Ch, 2BCBh, 0CB550001h,	7800002Bh
		dd 400002Ch, 5101F300h,	2C789Fh, 2CA600h, 55000100h, 2CA6h
		dd 2CB8h, 1F30004h, 2CB89F51h, 2D450000h, 10000h, 2D4555h
		dd 2D5B00h, 0F3000400h,	5B9F5101h, 7C00002Dh, 100002Dh
		dd 2D7C5500h, 2D8F0000h, 40000h, 9F5101F3h, 2D8Fh, 2DD5h
		dd 0D5550001h, 0F500002Dh, 400002Dh, 5101F300h,	2DF59Fh
		dd 2E5300h, 55000100h, 2E53h, 2E58h, 1F30004h, 9F51h, 0
		db 2 dup(0)
off_135AE	dd offset loc_27D5	; DATA XREF: .debug_info:00009B01o
		dd offset loc_27FA
		dw 1
		dd 286B56h, 289300h, 56000100h,	2943h, 298Ah, 0E9560001h
		dd 11000029h, 100002Ah,	2A115600h, 2A1C0000h, 10000h, 2A8B50h
		dd 2A8D00h, 56000100h, 2AB7h, 2ACDh, 0EF560001h, 500002Ah
		dd 100002Bh, 2B1E5600h,	2B340000h, 10000h, 2B9B56h, 2B9D00h
		dd 56000100h, 2C4Bh, 2C78h, 53560001h, 5700002Eh, 100002Eh
		dd 2E575000h, 2E580000h, 10000h, 56h, 0
		db 0
off_13645	dd offset loc_2804	; DATA XREF: .debug_info:00009B1Co
					; jumptable 000027FC case 15
		dd offset unk_2893
		db 1, 0, 55h
		dd offset unk_2C9A
		dd offset unk_2CA6
		dd 0B8550001h, 0BF00002Ch, 100002Ch, 2DA35500h,	2DAD0000h
		dd 10000h, 2DF555h, 2DFF00h, 55000100h,	2 dup(0)
off_13684	dd offset loc_2807	; DATA XREF: .debug_info:00009B25o
		dd offset unk_2893
		dd 9A570001h, 0A600002Ch, 100002Ch, 2CB85700h, 2CBF0000h
		dd 10000h, 2DA350h, 2DAD00h, 57000100h,	2DF5h, 2DFFh, 570001h
		dd 0
		db 3 dup(0)
off_136C3	dd offset loc_2812	; DATA XREF: .debug_info:00009B42o
		dd offset loc_286F
		db 1
		dd 2C9A5200h, 2CA60000h, 10000h, 2CB852h, 2CBF00h, 52000100h
		dd 2DA3h, 2DADh, 0F5520001h, 0FF00002Dh, 100002Dh, 5200h
		dd 0
		db 2 dup(0)
off_13702	dd offset loc_2812	; DATA XREF: .debug_info:00009B4Bo
		dd offset loc_2826
		dw 1
		dd 282657h, 283100h, 50000100h,	2831h, 2839h, 770005h
		dd 399F2537h, 44000028h, 1000028h, 28445000h, 284C0000h
		dd 50000h, 253E0077h, 284C9Fh, 285700h,	50000100h, 2857h
		dd 285Fh, 770005h, 5F9F2545h, 7B000028h, 1000028h, 2C9A5000h
		dd 2CA60000h, 10000h, 2CB850h, 2CBF00h,	50000100h, 2DA3h
		dd 2DADh, 0F5500001h, 0FF00002Dh, 100002Dh, 5000h, 0
		db 2 dup(0)
off_1379A	dd offset loc_2812	; DATA XREF: .debug_info:00009B59o
		dd offset loc_2821
		dw 2
a0q		db '0ü!(',0
		align 2
		dd offset loc_2834
		dw 2
a1q4		db '1ü4(',0
		align 2
		dd offset loc_2847
		dw 2
a2qg		db '2üG(',0
		align 2
		dd offset loc_285A
		dw 2
a3qz		db '3üZ(',0
		align 2
		dd offset loc_2864
		dw 2
a4qd		db '4üd(',0
		align 2
		dd offset loc_2867
		dw 1
		dd 286751h, 287B00h, 71000300h,	2C9A9F01h, 2CA60000h, 20000h
		dd 2CB89F31h, 2CBF0000h, 20000h, 2DA39F30h, 2DAD0000h
		dd 20000h, 2DF59F32h, 2DFF0000h, 20000h, 9F33h,	0
		db 2 dup(0)
off_13826	dd offset loc_28DE	; DATA XREF: .debug_info:00009BABo
		dd offset loc_28E2
		dw 1
		dd 28E250h, 293A00h, 57000100h,	2C8Eh, 2C9Ah, 34570001h
		dd 4500002Dh, 200002Dh,	0AD9F3000h, 0B700002Dh,	100002Dh
		dd 2DFF5700h, 2E090000h, 10000h, 2E1D57h, 2E2600h, 57000100h
		dd 2 dup(0)
off_1387C	dd offset loc_28BF	; DATA XREF: .debug_info:00009BBDo
		dd offset loc_28D7+4
		dd 34500001h, 3800002Dh, 100002Dh, 2D385000h, 2D450000h
		dd 20000h, 75h,	0
		db 2 dup(0)
off_138A6	dd offset loc_28E4	; DATA XREF: .debug_info:00009BDAo
		dd offset loc_2952+1
		dw 1
		dd 2C8E50h, 2C9A00h, 50000100h,	2D3Ah, 2D45h, 0AD500001h
		dd 0B700002Dh, 100002Dh, 2DFF5000h, 2E090000h, 10000h
		dd 2E1D50h, 2E2600h, 50000100h,	2 dup(0)
off_138F0	dd offset loc_28E4	; DATA XREF: .debug_info:00009BE3o
		dd offset loc_28F9
		dd 0F9570001h, 5000028h, 1000029h, 29055100h, 290D0000h
		dd 50000h, 25370077h, 290D9Fh, 291900h,	51000100h, 2919h
		dd 2921h, 770005h, 219F253Eh, 2D000029h, 1000029h, 292D5100h
		dd 29300000h, 50000h, 25450077h, 29309Fh, 293A00h, 77000700h
		dd 37254500h, 2C8E9F25h, 2C9A0000h, 10000h, 2D3A51h, 2D4500h
		dd 30000200h, 2DAD9Fh, 2DB700h,	51000100h, 2DFFh, 2E09h
		dd 1D510001h, 2600002Eh, 100002Eh, 5700h, 0
		db 2 dup(0)
off_1399A	dd offset loc_28E4	; DATA XREF: .debug_info:00009BF1o
		dd offset loc_28F4
		dw 2
		dd 28F49F30h, 29080000h, 20000h, 29089F31h, 291C0000h
		dd 20000h, 291C9F32h, 29300000h, 20000h, 29309F33h, 293A0000h
		dd 20000h, 293A9F34h, 293F0000h, 10000h, 293F52h, 295300h
		dd 72000300h, 2C8E9F01h, 2C9A0000h, 20000h, 2D3A9F31h
		dd 2D450000h, 20000h, 2DAD9F30h, 2DB70000h, 20000h, 2DFF9F32h
		dd 2E090000h, 20000h, 2E1D9F33h, 2E260000h, 20000h, 9F30h
		dd 0
		db 2 dup(0)
off_13A32	dd offset loc_2995	; DATA XREF: .debug_info:00009C6Fo
		dd offset loc_29E9
		dw 1
		dd 2CCF50h, 2D3400h, 50000100h,	2DB7h, 2DC3h, 26500001h
		dd 5300002Eh, 100002Eh,	5000h, 0
		db 2 dup(0)
off_13A66	dd offset loc_2995	; DATA XREF: .debug_info:00009C78o
		dd offset loc_29C8
		dw 1
		dd 29C852h, 29E900h, 75000200h,	2CCF00h, 2CE300h, 52000100h
		dd 2CE3h, 2D34h, 750002h, 2DB7h, 2DC3h,	26520001h, 5300002Eh
		dd 200002Eh, 7500h, 0
		db 3 dup(0)
off_13AB3	dd offset loc_299D	; DATA XREF: .debug_info:00009C95o
		dd offset loc_29E7
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_13AC6	dd offset loc_299D	; DATA XREF: .debug_info:00009C9Eo
		dd offset loc_29C8
		dw 1
		dd 29C852h, 29E700h, 75000200h,	2 dup(0)
		db 0
off_13AE5	dd offset unk_2CCF	; DATA XREF: .debug_info:00009CB8o
		dd offset loc_2D34
		db 1, 0, 50h
		dd offset loc_2DB7
		dd offset loc_2DC3
		dd 26500001h, 5300002Eh, 100002Eh, 5000h, 0
		db 2 dup(0)
off_13B0E	dd offset unk_2CCF	; DATA XREF: .debug_info:00009CC1o
		dd offset loc_2D34
		dw 1
		dd 2DB752h, 2DC300h, 52000100h,	2E26h, 2E53h, 520001h
		dd 0
		db 3 dup(0)
off_13B37	dd offset unk_2CCF	; DATA XREF: .debug_info:00009CCFo
		dd offset loc_2CE0
		db 2
		dd 0E09F3000h, 0F400002Ch, 200002Ch, 0F49F3100h, 800002Ch
		dd 200002Dh, 89F3200h, 1C00002Dh, 200002Dh, 1C9F3300h
		dd 2900002Dh, 200002Dh,	299F3400h, 2F00002Dh, 100002Dh
		dd 2D2F5700h, 2D340000h, 10000h, 2DB751h, 2DC300h, 30000200h
		dd 2E269Fh, 2E3500h, 31000200h,	2E359Fh, 2E4400h, 32000200h
		dd 2E449Fh, 2E5300h, 33000200h,	9Fh, 0
		db 0
off_13BC1	dd offset loc_2A25	; DATA XREF: .debug_info:00009CEFo
		dd offset unk_2A8D
		db 1, 0, 52h
		dd offset unk_2C82
		dd offset unk_2C8E
		dd 0BF520001h, 0C700002Ch, 100002Ch, 2D5B5200h,	2D660000h
		dd 10000h, 2D9952h, 2DA300h, 52000100h,	2E13h, 2E1Dh, 520001h
		dd 0
		db 3 dup(0)
off_13C0B	dd offset loc_2A25	; DATA XREF: .debug_info:00009CF8o
					; .debug_info:00009D15o
		dd offset loc_2A2F
		db 1
		dd 2A2F5000h, 2A8D0000h, 20000h, 2C820075h, 2C8E0000h
		dd 20000h, 2CBF0075h, 2CC70000h, 20000h, 2D5B0075h, 2D5D0000h
		dd 10000h, 2D5D50h, 2D6600h, 75000200h,	2D9900h, 2DA300h
		dd 75000200h, 2E1300h, 2E1D00h,	75000200h, 2 dup(0)
		db 0
off_13C71	dd offset loc_2A2F	; DATA XREF: .debug_info:00009D2Fo
		dd offset unk_2A8D
		db 1, 0, 52h
		dd offset unk_2C82
		dd offset unk_2C8E
		dd 0BF520001h, 0C700002Ch, 100002Ch, 2D995200h,	2DA30000h
		dd 10000h, 2E1352h, 2E1D00h, 52000100h,	2 dup(0)
off_13CB0	dd offset loc_2A2F	; DATA XREF: .debug_info:00009D38o
		dd offset unk_2A8D
		dd 82500001h, 8E00002Ch, 100002Ch, 2CBF5000h, 2CC70000h
		dd 10000h, 2D9950h, 2DA300h, 50000100h,	2E13h, 2E1Dh, 500001h
		dd 0
		db 3 dup(0)
off_13CEF	dd offset loc_2A2F	; DATA XREF: .debug_info:00009D46o
		dd offset loc_2A3F
		db 2
		dd 3F9F3000h, 5300002Ah, 200002Ah, 539F3100h, 6700002Ah
		dd 200002Ah, 679F3200h,	7B00002Ah, 200002Ah, 7B9F3300h
		dd 8300002Ah, 200002Ah,	839F3400h, 8700002Ah, 100002Ah
		dd 2A875100h, 2A8D0000h, 30000h, 829F0171h, 8E00002Ch
		dd 200002Ch, 0BF9F3100h, 0C700002Ch, 200002Ch, 999F3000h
		dd 0A300002Dh, 200002Dh, 139F3200h, 1D00002Eh, 200002Eh
		dd 9F3300h, 0
		db 3 dup(0)
off_13D7B	dd offset loc_2A95	; DATA XREF: .debug_info:00009D66o
		dd offset loc_2AA4	; jumptable 000027FC cases 3,8
		db 2
		dd offset byte_7500
		dd 0
		db 3 dup(0)
off_13D8F	dd offset loc_2A95	; DATA XREF: .debug_info:00009D6Fo
		dd offset loc_2A9F
		db 0Ah
		dd 76009100h, 480A2200h, 9F9F1C01h, 0A400002Ah,	0A00002Ah
		dd 76009100h, 4C0A2200h, 9F1C01h, 0
		db 3 dup(0)
off_13DBF	dd offset loc_2ADC	; DATA XREF: .debug_info:00009D8Do
		dd offset loc_2AE8+4
		db 1
		dd 2AEC5100h, 2AEF0000h, 0A0000h, 760091h, 1380A22h, 2D669F1Ch
		dd 2D7C0000h, 10000h, 51h, 0
		db 0
off_13DF1	dd offset loc_2ADC	; DATA XREF: .debug_info:00009D96o
					; .debug_info:00009DB3o
		dd offset loc_2AE6
		db 6, 0, 50h
		dd 93520493h, 2D6604h, 2D6800h,	50000600h, 93520493h, 4
		dd 0
		db 0
off_13E19	dd offset loc_2B0D	; DATA XREF: .debug_info:00009DDBo
		dd offset loc_2B1E
		db 0Ah,	0, 91h
		dd 22007600h, 1C01480Ah, 9Fh, 0
		db 0
off_13E35	dd offset loc_2B0D	; DATA XREF: .debug_info:00009DE4o
		dd offset loc_2B1E
		db 2, 0, 75h
		dd 2 dup(0)
		db 0
off_13E49	dd offset loc_2B3D	; DATA XREF: .debug_info:00009E02o
		dd offset unk_2B9D
		db 1, 0, 52h
		dd offset loc_2C78
		dd offset unk_2C82
		dd 0C7520001h, 0CF00002Ch, 100002Ch, 2D8F5200h,	2D990000h
		dd 10000h, 2E0952h, 2E1300h, 52000100h,	2 dup(0)
off_13E88	dd offset loc_2B3D	; DATA XREF: .debug_info:00009E0Bo
		dd offset unk_2B9D
		dd 78500001h, 8200002Ch, 100002Ch, 2CC75000h, 2CCF0000h
		dd 10000h, 2D8F50h, 2D9900h, 50000100h,	2E09h, 2E13h, 500001h
		dd 0
		db 3 dup(0)
off_13EC7	dd offset loc_2B3D	; DATA XREF: .debug_info:00009E19o
		dd offset loc_2B4D
		db 2
		dd 4D9F3000h, 6100002Bh, 200002Bh, 619F3100h, 7500002Bh
		dd 200002Bh, 759F3200h,	8900002Bh, 200002Bh, 899F3300h
		dd 9100002Bh, 200002Bh,	919F3400h, 9700002Bh, 100002Bh
		dd 2B975100h, 2B9D0000h, 30000h, 789F0171h, 8200002Ch
		dd 200002Ch, 0C79F3100h, 0CF00002Ch, 200002Ch, 8F9F3000h
		dd 9900002Dh, 200002Dh,	99F3200h, 1300002Eh, 200002Eh
		dd 9F3300h, 0
		db 3 dup(0)
off_13F53	dd offset unk_2B9D	; DATA XREF: .debug_info:00009E38o
		dd offset loc_2BAB
		db 0Ah
		dd 76009100h, 480A2200h, 0AB9F1C01h, 0B000002Bh, 0A00002Bh
		dd 76009100h, 490A2200h, 9F1C01h, 0
		db 3 dup(0)
off_13F83	dd offset unk_2B9D	; DATA XREF: .debug_info:00009E41o
		dd offset loc_2BB0	; jumptable 000027FC case 14
		db 2
		dd offset byte_7500
		dd 0
		db 3 dup(0)
off_13F97	dd offset loc_2BB3	; DATA XREF: .debug_info:00009E54o
		dd offset loc_2BC6
		db 1
		dd 2DC35200h, 2DE20000h, 10000h, 52h, 0
		db 0
off_13FB5	dd offset loc_2BCB	; DATA XREF: .debug_info:00009E5Do
		dd offset loc_2C39
		db 1, 0, 55h
		dd offset unk_2CA6
		dd offset loc_2CB8
		dd 45550001h, 5B00002Dh, 100002Dh, 2D7C5500h, 2D8F0000h
		dd 10000h, 2DC355h, 2DE200h, 30000200h,	2DE29Fh, 2DF500h
		dd 55000100h, 2	dup(0)
off_14000	dd offset loc_2BD6	; DATA XREF: .debug_info:00009E7Ao
		dd offset loc_2C4F
		dd 0A6500001h, 0B800002Ch, 100002Ch, 2D455000h,	2D5B0000h
		dd 10000h, 2D7C50h, 2D8F00h, 50000100h,	2DCEh, 2DF5h, 500001h
		dd 0
		db 3 dup(0)
off_1403F	dd offset loc_2BD6	; DATA XREF: .debug_info:00009E83o
		dd offset loc_2BEB
		db 1
		dd 2BEB5500h, 2BFE0000h, 10000h, 2BFE57h, 2C0100h, 75000500h
		dd 9F253700h, 2C01h, 2C14h, 14570001h, 1700002Ch, 500002Ch
		dd 3E007500h, 2C179F25h, 2C280000h, 10000h, 2C2857h, 2C3900h
		dd 77000500h, 9F253700h, 2CA6h,	2CB8h, 45570001h, 5B00002Dh
		dd 100002Dh, 2D7C5500h,	2D8F0000h, 10000h, 2DCE57h, 2DE200h
		dd 30000200h, 2DE29Fh, 2DF500h,	57000100h, 2 dup(0)
off_140D8	dd offset loc_2BD6	; DATA XREF: .debug_info:00009E91o
		dd offset loc_2BE6
		dd 9F300002h, 2BE6h, 2BFCh, 9F310002h, 2BFCh, 2C12h, 9F320002h
		dd 2C12h, 2C28h, 9F330002h, 2C28h, 2C39h, 9F340002h, 2C39h
		dd 2C47h, 0A8910003h, 2C477Dh, 2C7800h,	91000700h, 23067DA8h
		dd 2CA69F01h, 2CB80000h, 20000h, 2D459F31h, 2D5B0000h
		dd 20000h, 2D7C9F30h, 2D8F0000h, 20000h, 2DCE9F32h, 2DE20000h
		dd 20000h, 2DE29F30h, 2DF50000h, 20000h, 9F33h,	0
		db 2 dup(0)
off_14176	dd offset _protobuf_c_message_init_generic
					; DATA XREF: .debug_info:00009FDDo
		dd offset loc_2E59
		dw 2
		dd 2E590474h, 2E5A0000h, 20000h, 2E5A0874h, 2E5B0000h
		dd 20000h, 2E5B0C74h, 2E5C0000h, 20000h, 2E5C1074h, 2E5F0000h
		dd 20000h, 2E5F1474h, 2ECC0000h, 20000h, 2ECC3074h, 2ECD0000h
		dd 20000h, 2ECD1474h, 2ECE0000h, 20000h, 2ECE1074h, 2ECF0000h
		dd 20000h, 2ECF0C74h, 2ED00000h, 20000h, 2ED00874h, 2ED40000h
		dd 20000h, 2ED40474h, 2EEE0000h, 20000h, 3074h,	0
		db 2 dup(0)
off_1420E	dd offset loc_2E7B	; DATA XREF: .debug_info:0000A00Eo
		dd offset loc_2E84
		dw 2
a0q_		db '0üµ.',0
		align 2
		dd offset loc_2EBD
		dw 1
		dd offset loc_4F+3
		dd 0
		db 0
off_1422D	dd offset loc_2E9B	; DATA XREF: .debug_info:0000A027o
		dd offset loc_2EB1
		db 1, 0, 55h
		dd offset unk_2ED1
		dd offset loc_2EE9
		dd 550001h, 0
		db 3 dup(0)
off_1424B	dd offset loc_2E9B	; DATA XREF: .debug_info:0000A036o
		dd offset loc_2EB1
		db 1
		dd 2ED15700h, 2EE90000h, 10000h, 57h, 0
		db 0
off_14269	dd offset _protobuf_c_message_free_unpacked
					; DATA XREF: .debug_info:0000A074o
		dd offset loc_2EF1
		db 2, 0, 74h
		dd 2EF104h, 2EF200h, 74000200h,	2EF208h, 2EF300h, 74000200h
		dd 2EF30Ch, 2EF400h, 74000200h,	2EF410h, 2EF700h, 74000200h
		dd 2EF714h, 303500h, 74000300h,	303500D0h, 30360000h, 20000h
		dd 30361474h, 30370000h, 20000h, 30371074h, 30380000h
		dd 20000h, 30380C74h, 30390000h, 20000h, 30390874h, 303C0000h
		dd 20000h, 303C0474h, 31870000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_14303	dd offset _protobuf_c_message_free_unpacked
					; DATA XREF: .debug_info:0000A097o
		dd offset loc_2F25
		db 2
		dd 25049100h, 4400002Fh, 100002Fh, 2F445600h, 2FCE0000h
		dd 10000h, 2FCE57h, 303700h, 56000100h,	303Bh, 3151h, 51570001h
		dd 5E000031h, 2000031h,	5E049100h, 6B000031h, 1000031h
		dd 316B5600h, 31870000h, 20000h, 491h, 0
		db 2 dup(0)
off_14366	dd offset loc_2F10	; DATA XREF: .debug_info:0000A0A7o
		dd offset loc_2F44
		dw 1
		dd 2F4455h, 315100h, 91000200h,	315144h, 315E00h, 55000100h
		dd 315Eh, 316Bh, 44910002h, 316Bh, 3187h, 550001h, 0
		db 3 dup(0)
off_143A7	dd offset loc_2F2B	; DATA XREF: .debug_info:0000A0B5o
		dd offset loc_2F44
		db 2
		dd 639F3000h, 6C00002Fh, 100002Fh, 2FBF5300h, 2FCE0000h
		dd 10000h, 2FCE53h, 2FDE00h, 30000200h,	2FFE9Fh, 300300h
		dd 53000100h, 315Eh, 3166h, 9F300002h, 2 dup(0)
off_143F4	dd offset loc_2F89	; DATA XREF: .debug_info:0000A0CCo
		dd offset loc_2FAD
		dd 0BC500001h, 0CC000030h, 1000030h, 30CC5000h,	30E90000h
		dd 10000h, 30EE53h, 310000h, 50000100h,	3100h, 311Eh, 23530001h
		dd 34000031h, 1000031h,	31345000h, 314C0000h, 10000h, 53h
		dd 0
		db 0
off_14449	dd offset loc_2F8F	; DATA XREF: .debug_info:0000A0DCo
		dd offset loc_2FC3
		db 1, 0, 56h
		dd offset loc_30BC
		dd offset unk_3151
		dd 560001h, 0
		db 3 dup(0)
off_14467	dd offset loc_30BC	; DATA XREF: .debug_info:0000A0F7o
		dd offset loc_30CC
		db 2
		dd 0E19F3000h, 0EE000030h, 1000030h, 5500h, 0
		db 2 dup(0)
off_14486	dd offset unk_30EE	; DATA XREF: .debug_info:0000A113o
		dd offset loc_3100
		dw 2
		dd 31169F30h, 31230000h, 10000h, 55h, 0
		db 0
off_144A5	dd offset unk_3123	; DATA XREF: .debug_info:0000A12Fo
		dd offset loc_3134
		db 2, 0, 30h
		dd 31449Fh, 315100h, 55000100h,	2 dup(0)
off_144C4	dd offset loc_3046	; DATA XREF: .debug_info:0000A16Co
		dd offset loc_3057
		dd 520001h, 0
		db 3 dup(0)
off_144D7	dd offset loc_3077	; DATA XREF: .debug_info:0000A18Ao
		dd offset loc_3090
		db 1
		dd offset aDataTooShortAf+1Ch ;	"prefix	of %u"
		dd 0
		db 2 dup(0)
off_144EA	dd offset loc_307A	; DATA XREF: .debug_info:0000A1A1o
		dd offset loc_3090
		dw 1
		dd offset loc_4F+2
		dd 0
		db 0
off_144FD	dd offset loc_309A	; DATA XREF: .debug_info:0000A1BEo
		dd offset loc_30B2+4
		db 1, 0, 52h
		align 10h
off_14510	dd offset _parse_required_member ; DATA	XREF: .debug_info:0000A231o
		dd offset loc_3189
		dd 4740002h, 3189h, 318Ah, 8740002h, 318Ah, 318Bh, 0C740002h
		dd 318Bh, 318Ch, 10740002h, 318Ch, 318Fh, 14740002h, 318Fh
		dd 31E5h, 0E0740003h, 31E500h, 31E600h,	74000200h, 31E614h
		dd 31E700h, 74000200h, 31E710h,	31E800h, 74000200h, 31E80Ch
		dd 31E900h, 74000200h, 31E908h,	31EC00h, 74000200h, 31EC04h
		dd 354B00h, 74000300h, 0E0h, 0
		db 2 dup(0)
off_145AA	dd offset _parse_required_member ; DATA	XREF: .debug_info:0000A246o
		dd offset loc_31D2
		dw 1
		dd 31D250h, 31EA00h, 0F3000400h, 0EA9F5001h, 0F2000031h
		dd 1000031h, 31F25000h,	32460000h, 40000h, 9F5001F3h, 3246h
		dd 3288h, 88500001h, 0C7000032h, 4000032h, 5001F300h, 32C79Fh
		dd 32D800h, 50000100h, 32D8h, 3337h, 1F30004h, 33379F50h
		dd 33420000h, 10000h, 334250h, 339D00h,	0F3000400h, 9D9F5001h
		dd 0AB000033h, 1000033h, 33AB5000h, 33B80000h, 40000h
		dd 9F5001F3h, 33B8h, 33C4h, 0C4500001h,	0D9000033h, 4000033h
		dd 5001F300h, 33D99Fh, 33E800h,	50000100h, 33E8h, 341Ch
		dd 1F30004h, 341C9F50h,	34340000h, 10000h, 343450h, 348700h
		dd 0F3000400h, 879F5001h, 8C000034h, 1000034h, 348C5000h
		dd 34B30000h, 40000h, 9F5001F3h, 34B3h,	34B6h, 0B6500001h
		dd 4B000034h, 4000035h,	5001F300h, 9Fh,	0
		db 0
off_146C5	dd offset _parse_required_member ; DATA	XREF: .debug_info:0000A256o
		dd offset loc_3195
		db 1, 0, 52h
		dd offset loc_3195
		dd offset locret_31E9
		dd 0E9550001h, 0EA000031h, 4000031h, 5201F300h,	31EA9Fh
		dd 354B00h, 55000100h, 2 dup(0)
off_146FC	dd offset _parse_required_member ; DATA	XREF: .debug_info:0000A266o
		dd offset loc_31D2
		dd 0D2510001h, 0EA000031h, 4000031h, 5101F300h,	31EA9Fh
		dd 31FF00h, 51000100h, 31FFh, 3246h, 1F30004h, 32469F51h
		dd 32880000h, 10000h, 328851h, 32C700h,	0F3000400h, 0C79F5101h
		dd 4000032h, 1000033h, 33045100h, 33370000h, 40000h, 9F5101F3h
		dd 3337h, 334Fh, 4F510001h, 9D000033h, 4000033h, 5101F300h
		dd 339D9Fh, 33C800h, 51000100h,	33C8h, 33D9h, 1F30004h
		dd 33D99F51h, 33EC0000h, 10000h, 33EC51h, 341C00h, 0F3000400h
		dd 1C9F5101h, 51000034h, 1000034h, 34515100h, 34870000h
		dd 40000h, 9F5101F3h, 3487h, 349Eh, 9E510001h, 0B3000034h
		dd 4000034h, 5101F300h,	34B39Fh, 34BE00h, 51000100h, 34BEh
		dd 354Bh, 1F30004h, 9F51h, 0
		db 2 dup(0)
off_147FE	dd offset loc_31AC	; DATA XREF: .debug_info:0000A28Do
		dd offset loc_31BF
		dw 1
		dd 31BF57h, 31D200h, 70000200h,	31D20Ch, 31EA00h, 91000300h
		dd 31EA7FB8h, 31F20000h, 20000h, 31F20C70h, 32460000h
		dd 50000h, 235001F3h, 32460Ch, 328800h,	70000200h, 32880Ch
		dd 32C700h, 91000300h, 32C77FB8h, 32D80000h, 20000h, 32D80C70h
		dd 33040000h, 50000h, 235001F3h, 33040Ch, 333700h, 91000300h
		dd 33377FB8h, 33420000h, 20000h, 33420C70h, 339D0000h
		dd 50000h, 235001F3h, 339D0Ch, 33AB00h,	70000200h, 33AB0Ch
		dd 33B800h, 0F3000500h,	0C235001h, 33B8h, 33C4h, 0C700002h
		dd 33C4h, 33C8h, 1F30005h, 0C80C2350h, 0D9000033h, 3000033h
		dd 7FB89100h, 33D9h, 33E8h, 0C700002h, 33E8h, 33ECh, 1F30005h
		dd 0EC0C2350h, 1C000033h, 3000034h, 7FB89100h, 341Ch, 3434h
		dd 0C700002h, 3434h, 3451h, 1F30005h, 510C2350h, 87000034h
		dd 3000034h, 7FB89100h,	3487h, 348Ch, 0C700002h, 348Ch
		dd 34B3h, 1F30005h, 0B30C2350h,	0B6000034h, 2000034h, 0B60C7000h
		dd 0D3000034h, 5000034h, 5001F300h, 34D30C23h, 354B0000h
		dd 30000h, 7FB891h, 0
		db 3 dup(0)
off_14977	dd offset loc_31AF	; DATA XREF: .debug_info:0000A29Do
		dd offset loc_31D2
		db 1
		dd 31EA5200h, 32360000h, 10000h, 323652h, 324600h, 0F3000500h
		dd 10235001h, 3246h, 3288h, 0C7520001h,	4000032h, 1000033h
		dd 33375200h, 33860000h, 10000h, 338652h, 339D00h, 0F3000500h
		dd 10235001h, 339Dh, 33C8h, 0D9520001h,	0EC000033h, 1000033h
		dd 341C5200h, 34510000h, 10000h, 348752h, 349C00h, 52000100h
		dd 349Ch, 34B3h, 1F30005h, 0B3102350h, 0B9000034h, 1000034h
		dd 34B95200h, 34D30000h, 50000h, 235001F3h, 10h, 0
		db 0
off_14A29	dd offset loc_31B3	; DATA XREF: .debug_info:0000A2ADo
		dd offset loc_31C9
		db 1, 0, 56h
		dd offset unk_31EA
		dd offset loc_3251
		dd 51560001h, 88000032h, 8000032h, 94047000h, 1AFF0801h
		dd 32C79Fh, 32D500h, 56000100h,	32D5h, 32D8h, 4700008h
		dd 0FF080194h, 32D89F1Ah, 33040000h, 0B0000h, 235001F3h
		dd 8019404h, 379F1AFFh,	0C000033h, 1000034h, 341C5600h
		dd 34290000h, 10000h, 342956h, 343400h,	70000800h, 8019404h
		dd 349F1AFFh, 51000034h, 0B000034h, 5001F300h, 1940423h
		dd 9F1AFF08h, 3487h, 34B3h, 0BE560001h,	0DF000034h, 1000034h
		dd 5600h, 0
		db 2 dup(0)
off_14ADE	dd offset loc_31F0	; DATA XREF: .debug_info:0000A2CAo
		dd offset loc_3236
		dw 1
		dd 323652h, 323B00h, 0F3000500h, 10235001h, 2 dup(0)
off_14B00	dd offset loc_31F0	; DATA XREF: .debug_info:0000A2D3o
		dd offset loc_323B
		dd 0B8910003h, 7Fh, 0
		db 0
off_14B15	dd offset loc_31F5	; DATA XREF: .debug_info:0000A2E5o
		dd offset loc_3244
		db 1, 0, 50h
		dd offset loc_3244
		dd offset unk_3246
		dd 750002h, 2 dup(0)
off_14B34	dd offset loc_324D	; DATA XREF: .debug_info:0000A309o
		dd offset unk_32C7
		dd 550001h, 0
		db 3 dup(0)
off_14B47	dd offset loc_32B7	; DATA XREF: .debug_info:0000A31Ao
		dd offset loc_32BF
		db 1
		dd 32BF5000h, 32C70000h, 20000h, 75h, 0
		db 2 dup(0)
off_14B66	dd offset loc_3258	; DATA XREF: .debug_info:0000A32Fo
		dd offset loc_325C
		dw 1
		dd 325C57h, 328800h, 73000200h,	32881Ch, 32C700h, 91000200h
		dd 4Ch,	0
		db 0
off_14B91	dd offset loc_3251	; DATA XREF: .debug_info:0000A33Fo
		dd offset unk_32C7
		db 1, 0, 56h
		dd 2 dup(0)
off_14BA4	dd offset loc_32D1	; DATA XREF: .debug_info:0000A38Bo
		dd offset unk_3337
		dd 11550001h, 46000035h, 1000035h, 5500h, 0
		db 2 dup(0)
off_14BC2	dd offset loc_32D8	; DATA XREF: .debug_info:0000A39Eo
		dd offset loc_32F7
		dw 1
		dd 32F750h, 330400h, 0F3000800h, 8235001h, 1C2306h, 0
		db 3 dup(0)
off_14BE7	dd offset loc_32D5	; DATA XREF: .debug_info:0000A3AEo
		dd offset loc_3324
		db 1
		dd 35115600h, 35460000h, 10000h, 56h, 0
		db 0
off_14C05	dd offset loc_330D	; DATA XREF: .debug_info:0000A3C7o
		dd offset loc_3313
		db 8, 0, 91h
		dd 76067FB8h, 139F1C00h, 37000033h, 1000033h, 35115300h
		dd 35460000h, 10000h, 53h, 0
		db 0
off_14C35	dd offset loc_3340	; DATA XREF: .debug_info:0000A41Bo
		dd offset loc_3386
		db 1, 0, 52h
		dd offset loc_3386
		dd offset unk_339D
		dd 1F30005h, 0CA102350h, 0D3000034h, 5000034h, 5001F300h
		dd 1023h, 0
		db 2 dup(0)
off_14C66	dd offset loc_3340	; DATA XREF: .debug_info:0000A424o
		dd offset unk_339D
		dw 3
		dd 0CA7FB891h, 0D3000034h, 3000034h, 7FB89100h,	2 dup(0)
off_14C88	dd offset loc_3345	; DATA XREF: .debug_info:0000A436o
		dd offset loc_3396
		dd 0CA500001h, 0CE000034h, 1000034h, 5000h, 0
		db 2 dup(0)
off_14CA6	dd offset loc_33A9	; DATA XREF: .debug_info:0000A46Fo
		dd offset loc_33B8	; jumptable 000031BF cases 3,8
		dw 1
		dd offset loc_4F+3
		dd 0
		db 0
off_14CB9	dd offset loc_33AB	; DATA XREF: .debug_info:0000A481o
		dd offset loc_33B3
		db 1, 0, 50h
		dd offset loc_33B3
		dd offset loc_33B8	; jumptable 000031BF cases 3,8
		dd 720002h, 2 dup(0)
off_14CD8	dd offset loc_33ED	; DATA XREF: .debug_info:0000A4A0o
		dd offset loc_3406
		dd 93500006h, 4935204h,	34D3h, 34D8h, 93500006h, 4935204h
		dd 2 dup(0)
off_14D00	dd offset loc_3425	; DATA XREF: .debug_info:0000A4BBo
		dd offset unk_3487
		dd 0DF550001h, 11000034h, 1000035h, 5500h, 0
		db 2 dup(0)
off_14D1E	dd offset loc_3429	; DATA XREF: .debug_info:0000A4CBo
		dd offset loc_3470
		dw 1
		dd 34DF56h, 351100h, 56000100h,	2 dup(0)
off_14D3C	dd offset loc_3438	; DATA XREF: .debug_info:0000A4E8o
		dd offset loc_344F+2
		dd 1C730002h, 2	dup(0)
off_14D50	dd offset loc_3460	; DATA XREF: .debug_info:0000A4FEo
		dd offset loc_3463
		dd 1730003h, 34639Fh, 347200h, 57000100h, 3472h, 3487h
		dd 1730003h, 34DF9Fh, 351100h, 57000100h, 2 dup(0)
off_14D88	dd offset unk_3487	; DATA XREF: .debug_info:0000A554o
		dd offset unk_349E
		dd 9F300002h, 2	dup(0)
off_14D9C	dd offset unk_34B3	; DATA XREF: .debug_info:0000A573o
		dd offset loc_34B9
		dd 0B9520001h, 0BE000034h, 5000034h, 5001F300h,	1023h
		dd 0
		db 2 dup(0)
off_14DBE	dd offset loc_340C	; DATA XREF: .debug_info:0000A585o
		dd offset loc_3417
		dw 6
		dd 52049350h, 493h, 0
		db 2 dup(0)
off_14DD6	dd offset _protobuf_c_message_unpack ; DATA XREF: .debug_info:0000AAB8o
		dd offset loc_354D
		dw 2
		dd 354D0474h, 354E0000h, 20000h, 354E0874h, 354F0000h
		dd 20000h, 354F0C74h, 35500000h, 20000h, 35501074h, 35560000h
		dd 20000h, 35561474h, 39370000h, 30000h, 3704D074h, 38000039h
		dd 2000039h, 38147400h,	39000039h, 2000039h, 39107400h
		dd 3A000039h, 2000039h,	3A0C7400h, 3B000039h, 2000039h
		dd 3B087400h, 3C000039h, 2000039h, 3C047400h, 3E000039h
		dd 3000047h, 4D07400h, 2 dup(0)
off_14E70	dd offset _protobuf_c_message_unpack ; DATA XREF: .debug_info:0000AADCo
		dd offset loc_35C1
		dd 4910002h, 35C1h, 3CF4h, 0F4910003h, 3CF47Bh,	3D0100h
		dd 91000200h, 3D0104h, 437700h,	91000300h, 43777BF4h, 43930000h
		dd 20000h, 43930491h, 473E0000h, 30000h, 7BF491h, 0
		db 3 dup(0)
off_14EC3	dd offset loc_35D8	; DATA XREF: .debug_info:0000AB09o
		dd offset loc_3C3A
		db 3
		dd 7BF89100h, 3C4Eh, 3C5Dh, 5D500001h, 0F400003Ch, 300003Ch
		dd 7BF89100h, 3D01h, 4377h, 0F8910003h,	43937Bh, 473E00h
		dd 91000300h, 7BF8h, 0
		db 2 dup(0)
off_14F0A	dd offset loc_358D	; DATA XREF: .debug_info:0000AB19o
		dd offset loc_363A
		dw 1
		dd 363A55h, 376500h, 91000300h,	37657BD0h, 37710000h, 10000h
		dd 377152h, 391200h, 91000300h,	393C7BD0h, 3A0A0000h, 30000h
		dd 0A7BD091h, 1000003Ah, 800003Ah, 7BD09100h, 1C007006h
		dd 3A109Fh, 3A1A00h, 52000100h,	3A86h, 3B96h, 0D0910003h
		dd 3B967Bh, 3B9B00h, 52000100h,	3B9Bh, 3C3Ah, 0D0910003h
		dd 3C3A7Bh, 3C6700h, 55000100h,	3C67h, 3CDBh, 0D0910003h
		dd 3CDB7Bh, 3D0100h, 55000100h,	3DB9h, 3DE8h, 0D0910003h
		dd 3DF27Bh, 3E3B00h, 91000300h,	402A7BD0h, 40490000h, 10000h
		dd 419B55h, 420600h, 91000300h,	42617BD0h, 429B0000h, 30000h
		dd 0FC7BD091h, 11000042h, 3000043h, 7BD09100h, 435Bh, 4368h
		dd 0D0910003h, 43777Bh,	439300h, 55000100h, 2 dup(0)
off_15018	dd offset loc_358D	; DATA XREF: .debug_info:0000AB28o
		dd offset loc_35D8
		dd 0D8520001h, 0FE000035h, 2000035h, 0FE0C9100h, 3A000035h
		dd 3000036h, 7C809100h,	363Ah, 3759h, 0E0910003h, 37597Bh
		dd 37E700h, 55000100h, 37E7h, 38B4h, 0E0910003h, 393C7Bh
		dd 394C00h, 91000300h, 394C7BE0h, 398D0000h, 10000h, 398D55h
		dd 399F00h, 91000300h, 399F7BE0h, 3A060000h, 10000h, 3A0655h
		dd 3A0A00h, 91000A00h, 91067BE0h, 22067BE8h, 3A0A9Fh, 3A1A00h
		dd 55000100h, 3A86h, 3B75h, 75550001h, 8C00003Bh, 300003Bh
		dd 7BE09100h, 3B8Ch, 3C3Ah, 3A550001h, 4900003Ch, 100003Ch
		dd 3C495200h, 3C670000h, 20000h, 3C670C91h, 3CDB0000h
		dd 10000h, 3CDB55h, 3CF400h, 91000200h,	3CF40Ch, 3D0100h
		dd 52000100h, 3DB9h, 3DD6h, 0D6550001h,	0E800003Dh, 300003Dh
		dd 7BE09100h, 3DF2h, 3E3Bh, 2A550001h, 49000040h, 3000040h
		dd 7C809100h, 419Bh, 4206h, 61550001h, 9B000042h, 1000042h
		dd 42FC5500h, 43110000h, 10000h, 435B55h, 436800h, 91000300h
		dd 43777BE0h, 43920000h, 10000h, 439252h, 439300h, 91000200h
		dd 0Ch,	0
		db 0
off_15189	dd offset loc_3598	; DATA XREF: .debug_info:0000AB3Fo
		dd offset loc_35A9
		db 1, 0, 53h
		dd offset loc_35A9
		dd offset loc_35C8
		dd 1C730002h, 35C8h, 35D8h, 910005h, 0D81C2306h, 0E000035h
		dd 3000037h, 7BD89100h,	370Eh, 3715h, 0DC91000Bh, 1C23067Bh
		dd 22007306h, 37159Fh, 371F00h,	53000100h, 371Fh, 3751h
		dd 0D8910003h, 37E77Bh,	38B400h, 91000300h, 393C7BD8h
		dd 394C0000h, 30000h, 8D7BD891h, 9F000039h, 3000039h, 7BD89100h
		dd 3A0Ah, 3A86h, 0D8910003h, 3B757Bh, 3B8C00h, 91000300h
		dd 3C3A7BD8h, 3C490000h, 50000h, 23060091h, 3C491Ch, 3C6700h
		dd 91000300h, 3CDB7BD8h, 3CF40000h, 30000h, 0F47BD891h
		dd 100003Ch, 200003Dh, 11C7300h, 0B900003Dh, 300003Dh
		dd 7BD89100h, 3DD6h, 3DF2h, 0D8910003h,	3E3B7Bh, 419B00h
		dd 91000300h, 42067BD8h, 42610000h, 30000h, 9B7BD891h
		dd 0FC000042h, 3000042h, 7BD89100h, 4311h, 435Bh, 0D8910003h
		dd 435B7Bh, 436800h, 53000100h,	436Dh, 4377h, 0D8910003h
		dd 43777Bh, 439200h, 73000200h,	43921Ch, 473E00h, 91000300h
		dd 7BD8h, 0
		db 2 dup(0)
off_152E6	dd offset loc_3598	; DATA XREF: .debug_info:0000AB95o
		dd offset loc_363A
		dw 2
a0q8		db '0ü¥8',0
		align 2
		dd offset loc_3912
		dw 3
aSX9		db 'ëÏ{Â9',0
		dw 1A00h
		dd 300003Ah, 7BEC9100h,	3A98h, 3AD9h, 5F560001h, 7500003Bh
		dd 300003Bh, 7BEC9100h,	3BA0h, 3C01h, 0EC910003h, 3C3A7Bh
		dd 3C6700h, 30000200h, 3C899Fh,	3CDB00h, 56000100h, 3CDBh
		dd 3D01h, 9F300002h, 3DB9h, 3DD6h, 0EC910003h, 3DF27Bh
		dd 3E2700h, 91000300h, 402A7BECh, 40490000h, 20000h, 42619F30h
		dd 429B0000h, 30000h, 0FC7BEC91h, 11000042h, 1000043h
		dd 43775600h, 43930000h, 20000h, 9F30h,	0
		db 2 dup(0)
off_153A6	dd offset loc_3598	; DATA XREF: .debug_info:0000ABAFo
		dd offset loc_363A
		dw 2
		dd 39F29F30h, 3A1A0000h, 30000h, 867BE491h, 0D900003Ah
		dd 200003Ah, 5F9F3000h,	7500003Bh, 300003Bh, 7BE49100h
		dd 3BA0h, 3C01h, 0E4910003h, 3C3A7Bh, 3C6700h, 30000200h
		dd 3C899Fh, 3D0100h, 30000200h,	3DB99Fh, 3DD600h, 91000300h
		dd 3DF27BE4h, 3E270000h, 30000h, 2A7BE491h, 49000040h
		dd 2000040h, 0C29F3000h, 0DF000041h, 2000041h, 619F3000h
		dd 9B000042h, 3000042h,	7BE49100h, 42FCh, 4311h, 9F300002h
		dd 4377h, 4393h, 9F300002h, 2 dup(0)
off_1545C	dd offset loc_3598	; DATA XREF: .debug_info:0000ABC5o
		dd offset loc_363A
		dd 9F300002h, 370Eh, 371Fh, 84910003h, 381C7Ch,	382300h
		dd 91000300h, 3A0A7C84h, 3A1A0000h, 30000h, 3A7C8491h
		dd 6700003Ch, 200003Ch,	0DB9F3000h, 100003Ch, 200003Dh
		dd 2A9F3000h, 49000040h, 2000040h, 5B9F3000h, 68000043h
		dd 3000043h, 7C849100h,	4377h, 4393h, 9F300002h, 2 dup(0)
off_154D4	dd offset loc_3A1A	; DATA XREF: .debug_info:0000ABD3o
		dd offset unk_3A31
		dd 9F300002h, 3A44h, 3A4Dh, 74530001h, 0B900003Dh, 100003Dh
		dd 3FE75300h, 402A0000h, 10000h, 432D53h, 433700h, 53000100h
		dd 2 dup(0)
off_15514	dd offset loc_3E5B	; DATA XREF: .debug_info:0000ABE6o
		dd offset loc_3E6E
		dd 9F300002h, 3F02h, 3F5Ch, 0D0910003h,	7Bh, 0
		db 0
off_15535	dd offset loc_3598	; DATA XREF: .debug_info:0000AC03o
		dd offset loc_363A
		db 2, 0, 30h
		dd 370E9Fh, 371F00h, 52000100h,	381Ch, 3823h, 0F0910003h
		dd 3A0A7Bh, 3A1A00h, 91000300h,	3C3A7BF0h, 3C670000h, 20000h
		dd 3CDB9F30h, 3D010000h, 20000h, 402A9F30h, 40490000h
		dd 20000h, 435B9F30h, 43680000h, 10000h, 437752h, 439300h
		dd 30000200h, 9Fh, 0
		db 0
off_155A9	dd offset loc_35C8	; DATA XREF: .debug_info:0000AC76o
		dd offset loc_35EA
		db 1, 0, 53h
		dd offset loc_3C3A
		dd offset unk_3C67
		dd 530001h, 0
		db 3 dup(0)
off_155C7	dd offset loc_35F5	; DATA XREF: .debug_info:0000ACBCo
		dd offset loc_35FE
		db 3
		dd 7BF89100h, 2	dup(0)
off_155DC	dd offset loc_35F5	; DATA XREF: .debug_info:0000ACC5o
		dd offset loc_35FE
		dd 530001h, 0
		db 3 dup(0)
off_155EF	dd offset loc_366C	; DATA XREF: .debug_info:0000ACEEo
		dd offset unk_382D
		db 3
		dd 7BCC9100h, 394Ch, 3A0Ah, 0CC910003h,	3A867Bh, 3B7500h
		dd 91000300h, 3B877BCCh, 3C3A0000h, 30000h, 677BCC91h
		dd 0DB00003Ch, 300003Ch, 7BCC9100h, 3DB9h, 3DD6h, 0CC910003h
		dd 3DF27Bh, 3E3B00h, 91000300h,	419B7BCCh, 42060000h, 30000h
		dd 617BCC91h, 9B000042h, 3000042h, 7BCC9100h, 42FCh, 4311h
		dd 0CC910003h, 435B7Bh,	436800h, 91000300h, 7BCCh, 0
		db 2 dup(0)
off_15686	dd offset loc_365C	; DATA XREF: .debug_info:0000ACFEo
		dd offset loc_366C
		dw 1
		dd 366C53h, 382D00h, 91000300h,	382D7BFCh, 38340000h, 10000h
		dd 383453h, 391200h, 91000300h,	393C7BFCh, 3A1A0000h, 30000h
		dd 867BFC91h, 3A00003Ah, 300003Ch, 7BFC9100h, 3C67h, 3CDBh
		dd 0FC910003h, 3DB97Bh,	3DE800h, 91000300h, 3DF27BFCh
		dd 3E3B0000h, 30000h, 9B7BFC91h, 6000041h, 3000042h, 7BFC9100h
		dd 4261h, 429Bh, 0FC910003h, 42FC7Bh, 431100h, 91000300h
		dd 435B7BFCh, 43680000h, 30000h, 7BFC91h, 0
		db 3 dup(0)
off_15733	dd offset loc_370E	; DATA XREF: .debug_info:0000AD1Eo
		dd offset loc_3715
		db 0Bh
		dd 7BDC9100h, 61C2306h,	9F220073h, 3715h, 371Fh, 15530001h
		dd 23000038h, 2000038h,	5B9F3000h, 68000043h, 1000043h
		dd 5300h, 0
		db 2 dup(0)
off_15772	dd offset loc_363A	; DATA XREF: .debug_info:0000AD4Bo
		dd offset loc_3912
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_393C
		dd offset loc_3A1A
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset byte_3A86
		dd offset loc_3C3A
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset unk_3C67
		dd offset loc_3CDB
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset unk_3DB9
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E3B
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_419B
		dd offset loc_4206
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_4261
		dd offset loc_429B
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_42FC
		dd offset loc_4311
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 2
		dd offset loc_435B
		dd offset loc_4368
		dw 6
		db 0F2h
		dd offset byte_ACF2
		align 4
		dd 0
		db 2 dup(0)
off_1581A	dd offset loc_363A	; DATA XREF: .debug_info:0000AD54o
		dd offset loc_3912
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_393C
		dd offset loc_3A1A
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset byte_3A86
		dd offset loc_3C3A
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset unk_3C67
		dd offset loc_3CDB
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset unk_3DB9
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E3B
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_419B
		dd offset loc_4206
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_4261
		dd offset loc_429B
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_42FC
		dd offset loc_4311
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 2
		dd offset loc_435B
		dd offset loc_4368
		dw 6
		db 0F2h
		dd offset aAtag		; "Atag"
		align 4
		dd 0
		db 2 dup(0)
off_158C2	dd offset loc_363A	; DATA XREF: .debug_info:0000AD5Do
		dd offset loc_3912
		dw 3
aSr9		db 'ë‡{<9',0
		dw 1A00h
		dd 300003Ah, 7BE09100h,	3A86h, 3C3Ah, 0E0910003h, 3C677Bh
		dd 3CDB00h, 91000300h, 3DB97BE0h, 3DE80000h, 30000h, 0F27BE091h
		dd 3B00003Dh, 300003Eh,	7BE09100h, 419Bh, 4206h, 0E0910003h
		dd 42617Bh, 429B00h, 91000300h,	42FC7BE0h, 43110000h, 30000h
		dd 5B7BE091h, 68000043h, 3000043h, 7BE09100h, 2	dup(0)
off_1594C	dd offset loc_363A	; DATA XREF: .debug_info:0000AD66o
		dd offset loc_3912
		dd 0D0910003h, 393C7Bh,	3A1A00h, 91000300h, 3A867BD0h
		dd 3C3A0000h, 30000h, 677BD091h, 0DB00003Ch, 300003Ch
		dd 7BD09100h, 3DB9h, 3DE8h, 0D0910003h,	3DF27Bh, 3E3B00h
		dd 91000300h, 419B7BD0h, 42060000h, 30000h, 617BD091h
		dd 9B000042h, 3000042h,	7BD09100h, 42FCh, 4311h, 0D0910003h
		dd 435B7Bh, 436800h, 91000300h,	7BD0h, 0
		db 2 dup(0)
off_159D6	dd offset loc_363A	; DATA XREF: .debug_info:0000AD74o
		dd offset loc_3912
		dw 17h
		dd 67BD091h, 244B4012h,	14163522h, 22244B40h, 1282Dh, 3C9F1316h
		dd 1A000039h, 1700003Ah, 7BD09100h, 4B401206h, 16352224h
		dd 244B4014h, 1282D22h,	9F131600h, 3A86h, 3C3Ah, 0D0910017h
		dd 4012067Bh, 3522244Bh, 4B401416h, 282D2224h, 13160001h
		dd 3C679Fh, 3CDB00h, 91001700h,	12067BD0h, 22244B40h, 40141635h
		dd 2D22244Bh, 16000128h, 3DB99F13h, 3DE80000h, 170000h
		dd 67BD091h, 244B4012h,	14163522h, 22244B40h, 1282Dh, 0F29F1316h
		dd 3B00003Dh, 1700003Eh, 7BD09100h, 4B401206h, 16352224h
		dd 244B4014h, 1282D22h,	9F131600h, 419Bh, 4206h, 0D0910017h
		dd 4012067Bh, 3522244Bh, 4B401416h, 282D2224h, 13160001h
		dd 42619Fh, 429B00h, 91001700h,	12067BD0h, 22244B40h, 40141635h
		dd 2D22244Bh, 16000128h, 42FC9F13h, 43110000h, 170000h
		dd 67BD091h, 244B4012h,	14163522h, 22244B40h, 1282Dh, 5B9F1316h
		dd 68000043h, 17000043h, 7BD09100h, 4B401206h, 16352224h
		dd 244B4014h, 1282D22h,	9F131600h, 2 dup(0)
off_15B28	dd offset loc_364C	; DATA XREF: .debug_info:0000AD7Do
		dd offset loc_3658
		dd 58530001h, 66000036h, 3000038h, 7BCC9100h, 3866h, 3874h
		dd 7B560001h, 83000038h, 1000038h, 393C5600h, 3A1A0000h
		dd 30000h, 867BCC91h, 7500003Ah, 300003Bh, 7BCC9100h, 3B75h
		dd 3B81h, 81560001h, 3A00003Bh,	300003Ch, 7BCC9100h, 3C67h
		dd 3CDBh, 0CC910003h, 3DB97Bh, 3DE800h,	91000300h, 3DF27BCCh
		dd 3E3B0000h, 30000h, 9B7BCC91h, 6000041h, 3000042h, 7BCC9100h
		dd 4261h, 429Bh, 0CC910003h, 42FC7Bh, 431100h, 91000300h
		dd 435B7BCCh, 43680000h, 30000h, 7BCC91h, 0
		db 3 dup(0)
off_15BEB	dd offset loc_364C	; DATA XREF: .debug_info:0000AD86o
		dd offset loc_366C
		db 2
		dd 2D9F3400h, 66000038h, 2000038h, 669F3400h, 74000038h
		dd 1000038h, 387E5100h,	38830000h, 10000h, 393C51h, 394C00h
		dd 34000200h, 3B759Fh, 3B8100h,	51000100h, 3DD6h, 3DE8h
		dd 9F340002h, 2	dup(0)
off_15C44	dd offset unk_3866	; DATA XREF: .debug_info:0000AD8Fo
		dd offset loc_3874
		dd 7F500001h, 83000038h, 1000038h, 393C5000h, 394C0000h
		dd 20000h, 3B759F31h, 3B7D0000h, 10000h, 3B7D50h, 3B8100h
		dd 70000300h, 9F7Fh, 0
		db 2 dup(0)
off_15C86	dd offset loc_369C	; DATA XREF: .debug_info:0000ADC9o
		dd offset loc_371F
		dw 3
aSC7		db 'ëÃ{Á7',0
		dw 2300h
		dd 3000038h, 7BCC9100h,	398Dh, 399Fh, 0CC910003h, 435B7Bh
		dd 436800h, 91000300h, 7BCCh, 0
		db 2 dup(0)
off_15CC2	dd offset loc_369C	; DATA XREF: .debug_info:0000ADD2o
		dd offset loc_3712
		dw 1
		dd 371257h, 371F00h, 91000600h,	23067BDCh, 37E728h, 382300h
		dd 57000100h, 398Dh, 399Fh, 5B570001h, 68000043h, 6000043h
		dd 7BDC9100h, 282306h, 0
		db 3 dup(0)
off_15D0B	dd offset loc_369C	; DATA XREF: .debug_info:0000ADDBo
		dd offset loc_36AF
		db 1
		dd 36AF5000h, 371F0000h, 60000h, 67BDC91h, 37E72423h, 38230000h
		dd 60000h, 67BDC91h, 398D2423h,	399F0000h, 60000h, 67BDC91h
		dd 435B2423h, 43680000h, 60000h, 67BDC91h, 2423h, 0
		db 2 dup(0)
off_15D5E	dd offset loc_36A6	; DATA XREF: .debug_info:0000ADE9o
		dd offset loc_36AF
		dw 1
		dd 36AF51h, 36FC00h, 56000100h,	37E7h, 3802h, 2560001h
		dd 15000038h, 1000038h,	398D5100h, 39940000h, 10000h, 56h
		dd 0
		db 0
off_15D9D	dd offset loc_36A6	; DATA XREF: .debug_info:0000ADF2o
		dd offset loc_36D1
		db 1, 0, 50h
		dd offset unk_37E7
		dd offset loc_3800
		dd 2500001h, 15000038h,	1000038h, 398D5000h, 399F0000h
		dd 10000h, 50h,	0
		db 0
off_15DD1	dd offset loc_36B8	; DATA XREF: .debug_info:0000AE04o
		dd offset loc_36CE
		db 1, 0, 51h
		dd offset unk_37E7
		dd offset loc_37E9
		dd 0E9510001h, 0D000037h, 3000038h, 9F7F7100h, 398Dh, 399Fh
		dd 7F710003h, 9Fh, 0
		db 0
off_15E09	dd offset loc_37FE	; DATA XREF: .debug_info:0000AE16o
		dd offset loc_380D
		db 1, 0, 51h
		dd 2 dup(0)
off_15E1C	dd offset loc_36D4	; DATA XREF: .debug_info:0000AE2Ao
		dd offset loc_36FC
		dd 520001h, 0
		db 3 dup(0)
off_15E2F	dd offset loc_36D8	; DATA XREF: .debug_info:0000AE33o
		dd offset loc_36EA
		db 6
		dd 72007100h, 0EA9F1C00h, 0FC000036h, 0E000036h, 33007600h
		dd 22007724h, 72060C23h, 9F1C00h, 0
		db 3 dup(0)
off_15E5F	dd offset loc_3799	; DATA XREF: .debug_info:0000AE54o
		dd offset loc_37A1
		db 3
		dd 7BD09100h, 2	dup(0)
off_15E74	dd offset loc_3799	; DATA XREF: .debug_info:0000AE62o
		dd offset loc_37A1
		dd 9F300002h, 37AFh, 37BBh, 0BC500001h,	0C0000037h, 1000037h
		dd 3C285000h, 3C310000h, 10000h, 50h, 0
		db 0
off_15EA9	dd offset loc_3AA6	; DATA XREF: .debug_info:0000AEB1o
		dd offset loc_3AD9
		db 1, 0, 57h
		dd offset loc_3C89
		dd offset loc_3CDB
		dd 0FC570001h, 11000042h, 1000043h, 5700h, 0
		db 2 dup(0)
off_15ED2	dd offset loc_3C89	; DATA XREF: .debug_info:0000AECAo
		dd offset loc_3CDB
		dw 1
		dd 42FC57h, 431100h, 57000100h,	2 dup(0)
off_15EF0	dd offset loc_3C0A	; DATA XREF: .debug_info:0000AF46o
					; .debug_info:0000AF88o
		dd offset loc_3C28
		dd 67500001h, 7700003Ch, 100003Ch, 5000h, 0
		db 2 dup(0)
off_15F0E	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF5Fo
		dd offset unk_3B5F
		dw 6
		db 0F2h
		dd offset byte_AF3A
		align 2
		dd offset loc_3B8C
		dd offset loc_3B96
		dw 6
		db 0F2h
		dd offset byte_AF3A
		align 2
		dd offset loc_3C01
		dd offset loc_3C28
		dw 6
		db 0F2h
		dd offset byte_AF3A
		align 2
		dd offset unk_3C67
		dd offset loc_3C89
		dw 6
		db 0F2h
		dd offset byte_AF3A
		align 2
		dd offset loc_3E31
		dd offset loc_3E3B
		dw 6
		db 0F2h
		dd offset byte_AF3A
		align 10h
		dd 0
		db 2 dup(0)
off_15F66	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF68o
		dd offset unk_3B5F
		dw 1
		dd 3B8C55h, 3B9600h, 55000100h,	3C01h, 3C28h, 67550001h
		dd 8900003Ch, 100003Ch,	3E315500h, 3E3B0000h, 10000h, 55h
		dd 0
		db 0
off_15FA5	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF71o
		dd offset unk_3B5F
		db 3, 0, 91h
aM		db '–{å;',0
		align 2
		dd offset loc_3B91
		dw 1
		dd 3B9157h, 3B9600h, 91000300h,	3C017BD0h, 3C280000h, 30000h
		dd 677BD091h, 8900003Ch, 300003Ch, 7BD09100h, 3E31h, 3E3Bh
		dd 0D0910003h, 7Bh, 0
		db 0
off_15FF9	dd offset loc_3B01	; DATA XREF: .debug_info:0000AF7Fo
		dd offset loc_3B09
		db 3, 0, 91h
		dd offset off_7BCE+2
		dd 0
		db 2 dup(0)
off_1600E	dd offset loc_3B01	; DATA XREF: .debug_info:0000AF91o
		dd offset loc_3B09
		dw 2
		dd 3B119F30h, 3B200000h, 10000h, 3B2051h, 3B4200h, 56000100h
		dd 3C01h, 3C28h, 67560001h, 8900003Ch, 100003Ch, 3E315600h
		dd 3E3B0000h, 10000h, 51h, 0
		db 0
off_16059	dd offset loc_3B01	; DATA XREF: .debug_info:0000AF9Ao
		dd offset loc_3B09
		db 2, 0, 30h
		dd 3B249Fh, 3B3D00h, 50000100h,	3B3Eh, 3B42h, 1500001h
		dd 0A00003Ch, 100003Ch,	5000h, 0
		db 2 dup(0)
off_1608E	dd offset loc_3B01	; DATA XREF: .debug_info:0000AFA3o
		dd offset loc_3B09
		dw 2
		dd 3B119F30h, 3B240000h, 20000h, 3B249F37h, 3B3D0000h
		dd 10000h, 3B3E51h, 3B4200h, 51000100h,	3C01h, 3C0Ah, 31510001h
		dd 3B00003Eh, 200003Eh,	9F3700h, 0
		db 3 dup(0)
off_160DB	dd offset loc_3B67	; DATA XREF: .debug_info:0000B018o
		dd offset unk_3B75
		db 1
		dd 3BA05600h, 3C010000h, 10000h, 3DB956h, 3DD600h, 56000100h
		dd 3DF2h, 3E27h, 61560001h, 9B000042h, 1000042h, 5600h
		dd 0
		db 2 dup(0)
off_1611A	dd offset loc_3BAA	; DATA XREF: .debug_info:0000B035o
		dd offset loc_3BB2
		dw 1
		dd offset loc_4F+2
		dd 0
		db 0
off_1612D	dd offset loc_3DCF	; DATA XREF: .debug_info:0000B04Bo
					; jumptable 00003DBC case 12
		dd offset loc_3DD6
		db 1, 0, 53h
		dd offset loc_3E0D
		dd offset loc_3E14	; jumptable 00003DBC cases 2,7,10
		dd 20530001h, 2700003Eh, 100003Eh, 5300h, 0
		db 2 dup(0)
off_16156	dd offset loc_3BBF	; DATA XREF: .debug_info:0000B068o
		dd offset loc_3C01
		dw 6
		db 0F2h
		dd offset byte_B03F
		align 2
		dd offset unk_3DB9
		dd offset loc_3DD6
		dw 6
		db 0F2h
		dd offset byte_B03F
		align 2
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E27
		dw 6
		db 0F2h
		dd offset byte_B03F
		align 2
		dd offset loc_4261
		dd offset loc_429B
		dw 6
		db 0F2h
		dd offset byte_B03F
		align 4
		dd 0
		db 2 dup(0)
off_1619E	dd offset loc_3BBF	; DATA XREF: .debug_info:0000B071o
		dd offset loc_3BD3+4
		dw 6
		dd 720075h, 3DB99F22h, 3DD60000h, 60000h, 720075h, 3DF29F22h
		dd 3DFD0000h, 60000h, 720075h, 3DFD9F22h, 3E140000h, 0C0000h
		dd 947CA191h, 1AFF0801h, 9F220075h, 3E14h, 3E27h, 750006h
		dd 9F220072h, 4261h, 426Ch, 750006h, 9F220072h,	427Eh
		dd 4289h, 750006h, 9F220072h, 2	dup(0)
off_1621C	dd offset loc_3BBF	; DATA XREF: .debug_info:0000B07Ao
		dd offset loc_3C01
		dd 0B9530001h, 0CF00003Dh, 100003Dh, 3DCF5300h,	3DD60000h
		dd 60000h, 720070h, 3DF29F1Ch, 3DFB0000h, 10000h, 3DFB53h
		dd 3DFD00h, 70000600h, 1C007200h, 3DFD9Fh, 3E1400h, 70000C00h
		dd 7CA19100h, 0FF080194h, 149F1C1Ah, 2000003Eh,	100003Eh
		dd 3E205300h, 3E270000h, 60000h, 720070h, 42619F1Ch, 429B0000h
		dd 10000h, 53h,	0
		db 0
off_162A1	dd offset loc_3BBF	; DATA XREF: .debug_info:0000B083o
		dd offset loc_3BD3+4
		db 1, 0, 51h
		dd offset unk_3DB9
		dd offset loc_3DD6
		dd 0F2510001h, 0F600003Dh, 100003Dh, 3E145100h,	3E270000h
		dd 10000h, 426151h, 426C00h, 51000100h,	427Eh, 4289h, 510001h
		dd 0
		db 3 dup(0)
off_162EB	dd offset unk_3DFD	; DATA XREF: .debug_info:0000B0A0o
		dd offset loc_3E14	; jumptable 00003DBC cases 2,7,10
		db 1
		dd offset off_50D8+28h
		dd 0
		db 2 dup(0)
off_162FE	dd offset unk_3DFD	; DATA XREF: .debug_info:0000B0B7o
		dd offset loc_3E14	; jumptable 00003DBC cases 2,7,10
		dw 1
		dd offset loc_4F+4
		dd 0
		db 0
off_16311	dd offset loc_38DC	; DATA XREF: .debug_info:0000B265o
		dd offset loc_38F8
		db 2, 0, 31h
		dd 390E9Fh, 391200h, 53000100h,	2 dup(0)
off_16330	dd offset unk_3A31	; DATA XREF: .debug_info:0000B27Fo
		dd offset loc_3A43
		dd 58520001h, 6A00003Ah, 100003Ah, 3D015200h, 3D470000h
		dd 10000h, 3D4752h, 3D5300h, 73000E00h,	73243100h, 24342200h
		dd 22061C75h, 3D539Fh, 3D8400h,	52000100h, 3D84h, 3D8Bh
		dd 7F73000Dh, 24317F73h, 70243422h, 8B9F2200h, 8D00003Dh
		dd 0E00003Dh, 737F7300h, 2224317Fh, 1C752434h, 8D9F2206h
		dd 0A100003Dh, 100003Dh, 3DA45200h, 3DB90000h, 10000h
		dd 3DE852h, 3DF200h, 52000100h,	3FB9h, 3FCFh, 2520001h
		dd 5000040h, 0A000040h,	8007300h, 1C761E30h, 59F2206h
		dd 15000040h, 0A000040h, 87F7300h, 1C761E30h, 159F2206h
		dd 2A000040h, 0A000040h, 8007300h, 1C761E30h, 119F2206h
		dd 2C000043h, 1000043h,	432D5200h, 43490000h, 10000h, 52h
		dd 0
		db 0
off_16429	dd offset loc_3D17	; DATA XREF: .debug_info:0000B2A8o
		dd offset loc_3D53
		db 1, 0, 51h
		dd offset loc_3FB9
		dd offset loc_3FC8
		dd 0C8510001h, 0CF00003Fh, 900003Fh, 7BF89100h,	6107206h
		dd 43119F22h, 432C0000h, 10000h, 51h, 0
		db 0
off_16465	dd offset loc_3A60	; DATA XREF: .debug_info:0000B2C5o
		dd offset loc_3A6A	; jumptable 00003D04 default case
		db 2, 0, 72h
		dd 3D010Ch, 3D4700h, 72000200h,	3D470Ch, 3D5300h, 73000F00h
		dd 73243100h, 24342200h, 22061C75h, 3DE80C23h, 3DF20000h
		dd 20000h, 3FB90C72h, 3FCF0000h, 20000h, 43110C72h, 432C0000h
		dd 20000h, 0C72h, 0
		db 2 dup(0)
off_164C2	dd offset loc_3D21	; DATA XREF: .debug_info:0000B2D9o
		dd offset loc_3D43
		dw 1
		dd 3D4350h, 3D5300h, 71000200h,	3FB900h, 3FCB00h, 50000100h
		dd 3FCBh, 3FCFh, 0F8910008h, 1072067Bh,	43112206h, 432C0000h
		dd 10000h, 50h,	0
		db 0
off_16509	dd offset loc_3D38	; DATA XREF: .debug_info:0000B2F2o
		dd offset loc_3D53
		db 1, 0, 56h
		dd offset loc_3FB9
		dd offset loc_3FEB
		dd 560001h, 0
		db 3 dup(0)
off_16527	dd offset loc_3E8E	; DATA XREF: .debug_info:0000B385o
		dd offset loc_3FB9
		db 3
		dd 7BE09100h, 4049h, 413Fh, 0E0910003h,	42067Bh, 425400h
		dd 91000300h, 429B7BE0h, 42CC0000h, 30000h, 6D7BE091h
		dd 77000043h, 3000043h,	7BE09100h, 4393h, 473Eh, 0E0910003h
		dd 7Bh,	0
		db 0
off_1657D	dd offset loc_3E9D	; DATA XREF: .debug_info:0000B396o
		dd offset loc_3EAF
		db 1, 0, 53h
		dd offset loc_3EAF
		dd offset loc_3FB9
		dd 0F0910003h, 40497Bh,	413F00h, 91000300h, 42067BF0h
		dd 42540000h, 30000h, 9B7BF091h, 0CC000042h, 3000042h
		dd 7BF09100h, 436Dh, 4377h, 0F0910003h,	43937Bh, 473E00h
		dd 91000300h, 7BF0h, 0
		db 2 dup(0)
off_165DE	dd offset loc_3E9D	; DATA XREF: .debug_info:0000B3A4o
		dd offset loc_3EAF
		dw 2
		dd 3EF19F30h, 3EFE0000h, 30000h, 7BE891h, 0
		db 3 dup(0)
off_165FF	dd offset loc_3EAF	; DATA XREF: .debug_info:0000B3C1o
		dd offset loc_3EFE
		db 3
		dd 7BF49100h, 3F5Ch, 3FB9h, 0F4910003h,	40497Bh, 413F00h
		dd 91000300h, 42067BF4h, 42540000h, 30000h, 9B7BF491h
		dd 0CC000042h, 3000042h, 7BF49100h, 436Dh, 4377h, 0F4910003h
		dd 43937Bh, 473E00h, 91000300h,	7BF4h, 0
		db 2 dup(0)
off_16662	dd offset loc_3EAF	; DATA XREF: .debug_info:0000B3CAo
		dd offset loc_3EFE
		dw 3
		dd 5C7BF891h, 0B900003Fh, 300003Fh, 7BF89100h, 4049h, 413Fh
		dd 0F8910003h, 42067Bh,	425400h, 91000300h, 429B7BF8h
		dd 42CC0000h, 30000h, 6D7BF891h, 77000043h, 3000043h, 7BF89100h
		dd 4393h, 473Eh, 0F8910003h, 7Bh, 0
		db 0
off_166C5	dd offset loc_3EAF	; DATA XREF: .debug_info:0000B3D3o
		dd offset loc_3EF4
		db 1, 0, 55h
		dd offset loc_3EF4
		dd offset loc_3EFE
		dd 6C750003h, 3F5C9Fh, 3FB900h,	55000100h, 4049h, 413Fh
		dd 6550001h, 54000042h,	1000042h, 429B5500h, 42CC0000h
		dd 10000h, 436D55h, 437700h, 55000100h,	4393h, 473Eh, 550001h
		dd 0
		db 3 dup(0)
off_16727	dd offset loc_3EB2	; DATA XREF: .debug_info:0000B3E1o
		dd offset loc_3EE0
		db 1
		dd 3EE05000h, 3EE40000h, 20000h, 3F5C0875h, 3F800000h
		dd 10000h, 3F8150h, 3F8E00h, 50000100h,	3F8Eh, 3F92h, 8750002h
		dd 4049h, 4081h, 81500001h, 0C8000040h,	2000040h, 0C9087500h
		dd 0D1000040h, 1000040h, 40D15000h, 40D30000h, 20000h
		dd 40D30875h, 40DA0000h, 10000h, 40DA50h, 410700h, 75000200h
		dd 420608h, 422100h, 50000100h,	4221h, 423Dh, 8750002h
		dd 424Dh, 4252h, 52500001h, 54000042h, 2000042h, 9B087500h
		dd 0AA000042h, 2000042h, 0C5087500h, 0CC000042h, 2000042h
		dd 0A4087500h, 1F000043h, 2000044h, 2A087500h, 35000044h
		dd 2000044h, 47087500h,	70000044h, 2000044h, 21087500h
		dd 2B000045h, 2000045h,	87087500h, 1C000045h, 2000046h
		dd 2E087500h, 64000046h, 2000046h, 76087500h, 0F000046h
		dd 2000047h, 87500h, 0
		db 3 dup(0)
off_16847	dd offset loc_3EC1	; DATA XREF: .debug_info:0000B3EAo
		dd offset loc_3EE0+4
		db 1
		dd 3F5C5200h, 3F800000h, 10000h, 3F8152h, 3F9200h, 52000100h
		dd 4049h, 409Ah, 9A520001h, 0C8000040h,	0C000040h, 7BF89100h
		dd 6087506h, 22061423h,	40C99Fh, 40D300h, 52000100h, 4206h
		dd 4237h, 37520001h, 3D000042h,	0C000042h, 7BF89100h, 6087506h
		dd 22061423h, 424D9Fh, 425400h,	52000100h, 42C5h, 42CCh
		dd 0F891000Ch, 875067Bh, 6142306h, 43A49F22h, 441F0000h
		dd 0C0000h, 67BF891h, 23060875h, 9F220614h, 442Ah, 4435h
		dd 0F891000Ch, 875067Bh, 6142306h, 44479F22h, 44700000h
		dd 0C0000h, 67BF891h, 23060875h, 9F220614h, 4521h, 452Bh
		dd 0F891000Ch, 875067Bh, 6142306h, 45879F22h, 461C0000h
		dd 0C0000h, 67BF891h, 23060875h, 9F220614h, 462Eh, 4664h
		dd 0F891000Ch, 875067Bh, 6142306h, 46769F22h, 470F0000h
		dd 0C0000h, 67BF891h, 23060875h, 9F220614h, 2 dup(0)
off_16978	dd offset loc_4209	; DATA XREF: .debug_info:0000B407o
		dd offset loc_4254
		db 3
byte_16981	db 0, 91h		; DATA XREF: .debug_info:000056F0o
off_16983	dd offset off_7BF2+2	; DATA XREF: .debug_info:000056FCo
		align 4
		db 2 dup(0)
word_1698A	dw 0			; DATA XREF: .debug_info:00005774o
		db 0
off_1698D	dd offset loc_4209	; DATA XREF: .debug_info:0000B410o
		dd offset loc_4254
		db 3, 0, 91h
		dd offset off_7BF6+2
		dd 0
		db 2 dup(0)
off_169A2	dd offset loc_4209	; DATA XREF: .debug_info:0000B419o
		dd offset loc_4237
		dw 1
		dd 423752h, 423D00h, 91000C00h,	75067BF8h, 14230608h, 4D9F2206h
		dd 54000042h, 1000042h,	5200h, 0
		db 2 dup(0)
off_169D6	dd offset loc_4209	; DATA XREF: .debug_info:0000B422o
		dd offset loc_4254
		dw 1
		dd offset loc_55
		dd 0
		db 0
off_169E9	dd offset loc_4209	; DATA XREF: .debug_info:0000B430o
		dd offset loc_4221
		db 1, 0, 50h
		dd offset loc_4221
		dd offset loc_4239+4
		dd 8750002h, 424Dh, 4252h, 52500001h, 54000042h, 2000042h
		dd 87500h, 0
		db 3 dup(0)
off_16A1F	dd offset loc_420C	; DATA XREF: .debug_info:0000B439o
		dd offset loc_4225
		db 8
		dd 7BF89100h, 22007306h, 42259Fh, 423D00h, 91000C00h, 75067BF8h
		dd 10230608h, 4D9F2206h, 54000042h, 8000042h, 7BF89100h
		dd 22007306h, 9Fh, 0
		db 0
off_16A61	dd offset loc_4225	; DATA XREF: .debug_info:0000B449o
		dd offset loc_4237
		db 2, 0, 72h
		dd 423700h, 423D00h, 91000B00h,	75067BF8h, 14230608h, 2206h
		dd 0
		db 2 dup(0)
off_16A8A	dd offset loc_420C	; DATA XREF: .debug_info:0000B466o
		dd offset loc_4235
		dw 1
		dd 424D51h, 425400h, 51000100h,	2 dup(0)
off_16AA8	dd offset loc_3F81	; DATA XREF: .debug_info:0000B4EDo
		dd offset loc_3FB9
		dd 0F4910003h, 7Bh, 0
		db 0
off_16ABD	dd offset loc_3F81	; DATA XREF: .debug_info:0000B4F6o
		dd offset loc_3FB9
		db 3, 0, 91h
		dd offset off_7BF6+2
		dd 0
		db 2 dup(0)
off_16AD2	dd offset loc_3F81	; DATA XREF: .debug_info:0000B4FFo
		dd offset loc_3F8E+4
		dw 1
		dd offset loc_4F+3
		dd 0
		db 0
off_16AE5	dd offset loc_3F81	; DATA XREF: .debug_info:0000B508o
		dd offset loc_3FB9
		db 1, 0, 55h
		dd 2 dup(0)
off_16AF8	dd offset loc_405D	; DATA XREF: .debug_info:0000B544o
		dd offset loc_4069
		dd 510001h, 0
		db 3 dup(0)
off_16B0B	dd offset loc_4069	; DATA XREF: .debug_info:0000B562o
		dd offset loc_40D3
		db 3
		dd 7BF89100h, 42C5h, 42CCh, 0F8910003h,	43A47Bh, 473E00h
		dd 91000300h, 7BF8h, 0
		db 2 dup(0)
off_16B3A	dd offset loc_4069	; DATA XREF: .debug_info:0000B56Bo
		dd offset loc_409A
		dw 1
		dd 409A52h, 40C800h, 91000C00h,	75067BF8h, 14230608h, 0C99F2206h
		dd 0D3000040h, 1000040h, 42C55200h, 42CC0000h, 0C0000h
		dd 67BF891h, 23060875h,	9F220614h, 43A4h, 441Fh, 0F891000Ch
		dd 875067Bh, 6142306h, 442A9F22h, 44350000h, 0C0000h, 67BF891h
		dd 23060875h, 9F220614h, 4447h,	4470h, 0F891000Ch, 875067Bh
		dd 6142306h, 45219F22h,	452B0000h, 0C0000h, 67BF891h, 23060875h
		dd 9F220614h, 4587h, 461Ch, 0F891000Ch,	875067Bh, 6142306h
		dd 462E9F22h, 46640000h, 0C0000h, 67BF891h, 23060875h
		dd 9F220614h, 4676h, 470Fh, 0F891000Ch,	875067Bh, 6142306h
		dd 9F22h, 0
		db 2 dup(0)
off_16C1E	dd offset loc_4069	; DATA XREF: .debug_info:0000B574o
		dd offset loc_40D3
		dw 1
		dd 42C555h, 42CC00h, 55000100h,	43A4h, 473Eh, 550001h
		dd 0
		db 3 dup(0)
off_16C47	dd offset loc_4069	; DATA XREF: .debug_info:0000B582o
		dd offset loc_4081
		db 1
		dd 40815000h, 40C80000h, 20000h, 40C90875h, 40D10000h
		dd 10000h, 40D150h, 40D300h, 75000200h,	42C508h, 42CC00h
		dd 75000200h, 43A408h, 441F00h,	75000200h, 442A08h, 443500h
		dd 75000200h, 444708h, 447000h,	75000200h, 452108h, 452B00h
		dd 75000200h, 458708h, 461C00h,	75000200h, 462E08h, 466400h
		dd 75000200h, 467608h, 470F00h,	75000200h, 8, 0
		db 0
off_16CDD	dd offset loc_406C	; DATA XREF: .debug_info:0000B58Bo
		dd offset loc_4085
		db 8, 0, 91h
		dd 73067BF8h, 859F2200h, 0C8000040h, 0C000040h,	7BF89100h
		dd 6087506h, 22061023h,	40C99Fh, 40D300h, 91000800h, 73067BF8h
		dd 0C59F2200h, 0CC000042h, 0C000042h, 7BF89100h, 6087506h
		dd 22061023h, 43A49Fh, 441F00h,	91000C00h, 75067BF8h, 10230608h
		dd 2A9F2206h, 35000044h, 0C000044h, 7BF89100h, 6087506h
		dd 22061023h, 44479Fh, 447000h,	91000C00h, 75067BF8h, 10230608h
		dd 219F2206h, 2B000045h, 0C000045h, 7BF89100h, 6087506h
		dd 22061023h, 45879Fh, 461C00h,	91000C00h, 75067BF8h, 10230608h
		dd 2E9F2206h, 64000046h, 0C000046h, 7BF89100h, 6087506h
		dd 22061023h, 46769Fh, 470F00h,	91000C00h, 75067BF8h, 10230608h
		dd 9F2206h, 0
		db 3 dup(0)
off_16DCF	dd offset loc_4096	; DATA XREF: .debug_info:0000B59Bo
		dd offset unk_40C9
		db 1
		dd 42C55700h, 42CC0000h, 10000h, 43A457h, 43A600h, 57000100h
		dd 43A6h, 4447h, 0CC910003h, 44477Bh, 445300h, 57000100h
		dd 4453h, 4460h, 0CC910003h, 44607Bh, 447000h, 57000100h
		dd 4470h, 4521h, 0CC910003h, 45217Bh, 452B00h, 57000100h
		dd 452Bh, 4587h, 0CC910003h, 45877Bh, 459100h, 57000100h
		dd 4591h, 462Eh, 0CC910003h, 462E7Bh, 464000h, 57000100h
		dd 4640h, 4676h, 0CC910003h, 46767Bh, 467800h, 57000100h
		dd 4678h, 473Eh, 0CC910003h, 7Bh, 0
		db 0
off_16E95	dd offset loc_409F	; DATA XREF: .debug_info:0000B5A4o
		dd offset unk_40C9
		db 1, 0, 56h
		dd offset loc_42C5
		dd offset loc_42CC
		dd 0A4560001h, 55000043h, 1000044h, 44555600h, 44590000h
		dd 70000h, 72061075h, 599F2200h, 60000044h, 0C000044h
		dd 94057500h, 1AFF0801h, 22061075h, 44609Fh, 473E00h, 56000100h
		dd 2 dup(0)
off_16EF0	dd offset loc_40A4	; DATA XREF: .debug_info:0000B5ADo
		dd offset unk_40C9
		dd 0C5530001h, 0CC000042h
		db 42h
byte_16F01	db 0			; DATA XREF: .debug_info:0000C38Co
					; .debug_info:0000C3BBo
word_16F02	dw 100h			; DATA XREF: .debug_info:00005B55o
		db 0
byte_16F05	db 53h,	0A4h, 43h	; DATA XREF: .debug_info:0000A6BCo
		dd 43B10000h, 10000h, 43B153h, 43B600h,	50000100h
		db 0B6h, 43h, 0
byte_16F1F	db 0			; DATA XREF: .debug_info:000057F9o
		dd offset loc_4419
		dd 19530001h, 1B000044h, 6000044h, 72007300h, 1B9F1C00h
		dd 1F000044h, 1000044h,	442A5300h, 444A0000h, 10000h, 444A53h
		dd 445900h, 75000700h, 72060Ch,	44599F1Ch, 44600000h, 0C0000h
		dd 75060C75h, 8019405h,	9F1C1AFFh, 4460h, 4470h, 70530001h
		dd 0E2000044h, 3000044h
		db 0
aSaTd		db 'ëÄ|‚D',0            ; DATA XREF: .debug_info:00005760o
		align 10h
		dd offset loc_44E6
		dd 80910008h, 77067Ch, 44E69F1Ch, 44E80000h, 30000h, 0EF7C8091h
		dd 21000044h, 3000045h,	7C809100h, 4521h, 4532h, 32530001h
		dd 37000045h, 1000045h,	45375000h, 457C0000h, 10000h, 457C53h
		dd 458000h, 73000800h, 7BD89100h, 809F1C06h, 8A000045h
		dd 1000045h, 458A5300h,	458F0000h, 70000h, 72060C75h, 8F9F1C00h
		dd 0A0000045h, 1000045h, 45A05300h, 45A50000h, 10000h
		dd 45A550h, 460800h, 53000100h,	4608h, 460Ah, 730006h
		dd 9F1C0072h, 460Ah, 4687h, 87530001h, 8C000046h, 1000046h
		dd 468C5000h, 46F70000h, 10000h, 46F753h, 46F900h, 73000600h
		dd 1C007200h, 46F99Fh, 473E00h,	53000100h, 2 dup(0)
off_1707C	dd offset loc_40A4	; DATA XREF: .debug_info:0000B5B6o
		dd offset unk_40C9
		dd 9F300002h, 42C5h, 42CCh, 9F300002h, 43A4h, 43AAh, 9F300002h
		dd 4417h, 441Fh, 1F570001h, 2A000044h, 1000044h, 44475300h
		dd 444A0000h, 20000h, 444A9F30h, 44600000h, 10000h, 446053h
		dd 447000h, 30000200h, 44E09Fh,	44EF00h, 51000100h, 4521h
		dd 452Bh, 9F300002h, 4578h, 4587h, 87510001h, 8A000045h
		dd 2000045h, 8A9F3000h,	8F000045h, 1000045h, 458F5300h
		dd 45990000h, 20000h, 46069F30h, 46110000h, 10000h, 462E57h
		dd 468000h, 30000200h, 46F59Fh,	470000h, 57000100h, 2 dup(0)
off_17148	dd offset loc_462E	; DATA XREF: .debug_info:0000B5BFo
					; jumptable 000042C5 case 12
		dd offset loc_4640
		dd 9F300002h, 4648h, 4659h, 500001h, 0
		db 3 dup(0)
off_17167	dd offset loc_406C	; DATA XREF: .debug_info:0000B5E5o
		dd offset loc_40C4+4
		db 1
		dd 40C95100h, 40D30000h, 10000h, 42C551h, 42CC00h, 51000100h
		dd 43A4h, 43AAh, 0AA510001h, 1F000043h,	5000044h, 6087500h
		dd 442A0C23h, 44350000h, 50000h, 23060875h, 44470Ch, 444C00h
		dd 51000100h, 444Ch, 4460h, 8750005h, 600C2306h, 70000044h
		dd 1000044h, 45215100h,	45230000h, 10000h, 452351h, 452B00h
		dd 75000500h, 0C230608h, 4587h,	4599h, 99510001h, 1C000045h
		dd 5000046h, 6087500h, 462E0C23h, 46640000h, 10000h, 467651h
		dd 468000h, 51000100h, 4680h, 470Fh, 8750005h, 0C2306h
		dd 0
		db 3 dup(0)
off_17237	dd offset loc_43AA	; DATA XREF: .debug_info:0000B613o
		dd offset loc_4419
		db 1
		dd 442A5600h, 44470000h, 10000h, 56h, 0
		db 0
off_17255	dd offset loc_43AA	; DATA XREF: .debug_info:0000B61Co
		dd offset loc_43B1
		db 1, 0, 53h
		dd offset loc_43B1
		dd offset loc_43CE
		dd 2A500001h, 35000044h, 1000044h, 5000h, 0
		db 2 dup(0)
off_1727E	dd offset loc_43B6	; DATA XREF: .debug_info:0000B62Eo
		dd offset loc_43BA
		dw 2
a0qC		db '0üªC',0
		align 2
		dd offset loc_43BF
		dw 1
		dd offset loc_4F+3
		dd 0
		db 0
off_1729D	dd offset loc_43CC	; DATA XREF: .debug_info:0000B64Do
		dd offset loc_4419
		db 1, 0, 56h
		align 10h
off_172B0	dd offset loc_43CC	; DATA XREF: .debug_info:0000B656o
		dd offset loc_441D
		dd 520001h, 0
		db 3 dup(0)
off_172C3	dd offset loc_43D1	; DATA XREF: .debug_info:0000B668o
		dd offset loc_441D
		db 1
		dd offset off_4FD4+2Ch
		dd 0
		db 2 dup(0)
off_172D6	dd offset loc_4470	; DATA XREF: .debug_info:0000B6C0o
		dd offset loc_44E2
		dw 1
		dd 44EF56h, 452100h, 56000100h,	2 dup(0)
off_172F4	dd offset loc_4470	; DATA XREF: .debug_info:0000B6C9o
		dd offset loc_447E
		dd 80910003h, 447E7Ch, 44A000h,	50000100h, 4504h, 450Fh
		dd 500001h, 0
		db 3 dup(0)
off_1731F	dd offset loc_447E	; DATA XREF: .debug_info:0000B6DBo
		dd offset loc_4486
		db 2
		dd 879F3000h, 8B000044h, 1000044h, 5700h, 0
		db 2 dup(0)
off_1733E	dd offset loc_44A5	; DATA XREF: .debug_info:0000B6FAo
		dd offset loc_44B2
		dw 6
		dd 52049350h, 44EF0493h, 45040000h, 60000h, 52049350h
		dd 493h, 0
		db 2 dup(0)
off_17366	dd offset loc_452B	; DATA XREF: .debug_info:0000B76Co
		dd offset loc_457C
		dw 1
		dd 472156h, 473E00h, 56000100h,	2 dup(0)
off_17384	dd offset loc_452B	; DATA XREF: .debug_info:0000B775o
		dd offset loc_4532
		dd 32530001h, 5F000045h, 1000045h, 47215000h, 472C0000h
		dd 10000h, 50h,	0
		db 0
off_173AD	dd offset loc_4537	; DATA XREF: .debug_info:0000B787o
		dd offset loc_453B
		db 2, 0, 30h
		dd 453C9Fh, 454000h, 57000100h,	2 dup(0)
off_173CC	dd offset loc_4599	; DATA XREF: .debug_info:0000B7F9o
		dd offset loc_4608
		dd 11560001h, 2E000046h, 1000046h, 5600h, 0
		db 2 dup(0)
off_173EA	dd offset loc_4599	; DATA XREF: .debug_info:0000B802o
		dd offset loc_45A0
		dw 1
		dd 45A053h, 45BD00h, 50000100h,	4611h, 461Ch, 500001h
		dd 0
		db 3 dup(0)
off_17413	dd offset loc_45A5	; DATA XREF: .debug_info:0000B814o
		dd offset loc_45A9
		db 2
		dd 0AA9F3000h, 0AE000045h, 1000045h, 5200h, 0
		db 2 dup(0)
off_17432	dd offset loc_45BB	; DATA XREF: .debug_info:0000B833o
					; .debug_info:0000B855o
		dd offset loc_4608
		dw 1
		dd offset loc_55+1
		dd 0
		db 0
off_17445	dd offset loc_45BB	; DATA XREF: .debug_info:0000B83Co
					; .debug_info:0000B85Eo
		dd offset loc_4611
		db 1, 0, 52h
		dd 2 dup(0)
off_17458	dd offset loc_45C0	; DATA XREF: .debug_info:0000B870o
		dd offset loc_4611
		dd 500001h, 0
		db 3 dup(0)
off_1746B	dd offset loc_4680	; DATA XREF: .debug_info:0000B8C9o
		dd offset loc_46F7
		db 1
		dd 47005600h, 47210000h, 10000h, 56h, 0
		db 0
off_17489	dd offset loc_4680	; DATA XREF: .debug_info:0000B8D2o
		dd offset loc_4687
		db 1, 0, 53h
		dd offset loc_4687
		dd offset loc_46A4
		dd 4500001h, 0F000047h,	1000047h, 5000h, 0
		db 2 dup(0)
off_174B2	dd offset loc_468C	; DATA XREF: .debug_info:0000B8E4o
		dd offset loc_4690
		dw 2
a0qsf		db '0üëF',0
		align 2
		dd offset loc_4695
		dw 1
		dd offset loc_4F+3
		dd 0
		db 0
off_174D1	dd offset loc_46A2	; DATA XREF: .debug_info:0000B903o
		dd offset loc_46F7
		db 1, 0, 56h
		dd offset loc_4700
		dd offset loc_4704
		dd 560001h, 0
		db 3 dup(0)
off_174EF	dd offset loc_46A2	; DATA XREF: .debug_info:0000B90Co
		dd offset loc_4704
		db 1
		dd offset aDataTooShortAf+1Ch ;	"prefix	of %u"
		dd 0
		db 2 dup(0)
off_17502	dd offset loc_46A7	; DATA XREF: .debug_info:0000B91Eo
		dd offset loc_46EB
		dw 1
		dd 470050h, 470200h, 50000100h,	2 dup(0)
off_17520	dd offset loc_40E2	; DATA XREF: .debug_info:0000B9C9o
		dd offset loc_4107
		dd 9B530001h, 0C5000042h, 1000042h, 43935300h, 43A40000h
		dd 10000h, 53h,	0
		db 0
off_17549	dd offset loc_40F8	; DATA XREF: .debug_info:0000B9D7o
		dd offset loc_4107
		db 1, 0, 56h
		dd offset loc_429B
		dd offset loc_42B9
		dd 93560001h, 0A4000043h, 1000043h, 5600h, 0
		db 2 dup(0)
off_17572	dd offset loc_3E43	; DATA XREF: .debug_info:0000BA8Do
		dd offset loc_3E4A
		dw 5
		dd 24340077h, 3E4A9Fh, 3E5B00h,	53000100h, 42CCh, 42FCh
		dd 530001h, 0
		db 3 dup(0)
off_1759F	dd offset loc_3F23	; DATA XREF: .debug_info:0000BACDo
		dd offset loc_3F3D
		db 2
		dd 539F3100h, 5C00003Fh, 100003Fh, 5300h, 0
		db 2 dup(0)
off_175BE	dd offset loc_415E	; DATA XREF: .debug_info:0000BAE9o
		dd offset loc_417A
		dw 2
a1qra		db '1üêA',0
		align 2
		dd offset loc_419B
		dw 1
		dd offset loc_4F+4
		dd 0
		db 0
off_175DD	dd offset _protobuf_c_message_init ; DATA XREF:	.debug_info:0000BBAAo
		dd offset loc_4743
		db 2, 0, 74h
		dd 474304h, 476D00h, 74000200h,	476D20h, 476F00h, 74000200h
		dd 476F04h, 477400h, 74000200h,	20h, 0
		db 0
off_17615	dd offset _protobuf_c_service_generated_init
					; DATA XREF: .debug_info:0000BBFCo
		dd offset loc_4775
		db 2, 0, 74h
dword_17620	dd 477504h, 477800h, 74000200h,	477808h, 47C200h, 74000200h
					; DATA XREF: .debug_info:0000C1A4o
		dd 47C230h, 47C300h, 74000200h,	47C308h, 47C400h, 74000200h
		dd 47C404h, 47E500h, 74000200h,	30h, 0
		db 0
off_17665	dd offset _protobuf_c_service_destroy ;	DATA XREF: .debug_info:0000BC93o
		dd offset loc_47EB
		db 2, 0, 74h
		dd 47EB04h, 481100h, 74000200h,	481120h, 481300h, 74000200h
		dd 481304h, 481800h, 74000200h,	20h, 0
		db 0
off_1769D	dd offset _protobuf_c_enum_descriptor_get_value_by_name
					; DATA XREF: .debug_info:0000BCF3o
		dd offset loc_4819
		db 2, 0, 74h
		dd 481904h, 481A00h, 74000200h,	481A08h, 481B00h, 74000200h
		dd 481B0Ch, 481C00h, 74000200h,	481C10h, 481F00h, 74000200h
		dd 481F14h, 48D200h, 74000300h,	48D200D0h, 48D30000h, 20000h
		dd 48D31474h, 48D40000h, 20000h, 48D41074h, 48D50000h
		dd 20000h, 48D50C74h, 48D60000h, 20000h, 48D60874h, 48D80000h
		dd 20000h, 48D80474h, 49170000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_17737	dd offset loc_483A	; DATA XREF: .debug_info:0000BD26o
		dd offset loc_4845
		db 2
		dd 459F3000h, 4E000048h, 1000048h, 484E5000h, 48E90000h
		dd 20000h, 48E94091h, 48F20000h, 10000h, 48F255h, 491700h
		dd 91000200h, 40h, 0
		db 0
off_17779	dd offset loc_483D	; DATA XREF: .debug_info:0000BD36o
		dd offset loc_4884
		db 1, 0, 53h
		dd offset loc_4884
		dd offset loc_488F
		dd 8F560001h, 9D000048h, 1000048h, 489D5300h, 48C30000h
		dd 10000h, 48D756h, 48DE00h, 53000100h,	48E4h, 490Eh, 0E530001h
		dd 12000049h, 1000049h,	5600h, 0
		db 2 dup(0)
off_177CE	dd offset loc_4863	; DATA XREF: .debug_info:0000BD4Fo
		dd offset loc_488F
		dw 1
		dd 48D757h, 48F200h, 57000100h,	48FAh, 490Eh, 570001h
		dd 0
		db 3 dup(0)
off_177F7	dd offset loc_487D	; DATA XREF: .debug_info:0000BD5Eo
		dd offset loc_488F
		db 1
		dd 48D75000h, 48E00000h, 10000h, 48FA50h, 48FF00h, 50000100h
		dd 2 dup(0)
off_17820	dd offset _protobuf_c_enum_descriptor_get_value
					; DATA XREF: .debug_info:0000BDD7o
		dd offset loc_4919
		dd 4740002h, 4919h, 491Ah, 8740002h, 491Ah, 491Bh, 0C740002h
		dd 491Bh, 491Ch, 10740002h
off_17850	dd offset loc_491C	; DATA XREF: .debug_loc:0000CB50o
		dd offset loc_491F
		dd 14740002h, 491Fh, 49B5h, 0C0740003h,	49B500h, 49B600h
		dd 74000200h, 49B614h, 49B700h,	74000200h, 49B710h, 49B800h
		dd 74000200h, 49B80Ch, 49B900h,	74000200h, 49B908h, 49BC00h
		dd 74000200h, 49BC04h, 49F700h,	74000300h, 0C0h, 0
		db 2 dup(0)
off_178BA	dd offset loc_4941	; DATA XREF: .debug_info:0000BE24o
		dd offset loc_4954
		dw 1
		dd 495452h, 49F700h, 91000200h,	4, 0
		db 0
off_178D9	dd offset loc_4941	; DATA XREF: .debug_info:0000BE2Do
		dd offset loc_49B8
		db 1, 0, 57h
		dd offset loc_49B8
		dd offset unk_49BA
		dd 910005h, 0BA282306h,	0F7000049h, 1000049h, 5700h, 0
		db 2 dup(0)
off_17906	dd offset loc_4941	; DATA XREF: .debug_info:0000BE36o
		dd offset loc_4954
		dw 1
		dd 495450h, 49F600h, 91000500h,	24230600h, 2 dup(0)
off_17928	dd offset loc_494B	; DATA XREF: .debug_info:0000BE44o
		dd offset loc_4954
		dd 54510001h, 0A6000049h, 1000049h, 49BA5600h, 49D20000h
		dd 10000h, 49D256h, 49E300h, 51000100h,	49E3h, 49EEh, 560001h
		dd 0
		db 3 dup(0)
off_17967	dd offset loc_494B	; DATA XREF: .debug_info:0000BE4Do
		dd offset loc_4971
		db 1
		dd 49BA5000h, 49D00000h, 10000h, 49D250h, 49E800h, 50000100h
		dd 2 dup(0)
off_17990	dd offset loc_495C	; DATA XREF: .debug_info:0000BE5Fo
		dd offset loc_496E
		dd 0BA510001h, 0BD000049h, 1000049h, 49BD5100h,	49DD0000h
		dd 30000h, 0E39F7F71h, 0EE000049h, 3000049h, 9F7F7100h
		dd 2 dup(0)
off_179C8	dd offset loc_49CE	; DATA XREF: .debug_info:0000BE71o
		dd offset loc_49DD
		dd 510001h, 0
		db 3 dup(0)
off_179DB	dd offset loc_4974	; DATA XREF: .debug_info:0000BE85o
		dd offset loc_4994
		db 1
		dd offset aDataTooShortAf+1Ch ;	"prefix	of %u"
		dd 0
		db 2 dup(0)
off_179EE	dd offset loc_4978	; DATA XREF: .debug_info:0000BE8Eo
		dd offset loc_4986
		dw 6
		dd 720071h, 49869F1Ch, 49940000h, 0E0000h, 24330076h, 23220077h
		dd 72060Ch, 9F1Ch, 0
		db 2 dup(0)
off_17A1E	dd offset _protobuf_c_message_descriptor_get_field_by_name
					; DATA XREF: .debug_info:0000BEE1o
		dd offset loc_49F9
		dw 2
		dd 49F90474h, 49FA0000h, 20000h, 49FA0874h, 49FB0000h
		dd 20000h, 49FB0C74h, 49FC0000h, 20000h, 49FC1074h, 49FF0000h
		dd 20000h, 49FF1474h, 4AD30000h, 30000h, 0D300E074h, 0D400004Ah
		dd 200004Ah, 0D4147400h, 0D500004Ah, 200004Ah, 0D5107400h
		dd 0D600004Ah, 200004Ah, 0D60C7400h, 0D700004Ah, 200004Ah
		dd 0D7087400h, 0D800004Ah, 200004Ah, 0D8047400h, 0D00004Ah
		dd 300004Bh, 0E07400h, 2 dup(0)
off_17AB8	dd offset loc_4A1A	; DATA XREF: .debug_info:0000BF14o
		dd offset loc_4A29
		dd 9F300002h, 4A29h, 4A32h, 32500001h, 0E900004Ah, 200004Ah
		dd 0E9409100h, 0F200004Ah, 100004Ah, 4AF25700h,	4B0D0000h
		dd 20000h, 4091h, 0
		db 2 dup(0)
off_17AFA	dd offset loc_4A21	; DATA XREF: .debug_info:0000BF24o
		dd offset loc_4A7F
		dw 1
		dd 4A7F53h, 4A9000h, 91000300h,	4A907FBCh, 4A940000h, 10000h
		dd 4A9452h, 4AD400h, 53000100h,	4AD8h, 4ADEh, 0E4530001h
		dd 0FE00004Ah, 100004Ah, 4AFE5300h, 4B000000h, 10000h
		dd 4B0052h, 4B0D00h, 53000100h,	2 dup(0)
off_17B5C	dd offset loc_4A62	; DATA XREF: .debug_info:0000BF34o
		dd offset loc_4A90
		dd 0AB570001h, 0C200004Ah, 100004Ah, 4AD85500h,	4ADA0000h
		dd 10000h, 4B0057h, 4B0400h, 57000100h,	2 dup(0)
off_17B90	dd offset loc_4A54	; DATA XREF: .debug_info:0000BF4Do
		dd offset loc_4A90
		dd 0D8560001h, 0F200004Ah, 100004Ah, 4B005600h,	4B040000h
		dd 10000h, 56h,	0
		db 0
off_17BB9	dd offset loc_4A74	; DATA XREF: .debug_info:0000BF5Co
		dd offset loc_4A90
		db 1, 0, 50h
		dd offset loc_4AD8
		dd offset loc_4AE0
		dd 500001h, 400004Bh, 100004Bh,	5000h, 0
		db 2 dup(0)
off_17BE2	dd offset _protobuf_c_message_descriptor_get_field
					; DATA XREF: .debug_info:0000BFCDo
		dd offset loc_4B11
		dw 2
		dd 4B110474h, 4B120000h, 20000h, 4B120874h, 4B130000h
		dd 20000h, 4B130C74h, 4B140000h, 20000h, 4B141074h, 4B170000h
		dd 20000h, 4B171474h, 4BB10000h, 30000h, 0B100C074h, 0B200004Bh
		dd 200004Bh, 0B2147400h, 0B300004Bh, 200004Bh, 0B3107400h
		dd 0B400004Bh, 200004Bh, 0B40C7400h, 0B500004Bh, 200004Bh
		dd 0B5087400h, 0B800004Bh, 200004Bh, 0B8047400h, 0F300004Bh
		dd 300004Bh, 0C07400h, 2 dup(0)
off_17C7C	dd offset loc_4B3C	; DATA XREF: .debug_info:0000C022o
		dd offset loc_4BB4
		dd 0B4570001h, 0B600004Bh, 500004Bh, 6009100h, 4BB62823h
		dd 4BF30000h, 10000h, 57h, 0
		db 0
off_17CA9	dd offset loc_4B3C	; DATA XREF: .debug_info:0000C02Bo
		dd offset loc_4B4F
		db 1, 0, 50h
		dd offset loc_4B4F
		dd offset loc_4BEE+4
		dd 910005h, 242306h, 0
		db 3 dup(0)
off_17CCB	dd offset loc_4B46	; DATA XREF: .debug_info:0000C039o
		dd offset loc_4BA2
		db 1
		dd 4BB65600h, 4BCE0000h, 10000h, 4BCE56h, 4BD900h, 51000100h
		dd 4BD9h, 4BEAh, 560001h, 0
		db 3 dup(0)
off_17CFF	dd offset loc_4B46	; DATA XREF: .debug_info:0000C042o
		dd offset loc_4B6D
		db 1
		dd 4BB65000h, 4BCC0000h, 10000h, 4BCE50h, 4BE400h, 50000100h
		dd 2 dup(0)
off_17D28	dd offset loc_4B58	; DATA XREF: .debug_info:0000C054o
		dd offset loc_4B6A
		dd 0B6510001h, 0B900004Bh, 100004Bh, 4BB95100h,	4BD90000h
		dd 30000h, 0DF9F7F71h, 0EA00004Bh, 300004Bh, 9F7F7100h
		dd 2 dup(0)
off_17D60	dd offset loc_4BCA	; DATA XREF: .debug_info:0000C066o
		dd offset loc_4BD9
		dd 510001h, 0
		db 3 dup(0)
off_17D73	dd offset loc_4B70	; DATA XREF: .debug_info:0000C07Ao
		dd offset loc_4B90
		db 1
		dd offset aDataTooShortAf+1Ch ;	"prefix	of %u"
		dd 0
		db 2 dup(0)
off_17D86	dd offset loc_4B74	; DATA XREF: .debug_info:0000C083o
		dd offset loc_4B82
		dw 6
		dd 720071h, 4B829F1Ch, 4B900000h, 0E0000h, 24330076h, 23220077h
		dd 72060Ch, 9F1Ch, 0
		db 2 dup(0)
off_17DB6	dd offset _protobuf_c_service_descriptor_get_method_by_name
					; DATA XREF: .debug_info:0000C0D7o
		dd offset loc_4BF5
		dw 2
		dd 4BF50474h, 4BF60000h, 20000h, 4BF60874h, 4BF70000h
		dd 20000h, 4BF70C74h, 4BF80000h, 20000h, 4BF81074h, 4BFB0000h
		dd 20000h, 4BFB1474h, 4CC00000h, 30000h, 0C000E074h, 0C100004Ch
		dd 200004Ch, 0C1147400h, 0C200004Ch, 200004Ch, 0C2107400h
		dd 0C300004Ch, 200004Ch, 0C30C7400h, 0C400004Ch, 200004Ch
		dd 0C4087400h, 0C800004Ch, 200004Ch, 0C8047400h, 0FD00004Ch
		dd 300004Ch, 0E07400h, 2 dup(0)
off_17E50	dd offset loc_4C16	; DATA XREF: .debug_info:0000C10Ao
		dd offset loc_4C21
		dd 9F300002h, 4C21h, 4C2Ah, 2A500001h, 0D900004Ch, 200004Ch
		dd 0D9409100h, 0E200004Ch, 100004Ch, 4CE25700h,	4CFD0000h
		dd 20000h, 4091h, 0
		db 2 dup(0)
off_17E92	dd offset loc_4C19	; DATA XREF: .debug_info:0000C11Ao
		dd offset loc_4C70
		dw 1
		dd 4C7053h, 4C8100h, 91000300h,	4C817FBCh, 4C850000h, 10000h
		dd 4C8551h, 4CC100h, 53000100h,	4CC5h, 4CCEh, 0D4530001h
		dd 0EE00004Ch, 100004Ch, 4CEE5300h, 4CF00000h, 10000h
		dd 4CF051h, 4CFD00h, 53000100h,	2 dup(0)
off_17EF4	dd offset loc_4C46	; DATA XREF: .debug_info:0000C133o
		dd offset loc_4C81
		dd 0C5550001h, 0E200004Ch, 100004Ch, 4CF05500h,	4CF20000h
		dd 10000h, 4CF255h, 4CF400h, 91000900h,	0BC910640h, 9F22067Fh
		dd 2 dup(0)
off_17F30	dd offset loc_4C46	; DATA XREF: .debug_info:0000C149o
		dd offset loc_4C60+4
		dd 750007h, 762432h, 22h, 0
		db 0
off_17F49	dd offset loc_4C53	; DATA XREF: .debug_info:0000C15Eo
		dd offset loc_4C60+4
		db 2, 0, 77h
		dd 2 dup(0)
		db 0
off_17F5D	dd offset loc_4C65	; DATA XREF: .debug_info:0000C16Do
		dd offset loc_4C81
		db 1, 0, 50h
		dd offset unk_4CC5
		dd offset loc_4CD0
		dd 0F0500001h, 0F400004Ch, 100004Ch, 5000h, 0
		db 2 dup(0)
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 17F88h
		dd 1Ch
		db 2, 0
		dd offset off_5614
		dw 4
		dd 0
		dd offset _system_free	; jumptable 00000717 case 11
		dd offset unk_4CFD
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 17FA8h
off_17FA8	dd offset loc_1CE	; DATA XREF: .debug_info:00007423o
		dd offset loc_24B
		dd offset loc_270
		dd offset loc_297
		dd offset loc_29E
		dd offset loc_2A3
		dd 2 dup(0)
off_17FC8	dd offset loc_1DE	; DATA XREF: .debug_info:00007457o
		dd offset loc_200
		dd offset loc_279
		dd offset loc_297
		dd offset loc_29E
		dd offset loc_2A3
		dd 2 dup(0)
off_17FE8	dd offset loc_2C3	; DATA XREF: .debug_info:00007524o
		dd offset loc_2EF
		dd offset loc_2F8
		dd offset loc_325
		align 10h
off_18000	dd offset loc_2C3	; DATA XREF: .debug_info:00007542o
		dd offset loc_2EF
		dd offset loc_2F8
		dd offset loc_325
		dd 2 dup(0)
off_18018	dd offset loc_33C	; DATA XREF: .debug_info:0000758Ao
		dd offset loc_366
		dd offset loc_369
		dd offset loc_371
		align 10h
off_18030	dd offset loc_420	; DATA XREF: .debug_info:0000765Bo
		dd offset loc_46E
		dd offset loc_474
		dd offset loc_48C
		dd offset loc_498
		dd offset loc_4A4
		align 10h
off_18050	dd offset loc_420	; DATA XREF: .debug_info:00007679o
		dd offset loc_431
		dd offset loc_435
		dd offset loc_440
		dd offset loc_444
		dd offset loc_44F
		dd offset loc_453
		dd offset loc_46E
		dd offset loc_474
		dd offset loc_48C
		dd offset loc_498
		dd offset loc_4A4
		dd 2 dup(0)
off_18088	dd offset loc_4E8	; DATA XREF: .debug_info:000076C3o
		dd offset loc_537
		dd offset loc_54C
		dd offset loc_57C
		align 10h
off_180A0	dd offset loc_4EB	; DATA XREF: .debug_info:000076E9o
		dd offset loc_537
		dd offset loc_54C
		dd offset loc_57C
		dd 2 dup(0)
off_180B8	dd offset loc_4EB	; DATA XREF: .debug_info:00007703o
		dd offset loc_4F0
		dd offset loc_4F5
		dd offset loc_4FF
		dd offset loc_504
		dd offset loc_50F
		dd offset loc_514
		dd offset loc_51F
		dd offset loc_524
		dd offset loc_537
		dd offset loc_54C
		dd offset loc_57C
		align 10h
off_180F0	dd offset loc_5C3	; DATA XREF: .debug_info:00007941o
		dd offset loc_64C
		dd offset loc_6C0
		dd offset loc_6D4
		dd offset loc_6E8
		dd offset loc_778
		dd offset loc_788
		dd offset loc_C34
		dd 2 dup(0)
off_18118	dd offset loc_5C3	; DATA XREF: .debug_info:0000797Eo
		dd offset loc_5C8
		dd offset loc_5EC
		dd offset loc_648
		dd offset loc_6E8
		dd offset loc_6F0
		dd offset loc_714
		dd offset loc_768
		dd offset loc_788
		dd offset loc_C34
		dd 2 dup(0)
off_18148	dd offset loc_5C3	; DATA XREF: .debug_info:000079A1o
		dd offset loc_5C8
		dd offset loc_5EC
		dd offset loc_648
		dd offset loc_6E8
		dd offset loc_6F0
		dd offset loc_714
		dd offset loc_768
		dd offset loc_788
		dd offset loc_C34
		dd 2 dup(0)
off_18178	dd offset loc_5C3	; DATA XREF: .debug_info:000079CAo
		dd offset loc_5C8
		dd offset loc_7BB
		dd offset loc_7C0
		dd offset loc_7F5
		dd offset loc_818
		dd offset loc_81C
		dd offset loc_83B
		dd offset loc_A78
		dd offset loc_A90
		dd offset loc_BC4
		dd offset loc_BD4
		align 10h
off_181B0	dd offset loc_7BB	; DATA XREF: .debug_info:000079E4o
		dd offset loc_7C0
		dd offset loc_800
		dd offset loc_811
		dd offset loc_82A
		dd offset loc_834
		dd offset loc_A78
		dd offset loc_A90
		dd offset loc_BC4
		dd offset loc_BD4
		align 10h
off_181E0	dd offset loc_A78	; DATA XREF: .debug_info:000079FDo
		dd offset loc_A90
		dd offset loc_BC4
		dd offset loc_BD4
		dd 2 dup(0)
off_181F8	dd offset loc_5F9	; DATA XREF: .debug_info:00007A19o
		dd offset loc_615
off_18200	dd offset loc_758	; DATA XREF: .debug_loc:0000CB54o
		dd offset loc_768
		dd offset loc_788
		dd offset loc_79C
		dd offset loc_7A4
		dd offset loc_7B8
		dd offset loc_977
		dd offset loc_97C
		db 0
byte_18221	db 3 dup(0)		; DATA XREF: .debug_info:00005818o
		align 8
off_18228	dd offset loc_788	; DATA XREF: .debug_info:00007A36o
		dd offset loc_79C
		dd offset loc_7A4
		dd offset loc_7B8
		align 10h
off_18240	dd offset loc_738	; DATA XREF: .debug_info:00007A51o
		dd offset loc_74E
		dd offset loc_AE4
		dd offset loc_AFC
		dd offset loc_BD4
		dd offset loc_BE4
		align 10h
off_18260	dd offset loc_AE4	; DATA XREF: .debug_info:00007A6Eo
		dd offset loc_AFC
		dd offset loc_BD4
		dd offset loc_BE4
		dd 2 dup(0)
off_18278	dd offset loc_7C0	; DATA XREF: .debug_info:00007A81o
		dd offset loc_7D7
		dd offset loc_7DF
		dd offset loc_7F0
		dd offset loc_A90
		dd offset loc_AA8
		dd offset loc_B70
		dd offset loc_B80
		align 10h
off_182A0	dd offset loc_7C0	; DATA XREF: .debug_info:00007A9Bo
		dd offset loc_7D0
		dd offset loc_7E1
		dd offset loc_7F0
		dd offset loc_A90
		dd offset loc_AA8
		dd offset loc_B70
		dd offset loc_B80
		dd 2 dup(0)
off_182C8	dd offset loc_A90	; DATA XREF: .debug_info:00007AB4o
		dd offset loc_AA8
		dd offset loc_B70
		dd offset loc_B80
		align 10h
off_182E0	dd offset loc_7F3	; DATA XREF: .debug_info:00007AD0o
		dd offset loc_7F5
		dd offset loc_92C
		dd offset loc_93A
		dd offset loc_94C
		dd offset loc_96C
		dd offset loc_A04
		dd offset loc_A1C
		dd offset loc_AD8
		dd offset loc_AE4
		dd offset loc_B14
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd offset loc_B70
		dd offset loc_C09
		dd offset loc_C1A
		dd offset loc_C27
		dd offset loc_C34
		dd 2 dup(0)
off_18338	dd offset loc_7F3	; DATA XREF: .debug_info:00007AE5o
		dd offset loc_7F5
		dd offset loc_92C
		dd offset loc_93A
		dd offset loc_94C
		dd offset loc_96C
		dd offset loc_A04
		dd offset loc_A1C
		dd offset loc_AD8
		dd offset loc_AE4
		dd offset loc_B14
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd offset loc_B70
		dd offset loc_C09
		dd offset loc_C1A
		dd offset loc_C27
		dd offset loc_C34
		align 10h
off_18390	dd offset loc_950	; DATA XREF: .debug_info:00007AFBo
		dd offset loc_96C
		dd offset loc_AD8
		dd offset loc_AE4
		dd offset loc_B14
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd 2 dup(0)
off_183B8	dd offset loc_B14	; DATA XREF: .debug_info:00007B14o
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		align 10h
off_183D0	dd offset loc_84F	; DATA XREF: .debug_info:00007B31o
		dd offset loc_854
		dd offset loc_890
		dd offset loc_8A9
		dd offset loc_8B8
		dd offset loc_8C6
		dd offset loc_9F8
		dd offset loc_A04
		dd offset loc_AFC
		dd offset loc_B14
		dd offset loc_BE4
		dd offset loc_BF7
		dd 2 dup(0)
off_18408	dd offset loc_AFC	; DATA XREF: .debug_info:00007B4Eo
		dd offset loc_B14
		dd offset loc_BE4
		dd offset loc_BF7
		align 10h
off_18420	dd offset loc_854	; DATA XREF: .debug_info:00007B69o
		dd offset loc_864
		dd offset loc_873
		dd offset loc_880
		dd offset loc_8C9
		dd offset loc_8D4
		dd offset loc_A48
		dd offset loc_A60
		dd offset loc_B94
		dd offset loc_BA4
		align 10h
off_18450	dd offset loc_A48	; DATA XREF: .debug_info:00007B86o
		dd offset loc_A60
		dd offset loc_B94
		dd offset loc_BA4
		dd 2 dup(0)
off_18468	dd offset loc_88B	; DATA XREF: .debug_info:00007BA1o
		dd offset loc_890
		dd offset loc_97C
		dd offset loc_98C
		dd offset loc_99B
		dd offset loc_9B4
		dd offset loc_A1C
		dd offset loc_A34
		dd offset loc_AA8
		dd offset loc_AB4
		dd offset loc_BB4
		dd offset loc_BC4
		align 10h
off_184A0	dd offset loc_88B	; DATA XREF: .debug_info:00007BBEo
		dd offset loc_890
		dd offset loc_97C
		dd offset loc_98C
		dd offset loc_9A5
		dd offset loc_9B4
		dd offset loc_A1C
		dd offset loc_A34
		dd offset loc_BB4
		dd offset loc_BC4
		align 10h
off_184D0	dd offset loc_A1C	; DATA XREF: .debug_info:00007BDBo
		dd offset loc_A34
		dd offset loc_BB4
		dd offset loc_BC4
		dd 2 dup(0)
off_184E8	dd offset loc_99B	; DATA XREF: .debug_info:off_7BF6o
		dd offset loc_9A5
		dd offset loc_AA8
		dd offset loc_AB4
		align 10h
off_18500	dd offset loc_8D4	; DATA XREF: .debug_info:00007C11o
		dd offset loc_8E2
		dd offset loc_8F4
		dd offset loc_924
		dd offset loc_927
		dd offset loc_92C
		dd offset loc_A60
		dd offset loc_A78
		dd offset loc_AB4
		dd offset loc_AD8
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd offset loc_B80
		dd offset loc_B94
		dd offset loc_BF7
		dd offset loc_C09
		dd offset loc_C1A
		dd offset loc_C27
		dd 2 dup(0)
off_18558	dd offset loc_8D4	; DATA XREF: .debug_info:00007C2Eo
		dd offset loc_8E2
		dd offset loc_900
		dd offset loc_924
		dd offset loc_927
		dd offset loc_92C
		dd offset loc_A60
		dd offset loc_A78
		dd offset loc_ACC
		dd offset loc_AD8
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd offset loc_B80
		dd offset loc_B94
		dd offset loc_BF7
		dd offset loc_C09
		dd offset loc_C1A
		dd offset loc_C27
		align 10h
off_185B0	dd offset loc_8D4	; DATA XREF: .debug_info:00007C43o
		dd offset loc_8E2
		dd offset loc_900
		dd offset loc_924
		dd offset loc_927
		dd offset loc_92C
		dd offset loc_A60
		dd offset loc_A78
		dd offset loc_ACC
		dd offset loc_AD8
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd offset loc_B80
		dd offset loc_B94
		dd offset loc_BF7
		dd offset loc_C09
		dd offset loc_C1A
		dd offset loc_C27
		dd 2 dup(0)
off_18608	dd offset loc_906	; DATA XREF: .debug_info:00007C59o
		dd offset loc_924
		dd offset loc_ACC
		dd offset loc_AD8
		dd offset loc_B28
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		align 10h
off_18630	dd offset loc_B28	; DATA XREF: .debug_info:00007C72o
		dd offset loc_B39
		dd offset loc_B49
		dd offset loc_B58
		dd 2 dup(0)
off_18648	dd offset loc_8F4	; DATA XREF: .debug_info:00007C8Fo
		dd offset loc_900
		dd offset loc_AB4
		dd offset loc_ACC
		align 10h
off_18660	dd offset loc_9C8	; DATA XREF: .debug_info:00007CA2o
		dd offset loc_9D8
		dd offset loc_9E1
		dd offset loc_9F8
		dd offset loc_A34
		dd offset loc_A48
		dd offset loc_BA4
		dd offset loc_BB4
		dd 2 dup(0)
off_18688	dd offset loc_9C8	; DATA XREF: .debug_info:00007CB8o
		dd offset loc_9D4
		dd offset loc_9EC
		dd offset loc_9F8
		dd offset loc_A34
		dd offset loc_A48
		dd offset loc_BA4
		dd offset loc_BB4
		align 10h
off_186B0	dd offset loc_A34	; DATA XREF: .debug_info:00007CD5o
		dd offset loc_A48
		dd offset loc_BA4
		dd offset loc_BB4
		dd 2 dup(0)
off_186C8	dd offset loc_6F0	; DATA XREF: .debug_info:00007CFCo
		dd offset loc_70B
		dd offset loc_768
		dd offset loc_778
		align 10h
off_186E0	dd offset loc_674	; DATA XREF: .debug_info:00007D52o
		dd offset loc_683
		dd offset loc_691
		dd offset loc_69D
		dd offset loc_6D4
		dd offset loc_6E8
		dd offset loc_778
		dd offset loc_788
		dd 2 dup(0)
off_18708	dd offset loc_674	; DATA XREF: .debug_info:00007D5Eo
		dd offset loc_683
		dd offset loc_691
		dd offset loc_69D
		dd offset loc_6D4
		dd offset loc_6E8
		dd offset loc_778
		dd offset loc_788
		align 10h
off_18730	dd offset loc_674	; DATA XREF: .debug_info:00007D75o
		dd offset loc_681
		dd offset loc_691
		dd offset loc_69B
		dd offset loc_6D4
		dd offset loc_6E8
		dd offset loc_778
		dd offset loc_788
		dd 2 dup(0)
off_18758	dd offset loc_6D4	; DATA XREF: .debug_info:00007D8Eo
		dd offset loc_6E8
		dd offset loc_778
		dd offset loc_788
		align 10h
off_18770	dd offset loc_C6A	; DATA XREF: .debug_info:00007E19o
		dd offset loc_C7B
		dd offset loc_C9C
		dd offset loc_CA8
		dd offset loc_CB8
		dd offset loc_CC0	; jumptable 00000CB0 cases 5,9,11
		dd offset loc_D04
		dd offset loc_D14	; jumptable 00000CB0 case 16
		dd 2 dup(0)
off_18798	dd offset loc_C9C	; DATA XREF: .debug_info:00007E36o
		dd offset loc_CA8
		dd offset loc_D04
		dd offset loc_D14	; jumptable 00000CB0 case 16
		align 10h
off_187B0	dd offset loc_CE6	; DATA XREF: .debug_info:00007E51o
		dd offset loc_CFF
		dd offset loc_D84
		dd offset loc_D89
		dd offset loc_EA8
		dd offset loc_EBD
		align 10h
off_187D0	dd offset loc_D84	; DATA XREF: .debug_info:00007E6Eo
		dd offset loc_D89
		dd offset loc_EA8
		dd offset loc_EBD
		dd 2 dup(0)
off_187E8	dd offset loc_CFF	; DATA XREF: .debug_info:00007E81o
		dd offset loc_D04
		dd offset loc_D14	; jumptable 00000CB0 case 16
		dd offset loc_D44	; jumptable 00000CB0 case 12
		dd offset loc_D89
		dd offset loc_D90	; jumptable 00000CB0 case 14
		dd offset loc_DED
		dd offset loc_DF4	; jumptable 00000CB0 cases 3,8
		dd offset loc_E25
		dd offset loc_E2C	; jumptable 00000CB0 case 15
		dd offset loc_E4C
		dd offset loc_E58
		dd offset loc_E5D
		dd offset loc_E64
		dd offset loc_E98
		dd offset loc_EA8
		dd offset loc_EBD
		dd offset loc_EC4
		dd offset loc_ED0
		dd offset loc_ED7
		dd offset loc_EEA
		dd offset loc_EFF
		dd offset loc_F40
		dd offset loc_F47
		dd offset loc_F62
		dd offset loc_F70
		dd offset loc_F8E
		dd offset loc_F95
		dd offset loc_FA3
		dd offset loc_FAA
		dd offset loc_FB2
		dd offset loc_FB9
		align 10h
off_18870	dd offset loc_D26	; DATA XREF: .debug_info:00007EA4o
		dd offset loc_D3D
		dd offset loc_EEA
		dd offset loc_EF8
		dd offset loc_F62
		dd offset loc_F70
		align 10h
off_18890	dd offset loc_EEA	; DATA XREF: .debug_info:00007EC1o
		dd offset loc_EF8
		dd offset loc_F62
		dd offset loc_F70
		dd 2 dup(0)
off_188A8	dd offset loc_D4E	; DATA XREF: .debug_info:00007EE6o
		dd offset loc_D5C	; jumptable 00000CB0 case 0
		dd offset loc_F29
		dd offset loc_F34
		align 10h
off_188C0	dd offset loc_D4E	; DATA XREF: .debug_info:00007F03o
		dd offset loc_D5C	; jumptable 00000CB0 case 0
		dd offset loc_F29
		dd offset loc_F34
		dd 2 dup(0)
off_188D8	dd offset loc_D5E	; DATA XREF: .debug_info:00007F1Eo
		dd offset loc_D84
		dd offset loc_E58
		dd offset loc_E5D
		dd offset loc_F95
		dd offset loc_FA3
		dd 2 dup(0)
off_188F8	dd offset loc_D76	; DATA XREF: .debug_info:00007F3Bo
		dd offset loc_D84
		dd offset loc_F95
		dd offset loc_FA3
		align 10h
off_18910	dd offset loc_D90	; DATA XREF: .debug_info:00007F4Eo
					; jumptable 00000CB0 case 14
		dd offset loc_DB9
		dd offset loc_ED7
		dd offset loc_EEA
		dd offset loc_F47
		dd offset loc_F62
		align 10h
off_18930	dd offset loc_DA8	; DATA XREF: .debug_info:00007F71o
		dd offset loc_DB9
		dd offset loc_ED7
		dd offset loc_EEA
		dd offset loc_F51
		dd offset loc_F62
		align 10h
off_18950	dd offset loc_ED7	; DATA XREF: .debug_info:00007F8Ao
		dd offset loc_EEA
		dd offset loc_F51
		dd offset loc_F62
		dd 2 dup(0)
off_18968	dd offset loc_DB9	; DATA XREF: .debug_info:00007F9Eo
		dd offset loc_DC4	; jumptable 00000CB0 case 4
		dd offset loc_E2C	; jumptable 00000CB0 case 15
		dd offset loc_E4C
		dd offset loc_E64
		dd offset loc_E70
		dd offset loc_EFF
		dd offset loc_F13
		dd offset loc_F70
		dd offset loc_F82
		dd 2 dup(0)
off_18998	dd offset loc_E2E	; DATA XREF: .debug_info:00007FB8o
		dd offset loc_E44
		dd offset loc_E64
		dd offset loc_E69
		dd offset loc_EFF
		dd offset loc_F0C
		dd offset loc_F70
		dd offset loc_F7B
		align 10h
off_189C0	dd offset loc_EFF	; DATA XREF: .debug_info:00007FD1o
		dd offset loc_F0C
		dd offset loc_F70
		dd offset loc_F7B
		dd 2 dup(0)
off_189D8	dd offset loc_DC9	; DATA XREF: .debug_info:00007FEDo
		dd offset loc_DDF
		dd offset loc_E70
		dd offset loc_E98
		dd offset loc_F13
		dd offset loc_F29
		dd 2 dup(0)
off_189F8	dd offset loc_DC9	; DATA XREF: .debug_info:0000800Ao
		dd offset loc_DD5
		dd offset loc_F13
		dd offset loc_F29
		align 10h
off_18A10	dd offset loc_DD5	; DATA XREF: .debug_info:00008028o
		dd offset loc_DDF
		dd offset loc_E70
		dd offset loc_E98
		dd 2 dup(0)
off_18A28	dd offset loc_DD5	; DATA XREF: .debug_info:00008039o
		dd offset loc_DDF
		dd offset loc_E70
		dd offset loc_E98
		align 10h
off_18A40	dd offset loc_DDF	; DATA XREF: .debug_info:00008086o
		dd offset loc_DED
		dd offset loc_DF9
		dd offset loc_E25
		dd offset loc_EC4
		dd offset loc_ED0
		dd offset loc_F34
		dd offset loc_F40
		dd offset loc_F82
		dd offset loc_F8E
		dd offset loc_FAA
		dd offset loc_FB2
		dd 2 dup(0)
off_18A78	dd offset loc_DDF	; DATA XREF: .debug_info:0000809Bo
		dd offset loc_DED
		dd offset loc_DF9
		dd offset loc_E25
		dd offset loc_EC4
		dd offset loc_ED0
		dd offset loc_F34
		dd offset loc_F40
		dd offset loc_F82
		dd offset loc_F8E
		dd offset loc_FAA
		dd offset loc_FB2
		align 10h
off_18AB0	dd offset loc_1014	; DATA XREF: .debug_info:00008491o
		dd offset loc_1068
		dd offset sub_10F4
		dd offset ___stack_chk_fail
		dd offset sub_1748
		dd offset sub_1764
		align 10h
off_18AD0	dd offset loc_104D	; DATA XREF: .debug_info:000084D2o
		dd offset loc_1064
		dd offset sub_10F4
		dd offset sub_11B4
		dd offset sub_1214
		dd offset loc_1238
		dd offset loc_1248
		dd offset ___stack_chk_fail
		dd offset sub_1748
		dd offset sub_1764
		align 10h
off_18B00	dd offset loc_104D	; DATA XREF: .debug_info:00008502o
		dd offset loc_1064
		dd offset sub_10F4
		dd offset sub_11B4
		dd offset sub_1214
		dd offset loc_1238
		dd offset loc_1248
		dd offset ___stack_chk_fail
		dd offset sub_1748
		dd offset sub_1764
		align 10h
off_18B30	dd offset sub_105A	; DATA XREF: .debug_info:00008519o
		dd offset loc_1062
		dd offset sub_10F4
		dd offset sub_11B4
		dd offset sub_12B0
		dd offset ___stack_chk_fail
		dd offset sub_1748
		dd offset sub_1764
		dd 2 dup(0)
off_18B58	dd offset loc_110E	; DATA XREF: .debug_info:00008566o
		dd offset loc_113D
		dd offset sub_1154
		dd offset sub_1159
		dd offset sub_12B0
		dd offset sub_12BC
		dd 2 dup(0)
off_18B78	dd offset loc_1142	; DATA XREF: .debug_info:00008584o
		dd offset sub_1154
		dd offset sub_115E
		dd offset sub_1177
		dd offset sub_12C4
		dd offset sub_12DF
		dd offset sub_1550
		dd offset loc_1558
		dd offset sub_1701
		dd offset sub_1715
		dd 2 dup(0)
off_18BA8	dd offset sub_12C4	; DATA XREF: .debug_info:000085A1o
		dd offset sub_12DF
		dd offset sub_1701
		dd offset sub_1715
		align 10h
off_18BC0	dd offset sub_12DF	; DATA XREF: .debug_info:000085B4o
		dd offset loc_12E7
		dd offset loc_1438
		dd offset loc_146D	; jumptable 000012BC cases 3,8
		dd 2 dup(0)
off_18BD8	dd offset loc_1438	; DATA XREF: .debug_info:000085CAo
		dd offset loc_1443
		dd offset loc_1456
		dd offset loc_146D	; jumptable 000012BC cases 3,8
		align 10h
off_18BF0	dd offset loc_1438	; DATA XREF: .debug_info:000085ECo
		dd offset loc_143C
		dd offset loc_1456
		dd offset loc_146D	; jumptable 000012BC cases 3,8
		dd 2 dup(0)
off_18C08	dd offset loc_12F0	; DATA XREF: .debug_info:00008614o
		dd offset loc_135C	; jumptable 000012BC cases 5,9,11
		dd offset sub_1640
		dd offset sub_1650
		dd offset sub_16A0
		dd offset sub_16B0
		dd offset sub_16C8
		dd offset sub_16D8
		align 10h
off_18C30	dd offset loc_12F0	; DATA XREF: .debug_info:0000862Ao
		dd offset loc_1343
		dd offset loc_134E
		dd offset loc_135C	; jumptable 000012BC cases 5,9,11
		dd offset sub_1640
		dd offset sub_1650
		dd offset sub_16A0
		dd offset sub_16B0
		dd offset sub_16C8
		dd offset sub_16D8
		align 10h
off_18C60	dd offset loc_12F5	; DATA XREF: .debug_info:00008644o
		dd offset loc_1303
		dd offset loc_1308
		dd offset loc_1317
		dd offset loc_131C
		dd offset loc_132B
		dd offset loc_1330
		dd offset loc_1343
		dd offset loc_134E
		dd offset loc_135C	; jumptable 000012BC cases 5,9,11
		dd offset sub_1640
		dd offset sub_1650
		dd offset sub_16A0
		dd offset sub_16B0
		dd offset sub_16C8
		dd offset sub_16D8
		dd 2 dup(0)
off_18CA8	dd offset sub_1370	; DATA XREF: .debug_info:0000868Do
		dd offset loc_138A
		dd offset loc_14A6
		dd offset sub_14BC
		dd offset sub_1678
		dd offset sub_1690
		dd offset sub_1715
		dd offset sub_1725
		align 10h
off_18CD0	dd offset sub_1678	; DATA XREF: .debug_info:000086AAo
		dd offset sub_1690
		dd offset sub_1715
		dd offset sub_1725
		dd 2 dup(0)
off_18CE8	dd offset loc_13C5	; DATA XREF: .debug_info:000086C5o
		dd offset loc_141B
		dd offset sub_1638
		dd offset sub_1640
		dd offset sub_166C
		dd offset sub_1678
		dd offset sub_16BC
		dd offset sub_16C8
		dd offset sub_16F7
		dd offset sub_1701
		dd 2 dup(0)
off_18D18	dd offset loc_13C5	; DATA XREF: .debug_info:000086E3o
		dd offset loc_13E2
		dd offset loc_13E4
		dd offset loc_13F5
		dd offset loc_13F7
		dd offset loc_1408
		dd offset loc_140A
		dd offset loc_141B
		dd offset sub_1638
		dd offset sub_1640
		dd offset sub_166C
		dd offset sub_1678
		dd offset sub_16BC
		dd offset sub_16C8
		dd offset sub_16F7
		dd offset sub_1701
		align 10h
off_18D60	dd offset sub_14BC	; DATA XREF: .debug_info:00008746o
		dd offset loc_14CC
		dd offset loc_1558
		dd offset loc_1615	; jumptable 000012BC case 12
		dd offset sub_16B0
		dd offset sub_16BC
		dd offset sub_16E8
		dd offset sub_16F7
		dd offset sub_1725
		dd offset ___stack_chk_fail
		align 10h
off_18D90	dd offset loc_14C4	; DATA XREF: .debug_info:0000875Co
		dd offset loc_14CC
		dd offset loc_1558
		dd offset sub_15A2
		dd offset loc_15B1
		dd offset loc_1615	; jumptable 000012BC case 12
		dd offset sub_16B0
		dd offset sub_16BC
		dd offset sub_16E8
		dd offset sub_16F7
		dd offset sub_1725
		dd offset ___stack_chk_fail
		dd 2 dup(0)
off_18DC8	dd offset loc_14C4	; DATA XREF: .debug_info:0000877Eo
		dd offset loc_14CC
		dd offset loc_1558
		dd offset sub_15A2
		align 10h
off_18DE0	dd offset sub_15B5	; DATA XREF: .debug_info:000087A5o
		dd offset loc_1615	; jumptable 000012BC case 12
		dd offset sub_16B0
		dd offset sub_16BC
		dd offset sub_16E8
		dd offset sub_16F7
		dd offset sub_1725
		dd offset ___stack_chk_fail
		dd 2 dup(0)
off_18E08	dd offset sub_15B5	; DATA XREF: .debug_info:000087BFo
		dd offset loc_15D1
		dd offset loc_15D6
		dd offset loc_15E5
		dd offset loc_15EA
		dd offset loc_15F9
		dd offset loc_15FE
		dd offset loc_1615	; jumptable 000012BC case 12
		dd offset sub_16B0
		dd offset sub_16BC
		dd offset sub_16E8
		dd offset sub_16F7
		dd offset sub_1725
		dd offset ___stack_chk_fail
		dd 2 dup(0)
off_18E48	dd offset loc_14CC	; DATA XREF: .debug_info:000087D1o
		dd offset sub_1548
		dd offset sub_1650
		dd offset sub_166C
		dd offset sub_1690
		dd offset sub_16A0
		dd offset sub_16D8
		dd offset sub_16E8
		align 10h
off_18E70	dd offset loc_14CC	; DATA XREF: .debug_info:000087E7o
		dd offset loc_151F
		dd offset loc_152E
		dd offset sub_1548
		dd offset sub_1650
		dd offset sub_166C
		dd offset sub_1690
		dd offset sub_16A0
		dd offset sub_16D8
		dd offset sub_16E8
		align 10h
off_18EA0	dd offset loc_14CC	; DATA XREF: .debug_info:00008809o
		dd offset loc_151F
		dd offset loc_1538
		dd offset sub_1548
		dd offset sub_1650
		dd offset sub_1660
		dd offset sub_1690
		dd offset sub_16A0
		dd offset sub_16D8
		dd offset sub_16E8
		align 10h
off_18ED0	dd offset loc_14D1	; DATA XREF: .debug_info:00008827o
		dd offset loc_14DF
		dd offset loc_14E4
		dd offset loc_14F3
		dd offset loc_14F8
		dd offset loc_1507
		dd offset loc_150C
		dd offset loc_151F
		dd offset loc_1538
		dd offset sub_1548
		dd offset sub_1650
		dd offset sub_1660
		dd offset sub_1690
		dd offset sub_16A0
		dd offset sub_16D8
		dd offset sub_16E8
		dd 2 dup(0)
off_18F18	dd offset loc_152E	; DATA XREF: .debug_info:0000883Fo
		dd offset loc_1538
		dd offset sub_1660
		dd offset sub_166C
		align 10h
off_18F30	dd offset loc_1062	; DATA XREF: .debug_info:00008916o
		dd offset loc_1064
		dd offset sub_1214
		dd offset loc_1238
		dd offset loc_1248
		dd offset sub_12B0
		align 10h
off_18F50	dd offset sub_1214	; DATA XREF: .debug_info:00008934o
		dd offset loc_1238
		dd offset loc_1248
		dd offset sub_125C
		dd offset loc_12A4	; jumptable 0000124B cases 0-2,6,7,10,12-14,16
		dd offset sub_12B0
		align 10h
off_18F70	dd offset sub_11DC	; DATA XREF: .debug_info:000089C6o
		dd offset sub_11F5
		dd offset loc_11FD
		dd offset loc_120B
		dd offset loc_1238
		dd offset loc_1248
		align 10h
off_18F90	dd offset loc_17D0	; DATA XREF: .debug_info:00008BEEo
					; jumptable 000017C9 case 15
		dd offset loc_1844
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1B14
		dd offset loc_1BE0
		dd offset loc_1BEF
		dd offset loc_1C14
		dd offset loc_1C23
		align 10h
off_18FC0	dd offset loc_17D6	; DATA XREF: .debug_info:00008C08o
		dd offset loc_1844
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1B14
		dd offset loc_1BE0
		dd offset loc_1BEF
		dd offset loc_1C14
		dd offset loc_1C23
		align 10h
off_18FF0	dd offset loc_17D6	; DATA XREF: .debug_info:00008C22o
		dd offset loc_1844
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1B14
		dd offset loc_1BE0
		dd offset loc_1BEF
		dd offset loc_1C14
		dd offset loc_1C23
		align 10h
off_19020	dd offset loc_17D8	; DATA XREF: .debug_info:00008C3Do
		dd offset loc_1837
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1B14
		dd offset loc_1BE0
		dd offset loc_1BEF
		dd offset loc_1C14
		dd offset loc_1C23
		align 10h
off_19050	dd offset loc_17D8	; DATA XREF: .debug_info:00008C57o
		dd offset loc_17E1
		dd offset loc_17E5
		dd offset loc_17F5
		dd offset loc_17F8
		dd offset loc_1809
		dd offset loc_180C
		dd offset loc_181D
		dd offset loc_1820
		dd offset loc_1837
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1B14
		dd offset loc_1BE0
		dd offset loc_1BEF
		dd offset loc_1C14
		dd offset loc_1C23
		align 10h
off_190A0	dd offset loc_1867	; DATA XREF: .debug_info:00008C72o
		dd offset loc_1900	; jumptable 000017C9 case 0
		dd offset loc_1AD0
		dd offset loc_1AD8
		dd offset loc_1B81
		dd offset loc_1B8B
		dd offset loc_1BAC
		dd offset loc_1BB6
		dd offset loc_1BCF
		dd offset loc_1BE0
		dd offset loc_1BFB
		dd offset loc_1C05
		dd offset loc_1C32
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd offset loc_1C5A
		dd 2 dup(0)
off_190E8	dd offset loc_186F	; DATA XREF: .debug_info:00008C90o
		dd offset loc_1900	; jumptable 000017C9 case 0
		dd offset loc_1AD0
		dd offset loc_1AD8
		dd offset loc_1BAC
		dd offset loc_1BB6
		dd offset loc_1BCF
		dd offset loc_1BE0
		dd offset loc_1BFB
		dd offset loc_1C05
		dd offset loc_1C32
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd offset loc_1C5A
		dd 2 dup(0)
off_19128	dd offset loc_1880	; DATA XREF: .debug_info:00008CADo
		dd offset loc_1899
		dd offset loc_1AD0
		dd offset loc_1AD8
		dd offset loc_1BCF
		dd offset loc_1BE0
		dd offset loc_1C4B
		dd offset loc_1C5A
		align 10h
off_19150	dd offset loc_1BCF	; DATA XREF: .debug_info:00008CCAo
		dd offset loc_1BE0
		dd offset loc_1C4B
		dd offset loc_1C5A
		dd 2 dup(0)
off_19168	dd offset loc_18AB	; DATA XREF: .debug_info:00008CE5o
		dd offset loc_18F7
		dd offset loc_1BAC
		dd offset loc_1BB6
		dd offset loc_1BFB
		dd offset loc_1C05
		dd offset loc_1C32
		dd offset loc_1C3C
		align 10h
off_19190	dd offset loc_18AF	; DATA XREF: .debug_info:00008D03o
		dd offset loc_18BF
		dd offset loc_18C1
		dd offset loc_18D2
		dd offset loc_18D4
		dd offset loc_18E5
		dd offset loc_18E7
		dd offset loc_18F7
		dd offset loc_1BAC
		dd offset loc_1BB6
		dd offset loc_1BFB
		dd offset loc_1C05
		dd offset loc_1C32
		dd offset loc_1C3C
		align 10h
off_191D0	dd offset loc_1904	; DATA XREF: .debug_info:00008D4Ao
		dd offset loc_195C	; jumptable 000017C9 case 1
		dd offset loc_1B14
		dd offset loc_1B74
		dd offset loc_1BEF
		dd offset loc_1BFB
		dd offset loc_1C23
		dd offset loc_1C32
		dd offset loc_1C5A
		dd offset loc_1C78
		align 10h
off_19200	dd offset loc_1B14	; DATA XREF: .debug_info:00008D97o
		dd offset loc_1B74
		dd offset loc_1BEF
		dd offset loc_1BFB
		dd offset loc_1C23
		dd offset loc_1C32
		dd offset loc_1C5A
		dd offset loc_1C78
		dd 2 dup(0)
off_19228	dd offset loc_1B14	; DATA XREF: .debug_info:00008DB1o
		dd offset loc_1B1D
		dd offset loc_1B21
		dd offset loc_1B2F
		dd offset loc_1B33
		dd offset loc_1B42
		dd offset loc_1B46
		dd offset loc_1B55
		dd offset loc_1B59
		dd offset loc_1B74
		dd offset loc_1BEF
		dd offset loc_1BFB
		dd offset loc_1C23
		dd offset loc_1C32
		dd offset loc_1C5A
		dd offset loc_1C78
		align 10h
off_19270	dd offset loc_1960	; DATA XREF: .debug_info:00008DCAo
		dd offset loc_196A
		dd offset loc_1BA1
		dd offset loc_1BAC
		dd 2 dup(0)
off_19288	dd offset loc_1960	; DATA XREF: .debug_info:00008DF0o
		dd offset loc_196A
		dd offset loc_1BA1
		dd offset loc_1BAC
		align 10h
off_192A0	dd offset loc_196A	; DATA XREF: .debug_info:00008E0Bo
		dd offset loc_19C4	; jumptable 000017C9 cases 2,7,10
		dd offset loc_1AC0
		dd offset loc_1AC5
		dd offset loc_1AE4
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1BC5
		dd offset loc_1BCF
		align 10h
off_192D0	dd offset loc_196A	; DATA XREF: .debug_info:00008E29o
		dd offset loc_1973
		dd offset loc_1978
		dd offset loc_1986
		dd offset loc_198B
		dd offset loc_199A
		dd offset loc_199F
		dd offset loc_19AE
		dd offset loc_19B3
		dd offset loc_19C4	; jumptable 000017C9 cases 2,7,10
		dd offset loc_1AC0
		dd offset loc_1AC5
		dd offset loc_1AE4
		dd offset loc_1AEC
		dd offset loc_1AFC
		dd offset loc_1B04
		dd offset loc_1BC5
		dd offset loc_1BCF
		align 10h
off_19320	dd offset loc_19F0	; DATA XREF: .debug_info:00008E68o
		dd offset loc_1A00	; jumptable 000017C9 cases 5,9,11
		dd offset loc_1B8B
		dd offset loc_1BA1
		dd 2 dup(0)
off_19338	dd offset loc_19F0	; DATA XREF: .debug_info:00008E8Eo
		dd offset loc_1A00	; jumptable 000017C9 cases 5,9,11
		dd offset loc_1B8B
		dd offset loc_1BA1
		align 10h
off_19350	dd offset loc_1A3C	; DATA XREF: .debug_info:00008EF7o
		dd offset loc_1AC0
		dd offset loc_1AD8
		dd offset loc_1AE4
		dd offset loc_1B74
		dd offset loc_1B81
		dd offset loc_1BB6
		dd offset loc_1BC5
		dd offset loc_1C05
		dd offset loc_1C14
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd 2 dup(0)
off_19388	dd offset loc_1A44	; DATA XREF: .debug_info:00008F15o
		dd offset loc_1AC0
		dd offset loc_1AD8
		dd offset loc_1AE4
		dd offset loc_1BB6
		dd offset loc_1BC5
		dd offset loc_1C05
		dd offset loc_1C14
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd 2 dup(0)
off_193B8	dd offset loc_1A54	; DATA XREF: .debug_info:00008F30o
		dd offset loc_1AAF
		dd offset loc_1AD8
		dd offset loc_1AE4
		dd offset loc_1BB6
		dd offset loc_1BC5
		dd offset loc_1C05
		dd offset loc_1C14
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd 2 dup(0)
off_193E8	dd offset loc_1A56	; DATA XREF: .debug_info:00008F4Ao
		dd offset loc_1A5B
		dd offset loc_1A5E
		dd offset loc_1A6E
		dd offset loc_1A71
		dd offset loc_1A82
		dd offset loc_1A85
		dd offset loc_1A96
		dd offset loc_1A99
		dd offset loc_1AAF
		dd offset loc_1AD8
		dd offset loc_1AE4
		dd offset loc_1BB6
		dd offset loc_1BC5
		dd offset loc_1C05
		dd offset loc_1C14
		dd offset loc_1C3C
		dd offset loc_1C4B
		dd 2 dup(0)
off_19438	dd offset loc_1CD8	; DATA XREF: .debug_info:000091BFo
		dd offset loc_1D68
		dd offset loc_1E08
		dd offset loc_261C
		dd offset loc_262C
		dd offset loc_276B
		dd offset loc_278C
		dd offset _required_field_pack_to_buffer_isra_13
		align 10h
off_19460	dd offset loc_1D01	; DATA XREF: .debug_info:00009200o
		dd offset loc_1D50
		dd offset loc_1E08
		dd offset loc_1E0A
		dd offset loc_1E44
		dd offset loc_1E68
		dd offset loc_1E78
		dd offset loc_2125
		dd offset loc_2134
		dd offset loc_261C
		dd offset loc_262C
		dd offset loc_276B
		dd offset loc_278C
		dd offset _required_field_pack_to_buffer_isra_13
		align 10h
off_194A0	dd offset loc_1D01	; DATA XREF: .debug_info:00009230o
		dd offset loc_1D50
		dd offset loc_1E08
		dd offset loc_1E0A
		dd offset loc_1E44
		dd offset loc_1E68
		dd offset loc_1E78
		dd offset loc_2125
		dd offset loc_2134
		dd offset loc_261C
		dd offset loc_262C
		dd offset loc_276B
		dd offset loc_278C
		dd offset _required_field_pack_to_buffer_isra_13
		align 10h
off_194E0	dd offset loc_1D1A	; DATA XREF: .debug_info:0000923Eo
		dd offset loc_1D50
		dd offset loc_1E78
		dd offset loc_1E84
		dd offset loc_1E98
		dd offset loc_1EB0
		dd offset loc_1EEE
		dd offset loc_2125
		dd offset loc_2134
		dd offset loc_261C
		dd offset loc_262C
		dd offset loc_276B
		dd offset loc_278C
		dd offset _required_field_pack_to_buffer_isra_13
		align 10h
off_19520	dd offset loc_1D28	; DATA XREF: .debug_info:0000926Ao
		dd offset loc_1D50
		dd offset loc_1E78
		dd offset loc_1E84
		dd offset loc_1EEE
		dd offset loc_1F3C
		dd offset loc_1FEF
		dd offset loc_2125
		dd offset loc_2134
		dd offset loc_2168
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_24F0
		dd offset loc_2574
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25D4
		dd offset loc_25EC
		dd offset loc_264C
		dd offset loc_267C
		dd offset loc_2696
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		dd offset loc_276B
		align 10h
off_19590	dd offset loc_1D28	; DATA XREF: .debug_info:00009288o
		dd offset loc_1D50
		dd offset loc_1E78
		dd offset loc_1E84
		dd offset loc_1EEE
		dd offset loc_1F3C
		dd offset loc_1FEF
		dd offset loc_2125
		dd offset loc_2134
		dd offset loc_2168
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_24F0
		dd offset loc_2574
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25D4
		dd offset loc_25EC
		dd offset loc_264C
		dd offset loc_267C
		dd offset loc_2696
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		dd offset loc_276B
		align 10h
off_19600	dd offset loc_1EEE	; DATA XREF: .debug_info:000092A0o
		dd offset loc_1F04
		dd offset loc_20E8
		dd offset loc_211E
		dd offset loc_2538
		dd offset loc_2550
		dd offset loc_2568
		dd offset loc_2574
		dd offset loc_26BA
		dd offset loc_26CA
		align 10h
off_19630	dd offset loc_1EF5	; DATA XREF: .debug_info:000092B6o
		dd offset loc_1F04
		dd offset loc_20E8
		dd offset loc_20F9
		dd offset loc_2104
		dd offset loc_211E
		dd offset loc_2538
		dd offset loc_2550
		dd offset loc_2568
		dd offset loc_2574
		dd offset loc_26BA
		dd offset loc_26CA
		dd 2 dup(0)
off_19668	dd offset loc_1EF5	; DATA XREF: .debug_info:000092CFo
		dd offset loc_1F04
		dd offset loc_20E8
		dd offset loc_20F9
		dd offset loc_210E
		dd offset loc_211E
		dd offset loc_2538
		dd offset loc_2550
		dd offset loc_26BA
		dd offset loc_26CA
		dd 2 dup(0)
off_19698	dd offset loc_2538	; DATA XREF: .debug_info:000092ECo
		dd offset loc_2550
		dd offset loc_26BA
		dd offset loc_26CA
		align 10h
off_196B0	dd offset loc_2104	; DATA XREF: .debug_info:00009307o
		dd offset loc_210E
		dd offset loc_2568
		dd offset loc_2574
		dd 2 dup(0)
off_196C8	dd offset loc_1F04	; DATA XREF: .debug_info:0000931Bo
		dd offset loc_1F30	; jumptable 00001E7B cases 5,9,11
		dd offset loc_1FEF
		dd offset loc_200C
		dd offset loc_24F0
		dd offset loc_2508
		dd offset loc_26CA
		dd offset loc_26DA
		align 10h
off_196F0	dd offset loc_1F04	; DATA XREF: .debug_info:00009331o
		dd offset loc_1F15
		dd offset loc_1F24
		dd offset loc_1F30	; jumptable 00001E7B cases 5,9,11
		dd offset loc_1FF6
		dd offset loc_200C
		dd offset loc_24F0
		dd offset loc_2508
		dd offset loc_26CA
		dd offset loc_26DA
		align 10h
off_19720	dd offset loc_24F0	; DATA XREF: .debug_info:0000934Ao
		dd offset loc_2508
		dd offset loc_26CA
		dd offset loc_26DA
		dd 2 dup(0)
off_19738	dd offset loc_200C	; DATA XREF: .debug_info:0000935Eo
		dd offset loc_2074
		dd offset loc_2520
		dd offset loc_2538
		dd offset loc_2550
		dd offset loc_2568
		dd offset loc_258C
		dd offset loc_2598
		dd offset loc_264C
		dd offset loc_2664
		dd offset loc_26A8
		dd offset loc_26BA
		dd offset loc_26FC
		dd offset loc_270E
		dd offset loc_2742
		dd offset loc_275E
		align 10h
off_19780	dd offset loc_200C	; DATA XREF: .debug_info:00009374o
		dd offset loc_201A
		dd offset loc_202C
		dd offset loc_205D
		dd offset loc_2064
		dd offset loc_2074
		dd offset loc_2520
		dd offset loc_2538
		dd offset loc_2550
		dd offset loc_2568
		dd offset loc_258C
		dd offset loc_2598
		dd offset loc_264C
		dd offset loc_2664
		dd offset loc_26A8
		dd offset loc_26BA
		dd offset loc_26FC
		dd offset loc_270E
		dd offset loc_2742
		dd offset loc_275E
		dd 2 dup(0)
off_197D8	dd offset loc_200C	; DATA XREF: .debug_info:0000938Do
		dd offset loc_201A
		dd offset loc_2038
		dd offset loc_205D
		dd offset loc_2064
		dd offset loc_2074
		dd offset loc_2520
		dd offset loc_2538
		dd offset loc_258C
		dd offset loc_2598
		dd offset loc_264C
		dd offset loc_2664
		dd offset loc_26A8
		dd offset loc_26BA
		dd offset loc_26FC
		dd offset loc_270E
		dd offset loc_2742
		dd offset loc_275E
		dd 2 dup(0)
off_19828	dd offset loc_200C	; DATA XREF: .debug_info:000093A2o
		dd offset loc_201A
		dd offset loc_2038
		dd offset loc_205D
		dd offset loc_2064
		dd offset loc_2074
		dd offset loc_2520
		dd offset loc_2538
		dd offset loc_258C
		dd offset loc_2598
		dd offset loc_264C
		dd offset loc_2664
		dd offset loc_26A8
		dd offset loc_26BA
		dd offset loc_26FC
		dd offset loc_270E
		dd offset loc_2742
		dd offset loc_275E
		dd 2 dup(0)
off_19878	dd offset loc_203E	; DATA XREF: .debug_info:000093B8o
		dd offset loc_205D
		dd offset loc_258C
		dd offset loc_2598
		dd offset loc_264C
		dd offset loc_2664
		dd offset loc_2742
		dd offset loc_2751
		align 10h
off_198A0	dd offset loc_264C	; DATA XREF: .debug_info:000093D1o
		dd offset loc_2664
		dd offset loc_2742
		dd offset loc_2751
		dd 2 dup(0)
off_198B8	dd offset loc_202C	; DATA XREF: .debug_info:000093EEo
		dd offset loc_2038
		dd offset loc_2550
		dd offset loc_2568
		align 10h
off_198D0	dd offset loc_2074	; DATA XREF: .debug_info:00009402o
		dd offset loc_20B4	; jumptable 00001E7B cases 2,7,10
		dd offset loc_2508
		dd offset loc_2520
		dd offset loc_2598
		dd offset loc_25A4
		dd offset loc_2664
		dd offset loc_267C
		dd offset loc_2696
		dd offset loc_26A8
		dd offset loc_26EA
		dd offset loc_26FC
		dd offset loc_2732
		dd offset loc_2742
		dd offset loc_275E
		dd offset loc_276B
		dd 2 dup(0)
off_19918	dd offset loc_2074	; DATA XREF: .debug_info:00009418o
		dd offset loc_2082
		dd offset loc_2094
		dd offset loc_20B4	; jumptable 00001E7B cases 2,7,10
		dd offset loc_2508
		dd offset loc_2520
		dd offset loc_2598
		dd offset loc_25A4
		dd offset loc_2664
		dd offset loc_267C
		dd offset loc_2696
		dd offset loc_26A8
		dd offset loc_26EA
		dd offset loc_26FC
		dd offset loc_2732
		dd offset loc_2742
		dd offset loc_275E
		dd offset loc_276B
		dd 2 dup(0)
off_19968	dd offset loc_2074	; DATA XREF: .debug_info:00009429o
		dd offset loc_2082
		dd offset loc_2094
		dd offset loc_20B4	; jumptable 00001E7B cases 2,7,10
		dd offset loc_2508
		dd offset loc_2520
		dd offset loc_2598
		dd offset loc_25A4
		dd offset loc_2664
		dd offset loc_267C
		dd offset loc_2696
		dd offset loc_26A8
		dd offset loc_26EA
		dd offset loc_26FC
		dd offset loc_2732
		dd offset loc_2742
		dd offset loc_275E
		dd offset loc_276B
		dd 2 dup(0)
off_199B8	dd offset loc_2098	; DATA XREF: .debug_info:0000943Fo
		dd offset loc_20B4	; jumptable 00001E7B cases 2,7,10
		dd offset loc_2598
		dd offset loc_25A4
		dd offset loc_2664
		dd offset loc_267C
		dd offset loc_2732
		dd offset loc_2742
		align 10h
off_199E0	dd offset loc_2664	; DATA XREF: .debug_info:00009458o
		dd offset loc_267C
		dd offset loc_2732
		dd offset loc_2742
		dd 2 dup(0)
off_199F8	dd offset loc_20D5	; DATA XREF: .debug_info:0000946Eo
		dd offset loc_20E8
		dd offset loc_2134
		dd offset loc_2168
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_25D4
		dd offset loc_25EC
		dd offset loc_271E
		dd offset loc_2732
		dd 2 dup(0)
off_19A28	dd offset loc_20DC	; DATA XREF: .debug_info:00009484o
		dd offset loc_20E8
		dd offset loc_2134
		dd offset loc_214E
		dd offset loc_215D
		dd offset loc_2168
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_25D4
		dd offset loc_25EC
		dd offset loc_271E
		dd offset loc_2732
		align 10h
off_19A60	dd offset loc_25D4	; DATA XREF: .debug_info:0000949Do
		dd offset loc_25EC
		dd offset loc_271E
		dd offset loc_2732
		dd 2 dup(0)
off_19A78	dd offset loc_1E98	; DATA XREF: .debug_info:000094E1o
		dd offset loc_1EB0
		dd offset loc_1FC5
		dd offset loc_1FEF
		dd offset loc_2168
		dd offset loc_22DC
		dd offset loc_22FD	; jumptable 0000216B case 4
		dd offset loc_24B0
		dd offset loc_24BA
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_24F0
		dd offset loc_2580
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25D4
		dd offset loc_262C
		dd offset loc_264C
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		align 10h
off_19AE0	dd offset loc_1E98	; DATA XREF: .debug_info:00009508o
		dd offset loc_1EB0
		dd offset loc_1FC5
		dd offset loc_1FEF
		dd offset loc_2168
		dd offset loc_22DC
		dd offset loc_22FD	; jumptable 0000216B case 4
		dd offset loc_24B0
		dd offset loc_24BA
		dd offset loc_24C4
		dd offset loc_24D0
		dd offset loc_24F0
		dd offset loc_2580
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25D4
		dd offset loc_262C
		dd offset loc_264C
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		dd 2 dup(0)
off_19B48	dd offset loc_217C	; DATA XREF: .debug_info:00009536o
		dd offset loc_21E5
		dd offset loc_21F0
		dd offset loc_2207	; jumptable 0000216B case 1
		dd offset loc_24E0
		dd offset loc_24F0
		dd offset loc_25B4
		dd offset loc_25C4
		dd offset loc_263C
		dd offset loc_264C
		dd 2 dup(0)
off_19B78	dd offset loc_217C	; DATA XREF: .debug_info:0000954Co
		dd offset loc_21D2
		dd offset loc_21F7
		dd offset loc_2207	; jumptable 0000216B case 1
		dd offset loc_24E0
		dd offset loc_24F0
		dd offset loc_25B4
		dd offset loc_25C4
		dd offset loc_263C
		dd offset loc_264C
		dd 2 dup(0)
off_19BA8	dd offset loc_2181	; DATA XREF: .debug_info:0000956Ao
		dd offset loc_2191
		dd offset loc_2196
		dd offset loc_21A6
		dd offset loc_21AB
		dd offset loc_21BB
		dd offset loc_21C0
		dd offset loc_21D2
		dd offset loc_21F7
		dd offset loc_2207	; jumptable 0000216B case 1
		dd offset loc_24E0
		dd offset loc_24F0
		dd offset loc_25B4
		dd offset loc_25C4
		dd offset loc_263C
		dd offset loc_264C
		align 10h
off_19BF0	dd offset loc_2210	; DATA XREF: .debug_info:00009597o
		dd offset loc_2279
		dd offset loc_2284
		dd offset loc_22A9	; jumptable 0000216B case 12
		dd offset loc_24D0
		dd offset loc_24E0
		dd offset loc_2580
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25B4
		dd offset loc_262C
		dd offset loc_263C
		dd 2 dup(0)
off_19C28	dd offset loc_2210	; DATA XREF: .debug_info:000095ADo
		dd offset loc_2266
		dd offset loc_228B
		dd offset loc_22A9	; jumptable 0000216B case 12
		dd offset loc_24D0
		dd offset loc_24E0
		dd offset loc_2580
		dd offset loc_258C
		dd offset loc_25A4
		dd offset loc_25B4
		dd offset loc_262C
		dd offset loc_263C
		align 10h
off_19C60	dd offset loc_2210	; DATA XREF: .debug_info:000095D3o
		dd offset loc_2266
		dd offset loc_2295
		dd offset loc_22A9	; jumptable 0000216B case 12
		dd offset loc_24D0
		dd offset loc_24E0
		dd offset loc_25A4
		dd offset loc_25B4
		dd offset loc_262C
		dd offset loc_263C
		align 10h
off_19C90	dd offset loc_2215	; DATA XREF: .debug_info:000095F1o
		dd offset loc_2225
		dd offset loc_222A
		dd offset loc_223A
		dd offset loc_223F
		dd offset loc_224F
		dd offset loc_2254
		dd offset loc_2266
		dd offset loc_2295
		dd offset loc_22A9	; jumptable 0000216B case 12
		dd offset loc_24D0
		dd offset loc_24E0
		dd offset loc_25A4
		dd offset loc_25B4
		dd offset loc_262C
		dd offset loc_263C
		dd 2 dup(0)
off_19CD8	dd offset loc_228B	; DATA XREF: .debug_info:off_9609o
		dd offset loc_2295
		dd offset loc_2580
		dd offset loc_258C
		align 10h
off_19CF0	dd offset loc_2308	; DATA XREF: .debug_info:0000968Eo
		dd offset loc_2331
		dd offset loc_2338
		dd offset loc_2356	; jumptable 0000216B cases 3,8
		dd 2 dup(0)
off_19D08	dd offset loc_2308	; DATA XREF: .debug_info:000096A6o
		dd offset loc_2315
		dd offset loc_233F
		dd offset loc_2356	; jumptable 0000216B cases 3,8
		align 10h
off_19D20	dd offset loc_2308	; DATA XREF: .debug_info:000096CCo
		dd offset loc_230C
		dd offset loc_233F
		dd offset loc_2356	; jumptable 0000216B cases 3,8
		dd 2 dup(0)
off_19D38	dd offset loc_23A4	; DATA XREF: .debug_info:0000974Bo
		dd offset loc_240D
		dd offset loc_2418
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dd offset loc_25C4
		dd offset loc_25D4
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		align 10h
off_19D70	dd offset loc_23A4	; DATA XREF: .debug_info:00009763o
		dd offset loc_23F9
		dd offset loc_241F
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dd offset loc_25C4
		dd offset loc_25D4
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		dd 2 dup(0)
off_19DA8	dd offset loc_2423	; DATA XREF: .debug_info:000097B0o
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dd offset loc_25C4
		dd offset loc_25D4
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		dd 2 dup(0)
off_19DD8	dd offset loc_2423	; DATA XREF: .debug_info:000097CAo
		dd offset loc_2441
		dd offset loc_2446
		dd offset loc_2456
		dd offset loc_245B
		dd offset loc_246B
		dd offset loc_2470
		dd offset loc_2487	; jumptable 0000216B cases 2,7,10
		dd offset loc_25C4
		dd offset loc_25D4
		dd offset loc_267C
		dd offset loc_268C
		dd offset loc_26DA
		dd offset loc_26EA
		dd offset loc_270E
		dd offset loc_271E
		align 10h
off_19E20	dd offset loc_1F47	; DATA XREF: .debug_info:0000984Bo
		dd offset loc_1FAB
		dd offset loc_24B0
		dd offset loc_24BA
		dd offset loc_2574
		dd offset loc_2580
		dd offset loc_25EC
		dd offset loc_261C
		dd offset loc_268C
		dd offset loc_2696
		align 10h
off_19E50	dd offset loc_1F4B	; DATA XREF: .debug_info:00009869o
		dd offset loc_1F56
		dd offset loc_1F58
		dd offset loc_1F6A
		dd offset loc_1F6C
		dd offset loc_1F7F
		dd offset loc_1F81
		dd offset loc_1F94
		dd offset loc_1F96
		dd offset loc_1FAB
		dd offset loc_24B0
		dd offset loc_24BA
		dd offset loc_2574
		dd offset loc_2580
		dd offset loc_25EC
		dd offset loc_261C
		dd offset loc_268C
		dd offset loc_2696
		align 10h
off_19EA0	dd offset loc_1E44	; DATA XREF: .debug_info:000098D5o
		dd offset loc_1E68
		dd offset loc_1E84
		dd offset loc_1E98
		dd offset loc_1EB0
		dd offset loc_1EEE
		align 10h
off_19EC0	dd offset loc_1E44	; DATA XREF: .debug_info:000098FCo
		dd offset loc_1E68
		dd offset loc_1E84
		dd offset loc_1E98
		dd offset loc_1EE0	; jumptable 00001E87 cases 0-2,6,7,10,12-14,16
		dd offset loc_1EEE
		align 10h
off_19EE0	dd offset loc_1E14	; DATA XREF: .debug_info:0000998Co
		dd offset loc_1E3B
		dd offset loc_1E68
		dd offset loc_1E78
		dd offset loc_2125
		dd offset loc_2134
		align 10h
off_19F00	dd offset loc_2804	; DATA XREF: .debug_info:00009B0Fo
					; jumptable 000027FC case 15
		dd offset loc_2894	; jumptable 000027FC case 16
		dd offset loc_2C9C
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2CC0
		dd offset loc_2DA3
		dd offset loc_2DAD
		dd offset loc_2DF5
		dd offset loc_2DFF
		align 10h
off_19F30	dd offset loc_2812	; DATA XREF: .debug_info:00009B32o
		dd offset loc_2867
		dd offset loc_2C9C
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2CC0
		dd offset loc_2DA3
		dd offset loc_2DAD
		dd offset loc_2DF5
		dd offset loc_2DFF
		align 10h
off_19F60	dd offset loc_2814	; DATA XREF: .debug_info:00009B50o
		dd offset loc_281D
		dd offset loc_281F
		dd offset loc_282F
		dd offset loc_2831
		dd offset loc_2842
		dd offset loc_2844
		dd offset loc_2855
		dd offset loc_2857
		dd offset loc_2867
		dd offset loc_2C9C
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2CC0
		dd offset loc_2DA3
		dd offset loc_2DAD
		dd offset loc_2DF5
		dd offset loc_2DFF
		align 10h
off_19FB0	dd offset loc_2894	; DATA XREF: .debug_info:00009B95o
					; jumptable 000027FC case 16
		dd offset loc_298C	; jumptable 000027FC case 0
		dd offset loc_2C90
		dd offset loc_2C9C
		dd offset loc_2D34
		dd offset loc_2D4E
		dd offset loc_2DAD
		dd offset loc_2DB7
		dd offset loc_2DFF
		dd offset loc_2E09
		dd offset loc_2E1F
		dd offset loc_2E26
		dd 2 dup(0)
off_19FE8	dd offset loc_28E4	; DATA XREF: .debug_info:00009BCAo
		dd offset loc_293F
		dd offset loc_2C90
		dd offset loc_2C9C
		dd offset loc_2DAD
		dd offset loc_2DB7
		dd offset loc_2DFF
		dd offset loc_2E09
		dd offset loc_2E1F
		dd offset loc_2E26
		dd 2 dup(0)
off_1A018	dd offset loc_28E4	; DATA XREF: .debug_info:00009BE8o
		dd offset loc_28ED
		dd offset loc_28F2
		dd offset loc_2902
		dd offset loc_2905
		dd offset loc_2916
		dd offset loc_2919
		dd offset loc_292A
		dd offset loc_292D
		dd offset loc_293F
		dd offset loc_2C90
		dd offset loc_2C9C
		dd offset loc_2DAD
		dd offset loc_2DB7
		dd offset loc_2DFF
		dd offset loc_2E09
		dd offset loc_2E1F
		dd offset loc_2E26
		dd 2 dup(0)
off_1A068	dd offset loc_2995	; DATA XREF: .debug_info:00009C5Fo
		dd offset loc_29E7
		dd offset loc_2CD0
		dd offset loc_2D34
		dd offset loc_2DB7
		dd offset loc_2DC3
		dd offset loc_2E26
		dd offset loc_2E53
		align 10h
off_1A090	dd offset loc_2CD0	; DATA XREF: .debug_info:00009CACo
		dd offset loc_2D34
		dd offset loc_2DB7
		dd offset loc_2DC3
		dd offset loc_2E26
		dd offset loc_2E53
		align 10h
off_1A0B0	dd offset loc_2CD0	; DATA XREF: .debug_info:00009CC6o
		dd offset loc_2CD9
		dd offset loc_2CDE
		dd offset loc_2CEC
		dd offset loc_2CF1
		dd offset loc_2D00
		dd offset loc_2D05
		dd offset loc_2D14
		dd offset loc_2D19
		dd offset loc_2D34
		dd offset loc_2DB7
		dd offset loc_2DC3
		dd offset loc_2E26
		dd offset loc_2E53
		align 10h
off_1A0F0	dd offset loc_2A25	; DATA XREF: .debug_info:00009CDFo
		dd offset loc_2A87
		dd offset loc_2C84
		dd offset loc_2C90
		dd offset loc_2CC0
		dd offset loc_2CC8
		dd offset loc_2D5B
		dd offset loc_2D66
		dd offset loc_2D99
		dd offset loc_2DA3
		dd offset loc_2E13
		dd offset loc_2E1F
		dd 2 dup(0)
off_1A128	dd offset loc_2A25	; DATA XREF: .debug_info:00009D05o
		dd offset loc_2A2F
		dd offset loc_2D5B
		dd offset loc_2D66
		align 10h
off_1A140	dd offset loc_2A2F	; DATA XREF: .debug_info:00009D23o
		dd offset loc_2A87
		dd offset loc_2C84
		dd offset loc_2C90
		dd offset loc_2CC0
		dd offset loc_2CC8
		dd offset loc_2D99
		dd offset loc_2DA3
		dd offset loc_2E13
		dd offset loc_2E1F
		align 10h
off_1A170	dd offset loc_2A2F	; DATA XREF: .debug_info:00009D3Do
		dd offset loc_2A38
		dd offset loc_2A3D
		dd offset loc_2A4B
		dd offset loc_2A50
		dd offset loc_2A5F
		dd offset loc_2A64
		dd offset loc_2A73
		dd offset loc_2A78
		dd offset loc_2A87
		dd offset loc_2C84
		dd offset loc_2C90
		dd offset loc_2CC0
		dd offset loc_2CC8
		dd offset loc_2D99
		dd offset loc_2DA3
		dd offset loc_2E13
		dd offset loc_2E1F
		align 10h
off_1A1C0	dd offset loc_2ADC	; DATA XREF: .debug_info:00009D7Do
		dd offset loc_2AED
		dd offset loc_2D66
		dd offset loc_2D82
		dd 2 dup(0)
off_1A1D8	dd offset loc_2ADC	; DATA XREF: .debug_info:00009DA3o
		dd offset loc_2AE8
		dd offset loc_2D66
		dd offset loc_2D82
		align 10h
off_1A1F0	dd offset loc_2B3D	; DATA XREF: .debug_info:00009DF2o
		dd offset loc_2B97
		dd offset loc_2C78
		dd offset loc_2C84
		dd offset loc_2CC8
		dd offset loc_2CD0
		dd offset loc_2D8F
		dd offset loc_2D99
		dd offset loc_2E09
		dd offset loc_2E13
		align 10h
off_1A220	dd offset loc_2B3D	; DATA XREF: .debug_info:00009E10o
		dd offset loc_2B46
		dd offset loc_2B4B
		dd offset loc_2B59
		dd offset loc_2B5E
		dd offset loc_2B6D
		dd offset loc_2B72
		dd offset loc_2B81
		dd offset loc_2B86
		dd offset loc_2B97
		dd offset loc_2C78
		dd offset loc_2C84
		dd offset loc_2CC8
		dd offset loc_2CD0
		dd offset loc_2D8F
		dd offset loc_2D99
		dd offset loc_2E09
		dd offset loc_2E13
		align 10h
off_1A270	dd offset loc_2BB0	; DATA XREF: .debug_info:00009E47o
					; jumptable 000027FC case 14
		dd offset loc_2C78
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2D4E
		dd offset loc_2D5B
		dd offset loc_2D82
		dd offset loc_2D8F
		dd offset loc_2DC3
		dd offset loc_2DF5
		align 10h
off_1A2A0	dd offset loc_2BD6	; DATA XREF: .debug_info:00009E6Ao
		dd offset loc_2C47
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2D4E
		dd offset loc_2D5B
		dd offset loc_2D82
		dd offset loc_2D8F
		dd offset loc_2DE8
		dd offset loc_2DF5
		align 10h
off_1A2D0	dd offset loc_2BD6	; DATA XREF: .debug_info:00009E88o
		dd offset loc_2BDF
		dd offset loc_2BE4
		dd offset loc_2BF4
		dd offset loc_2BF9
		dd offset loc_2C0A
		dd offset loc_2C0F
		dd offset loc_2C20
		dd offset loc_2C25
		dd offset loc_2C47
		dd offset loc_2CAE
		dd offset loc_2CB8
		dd offset loc_2D4E
		dd offset loc_2D5B
		dd offset loc_2D82
		dd offset loc_2D8F
		dd offset loc_2DE8
		dd offset loc_2DF5
		align 10h
off_1A320	dd offset loc_2E96	; DATA XREF: .debug_info:0000A013o
		dd offset loc_2EB4	; jumptable 00002EA4 default case
		dd offset loc_2ED4	; jumptable 00002EA4 cases 3-5,8,9,11,15
		dd offset loc_2EE9
		dd 2 dup(0)
off_1A338	dd offset loc_2F7F	; DATA XREF: .debug_info:0000A0BAo
		dd offset loc_2FBE
		dd offset loc_30BC
		dd offset loc_3154
		align 10h
off_1A350	dd offset loc_32D1	; DATA XREF: .debug_info:0000A378o
		dd offset loc_3338	; jumptable 000031BF case 1
		dd offset loc_3514
		dd offset loc_3546
		dd 2 dup(0)
off_1A368	dd offset loc_330D	; DATA XREF: .debug_info:0000A3B3o
		dd offset loc_3322
		dd offset loc_3514
		dd offset loc_3546
		align 10h
off_1A380	dd offset loc_338C	; DATA XREF: .debug_info:0000A445o
		dd offset loc_33A0	; jumptable 000031BF cases 2,7,10
		dd offset loc_34CC
		dd offset loc_34D4
		dd 2 dup(0)
off_1A398	dd offset loc_33ED	; DATA XREF: .debug_info:0000A490o
		dd offset loc_340C
		dd offset loc_34D4
		dd offset loc_34DF
		align 10h
off_1A3B0	dd offset loc_3425	; DATA XREF: .debug_info:0000A4A6o
		dd offset loc_3488	; jumptable 000031BF case 12
		dd offset loc_34DF
		dd offset loc_3514
		dd 2 dup(0)
off_1A3C8	dd offset loc_345A	; DATA XREF: .debug_info:off_A4EEo
		dd offset loc_346E
		dd offset loc_34DF
		dd offset loc_3514
		align 10h
off_1A3E0	dd offset loc_3488	; DATA XREF: .debug_info:0000A535o
					; jumptable 000031BF case 12
		dd offset loc_34B4
		dd offset loc_34C0
		dd offset loc_34CC
		dd 2 dup(0)
off_1A3F8	dd offset loc_3488	; DATA XREF: .debug_info:0000A54Bo
					; jumptable 000031BF case 12
		dd offset loc_34A0
		dd offset loc_34A3
		dd offset loc_34B4
		dd offset loc_34C0
		dd offset loc_34CC
		dd 2 dup(0)
off_1A418	dd offset loc_35C1	; DATA XREF: .debug_info:0000AC62o
		dd offset loc_35D8
		dd offset loc_3C3A
		dd offset loc_3C68
		align 10h
off_1A430	dd offset loc_363A	; DATA XREF: .debug_info:0000ACDAo
		dd offset loc_38B4
		dd offset loc_393C
		dd offset loc_3A0A
		dd offset loc_3A88
		dd offset loc_3C3A
		dd offset loc_3C68
		dd offset loc_3CDB
		dd offset loc_3DBC
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E3B
		dd offset loc_419B
		dd offset loc_4209
		dd offset loc_4261
		dd offset loc_429B
		dd offset loc_42FC
		dd offset loc_4311
		dd offset loc_435B
		dd offset loc_4368
		dd 2 dup(0)
off_1A488	dd offset loc_363A	; DATA XREF: .debug_info:0000AD3Bo
		dd offset loc_366C
		dd offset loc_3830
		dd offset loc_3883
		dd offset loc_393C
		dd offset loc_394C
		dd offset loc_3B81
		dd offset loc_3B8C
		dd offset loc_3DD6
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dd 2 dup(0)
off_1A4B8	dd offset loc_363A	; DATA XREF: .debug_info:0000AD6Bo
		dd offset loc_364C
		dd offset loc_3655
		dd offset loc_366C
		dd offset loc_3830
		dd offset loc_3883
		dd offset loc_393C
		dd offset loc_394C
		dd offset loc_3B81
		dd offset loc_3B8C
		dd offset loc_3DD6
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		align 10h
off_1A4F0	dd offset loc_3692	; DATA XREF: .debug_info:0000AD96o
		dd offset loc_370E
		dd offset loc_37E8
		dd offset loc_3824
		dd offset loc_3990
		dd offset loc_39A0
		align 10h
off_1A510	dd offset loc_369C	; DATA XREF: .debug_info:0000ADBDo
		dd offset loc_36FC
		dd offset loc_37E8
		dd offset loc_3818
		dd offset loc_3990
		dd offset loc_39A0
		align 10h
off_1A530	dd offset loc_369C	; DATA XREF: .debug_info:0000ADE0o
		dd offset loc_36FC
		dd offset loc_37E8
		dd offset loc_3818
		dd offset loc_3990
		dd offset loc_39A0
		align 10h
off_1A550	dd offset loc_36B0	; DATA XREF: .debug_info:0000ADF7o
		dd offset loc_36C9
		dd offset loc_37E8
		dd offset loc_3804
		dd offset loc_3990
		dd offset loc_39A0
		align 10h
off_1A570	dd offset loc_378C	; DATA XREF: .debug_info:0000AE3Co
		dd offset loc_37E8
		dd offset loc_3B96
		dd offset loc_3BA0
		dd offset loc_3C28
		dd offset loc_3C35
		dd offset loc_3E27
		dd offset loc_3E31
		dd 2 dup(0)
off_1A598	dd offset loc_3A88	; DATA XREF: .debug_info:0000AE9Co
		dd offset loc_3AD9
		dd offset loc_3C89
		dd offset loc_3CDB
		dd offset loc_41C2
		dd offset loc_41DF
		dd offset loc_42FC
		dd offset loc_4311
		align 10h
off_1A5C0	dd offset loc_3C89	; DATA XREF: .debug_info:0000AEB6o
		dd offset loc_3CDB
		dd offset loc_42FC
		dd offset loc_4311
		dd 2 dup(0)
off_1A5D8	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF32o
		dd offset loc_3B60
		dd offset loc_3B8C
		dd offset loc_3B96
		dd offset loc_3C01
		dd offset loc_3C28
		dd offset loc_3C68
		dd offset loc_3C89
		dd offset loc_3E31
		dd offset loc_3E3B
		dd 2 dup(0)
off_1A608	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF53o
		dd offset loc_3B60
		dd offset loc_3B8C
		dd offset loc_3B96
		dd offset loc_3C01
		dd offset loc_3C13
		dd offset loc_3C68
		dd offset loc_3C89
		dd offset loc_3E31
		dd offset loc_3E3B
		dd 2 dup(0)
off_1A638	dd offset loc_3AF4	; DATA XREF: .debug_info:0000AF76o
		dd offset loc_3B60
		dd offset loc_3B8C
		dd offset loc_3B96
		dd offset loc_3C01
		dd offset loc_3C13
		dd offset loc_3C68
		dd offset loc_3C89
		dd offset loc_3E31
		dd offset loc_3E3B
		dd 2 dup(0)
off_1A668	dd offset loc_3B60	; DATA XREF: .debug_info:0000B006o
		dd offset loc_3B81
		dd offset loc_3BA0
		dd offset loc_3C01
		dd offset loc_3DBC
		dd offset loc_3DD6
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E27
		dd offset loc_4261
		dd offset loc_429B
		dd 2 dup(0)
off_1A698	dd offset loc_3BB2	; DATA XREF: .debug_info:0000B03Bo
		dd offset loc_3C01
		dd offset loc_3DBC
		dd offset loc_3DD1
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3DF9
		dd offset loc_3E00
		dd offset loc_3E27
		dd offset loc_4261
		dd offset loc_429B
		dd 2 dup(0)
off_1A6C8	dd offset loc_3BBF	; DATA XREF: .debug_info:0000B058o
		dd offset loc_3BE4
		dd offset loc_3DBC
		dd offset loc_3DCF	; jumptable 00003DBC case 12
		dd offset loc_3E00
		dd offset loc_3E0D
		dd offset loc_3E14	; jumptable 00003DBC cases 2,7,10
		dd offset loc_3E20
		dd offset loc_4261
		dd offset loc_429B
		dd 2 dup(0)
off_1A6F8	dd offset loc_3A34	; DATA XREF: .debug_info:0000B26Bo
		dd offset loc_3A43
		dd offset loc_3A4D
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset loc_3D01
		dd offset loc_3DBC
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E5B
		dd offset loc_3E6E
		dd offset loc_3FB9
		dd offset loc_402C
		dd offset loc_4311
		dd offset loc_435B
		dd 2 dup(0)
off_1A738	dd offset loc_3A60	; DATA XREF: .debug_info:0000B284o
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset loc_3D01
		dd offset loc_3D53
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E5B
		dd offset loc_3E6E
		dd offset loc_3FB9
		dd offset loc_402C
		dd offset loc_4311
		dd offset loc_432D
		align 10h
off_1A770	dd offset loc_3A60	; DATA XREF: .debug_info:0000B2B5o
		dd offset loc_3A6A	; jumptable 00003D04 default case
		dd offset loc_3D01
		dd offset loc_3D10
		dd offset loc_3DE8	; jumptable 00003D04 cases 0-2,6,7,10,12-14,16
		dd offset loc_3DF2	; jumptable 00003DBC cases 0,1,3,4,6,8,13
		dd offset loc_3E5B
		dd offset loc_3E6E
		dd 2 dup(0)
off_1A798	dd offset loc_3D21	; DATA XREF: .debug_info:0000B2CBo
		dd offset loc_3D53
		dd offset loc_3FB9
		dd offset loc_402C
		dd offset loc_4311
		dd offset loc_432D
		dd 2 dup(0)
off_1A7B8	dd offset loc_3D35	; DATA XREF: .debug_info:0000B2DEo
		dd offset loc_3D53
		dd offset loc_3FB9
		dd offset loc_402C
		align 10h
off_1A7D0	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B371o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_3E6E
		dd offset loc_3EFE
		dd offset loc_3F34
		dd offset loc_3F3D
		dd offset loc_3F5C
		dd offset loc_3FB9
		dd offset loc_4049
		dd offset loc_413F
		dd offset loc_4209
		dd offset loc_4261
		dd offset loc_429B
		dd offset loc_42CC
		dd offset loc_436D
		dd offset loc_4377
		dd offset loc_4393
		dd offset unk_473E
		align 10h
off_1A820	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B3B1o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_3EAF
		dd offset loc_3EE5
		dd offset loc_3F5C
		dd offset loc_3FB9
		dd offset loc_4049
		dd offset loc_4107
		dd offset loc_4209
		dd offset loc_4254
		dd offset loc_429B
		dd offset loc_42CC
		dd offset loc_4393
		dd offset unk_473E
		align 10h
off_1A860	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B3D8o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_3EAF
		dd offset loc_3EE5
		dd offset loc_3F5C
		dd offset loc_3FB9
		dd offset loc_4049
		dd offset loc_4107
		dd offset loc_4209
		dd offset loc_4254
		dd offset loc_429B
		dd offset loc_42CC
		dd offset loc_4393
		dd offset unk_473E
		align 10h
off_1A8A0	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B3F7o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_4209
		dd offset loc_4254
		dd 2 dup(0)
off_1A8B8	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B427o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_4209
		dd offset loc_4254
		align 10h
off_1A8D0	dd offset loc_3A6A	; DATA XREF: .debug_info:0000B456o
					; jumptable 00003D04 default case
		dd offset loc_3A88
		dd offset loc_420C
		dd offset loc_4221
		dd offset loc_424D	; jumptable 00004215 cases 0-2,6,7,10,12-14,16
		dd offset loc_4254
		align 10h
off_1A8F0	dd offset loc_4069	; DATA XREF: .debug_info:0000B552o
		dd offset loc_40D3
		dd offset loc_42C5
		dd offset loc_42CC
		dd offset loc_43A4	; jumptable 000042C5 cases 6,13
		dd offset unk_473E
		align 10h
off_1A910	dd offset loc_4069	; DATA XREF: .debug_info:0000B579o
		dd offset loc_40D3
		dd offset loc_42C5
		dd offset loc_42CC
		dd offset loc_43A4	; jumptable 000042C5 cases 6,13
		dd offset unk_473E
		align 10h
off_1A930	dd offset loc_406C	; DATA XREF: .debug_info:0000B5D5o
		dd offset loc_4081
		dd offset loc_40CC	; jumptable 00004075 cases 3-5,8,9,11,15
		dd offset loc_40D3
		dd 2 dup(0)
off_1A948	dd offset loc_43BA	; DATA XREF: .debug_info:0000B5EBo
		dd offset loc_4419
		dd offset loc_442A
		dd offset loc_4447	; jumptable 000042C5 cases 5,9,11
		align 10h
off_1A960	dd offset loc_4486	; DATA XREF: .debug_info:0000B698o
		dd offset loc_44E2
		dd offset loc_44F0
		dd offset loc_4521	; jumptable 000042C5 cases 3,8
		dd 2 dup(0)
off_1A978	dd offset loc_44A5	; DATA XREF: .debug_info:0000B6EAo
		dd offset loc_44C4
		dd offset loc_44F0
		dd offset loc_4504
		align 10h
off_1A990	dd offset loc_453B	; DATA XREF: .debug_info:0000B743o
		dd offset loc_457C
		dd offset loc_4721
		dd offset unk_473E
		dd 2 dup(0)
off_1A9A8	dd offset loc_45A9	; DATA XREF: .debug_info:0000B7D1o
		dd offset loc_4608
		dd offset loc_4611
		dd offset loc_462E	; jumptable 000042C5 case 12
		align 10h
off_1A9C0	dd offset loc_4690	; DATA XREF: .debug_info:0000B8A1o
		dd offset loc_46F7
		dd offset loc_4700
		dd offset loc_4721
		dd 2 dup(0)
off_1A9D8	dd offset loc_46E5	; DATA XREF: .debug_info:0000B92Do
		dd offset loc_46ED
		dd offset loc_4700
		dd offset loc_4704
		align 10h
off_1A9F0	dd offset loc_40D3	; DATA XREF: .debug_info:0000B9BCo
		dd offset loc_4107
		dd offset loc_429B
		dd offset loc_42C5
		dd offset loc_4393
		dd offset loc_43A4	; jumptable 000042C5 cases 6,13
		align 10h
off_1AA10	dd offset loc_40F8	; DATA XREF: .debug_info:0000B9CEo
		dd offset loc_4107
		dd offset loc_429B
		dd offset loc_42B6
		dd offset loc_4393
		dd offset loc_43A4	; jumptable 000042C5 cases 6,13
		align 10h
off_1AA30	dd offset loc_3E43	; DATA XREF: .debug_info:0000BA79o
		dd offset loc_3E5B
		dd offset loc_42CC
		dd offset loc_42FC
		dd 2 dup(0)
off_1AA48	dd offset loc_3F23	; DATA XREF: .debug_info:0000BABBo
		dd offset loc_3F34
		dd offset loc_3F3D
		dd offset loc_3F5C
		align 10h
off_1AA60	dd offset loc_4859	; DATA XREF: .debug_info:0000BD3Bo
		dd offset loc_4884
		dd offset loc_48DA
		dd offset loc_48E9
		dd offset loc_48FC
		dd offset loc_490E
		align 10h
off_1AA80	dd offset loc_4941	; DATA XREF: .debug_info:0000BE14o
		dd offset loc_4994
		dd offset loc_49BC
		dd offset loc_49EE
		dd 2 dup(0)
off_1AA98	dd offset loc_4941	; DATA XREF: .debug_info:0000BE3Bo
		dd offset loc_4994
		dd offset loc_49BC
		dd offset loc_49EE
		align 10h
off_1AAB0	dd offset loc_4954	; DATA XREF: .debug_info:0000BE52o
		dd offset loc_4969
		dd offset loc_49BC
		dd offset loc_49D4
		dd offset loc_49E4
		dd offset loc_49EE
		align 10h
off_1AAD0	dd offset loc_4A46	; DATA XREF: .debug_info:0000BF39o
		dd offset loc_4A7F
		dd offset loc_4ADA
		dd offset loc_4AE9
		dd 2 dup(0)
off_1AAE8	dd offset loc_4B3C	; DATA XREF: .debug_info:0000C00Ao
		dd offset loc_4B90
		dd offset loc_4BB8
		dd offset loc_4BEA
		align 10h
off_1AB00	dd offset loc_4B3C	; DATA XREF: .debug_info:0000C030o
		dd offset loc_4B90
		dd offset loc_4BB8
		dd offset loc_4BEA
		dd 2 dup(0)
off_1AB18	dd offset loc_4B50	; DATA XREF: .debug_info:0000C047o
		dd offset loc_4B65
		dd offset loc_4BB8
		dd offset loc_4BD0
		dd offset loc_4BE0
		dd offset loc_4BEA
		dd 2 dup(0)
off_1AB38	dd offset loc_4C38	; DATA XREF: .debug_info:0000C11Fo
		dd offset loc_4C70
		dd offset loc_4CCA
		dd offset loc_4CD9
		align 10h
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 1AB50h
off_1AB50	dd offset loc_1418+2	; DATA XREF: .debug_info:off_568Co
		db    2
		align 2
		dd offset loc_140+2
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		dd offset dword_100FC+5
		dd offset dword_FFF8+8
		align 2
		dw 6C01h
		db  69h	; i
		db 62h,	0, 63h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/../../../../include',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
		align 2
aProtobufC_c	db 'protobuf-c.c',0
		db 1
		dd 74730000h, 2E6F6964h, 20068h, 64747300h, 2E666564h
		dd 30068h, 64747300h, 2E746E69h, 20068h, 6F727000h, 75626F74h
		dd 2E632D66h, 10068h, 64747300h, 2E62696Ch, 20068h, 75623C00h
		dd 2D746C69h, 3E6E69h, 61000000h, 72657373h, 682E74h, 73000002h
		dd 6E697274h, 682E67h, 2
		db 0, 5, 2
		dd offset _system_free	; jumptable 00000717 case 11
		db 3
		dd 740101ADh, 3BF34BBCh, 8700367h, 4CBD7474h, 4DFB4D83h
		dd 827003F4h, 2802AD3Ch, 12D00313h, 0C2900866h,	8740A03h
		dd 760365E5h, 80A032Eh,	6CF803ACh, 2BC3C74h, 0D7031528h
		dd 84A0800h, 7691AE9Eh,	2D8330h, 4C020402h, 9F152202h
		dd 4020075h, 6740601h, 3D152302h, 33DD7CAh, 33C087Ah, 2009079h
		dd 0AC060104h, 1040200h, 80D0306h, 402002Eh, 74730301h
		dd 3580D03h, 0AC580BACh, 8F915BAFh, 0A92F5A2Dh,	3207A03h
		dd 293580Ah, 50631323h,	66084503h, 5AAD5A59h, 26035AADh
		dd 4A0C03ACh, 7477C103h, 5984DA4Ah, 3AAFADADh, 0F03835Ah
		dd 8750358h, 0D83FE566h, 3D873983h, 2E7FAD03h, 5A3D4B5Ah
		dd 755A3D75h, 81755A3Dh, 57667203h, 32E1603h, 4B033C28h
		dd 56725666h, 7400CB03h, 74400357h, 0CA0356h, 0F20374h
		dd 77BB6682h, 64498308h, 3C7EB803h, 5A3D755Ah, 835A3D83h
		dd 81835A3Dh, 1B6035Fh,	7EB9033Ch, 72564A08h, 74090357h
		dd 3567A56h, 37401C1h, 0E4827E99h, 40200BDh, 806D701h
		dd 5603063Ch, 582D032Eh, 6AAA3E75h, 7F9D0377h, 3842F2Eh
		dd 923C7EB2h, 1CC03ADh,	3ADAD82h, 0C5039E78h, 3CA2E00h
		dd 75034A1Eh, 402004Ah,	80D0301h, 0D66E0320h, 827DE403h
		dd 2960383h, 2E180358h,	4020057h, 10DF0302h, 402004Ah
		dd 6CF10302h, 98035958h, 18035802h, 34D572Eh, 3900877h
		dd 3C087DDAh, 1C803BBh,	82630382h, 58090383h, 0EF0369h
		dd 7FA50382h, 8380390h,	84033358h, 0BB5ABA7Eh, 5801FA03h
		dd 9E7DF203h, 0F201B203h, 36C4B2Fh, 0EF4A7ECCh,	0C80E0375h
		dd 3827403h, 3C080297h,	827DF603h, 1ED03ADh, 3847158h
		dd 592E7E91h, 9E028B03h, 3585B03h, 0BBAC7E9Bh, 5801E503h
		dd 99034C71h, 359D67Eh,	715801E7h, 12082703h, 827DF603h
		dd 1C903ADh, 3835758h, 592E7EB4h, 8201DE03h, 3822D03h
		dd 92827E87h, 1B103ADh,	3835758h, 4B2E7ECAh, 9E01FA03h
		dd 0D67EAE03h, 1950391h, 3835758h, 85587EFCh, 2F4A6803h
		dd 924A4803h, 28903ADh,	7EAE039Eh, 9A039182h, 83575801h
		dd 587EE303h, 924A4803h, 1D703BBh, 82320374h, 827DF603h
		dd 1C003ADh, 3835758h, 852E7EDFh, 592E5B03h, 9E01BE03h
		dd 87EC303h, 0F403753Ch, 92475801h, 0AC7E8A03h,	74130359h
		dd 0ADBA2803h, 0ADC84703h, 0AD8FADC7h, 0BBC83703h, 0BBBA4703h
		dd 1E03ADB9h, 0BA2A03C8h, 87FB403h, 0BB770874h,	0ADBA1203h
		dd 83C86C03h, 3A075B9h,	0ADD60837h, 3C84803h, 383F237h
		dd 1303BA48h, 3015002h,	832E0826h, 3A0759Dh, 900801DEh
		dd 1040200h, 3586F03h, 0D6087ECFh, 7F8F0366h, 3755ABAh
		dd 35800F2h, 0E003582Fh, 75AC087Eh, 5800F003h, 0F27F8C03h
		dd 82018C03h, 34A1903h,	87740865h, 2E7F8203h, 8C03AD92h
		dd 0E6035801h, 9803587Eh, 32FF201h, 92F27EF2h, 0D6018D03h
		dd 3746803h, 0BC03826Fh, 3852E7Fh, 36600C3h, 842E7FA9h
		dd 6E037692h, 18A03D6h,	74720358h, 7EFE032Fh, 35A5808h
		dd 3BA0186h, 6003AC64h,	68038558h, 91842F4Ah, 5800D403h
		dd 3746003h, 48035849h,	0BDBC5A4Ah, 0AC018803h,	3747803h
		dd 5A2E7EF9h, 18503BBh,	3598858h, 3747F83h, 35800FDh, 3747EF2h
		dd 3580187h, 5A747EF8h,	8803BDBCh, 0F503AC01h, 3AFF27Eh
		dd 39E0188h, 75747FADh,	5800D203h, 747EF503h, 375B975h
		dd 374018Ah, 83747EF5h,	58018303h, 3744503h, 3580856h
		dd 375AC1Bh, 35800D0h, 85037473h, 81039E7Fh, 12A0201h
		dd 747FB803h, 0CE0375h,	7F8B0358h, 0F50374h, 7FB403D6h
		dd 0CC0374h, 0FE037982h, 66087404h, 40200BDh, 0C806D701h
		dd 755A0806h, 4EAA3E7Ch, 7EED0379h, 3302008h, 383AC09h
		dd 32E0187h, 2004A6Ch, 16030104h, 0AC065808h, 2040200h
		dd 200AD06h, 5C030204h,	2003C08h, 910204h, 59020402h, 2040200h
		dd 40200C9h, 2E210302h,	2040200h, 315083Bh, 9E087EF5h
		dd 5F0376F3h, 5A59593Ch, 3929191h, 0D9035819h, 367587Ah
		dd 3BA0588h, 0D903581Eh, 0BB5A587Ah, 8205A603h,	0C0039FBBh
		dd 92039000h, 3C8080Dh,	33C73A7h, 25027E95h, 9038301h
		dd 0EBA0358h, 71C90366h, 1E2033Ch, 7E9E033Ch, 1E20382h
		dd 7EA503D6h, 66190390h, 0C8085603h, 3674B2Fh, 10034A0Eh
		dd 1A003BAh, 8760882h, 0D9034783h, 32E087Eh, 1E03BA37h
		dd 7AD903BAh, 8B03BB82h, 9B03E406h, 7512087Ch, 3D83923Dh
		dd 923D8392h, 35F8183h,	573C0399h, 7CD2034Bh, 0D2039D2Eh
		dd 3E034A02h, 90350374h, 4A7A9303h, 0EC03BB92h,	0C9685805h
		dd 0B603E708h, 922C827Ch, 5992594Bh, 59599259h,	6D575992h
		dd 3C03B803h, 87FB503h,	7BA40312h, 2B603BAh, 2CA034Ah
		dd 3912D74h, 4B827AFDh,	804DE03h, 0AC34032Eh, 7F9003FFh
		dd 0C3039Eh, 823C0374h,	4A7A9303h, 68F039Fh, 7C9B03BAh
		dd 923D75F2h, 83923D83h, 8183923Dh, 389035Fh, 383573Ch
		dd 852E7ADBh, 2E028403h, 3E8039Dh, 7CB90366h, 0ADAD75F2h
		dd 3F391ADh, 579002F0h,	7D880383h, 4A62032Eh, 923D7592h
		dd 83923D83h, 8183923Dh, 2ED037Bh, 7E870358h, 2B303ACh
		dd 7CC3039Eh, 0AE5687D6h, 7DF80356h, 28803ACh, 7DD903BAh
		dd 0AC03BBBAh, 0AE56BA02h, 0AC7A0356h, 56C07B57h, 7A0356AEh
		dd 3A656ACh, 39E7DD4h, 240202AAh, 56A45601h, 9E03FC03h
		dd 584203h, 3010402h, 3AC0824h,	0AC087DE2h, 375BEE4h, 4C036634h
		dd 2903C808h, 0AD033D9Eh, 0D6033C7Fh, 67922E7Eh, 59679259h
		dd 92596792h, 37B9D67h,	0AD3C0197h, 32E3803h, 79032E24h
		dd 33D9008h, 894A7FB0h,	87C9D03h, 3AD9212h, 35803E3h, 20087EC5h
		dd 59925967h, 59599259h, 5F575992h, 3C01A903h, 3901C03h
		dd 844A7EC4h, 0ADADAD75h, 0B103F391h, 0A203E401h, 3854A7Ch
		dd 922E0284h, 83923D75h, 3D83923Dh, 33B8392h, 3DAC01DBh
		dd 2E7EFB03h, 3C018503h, 338087Dh, 85827CC2h, 8203C803h
		dd 7F8A033Dh, 0F60358h,	906F0374h, 0BA7FAB03h, 8200E903h
		dd 0A3033D85h, 389587Fh, 2CF27EE2h, 9259595Ah, 67925967h
		dd 9D679259h, 18D036Dh,	0DC03833Ch, 1603907Eh, 1C9032Eh
		dd 7EA1033Ch, 7B5783ACh, 2C085680h, 67929173h, 3D75923Dh
		dd 923D7592h, 3898175h,	3D820186h, 3D9E1903h, 747CEE03h
		dd 58085603h, 0AC028803h, 3A656A0h, 759E7DD1h, 9E02AC03h
		dd 9E7A0356h, 56A07B57h, 7A0356A4h, 0A0A6569Eh,	7DD40356h
		dd 2AA039Eh, 56A456E4h,	9E01FF03h, 8204DD03h, 0AF8208h
		dd 0D7010402h, 806AC06h, 3E7575A0h, 3774E72h, 84676642h
		dd 7ED103AFh, 9E3603D6h, 80B9003h, 769D03C8h, 879033Ch
		dd 402004Ah, 80D0301h, 0AC0674h, 6020402h, 4020091h, 0BA640302h
		dd 2040200h, 4020091h, 2007502h, 13080204h, 2040200h, 2002F08h
		dd 18030204h, 4020074h,	3A24902h, 0D6087FBEh, 32E3C03h
		dd 839E7E82h, 3580903h,	3660BD3h, 33C74B0h, 120801EFh
		dd 907BB103h, 3661903h,	0C80802BDh, 36C4B2Fh, 96034A0Ch
		dd 1003BA7Dh, 3D403BAh,	0C80382h, 67087408h, 7BDF0347h
		dd 0B7034A08h, 0F503D604h, 0BB580876h, 5807D403h, 0A9038357h
		dd 3592E78h, 37407C0h, 59BA01A8h, 6679C103h, 754BAE48h
		dd 92755992h, 59927559h, 0AC038973h, 3833C06h, 20087F8Fh
		dd 9E00D503h, 0E4083E03h, 877AD03h, 0A40391BAh,	83575807h
		dd 5878ED03h, 4A680385h, 4A48032Fh, 8A03AD92h, 0AD03AC09h
		dd 91660877h, 5807AC03h, 0D1038357h, 48035878h,	3BB924Ah
		dd 0ED7407B9h, 801D603h, 76F50312h, 3BB2E08h, 575807CCh
		dd 78D3034Bh, 5B03852Eh, 8C03592Eh, 8603AC09h, 92580877h
		dd 7B103BBh, 3835758h, 4B2E78CAh, 7407E803h, 87AB103h
		dd 923D913Ch, 91923D91h, 391923Dh, 38206D5h, 34A79B1h
		dd 82E05F2h, 3AE2A13h, 37479FAh, 39E0686h, 0B103664Bh
		dd 3D91907Ah, 923D9192h, 91923D91h, 8206D503h, 4A79B103h
		dd 2E05E903h, 0AE2A1308h, 7477FC03h, 2840385h, 686032Eh
		dd 664B03D6h, 0AC7BB803h, 9E059803h, 26035508h,	8C03D782h
		dd 32E087Fh, 3AC78D5h, 34A02B6h, 89005B4h, 3766259h, 4B747894h
		dd 807AD03h, 0C7032Eh, 5908F39Eh, 0B7037862h, 0CF03907Fh
		dd 0BB91827Ah, 89FBBBBh, 5CF033Dh, 2A21089Eh, 7AAA03AEh
		dd 4A620374h, 923D9192h, 91923D91h, 391923Dh, 38206D5h
		dd 34A79B1h, 37405C2h, 35800D5h, 9E087FBAh, 907A9903h
		dd 9E068903h, 9E77E303h, 0BA029903h, 5806E003h,	0AC79A003h
		dd 5806E003h, 0AC76F703h, 0BA3703BBh, 3BBB9BBh,	3BBBA47h
		dd 3BA00C8h, 3740856h, 3BA0288h, 3BA7DF8h, 0B003BA5Eh
		dd 3740802h, 35806DCh, 3AC79A4h, 35806DCh, 3AC799Ch, 3580686h
		dd 34A7A8Fh, 0BB747DD9h, 0BA029703h, 206E403h, 0A2030130h
		dd 0D803F279h, 0A8035806h, 0D803AC79h, 0F7035806h, 0C7ADAC76h
		dd 2A803BBh, 6E003BAh, 79B10358h, 7475034Ah, 9E7E8B03h
		dd 3839D83h, 0AE039E48h, 3E40802h, 35806D8h, 34A79B1h
		dd 83747E82h, 0F003839Dh, 0DC039E01h, 0B1035806h, 0DC034A79h
		dd 6D03747Dh, 3C033C08h, 0E103D608h, 900808h, 3010402h
		dd 5B03586Eh, 0C603AC08h, 8AC087Dh, 391EA4Ah, 35800DCh
		dd 0E4087FA4h, 3D9E3F03h, 7BB00359h, 4B922C66h,	59599259h
		dd 92595992h, 35F5759h,	4B3C04BDh, 8AF31308h, 3D142802h
		dd 21088559h, 667B9B03h, 92597592h, 67925967h, 27089259h
		dd 3C04D003h, 813084Bh,	0B1032F13h, 125027Fh, 907C8403h
		dd 0ADAD7584h, 3F391ADh, 39003F4h, 3D032E19h, 0A5032E08h
		dd 3E4087Fh, 859079E4h,	2E028403h, 923D7592h, 83923D83h
		dd 3B83923Dh, 480036Dh,	901C033Ch, 587CB403h, 7403CD03h
		dd 8827903h, 879032Fh, 79FE0382h, 0B60385BAh, 0C9034A02h
		dd 1A035803h, 879032Eh,	7CC10382h, 3C00358h, 66033DD6h
		dd 0E0035808h, 7592907Bh, 3D83923Dh, 923D8392h,	3893B83h
		dd 33C048Bh, 3907CE9h, 6B9E03B5h, 5975083Dh, 667BBA03h
		dd 92597592h, 83925983h, 0B3089259h, 0AC04B103h, 84B084Bh
		dd 7BB90313h, 0F400274h, 75927508h, 3D83923Dh, 923D8392h
		dd 3898183h, 7F8204D0h,	2E7B9D03h, 87DFB03h, 0AC2A03BAh
		dd 801E203h, 27A03ACh, 3570135h, 597404C6h, 7BBB03AAh
		dd 80B032Eh, 275032Eh, 56790137h, 56A456A4h, 9E04E603h
		dd 58079403h, 2F75AEE4h, 5A68BB91h, 12081603h, 3826403h
		dd 7503902Bh, 5EAD6608h, 0B803313Dh, 0ADE47402h, 6784C968h
		dd 82081B03h, 900903C0h, 0A0905603h, 679F3008h,	9696C0h
		dd 4B010402h, 1040200h,	3C86703h, 2108F233h, 1040200h
		dd 0F106C806h, 4020068h, 8CA4B01h, 650373C9h, 2009F3Ch
		dd 82060104h, 1040200h,	900A0306h, 3DAE4508h, 4020083h
		dd 64A0601h, 2009FA4h, 82060104h, 2009106h, 5A030104h
		dd 0F31208h, 6010402h, 0C70674h, 0F8010402h, 83068206h
		dd 1040200h, 0C7068206h, 1040200h, 8206EAh, 6020402h, 4020083h
		dd 6903E302h, 3A031208h, 2002008h, 44030104h, 7AAC0358h
		dd 1208BA08h, 4B3D75BBh, 4A082703h, 3825D03h, 32E00EAh
		dd 3900843h, 594A7EEDh,	0AD76AD76h, 375AD76h, 3D9E018Ah
		dd 5E902603h, 200754Bh,	82060104h, 2130806h, 0D9081327h
		dd 7F9C033Dh, 0C4032Eh,	3D4B95BAh, 2007583h, 4A060104h
		dd 1040200h, 0BB085906h, 1040200h, 9106BA06h, 0B7033D83h
		dd 9103AC7Fh, 7659827Fh, 76AD76ADh, 0E0375ADh, 0DC03839Eh
		dd 0AD03BA00h, 0D503907Fh, 0A23D2E00h, 84CAE584h, 907FBB03h
		dd 0CB03C9h, 3672008h, 4B949E0Dh, 1040200h, 77068206h
		dd 1040200h, 0BC0859h, 6010402h, 839106ACh, 7FAD0375h
		dd 0A75D83ACh, 72034D81h, 0BA0D0382h, 3BA4603h,	2008226h
		dd 0E2030204h, 200AC00h, 8060104h, 40200D6h, 11030602h
		dd 2005808h, 8060104h, 1B0306D6h, 0C2032E08h, 32026602h
		dd 0E03E812h, 3F4CBACh,	6708BA09h, 2BB03DDh, 40200E4h
		dd 7DCA0301h, 6820690h,	27AB603h, 23080134h, 0CA0385F3h
		dd 0D08205h, 6010402h, 15080682h, 9E79FD03h, 0E383A0A2h
		dd 5812032Ch, 4DB84C67h, 5EB03BBh, 0A68982h, 6010402h
		dd 0E5061208h, 83142302h, 4B8383BBh, 83CAE84Bh,	35D8F08h
		dd 280279E2h, 4B5B0801h, 32E7503h, 0F5039010h, 349AC05h
		dd 9103820Dh, 0B03BA7Ah, 32022008h, 3387514h, 0CB5805C8h
		dd 201D803h, 2000124h, 82060104h, 4B0806h, 0AF010402h
		dd 8068206h, 402003Dh, 6820601h, 3835BC7h, 220278D5h, 5EE0301h
		dd 83103F2h, 79C30320h,	3013202h, 0B2F2069Fh, 3821C03h
		dd 1320211h, 40200CAh, 64A0601h, 3D61503h, 667EF6h, 3010402h
		dd 6F2018Fh, 180306E4h,	66034CACh, 3ADA0ACh, 3827497h
		dd 0A4039E19h, 0B1C8080Bh, 8E5D859h, 66034E2Ah,	383B2C8h
		dd 0CD827A82h, 2C088484h, 3A83DADh
byte_1BB04	db 9			; DATA XREF: .debug_info:00005864o
byte_1BB05	db 58h,	3, 8Bh		; DATA XREF: .debug_info:0000671Co
		dd 75C80806h, 3740F03h,	2E0879C0h, 3AC1703h, 39E05D3h
		dd 9E00C8h
dword_1BB20	dd 3010402h, 9E7DDDh, 3010402h,	5B3C02A3h, 0C87A9403h
					; DATA XREF: .debug_info:00006C30o
					; .debug_info:00006FC9o ...
		dd 3902903h, 0AC0805C8h, 879E903h, 0DA0397BAh, 874B9005h
		dd 96906503h, 402004Ch,	7FB50302h, 4020058h, 0AC080601h
		dd 7B800306h, 0FE032008h, 0F20805h, 6010402h, 402004Ah
		dd 7A030601h, 40200ACh,	2005001h, 0E4060204h, 87A0306h
		dd 8D0350D6h, 6D03C87Fh, 0BE038208h, 1003C875h,	0BDC039Eh
		dd 67A17558h, 40200DEh,	6AC0601h, 0E6083608h, 87EA303h
		dd 402003Ch, 1DD0302h, 4020090h, 7EA30302h, 2001208h, 0DD030204h
		dd 2003C01h, 58060104h,	79E40306h, 10032E08h, 0DF039574h
		dd 76033C05h, 79C6032Eh, 7AF20358h, 0CA032008h,	0D3039E0Bh
		dd 0B0034A7Eh, 643D9E7Bh, 4A068603h, 747A9103h,	5EA0395h
		dd 7FB0033Ch, 7AB30374h, 6CE039Eh, 200849Eh, 0C8060104h
		dd 1040200h, 74820306h,	0C8603ACh, 2002E08h, 90030104h
		dd 200D67Eh, 0F0030104h, 2007401h, 0AD0304h, 0E6030402h
		dd 3069E06h, 3E827D9Ch,	75820C03h, 0D4032308h, 80200802h
		dd 81103FBh, 4020058h, 0FE03E701h, 8303BA7Dh, 200D602h
		dd 82060104h, 9C03C706h, 0D039E7Dh, 7E9F0390h, 9208AC08h
		dd 40200D9h, 4840302h, 40200F2h, 0F2080601h, 1040200h
		dd 0D606BA06h, 7EAD0306h, 4020090h, 1D30302h, 4020074h
		dd 58080601h, 7EDE0306h, 0F4032008h, 9FBA087Eh,	39E6103h
		dd 0D3033C1Fh, 0E103907Eh, 9033C77h, 89603F2h, 91C98458h
		dd 0F5035Bh, 76F50390h,	0A903D608h, 2F087409h, 3677559h
		dd 0E402E0h, 6010402h, 2005808h, 62E0304h, 0E4081203h
		dd 2003D08h, 6AF0104h, 0F306BAh, 6010402h, 3C70682h, 3BA7EFBh
		dd 1270211h, 0BA085A03h, 27CE703h, 8003012Ah, 10033C78h
		dd 7F003F2h, 83B4E58h, 788103CDh, 0C8D0374h, 79E30374h
		dd 87503C8h, 3CF03BAh, 0A108BA08h, 0E47EE603h, 2040200h
		dd 7403E803h, 1040200h,	0D60806h, 6010402h, 40200BAh, 7FBA0301h
		dd 4020058h, 0BA7A0301h, 1040200h, 3902F03h, 2AC0813h
		dd 0F6031329h, 0C603587Eh, 5C03C801h, 4020058h,	7EA20301h
		dd 7EFE039Eh, 0A603AC08h, 312087Fh, 20087FAEh, 0D2036891h
		dd 0B2034A00h, 5A593C7Dh, 5AAD5AADh, 0C80359ADh, 3839002h
		dd 3522E77h, 4B032E32h,	85103ACh, 0E903BAh, 4F03AD3Ch
		dd 7F9F03ACh, 0A0C9C808h, 4A00E103h, 7DDD0341h,	0A2039190h
		dd 8580802h, 2E7703ADh,	3661703h, 3827DD1h, 3C08029Dh
		dd 0BA080A03h, 87F9003h, 3689158h, 0B18200F0h, 7703D708h
		dd 7FAA034Ah, 821A03ACh, 58084C03h, 34036891h, 7DD0034Ah
		dd 0AD5A593Ch, 0AD5AAD5Ah, 2AA0359h, 77038390h,	0C603952Eh
		dd 84BA0800h, 747903A3h, 40039292h, 0BD03BA08h,	9158087Fh
		dd 0C30368h, 7DC1034Ah,	0AD5A593Ch, 0AD5AAD5Ah,	900E0359h
		dd 2AA034Bh, 7703834Ah,	7DE0032Eh, 2A50390h, 82D034Ah
		dd 48603BAh, 0BBACD608h, 33B2F08h, 0BBF27427h, 753D2F83h
		dd 40200E5h, 0B108FB01h, 8BB7485h, 87C3B2Fh, 8ADAD66h
		dd 91089F3Eh, 402005Ah,	2002A01h, 32C0104h, 24C580Eh, 3F41324h
		dd 9F660875h, 3587703h,	7703AC0Eh, 80D0382h, 86B4B20h
		dd 8503BB66h, 92A26677h, 32CAB83h, 4C675812h, 3834D80h
		dd 4C8208E1h, 778C03D7h, 23085808h, 2E75034Bh, 72901003h
		dd 9E08EB03h, 66086C4Ch, 0BC08E6ADh, 2108D7D8h,	4020092h
		dd 2E7A0301h, 1040200h,	58100348h, 89F0884h, 8740369h
		dd 75039F74h, 0C8100358h, 8884FD7h, 0DB03AD66h,	0A0A29E76h
		dd 32CAB83h, 4C675812h,	3834D80h, 4C82098Dh, 76E003D7h
		dd 23085808h, 2E75034Bh, 72901003h, 9E099703h, 66086C4Ch
		dd 6808ADADh, 2108C9D8h, 4020092h, 2E7A0301h, 1040200h
		dd 58120348h, 152E0284h, 9E087303h, 5875039Fh, 0D7C81203h
		dd 5024Eh
		db 2 dup(1)
		align 10h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 1BF70h
aMessage	db 'message',0          ; DATA XREF: .debug_info:00007019o
					; .debug_info:00007915o ...
aWire_type	db 'wire_type',0        ; DATA XREF: .debug_info:00006269o
					; .debug_info:000066F9o ...
aCount		db 'count',0            ; DATA XREF: .debug_info:00006A54o
					; .debug_info:off_6B6Do ...
aStart		db 'start',0            ; DATA XREF: .debug_info:0000A6C2o
					; .debug_info:0000BD1Bo ...
aDesc		db 'desc',0             ; DATA XREF: .debug_info:00009FE7o
					; .debug_info:0000A09Co ...
aC_name		db 'c_name',0           ; DATA XREF: .debug_info:00005CD0o
					; .debug_info:00005DBBo ...
aData		db 'data',0             ; DATA XREF: .debug_info:00005B03o
					; .debug_info:00006287o ...
aPayload_len	db 'payload_len',0      ; DATA XREF: .debug_info:00008219o
					; .debug_info:0000909Co
aArray		db 'array',0            ; DATA XREF: .debug_info:00006A60o
					; .debug_info:00006B79o ...
aSublen		db 'sublen',0           ; DATA XREF: .debug_info:00006F51o
					; .debug_info:00006F6Eo ...
aScratch	db 'scratch',0          ; DATA XREF: .debug_info:00006B91o
					; .debug_info:00006F34o ...
aService	db 'service',0          ; DATA XREF: .debug_info:0000696Bo
					; .debug_info:0000BC06o ...
aQmember	db 'qmember',0          ; DATA XREF: .debug_info:00007966o
					; .debug_info:000084BAo ...
aAllocator_data	db 'allocator_data',0   ; DATA XREF: .debug_info:00005BF3o
					; .debug_info:0000716Ao ...
aPackage_name	db 'package_name',0     ; DATA XREF: .debug_info:00005DC9o
					; .debug_info:00005F41o
aMember		db 'member',0           ; DATA XREF: .debug_info:00006D75o
					; .debug_info:00006E6Fo ...
aName		db 'name',0             ; DATA XREF: .debug_info:00005CC2o
					; .debug_info:00005D2Eo ...
aValue		db 'value',0            ; DATA XREF: .debug_info:00005CDEo
					; .debug_info:0000689Eo ...
aBuffer		db 'buffer',0           ; DATA XREF: .debug_info:off_6B85o
					; .debug_info:00006F1Do ...
aDescriptor	db 'descriptor',0       ; DATA XREF: .debug_info:000060D2o
					; .debug_info:00006177o ...
aField		db 'field',0            ; DATA XREF: .debug_info:00006725o
					; .debug_info:0000686Do ...
aScanned_member	db 'scanned_member',0   ; DATA XREF: .debug_info:0000A23Bo
					; .debug_info:0000A846o ...
aShort_name	db 'short_name',0       ; DATA XREF: .debug_info:00005DADo
					; .debug_info:00005F23o ...
aPref_len	db 'pref_len',0         ; DATA XREF: .debug_info:0000A334o
					; .debug_info:0000A3A3o ...
aAllocator	db 'allocator',0        ; DATA XREF: .debug_info:0000A08Co
					; .debug_info:0000A25Bo ...
aReserved1	db 'reserved1',0        ; DATA XREF: .debug_info:00005E5Co
					; .debug_info:00005FFBo
aReserved2	db 'reserved2',0        ; DATA XREF: .debug_info:00005E6Ao
					; .debug_info:0000600Ao ...
aReserved3	db 'reserved3',0        ; DATA XREF: .debug_info:00005E78o
					; .debug_info:00006019o ...
aDa__allocation	db 'da__allocation_size',0 ; DATA XREF: .debug_info:0000745Co
					; .debug_info:0000A3BCo ...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 1C078h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch)
		dd offset unk_4CFF-20D97h
		dd offset unk_45
		dd 200E4300h, 40E0A67h,	0A4F0B46h, 0B41040Eh, 18h, 3Ch
		dd offset unk_4CFF-20D6Fh
		dd offset loc_4B+2
		dd 400E4300h, 40E0A6Fh,	0B42h, 10h, 58h
		dd offset unk_4CFF-20D3Bh
		dd offset loc_3A+1
		dd 300E4300h, 34h, 6Ch
		dd offset unk_4CFF-20D13h
		dd offset loc_75+1
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A4Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 18h
		dd 0A4h
		dd offset unk_4CFF-20CD3h
		dd offset loc_4B+1
		dd 400E4300h, 0E0A4302h, 0B4104h, 54h, 0C0h
		dd offset unk_4CFF-20CA3h
		dd offset loc_10D+3
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0ACC02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 6A0B4104h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 45040EC5h, 0Bh, 3Ch, 118h
		dd offset unk_4CFF-20BEBh
		dd offset loc_CE+4
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0A8502h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 20h, 158h
		dd offset unk_4CFF-20B57h
		dd offset loc_129+4
		dd 80E4100h, 0E430283h,	0A640220h, 0C341080Eh, 0B43040Eh
		dd 2Ch,	17Ch
		dd offset unk_4CFF-20A4Bh
		dd offset loc_D5
		dd 80E4100h, 0E430283h,	0E0A7120h, 0EC34108h, 20B4604h
		dd 80E0A60h, 40EC341h, 0B43h, 3Ch, 1ACh
		dd offset unk_4CFF-209A3h
		dd offset loc_6CF+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0A013003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B41040Eh, 34h, 1ECh
		dd offset unk_4CFF-2030Fh
		dd offset loc_366
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A79h, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 3Ch
		dd 224h
		dd offset unk_4CFF-1FFDFh
		dd offset loc_7C0
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 700E4305h, 0A012703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B42040Eh, 3Ch, 264h
		dd offset unk_4CFF-1F85Fh
		dd offset loc_4FD
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0AD202h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 40h, 2A4h
		dd offset unk_4CFF-1F39Fh
		dd offset loc_B28
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 900E4305h, 1790301h,	41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 44040EC5h, 0Bh, 40h, 2E8h
		dd offset unk_4CFF-1E8BBh
		dd offset loc_6AC+4
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 800E4605h, 2650303h,	41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 32Ch
		dd offset unk_4CFF-1E24Fh
		dd offset sub_96
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 300E4305h, 0E0A6D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 3Ch, 36Ch
		dd offset unk_4CFF-1E1F7h
		dd offset loc_297
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0A013E03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B43040Eh, 3Ch, 3ACh
		dd offset unk_4CFF-1DF9Fh
		dd offset loc_3C2+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0A5602h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 40h, 3ECh
		dd offset unk_4CFF-1DC1Bh
		dd offset sub_11F2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0D00E4605h, 3E10304h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 41040EC5h, 0Bh, 18h, 430h
		dd offset unk_4CFF-1CA6Bh
		dd offset loc_34
		dd 200E4300h, 40E0A6Ah,	0B42h, 20h, 44Ch
		dd offset unk_4CFF-1CA53h
		dd offset loc_6F+2
		dd 80E4100h, 0E430287h,	0A4A0230h, 0C741080Eh, 0B41040Eh
		dd 18h,	470h
		dd offset unk_4CFF-1CA03h
		dd offset loc_30
		dd 200E4300h, 40E0A66h,	0B42h, 3Ch, 48Ch
		dd offset unk_4CFF-1C9EFh
		dd offset loc_FF
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0AB302h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4204h, 3Ch, 4CCh
		dd offset unk_4CFF-1C92Fh
		dd offset loc_DE+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0A9602h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 3Ch, 50Ch
		dd offset unk_4CFF-1C88Fh
		dd offset loc_115
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0AD402h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 3Ch, 54Ch
		dd offset unk_4CFF-1C7B7h
		dd offset loc_E2+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0A9A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 3Ch, 58Ch
		dd offset unk_4CFF-1C713h
		dd offset loc_105+4
		dd 80E4100h, 0E410285h
		db 0Ch
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR _protobuf_c_message_get_packed_size

loc_1C619:				; CODE XREF: _protobuf_c_message_get_packed_size+193j
		xchg	eax, [ebx]
		inc	ecx
		push	cs
		adc	[esi+140E4104h], al
		add	dword ptr ds:2600E43h, 0FFFFFFC5h
		or	cl, [esi]
		adc	al, 41h	; 'A'
		retn
; END OF FUNCTION CHUNK	FOR _protobuf_c_message_get_packed_size
; ---------------------------------------------------------------------------
		db 0Eh
		dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _system_free+7r
					; _system_free+1Br ...
; FILE __iob[]
		extrn __imp___iob:near	; DATA XREF: _protobuf_c_out_of_memory_default+Er
					; _alloc_failed_warning_constprop_14+27r
; void __cdecl free(void *)
		extrn _free:near	; CODE XREF: _system_free+2Aj
		extrn __imp____stack_chk_fail:near ; CODE XREF:	_system_free:loc_40p
					; _system_alloc:loc_90p ...
; void *__cdecl	malloc(size_t)
		extrn _malloc:near	; CODE XREF: _system_alloc+1Ap
; size_t __cdecl fwrite(const void *, size_t, size_t, FILE *)
		extrn _fwrite:near	; CODE XREF: _protobuf_c_out_of_memory_default+31p
; void __cdecl __noreturn abort()
		extrn _abort:near	; CODE XREF: _protobuf_c_out_of_memory_default:loc_CEp
; void __cdecl _assert(void *, void *, unsigned	int)
		extrn __assert:near	; CODE XREF: _protobuf_c_service_invoke_internal:loc_140p
					; _protobuf_c_message_get_packed_size+6CCp ...
; int fprintf(FILE *, const char *, ...)
		extrn _fprintf:near	; CODE XREF: _alloc_failed_warning_constprop_14:loc_17Ep
; void *__cdecl	memmove(void *,	const void *, size_t)
		extrn _memmove:near	; CODE XREF: sub_1370+48p
					; _required_field_pack_isra_12+126p
; int __cdecl putchar(int)
		extrn _putchar:near	; CODE XREF: _protobuf_c_message_unpack+291p
					; _protobuf_c_message_unpack:loc_38AFp	...
; int printf(const char	*, ...)
		extrn _printf:near	; CODE XREF: _protobuf_c_message_unpack+285p
					; _protobuf_c_message_unpack+357p ...
; int __cdecl strcmp(const char	*, const char *)
		extrn _strcmp:near	; CODE XREF: _protobuf_c_enum_descriptor_get_value_by_name+60p
					; _protobuf_c_enum_descriptor_get_value_by_name+92p ...


		end

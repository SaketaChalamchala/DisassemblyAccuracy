;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DE8D983B92F32AB97B3253F1D83AF417
; Input	CRC32 :	7D177B5A

; File Name   :	d:\pidgin-o\nmconn.o
; Format      :	COFF (X386MAGIC)

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _nm_create_conn
_nm_create_conn	proc near		; DATA XREF: .debug_info:00001190o
					; .debug_info:00001B19o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi
		push	esi
		push	ebx
		sub	esp, 20h
		mov	edi, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 24h ;	'$'
		call	_g_malloc0

loc_25:					; DATA XREF: .debug_info:00001B58o
		mov	ebx, eax

loc_27:					; DATA XREF: .debug_loc:off_3460o
		mov	[esp+2Ch+var_2C], edi

loc_2A:					; DATA XREF: .debug_loc:00003464o
		call	_g_strdup

loc_2F:					; DATA XREF: .debug_info:off_1B6Do
		mov	[ebx], eax

loc_31:					; DATA XREF: .eh_frame:00005138o
		mov	[ebx+4], esi

loc_34:					; DATA XREF: .eh_frame:00005154o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard

loc_3E:					; DATA XREF: .eh_frame:00004F50o
					; .eh_frame:00004F6Co
		jnz	short loc_49
		mov	eax, ebx
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_49:					; CODE XREF: _nm_create_conn:loc_3Ej
		call	___stack_chk_fail
_nm_create_conn	endp

; ---------------------------------------------------------------------------
unk_4E		db  66h	; f		; DATA XREF: .debug_info:00001B1Do
					; .debug_info:off_1B82o ...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _nm_release_conn
_nm_release_conn proc near		; DATA XREF: .debug_info:00001BA0o
					; .debug_loc:off_3494o

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi

loc_51:					; DATA XREF: .debug_loc:00003498o
					; .eh_frame:00005050o
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]

loc_59:					; DATA XREF: .eh_frame:00005100o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax

loc_62:					; DATA XREF: .eh_frame:000050C4o
		xor	eax, eax
		test	esi, esi
		jz	short loc_D8

loc_68:					; DATA XREF: .debug_ranges:off_47C4o
		mov	ebx, [esi+10h]

loc_6B:					; DATA XREF: .debug_loc:off_352Co
		test	ebx, ebx
		jz	short loc_EA
		nop

loc_70:					; CODE XREF: _nm_release_conn+33j
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_7E

loc_76:					; DATA XREF: .debug_info:00001AFCo
					; .debug_info:00002B48o ...
		mov	[esp+2Ch+var_2C], eax

loc_79:					; DATA XREF: .eh_frame:00004F10o
		call	_nm_release_request

loc_7E:					; CODE XREF: _nm_release_conn+24j
					; DATA XREF: .debug_info:00001BD9o
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_70
		mov	eax, [esi+10h]

loc_88:					; CODE XREF: _nm_release_conn+9Cj
		mov	[esp+2Ch+var_2C], eax
		call	_g_slist_free

loc_90:					; DATA XREF: .debug_info:00001BE2o
		mov	dword ptr [esi+10h], 0
		mov	eax, [esi+20h]
		test	eax, eax
		jz	short loc_AD

loc_9E:					; DATA XREF: .eh_frame:00004E30o
					; .eh_frame:00004E7Co
		mov	[esp+2Ch+var_2C], eax

loc_A1:					; DATA XREF: .eh_frame:00004EC8o
					; .eh_frame:00004DF4o
		call	_g_free

loc_A6:					; DATA XREF: .debug_info:00001BEBo
		mov	dword ptr [esi+20h], 0

loc_AD:					; CODE XREF: _nm_release_conn+4Cj
		mov	eax, [esi]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_B7:					; DATA XREF: .debug_info:00001BF4o
		mov	dword ptr [esi], 0
		mov	eax, [esp+2Ch+var_10]

loc_C1:					; DATA XREF: .debug_info:000012B9o
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_EE
		mov	[esp+2Ch+arg_0], esi

loc_CD:					; DATA XREF: .debug_ranges:000047C8o
		add	esp, 24h
		pop	ebx

loc_D1:					; DATA XREF: .debug_loc:00003530o
		pop	esi

loc_D2:					; DATA XREF: .debug_ranges:000047CCo
		jmp	_g_free
; ---------------------------------------------------------------------------
unk_D7		db  90h	; ê		; DATA XREF: .debug_info:00001BFDo
; ---------------------------------------------------------------------------

loc_D8:					; CODE XREF: _nm_release_conn+16j
					; DATA XREF: .debug_ranges:000047D0o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_EE
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_EA:					; CODE XREF: _nm_release_conn+1Dj
					; DATA XREF: .debug_ranges:000047D4o
		xor	eax, eax
		jmp	short loc_88
; ---------------------------------------------------------------------------

loc_EE:					; CODE XREF: _nm_release_conn+77j
					; _nm_release_conn+92j
					; DATA XREF: ...
		call	___stack_chk_fail
_nm_release_conn endp

; ---------------------------------------------------------------------------
unk_F3		db  90h	; ê		; DATA XREF: .debug_info:00001BA4o
					; .debug_info:00001C08o

; =============== S U B	R O U T	I N E =======================================


; int __cdecl nm_tcp_write(int,	void *,	unsigned int)
		public _nm_tcp_write
_nm_tcp_write	proc near		; CODE XREF: _nm_write_fields:loc_472p
					; _nm_write_fields:loc_4C2p ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi

loc_F5:					; DATA XREF: .debug_loc:0000354Eo
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_8]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ecx
		xor	ecx, ecx
		test	eax, eax
		jz	short loc_178
		test	edx, edx
		jz	short loc_178
		mov	ecx, [eax+18h]
		test	ecx, ecx
		jz	short loc_150
		mov	eax, [eax+20h]
		test	eax, eax
		jz	short loc_178
		mov	ecx, [eax+8]
		test	ecx, ecx
		jz	short loc_178
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_18F
		mov	[esp+1Ch+arg_8], ebx
		mov	[esp+1Ch+arg_4], edx
		mov	eax, [eax]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 14h
		pop	ebx
		pop	esi

loc_14D:				; DATA XREF: .eh_frame:00004FCCo
		jmp	ecx
; ---------------------------------------------------------------------------
unk_14F		db  90h	; ê		; DATA XREF: .debug_loc:off_3612o
					; .debug_loc:off_3631o	...
; ---------------------------------------------------------------------------

loc_150:				; CODE XREF: _nm_tcp_write+2Aj
					; DATA XREF: .debug_info:00001C43o ...
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_18F
		mov	[esp+1Ch+arg_8], ebx ; unsigned	int
		mov	[esp+1Ch+arg_4], edx ; void *
		mov	eax, [eax+8]

loc_167:				; DATA XREF: .debug_loc:00003654o
		mov	[esp+1Ch+arg_0], eax ; int

loc_16B:				; DATA XREF: .debug_ranges:000047E8o
		add	esp, 14h
		pop	ebx

loc_16F:				; DATA XREF: .debug_loc:00003616o
		pop	esi

loc_170:				; DATA XREF: .debug_ranges:000047ECo
					; .debug_loc:00003635o	...
		jmp	_write
; ---------------------------------------------------------------------------
unk_175		db  8Dh	; ç		; DATA XREF: .debug_info:00001C6Do
					; .debug_loc:00003640o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_178:				; CODE XREF: _nm_tcp_write+1Fj
					; _nm_tcp_write+23j ...
		mov	eax, 0FFFFFFFFh
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_18F
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_18F:				; CODE XREF: _nm_tcp_write+44j
					; _nm_tcp_write+66j ...
		call	___stack_chk_fail
_nm_tcp_write	endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl nm_tcp_read(int, void *, unsigned	int)
		public _nm_tcp_read
_nm_tcp_read	proc near		; CODE XREF: _nm_read_all+4Ep
					; DATA XREF: .debug_info:00001C1Ao ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi

loc_195:				; DATA XREF: .debug_loc:00003673o
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	ebx, [esp+1Ch+arg_8]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ecx
		xor	ecx, ecx
		test	eax, eax
		jz	short loc_218
		test	edx, edx
		jz	short loc_218
		mov	esi, [eax+18h]
		test	esi, esi
		jz	short loc_1F0
		mov	eax, [eax+20h]
		test	eax, eax

loc_1C5:				; DATA XREF: .debug_info:00002F10o
					; .debug_info:00002F69o
		jz	short loc_218
		mov	ecx, [eax+4]
		test	ecx, ecx
		jz	short loc_218
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_22F
		mov	[esp+1Ch+arg_8], ebx
		mov	[esp+1Ch+arg_4], edx
		mov	eax, [eax]
		mov	[esp+1Ch+arg_0], eax
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	ecx
; ---------------------------------------------------------------------------
		align 10h

loc_1F0:				; CODE XREF: _nm_tcp_read+2Aj
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_22F

loc_1FC:				; DATA XREF: .debug_info:00002FB0o
		mov	[esp+1Ch+arg_8], ebx ; unsigned	int
		mov	[esp+1Ch+arg_4], edx ; void *
		mov	eax, [eax+8]
		mov	[esp+1Ch+arg_0], eax ; int
		add	esp, 14h
		pop	ebx
		pop	esi

loc_210:				; DATA XREF: .debug_info:00002F30o
		jmp	_read
; ---------------------------------------------------------------------------
unk_215		db  8Dh	; ç		; DATA XREF: .debug_info:00001CD2o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_218:				; CODE XREF: _nm_tcp_read+1Fj
					; _nm_tcp_read+23j ...
		mov	eax, 0FFFFFFFFh
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_22F
		add	esp, 14h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_22F:				; CODE XREF: _nm_tcp_read+44j
					; _nm_tcp_read+66j ...
		call	___stack_chk_fail
_nm_tcp_read	endp


; =============== S U B	R O U T	I N E =======================================


		public _nm_read_all
_nm_read_all	proc near		; CODE XREF: _read_line_constprop_2+2Dp
					; _nm_read_uint32+25p ...

dwMilliseconds	= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_235:				; DATA XREF: .debug_loc:0000373Bo
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	edi, [esp+4Ch+arg_4]
		mov	ebp, [esp+4Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_252:				; DATA XREF: .debug_loc:off_37EBo
		test	esi, esi
		jz	short loc_2B0
		test	edi, edi
		jz	short loc_2B0

loc_25A:				; DATA XREF: .debug_info:00001D39o
					; .debug_loc:off_3837o	...
		test	ebp, ebp
		jz	short loc_2AC
		mov	[esp+4Ch+var_30], 3E8h
		xor	ebx, ebx
		jmp	short loc_274
; ---------------------------------------------------------------------------
unk_26A		db  66h	; f		; DATA XREF: .debug_loc:000037EFo
					; .debug_loc:off_3855o	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_26C:				; CODE XREF: _nm_read_all+55j
		sub	ebp, eax
		add	ebx, eax
		test	ebp, ebp
		jz	short loc_2AC

loc_274:				; CODE XREF: _nm_read_all+34j
					; _nm_read_all+76j
					; DATA XREF: ...
		mov	[esp+4Ch+var_44], ebp ;	unsigned int
		lea	eax, [edi+ebx]
		mov	[esp+4Ch+var_48], eax ;	void *

loc_27F:				; DATA XREF: .debug_info:00002F01o
					; .debug_info:00002FD4o
		mov	[esp+4Ch+dwMilliseconds], esi ;	int
		call	_nm_tcp_read

loc_287:				; DATA XREF: .debug_info:00001D89o
					; .debug_loc:00003860o
		test	eax, eax
		jg	short loc_26C

loc_28B:				; DATA XREF: .debug_loc:00003864o
		call	__errno

loc_290:				; DATA XREF: .debug_info:00001DAFo
		cmp	dword ptr [eax], 0Bh
		jnz	short loc_2C9
		dec	[esp+4Ch+var_30]
		jz	short loc_2C9
		mov	[esp+4Ch+dwMilliseconds], 1 ; dwMilliseconds
		call	_Sleep@4

loc_2A7:				; DATA XREF: .debug_info:00001DB8o
		push	eax
		test	ebp, ebp
		jnz	short loc_274

loc_2AC:				; CODE XREF: _nm_read_all+28j
					; _nm_read_all+3Ej
		xor	eax, eax
		jmp	short loc_2B5
; ---------------------------------------------------------------------------

loc_2B0:				; CODE XREF: _nm_read_all+20j
					; _nm_read_all+24j
					; DATA XREF: ...
		mov	eax, 2001h

loc_2B5:				; CODE XREF: _nm_read_all+7Aj
					; _nm_read_all:loc_2CEj
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_2D0
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_2C9:				; CODE XREF: _nm_read_all+5Fj
					; _nm_read_all+65j
					; DATA XREF: ...
		mov	eax, 2003h

loc_2CE:				; DATA XREF: .debug_loc:off_3821o
		jmp	short loc_2B5
; ---------------------------------------------------------------------------

loc_2D0:				; CODE XREF: _nm_read_all+8Bj
					; DATA XREF: .debug_loc:00003825o ...
		call	___stack_chk_fail
_nm_read_all	endp

; ---------------------------------------------------------------------------
unk_2D5		db  8Dh	; ç		; DATA XREF: .debug_info:00001CEEo
					; .debug_info:00001DCAo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_read_line_constprop_2 proc near	; CODE XREF: _nm_read_header+34p
					; _nm_read_header+B4p
					; DATA XREF: ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h

		push	ebp

loc_2D9:				; DATA XREF: .debug_loc:000038DFo
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edi, eax
		mov	[esp+4Ch+var_30], edx
		mov	eax, dword ptr ds:___stack_chk_guard

loc_2EA:				; DATA XREF: .eh_frame:0000500Co
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_2F0:				; DATA XREF: .debug_loc:00003979o
					; .debug_loc:00003980o	...
		mov	ebx, edx
		xor	esi, esi

loc_2F4:				; CODE XREF: _read_line_constprop_2+5Fj
					; DATA XREF: .debug_loc:000039B0o ...
		mov	ebp, ebx
		mov	[esp+4Ch+var_44], 1
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], edi
		call	_nm_read_all

loc_30A:				; DATA XREF: .debug_info:00001E15o
					; .debug_loc:000039CFo
		test	eax, eax
		jz	short loc_328

loc_30E:				; CODE XREF: _read_line_constprop_2+6Bj
					; _read_line_constprop_2+76j
		mov	byte ptr [ebp+0], 0
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_350
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi

loc_324:				; DATA XREF: .debug_loc:00003984o
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_328:				; CODE XREF: _read_line_constprop_2+34j
		inc	esi
		cmp	byte ptr [ebx],	0Ah
		jz	short loc_348
		lea	ebx, [ebx+1]
		cmp	esi, 1FFh
		jnz	short loc_2F4
		mov	ebp, [esp+4Ch+var_30]
		add	ebp, 1FFh
		jmp	short loc_30E
; ---------------------------------------------------------------------------
		align 4

loc_348:				; CODE XREF: _read_line_constprop_2+54j
		mov	ebp, [esp+4Ch+var_30]
		add	ebp, esi
		jmp	short loc_30E
; ---------------------------------------------------------------------------

loc_350:				; CODE XREF: _read_line_constprop_2+44j
		call	___stack_chk_fail
_read_line_constprop_2 endp

; ---------------------------------------------------------------------------
unk_355		db  8Dh	; ç		; DATA XREF: .debug_info:00001DDCo
					; .debug_info:00001E37o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_read_uint32
_nm_read_uint32	proc near		; CODE XREF: _nm_read_fields+A1p
					; _nm_read_fields+106p	...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch

loc_35B:				; DATA XREF: .debug_loc:00003A24o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_366:				; DATA XREF: .debug_loc:off_3A58o
		mov	[esp+2Ch+var_24], 4
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_nm_read_all

loc_382:				; DATA XREF: .debug_info:00001E98o
					; .debug_loc:00003A5Co
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_392
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_392:				; CODE XREF: _nm_read_uint32+34j
		call	___stack_chk_fail
_nm_read_uint32	endp

; ---------------------------------------------------------------------------
unk_397		db  90h	; ê		; DATA XREF: .debug_info:00001E5Do
					; .debug_info:00001EBCo

; =============== S U B	R O U T	I N E =======================================


		public _nm_read_uint16
_nm_read_uint16	proc near		; DATA XREF: .debug_info:00001EE4o
					; .debug_loc:off_3A77o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch

loc_39B:				; DATA XREF: .debug_loc:00003A7Bo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_3A6:				; DATA XREF: .debug_loc:off_3AAFo
		mov	[esp+2Ch+var_24], 2
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax

loc_3B6:				; DATA XREF: .eh_frame:00004F88o
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_nm_read_all

loc_3C2:				; DATA XREF: .debug_info:00001F23o
					; .debug_loc:00003AB3o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_3D2
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_3D2:				; CODE XREF: _nm_read_uint16+34j
		call	___stack_chk_fail
_nm_read_uint16	endp

; ---------------------------------------------------------------------------
unk_3D7		db  90h	; ê		; DATA XREF: .debug_info:00001EE8o
					; .debug_info:00001F47o

; =============== S U B	R O U T	I N E =======================================


		public _nm_write_fields
_nm_write_fields proc near		; CODE XREF: _nm_write_fields+24Ap
					; _nm_send_request+168p
					; DATA XREF: ...

var_104C	= dword	ptr -104Ch
var_1048	= dword	ptr -1048h
var_1044	= dword	ptr -1044h
var_1040	= dword	ptr -1040h
var_1038	= dword	ptr -1038h
var_1034	= dword	ptr -1034h
var_1030	= dword	ptr -1030h
var_1020	= byte ptr -1020h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_3D9:				; DATA XREF: .debug_loc:00003AD2o
		push	edi
		push	esi
		push	ebx
		mov	eax, 103Ch
		call	___chkstk_ms
		sub	esp, eax
		mov	edx, [esp+104Ch+arg_0]
		mov	[esp+104Ch+var_1038], edx
		mov	ebx, [esp+104Ch+arg_4]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+104Ch+var_20], ecx
		xor	ecx, ecx

loc_409:				; DATA XREF: .debug_loc:off_3B68o
					; .debug_loc:off_3BD9o	...
		test	edx, edx
		jz	loc_638
		test	ebx, ebx
		jz	loc_638
		add	ebx, 18h

loc_41C:				; DATA XREF: .debug_info:000020C2o
					; .debug_ranges:off_482Co ...
		mov	[esp+104Ch+var_1030], 0

loc_424:				; DATA XREF: .debug_ranges:00004830o
					; .debug_ranges:00004860o
		lea	edi, [esp+104Ch+var_1020]

loc_428:				; CODE XREF: _nm_write_fields+1A7j
					; _nm_write_fields:loc_632j
					; DATA XREF: ...
		mov	eax, [ebx-18h]
		test	eax, eax
		jz	loc_595

loc_433:				; DATA XREF: .debug_info:00001F6Co
		cmp	byte ptr [ebx-14h], 1
		jz	loc_57C
		cmp	byte ptr [ebx-12h], 2
		jz	loc_57C
		mov	[esp+104Ch+var_1040], eax
		mov	[esp+104Ch+var_1044], offset aTagS ; "&tag=%s"
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_463:				; DATA XREF: .debug_info:00002123o
					; .debug_loc:off_3C59o
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	edx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], edx ; int

loc_472:				; DATA XREF: .debug_loc:00003C5Do
		call	_nm_tcp_write

loc_477:				; DATA XREF: .debug_info:0000214Ao
					; .debug_loc:off_3BF9o
		test	eax, eax
		js	loc_590
		mov	al, [ebx-14h]

loc_482:				; DATA XREF: .debug_loc:00003BFDo
		sub	eax, 2
		cmp	al, 28h	; '('
		ja	loc_5B4
		movzx	eax, al
		mov	eax, ds:_CSWTCH_17[eax*4]

loc_497:				; CODE XREF: _nm_write_fields+1E1j
		mov	[esp+104Ch+var_1040], eax
		mov	[esp+104Ch+var_1044], offset aCmdS ; "&cmd=%s"

loc_4A3:				; DATA XREF: .debug_line:off_48A4o
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_4B3:				; DATA XREF: .debug_info:00002168o
					; .debug_loc:00003C64o
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	ecx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], ecx ; int

loc_4C2:				; DATA XREF: .debug_loc:00003C68o
		call	_nm_tcp_write

loc_4C7:				; DATA XREF: .debug_info:0000218Fo
					; .debug_loc:00003C04o
		test	eax, eax
		js	loc_590
		mov	al, [ebx-12h]

loc_4D2:				; DATA XREF: .debug_loc:00003C08o
		cmp	al, 0Ah
		jz	loc_644
		jbe	loc_5C0
		cmp	al, 0Ch
		jz	loc_5C8
		cmp	al, 0Dh
		jz	loc_644

loc_4F0:				; CODE XREF: _nm_write_fields+1EAj
		mov	eax, [ebx-0Ch]
		mov	[esp+104Ch+var_1040], eax
		mov	[esp+104Ch+var_1044], offset aValU ; "&val=%u"
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_50F:				; DATA XREF: .debug_info:000021ADo
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	ecx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], ecx ; int
		call	_nm_tcp_write

loc_523:				; DATA XREF: .debug_info:000021D4o
		test	eax, eax
		js	short loc_590

loc_527:				; CODE XREF: _nm_write_fields+231j
					; _nm_write_fields:loc_749j
		movzx	eax, byte ptr [ebx-12h]
		mov	[esp+104Ch+var_1040], eax
		mov	[esp+104Ch+var_1044], offset aTypeU ; "&type=%u"
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_547:				; DATA XREF: .debug_info:000021F2o
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	edx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], edx ; int
		call	_nm_tcp_write

loc_55B:				; DATA XREF: .debug_info:00002219o
		test	eax, eax
		js	short loc_590
		mov	eax, [esp+104Ch+var_1030]
		test	eax, eax
		jle	short loc_57C
		mov	al, [ebx-12h]
		cmp	al, 9
		jz	loc_614
		cmp	al, 0Ch
		jz	loc_614
		xchg	ax, ax

loc_57C:				; CODE XREF: _nm_write_fields+5Fj
					; _nm_write_fields+69j	...
		add	ebx, 18h
		jmp	loc_428
; ---------------------------------------------------------------------------

loc_584:				; CODE XREF: _nm_write_fields+35Fj
		mov	eax, [esp+104Ch+var_1034]
		mov	[esp+104Ch+var_104C], eax
		call	_g_free

loc_590:				; CODE XREF: _nm_write_fields+A1j
					; _nm_write_fields+F1j	...
		mov	eax, 2002h

loc_595:				; CODE XREF: _nm_write_fields+55j
					; _nm_write_fields+251j ...
		mov	edx, [esp+104Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_789
		add	esp, 103Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_5B4:				; CODE XREF: _nm_write_fields+AFj
		mov	eax, offset byte_FC4
		jmp	loc_497
; ---------------------------------------------------------------------------
		align 10h

loc_5C0:				; CODE XREF: _nm_write_fields+102j
		cmp	al, 9
		jnz	loc_4F0

loc_5C8:				; CODE XREF: _nm_write_fields+10Aj
		mov	eax, [ebx-8]
		mov	[esp+104Ch+var_104C], eax
		call	_nm_count_fields

loc_5D3:				; DATA XREF: .debug_info:0000224Eo
		mov	[esp+104Ch+var_1030], eax
		mov	[esp+104Ch+var_1040], eax
		mov	[esp+104Ch+var_1044], offset aValU ; "&val=%u"
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_5F3:				; DATA XREF: .debug_info:00002257o
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	edx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], edx ; int
		call	_nm_tcp_write

loc_607:				; DATA XREF: .debug_info:00002287o
		test	eax, eax
		jns	loc_527
		jmp	loc_590
; ---------------------------------------------------------------------------

loc_614:				; CODE XREF: _nm_write_fields+194j
					; _nm_write_fields+19Cj
		mov	eax, [ebx-8]
		mov	[esp+104Ch+var_1048], eax
		mov	ecx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], ecx
		call	_nm_write_fields

loc_627:				; DATA XREF: .debug_info:000022A5o
					; .debug_loc:off_3BB9o
		test	eax, eax
		jnz	loc_595
		add	ebx, 18h

loc_632:				; DATA XREF: .debug_loc:00003BBDo
					; .debug_loc:00003BC4o
		jmp	loc_428
; ---------------------------------------------------------------------------
unk_637		db  90h	; ê		; DATA XREF: .debug_loc:00003BC8o
; ---------------------------------------------------------------------------

loc_638:				; CODE XREF: _nm_write_fields+33j
					; _nm_write_fields+3Bj
		mov	eax, 2001h
		jmp	loc_595
; ---------------------------------------------------------------------------
		align 4

loc_644:				; CODE XREF: _nm_write_fields+FCj
					; _nm_write_fields+112j
		mov	esi, [ebx-8]

loc_647:				; DATA XREF: .debug_loc:off_3D00o
					; .debug_loc:off_3D1Eo	...
		test	esi, esi
		jz	loc_77C

loc_64F:				; DATA XREF: .debug_loc:off_3D49o
		movzx	eax, byte ptr [esi]
		test	al, al
		jz	loc_772
		mov	edx, esi
		xor	ebp, ebp

loc_65E:				; DATA XREF: .debug_loc:00003D22o
					; .debug_loc:00003D4Do	...
		xchg	ax, ax

loc_660:				; CODE XREF: _nm_write_fields+2AEj
		cmp	eax, 20h ; ' '
		jz	short loc_680
		lea	ecx, [eax-30h]
		cmp	ecx, 9
		jbe	short loc_680
		lea	ecx, [eax-41h]
		cmp	ecx, 19h
		jbe	short loc_680
		sub	eax, 61h ; 'a'

loc_678:				; DATA XREF: .debug_loc:00003E2Co
		cmp	eax, 1Ah
		sbb	ebp, 0FFFFFFFFh
		xchg	ax, ax

loc_680:				; CODE XREF: _nm_write_fields+28Bj
					; _nm_write_fields+293j ...
		inc	edx
		movzx	eax, byte ptr [edx]
		test	al, al
		jnz	short loc_660
		sub	edx, esi

loc_68A:				; DATA XREF: .debug_loc:00003D58o
		lea	eax, [edx+ebp*2+1]

loc_68E:				; CODE XREF: _nm_write_fields+39Fj
		mov	[esp+104Ch+var_104C], eax
		call	_g_malloc

loc_696:				; DATA XREF: .debug_info:00002118o
		mov	[esp+104Ch+var_1034], eax

loc_69A:				; DATA XREF: .debug_loc:off_3D88o
					; .debug_loc:00003DE7o
		mov	al, [esi]

loc_69C:				; DATA XREF: .debug_loc:00003D8Co
		mov	edx, [esp+104Ch+var_1034]
		test	al, al
		jnz	short loc_6DD
		jmp	short loc_6F7
; ---------------------------------------------------------------------------
unk_6A6		db  66h	; f		; DATA XREF: .debug_loc:00003D04o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_6A8:				; CODE XREF: _nm_write_fields+313j
		lea	ebp, [ecx-41h]
		cmp	ebp, 19h
		jbe	short loc_6ED
		lea	ebp, [ecx-61h]
		cmp	ebp, 19h
		jbe	short loc_6ED
		mov	byte ptr [edx],	25h ; '%'
		sar	ecx, 4
		mov	cl, ds:_hex_table_21461[ecx]
		mov	[edx+1], cl
		and	eax, 0Fh
		mov	al, ds:_hex_table_21461[eax]
		mov	[edx+2], al
		add	edx, 3

loc_6D6:				; CODE XREF: _nm_write_fields+37Cj
		inc	esi
		mov	al, [esi]
		test	al, al
		jz	short loc_6F7

loc_6DD:				; CODE XREF: _nm_write_fields+2CAj
					; _nm_write_fields+31Dj
		movzx	ecx, al
		cmp	ecx, 20h ; ' '
		jz	short loc_750
		lea	ebp, [ecx-30h]
		cmp	ebp, 9
		ja	short loc_6A8

loc_6ED:				; CODE XREF: _nm_write_fields+2D6j
					; _nm_write_fields+2DEj
		mov	[edx], al
		inc	edx
		inc	esi
		mov	al, [esi]
		test	al, al
		jnz	short loc_6DD

loc_6F7:				; CODE XREF: _nm_write_fields+2CCj
					; _nm_write_fields+303j
		mov	byte ptr [edx],	0

loc_6FA:				; CODE XREF: _nm_write_fields+3ACj
					; DATA XREF: .debug_ranges:00004840o ...
		mov	eax, [esp+104Ch+var_1034]
		mov	[esp+104Ch+var_1040], eax

loc_702:				; DATA XREF: .debug_info:00002F55o
		mov	[esp+104Ch+var_1044], offset aValS ; "&val=%s"
		mov	[esp+104Ch+var_1048], 1000h
		mov	[esp+104Ch+var_104C], edi
		call	_g_snprintf

loc_71A:				; DATA XREF: .debug_info:000022BCo
		cmp	eax, 1000h
		jg	short loc_758
		mov	[esp+104Ch+var_1044], eax ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	ecx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], ecx ; int
		call	_nm_tcp_write

loc_735:				; CODE XREF: _nm_write_fields:loc_770j
					; DATA XREF: .debug_info:000022ECo
		test	eax, eax
		js	loc_584
		mov	eax, [esp+104Ch+var_1034]
		mov	[esp+104Ch+var_104C], eax
		call	_g_free

loc_749:				; DATA XREF: .debug_info:0000230Ao
		jmp	loc_527
; ---------------------------------------------------------------------------
		align 10h

loc_750:				; CODE XREF: _nm_write_fields+30Bj
					; DATA XREF: .debug_ranges:00004844o ...
		mov	byte ptr [edx],	2Bh ; '+'
		inc	edx
		jmp	short loc_6D6
; ---------------------------------------------------------------------------
		align 4

loc_758:				; CODE XREF: _nm_write_fields+347j
					; DATA XREF: .debug_ranges:00004848o ...
		mov	[esp+104Ch+var_1044], 1000h ; unsigned int
		mov	[esp+104Ch+var_1048], edi ; void *
		mov	edx, [esp+104Ch+var_1038]
		mov	[esp+104Ch+var_104C], edx ; int

loc_76B:				; DATA XREF: .debug_info:00002F64o
		call	_nm_tcp_write

loc_770:				; DATA XREF: .debug_info:00002321o
		jmp	short loc_735
; ---------------------------------------------------------------------------

loc_772:				; CODE XREF: _nm_write_fields+27Cj
					; DATA XREF: .debug_ranges:0000484Co ...
		mov	eax, 1
		jmp	loc_68E
; ---------------------------------------------------------------------------

loc_77C:				; CODE XREF: _nm_write_fields+271j
		mov	[esp+104Ch+var_1034], 0
		jmp	loc_6FA
; ---------------------------------------------------------------------------

loc_789:				; CODE XREF: _nm_write_fields+1CAj
					; DATA XREF: .debug_ranges:00004850o ...
		call	___stack_chk_fail
_nm_write_fields endp

; ---------------------------------------------------------------------------
unk_78E		db  66h	; f		; DATA XREF: .debug_info:0000200Fo
					; .debug_info:00002347o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _nm_read_header
_nm_read_header	proc near		; DATA XREF: .debug_info:0000237Ao
					; .debug_loc:off_3E78o

var_24C		= dword	ptr -24Ch
var_248		= dword	ptr -248h
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_228		= byte ptr -228h
var_225		= byte ptr -225h
var_220		= byte ptr -220h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_791:				; DATA XREF: .debug_loc:00003E7Co
		push	edi
		push	esi
		push	ebx
		sub	esp, 23Ch
		mov	ebp, [esp+24Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+24Ch+var_20], eax
		xor	eax, eax

loc_7AF:				; DATA XREF: .debug_loc:off_3F12o
					; .debug_loc:off_3F86o	...
		test	ebp, ebp
		jz	loc_890
		mov	[esp+24Ch+var_220], 0
		lea	ebx, [esp+24Ch+var_220]
		mov	edx, ebx
		mov	eax, ebp
		call	_read_line_constprop_2

loc_7C9:				; DATA XREF: .debug_info:00002401o
		mov	[esp+24Ch+var_234], eax

loc_7CD:				; DATA XREF: .debug_loc:00003F16o
		test	eax, eax
		jnz	loc_870
		mov	[esp+24Ch+var_248], 20h	; ' ' ; int
		mov	[esp+24Ch+var_24C], ebx	; char *

loc_7E0:				; DATA XREF: .debug_loc:00003F22o
		call	_strchr

loc_7E5:				; DATA XREF: .debug_info:0000241Bo
					; .debug_loc:00003F8Ao
		test	eax, eax
		jz	loc_8A2

loc_7ED:				; DATA XREF: .debug_loc:00003F96o
					; .debug_loc:off_3FD6o
		mov	cl, [eax+1]
		movsx	edx, cl
		sub	edx, 30h ; '0'

loc_7F6:				; DATA XREF: .debug_info:00002701o
					; .debug_info:00002F8Co
		cmp	edx, 9
		ja	loc_8BE
		xor	edx, edx

loc_801:				; CODE XREF: _nm_read_header+8Cj
					; DATA XREF: .debug_loc:00003FDAo ...
		mov	[esp+edx+24Ch+var_228],	cl
		inc	edx
		mov	cl, [eax+edx+1]
		movsx	esi, cl
		sub	esi, 30h ; '0'
		cmp	esi, 9
		ja	loc_8B4
		cmp	edx, 3
		jnz	short loc_801
		mov	[esp+24Ch+var_225], 0

loc_823:				; CODE XREF: _nm_read_header+129j
		lea	edx, [esp+24Ch+var_228]
		mov	[esp+24Ch+var_24C], edx	; char *
		call	_atoi

loc_82F:				; DATA XREF: .debug_info:00002437o
		mov	[esp+24Ch+var_230], eax

loc_833:				; DATA XREF: .debug_loc:00004010o
		mov	[esp+24Ch+var_238], offset asc_FEF ; "\r\n"
		jmp	short loc_84D
; ---------------------------------------------------------------------------
		align 10h

loc_840:				; CODE XREF: _nm_read_header+CAj
		mov	edx, ebx
		mov	eax, ebp
		call	_read_line_constprop_2

loc_849:				; DATA XREF: .debug_info:0000244Do
		test	eax, eax
		jnz	short loc_89C

loc_84D:				; CODE XREF: _nm_read_header+ABj
					; _nm_read_header+122j	...
		mov	esi, ebx
		mov	edi, [esp+24Ch+var_238]
		mov	ecx, 3
		repe cmpsb
		jnz	short loc_840
		cmp	[esp+24Ch+var_230], 12Dh
		jnz	short loc_870
		mov	[esp+24Ch+var_234], 2005h
		xchg	ax, ax

loc_870:				; CODE XREF: _nm_read_header+3Fj
					; _nm_read_header+D4j ...
		mov	eax, [esp+24Ch+var_234]
		mov	edx, [esp+24Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_8D8
		add	esp, 23Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_890:				; CODE XREF: _nm_read_header+21j
		mov	[esp+24Ch+var_234], 2001h
		jmp	short loc_870
; ---------------------------------------------------------------------------
		db 66h
unk_89B		db  90h	; ê		; DATA XREF: .debug_info:0000214Eo
					; .debug_info:00002193o ...
; ---------------------------------------------------------------------------

loc_89C:				; CODE XREF: _nm_read_header+BBj
		mov	[esp+24Ch+var_234], eax
		jmp	short loc_870
; ---------------------------------------------------------------------------

loc_8A2:				; CODE XREF: _nm_read_header+57j
		mov	[esp+24Ch+var_230], 0
		mov	[esp+24Ch+var_238], offset asc_FEF ; "\r\n"
		jmp	short loc_84D
; ---------------------------------------------------------------------------

loc_8B4:				; CODE XREF: _nm_read_header+83j
					; DATA XREF: .debug_info:00001C64o
		mov	[esp+edx+24Ch+var_228],	0
		jmp	loc_823
; ---------------------------------------------------------------------------

loc_8BE:				; CODE XREF: _nm_read_header+69j
		mov	[esp+24Ch+var_228], 0
		mov	[esp+24Ch+var_230], 0
		mov	[esp+24Ch+var_238], offset asc_FEF ; "\r\n"
		jmp	loc_84D
; ---------------------------------------------------------------------------

loc_8D8:				; CODE XREF: _nm_read_header+F1j
					; DATA XREF: .debug_info:00001E19o ...
		call	___stack_chk_fail
_nm_read_header	endp

; ---------------------------------------------------------------------------
unk_8DD		db  8Dh	; ç		; DATA XREF: .debug_info:0000237Eo
					; .debug_info:00002467o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_read_fields
_nm_read_fields	proc near		; CODE XREF: _nm_read_fields+257p
					; DATA XREF: .debug_info:000024AAo ...

var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6A		= byte ptr -6Ah
var_69		= byte ptr -69h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= byte ptr -60h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_8E1:				; DATA XREF: .debug_loc:0000407Ao
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	ebx, [esp+9Ch+arg_0]
		mov	esi, [esp+9Ch+arg_4]
		mov	ebp, [esp+9Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+9Ch+var_20], eax
		xor	eax, eax

loc_90A:				; DATA XREF: .debug_loc:off_4151o
		mov	[esp+9Ch+var_64], 0

loc_912:				; DATA XREF: .debug_loc:off_42DDo
		test	ebx, ebx

loc_914:				; DATA XREF: .debug_info:off_1D5Co
		jz	loc_B8C
		test	ebp, ebp
		jz	loc_B8C

loc_922:				; CODE XREF: _nm_read_fields+158j
					; DATA XREF: .debug_loc:00004114o ...
		test	esi, esi
		jle	short loc_927
		dec	esi

loc_927:				; CODE XREF: _nm_read_fields+44j
		mov	[esp+9Ch+var_94], 1
		lea	edx, [esp+9Ch+var_6A]
		mov	[esp+9Ch+var_98], edx
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_all

loc_93F:				; DATA XREF: .debug_info:00002563o
		mov	[esp+9Ch+var_70], eax

loc_943:				; DATA XREF: .debug_loc:00004155o
		test	eax, eax
		jnz	loc_A3E

loc_94B:				; DATA XREF: .debug_info:00001D80o
		cmp	[esp+9Ch+var_6A], 0
		jz	loc_A3E
		mov	[esp+9Ch+var_94], 1
		lea	eax, [esp+9Ch+var_69]
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_all

loc_96E:				; DATA XREF: .debug_info:00002586o
		test	eax, eax
		jnz	loc_B98
		lea	edx, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_98], edx
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_uint32

loc_986:				; DATA XREF: .debug_info:000025A9o
		test	eax, eax
		jnz	loc_B98

loc_98E:				; DATA XREF: .debug_info:00001DD4o
		mov	eax, [esp+9Ch+var_68]
		cmp	eax, 40h ; '@'
		ja	loc_BA0
		mov	[esp+9Ch+var_94], eax
		lea	edi, [esp+9Ch+var_60]
		mov	[esp+9Ch+var_98], edi
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_all

loc_9AF:				; DATA XREF: .debug_info:000025C6o
		test	eax, eax
		jnz	loc_B98
		mov	al, [esp+9Ch+var_6A]
		cmp	al, 0Ch
		jz	loc_B0C
		cmp	al, 9

loc_9C5:				; DATA XREF: .debug_info:00001DFCo
		jz	loc_B0C
		cmp	al, 0Ah
		jz	loc_A74
		cmp	al, 0Dh
		jz	loc_A74
		lea	eax, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_uint32

loc_9EB:				; DATA XREF: .debug_info:000025E2o
		test	eax, eax
		jnz	loc_B98
		movzx	eax, [esp+9Ch+var_6A]

loc_9F8:				; DATA XREF: .debug_loc:00004212o
		mov	[esp+9Ch+var_84], eax
		mov	eax, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_88], eax
		mov	[esp+9Ch+var_8C], 0

loc_A0C:				; DATA XREF: .debug_loc:off_426Bo
		movzx	eax, [esp+9Ch+var_69]

loc_A11:				; DATA XREF: .debug_loc:0000426Fo
		mov	[esp+9Ch+var_90], eax
		mov	[esp+9Ch+var_94], 0
		mov	[esp+9Ch+var_98], edi
		mov	eax, [ebp+0]
		mov	[esp+9Ch+var_9C], eax
		call	_nm_field_add_number

loc_A2C:				; DATA XREF: .debug_info:000025FFo
		mov	[ebp+0], eax

loc_A2F:				; CODE XREF: _nm_read_fields+1BDj
					; _nm_read_fields+226j	...
		cmp	[esp+9Ch+var_6A], 0
		jz	short loc_A3E
		test	esi, esi
		jnz	loc_922

loc_A3E:				; CODE XREF: _nm_read_fields+65j
					; _nm_read_fields+70j ...
		mov	edi, [esp+9Ch+var_70]

loc_A42:				; CODE XREF: _nm_read_fields+2BAj
					; _nm_read_fields+2C5j	...
		mov	eax, [esp+9Ch+var_64]
		test	eax, eax

loc_A48:				; DATA XREF: .debug_info:00001B60o
		jz	short loc_A56
		lea	eax, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_9C], eax
		call	_nm_free_fields

loc_A56:				; CODE XREF: _nm_read_fields:loc_A48j
					; _nm_read_fields+2B1j
					; DATA XREF: ...
		mov	eax, edi
		mov	edx, [esp+9Ch+var_20]

loc_A5C:				; DATA XREF: .debug_info:00001B75o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_BC5
		add	esp, 8Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_A74:				; CODE XREF: _nm_read_fields+EDj
					; _nm_read_fields+F5j
		lea	edx, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_98], edx
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_uint32

loc_A84:				; DATA XREF: .debug_info:00002636o
		test	eax, eax
		jnz	loc_B98
		mov	eax, [esp+9Ch+var_68]
		cmp	eax, 7FFFh
		ja	loc_BA0
		test	eax, eax
		jz	short loc_A2F
		inc	eax
		mov	[esp+9Ch+var_9C], eax
		call	_g_malloc0

loc_AA8:				; DATA XREF: .debug_info:00002653o
		mov	edx, eax
		mov	eax, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_94], eax
		mov	[esp+9Ch+var_98], edx
		mov	[esp+9Ch+var_9C], ebx
		mov	[esp+9Ch+var_74], edx
		call	_nm_read_all

loc_AC2:				; DATA XREF: .debug_info:0000265Co
		test	eax, eax
		mov	edx, [esp+9Ch+var_74]
		jnz	loc_BAA
		movzx	eax, [esp+9Ch+var_6A]
		mov	[esp+9Ch+var_84], eax
		mov	[esp+9Ch+var_88], edx
		mov	[esp+9Ch+var_8C], 0

loc_AE3:				; DATA XREF: .debug_info:off_1BC4o
		movzx	eax, [esp+9Ch+var_69]
		mov	[esp+9Ch+var_90], eax
		mov	[esp+9Ch+var_94], 0
		mov	[esp+9Ch+var_98], edi
		mov	eax, [ebp+0]
		mov	[esp+9Ch+var_9C], eax
		call	_nm_field_add_pointer

loc_B03:				; DATA XREF: .debug_info:00002671o
		mov	[ebp+0], eax
		jmp	loc_A2F
; ---------------------------------------------------------------------------
		align 4

loc_B0C:				; CODE XREF: _nm_read_fields+DDj
					; _nm_read_fields:loc_9C5j
		lea	eax, [esp+9Ch+var_68]
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_uint32

loc_B1C:				; DATA XREF: .debug_info:00002692o
		test	eax, eax
		jnz	short loc_B98
		mov	eax, [esp+9Ch+var_68]
		test	eax, eax
		jz	short loc_B40
		lea	edx, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_94], edx
		mov	[esp+9Ch+var_98], eax
		mov	[esp+9Ch+var_9C], ebx
		call	_nm_read_fields

loc_B3C:				; DATA XREF: .debug_info:000026AFo
		test	eax, eax
		jnz	short loc_B98

loc_B40:				; CODE XREF: _nm_read_fields+246j
		movzx	eax, [esp+9Ch+var_6A]
		mov	[esp+9Ch+var_84], eax
		mov	eax, [esp+9Ch+var_64]
		mov	[esp+9Ch+var_88], eax
		mov	[esp+9Ch+var_8C], 0

loc_B59:				; DATA XREF: .debug_info:off_1C22o
					; .debug_info:00001D8Do
		movzx	eax, [esp+9Ch+var_69]
		mov	[esp+9Ch+var_90], eax
		mov	[esp+9Ch+var_94], 0
		mov	[esp+9Ch+var_98], edi
		mov	eax, [ebp+0]
		mov	[esp+9Ch+var_9C], eax
		call	_nm_field_add_pointer

loc_B79:				; DATA XREF: .debug_info:000026CCo
		mov	[ebp+0], eax
		mov	[esp+9Ch+var_64], 0
		jmp	loc_A2F
; ---------------------------------------------------------------------------
unk_B89		db  8Dh	; ç		; DATA XREF: .debug_loc:000042BFo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_B8C:				; CODE XREF: _nm_read_fields:loc_914j
					; _nm_read_fields+3Cj
		mov	edi, 2001h
		jmp	loc_A56
; ---------------------------------------------------------------------------
		align 4

loc_B98:				; CODE XREF: _nm_read_fields+90j
					; _nm_read_fields+A8j ...
		mov	edi, eax
		jmp	loc_A42
; ---------------------------------------------------------------------------
		align 10h

loc_BA0:				; CODE XREF: _nm_read_fields+B5j
					; _nm_read_fields+1B5j
		mov	edi, 2004h
		jmp	loc_A42
; ---------------------------------------------------------------------------

loc_BAA:				; CODE XREF: _nm_read_fields+1E8j
		test	edx, edx
		jz	short loc_B98
		mov	[esp+9Ch+var_9C], edx
		mov	[esp+9Ch+var_74], eax
		call	_g_free

loc_BBA:				; DATA XREF: .debug_info:000026EDo
		mov	eax, [esp+9Ch+var_74]
		mov	edi, eax

loc_BC0:				; DATA XREF: .debug_info:00001CA2o
		jmp	loc_A42
; ---------------------------------------------------------------------------

loc_BC5:				; CODE XREF: _nm_read_fields+182j
		call	___stack_chk_fail
_nm_read_fields	endp

; ---------------------------------------------------------------------------
unk_BCA		db  66h	; f		; DATA XREF: .debug_info:000024AEo
					; .debug_info:000026F6o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _nm_conn_add_request_item
_nm_conn_add_request_item proc near	; CODE XREF: _nm_send_request:loc_DF3p
					; DATA XREF: .debug_info:00002734o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_BCD:				; DATA XREF: .debug_loc:0000433Ao
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_C06
		test	esi, esi
		jz	short loc_C06
		mov	[esp+2Ch+var_2C], esi
		call	_nm_request_add_ref

loc_BF4:				; DATA XREF: .debug_info:00002764o
		mov	[esp+2Ch+var_28], esi
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	_g_slist_append

loc_C03:				; DATA XREF: .debug_info:00002779o
		mov	[ebx+10h], eax

loc_C06:				; CODE XREF: _nm_conn_add_request_item+1Aj
					; _nm_conn_add_request_item+1Ej
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_C18
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_C18:				; CODE XREF: _nm_conn_add_request_item+44j
		call	___stack_chk_fail
_nm_conn_add_request_item endp

; ---------------------------------------------------------------------------
unk_C1D		db  8Dh	; ç		; DATA XREF: .debug_info:00002738o
					; .debug_info:0000278Eo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_send_request
_nm_send_request proc near		; DATA XREF: .debug_info:000027B7o
					; .debug_loc:off_439Eo	...

var_25C		= dword	ptr -25Ch
var_258		= dword	ptr -258h
var_254		= dword	ptr -254h
var_250		= dword	ptr -250h
var_24C		= dword	ptr -24Ch
var_248		= dword	ptr -248h
var_244		= dword	ptr -244h
var_23C		= dword	ptr -23Ch
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_224		= dword	ptr -224h
var_220		= byte ptr -220h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h

		push	ebp

loc_C21:				; DATA XREF: .debug_loc:000043A2o
		push	edi
		push	esi
		push	ebx
		sub	esp, 24Ch
		mov	ebx, [esp+25Ch+arg_0]
		mov	ebp, [esp+25Ch+arg_4]
		mov	edx, [esp+25Ch+arg_8]
		mov	eax, [esp+25Ch+arg_C]
		mov	[esp+25Ch+var_234], eax
		mov	eax, [esp+25Ch+arg_10]
		mov	[esp+25Ch+var_230], eax
		mov	eax, [esp+25Ch+arg_14]
		mov	[esp+25Ch+var_238], eax
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+25Ch+var_20], eax
		xor	eax, eax

loc_C6E:				; DATA XREF: .debug_loc:off_4458o
		mov	[esp+25Ch+var_224], 0

loc_C76:				; DATA XREF: .debug_loc:off_4542o
					; .debug_loc:off_456Fo
		test	ebx, ebx
		jz	loc_E1C
		test	ebp, ebp
		jz	loc_E1C
		mov	[esp+25Ch+var_250], ebp

loc_C8A:				; DATA XREF: .debug_info:00001D91o
		mov	[esp+25Ch+var_254], offset aPostSHttp1_0 ; "POST /%s HTTP/1.0\r\n"
		mov	[esp+25Ch+var_258], 200h
		lea	eax, [esp+25Ch+var_220]
		mov	[esp+25Ch+var_25C], eax
		mov	[esp+25Ch+var_23C], edx
		call	_g_snprintf

loc_CAA:				; DATA XREF: .debug_info:0000291Eo
					; .debug_loc:off_44C0o
		mov	[esp+25Ch+var_254], eax	; unsigned int

loc_CAE:				; DATA XREF: .debug_info:00002405o
					; .debug_info:00002451o
		lea	eax, [esp+25Ch+var_220]

loc_CB2:				; DATA XREF: .debug_loc:000044C4o
		mov	[esp+25Ch+var_258], eax	; void *
		mov	[esp+25Ch+var_25C], ebx	; int
		call	_nm_tcp_write

loc_CBE:				; DATA XREF: .debug_info:0000294Do
					; .debug_loc:off_4503o
		test	eax, eax
		mov	edx, [esp+25Ch+var_23C]
		js	loc_E74
		mov	esi, offset aLogin ; "login"
		mov	ecx, 6
		mov	edi, ebp
		repe cmpsb

loc_CD8:				; DATA XREF: .debug_loc:0000443Co
		jz	loc_E40
		mov	[esp+25Ch+var_254], offset asc_FEF ; "\r\n"
		mov	[esp+25Ch+var_258], 200h
		lea	eax, [esp+25Ch+var_220]

loc_CF2:				; DATA XREF: .debug_loc:00004507o
		mov	[esp+25Ch+var_25C], eax
		mov	[esp+25Ch+var_23C], edx
		call	_g_snprintf

loc_CFE:				; CODE XREF: _nm_send_request:loc_E6Dj
					; DATA XREF: .debug_info:0000296Ao
		mov	[esp+25Ch+var_254], eax	; unsigned int
		lea	eax, [esp+25Ch+var_220]
		mov	[esp+25Ch+var_258], eax	; void *
		mov	[esp+25Ch+var_25C], ebx	; int
		call	_nm_tcp_write

loc_D12:				; DATA XREF: .debug_info:00001E1Do
					; .debug_info:00002992o
		test	eax, eax
		mov	edx, [esp+25Ch+var_23C]

loc_D18:				; DATA XREF: .debug_info:000025ADo
					; .debug_info:000025E6o ...
		js	loc_E74
		test	edx, edx
		jz	short loc_D2E
		mov	[esp+25Ch+var_25C], edx
		call	_nm_copy_field_array

loc_D2A:				; DATA XREF: .debug_info:000029AFo
					; .debug_loc:00004546o
		mov	[esp+25Ch+var_224], eax

loc_D2E:				; CODE XREF: _nm_send_request+100j
		mov	eax, [ebx+0Ch]
		inc	eax
		mov	[ebx+0Ch], eax
		mov	[esp+25Ch+var_258], eax
		mov	[esp+25Ch+var_25C], offset aD ;	"%d"
		call	_g_strdup_printf

loc_D45:				; DATA XREF: .debug_info:000029B8o
					; .debug_loc:00004573o
		mov	[esp+25Ch+var_244], 0Ah
		mov	[esp+25Ch+var_248], eax
		mov	[esp+25Ch+var_24C], 0
		mov	[esp+25Ch+var_250], 0
		mov	[esp+25Ch+var_254], 0
		mov	[esp+25Ch+var_258], offset aNm_a_sz_transa ; "NM_A_SZ_TRANSACTION_ID"
		mov	eax, [esp+25Ch+var_224]
		mov	[esp+25Ch+var_25C], eax
		call	_nm_field_add_pointer

loc_D7D:				; DATA XREF: .debug_info:000029D0o
		mov	[esp+25Ch+var_224], eax
		mov	[esp+25Ch+var_258], eax
		mov	[esp+25Ch+var_25C], ebx
		call	_nm_write_fields

loc_D8D:				; DATA XREF: .debug_info:00002A00o
		mov	esi, eax

loc_D8F:				; DATA XREF: .debug_loc:0000445Co
		test	eax, eax
		jnz	short loc_E06

loc_D93:				; DATA XREF: .debug_info:00001EA0o
		mov	[esp+25Ch+var_254], 2 ;	unsigned int
		mov	[esp+25Ch+var_258], offset asc_FEF ; "\r\n"
		mov	[esp+25Ch+var_25C], ebx	; int
		call	_nm_tcp_write

loc_DAB:				; DATA XREF: .debug_info:00002A15o
		test	eax, eax
		js	loc_E74

loc_DB3:				; DATA XREF: .debug_ranges:off_488Co
		mov	[esp+25Ch+var_25C], 0 ;	time_t *
		call	_time

loc_DBF:				; DATA XREF: .debug_info:000028AFo
		mov	edx, [esp+25Ch+var_230]
		mov	[esp+25Ch+var_248], edx
		mov	[esp+25Ch+var_24C], 0
		mov	edx, [esp+25Ch+var_234]
		mov	[esp+25Ch+var_250], edx
		mov	[esp+25Ch+var_254], eax
		mov	eax, [ebx+0Ch]
		mov	[esp+25Ch+var_258], eax
		mov	[esp+25Ch+var_25C], ebp
		call	_nm_create_request

loc_DEA:				; DATA XREF: .debug_info:000028C3o
		mov	edi, eax

loc_DEC:				; DATA XREF: .debug_loc:off_45B3o
		mov	[esp+25Ch+var_258], eax
		mov	[esp+25Ch+var_25C], ebx

loc_DF3:				; DATA XREF: .debug_loc:000045B7o
		call	_nm_conn_add_request_item

loc_DF8:				; DATA XREF: .debug_info:000028F0o
		mov	eax, [esp+25Ch+var_238]
		test	eax, eax
		jz	short loc_E7B
		mov	edx, [esp+25Ch+var_238]
		mov	[edx], edi

loc_E06:				; CODE XREF: _nm_send_request+171j
					; _nm_send_request+259j ...
		mov	eax, [esp+25Ch+var_224]
		test	eax, eax
		jz	short loc_E21
		lea	eax, [esp+25Ch+var_224]
		mov	[esp+25Ch+var_25C], eax
		call	_nm_free_fields

loc_E1A:				; DATA XREF: .debug_info:00002A3Ao
		jmp	short loc_E21
; ---------------------------------------------------------------------------

loc_E1C:				; CODE XREF: _nm_send_request+58j
					; _nm_send_request+60j
		mov	esi, 2001h

loc_E21:				; CODE XREF: _nm_send_request+1ECj
					; _nm_send_request:loc_E1Aj
					; DATA XREF: ...
		mov	eax, esi
		mov	edx, [esp+25Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_E85
		add	esp, 24Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_E40:				; CODE XREF: _nm_send_request:loc_CD8j
		mov	eax, [ebx+4]
		mov	[esp+25Ch+var_24C], eax
		mov	eax, [ebx]
		mov	[esp+25Ch+var_250], eax
		mov	[esp+25Ch+var_254], offset aHostSD ; "Host: %s:%d\r\n\r\n"

loc_E55:				; DATA XREF: .debug_info:000020E0o
		mov	[esp+25Ch+var_258], 200h
		lea	eax, [esp+25Ch+var_220]
		mov	[esp+25Ch+var_25C], eax
		mov	[esp+25Ch+var_23C], edx
		call	_g_snprintf

loc_E6D:				; DATA XREF: .debug_info:00002A50o
		jmp	loc_CFE
; ---------------------------------------------------------------------------
		align 4

loc_E74:				; CODE XREF: _nm_send_request+A4j
					; _nm_send_request:loc_D18j ...
		mov	esi, 2002h
		jmp	short loc_E06
; ---------------------------------------------------------------------------

loc_E7B:				; CODE XREF: _nm_send_request+1DEj
					; DATA XREF: .debug_ranges:00004894o
		mov	[esp+25Ch+var_25C], edi
		call	_nm_release_request

loc_E83:				; DATA XREF: .debug_info:0000290Co
		jmp	short loc_E06
; ---------------------------------------------------------------------------

loc_E85:				; CODE XREF: _nm_send_request+210j
					; DATA XREF: .debug_ranges:00004898o
		call	___stack_chk_fail
_nm_send_request endp

; ---------------------------------------------------------------------------
byte_E8A	db 66h			; DATA XREF: .debug_info:000027BBo
					; .debug_info:00002A78o
		db  90h	; ê		; DATA XREF: .debug_info:00002104o

; =============== S U B	R O U T	I N E =======================================


		public _nm_conn_remove_request_item
_nm_conn_remove_request_item proc near	; DATA XREF: .debug_info:00002AA9o
					; .debug_loc:off_45DCo

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_E8D:				; DATA XREF: .debug_loc:000045E0o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_ED8
		test	esi, esi
		jz	short loc_ED8
		mov	[esp+2Ch+var_28], esi
		mov	eax, [ebx+10h]
		mov	[esp+2Ch+var_2C], eax
		call	_g_slist_remove

loc_EBB:				; DATA XREF: .debug_info:00002AD9o
		mov	[ebx+10h], eax
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_EEA

loc_ECA:				; DATA XREF: .debug_info:000022A9o
					; .debug_info:00002A04o
		mov	[esp+2Ch+arg_0], esi
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_nm_release_request
; ---------------------------------------------------------------------------

loc_ED8:				; CODE XREF: _nm_conn_remove_request_item+1Aj
					; _nm_conn_remove_request_item+1Ej
					; DATA XREF: ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_EEA
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_EEA:				; CODE XREF: _nm_conn_remove_request_item+3Cj
					; _nm_conn_remove_request_item+56j
		call	___stack_chk_fail
_nm_conn_remove_request_item endp

; ---------------------------------------------------------------------------
unk_EEF		db  90h	; ê		; DATA XREF: .debug_info:00002AADo
					; .debug_info:00002AF8o

; =============== S U B	R O U T	I N E =======================================


		public _nm_conn_find_request
_nm_conn_find_request proc near		; DATA XREF: .debug_info:00002B20o
					; .debug_loc:off_4674o

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi

loc_EF1:				; DATA XREF: .debug_loc:00004678o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	eax, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_F0A:				; DATA XREF: .debug_loc:off_46F4o
					; .debug_loc:off_4713o
		test	eax, eax
		jz	short loc_F31
		mov	ebx, [eax+10h]

loc_F11:				; DATA XREF: .debug_loc:00004717o
		test	ebx, ebx
		jz	short loc_F31

loc_F15:				; DATA XREF: .debug_loc:000046F8o
		lea	esi, [esi+0]

loc_F18:				; CODE XREF: _nm_conn_find_request+3Fj
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_F2A
		mov	[esp+2Ch+var_2C], esi
		call	_nm_request_get_trans_id

loc_F26:				; DATA XREF: .debug_info:00002B70o
		cmp	eax, edi
		jz	short loc_F33

loc_F2A:				; CODE XREF: _nm_conn_find_request+2Cj
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_F18

loc_F31:				; CODE XREF: _nm_conn_find_request+1Cj
					; _nm_conn_find_request+23j
		xor	esi, esi

loc_F33:				; CODE XREF: _nm_conn_find_request+38j
		mov	eax, esi
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_F48
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_F48:				; CODE XREF: _nm_conn_find_request+4Fj
		call	___stack_chk_fail
_nm_conn_find_request endp

; ---------------------------------------------------------------------------
unk_F4D		db  8Dh	; ç		; DATA XREF: .debug_info:00002B24o
					; .debug_info:00002B85o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_conn_get_addr
_nm_conn_get_addr proc near		; DATA XREF: .debug_info:00002BA9o
					; .debug_loc:off_4732o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_F53:				; DATA XREF: .debug_loc:00004736o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_F79
		mov	eax, [eax]

loc_F69:				; CODE XREF: _nm_conn_get_addr+2Bj
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_F7D
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_F79:				; CODE XREF: _nm_conn_get_addr+15j
		xor	eax, eax
		jmp	short loc_F69
; ---------------------------------------------------------------------------

loc_F7D:				; CODE XREF: _nm_conn_get_addr+23j
		call	___stack_chk_fail
_nm_conn_get_addr endp

; ---------------------------------------------------------------------------
unk_F82		db  66h	; f		; DATA XREF: .debug_info:00002BADo
					; .debug_info:00002BCAo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _nm_conn_get_port
_nm_conn_get_port proc near		; DATA XREF: .debug_info:00002BEEo
					; .debug_loc:off_476Ao

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_F87:				; DATA XREF: .debug_loc:0000476Eo
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_FAE
		mov	eax, [eax+4]

loc_F9E:				; CODE XREF: _nm_conn_get_port+2Fj
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_FB5
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_FAE:				; CODE XREF: _nm_conn_get_port+15j
		mov	eax, 0FFFFFFFFh
		jmp	short loc_F9E
; ---------------------------------------------------------------------------

loc_FB5:				; CODE XREF: _nm_conn_get_port+24j
		call	___stack_chk_fail
_nm_conn_get_port endp

; ---------------------------------------------------------------------------
unk_FBA		db  90h	; ê		; DATA XREF: .debug_info:off_1194o
					; .debug_info:00002BF2o ...
unk_FBB		db  90h	; ê		; DATA XREF: .eh_frame:00004DB8o
					; .eh_frame:00004DF0o ...
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 0FC4h
byte_FC4	db 30h,	0		; DATA XREF: _nm_write_fields:loc_5B4o
					; .rdata:00001078o ...
aTagS		db '&tag=%s',0          ; DATA XREF: _nm_write_fields+73o
					; .debug_info:00002144o
aCmdS		db '&cmd=%s',0          ; DATA XREF: _nm_write_fields+C3o
					; .debug_info:00002189o
aValS		db '&val=%s',0          ; DATA XREF: _nm_write_fields:loc_702o
					; .debug_info:000022DDo
aValU		db '&val=%u',0          ; DATA XREF: _nm_write_fields+11Fo
					; _nm_write_fields+203o ...
aTypeU		db '&type=%u',0         ; DATA XREF: _nm_write_fields+157o
					; .debug_info:00002213o
asc_FEF		db 0Dh,0Ah,0		; DATA XREF: _nm_read_header:loc_833o
					; _nm_read_header+11Ao	...
aPostSHttp1_0	db 'POST /%s HTTP/1.0',0Dh,0Ah,0 ; DATA XREF: _nm_send_request:loc_C8Ao
					; .debug_info:00002940o
aHostSD		db 'Host: %s:%d',0Dh,0Ah ; DATA XREF: _nm_send_request+22Do
					; .debug_info:00002A72o
		db 0Dh,0Ah,0
aD		db '%d',0               ; DATA XREF: _nm_send_request+119o
					; .debug_info:000029CAo
aNm_a_sz_transa	db 'NM_A_SZ_TRANSACTION_ID',0 ; DATA XREF: _nm_send_request+149o
					; .debug_info:000029E2o ...
aLogin		db 'login',0            ; DATA XREF: _nm_send_request+AAo
a2		db '2',0                ; DATA XREF: .rdata:_CSWTCH_17o
a3g1fedcba98765:			; DATA XREF: .rdata:off_1068o
					; .rdata:0000106Co ...
		unicode	0, <3G1FEDCBA987654>,0
		dd 3 dup(0)
_CSWTCH_17	dd offset a2		; DATA XREF: _nm_write_fields+B8r
					; "2"
off_1068	dd offset a3g1fedcba98765 ; DATA XREF: .debug_info:00002170o
					; "3G1FEDCBA987654"
		dd offset a3g1fedcba98765+2 ; "G1FEDCBA987654"
		dd offset a3g1fedcba98765+4 ; "1FEDCBA987654"
		dd offset a3g1fedcba98765+6 ; "FEDCBA987654"
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset a3g1fedcba98765+8 ; "EDCBA987654"
off_1088	dd offset byte_FC4	; DATA XREF: .debug_info:00002197o
		dd offset a3g1fedcba98765+0Ah ;	"DCBA987654"
		dd offset byte_FC4
		dd offset a3g1fedcba98765+0Ch ;	"CBA987654"
		dd offset a3g1fedcba98765+0Eh ;	"BA987654"
		dd offset a3g1fedcba98765+10h ;	"A987654"
		dd offset a3g1fedcba98765+12h ;	"987654"
		dd offset byte_FC4
		dd offset a3g1fedcba98765+14h ;	"87654"
off_10AC	dd offset a3g1fedcba98765+16h ;	DATA XREF: .debug_info:000021B5o
					; "7654"
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
off_10CC	dd offset byte_FC4	; DATA XREF: .debug_info:000021DCo
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
		dd offset byte_FC4
off_10F4	dd offset byte_FC4	; DATA XREF: .debug_info:000021FAo
		dd offset byte_FC4
		dd offset a3g1fedcba98765+18h ;	"654"
		dd offset a3g1fedcba98765+1Ah ;	"54"
		dd offset a3g1fedcba98765+1Ch ;	"4"
_hex_table_21461 db 30h			; DATA XREF: _nm_write_fields+2E6r
					; _nm_write_fields+2F2r ...
a123456789abcde	db '123456789abcdef',0  ; DATA XREF: .debug_info:00002221o
		align 4
		dd 2 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 1124h
off_1124	dd offset off_1EE8+1	; DATA XREF: .debug_aranges:000047AAo
byte_1128	db 2, 0			; DATA XREF: .debug_info:0000223Fo
		dd offset dword_3014
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		db    1
aNmconn_c	db 'nmconn.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple\\protocols'
		db '\\novell',0
		dd offset _nm_create_conn
off_1194	dd offset unk_FBA	; DATA XREF: .debug_info:000022ADo
		dd offset off_48A4
		db    2
		db 4, 5, 69h
		db  6Eh	; n
		db 74h,	0, 2
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 2
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 1, 6
aSignedChar	db 'signed char',0
dword_11D8	dd 69756703h, 38746Eh, 0C22002h, 1020000h, 736E7508h, 656E6769h
					; DATA XREF: .debug_info:000022F4o
		dd 68632064h, 2007261h,	68730502h, 2074726Fh, 746E69h
		dd 69756703h, 3631746Eh, 8F220200h, 3000000h, 6E697567h
		dd 323374h, 7F2702h, 8020000h, 6E6F6C05h, 6F6C2067h, 6920676Eh
		dd 200746Eh
aLongLongUnsign	db 8,7,'long long unsigned int',0
		db 3, 67h, 73h
		db  69h	; i
		db 7Ah,	65h, 0
		db    2
		db 5Ah,	7Fh, 0
		db    0
		align 2
		dw 402h
aSizetype	db 7,'sizetype',0
		dw 102h
		db    6
aChar		db 'char',0
		dw 802h
		db    4
aDouble		db 'double',0
		db    4
		db 4, 2, 4
		db    5
aLongInt	db 'long int',0
		dw 6703h
aChar_0		db 'char',0
		db 3, 2Dh, 42h
		db    1
		db 2 dup(0), 3
aGint		db 'gint',0
		db 3, 30h, 78h
		db    0
		db 2 dup(0), 3
aGboolean	db 'gboolean',0
		db 3, 31h, 6Fh
		db    1
		db 2 dup(0), 3
aGuchar		db 'guchar',0
		db 3
		db  33h	; 3
		dd offset loc_C1+1
		db 3, 67h, 75h
aLong		db 'long',0
		db 3, 35h, 0A7h
		db    1
		db 2 dup(0), 2
		db    4
aLongUnsignedIn	db 7,'long unsigned int',0
dword_12E0	dd 66040402h, 74616F6Ch, 70670300h, 746E696Fh, 3007265h
		dd 1544Ch, 63670300h, 74736E6Fh, 6E696F70h, 726574h, 1EA4D03h
		dd 4050000h, 1F0h, 0F7040506h, 7000001h, 162h, 1620405h
		dd 5F030000h, 6D69745Fh, 5F323365h, 28040074h, 156h, 6D697403h
		dd 745F65h, 2023D04h, 47030000h, 68736148h, 6C626154h
		dd 27050065h, 234h, 48475F08h, 54687361h, 656C6261h, 47030100h
		dd 73694C53h, 26060074h, 250h, 53475F09h, 7473694Ch, 28060800h
		dd 27Fh, 7461640Ah, 2A060061h, 1C5h, 0A002302h,	7478656Eh
		dd 7F2B0600h, 2000002h,	5000423h, 24204h, 22040500h, 2000002h
		dd 6F6C040Ch, 6420676Eh, 6C62756Fh, 4E030065h, 6E6F434Dh
		dd 1807006Eh, 2A8h, 4D4E5F09h, 6E6E6F43h, 21072400h, 351h
		dd 6464610Ah, 25070072h, 433h, 0A002302h, 74726F70h, 78280700h
		dd 2000000h, 660A0423h,	2B070064h, 78h,	0B082302h
		dd offset aTrans_id	; "trans_id"
dword_140C	dd 782E07h, 23020000h, 65720A0Ch, 73657571h, 7007374h
		dd 27F31h, 10230200h, 6E6F630Ah, 7463656Eh, 7006465h, 17B34h
		dd 14230200h, 6573750Ah, 6C73735Fh, 7B370700h, 2000001h
		dd 720A1823h, 72696465h, 746365h, 17B3A07h, 23020000h
		dd 73730A1Ch, 6F635F6Ch, 7006E6Eh, 87C3Dh, 20230200h, 4D4E0300h
		dd 434C5353h, 6E6E6Fh, 3621907h, 5F090000h, 53534D4Eh
		dd 6E6F434Ch, 70C006Eh,	3A441h,	61640A00h, 7006174h, 1C545h
		dd 230200h, 6165720Ah, 48070064h, 80Fh,	0A042302h, 74697277h
		dd 49070065h, 845h, 82302h, 464D4E09h, 646C6569h, 1800745Fh
		dd 4331A08h, 740A0000h,	8006761h, 4331Ch, 230200h
		db 0Bh
		dd offset aMethod	; "method"
		db 8, 1Dh, 0B4h
dword_14F0	dd 2000000h, 660A0423h,	7367616Ch, 0B41E0800h, 2000000h
					; DATA XREF: .debug_info:00002607o
		dd 740A0523h, 657079h, 0B41F08h, 23020000h, 69730A06h
		dd 800657Ah, 0EF20h, 8230200h, 6C61760Ah, 8006575h, 0EF21h
		dd 0C230200h, 7274700Ah, 6C61765Fh, 8006575h, 1C522h, 10230200h
		dd 6E656C0Ah, 0EF230800h, 2000000h, 5001423h, 14204h, 4D4E0300h
		dd 6C656946h, 24080064h, 3A4h, 6F695F09h, 667562h, 0DF810920h
		dd 0A000004h, 7274705Fh, 33830900h, 2000004h, 5F0A0023h
		dd 746E63h, 788409h, 23020000h,	625F0A04h, 657361h, 4338509h
		dd 23020000h, 665F0A08h, 67616Ch, 788609h, 23020000h, 665F0A0Ch
		dd 656C69h, 788709h, 23020000h,	635F0A10h, 62726168h, 9006675h
		dd 7888h, 14230200h, 75625F0Ah,	7A697366h, 78890900h, 2000000h
		dd 5F0A1823h, 66706D74h, 656D616Eh, 338A0900h, 2000004h
		dd 3001C23h, 454C4946h,	488B0900h, 3000004h, 52454D4Eh
		dd 545F52h, 0EF1C0Ah, 4E030000h, 4154534Dh, 5F535554h
		dd 1D0A0054h, 78h, 554D4E03h, 726573h, 51A1F0Ah, 5F090000h
		dd 73554D4Eh, 58007265h, 707440Ah, 6E0A0000h, 656D61h
		dd 433470Ah, 23020000h,	74730A00h, 73757461h, 0FA490A00h
		dd 2000004h
		db 23h,	4, 0Bh
		dd offset aFields	; "fields"
byte_1673	db 0Ah			; DATA XREF: .debug_info:0000275Co
					; .debug_info:00002EE8o
		dd 7F74Ch, 8230200h, 6573750Ah,	65725F72h, 64726F63h, 0FD4F0A00h
		dd 2000007h
		db 23h,	0Ch, 0Bh
		dd offset aConn		; "conn"
		db 0Ah
dword_1698	dd 80352h, 10230200h, 6464610Ah, 73736572h, 33550A00h
		dd 2000004h, 720A1423h,	5F746F6Fh, 646C6F66h, 0A007265h
		dd 80958h, 18230200h, 6E6F630Ah, 74636174h, 5B0A0073h
		dd 285h, 0A1C2302h, 72657375h, 6365725Fh, 7364726Fh, 855E0A00h
		dd 2000002h, 640A2023h,	6C707369h, 695F7961h, 6F745F64h
		dd 6E645Fh, 285610Ah, 23020000h, 6F630A24h, 7265666Eh
		dd 65636E65h, 640A0073h, 27Fh, 0A282302h, 666E6F63h, 6E657265h
		dd 635F6563h, 746E756Fh, 0EF660A00h, 2000000h, 650A2C23h
		dd 635F7476h, 626C6C61h, 6B6361h, 7A9690Ah, 23020000h
		dd 72700A30h, 63617669h, 6F6C5F79h, 64656B63h, 7B6C0A00h
		dd 2000001h, 640A3423h,	75616665h, 645F746Ch, 796E65h
		dd 17B6D0Ah, 23020000h,	6C610A38h, 5F776F6Ch, 7473696Ch
		dd 7F6E0A00h, 2000002h,	640A3C23h, 5F796E65h, 7473696Ch
		dd 7F6F0A00h, 2000002h,	700A4023h, 69646E65h, 725F676Eh
		dd 65757165h, 737473h, 27F750Ah, 23020000h, 65700A44h
		dd 6E69646Eh, 76655F67h, 73746E65h, 7F780A00h, 2000002h
		dd 630A4823h, 6E65696Ch, 61645F74h, 0A006174h, 1C57Dh
		dd 4C230200h, 6972700Ah, 79636176h, 6E79735Fh, 64656863h
		dd 7B800A00h, 2000001h,	630A5023h, 7473696Ch, 6E79735Fh
		dd 64656863h, 7B830A00h, 2000001h, 5005423h, 70D04h, 1420700h
		dd 4E030000h, 6573554Dh, 63655272h, 64726Fh, 7261A0Bh
		dd 5F080000h, 73554D4Eh, 65527265h, 64726F63h, 4E030100h
		dd 6C6F464Dh, 726564h, 7461C0Ch, 5F080000h, 6F464D4Eh
		dd 7265646Ch, 4E030100h, 6576454Dh, 0D00746Eh, 76118h
		dd 4E5F0800h, 6576454Dh, 100746Eh, 5F6D6E03h, 70736572h
		dd 65736E6Fh, 62635Fh, 7823B0Ah, 4050000h, 788h, 7A3010Ch
		dd 0A30D0000h, 0D000007h, 4EBh,	1C50Dh,	1C50D00h, 5000000h
		dd 50C04h, 6D6E0300h, 6576655Fh, 635F746Eh, 3E0A0062h
		dd 7BCh, 7C20405h, 10C0000h, 7D3h, 7A30Dh, 7D30D00h, 5000000h
		dd 75204h, 4D4E0300h, 75716552h, 747365h, 7EA180Eh, 5F080000h
		dd 65524D4Eh, 73657571h, 5010074h, 43904h, 12040500h, 5000007h
		dd 29A04h, 36040500h, 3000007h,	735F6D6Eh, 725F6C73h, 5F646165h
		dd 7006263h, 8251Eh, 2B040500h,	0E000008h, 7801h, 84500h
		dd 1C50D00h, 540D0000h,	0D000001h, 78h,	6D6E0300h, 6C73735Fh
		dd 6972775Fh, 635F6574h, 1F070062h, 85Ch, 8620405h, 10E0000h
		dd 78h,	87Ch, 1C50Dh, 1EA0D00h,	780D0000h, 0
dword_19A0	dd 3510405h, 44030000h,	44524F57h, 0A7E50F00h, 5000001h
		dd 7804h, 8F040500h, 0F000000h,	5F6D6E01h, 5F706374h, 74697277h
		dd 0C9010065h, 7801h, 8D90100h
		db 2 dup(0), 10h
		dd offset aConn		; "conn"
		db 1
		dd 803C9h, 75621100h, 1006666h,	1EAC9h,	656C1100h, 0C901006Eh
		dd 78h,	6E010F00h, 65725F6Dh, 615F6461h, 1006C6Ch, 4EB01E5h
		dd 5C010000h, 10000009h
		dd offset aConn		; "conn"
dword_1A1C	dd 803E501h, 62110000h,	666675h, 433E501h, 6C110000h, 1006E65h
		dd 78E5h, 63721200h, 0EBE70100h, 12000004h, 65747962h
		dd 656C5F73h, 1007466h,	78E8h, 79621200h, 5F736574h, 64616572h
		dd 78E90100h, 13000000h
		dd offset aTotal_bytes	; "total_bytes"
		dd 78EA01h, 72120000h, 79727465h, 78EB0100h, 0
		dd 636E6514h, 5F65646Fh, 6874656Dh, 100646Fh, 433016Eh
		dd 8E010000h, 10000009h
		dd offset aMethod	; "method"
		dd 0B46E01h, 73120000h,	1007274h, 43370h, 72140000h, 5F646165h
		dd 656E696Ch, 1260100h,	4EBh, 9DD01h
		db 0, 10h
		dd offset aConn		; "conn"
		dw 2601h
		dd offset loc_801+2
		dd 66756211h, 26010066h, 433h, 6E656C11h, 78260100h, 12000000h
		dd 1006372h, 4EB28h
		db 0, 13h
		dd offset aTotal_bytes	; "total_bytes"
		dw 2901h
		dd offset loc_76+2
		dd 6E011500h, 72635F6Dh, 65746165h, 6E6F635Fh, 0AC01006Eh
		dd 80301h
		db 0
		dd offset _nm_create_conn
		dd offset unk_4E
		dd offset dword_33E0
		db 1, 67h, 0Ah
dword_1B28	dd 61160000h, 726464h, 707AC01h, 91020000h, 6F701600h
					; DATA XREF: .debug_info:00001B5Co
					; .debug_info:00002657o
		dd 1007472h, 78ACh, 4910200h
		db 17h
		dd offset aConn		; "conn"
		db 1, 0AEh, 3
byte_1B50	db 8, 2	dup(0)		; DATA XREF: .debug_info:00001B71o
		dd offset off_3460
		db 18h
		dd offset loc_25
		dd offset dword_1B28+0Ch
		dd offset loc_A48
		dd 740219h, 240802h
		db 18h
off_1B6D	dd offset loc_2F	; DATA XREF: .debug_info:00001B86o
					; .debug_info:00001C0Co ...
		dd offset byte_1B50+2
		dd offset loc_A5C+1
		db 19h,	2, 74h
		dd 770200h
		db 0, 1Ah
off_1B82	dd offset unk_4E	; DATA XREF: .debug_info:00001BDDo
					; .debug_info:00002910o
		dd offset off_1B6D+2
		dw 1B00h
		dd 5F6D6E01h, 656C6572h, 5F657361h, 6E6E6F63h, 1B40100h
		dd offset _nm_release_conn
		dd offset unk_F3
off_1BA8	dd offset off_3494	; DATA XREF: .debug_info:00001BE6o
		dd 0AED01h
		db 0, 1Ch
		dd offset aConn		; "conn"
		dw 0B401h
		dd offset loc_801+2
		dd 1D009102h
		dd offset off_47C4
off_1BC4	dd offset loc_AE3	; DATA XREF: .debug_info:00001BEFo
					; .debug_info:00001BF8o ...
		dd 646F6E1Eh, 0B7010065h, 27Fh
		dd offset off_352C
		db 1Ah
		dd offset loc_7E
		dd offset off_1B82+3
		db 1Ah
		dd offset loc_90
		dd offset off_1BA8
		db 1Ah
		dd offset loc_A6
		dd offset off_1BC4+1
		db 1Ah
		dd offset loc_B7
		dd offset off_1BC4+1
		db 1Fh
		dd offset unk_D7
		db 1, 0C5h, 1Bh
		dd 1A000000h
		dd offset unk_F3
		dd offset off_1B6D+2
		dd 89B2000h
		db 2 dup(0)
		dd offset _nm_tcp_write
		dd offset _nm_tcp_read
		dd offset off_354A
off_1C22	dd offset loc_B59+4	; DATA XREF: .debug_info:00001DB3o
		dw 0B621h
dword_1C28	dd 2000008h, 0C1210091h, 2000008h, 0CD210491h, 2000008h
					; DATA XREF: .debug_info:00001DBCo
		dd 9B220891h
		db 8, 2	dup(0)
		dd offset loc_150
		dd offset off_47E4
		db 1
		dd 0B53C9h, 8CD2300h
byte_1C54	db 2 dup(0)		; DATA XREF: .debug_info:0000211Co
		dd offset off_3612
		dw 0C123h
		db 8, 2	dup(0)
		dd offset off_3631
		db 23h
		dd offset loc_8B4+2
		dd offset off_3650
		db 1Fh
		dd offset unk_175
byte_1C71	db 1, 0DCh, 1Bh		; DATA XREF: .debug_info:00002127o
					; .debug_info:0000216Co ...
		dd 1A000000h
		dd offset _nm_tcp_read
		dd offset off_1B6D+2
		dd 6E012400h, 63745F6Dh, 65725F70h, 1006461h, 7801D7h
		db 2 dup(0)
		dd offset _nm_tcp_read
off_1C9A	dd offset _nm_read_all	; DATA XREF: .debug_info:00002252o
		dd offset off_366F
		dd offset loc_BC0+1
		db 1Ch
		dd offset aConn		; "conn"
		db 1
dword_1CAC	dd 803D7h, 910200h, 66756216h, 0D7010066h, 154h, 16049102h
		dd 6E656Ch, 78D701h, 91020000h
		db 8, 1Fh
		dd offset unk_215
		dw 101h
		dd 1A00001Ch
		dd offset _nm_read_all
off_1CE0	dd offset off_1B6D+2	; DATA XREF: .debug_info:0000243Bo
		dd 8D92500h
		db 2 dup(0)
		dd offset _nm_read_all
		dd offset unk_2D5
		dd offset off_3737
		dw 0AF01h
dword_1CF8	dd 2100000Ch, 8F3h, 21009102h, 8FEh, 21049102h,	90Ah, 26089102h
					; DATA XREF: .debug_info:00002603o
		dd 915h, 91F2700h
		db 2 dup(0)
		dd offset off_37EB
		dw 3128h
		dd 26000009h, 943h, 94E2900h, 3E80000h,	8D922h
		db 0
		dd offset loc_25A
off_1D3D	dd offset off_47FC	; DATA XREF: .debug_info:00002624o
					; .debug_info:00002A3Eo
		db 1, 0E5h, 0A5h
		dd 2A00000Ch, 90Ah, 8FE2Ah, 8F32A00h
		db 2 dup(0), 2Bh
		dd offset off_4814
		db 27h
off_1D5C	dd offset loc_914+1	; DATA XREF: .debug_info:00002675o
					; .debug_info:000026D0o ...
		dd offset off_3821
		dd 91F27h
		db 0
		dd offset off_3837
		db 27h,	31h, 9
		db 2 dup(0)
		dd offset off_3855
		dw 4327h
		db 9, 2	dup(0)
		dd offset off_3873
		db 27h
		dd offset loc_94B+3
		dd offset off_389D
		db 18h
		dd offset loc_287
		dd offset loc_B59+4
		dd offset loc_C8A
		db 19h,	2, 74h
dword_1D98	dd 760200h, 4740219h, 73007705h, 2192200h, 75020874h
					; DATA XREF: .debug_info:00002768o
		db 2 dup(0), 1Ah
		dd offset loc_290
		dd offset off_1C22+3
		db 2Ch
		dd offset loc_2A7
		dd offset dword_1C28+0Eh
		dd 740219h, 3101h
byte_1DC8	db 0, 1Ah		; DATA XREF: .debug_info:0000277Do
		dd offset unk_2D5
		dd offset off_1B6D+2
		dw 2500h
		dd offset loc_98E
		dd offset _read_line_constprop_2
		dd offset unk_355
		dd offset off_38DB
		dd 0D1C01h, 9A52300h
		db 2 dup(0)
off_1DEE	dd offset off_3975	; DATA XREF: .debug_info:000028B3o
		dw 0B023h
		db 9, 2	dup(0)
		dd offset off_39AC
		db 27h
		dd offset loc_9C5+2
		dd offset off_39CB
		dd 9D127h
		db 0
off_1E09	dd offset off_3A01	; DATA XREF: .debug_info:00002F24o
					; .debug_info:00002F29o
		db 2Dh,	0BCh, 9
dword_1E10	dd 2000000h		; DATA XREF: .debug_info:000028C7o
		db 18h
		dd offset loc_30A
		dd offset loc_8D8+1
		dd offset loc_D12
		db 19h,	2, 74h
		dd 770200h, 4740219h, 19007302h, 1087402h
		db 31h,	0, 1Ah
		dd offset unk_355
		dd offset off_1B6D+2
		align 10h
dword_1E40	dd 6D6E012Eh, 6165725Fh, 69755F64h, 3233746Eh, 10B0100h
					; DATA XREF: .debug_info:000029B3o
					; .debug_info:00002F50o
		dd 4EB01h
		db 0
		dd offset _nm_read_uint32
		dd offset unk_397
		dd offset off_3A20
		db 1, 0A1h, 0Dh
		db 2 dup(0), 2Fh
		dd offset aConn		; "conn"
		db 1
dword_1E70	dd 803010Bh, 91020000h,	61763000h, 0B01006Ch, 0DA101h
					; DATA XREF: .debug_info:000029BCo
					; .debug_info:00002F91o
		dd 4910200h, 637231h, 0EB010D01h
		db 4, 2	dup(0)
		dd offset off_3A58
		db 18h
		dd offset loc_382
off_1E9C	dd offset loc_8D8+1	; DATA XREF: .debug_info:00002ADDo
					; .debug_info:00002FB5o
		dd offset loc_D93+4
		dd 740219h, 6009103h, 4740219h,	6049103h, 8740219h, 1A003401h
		dd offset unk_397
		dd offset off_1B6D+2
dword_1EC4	dd 0EF040500h, 2E000000h, 5F6D6E01h, 64616572h,	6E69755Fh
					; DATA XREF: .debug_info:00002B74o
					; .debug_info:00002FD9o
		dd 363174h, 1011801h, 4EBh
		dd offset _nm_read_uint16
off_1EE8	dd offset unk_3D7	; DATA XREF: .debug_info:off_1124o
		dd offset off_3A77
		dd 0E2C01h
		db 0, 2Fh
		dd offset aConn		; "conn"
		dw 1801h
		dd 80301h, 910200h, 6C617630h, 1180100h, 0E2Ch,	31049102h
		dd 1006372h, 4EB011Ah
		db 2 dup(0)
		dd offset off_3AAF
		db 18h
		dd offset loc_3C2
		dd offset loc_8D8+1
		dd offset loc_E21+1
		db 19h
		dd 3007402h, 19060091h,	3047402h, 19060491h, 1087402h
		db 32h,	0, 1Ah
		dd offset unk_3D7
		dd offset off_1B6D+2
		align 10h
		db    5
		db 4, 0E0h, 0
		db    0
		align 2
		dw 7514h
aRl_escape_stri	db 'rl_escape_string',0
		db 1, 3Ah, 1
		dd offset loc_433
		dd 0EB801h, 72731100h, 3A010063h, 433h,	63736512h, 657061h
		dd 0EF3C01h, 70120000h,	333D0100h, 12000004h, 3E010071h
		dd 433h, 636E6512h, 6465646Fh, 333F0100h, 12000004h, 1006863h
		dd 7840h, 65683200h, 61745F78h,	656C62h, 0EC84201h, 30100000h
		dd 34333231h, 38373635h, 63626139h, 666564h, 14233h, 0EC800h
		dd 1363400h, 0F0000h, 0EB807h, 6E012E00h, 72775F6Dh, 5F657469h
		dd 6C656966h, 1007364h,	0EB010125h
		db 4, 2	dup(0)
		dd offset _nm_write_fields
		dd offset unk_78E
		dd offset off_3ACE
		db 1
		dd offset dword_11D8+54h
		db 2Fh
		dd offset aConn		; "conn"
		db 1, 25h, 1
		dd offset loc_801+2
		dd 2F009102h
		dd offset aFields	; "fields"
		dd 0F7012501h, 2000007h, 72310491h, 27010063h, 4EB01h
		db 0
		dd offset off_3B68
a1field		db '1field',0
		dd 0F7012801h
		db 7, 2	dup(0)
		dd offset off_3BB9
a1value		db '1value',0
		dw 2901h
		dd 43301h
		db 0
		dd offset off_3BD9
		db 35h
		dd offset aMethod	; "method"
		dw 2A01h
		dd 43301h
		db 0
		dd offset off_3BD9
		db 36h
		dd offset aBuffer	; "buffer"
		dw 2B01h
		dd 122C01h, 0DC910300h,	6572315Fh, 2C010074h, 7801h
		db 0
		dd offset off_3BF9
		db 35h
		dd offset aBytes_to_send ; "bytes_to_send"
		dw 2D01h
		dd 7801h
		db 0
		dd offset off_3C59
a1val		db '1val',0
		dw 2E01h
		dd 7801h
		db 0
		dd offset off_3CAE
		db 37h,	32h, 0Eh
		db 2 dup(0)
		dd offset loc_41C
		dd offset off_482C
		dw 5401h
		dd 0FFE01h, 0E512300h
		db 2 dup(0)
		dd offset off_3D00
		db 2Bh
		dd offset off_485C
		db 27h
		dd offset loc_E55+7
		dd offset off_3D1E
		dd 0E6A27h
		db 0
		dd offset off_3D49
		db 27h,	73h, 0Eh
		db 2 dup(0)
		dd offset off_3D88
		dw 7C27h
		db 0Eh,	2 dup(0)
		dd offset off_3DE3
		db 27h
		dd offset unk_E8B
		dd offset off_3E28
		dd 0E9538h
		db 0, 5, 3
		dd offset _hex_table_21461
		db 1Ah
		dd offset loc_696
		dd offset byte_1C54+1
		db 2 dup(0), 18h
		dd offset loc_463
		dd offset byte_1C71+1
		dd offset aNm_a_sz_transa+0Ch ;	"SACTION_ID"
		db 19h
		dd 2007402h, 2190077h, 0A030474h, 2191000h, 3050874h
		dd offset aTagS		; "&tag=%s"
		db 0, 18h
		dd offset loc_477
		dd offset unk_89B
		dd offset a3g1fedcba98765+0Bh ;	"_________"
		dw 219h
		dd 91040074h, 19065FC4h, 2047402h, 18000077h
		dd offset loc_4B3
		dd offset byte_1C71+1
		dd offset off_1068+2
		dd 740219h, 19007702h, 3047402h, 1910000Ah, 5087402h
		db 3
		dd offset aCmdS		; "&cmd=%s"
		align 2
		db 18h
		dd offset loc_4C7
		dd offset unk_89B
		dd offset off_1088
		db 19h
		dd 4007402h, 65FC491h, 4740219h, 7702h
		db 18h
		dd offset loc_50F
		dd offset byte_1C71+1
		dd offset off_10AC+3
		db 19h,	2, 74h
		dd 770200h, 4740219h, 10000A03h, 8740219h
		db 5, 3
		dd offset aValU		; "&val=%u"
		dw 1800h
		dd offset loc_523
		dd offset unk_89B
		dd offset off_10CC+1
		dd 740219h, 5FC49104h, 74021906h, 770204h
		db 0, 18h
		dd offset loc_547
		dd offset byte_1C71+1
		dd offset off_10F4
		dw 219h
		dd 77020074h, 74021900h, 0A0304h, 74021910h
		db 8, 5, 3
		dd offset aTypeU	; "&type=%u"
		align 4
		db 18h
		dd offset loc_55B
		dd offset unk_89B
		dd offset a123456789abcde+9 ; "abcdef"
		db 19h,	2, 74h
		dd 0C4910400h, 219065Fh, 77020474h
		db 2 dup(0), 18h
		dd offset loc_590
		dd offset off_1BC4+1
		dd offset byte_1128+1
		db 19h
		dd 4007402h, 65FC891h
		db 0, 1Ah
		dd offset loc_5D3
		dd offset off_1C9A+2
		db 18h
		dd offset loc_5F3
		dd offset byte_1C71+1
		dd offset aCWorkspacePidg+1Ch ;	"\\pidgin-2.10.11\\\\libpurple\\\\protoc"...
		db 19h
		dd 2007402h, 2190077h, 0A030474h, 2191000h, 3050874h
		dd offset aValU		; "&val=%u"
		dd 0C740219h, 5FCC9104h
		db 6, 0, 18h
		dd offset loc_607
		dd offset unk_89B
		dd offset aCWorkspacePidg+3Ah ;	"otocols\\\\novell"
		db 19h
		dd 4007402h, 65FC491h, 4740219h, 7702h
		db 18h
		dd offset loc_627
		dd offset loc_ECA+3
		dd offset off_1194+3
		db 19h,	2, 74h
		dd 0C4910400h, 1800065Fh
		dd offset loc_71A
		dd offset byte_1C71+1
		dd offset aShortUnsignedI+12h ;	"t"
		dd 740219h, 19007702h, 3047402h, 1910000Ah, 5087402h
		db 3
		dd offset aValS		; "&val=%s"
		db 19h,	2, 74h
		dd 0C891040Ch, 1800065Fh
		dd offset loc_735
		dd offset unk_89B
		dd offset dword_11D8+0Dh
		dd 740219h, 5FC49104h, 74021906h, 770204h
		db 0, 18h
		dd offset loc_749
		dd offset off_1BC4+1
		dd offset dword_11D8+24h
		dw 219h
		dd 91040074h, 65FC8h
		db 18h
		dd offset loc_770
		dd offset unk_89B
		dd offset dword_11D8+4Ah
		db 19h,	2, 74h
		dd 0C4910400h, 219065Fh, 77020474h, 74021900h, 0A0308h
		db 10h,	0, 1Ah
		dd offset unk_78E
		dd offset off_1B6D+2
		align 10h
		dd 14233h, 123D00h, 1363900h, 0FFF0000h, 6E012E00h, 65725F6Dh
		dd 685F6461h, 65646165h, 0EB010072h, 4EB0101h
		db 2 dup(0)
		dd offset _nm_read_header
		dd offset unk_8DD
		dd offset off_3E78
		dw 4C01h
		dd 2F000013h
		dd offset aConn		; "conn"
		dd 301EB01h, 2000008h, 72310091h, 0ED010063h, 4EB01h
		db 0
		dd offset off_3F12
		db 36h
		dd offset aBuffer	; "buffer"
		dw 0EE01h
		dd 134C01h, 0DC910300h,	7470317Bh, 0EF010072h, 43301h
		db 0
		dd offset off_3F86
		db 31h,	69h, 0
		dd 7801F001h
		db 3 dup(0)
		dd offset off_3FD6
aRtn_buf	db ':rtn_buf',0
		dd 5D01F101h, 3000013h,	317BD491h, 5F6E7472h, 65646F63h
		dd 1F20100h, 78h
		dd offset off_400C
		db 18h
		dd offset loc_7C9
		dd offset loc_CAE+1
		dd offset dword_12E0+16h
		db 19h,	1, 50h
		dd 19007502h, 73025201h
		db 2 dup(0), 18h
		dd offset loc_7E5
		dd offset dword_1CAC+14h
		dd offset dword_12E0+32h
		db 19h
		dd 2007402h, 2190073h, 8020474h
		db 20h,	0, 18h
		dd offset loc_82F
		dd offset off_1CE0
		dd offset dword_12E0+48h
		db 19h
		dd 3007402h, 7BD491h
		db 18h
		dd offset loc_849
		dd offset loc_CAE+1
		dd offset dword_12E0+62h
		db 19h,	1, 50h
		dd 19007502h, 73025201h
		db 2 dup(0), 1Ah
		dd offset unk_8DD
		dd offset off_1B6D+2
		align 10h
		dd 14233h, 135D00h, 1363900h, 1FF0000h,	1423300h, 136D0000h
		dd 36340000h, 7000001h,	6E012E00h, 65725F6Dh, 665F6461h
		dd 646C6569h, 1A010073h, 4EB0102h
		db 2 dup(0)
		dd offset _nm_read_fields
		dd offset unk_BCA
		dd offset off_4076
		dw 0DB01h
		dd 2F000015h
		dd offset aConn		; "conn"
		dd 3021A01h, 2000008h, 633B0091h, 746E756Fh, 21A0100h
		dd 78h
		dd offset off_4110
		db 2Fh
		dd offset aFields	; "fields"
		db 1, 1Ah, 2
		dd offset dword_14F0+0EBh
		dd 31089102h, 1006372h,	4EB021Ch
		db 2 dup(0)
		dd offset off_4151
a1type		db '1type',0
		dd 0B4021D01h
		db 3 dup(0)
		dd offset off_420E
		db 35h
		dd offset aMethod	; "method"
		dd 0B4021E01h
		db 3 dup(0)
		dd offset off_426B
a1val_0		db '1val',0
		dd 0EF021F01h
		db 3 dup(0)
		dd offset off_42BB
aTag		db ':tag',0
		dd 0E1022001h, 3000015h, 3A7F9C91h, 5F627573h, 6C656966h
		dd 1007364h, 7F70221h, 91030000h, 73317F98h, 1007274h
		dd 4330222h
		db 2 dup(0)
		dd offset off_42DD
		db 18h
		dd offset loc_93F
		dd offset loc_8D8+1
		dd offset dword_140C+55h
		db 19h
		dd 2007402h, 2190073h, 91030474h, 2197F92h, 31010874h
		db 0, 18h
		dd offset loc_96E
		dd offset loc_8D8+1
		dd offset dword_140C+78h
		dw 219h
		dd 73020074h, 74021900h, 93910304h, 7402197Fh, 310108h
		db 18h
		dd offset loc_986
		dd offset loc_D18+4
		dd offset dword_140C+95h
		db 19h,	2, 74h
		dd 730200h, 4740219h, 7F949103h
		db 0, 18h
		dd offset loc_9AF
		dd offset loc_8D8+1
		dd offset dword_140C+0B1h
		dw 219h
		dd 73020074h, 74021900h, 770204h
		db 0, 18h
		dd offset loc_9EB
		dd offset loc_D18+4
		dd offset dword_140C+0CEh
		dw 219h
		dd 73020074h, 74021900h, 94910304h
		db 7Fh,	0, 18h
		dd offset loc_A2C
		dd offset dword_1CF8+2
		dd offset dword_14F0+0Bh
		db 19h
		dd 2047402h, 2190077h, 30010874h, 10740219h, 18003001h
		dd offset loc_A56
		dd offset off_1D3D+3
		dd offset dword_14F0+21h
		dd 740219h, 7F989103h
		db 0, 18h
		dd offset loc_A84
		dd offset loc_D18+4
		dd offset dword_14F0+3Eh
		dw 219h
		dd 73020074h, 74021900h, 94910304h
		db 7Fh,	0, 1Ah
		dd offset loc_AA8
		dd offset dword_1B28+0Ch
		db 18h
		dd offset loc_AC2
		dd offset loc_8D8+1
		dd offset dword_14F0+5Ch
		dd 740219h, 7302h
		db 18h
		dd offset loc_B03
		dd offset off_1D5C+3
		dd offset dword_14F0+7Dh
		db 19h,	2, 74h
		dd 770204h, 8740219h, 2193001h,	30011074h
		db 0, 18h
		dd offset loc_B1C
		dd offset loc_D18+4
		dd offset dword_14F0+9Ah
		dw 219h
		dd 73020074h, 74021900h, 94910304h
		db 7Fh,	0, 18h
		dd offset loc_B3C
		dd offset dword_12E0+8Dh
		dd offset dword_14F0+0B7h
		db 19h
		dd 2007402h, 2190073h, 91030874h, 18007F98h
		dd offset loc_B79
		dd offset off_1D5C+3
		dd offset dword_14F0+0D8h
		dd 4740219h, 19007702h,	1087402h, 74021930h, 300110h
		db 1Ah
		dd offset loc_BBA
		dd offset off_1BC4+1
		db 1Ah
		dd offset unk_BCA
		dd offset off_1B6D+2
		dw 500h
		db    4
		dd offset loc_7F6+1
		db 33h,	42h, 1
		db    0
		align 2
		dd offset dword_14F0+101h
		dw 3634h
		db    1
		db 2 dup(0), 3Fh
		db    0
		db 3Ch,	1, 6Eh
aM_conn_add_req	db 'm_conn_add_request_item',0
		dd 1028601h
		dd offset _nm_conn_add_request_item
		dd offset unk_C1D
		dd offset off_4336
		dd 167301h
		db 0, 2Fh
		dd offset aConn		; "conn"
		dw 8601h
		dd 80302h, 910200h
		db 2Fh
		dd offset aRequest	; "request"
		db 1, 86h, 2
		dd offset byte_1673
		dd 18049102h
		dd offset loc_BF4
		dd offset dword_1D98+0Eh
		dd offset dword_14F0+164h
		dd 740219h, 7602h
		db 18h
		dd offset loc_C03
		dd offset byte_1DC8+1
		dd offset dword_14F0+179h
		db 19h,	2, 74h
		dd 760204h
		db 0, 1Ah
		dd offset unk_C1D
		dd offset off_1B6D+2
		dw 500h
		dd 7D904h, 6E012E00h, 65735F6Dh, 725F646Eh, 65757165h
		dd 1007473h, 0EB010198h
		db 4, 2	dup(0)
		dd offset _nm_send_request
		dd offset byte_E8A
		dd offset off_439E
		db 1
		dd offset dword_1698+2C5h
		db 2Fh
		dd offset aConn		; "conn"
		db 1, 98h, 1
		dd offset loc_801+2
		dd 3B009102h, 646D63h, 33019801h
		db 4, 2	dup(0)
		dd offset off_4438
		db 2Fh
		dd offset aFields	; "fields"
		dd 0F7019801h, 2000007h, 63300891h, 99010062h, 76C01h
		dd 0C910200h, 74616430h, 99010061h, 1C501h, 10910200h
		db 2Fh
		dd offset aRequest	; "request"
		db 1, 99h, 1
		dd offset dword_1698+2C5h
		dd 31149102h, 1006372h,	4EB019Bh
		db 2 dup(0)
		dd offset off_4458
		db 36h
		dd offset aBuffer	; "buffer"
		db 1
		dd 134C019Ch, 91030000h
		db 0DCh, 7Bh, 35h
		dd offset aBytes_to_send ; "bytes_to_send"
		db 1
		dd 78019Dh
		db 2 dup(0)
		dd offset off_44C0
a1ret		db '1ret',0
		db 1
		dd 78019Eh
		db 2 dup(0)
		dd offset off_4503
a1request_field	db '1request_fields',0
		dw 9F01h
		dd 7F701h
		db 0
		dd offset off_4542
a1str		db '1str',0
		dw 0A001h
		dd 43301h
		db 0
		dd offset off_456F
		db 1Dh
		dd offset off_488C
		dd offset dword_1698+161h
a1new_request	db '1new_request',0
		db 1
		dd 167301D9h
		db 2 dup(0)
		dd offset off_45B3
		db 18h
		dd offset loc_DBF
		dd offset off_1DEE+3
		dd offset dword_1698+106h
		db 19h
		dd 1007402h
		db 30h,	0, 18h
		dd offset loc_DEA
		dd offset dword_1E10
		dd offset dword_1698+133h
		db 19h
		dd 2007402h, 2190075h, 91040C74h, 19067BC8h, 1107402h
		dd 74021930h, 0CC910414h, 1800067Bh
		dd offset loc_DF8
		dd offset dword_14F0+101h
		dd offset dword_1698+14Fh
		dd 740219h, 19007302h, 2047402h, 2C000077h
		dd offset loc_E83
		dd offset off_1B82+3
		dd 740219h, 7702h
		db 0, 18h
		dd offset loc_CAA
		dd offset byte_1C71+1
		dd offset dword_1698+190h
		dw 219h
		dd 91030074h, 2197BDCh,	0A030474h, 2190200h, 3050874h
		dd offset aPostSHttp1_0	; "POST	/%s HTTP/1.0\r\n"
		dd 0C740219h, 7502h
		db 18h
		dd offset loc_CBE
		dd offset unk_89B
		dd offset dword_1698+1ADh
		db 19h,	2, 74h
		dd 730200h, 4740219h, 7BDC9103h
		db 0, 18h
		dd offset loc_CFE
		dd offset byte_1C71+1
		dd offset dword_1698+1D5h
		dw 219h
		dd 91030074h, 2197BDCh,	0A030474h, 2190200h, 3050874h
		dd offset asc_FEF	; "\r\n"
		db 0, 18h
		dd offset loc_D12
		dd offset unk_89B
		dd offset dword_1698+1F2h
		dw 219h
		dd 73020074h, 74021900h, 0DC910304h
		db 7Bh,	0, 1Ah
		dd offset loc_D2A
		dd offset dword_1E40+0Fh
		db 18h
		dd offset loc_D45
		dd offset dword_1E70+7
		dd offset dword_1698+213h
		dd 740219h
		db 5, 3
		dd offset aD		; "%d"
		dw 1800h
		dd offset loc_D7D
		dd offset off_1D5C+3
		dd offset dword_1698+243h
		dd 4740219h
		db 5, 3
		dd offset aNm_a_sz_transa ; "NM_A_SZ_TRANSACTION_ID"
		dw 219h
		dd 30010874h, 0C740219h, 2193001h, 30011074h, 18740219h
		dd 18003A01h
		dd offset loc_D8D
		dd offset loc_ECA+3
		dd offset dword_1698+258h
		dd 740219h, 7302h
		db 18h
		dd offset loc_DAB
		dd offset unk_89B
		dd offset dword_1698+27Dh
		db 19h,	2, 74h
		dd 730200h, 4740219h
		db 5, 3
		dd offset asc_FEF	; "\r\n"
		dw 219h
		dd 32010874h
		db 0, 18h
		dd offset loc_E1A
		dd offset off_1D3D+3
		dd offset dword_1698+293h
		dw 219h
		dd 91030074h, 18007BD8h
		dd offset loc_E6D
		dd offset byte_1C71+1
		dd offset dword_1698+2BBh
		dd 740219h, 7BDC9103h, 4740219h, 2000A03h, 8740219h
		db 5, 3
		dd offset aHostSD	; "Host: %s:%d\r\n\r\n"
		dw 1A00h
		dd offset byte_E8A
		dd offset off_1B6D+2
		db    0
		db 5, 4, 73h
		db  16h
		db 2 dup(0), 3Ch
		db    1
aNm_conn_remove	db 'nm_conn_remove_request_item',0
		db 1, 90h, 2
		db 1
		dd offset _nm_conn_remove_request_item
		dd offset unk_EEF
		dd offset off_45DC
		db 1, 0DDh, 19h
		db 2 dup(0), 2Fh
		dd offset aConn		; "conn"
		db 1
		dd 8030290h, 91020000h
		db 0, 2Fh
		dd offset aRequest	; "request"
		dw 9001h
		dd 167302h, 4910200h
		db 18h
		dd offset loc_EBB
		dd offset off_1E9C
		dd offset dword_19A0+29h
		db 19h,	2, 74h
		dd 760204h
		db 0, 1Fh
		dd offset loc_ED8
		dw 8501h
		dd 1A00001Bh
		dd offset unk_EEF
		dd offset off_1B6D+2
		db    0
		db 2Eh,	1, 6Eh
aM_conn_find_re	db 'm_conn_find_request',0
		dd 1029A01h, 1673h
		dd offset _nm_conn_find_request
		dd offset unk_F4D
		dd offset off_4674
		dd 1A6A01h
		db 0, 2Fh
		dd offset aConn		; "conn"
		dw 9A01h
		dd 80302h, 910200h
		db 2Fh
		dd offset aTrans_id	; "trans_id"
		db 1, 9Ah, 2
		dd offset loc_76+2
		dd 31049102h, 716572h, 73029C01h
		db 16h,	2 dup(0)
		dd offset off_46F4
a1itr		db '1itr',0
		dd 7F029D01h
		db 2, 2	dup(0)
		dd offset off_4713
		db 18h
		dd offset loc_F26
		dd offset dword_1EC4
		dd offset dword_1A1C+44h
		dd 740219h, 7602h
		db 1Ah
		dd offset unk_F4D
		dd offset off_1B6D+2
		align 2
		dw 12Eh
aNm_conn_get_ad	db 'nm_conn_get_addr',0
		db 1, 0AEh, 2
		dd 70701h
		db 0
		dd offset _nm_conn_get_addr
		dd offset unk_F82
		dd offset off_4732
		db 1, 0AFh, 1Ah
		db 2 dup(0), 2Fh
		dd offset aConn		; "conn"
		db 1
		dd 80302AEh, 91020000h
		db 0, 1Ah
		dd offset unk_F82
		dd offset off_1B6D+2
		dw 2E00h
		dd 5F6D6E01h, 6E6E6F63h, 7465675Fh, 726F705Fh, 0B7010074h
		dd 780102h
		db 2 dup(0)
		dd offset _nm_conn_get_port
		dd offset unk_FBA
		dd offset off_476A
		dw 0F401h
		dd 2F00001Ah
		dd offset aConn		; "conn"
		dd 302B701h, 2000008h
		db 91h,	0, 1Ah
		dd offset unk_FBA
		dd offset off_1B6D+2
		align 4
a__mb_cur_max	db '=__mb_cur_max',0
		dw 5C10h
		dd offset loc_76+2
		dd 5F3D0101h, 79746370h, 10006570h, 89573h, 33010100h
		dd 4DFh, 1B26h,	5F3D003Eh, 626F69h, 1B1B9A09h, 1010000h
		dd 5F67013Fh, 6C6C616Dh, 30636Fh, 0C5013411h, 1000001h
		dd 1B52h, 1290Dh, 13F0000h, 74735F67h, 70756472h, 1BD1200h
		dd 1FCh, 1B6F01h, 1F10D00h, 40000000h, 735F5F01h, 6B636174h
		dd 6B68635Fh, 6961665Fh, 101006Ch, 6E014101h, 65725F6Dh
		dd 7361656Ch, 65725F65h, 73657571h, 2D0E0074h, 1BA80101h
		dd 730D0000h, 16h, 5F670141h, 73696C73h, 72665F74h, 6006565h
		dd 0C5010131h, 0D00001Bh, 27Fh,	67014100h, 6572665Fh, 37110065h
		dd 1BDC0101h, 0C50D0000h, 1, 72770142h,	657469h, 101CA13h
		dd 78h,	1C0101h, 780D00h, 0EA0D0000h, 0D000001h, 7Fh, 72014200h
		dd 646165h, 101C413h, 78h, 1C2501h, 780D00h, 540D0000h
		dd 0D000001h, 7Fh, 5F014300h, 6E727265h, 8917006Fh, 88F01h
		dd 1440100h, 65656C53h,	6A140070h, 656C5308h, 34407065h
		dd 55010100h, 0D00001Ch, 882h, 67013F00h, 6C616D5Fh, 636F6Ch
		dd 0C5013311h, 1000001h, 1C72h,	1290Dh,	13F0000h, 6E735F67h
		dd 6E697270h, 15006674h, 16F01CAh, 9C010000h, 0D00001Ch
		dd 1FCh, 1990Dh, 1F10D00h, 450000h, 6D6E013Fh, 756F635Fh
		dd 665F746Eh, 646C6569h, 89080073h, 0EF01h, 1CC00100h
		dd 0F70D0000h, 7, 7473013Fh, 72686372h,	12A1600h, 433h
		dd 1CE001h, 7070D00h, 780D0000h, 0
		dd 74610142h, 1700696Fh, 78010130h, 1000000h, 1CFAh, 7070Dh
		dd 13F0000h, 665F6D6Eh,	646C6569h, 6464615Fh, 6D756E5Fh
		dd 726562h, 0F701B308h,	1000007h, 1D40h, 7F70Dh, 7070D00h
		dd 0EF0D0000h, 0D000000h, 0B4h,	0B40Dh,	0EF0D00h, 0B40D0000h
		dd 0
		db  41h	; A
		db 1, 6Eh, 6Dh
a_free_fields	db '_free_fields',0
		db 8, 0BCh, 1
		db    1
		dd offset off_1D5C+3
		db 0Dh,	0DBh, 15h
		db    0
		db 2 dup(0), 3Fh
		db    1
aNm_field_add_p	db 'nm_field_add_pointer',0
		dw 9E08h
		dd 7F701h, 1DA60100h, 0F70D0000h, 0D000007h, 707h, 0EF0Dh
		dd 0B40D00h, 0B40D0000h, 0D000000h, 1C5h, 0B40Dh, 1410000h
aNm_request_add	db 'nm_request_add_ref',0
		db 0Eh
		db  35h	; 5
		db 2 dup(1), 0C9h
		db  1Dh
		db 2 dup(0), 0Dh
		dd offset byte_1673
		db    0
		db 3Fh,	1, 67h
a_slist_append	db '_slist_append',0
		dw 3406h
		db    1
		dd offset loc_27F
		db 1, 0F1h, 1Dh
		db    0
		align 2
		dw 7F0Dh
		db    2
		db 2 dup(0), 0Dh
		dd offset loc_1C5
		db    0
		db 3Fh,	1, 74h
		db  69h	; i
		db 6Dh,	65h, 0
		db    4
		db 66h,	1, 14h
		db    2
		db 2 dup(0), 1
		dd offset off_1E09+1
		db  0Dh
		dd offset off_1E09+1
		align 2
		dw 405h
		dd offset loc_210+4
		db  3Fh	; ?
		db 1, 6Eh, 6Dh
a_create_reques	db '_create_request',0
		db  0Eh
		db 25h,	1, 73h
		db  16h
		db 2 dup(0), 1
		dd offset dword_1E40+0Fh
		db  0Dh
		dd offset loc_702+5
		db 0Dh,	78h, 0
		db    0
		align 2
		dw 780Dh
		db    0
		db 2 dup(0), 0Dh
		dd offset loc_76B+1
		db  0Dh
		dd offset loc_1C5
		db 0Dh,	0C5h, 1
		db    0
		db 2 dup(0), 3Fh
		db    1
aNm_copy_field_	db 'nm_copy_field_array',0
		db 8, 0D4h, 1
		dd offset loc_7F6+1
		db    1
		dd offset dword_1E70+7
		db 0Dh,	0F7h, 7
		db    0
		db 2 dup(0), 3Fh
		db    1
aG_strdup_print	db 'g_strdup_printf',0
		db 12h,	0BEh, 1
		dd offset loc_1FC
		db    1
		dd offset off_1E9C
		db 0Dh,	0F1h, 1
		db    0
		align 2
		dw 45h
		db  3Fh	; ?
		db 1, 67h, 5Fh
aSlist_remove	db 'slist_remove',0
		db 6, 47h, 1
		dd offset loc_27F
		db    1
		dd offset dword_1EC4
		db 0Dh,	7Fh, 2
		db    0
		align 2
		dw 0D50Dh
		db    1
		align 4
		db  46h	; F
		db 1, 6Eh, 6Dh
a_request_get_t	db '_request_get_trans_id',0
		dw 670Eh
		dd 7801h, 730D0100h, 16h
		db 0
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 3014h
dword_3014	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000112Ao
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 26h,	49002607h, 8000013h, 8030013h, 0C3Ch, 3011309h
		dd 3A0B0B08h, 10B3B0Bh,	0A000013h, 803000Dh, 0B3B0B3Ah
		dd 0A381349h, 0D0B0000h, 3A0E0300h, 490B3B0Bh, 0A3813h
		dd 1150C00h, 13010C27h,	50D0000h, 134900h, 1150E00h, 13490C27h
		dd 1301h, 3F012E0Fh, 3A08030Ch,	270B3B0Bh, 2013490Ch, 13010Bh
		dd 51000h, 0B3A0E03h, 13490B3Bh, 5110000h, 3A080300h, 490B3B0Bh
		dd 12000013h, 8030034h,	0B3B0B3Ah, 1349h, 3003413h, 3B0B3A0Eh
		dd 13490Bh, 12E1400h, 0B3A0803h, 0C270B3Bh, 0B201349h
		dd 1301h, 3F012E15h, 3A08030Ch,	270B3B0Bh, 1113490Ch, 40011201h
		dd 0C429706h, 1301h, 3000516h, 3B0B3A08h, 213490Bh, 1700000Ah
		dd 0E030034h, 0B3B0B3Ah, 6021349h, 89180000h, 11010182h
		dd 1133101h, 19000013h,	1828Ah,	42910A02h, 1A00000Ah, 18289h
		dd 13310111h, 2E1B0000h, 30C3F01h, 3B0B3A08h, 110C270Bh
		dd 40011201h, 0C429706h, 1301h,	300051Ch, 3B0B3A0Eh, 213490Bh
		dd 1D00000Ah, 655010Bh,	1301h, 300341Eh, 3B0B3A08h, 213490Bh
		dd 1F000006h, 18289h, 42950111h, 13310Ch, 12E2000h, 1111331h
		dd 6400112h, 1301h, 31000521h, 0A0213h,	11D2200h, 1521331h
		dd 0B580655h, 13010B59h, 5230000h, 2133100h, 24000006h
		dd 0C3F012Eh, 0B3A0803h, 0C270B3Bh, 1111349h, 6400112h
		dd 1301h, 31012E25h, 12011113h,	97064001h, 13010C42h, 34260000h
		dd 1C133100h, 2700000Bh, 13310034h, 602h, 31003428h, 29000013h
		dd 13310034h, 51Ch, 3100052Ah, 2B000013h, 655010Bh, 892C0000h
		dd 11010182h, 133101h, 52D00h, 51C1331h, 2E2E0000h, 30C3F01h
		dd 3B0B3A08h, 490C2705h, 12011113h, 97064001h, 13010C42h
		dd 52F0000h, 3A0E0300h,	49053B0Bh, 0A0213h, 53000h, 0B3A0803h
		dd 1349053Bh, 0A02h, 3003431h, 3B0B3A08h, 2134905h, 32000006h
		dd 8030034h, 0B3B0B3Ah,	0A1C1349h, 1330000h, 1134901h
		dd 34000013h, 13490021h, 0B2Fh,	3003435h, 3B0B3A0Eh, 2134905h
		dd 36000006h, 0E030034h, 53B0B3Ah, 0A021349h, 1D370000h
		dd 52133101h, 58065501h, 105590Bh, 38000013h, 13310034h
		dd 0A02h, 49002139h, 52F13h, 343A00h, 0B3A0803h, 1349053Bh
		dd 0A02h, 300053Bh, 3B0B3A08h, 2134905h, 3C000006h, 0C3F012Eh
		dd 0B3A0803h, 0C27053Bh, 1120111h, 42970640h, 13010Ch
		dd 343D00h, 0B3A0803h, 13490B3Bh, 0C3C0C3Fh, 213E0000h
		dd 3F000000h, 0C3F012Eh, 0B3A0803h, 0C270B3Bh, 0C3C1349h
		dd 1301h, 3F002E40h, 2708030Ch,	3C0C340Ch, 4100000Ch, 0C3F012Eh
		dd 0B3A0803h, 0C270B3Bh, 13010C3Ch, 2E420000h, 30C3F01h
		dd 3B0B3A08h, 490C2705h, 10C3C13h, 43000013h, 0C3F002Eh
		dd 0B3A0803h, 0C270B3Bh, 0C3C1349h, 2E440000h, 30C3F01h
		dd 3B0B3A08h, 8408705h,	0C3C0C27h, 1301h, 1845h, 12E4600h
		dd 8030C3Fh, 0B3B0B3Ah,	13490C27h, 0C3Ch
		db 0
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 33E0h
dword_33E0	dd 0			; DATA XREF: .debug_info:00001B21o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 6
		dd 10740002h, 6, 45h, 30740002h, 45h, 46h, 10740002h, 46h
		dd 47h,	0C740002h, 47h,	48h, 8740002h, 48h, 49h, 4740002h
		dd 49h,	4Eh, 30740002h,	2 dup(0)
off_3460	dd offset loc_27	; DATA XREF: .debug_info:00001B53o
		dd offset loc_2A+4
		dd 2E500001h, 46000000h, 1000000h, 465300h, 490000h, 10000h
		dd 4950h, 4E00h, 53000100h, 2 dup(0)
off_3494	dd offset _nm_release_conn ; DATA XREF:	.debug_info:off_1BA8o
		dd offset loc_51
		dd 4740002h, 51h, 52h, 8740002h, 52h, 55h, 0C740002h, 55h
		dd 0D0h, 30740002h, 0D0h, 0D1h,	0C740002h, 0D1h, 0D2h
		dd 8740002h, 0D2h, 0D8h, 4740002h, 0D8h, 0E7h, 30740002h
		dd 0E7h, 0E8h, 0C740002h, 0E8h,	0E9h, 8740002h,	0E9h, 0EAh
		dd 4740002h, 0EAh, 0F3h, 30740002h, 2 dup(0)
off_352C	dd offset loc_6B	; DATA XREF: .debug_info:00001BD4o
		dd offset loc_D1
		dd 0EA530001h, 0EE000000h, 1000000h, 5300h, 0
		db 2 dup(0)
off_354A	dd offset _nm_tcp_write	; DATA XREF: .debug_info:00001C1Eo
		dd offset loc_F5
		dw 2
		dd 0F50474h, 0F60000h, 20000h, 0F60874h, 0F90000h, 20000h
		dd 0F90C74h, 14B0000h, 20000h, 14B2074h, 14C0000h, 20000h
		dd 14C0C74h, 14D0000h, 20000h, 14D0874h, 1500000h, 20000h
		dd 1500474h, 16E0000h, 20000h, 16E2074h, 16F0000h, 20000h
		dd 16F0C74h, 1700000h, 20000h, 1700874h, 1780000h, 20000h
		dd 1780474h, 18C0000h, 20000h, 18C2074h, 18D0000h, 20000h
		dd 18D0C74h, 18E0000h, 20000h, 18E0874h, 18F0000h, 20000h
		dd 18F0474h, 1940000h, 20000h, 2074h, 0
		db 2 dup(0)
off_3612	dd offset unk_14F	; DATA XREF: .debug_info:00001C56o
		dd offset loc_16F
		dw 1
		dd 16F53h, 17500h, 91000200h, 8, 0
		db 0
off_3631	dd offset unk_14F	; DATA XREF: .debug_info:00001C5Fo
		dd offset loc_170+4
		db 1, 0, 52h
		dd offset loc_170+4
		dd offset unk_175
		dd 4910002h, 2 dup(0)
off_3650	dd offset unk_14F	; DATA XREF: .debug_info:00001C68o
		dd offset loc_167
		dd 67500001h, 75000001h, 2000001h, 9100h, 0
		db 3 dup(0)
off_366F	dd offset _nm_tcp_read	; DATA XREF: .debug_info:00001C9Eo
		dd offset loc_195
		db 2
		dd 95047400h, 96000001h, 2000001h, 96087400h, 99000001h
		dd 2000001h, 990C7400h,	0EB000001h, 2000001h, 0EB207400h
		dd 0EC000001h, 2000001h, 0EC0C7400h, 0ED000001h, 2000001h
		dd 0ED087400h, 0F0000001h, 2000001h, 0F0047400h, 0E000001h
		dd 2000002h, 0E207400h,	0F000002h, 2000002h, 0F0C7400h
		dd 10000002h, 2000002h,	10087400h, 18000002h, 2000002h
		dd 18047400h, 2C000002h, 2000002h, 2C207400h, 2D000002h
		dd 2000002h, 2D0C7400h,	2E000002h, 2000002h, 2E087400h
		dd 2F000002h, 2000002h,	2F047400h, 34000002h, 2000002h
		dd 207400h, 0
		db 3 dup(0)
off_3737	dd offset _nm_read_all	; DATA XREF: .debug_info:00001CF2o
		dd offset loc_235
		db 2
		dd 35047400h, 36000002h, 2000002h, 36087400h, 37000002h
		dd 2000002h, 370C7400h,	38000002h, 2000002h, 38107400h
		dd 3B000002h, 2000002h,	3B147400h, 0A7000002h, 3000002h
		dd 0D07400h, 2A7h, 2A8h, 0CC740003h, 2A800h, 2C400h, 74000300h
		dd 2C400D0h, 2C50000h, 20000h, 2C51474h, 2C60000h, 20000h
		dd 2C61074h, 2C70000h, 20000h, 2C70C74h, 2C80000h, 20000h
		dd 2C80874h, 2C90000h, 20000h, 2C90474h, 2D50000h, 30000h
		dd 0D074h, 0
		db 3 dup(0)
off_37EB	dd offset loc_252	; DATA XREF: .debug_info:00001D1Eo
		dd offset unk_26A
		db 1
		dd 26A5500h, 2B00000h, 20000h, 2B00891h, 2B50000h, 10000h
		dd 2B555h, 2D500h, 91000200h, 8, 0
		db 0
off_3821	dd offset loc_2CE	; DATA XREF: .debug_info:00001D60o
		dd offset loc_2D0
		db 4, 0, 0Ah
		dd 9F2003h, 0
		db 3 dup(0)
off_3837	dd offset loc_25A	; DATA XREF: .debug_info:00001D69o
		dd offset loc_2B0
		db 1
		dd 2C95500h, 2D00000h, 10000h, 55h, 0
		db 0
off_3855	dd offset unk_26A	; DATA XREF: .debug_info:00001D72o
		dd offset loc_274
		db 1, 0, 50h
		dd offset loc_287
		dd offset loc_28B+4
		dd 500001h, 0
		db 3 dup(0)
off_3873	dd offset loc_25A	; DATA XREF: .debug_info:00001D7Bo
		dd offset unk_26A
		db 2
		dd 709F3000h, 74000002h, 1000002h, 2A85300h, 2AC0000h
		dd 10000h, 53h,	0
		db 0
off_389D	dd offset loc_25A	; DATA XREF: .debug_info:00001D84o
		dd offset unk_26A
		db 4, 0, 0Ah
		dd 709F03E8h, 74000002h, 2000002h, 954C9100h, 99000002h
		dd 6000002h, 64C9100h, 999F1C31h, 0AC000002h, 2000002h
		dd 4C9100h, 0
		db 3 dup(0)
off_38DB	dd offset _read_line_constprop_2 ; DATA	XREF: .debug_info:00001DE0o
		dd offset loc_2D9
		db 2
		dd 0D9047400h, 0DA000002h, 2000002h, 0DA087400h, 0DB000002h
		dd 2000002h, 0DB0C7400h, 0DC000002h, 2000002h, 0DC107400h
		dd 0DF000002h, 2000002h, 0DF147400h, 21000002h,	3000003h
		dd 0D07400h, 321h, 322h, 14740002h, 322h, 323h,	10740002h
		dd 323h, 324h, 0C740002h, 324h,	325h, 8740002h,	325h, 328h
		dd 4740002h, 328h, 355h, 0D0740003h, 2 dup(0)
		db 0
off_3975	dd offset _read_line_constprop_2 ; DATA	XREF: .debug_info:off_1DEEo
		dd offset loc_2F0
		db 1, 0, 50h
		dd offset loc_2F0
		dd offset loc_324
		dd 24570001h, 26000003h, 4000003h, 5001F300h, 3269Fh, 35500h
		dd 57000100h, 2	dup(0)
off_39AC	dd offset _read_line_constprop_2 ; DATA	XREF: .debug_info:00001DF7o
		dd offset loc_2F4
		dd 0F4520001h, 55000002h, 2000003h, 4C9100h, 0
		db 3 dup(0)
off_39CB	dd offset loc_2F0	; DATA XREF: .debug_info:00001E00o
		dd offset loc_30A
		db 2
		dd 0A9F3000h, 2E000003h, 1000003h, 32E5000h, 3450000h
		dd 20000h, 3459F30h, 3540000h, 10000h, 50h, 0
		db 0
off_3A01	dd offset loc_2F0	; DATA XREF: .debug_info:off_1E09o
		dd offset loc_2F4
		db 2, 0, 30h
		dd 3299Fh, 35000h, 56000100h, 2	dup(0)
off_3A20	dd offset _nm_read_uint32 ; DATA XREF: .debug_info:00001E61o
		dd offset loc_35B
		dd 4740002h, 35Bh, 391h, 30740002h, 391h, 392h,	4740002h
		dd 392h, 397h, 30740002h, 2 dup(0)
off_3A58	dd offset loc_366	; DATA XREF: .debug_info:00001E93o
		dd offset loc_382
		dd 9F300002h, 382h, 396h, 500001h, 0
		db 3 dup(0)
off_3A77	dd offset _nm_read_uint16 ; DATA XREF: .debug_info:00001EECo
		dd offset loc_39B
		db 2
		dd 9B047400h, 0D1000003h, 2000003h, 0D1307400h,	0D2000003h
		dd 2000003h, 0D2047400h, 0D7000003h, 2000003h, 307400h
		dd 0
		db 3 dup(0)
off_3AAF	dd offset loc_3A6	; DATA XREF: .debug_info:00001F1Eo
		dd offset loc_3C2
		db 2
		dd 0C29F3000h, 0D6000003h, 1000003h, 5000h, 0
		db 2 dup(0)
off_3ACE	dd offset _nm_write_fields ; DATA XREF:	.debug_info:00002013o
		dd offset loc_3D9
		dw 2
		dd 3D90474h, 3DA0000h, 20000h, 3DA0874h, 3DB0000h, 20000h
		dd 3DB0C74h, 3DC0000h, 20000h, 3DC1074h, 3E80000h, 20000h
		dd 3E81474h, 5AE0000h, 30000h, 0AE20D074h, 0AF000005h
		dd 2000005h, 0AF147400h, 0B0000005h, 2000005h, 0B0107400h
		dd 0B1000005h, 2000005h, 0B10C7400h, 0B2000005h, 2000005h
		dd 0B2087400h, 0B4000005h, 2000005h, 0B4047400h, 8E000005h
		dd 3000007h, 20D07400h,	2 dup(0)
off_3B68	dd offset loc_409	; DATA XREF: .debug_info:00002045o
		dd offset loc_428
		dd 9F300002h, 47Fh, 57Ah, 9F300002h, 584h, 595h, 20A0004h
		dd 5B39F20h, 6270000h, 20000h, 6279F30h, 6370000h, 10000h
		dd 63750h, 78900h, 30000200h, 9Fh, 0
		db 0
off_3BB9	dd offset loc_627	; DATA XREF: .debug_info:00002057o
		dd offset loc_632
		db 1, 0, 53h
		dd offset loc_632
		dd offset unk_637
		dd 68730003h, 9Fh, 0
		db 0
off_3BD9	dd offset loc_409	; DATA XREF: .debug_info:00002069o
					; .debug_info:00002079o
		dd offset loc_428
		db 2, 0, 30h
		dd 6379Fh, 64200h, 30000200h, 9Fh, 0
		db 0
off_3BF9	dd offset loc_477	; DATA XREF: .debug_info:00002099o
		dd offset loc_482
		db 1, 0, 50h
		dd offset loc_4C7
		dd offset loc_4D2
		dd 23500001h, 27000005h, 1000005h, 55B5000h, 5630000h
		dd 10000h, 58450h, 58800h, 50000100h, 607h, 614h, 35500001h
		dd 41000007h, 1000007h,	7705000h, 7720000h, 10000h, 50h
		dd 0
		db 0
off_3C59	dd offset loc_463	; DATA XREF: .debug_info:000020A9o
		dd offset loc_472+4
		db 1, 0, 50h
		dd offset loc_4B3
		dd offset loc_4C2+4
		dd 0F500001h, 22000005h, 1000005h, 5475000h, 55A0000h
		dd 10000h, 5F350h, 60600h, 50000100h, 71Ah, 734h, 56500001h
		dd 6F000007h, 1000007h,	5000h, 0
		db 2 dup(0)
off_3CAE	dd offset loc_409	; DATA XREF: .debug_info:000020B9o
		dd offset loc_428
		dw 2
		dd 5D79F30h, 5F20000h, 10000h, 5F250h, 61400h, 91000300h
		dd 6275FCCh, 6370000h, 30000h, 375FCC91h, 42000006h, 2000006h
		dd 499F3000h, 4E000007h, 3000007h, 5FCC9100h, 2	dup(0)
off_3D00	dd offset loc_647	; DATA XREF: .debug_info:000020D6o
		dd offset unk_6A6
		dd 72560001h, 89000007h, 1000007h, 5600h, 0
		db 2 dup(0)
off_3D1E	dd offset loc_647	; DATA XREF: .debug_info:000020E4o
		dd offset loc_65E
		dw 2
		dd 67E9F30h, 68E0000h, 10000h, 77255h, 78900h, 30000200h
		dd 9Fh,	0
		db 0
off_3D49	dd offset loc_64F	; DATA XREF: .debug_info:000020EDo
		dd offset loc_65E
		db 1, 0, 56h
		dd offset loc_65E
		dd offset loc_68A
		dd 9A520001h, 0FA000006h, 1000006h, 74E5600h, 7560000h
		dd 10000h, 77256h, 77C00h, 56000100h, 2	dup(0)
off_3D88	dd offset loc_69A	; DATA XREF: .debug_info:000020F6o
		dd offset loc_69C
		dd 9C500001h, 0A6000006h, 3000006h, 5FC89100h, 6A6h, 6BBh
		dd 0BB520001h, 0C7000006h, 3000006h, 9F017200h,	6C7h, 6D6h
		dd 2720003h, 6D69Fh, 6FA00h, 52000100h,	74Eh, 756h, 520001h
		dd 0
		db 3 dup(0)
off_3DE3	dd offset loc_647	; DATA XREF: .debug_info:000020FFo
		dd offset loc_69A
		db 2
		dd 9A9F3000h, 9C000006h, 1000006h, 69C5000h, 6FA0000h
		dd 30000h, 4E5FC891h, 56000007h, 3000007h, 5FC89100h, 772h
		dd 789h, 9F300002h, 2 dup(0)
off_3E28	dd offset loc_65E	; DATA XREF: .debug_info:00002108o
		dd offset loc_678
		dd 78500001h, 7E000006h, 4000006h, 0E17000h, 6A69Fh, 6BE00h
		dd 51000100h, 6BEh, 6D6h, 0E1750004h, 6E09F00h,	6F70000h
		dd 10000h, 74E51h, 75600h, 51000100h, 2	dup(0)
off_3E78	dd offset _nm_read_header ; DATA XREF: .debug_info:00002382o
		dd offset loc_791
		dd 4740002h, 791h, 792h, 8740002h, 792h, 793h, 0C740002h
		dd 793h, 794h, 10740002h, 794h,	79Ah, 14740002h, 79Ah
		dd 889h, 0D0740003h, 88904h, 88A00h, 74000200h,	88A14h
		dd 88B00h, 74000200h, 88B10h, 88C00h, 74000200h, 88C0Ch
		dd 88D00h, 74000200h, 88D08h, 89000h, 74000200h, 89004h
		dd 8DD00h, 74000300h, 4D0h, 0
		db 2 dup(0)
off_3F12	dd offset loc_7AF	; DATA XREF: .debug_info:000023A5o
		dd offset loc_7CD
		dw 2
a0q		db '0üÕ',7,0
		align 2
		dd offset loc_7E0+4
		dw 1
		dd 7E450h, 83D00h, 91000300h, 8497BC8h,	84D0000h, 10000h
		dd 88E50h, 89A00h, 30000200h, 89A9Fh, 8A200h, 50000100h
		dd 8A2h, 8AAh, 0C8910003h, 8AA7Bh, 8B400h, 30000200h, 8B49Fh
		dd 8D800h, 91000300h, 7BC8h, 0
		db 2 dup(0)
off_3F86	dd offset loc_7AF	; DATA XREF: .debug_info:000023C5o
		dd offset loc_7E5
		dw 2
a0qx		db '0üÂ',7,0
		align 2
		dd offset loc_7ED
		dw 1
		dd 7ED50h, 80100h, 70000300h, 88E9F01h,	89A0000h, 20000h
		dd 8A29F30h, 8B40000h, 10000h, 8BE50h, 8D800h, 70000300h
		dd 9F01h, 0
		db 2 dup(0)
off_3FD6	dd offset loc_7ED	; DATA XREF: .debug_info:000023D3o
		dd offset loc_801
		dw 2
		dd 8069F30h, 8270000h, 10000h, 8B452h, 8BE00h, 52000100h
		dd 8BEh, 8D8h, 9F300002h, 2 dup(0)
off_400C	dd offset loc_7AF	; DATA XREF: .debug_info:000023FCo
		dd offset loc_833
		dd 9F300002h, 833h, 83Dh, 49500001h, 4D000008h,	3000008h
		dd 7BCC9100h, 88Eh, 89Ah, 9F300002h, 89Ah, 8A2h, 0CC910003h
		dd 8A27Bh, 8AA00h, 30000200h, 8AA9Fh, 8B400h, 91000300h
		dd 8B47BC8h, 8D80000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_4076	dd offset _nm_read_fields ; DATA XREF: .debug_info:000024B2o
		dd offset loc_8E1
		dw 2
		dd 8E10474h, 8E20000h, 20000h, 8E20874h, 8E30000h, 20000h
		dd 8E30C74h, 8E40000h, 20000h, 8E41074h, 8EA0000h, 20000h
		dd 8EA1474h, 0A6E0000h,	30000h,	6E01A074h, 6F00000Ah, 200000Ah
		dd 6F147400h, 7000000Ah, 200000Ah, 70107400h, 7100000Ah
		dd 200000Ah, 710C7400h,	7200000Ah, 200000Ah, 72087400h
		dd 7400000Ah, 200000Ah,	74047400h, 0CA00000Ah, 300000Bh
		dd 1A07400h, 2 dup(0)
off_4110	dd offset _nm_read_fields ; DATA XREF: .debug_info:000024D8o
		dd offset loc_922
		dd 4910002h, 922h, 0A56h, 73560001h, 8900000Ah,	100000Bh
		dd 0B895600h, 0B960000h, 20000h, 0B960491h, 0BC50000h
		dd 10000h, 56h,	0
		db 0
off_4151	dd offset loc_90A	; DATA XREF: .debug_info:000024F6o
		dd offset loc_943
		db 2, 0, 30h
		dd 9439Fh, 96200h, 50000100h, 962h, 96Eh, 8C910003h, 96E7Fh
		dd 98500h, 50000100h, 986h, 992h, 0AF500001h, 0BB000009h
		dd 1000009h, 9EB5000h, 9F80000h, 10000h, 0A2F50h, 0A3E00h
		dd 30000200h, 0A849Fh, 0A9000h,	50000100h, 0AC2h, 0AD3h
		dd 1C500001h, 2400000Bh, 100000Bh, 0B3C5000h, 0B400000h
		dd 10000h, 0B4050h, 0B9600h, 30000200h,	0B969Fh, 0B9A00h
		dd 50000100h, 0B9Ah, 0B9Fh, 0AA570001h,	0B900000Bh, 100000Bh
		dd 5000h, 0
		db 2 dup(0)
off_420E	dd offset loc_922	; DATA XREF: .debug_info:00002507o
		dd offset loc_9F8
		dw 3
		dd 0FC7F9291h, 9, 100000Ah, 0A2F5000h, 0AD30000h, 30000h
		dd 0D77F9291h, 0E800000Ah, 100000Ah, 0B0B5000h,	0B450000h
		dd 30000h, 497F9291h, 4D00000Bh, 100000Bh, 0B965000h, 0BCA0000h
		dd 30000h, 7F9291h, 0
		db 3 dup(0)
off_426B	dd offset loc_A0C	; DATA XREF: .debug_info:00002517o
		dd offset loc_A11
		db 3
		dd 7F939100h, 0A15h, 0A24h, 0E3500001h,	0E800000Ah, 300000Ah
		dd 7F939100h, 0AECh, 0AFBh, 59500001h, 5E00000Bh, 300000Bh
		dd 7F939100h, 0B62h, 0B71h, 500001h, 0
		db 3 dup(0)
off_42BB	dd offset loc_922	; DATA XREF: .debug_info:00002527o
		dd offset unk_B89
		db 3
		dd 7F949100h, 0B96h, 0BCAh, 94910003h, 7Fh, 0
		db 0
off_42DD	dd offset loc_912	; DATA XREF: .debug_info:0000255Eo
		dd offset loc_A42
		db 2, 0, 30h
		dd 0A739Fh, 0AAA00h, 30000200h,	0AAA9Fh, 0AAE00h, 50000100h
		dd 0AAEh, 0AC1h, 6520001h, 9600000Bh, 200000Bh,	9A9F3000h
		dd 0AA00000Bh, 200000Bh, 0AA9F3000h, 0B900000Bh, 100000Bh
		dd 5200h, 0
		db 2 dup(0)
off_4336	dd offset _nm_conn_add_request_item ; DATA XREF: .debug_info:0000273Co
		dd offset loc_BCD
		dw 2
		dd 0BCD0474h, 0BCE0000h, 20000h, 0BCE0874h, 0BD10000h
		dd 20000h, 0BD10C74h, 0C150000h, 20000h, 0C153074h, 0C160000h
		dd 20000h, 0C160C74h, 0C170000h, 20000h, 0C170874h, 0C180000h
		dd 20000h, 0C180474h, 0C1D0000h, 20000h, 3074h,	0
		db 2 dup(0)
off_439E	dd offset _nm_send_request ; DATA XREF:	.debug_info:000027BFo
		dd offset loc_C21
		dw 2
		dd 0C210474h, 0C220000h, 20000h, 0C220874h, 0C230000h
		dd 20000h, 0C230C74h, 0C240000h, 20000h, 0C241074h, 0C2A0000h
		dd 20000h, 0C2A1474h, 0E380000h, 30000h, 3804E074h, 3900000Eh
		dd 200000Eh, 39147400h,	3A00000Eh, 200000Eh, 3A107400h
		dd 3B00000Eh, 200000Eh,	3B0C7400h, 3C00000Eh, 200000Eh
		dd 3C087400h, 4000000Eh, 200000Eh, 40047400h, 8A00000Eh
		dd 300000Eh, 4E07400h, 2 dup(0)
off_4438	dd offset _nm_send_request ; DATA XREF:	.debug_info:000027E3o
		dd offset loc_CD8
		dd 4910002h, 0E1Ch, 0E21h, 4910002h, 2 dup(0)
off_4458	dd offset loc_C6E	; DATA XREF: .debug_info:0000282Eo
		dd offset loc_D8F
		dd 9F300002h, 0D8Fh, 0DAAh, 0AA500001h,	0B300000Dh, 100000Dh
		dd 0DB35600h, 0E060000h, 20000h, 0E1C9F30h, 0E210000h
		dd 20000h, 0E3D9F30h, 0E720000h, 20000h, 0E799F30h, 0E7B0000h
		dd 40000h, 9F20020Ah, 0E7Bh, 0E85h, 9F300002h, 2 dup(0)
off_44C0	dd offset loc_CAA	; DATA XREF: .debug_info:0000284Eo
		dd offset loc_CB2
		dd 0B2500001h, 0BD00000Ch, 300000Ch, 7BA89100h,	0CFEh
		dd 0D06h, 6500001h, 1100000Dh, 300000Dh, 7BA89100h, 0E6Dh
		dd 0E72h, 500001h, 0
		db 3 dup(0)
off_4503	dd offset loc_CBE	; DATA XREF: .debug_info:0000285Eo
		dd offset loc_CF2
		db 1
		dd 0D125000h, 0D290000h, 10000h, 0DAB50h, 0DBE00h, 50000100h
		dd 0E3Dh, 0E43h, 72500001h, 7B00000Eh, 100000Eh, 5000h
		dd 0
		db 2 dup(0)
off_4542	dd offset loc_C76	; DATA XREF: .debug_info:00002879o
		dd offset loc_D2A
		dw 3
aS		db 'ëÿ{*',0Dh,0
		dw 7500h
		dd 100000Dh, 0D755000h,	0E8A0000h, 30000h, 7BD891h, 0
		db 3 dup(0)
off_456F	dd offset loc_C76	; DATA XREF: .debug_info:00002889o
		dd offset loc_D45
		db 2
		dd 459F3000h, 7500000Dh, 100000Dh, 0D755000h, 0D7C0000h
		dd 30000h, 1C7BB491h, 2100000Eh, 200000Eh, 3D9F3000h, 7200000Eh
		dd 200000Eh, 9F3000h, 0
		db 3 dup(0)
off_45B3	dd offset loc_DEC	; DATA XREF: .debug_info:000028AAo
		dd offset loc_DF3+4
		db 1
		dd 0DF75000h, 0E060000h, 10000h, 0E7B57h, 0E8500h, 57000100h
		dd 2 dup(0)
off_45DC	dd offset _nm_conn_remove_request_item ; DATA XREF: .debug_info:00002AB1o
		dd offset loc_E8D
		dd 4740002h, 0E8Dh, 0E8Eh, 8740002h, 0E8Eh, 0E91h, 0C740002h
		dd 0E91h, 0ED1h, 30740002h, 0ED1h, 0ED2h, 0C740002h, 0ED2h
		dd 0ED3h, 8740002h, 0ED3h, 0ED8h, 4740002h, 0ED8h, 0EE7h
		dd 30740002h, 0EE7h, 0EE8h, 0C740002h, 0EE8h, 0EE9h, 8740002h
		dd 0EE9h, 0EEAh, 4740002h, 0EEAh, 0EEFh, 30740002h, 2 dup(0)
off_4674	dd offset _nm_conn_find_request	; DATA XREF: .debug_info:00002B28o
		dd offset loc_EF1
		dd 4740002h, 0EF1h, 0EF2h, 8740002h, 0EF2h, 0EF3h, 0C740002h
		dd 0EF3h, 0EF6h, 10740002h, 0EF6h, 0F44h, 30740002h, 0F44h
		dd 0F45h, 10740002h, 0F45h, 0F46h, 0C740002h, 0F46h, 0F47h
		dd 8740002h, 0F47h, 0F48h, 4740002h, 0F48h, 0F4Dh, 30740002h
		dd 2 dup(0)
off_46F4	dd offset loc_F0A	; DATA XREF: .debug_info:00002B5Bo
		dd offset loc_F15
		dd 9F300002h, 0F1Ah, 0F31h, 560001h, 0
		db 3 dup(0)
off_4713	dd offset loc_F0A	; DATA XREF: .debug_info:00002B6Bo
		dd offset loc_F11
		db 2
		dd 119F3000h, 3100000Fh, 100000Fh, 5300h, 0
		db 2 dup(0)
off_4732	dd offset _nm_conn_get_addr ; DATA XREF: .debug_info:00002BB1o
		dd offset loc_F53
		dw 2
		dd 0F530474h, 0F780000h, 20000h, 0F782074h, 0F790000h
		dd 20000h, 0F790474h, 0F820000h, 20000h, 2074h,	0
		db 2 dup(0)
off_476A	dd offset _nm_conn_get_port ; DATA XREF: .debug_info:00002BF6o
		dd offset loc_F87
		dw 2
		dd 0F870474h, 0FAD0000h, 20000h, 0FAD2074h, 0FAE0000h
		dd 20000h, 0FAE0474h, 0FBA0000h, 20000h, 2074h,	0
		db 2 dup(0)
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 47A4h
		dd 1Ch
		db 2, 0
		dd offset off_1124
		dw 4
		dd 0
		dd offset _nm_create_conn
		dd offset unk_FBA
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 47C4h
off_47C4	dd offset loc_68	; DATA XREF: .debug_info:00001BC0o
		dd offset loc_CD
		dd offset loc_D2
		dd offset loc_D8
		dd offset loc_EA
		dd offset loc_EE
		dd 2 dup(0)
off_47E4	dd offset loc_150	; DATA XREF: .debug_info:00001C47o
		dd offset loc_16B
		dd offset loc_170
		dd offset loc_178
		dd 2 dup(0)
off_47FC	dd offset loc_25A	; DATA XREF: .debug_info:off_1D3Do
		dd offset loc_2B0
		dd offset loc_2C9
		dd offset loc_2D0
		dd 2 dup(0)
off_4814	dd offset loc_25A	; DATA XREF: .debug_info:00001D57o
		dd offset loc_2B0
		dd offset loc_2C9
		dd offset loc_2D0
		dd 2 dup(0)
off_482C	dd offset loc_41C	; DATA XREF: .debug_info:000020C6o
		dd offset loc_424
		dd offset loc_590
		dd offset loc_595
		dd offset loc_647
		dd offset loc_6FA
		dd offset loc_750
		dd offset loc_758
		dd offset loc_772
		dd offset loc_789
		dd 2 dup(0)
off_485C	dd offset loc_41C	; DATA XREF: .debug_info:000020DBo
		dd offset loc_424
		dd offset loc_590
		dd offset loc_595
		dd offset loc_647
		dd offset loc_6FA
		dd offset loc_750
		dd offset loc_758
		dd offset loc_772
		dd offset loc_789
		dd 2 dup(0)
off_488C	dd offset loc_DB3	; DATA XREF: .debug_info:0000288Eo
		dd offset loc_E06
		dd offset loc_E7B
		dd offset loc_E85
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 48A4h
off_48A4	dd offset loc_4A3+3	; DATA XREF: .debug_info:00001198o
		dd 2040002h, 1010000h, 0D0EFBh,	1010101h, 1000000h, 2E010000h
		dd 2E2E2F2Eh, 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh
		dd 6B74672Fh, 305F325Fh, 312E322Dh, 696C2F34h, 6C672F62h
		dd 322D6269h, 692F302Eh, 756C636Eh, 2E006564h, 2E2E2F2Eh
		dd 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh, 6B74672Fh
		dd 305F325Fh, 312E322Dh, 6E692F34h, 64756C63h, 6C672F65h
		dd 322D6269h, 672F302Eh, 62696Ch, 772F3A63h, 736B726Fh
		dd 65636170h, 6469702Fh, 2D6E6967h, 65766564h, 69772F6Ch
		dd 2D32336Eh, 2F766564h, 676E696Dh, 2E342D77h, 2F322E37h
		dd 2F6E6962h, 6C2F2E2Eh, 672F6269h, 6D2F6363h, 77676E69h
		dd 342F3233h, 322E372Eh, 2F2E2E2Fh, 2E2F2E2Eh, 2E2E2F2Eh
		dd 636E692Fh, 6564756Ch, 6D6E0000h, 6E6E6F63h, 632Eh, 6C670000h
		dd 6F636269h, 6769666Eh, 100682Eh, 74670000h, 73657079h
		dd 200682Eh, 69740000h,	682E656Dh, 300h, 73616867h, 682E68h
		dd 67000002h, 73696C73h, 682E74h, 6E000002h, 6E6F636Dh
		dd 682E6Eh, 6E000000h, 6569666Dh, 682E646Ch, 0
aStdio_h	db 'stdio.h',0
		dd 6E000003h, 6573756Dh, 682E72h, 6E000000h, 6573756Dh
		dd 63657272h, 2E64726Fh, 68h, 636D6E00h, 61746E6Fh, 682E7463h
		dd 0
aNmevent_h	db 'nmevent.h',0
		align 4
		dd 726D6E00h, 65757165h, 682E7473h, 0
aWindef_h	db 'windef.h',0
		db 3, 2	dup(0)
aCtype_h	db 'ctype.h',0
		dd 67000003h, 2E6D656Dh, 20068h, 74736700h, 6E756672h
		dd 682E7363h, 200h, 682E6F69h, 300h, 626E6977h,	2E657361h
		dd 30068h, 74756700h, 2E736C69h, 20068h, 72747300h, 2E676E69h
		dd 30068h, 64747300h, 2E62696Ch, 30068h, 5000000h
		db 2
		dd offset _nm_create_conn
		db 3, 0ACh, 1
		dd 0D7ADD601h, 0AF083E9Fh, 834CAD90h, 83A28067h, 76837575h
		dd 56F4679Fh, 8720368h,	4A0E0320h, 0BB12086Ah, 1040200h
		dd 4D064A06h, 4020076h,	6740601h, 55930875h, 53A3083Ah
		dd 8B00887h, 200BB12h, 4A060104h, 764D06h, 6010402h, 8750674h
		dd 83A5593h, 88753A3h, 0B32E08B0h, 1040200h, 4E064A06h
		dd 2A2F2308h, 4E2F084Bh, 74036B9Fh, 4A7603C8h, 581A0351h
		dd 3C087A03h, 7E9E037Ah, 31CBC882h, 4D515908h, 58087703h
		dd 0C037E21h, 0D503D608h, 0AF3C8201h, 5C08B208h, 0B208AF3Ch
		dd 22025C08h, 0E40A0312h, 1040200h, 3068206h, 19038275h
		dd 40200ACh, 4A770302h,	40200AFh, 69E0601h, 8AD08A4h, 8EB083Dh
		dd 893D08ADh, 0F2082403h, 3D08D808h, 84A0A03h, 503D08E6h
		dd 4020083h, 6AC0601h, 20085603h, 0BA7DE403h, 5802D003h
		dd 27FBB03h, 1803012Bh,	0AE08E582h, 22033D08h, 7FA703C8h
		dd 3FC2E08h, 0F003BA23h, 8873C7Dh, 7F750814h, 3D8BDDDh
		dd 0BD3FF209h, 3C6E03BBh, 2FCA3D75h, 7415031Bh,	3C01ED03h
		dd 877E608h, 0F903863Fh, 3D2E087Dh, 5801FD03h, 87DF103h
		dd 0D0039A90h, 0D703C802h, 12087400h, 85985DEh,	86F38513h
		dd 1E4B3D08h, 2040200h,	62E0806h, 0C1085B5Dh, 402008Fh
		dd 64A0602h, 3A19FE8h, 3E4085Eh, 6203BA1Bh, 8140366h, 0E46C0320h
		dd 4A082503h, 0B2D60886h, 4020085h, 6820601h, 8244B86h
		dd 40200ADh, 6820601h, 857508AFh, 8CD85F3h, 200853Dh, 0BA060104h
		dd 82120306h, 1040200h,	3068206h, 85F3821Bh, 163C02h, 6010402h
		dd 83C10674h, 85403BEh,	0E985F3C8h, 7508AE4Bh, 25E03BDh
		dd 4DF3013Eh, 4E3D0883h, 3153C02h, 0CA03F253h, 4B03BA00h
		dd 0C00382h, 68034B9Eh,	0AC2003BAh, 0ADC878h, 6010402h
		dd 834D064Ah, 8D032108h, 290087Eh, 85DB1240h, 1040200h
		dd 86068206h, 8142402h,	4408C03Dh, 3D08E508h, 8BC4BC2h
		dd 193C0267h, 75084BDAh, 2D02B98Ah, 6B83BD14h, 7FBE0383h
		dd 0C503D6h, 8480358h, 22303D6h, 0E030134h, 0A903A574h
		dd 0ADC87401h, 1040200h, 4D064A06h, 57F32108h, 0D6780859h
		dd 753D4DBEh, 402002Fh,	64A0601h, 34737BDh, 0BE082E0Bh
		dd 2F4DBB74h, 74784DEFh, 0EF3D4DBBh, 50277h
		db 2 dup(1)
		align 10h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 4D50h
aBuffer		db 'buffer',0           ; DATA XREF: .debug_info:0000207Eo
					; .debug_info:000023AAo ...
aRequest	db 'request',0          ; DATA XREF: .debug_info:00002755o
					; .debug_info:00002815o ...
aTotal_bytes	db 'total_bytes',0      ; DATA XREF: .debug_info:00001A68o
					; .debug_info:00001AF6o
aBytes_to_send	db 'bytes_to_send',0    ; DATA XREF: .debug_info:0000209Eo
					; .debug_info:00002843o
aConn		db 'conn',0             ; DATA XREF: .debug_info:00001693o
					; .debug_info:000019DBo ...
aFields		db 'fields',0           ; DATA XREF: .debug_info:0000166Fo
					; .debug_info:0000202Co ...
aMethod		db 'method',0           ; DATA XREF: .debug_info:000014E9o
					; .debug_info:00001A9Co ...
aTrans_id	db 'trans_id',0         ; DATA XREF: .debug_info:00001408o
					; .debug_info:00002B41o
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 4D98h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch
		dd offset unk_FBB-5D73h
		dd offset unk_4E
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 7F300E43h
		dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 38h
		dd 54h
		dd offset unk_FBB-5D5Bh
		dd offset loc_A1+2
		dd 80E4100h, 0E410286h,	4303830Ch, 7B02300Eh, 410C0E0Ah
		dd 41080EC3h, 46040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
		dd 0B4104h, 48h, 90h
		dd offset unk_FBB-5CF3h
		dd offset loc_9E+2
		dd 80E4100h, 0E410286h,	4303830Ch, 5202200Eh, 410C0E0Ah
		dd 41080EC3h, 43040EC6h, 0E0A5E0Bh, 0EC3410Ch, 0EC64108h
		dd 540B4804h, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 48h
		dd 0DCh
		dd offset unk_FBB-5C9Fh
		dd offset loc_9E+2
		dd 80E4100h, 0E410286h,	4303830Ch, 5202200Eh, 410C0E0Ah
		dd 41080EC3h, 43040EC6h, 0E0A5E0Bh, 0EC3410Ch, 0EC64108h
		dd 540B4804h, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 44h
		dd 128h
		dd offset unk_FBB-5C4Bh
		dd offset loc_A1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 4C0E6C02h, 5C500E41h, 41140E0Ah, 41100EC3h
		dd 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 3Ch, 170h
		dd offset unk_FBB-5BEFh
		dd offset loc_79+4
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A4202h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 18h, 1B0h
		dd offset unk_FBB-5BAFh
		dd offset loc_3E+1
		dd 300E4300h, 40E0A76h,	0B41h, 18h, 1CCh
		dd offset unk_FBB-5B8Bh
		dd offset loc_3E+1
		dd 300E4300h, 40E0A76h,	0B41h, 40h, 1E8h
		dd offset unk_FBB-5B67h
		dd offset loc_3B6
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0D00E4C05h, 1C60320h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 42040EC5h, 0Bh, 3Ch, 22Ch
		dd offset unk_FBB-57F3h
		dd offset loc_14D
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0D00E4605h, 0AEF0204h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B43040Eh, 40h, 26Ch
		dd offset unk_FBB-56E3h
		dd offset loc_2EA
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0A00E4605h, 1840301h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 42040EC5h, 0Bh, 2Ch, 2B0h
		dd offset unk_FBB-543Bh
		dd offset loc_51
		dd 80E4100h, 0E410286h,	4303830Ch, 4402300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 40h, 2E0h
		dd offset unk_FBB-5417h
		dd offset unk_26A
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0E00E4605h, 20E0304h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 44040EC5h, 0Bh, 38h, 324h
		dd offset unk_FBB-51EFh
		dd offset loc_62+1
		dd 80E4100h, 0E410286h,	4303830Ch, 4002300Eh, 410C0E0Ah
		dd 41080EC3h, 45040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
		dd 0B4104h, 34h, 360h
		dd offset unk_FBB-51C7h
		dd offset loc_59+4
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A4Eh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
		dd 398h
		dd offset unk_FBB-519Fh
		dd offset loc_31+1
		dd 200E4300h, 40E0A65h,	0B41h, 18h, 3B4h
		dd offset unk_FBB-5187h
		dd offset loc_34+2
		dd 200E4300h, 40E0A66h,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _nm_create_conn+Er
					; _nm_create_conn+38r ...
		extrn ___chkstk_ms:near	; CODE XREF: _nm_write_fields+9p
		extrn _g_malloc0:near	; CODE XREF: _nm_create_conn+20p
					; _nm_read_fields+1C3p
		extrn _g_strdup:near	; CODE XREF: _nm_create_conn:loc_2Ap
		extrn ___stack_chk_fail:near ; CODE XREF: _nm_create_conn:loc_49p
					; _nm_release_conn:loc_EEp ...
		extrn _nm_release_request:near ; CODE XREF: _nm_release_conn:loc_79p
					; _nm_send_request+25Ep ...
		extrn _g_slist_free:near ; CODE	XREF: _nm_release_conn+3Bp
		extrn _g_free:near	; CODE XREF: _nm_release_conn:loc_A1p
					; _nm_release_conn+62p	...
; int __cdecl write(int, const void *, unsigned	int)
		extrn _write:near	; CODE XREF: _nm_tcp_write:loc_170j
; int __cdecl read(int,	void *,	unsigned int)
		extrn _read:near	; CODE XREF: _nm_tcp_read:loc_210j
		extrn __errno:near	; CODE XREF: _nm_read_all:loc_28Bp
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn _Sleep@4:near	; CODE XREF: _nm_read_all+6Ep
		extrn _g_snprintf:near	; CODE XREF: _nm_write_fields+86p
					; _nm_write_fields+D6p	...
		extrn _nm_count_fields:near ; CODE XREF: _nm_write_fields+1F6p
		extrn _g_malloc:near	; CODE XREF: _nm_write_fields+2B9p
; char *__cdecl	strchr(const char *, int)
		extrn _strchr:near	; CODE XREF: _nm_read_header:loc_7E0p
; int __cdecl atoi(const char *)
		extrn _atoi:near	; CODE XREF: _nm_read_header+9Ap
		extrn _nm_field_add_number:near	; CODE XREF: _nm_read_fields+147p
		extrn _nm_free_fields:near ; CODE XREF:	_nm_read_fields+171p
					; _nm_send_request+1F5p
		extrn _nm_field_add_pointer:near ; CODE	XREF: _nm_read_fields+21Ep
					; _nm_read_fields+294p	...
		extrn _nm_request_add_ref:near ; CODE XREF: _nm_conn_add_request_item+23p
		extrn _g_slist_append:near ; CODE XREF:	_nm_conn_add_request_item+32p
		extrn _nm_copy_field_array:near	; CODE XREF: _nm_send_request+105p
		extrn _g_strdup_printf:near ; CODE XREF: _nm_send_request+120p
; time_t __cdecl time(time_t *)
		extrn _time:near	; CODE XREF: _nm_send_request+19Ap
		extrn _nm_create_request:near ;	CODE XREF: _nm_send_request+1C5p
		extrn _g_slist_remove:near ; CODE XREF:	_nm_conn_remove_request_item+2Ap
		extrn _nm_request_get_trans_id:near ; CODE XREF: _nm_conn_find_request+31p


		end

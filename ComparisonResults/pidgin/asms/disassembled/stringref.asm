;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	93435A4950145776022767D01FFF1382
; Input	CRC32 :	7CC60B43

; File Name   :	d:\pidgin-o\stringref.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_gs_idle_cb	proc near		; DATA XREF: _purple_stringref_new_noref+84o
					; .debug_info:000003E4o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h

		sub	esp, 2Ch
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, ds:_gclist
		test	eax, eax
		jnz	short loc_36
		jmp	short loc_50
; ---------------------------------------------------------------------------
		align 4

loc_1C:					; CODE XREF: _gs_idle_cb+3Ej
					; _gs_idle_cb+4Dj
		mov	edx, [eax+4]
		mov	ds:_gclist, edx
		mov	[esp+2Ch+var_2C], eax
		call	_g_list_free_1

loc_2D:					; DATA XREF: .debug_info:00000A94o
					; .eh_frame:00001C7Co
		mov	eax, ds:_gclist

loc_32:					; DATA XREF: .eh_frame:00001CC8o
		test	eax, eax
		jz	short loc_50

loc_36:					; CODE XREF: _gs_idle_cb+15j
		mov	edx, [eax]

loc_38:					; DATA XREF: .debug_loc:off_1368o
		test	dword ptr [edx], 7FFFFFFFh
		jnz	short loc_1C

loc_40:					; DATA XREF: .debug_info:00000A72o
					; .debug_loc:off_138Eo
		mov	[esp+2Ch+var_2C], edx

loc_43:					; DATA XREF: .eh_frame:00001D04o
					; .debug_loc:0000136Co	...
		call	_g_free

loc_48:					; DATA XREF: .debug_info:00000A8Ao
		mov	eax, ds:_gclist
		jmp	short loc_1C
; ---------------------------------------------------------------------------
		align 10h

loc_50:					; CODE XREF: _gs_idle_cb+17j
					; _gs_idle_cb+34j
					; DATA XREF: ...
		xor	eax, eax

loc_52:					; DATA XREF: .debug_loc:00001398o
		mov	edx, [esp+2Ch+var_10]

loc_56:					; DATA XREF: .debug_loc:000015D0o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_62
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_62:					; CODE XREF: _gs_idle_cb+5Cj
		call	___stack_chk_fail
_gs_idle_cb	endp

; ---------------------------------------------------------------------------
unk_67		db  90h	; ê		; DATA XREF: .debug_info:00000A33o
					; .debug_info:00000A9Do ...

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_new
_purple_stringref_new proc near		; DATA XREF: .debug_info:00000AC4o
					; .debug_info:00000F8Do ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_69:					; DATA XREF: .debug_loc:000013A5o
		push	esi
		push	ebx

loc_6B:					; DATA XREF: .eh_frame:00001CE4o
					; .eh_frame:00001BD4o ...
		sub	esp, 20h

loc_6E:					; DATA XREF: .eh_frame:00001C98o
		mov	esi, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_CC
		mov	ecx, 0FFFFFFFFh
		mov	edi, esi
		repne scasb

loc_8A:					; DATA XREF: .debug_loc:00001425o
		mov	ebx, ecx
		not	ebx
		lea	eax, [ebx+7]
		mov	[esp+2Ch+var_2C], eax
		call	_g_malloc

loc_99:					; DATA XREF: .debug_info:00000B01o
		mov	edi, eax

loc_9B:					; DATA XREF: .debug_loc:off_1441o
		mov	[esp+2Ch+var_24], ebx
		mov	[esp+2Ch+var_28], esi
		lea	eax, [eax+4]

loc_A6:					; DATA XREF: .debug_loc:00001445o
					; .debug_loc:0000144Co
		mov	[esp+2Ch+var_2C], eax

loc_A9:					; DATA XREF: .eh_frame:00001C0Co
		call	_g_strlcpy

loc_AE:					; DATA XREF: .debug_info:00000B16o
		mov	dword ptr [edi], 1

loc_B4:					; CODE XREF: _purple_stringref_new+66j
					; DATA XREF: .debug_loc:00001450o
		mov	eax, edi
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_D0
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_CC:					; CODE XREF: _purple_stringref_new+17j
		xor	edi, edi
		jmp	short loc_B4
; ---------------------------------------------------------------------------

loc_D0:					; CODE XREF: _purple_stringref_new+58j
		call	___stack_chk_fail
_purple_stringref_new endp

; ---------------------------------------------------------------------------
unk_D5		db  8Dh	; ç		; DATA XREF: .debug_info:00000AC8o
					; .debug_info:00000B39o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


; int __cdecl purple_stringref_new_noref(char *)
		public _purple_stringref_new_noref
_purple_stringref_new_noref proc near	; DATA XREF: .debug_info:00000B66o
					; .debug_loc:off_145Fo	...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_D9:					; DATA XREF: .debug_loc:00001463o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	esi, esi
		jz	loc_178
		mov	ecx, 0FFFFFFFFh
		mov	edi, esi
		repne scasb

loc_FE:					; DATA XREF: .debug_loc:000014E3o
		not	ecx
		add	ecx, 7
		mov	[esp+2Ch+var_2C], ecx
		call	_g_malloc

loc_10B:				; DATA XREF: .debug_info:00000B98o
		mov	ebx, eax

loc_10D:				; DATA XREF: .debug_loc:off_14FFo
		mov	[esp+2Ch+var_28], esi ;	char *
		lea	eax, [eax+4]

loc_114:				; DATA XREF: .debug_loc:00001503o
		mov	[esp+2Ch+var_2C], eax ;	char *
		call	_strcpy

loc_11C:				; DATA XREF: .debug_info:00000BA1o
		mov	dword ptr [ebx], 80000000h
		mov	eax, ds:_gclist
		test	eax, eax
		jz	short loc_154

loc_12B:				; CODE XREF: _purple_stringref_new_noref+9Dj
		mov	[esp+2Ch+var_28], ebx
		mov	[esp+2Ch+var_2C], eax
		call	_g_list_prepend

loc_137:				; DATA XREF: .debug_info:00000BBDo
		mov	ds:_gclist, eax

loc_13C:				; CODE XREF: _purple_stringref_new_noref+A2j
		mov	eax, ebx
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_17C
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_154:				; CODE XREF: _purple_stringref_new_noref+51j
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], offset _gs_idle_cb
		mov	[esp+2Ch+var_2C], 0

loc_16B:				; DATA XREF: .debug_info:00000DBCo
		call	_purple_timeout_add

loc_170:				; DATA XREF: .debug_info:00000BD2o
		mov	eax, ds:_gclist
		jmp	short loc_12B
; ---------------------------------------------------------------------------
		align 4

loc_178:				; CODE XREF: _purple_stringref_new_noref+17j
		xor	ebx, ebx
		jmp	short loc_13C
; ---------------------------------------------------------------------------

loc_17C:				; CODE XREF: _purple_stringref_new_noref+70j
		call	___stack_chk_fail
_purple_stringref_new_noref endp

; ---------------------------------------------------------------------------
unk_181		db  8Dh	; ç		; DATA XREF: .debug_info:00000B6Ao
					; .debug_info:off_BF6o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_printf
_purple_stringref_printf proc near	; DATA XREF: .debug_info:00000C20o
					; .debug_loc:off_1528o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	edi

loc_185:				; DATA XREF: .debug_loc:0000152Co
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_1E8
		lea	edi, [esp+2Ch+arg_4]

loc_1A1:				; DATA XREF: .debug_loc:off_15C6o
		mov	[esp+2Ch+var_28], edi
		mov	[esp+2Ch+var_2C], ebx
		call	_g_printf_string_upper_bound

loc_1AD:				; DATA XREF: .debug_info:00000C61o
		add	eax, 8
		mov	[esp+2Ch+var_2C], eax
		call	_g_malloc

loc_1B8:				; DATA XREF: .debug_info:00000C7Do
		mov	esi, eax

loc_1BA:				; DATA XREF: .debug_loc:off_15A8o
		mov	[esp+2Ch+var_24], edi
		mov	[esp+2Ch+var_28], ebx
		lea	eax, [eax+4]

loc_1C5:				; DATA XREF: .debug_loc:000015ACo
		mov	[esp+2Ch+var_2C], eax
		call	_libintl_vsprintf

loc_1CD:				; DATA XREF: .debug_info:00000C86o
		mov	dword ptr [esi], 1

loc_1D3:				; CODE XREF: _purple_stringref_printf+66j
					; DATA XREF: .debug_loc:000015CAo
		mov	eax, esi
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1EC
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_1E8:				; CODE XREF: _purple_stringref_printf+17j
		xor	esi, esi
		jmp	short loc_1D3
; ---------------------------------------------------------------------------

loc_1EC:				; CODE XREF: _purple_stringref_printf+5Bj
		call	___stack_chk_fail
_purple_stringref_printf endp

; ---------------------------------------------------------------------------
unk_1F1		db  8Dh	; ç		; DATA XREF: .debug_info:00000C24o
					; .debug_info:00000CA9o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_ref
_purple_stringref_ref proc near		; DATA XREF: .debug_info:00000CD0o
					; .debug_loc:off_15D9o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_1F7:				; DATA XREF: .debug_loc:000015DDo
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_20D
		inc	dword ptr [eax]

loc_20D:				; CODE XREF: _purple_stringref_ref+15j
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_21D
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_21D:				; CODE XREF: _purple_stringref_ref+23j
		call	___stack_chk_fail
_purple_stringref_ref endp

; ---------------------------------------------------------------------------
unk_222		db  66h	; f		; DATA XREF: .debug_info:off_CD4o
					; .debug_info:00000CF0o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_unref
_purple_stringref_unref	proc near	; DATA XREF: .debug_info:00000D15o
					; .debug_loc:off_1611o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_225:				; DATA XREF: .debug_loc:00001615o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]

loc_22C:				; DATA XREF: .debug_line:000018A6o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_264
		mov	eax, [ebx]
		dec	eax

loc_23E:				; DATA XREF: .debug_info:00000F54o
					; .debug_info:00000F68o ...
		mov	[ebx], eax
		test	eax, 7FFFFFFFh
		jnz	short loc_264
		test	eax, eax
		js	short loc_278

loc_24B:				; CODE XREF: _purple_stringref_unref+6Aj
					; DATA XREF: .debug_info:00000D39o ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_290
		mov	[esp+2Ch+arg_0], ebx

loc_25B:				; DATA XREF: .debug_ranges:00001844o
		add	esp, 28h
		pop	ebx

loc_25F:				; DATA XREF: .debug_loc:00001689o
					; .debug_loc:00001690o	...
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_264:				; CODE XREF: _purple_stringref_unref+15j
					; _purple_stringref_unref+21j
					; DATA XREF: ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_290
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------
		align 4

loc_278:				; CODE XREF: _purple_stringref_unref+25j
		mov	[esp+2Ch+var_28], ebx
		mov	eax, ds:_gclist
		mov	[esp+2Ch+var_2C], eax
		call	_g_list_remove

loc_289:				; DATA XREF: .debug_info:00000D5Co
					; .debug_info:00000FC4o
		mov	ds:_gclist, eax
		jmp	short loc_24B
; ---------------------------------------------------------------------------

loc_290:				; CODE XREF: _purple_stringref_unref+31j
					; _purple_stringref_unref+4Aj
		call	___stack_chk_fail
_purple_stringref_unref	endp

; ---------------------------------------------------------------------------
unk_295		db  8Dh	; ç		; DATA XREF: .debug_info:00000D19o
					; .debug_info:00000D71o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_value
_purple_stringref_value	proc near	; DATA XREF: .debug_info:00000D7Fo
					; .debug_loc:off_16A4o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_29B:				; DATA XREF: .debug_loc:000016A8o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_2C2
		add	eax, 4

loc_2B2:				; CODE XREF: _purple_stringref_value+2Cj
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_2C6
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_2C2:				; CODE XREF: _purple_stringref_value+15j
		xor	eax, eax
		jmp	short loc_2B2
; ---------------------------------------------------------------------------

loc_2C6:				; CODE XREF: _purple_stringref_value+24j
		call	___stack_chk_fail
_purple_stringref_value	endp

; ---------------------------------------------------------------------------
unk_2CB		db  90h	; ê		; DATA XREF: .debug_info:00000D83o
					; .debug_info:00000D99o

; =============== S U B	R O U T	I N E =======================================


; int __cdecl purple_stringref_cmp(char	*, char	*)
		public _purple_stringref_cmp
_purple_stringref_cmp proc near		; DATA XREF: .debug_info:00000DC0o
					; .debug_loc:off_16DCo

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch

loc_2CF:				; DATA XREF: .debug_loc:000016E0o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]

loc_2D7:				; DATA XREF: .debug_line:off_18A0o
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ecx
		xor	ecx, ecx
		cmp	eax, edx
		jz	short loc_320

loc_2E7:				; DATA XREF: .debug_info:00000DF0o
					; .debug_loc:off_172Co	...
		test	edx, edx
		jz	short loc_314
		add	edx, 4

loc_2EE:				; DATA XREF: .debug_info:00000E0Do
					; .debug_loc:00001730o	...
		test	eax, eax
		jz	short loc_31C

loc_2F2:				; CODE XREF: _purple_stringref_cmp+4Cj
		add	eax, 4

loc_2F5:				; CODE XREF: _purple_stringref_cmp+52j
					; DATA XREF: .debug_loc:00001766o ...
		mov	ecx, [esp+1Ch+var_10]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_332
		mov	[esp+1Ch+arg_4], edx ; char *
		mov	[esp+1Ch+arg_0], eax ; char *
		add	esp, 1Ch
		jmp	_strcmp
; ---------------------------------------------------------------------------

loc_311:				; DATA XREF: .debug_info:00000E26o
					; .debug_info:00000F21o ...
		lea	esi, [esi+0]

loc_314:				; CODE XREF: _purple_stringref_cmp+1Dj
					; DATA XREF: .debug_ranges:00001860o
		xor	edx, edx

loc_316:				; DATA XREF: .debug_ranges:00001864o
					; .debug_ranges:00001878o
		test	eax, eax
		jnz	short loc_2F2
		xchg	ax, ax

loc_31C:				; CODE XREF: _purple_stringref_cmp+24j
		xor	eax, eax
		jmp	short loc_2F5
; ---------------------------------------------------------------------------

loc_320:				; CODE XREF: _purple_stringref_cmp+19j
					; DATA XREF: .debug_ranges:0000187Co
		xor	eax, eax
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_332
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_332:				; CODE XREF: _purple_stringref_cmp+33j
					; _purple_stringref_cmp+60j
		call	___stack_chk_fail
_purple_stringref_cmp endp

; ---------------------------------------------------------------------------
unk_337		db  90h	; ê		; DATA XREF: .debug_info:00000DC4o
					; .debug_info:00000E30o

; =============== S U B	R O U T	I N E =======================================


		public _purple_stringref_len
_purple_stringref_len proc near		; DATA XREF: .debug_info:00000E57o
					; .debug_loc:off_1798o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_339:				; DATA XREF: .debug_loc:0000179Co
		sub	esp, 18h
		mov	edi, [esp+1Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax

loc_34B:				; DATA XREF: .debug_info:00000E7Bo
					; .debug_loc:off_17E8o	...
		test	edi, edi
		jz	short loc_374
		add	edi, 4

loc_352:				; CODE XREF: _purple_stringref_len+3Ej
					; DATA XREF: .debug_loc:000017ECo ...
		xor	eax, eax

loc_354:				; DATA XREF: .debug_info:000009FCo
					; .debug_info:off_B80o	...
		mov	ecx, 0FFFFFFFFh
		repne scasb
		not	ecx
		lea	eax, [ecx-1]
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_378
		add	esp, 18h
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_374:				; CODE XREF: _purple_stringref_len+15j
					; DATA XREF: .debug_ranges:00001890o
		xor	edi, edi
		jmp	short loc_352
; ---------------------------------------------------------------------------

loc_378:				; CODE XREF: _purple_stringref_len+32j
					; DATA XREF: .debug_ranges:00001894o
		call	___stack_chk_fail
_purple_stringref_len endp

; ---------------------------------------------------------------------------
unk_37D		db  90h	; ê		; DATA XREF: .debug_info:000003E8o
					; .debug_info:00000E5Bo ...
		db  90h	; ê
unk_37F		db  90h	; ê		; DATA XREF: .eh_frame:00001BB4o
					; .eh_frame:00001BD0o ...
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 384h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_gclist		dd ?			; DATA XREF: _gs_idle_cb+Er
					; _gs_idle_cb+1Fw ...
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 388h
off_388		dd offset off_D15+2	; DATA XREF: .debug_aranges:00001826o
		db 2, 0
		dd offset dword_10A4
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		db    1
aStringref_c	db 'stringref.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple',0
		dd offset _gs_idle_cb
		dd offset unk_37D
		dd offset off_18A0
dword_3F0	dd 6E0402h, 1030000h, 61686306h, 2030072h, 6F687307h, 75207472h
		dd 6769736Eh, 2064656Eh, 746E69h, 7A697304h, 745F65h, 9AD502h
		dd 4030000h, 736E7507h,	656E6769h, 6E692064h, 5F040074h
		dd 756E675Fh, 61765F63h, 73696C5Fh, 28030074h, 0C0h, 5F5F0405h
		dd 6C697562h, 5F6E6974h, 6C5F6176h, 747369h, 6Eh, 6F695F06h
		dd 667562h, 6F810420h, 7000001h, 7274705Fh, 68830400h
		dd 2000000h, 5F070023h,	746E63h, 16F8404h, 23020000h, 625F0704h
		dd 657361h, 688504h, 23020000h,	665F0708h, 67616Ch, 16F8604h
		dd 23020000h, 665F070Ch, 656C69h, 16F8704h, 23020000h
		dd 635F0710h, 62726168h, 4006675h, 16F88h, 14230200h, 75625F07h
		dd 7A697366h, 6F890400h, 2000001h, 5F071823h, 66706D74h
		dd 656D616Eh, 688A0400h, 2000000h, 3001C23h, 6E690504h
		dd 46040074h, 454C49h, 0D88B04h, 8030000h, 6E6F6C05h, 6F6C2067h
		dd 6920676Eh, 300746Eh,	6F6C0504h, 6920676Eh, 300746Eh
		dd 68730502h, 2074726Fh, 746E69h, 5F617604h, 7473696Ch
		dd 0AA660300h, 3000000h, 6F6C0704h, 7520676Eh, 6769736Eh
		dd 2064656Eh, 746E69h, 73070403h, 74657A69h, 657079h, 64040803h
		dd 6C62756Fh, 0C030065h, 6E6F6C04h, 6F642067h, 656C6275h
		dd 6010300h, 6E676973h,	63206465h, 726168h, 75080103h
		dd 6769736Eh, 2064656Eh, 72616863h, 75670400h, 33746E69h
		dd 27050032h, 9Ah, 6C070803h, 20676E6Fh, 676E6F6Ch, 736E7520h
		dd 656E6769h, 6E692064h, 67040074h, 657A6973h, 9A5A0500h
		dd 8000000h, 63670404h,	726168h, 6E2D06h, 67040000h, 746E69h
		dd 16F3006h, 67040000h,	6C6F6F62h, 6E6165h, 25A3106h, 67040000h
		dd 746E6975h, 9A360600h, 3000000h, 6C660404h, 74616Fh
		dd 6F706704h, 65746E69h, 4C060072h, 24Bh, 6F636704h, 7074736Eh
		dd 746E696Fh, 6007265h,	2B14Dh,	0B7040200h, 9000002h, 2BE0402h
		dd 4D0A0000h, 2000002h,	24D04h,	4C470400h, 747369h, 2D62607h
		dd 5F060000h, 73694C47h, 70C0074h, 31328h, 61640700h, 7006174h
		dd 28C2Ah, 230200h, 78656E07h, 2B070074h, 313h,	7042302h
		dd 76657270h, 132C0700h, 2000003h, 2000823h, 2C904h, 1F040200h
		dd 0B000003h, 26601h, 32F00h, 28C0C00h,	4000000h, 756F5347h
		dd 46656372h, 636E75h, 3192608h, 4020000h, 76h,	6E0Dh
		dd 35800h, 1D00E00h, 0
		db    2
		db 4, 5Eh, 3
		db    0
		align 2
		dw 6E0Ah
		db    0
		db 2 dup(0), 0Fh
aVarenum	db 'VARENUM',0
		db    4
		db 11h,	73h, 0DFh
		db    5
		db 2 dup(0), 10h
aVt_empty	db 'VT_EMPTY',0
		align 2
		dw 5610h
aT_null		db 'T_NULL',0           ; DATA XREF: .debug_info:00000A7Co
		db 1
		db  10h
aVt_i2		db 'VT_I2',0
		db 2
		db  10h
aVt_i4		db 'VT_I4',0            ; DATA XREF: .debug_info:00000A3Co
		db 3
		db  10h
aVt_r4		db 'VT_R4',0
		db 4
		db  10h
aVt_r8		db 'VT_R8',0
		db 5
		db  10h
aVt_cy		db 'VT_CY',0
		db 6
		db  10h
aVt_date	db 'VT_DATE',0
		db 7, 10h, 56h
aT_bstr		db 'T_BSTR',0
		db 8
		db  10h
aVt_dispatch	db 'VT_DISPATCH',0
		db 9, 10h, 56h
aT_error	db 'T_ERROR',0
		db  0Ah
		db 10h,	56h, 54h
a_bool		db '_BOOL',0
		dw 100Bh
aVt_variant	db 'VT_VARIANT',0
		db 0Ch
		db  10h
aVt_unknown	db 'VT_UNKNOWN',0
		db  0Dh
		db 10h,	56h, 54h
a_decimal	db '_DECIMAL',0         ; DATA XREF: .debug_info:00000B09o
		db 0Eh,	10h, 56h
aT_i1		db 'T_I1',0
		db 2 dup(10h), 56h
aT_ui1		db 'T_UI1',0
		dw 1011h
aVt_ui2		db 'VT_UI2',0
		db 12h
unk_7B0		db  10h			; DATA XREF: .debug_info:00000B1Eo
aVt_ui4		db 'VT_UI4',0
		db  13h
		db 10h,	56h, 54h
		db  5Fh	; _
		db 49h,	38h, 0
		db  14h
		db 10h,	56h, 54h
a_ui8		db '_UI8',0
		db 15h,	10h, 56h
aT_int		db 'T_INT',0
		dw 1016h
aVt_uint	db 'VT_UINT',0
		db  17h
		db 10h,	56h, 54h
a_void		db '_VOID',0
		dw 1018h
aVt_hresult	db 'VT_HRESULT',0
		db 19h
		db  10h
aVt_ptr		db 'VT_PTR',0
		db  1Ah
		db 10h,	56h, 54h
a_safearray	db '_SAFEARRAY',0
		db 1Bh
		db  10h
aVt_carray	db 'VT_CARRAY',0
		db 1Ch
		db  10h
aVt_userdefined	db 'VT_USERDEFINED',0
		db  1Dh
		db 10h,	56h, 54h
a_lpstr		db '_LPSTR',0
		db 1Eh
unk_834		db  10h			; DATA XREF: .debug_info:00000BA9o
aVt_lpwstr	db 'VT_LPWSTR',0
		db 1Fh
		db  10h
aVt_record	db 'VT_RECORD',0        ; DATA XREF: .debug_info:00000BC5o
		db 24h
		db  10h
aVt_int_ptr	db 'VT_INT_PTR',0
		db  25h	; %
		db 10h,	56h, 54h
a_uint_ptr	db '_UINT_PTR',0
		dw 1026h
aVt_filetime	db 'VT_FILETIME',0      ; DATA XREF: .debug_info:00000BDAo
		db '¿',0
		dw 5610h
aT_blob		db 'T_BLOB',0
		db '¡',0
		db 10h,	56h, 54h
a_stream	db '_STREAM',0
		db '¬',0
		dw 5610h
aT_storage	db 'T_STORAGE',0
		db '√',0
		db  10h
aVt_streamed_ob	db 'VT_STREAMED_OBJECT',0
		db 'ƒ',0
		dw 5610h
aT_stored_objec	db 'T_STORED_OBJECT',0
		db '≈',0
		dw 5610h
aT_blob_object	db 'T_BLOB_OBJECT',0
		db '∆',0
dword_8D8	dd 5F545610h, 0C7004643h, 54561000h, 534C435Fh,	0C8004449h
		dd 54561000h, 5453425Fh, 4C425F52h, 0FF00424Fh,	5456101Fh
		dd 4345565Fh, 524F54h, 56102080h, 52415F54h, 594152h, 1000C080h
		dd 425F5456h, 46455259h, 1808000h, 5F545610h, 45534552h
		dd 44455652h, 2808000h,	5F545610h, 454C4C49h, 4C4147h
		dd 1003FFFFh, 495F5456h, 47454C4Ch, 414D4C41h, 44454B53h
		dd 101FFF00h, 545F5456h, 4D455059h, 4B5341h, 4001FFFh
		dd 70727550h, 7453656Ch, 676E6972h, 666572h, 5F62409h
		dd 5F060000h, 70727550h, 7453656Ch, 676E6972h, 666572h
		dd 2E2C0108h, 7000006h,	666572h, 2152D01h, 23020000h, 61760700h
		dd 65756Ch, 3483401h, 23020000h, 73110004h, 6E697274h
		dd 66657267h, 6572665Fh, 99010065h, 6520101h
		db 2 dup(0), 12h
		dd offset aStringref	; "stringref"
		db 1
		db  99h	; ô
		dd offset dword_3F0+262h
		align 2
		dw 402h
		dd offset dword_3F0+1EFh
		db  13h
		db 1, 70h, 75h
aRple_stringref	db 'rple_stringref_value',0 ; DATA XREF: .debug_info:00000D64o
		db 1, 8Ah, 1
		dd offset loc_354+4
		dd 68901h
		db 0, 12h
		dd offset aStringref	; "stringref"
		dw 8A01h
		dd offset dword_3F0+299h
dword_A10	dd 8F040200h, 0A000006h, 5DFh, 5F736714h, 656C6469h, 62635Fh
					; DATA XREF: .debug_info:00000D8Co
		dd 6601A401h
		db 2, 2	dup(0)
		dd offset _gs_idle_cb
		dd offset unk_67
		dd offset dword_1330
		db 1
		dd offset aVt_i4+5	; ""
		dd 74616415h, 0A4010061h, 28Ch,	16009102h, 666572h, 652A601h
		db 2 dup(0)
		dd offset off_1368
		dw 6416h
		dd 1006C65h, 313A7h
		db 0
		dd offset byte_137B
		db 17h,	2Eh, 6
		db 2 dup(0)
		dd offset loc_40
		dd offset loc_50
		dw 0AC01h
		dd offset aT_null+3	; "ULL"
		dd 64618h
		db 0
		dd offset off_138E
		db 19h
		dd offset loc_48
		dd offset off_B66+3
		dw 1900h
		dd offset loc_2D
		dd offset off_B80
		db 19h
		dd offset unk_67
		dd offset word_B9E
		align 2
		dw 11Ah
aPurple_stringr	db 'purple_stringref_new',0
		db 1, 41h, 1
		dd offset dword_3F0+262h
		dd offset _purple_stringref_new
		dd offset unk_D5
		dd offset off_13A1
		dd 7BA01h, 61761B00h, 65756Ch, 3584101h
		db 2 dup(0)
		dd offset off_1421
		db 1Ch
		dd offset aNewref	; "newref"
		db 1
		dd 65243h
		db 0
		dd offset off_1441
		db 1Dh,	6Ch, 65h
		dd 4401006Eh, 8Ch
		db 1Eh
		dd offset loc_99
		dd offset dword_BB4
		dd offset a_decimal+1	; "DECIMAL"
		db 1Fh,	2, 74h
		dd 7730200h
byte_B14	db 0, 1Eh		; DATA XREF: .debug_info:00000E64o
		dd offset loc_AE
		dd offset byte_BD1
		dd offset unk_7B0
		dw 21Fh
dword_B24	dd 77020074h, 74021F04h, 760204h, 874021Fh, 7302h
					; DATA XREF: .debug_info:00000EC4o
		db 19h
		dd offset unk_D5
		dd offset word_B9E
		align 2
		dw 11Ah
aPurple_strin_0	db 'purple_stringref_new_noref',0
		db 1
		dd 6520154h
		db 2 dup(0)
off_B66		dd offset _purple_stringref_new_noref ;	DATA XREF: .debug_info:00000A8Eo
		dd offset unk_181
		dd offset off_145F
		dw 7701h
		dd 1B000008h, 756C6176h, 54010065h
off_B80		dd offset loc_354+4	; DATA XREF: .debug_info:00000A98o
		dd offset off_14DF
		db 1Ch
		dd offset aNewref	; "newref"
		db 1, 56h, 52h
		db 6, 2	dup(0)
		dd offset off_14FF
		db 19h
		dd offset loc_10B
		db 0B4h, 0Bh
word_B9E	dw 0			; DATA XREF: .debug_info:00000AA1o
					; .debug_info:00000B3Do ...
		db 1Eh
		dd offset loc_11C
		dd offset off_BF6+3
		dd offset unk_834
		db 1Fh,	2, 74h
		dd 4730200h
dword_BB4	dd 474021Fh, 7602h	; DATA XREF: .debug_info:00000B05o
					; .debug_info:00000C81o
		db 1Eh
		dd offset loc_137
		dd offset byte_C19
		dd offset aVt_record+8	; "D"
		db 1Fh,	2, 74h
		dd 730204h
		db 0
byte_BD1	db 1Eh			; DATA XREF: .debug_info:00000B1Ao
		dd offset loc_170
		dd offset byte_C41
		dd offset aVt_filetime+5 ; "LETIME"
		dw 21Fh
		dd 30010074h, 474021Fh
		db 5, 3
		dd offset _gs_idle_cb
		dw 21Fh
		dd 30010874h
		db 0, 19h
off_BF6		dd offset unk_181	; DATA XREF: .debug_info:00000BA5o
					; .debug_info:00000F6Do
		dd offset word_B9E
		dw 1A00h
		dd 72757001h, 5F656C70h, 69727473h, 6572676Eh, 72705F66h
		dd 66746E69h
		db 0
byte_C19	db 1, 66h, 1		; DATA XREF: .debug_info:00000BC1o
		dd offset dword_3F0+262h
		dd offset _purple_stringref_printf
		dd offset unk_1F1
		dd offset off_1528
		dd 92A01h, 6F661500h, 74616D72h, 58660100h, 2000003h
		db 91h
byte_C41	db 0, 20h, 1Ch		; DATA XREF: .debug_info:00000BD6o
		dd offset aNewref	; "newref"
		dd 6526801h
		db 2 dup(0)
		dd offset off_15A8
		dw 6116h
		dd 69010070h, 1ACh
		dd offset off_15C6
		db 1Eh
		dd offset loc_1AD
		dd offset word_C72
		dd offset dword_8D8+1Ch
		db 1Fh,	2, 74h
		db 0, 2
word_C72	dw 73h			; DATA XREF: .debug_info:00000C65o
		dd 474021Fh, 7702h
		db 19h
		dd offset loc_1B8
		dd offset dword_BB4
		db 1Eh
		dd offset loc_1CD
		dd offset byte_CA7
		dd offset dword_8D8+48h
		dw 21Fh
		dd 76020074h, 74021F04h, 730204h, 874021Fh
		db 2, 77h, 0
byte_CA7	db 0			; DATA XREF: .debug_info:00000C8Ao
		db 19h
		dd offset unk_1F1
		dd offset word_B9E
		align 2
		dw 11Ah
aPurple_strin_1	db 'purple_stringref_ref',0
		db 1, 77h, 1
		dd offset dword_3F0+262h
		dd offset _purple_stringref_ref
off_CD4		dd offset unk_222	; DATA XREF: .debug_info:00000D60o
		dd offset off_15D9
		dd 97101h
		db 0, 21h
		dd offset aStringref	; "stringref"
		dw 7701h
		dd offset dword_3F0+262h
		dd 19009102h
		dd offset unk_222
		dd offset word_B9E
		db    0
		db 22h,	1, 70h
aUrple_stringre	db 'urple_stringref_unref',0
		dw 7F01h
		db 1
off_D15		dd offset _purple_stringref_unref ; DATA XREF: .debug_info:off_388o
		dd offset unk_295
		dd offset off_1611
		db 1, 0F2h, 9
		db 2 dup(0), 21h
		dd offset aStringref	; "stringref"
		db 1
		dd 6527Fh, 910200h, 62E23h
		db 0
		dd offset loc_24B
		dd offset off_1840
		db 1, 86h, 0D3h
		dd 18000009h, 646h
		dd offset off_1685
		db 24h
		dd offset loc_264
		db 1, 69h, 0Bh
		dd 1E000000h
		dd offset loc_289
		dd offset off_CD4+3
		dd offset aRple_stringref+4 ; "_stringref_value"
		dd 474021Fh, 7302h
		db 19h
		dd offset unk_295
		dd offset word_B9E
		align 2
		dw 5825h
		db 6, 2	dup(0)
		dd offset _purple_stringref_value
		dd offset unk_2CB
		dd offset off_16A4
		db 1
		dd offset dword_A10+0Ah
		dd 67D26h, 910200h
		db 19h
		dd offset unk_2CB
		dd offset word_B9E
		align 2
		dw 11Ah
aPurple_strin_2	db 'purple_stringref_cmp',0
		db 1, 8Fh, 1
		dd offset loc_16B+4
		dd offset _purple_stringref_cmp
		dd offset unk_337
		dd offset off_16DC
		dd 0AB101h, 31731500h, 898F0100h, 2000006h, 73150091h
		dd 8F010032h, 689h, 23049102h, 658h
		dd offset loc_2E7
		dd offset off_1858
		dd 0A809101h, 7D180000h
		db 6, 2	dup(0)
		dd offset off_172C
		align 4
		dd 65823h
		db 0
		dd offset loc_2EE
		dd offset off_1870
		db 1, 91h, 9Dh
		dd 1800000Ah, 67Dh
		dd offset off_1762
		db 0, 24h
		dd offset loc_311
		dw 0FE01h
		dd 1900000Ch
		dd offset unk_337
		dd offset word_B9E
		db    0
		db 1Ah,	1, 70h
aUrple_string_0	db 'urple_stringref_len',0
		dd 8C019401h
		db 3 dup(0)
		dd offset _purple_stringref_len
		dd offset unk_37D
		dd offset off_1798
		db 1
		dd offset byte_B14+1
		db 21h
		dd offset aStringref	; "stringref"
		db 1, 94h, 89h
		dd 2000006h, 58230091h
		db 6, 2	dup(0)
		dd offset loc_34B
		dd offset off_1888
		db 1
		dd 0B0B96h, 67D1800h
		db 2 dup(0)
		dd offset off_17E8
		dw 1900h
		dd offset unk_37D
		dd offset word_B9E
		dd 63672700h, 7473696Ch, 133C0100h, 5000003h
		db 3
		dd offset _gclist
		db 0Dh,	76h, 1
		db    0
		align 2
		dd offset dword_B24+10h
		dw 28h
a_iob		db ')_iob',0
		dw 9A04h
		dd offset dword_B24+5
		db    1
		db 1, 29h, 5Fh
a_mb_cur_max	db '_mb_cur_max',0
		db  0Ah
		db 5Ch,	6Fh, 1
		db    0
		align 2
		dw 101h
a_pctype	db ')_pctype',0
		db 0Ah,	73h, 42h
		db    3
		db 2 dup(0), 1
		db    1
		db 2Ah,	1, 67h
a_free		db '_free',0
		dw 370Bh
		db    1
		db 1, 80h, 0Bh
		db    0
		align 2
		dw 8C0Ch
		db    2
		align 4
		db  2Ah	; *
		db 1, 67h, 5Fh
aList_free_1	db 'list_free_1',0
		db    7
		db 33h,	2 dup(1)
		dd offset word_B9E
		db  0Ch
		dd offset loc_311+2
		align 2
		dw 12Bh
a__stack_chk_fa	db '__stack_chk_fail',0
		db 3 dup(1)
		db  2Ch	; ,
		db 1, 67h, 5Fh
aMalloc		db 'malloc',0
		db 0Bh
		db  33h	; 3
		db 1, 8Ch, 2
		db    0
		align 2
		dw 0D101h
		db  0Bh
		db 2 dup(0), 0Ch
		dd offset loc_23E
		db    0
		db 2Ch,	1, 67h
a_strlcpy	db '_strlcpy',0
		db 0Ch,	6Ch, 1
		dd offset loc_23E
		db    1
		dd offset off_BF6+3
		db 0Ch,	0C3h, 2
		db    0
		align 2
		dw 0B80Ch
		db    2
		db 2 dup(0), 0Ch
		dd offset loc_23E
		db    0
		db 2Ch,	1, 73h
aTrcpy		db 'trcpy',0
		dw 2D0Dh
		db    1
		dd offset _purple_stringref_new
		db 1, 19h, 0Ch
		db    0
		align 2
		dw 680Ch
		db    0
		db 2 dup(0), 0Ch
		dd offset loc_354+4
		db    0
		db 2Ch,	1, 67h
a_list_prepend	db '_list_prepend',0
		dw 3707h
		db    1
		dd offset loc_311+2
		db 1, 41h, 0Ch
		db    0
		align 2
		dw 130Ch
		db    3
		db 2 dup(0), 0Ch
		dd offset loc_289+3
		db    0
		db 2Ch,	1, 70h
aUrple_timeout_	db 'urple_timeout_add',0
		dw 0B20Eh
		dd 27601h, 0C720100h, 760C0000h, 0C000002h, 32Fh, 28C0Ch
		dd 12C0000h
aG_printf_strin	db 'g_printf_string_upper_bound',0
		dd 3E01300Fh, 1000002h,	0CA7h, 2B80Ch, 1AC0C00h, 2D000000h
		dd 62696C01h, 6C746E69h, 7073765Fh, 746E6972h, 5C100066h
		dd 16F0101h, 0D7010000h, 0C00000Ch, 68h, 3580Ch, 1AC0C00h
		dd 2C000000h, 6C5F6701h, 5F747369h, 6F6D6572h, 7006576h
		dd 3130148h, 0FE010000h, 0C00000Ch, 313h, 29C0Ch, 12E0000h
		dd 63727473h, 0D00706Dh, 16F012Bh, 0C010000h, 358h, 3580Ch
		db 3 dup(0)
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 10A4h
dword_10A4	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000038Eo
		dd 0B0B000Fh, 1349h, 0B002403h,	30B3E0Bh, 4000008h, 8030016h
		dd 0B3B0B3Ah, 1349h, 0B000F05h,	4908030Bh, 6000013h, 8030113h
		dd 0B3A0B0Bh, 13010B3Bh, 0D070000h, 3A080300h, 490B3B0Bh
		dd 0A3813h, 0F0800h, 0B0Bh, 2609h, 260A00h, 1349h, 2701150Bh
		dd 113490Ch, 0C000013h,	13490005h, 10D0000h, 1134901h
		dd 0E000013h, 13490021h, 0B2Fh,	301040Fh, 3A0B0B08h, 10B3B0Bh
		dd 10000013h, 8030028h,	0D1Ch, 3012E11h, 3B0B3A08h, 200C270Bh
		dd 13010Bh, 51200h, 0B3A0E03h, 13490B3Bh, 2E130000h, 30C3F01h
		dd 3B0B3A08h, 490C270Bh, 10B2013h, 14000013h, 803012Eh
		dd 0B3B0B3Ah, 13490C27h, 1120111h, 42970640h, 13010Ch
		dd 51500h, 0B3A0803h, 13490B3Bh, 0A02h,	3003416h, 3B0B3A08h
		dd 213490Bh, 17000006h,	1331011Dh, 1120111h, 0B590B58h
		dd 1301h, 31000518h, 60213h, 82891900h,	1110001h, 1331h
		dd 3F012E1Ah, 3A08030Ch, 270B3B0Bh, 1113490Ch, 40011201h
		dd 0C429706h, 1301h, 300051Bh, 3B0B3A08h, 213490Bh, 1C000006h
		dd 0E030034h, 0B3B0B3Ah, 6021349h, 341D0000h, 3A080300h
		dd 490B3B0Bh, 1E000013h, 1018289h, 13310111h, 1301h, 1828A1Fh
		dd 910A0200h, 0A42h, 1820h, 52100h, 0B3A0E03h, 13490B3Bh
		dd 0A02h, 3F012E22h, 3A08030Ch,	270B3B0Bh, 1201110Ch, 97064001h
		dd 13010C42h, 1D230000h, 52133101h, 58065501h, 10B590Bh
		dd 24000013h, 18289h, 42950111h, 13310Ch, 12E2500h, 1111331h
		dd 6400112h, 10C4297h, 26000013h, 13310005h, 0A02h, 3003427h
		dd 3B0B3A08h, 213490Bh,	2800000Ah, 21h,	3003429h, 3B0B3A08h
		dd 3F13490Bh, 0C3C0Ch, 12E2A00h, 8030C3Fh, 0B3B0B3Ah, 0C3C0C27h
		dd 1301h, 3F002E2Bh, 2708030Ch,	3C0C340Ch, 2C00000Ch, 0C3F012Eh
		dd 0B3A0803h, 0C270B3Bh, 0C3C1349h, 1301h, 3F012E2Dh, 3A08030Ch
		dd 27053B0Bh, 3C13490Ch, 13010Ch, 12E2E00h, 8030C3Fh, 0B3B0B3Ah
		dd 13490C27h, 0C3Ch
		db 0
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 1330h
dword_1330	dd 0			; DATA XREF: .debug_info:00000A37o
		dd 3, 4740002h,	3, 61h,	30740002h, 61h,	62h, 4740002h
		dd 62h,	67h, 30740002h,	2 dup(0)
off_1368	dd offset loc_38	; DATA XREF: .debug_info:00000A5Ao
		dd offset loc_43+4
		dd 520001h, 0
		db 3 dup(0)
byte_137B	db 19h			; DATA XREF: .debug_info:00000A69o
		dd 2C000000h, 1000000h,	5000h, 0
		db 2 dup(0)
off_138E	dd offset loc_40	; DATA XREF: .debug_info:00000A85o
		dd offset loc_43+4
		dw 1
		dd offset loc_52
		dd 0
		db 0
off_13A1	dd offset _purple_stringref_new	; DATA XREF: .debug_info:00000ACCo
		dd offset loc_69
		db 2, 0, 74h
		dd 6904h, 6A00h, 74000200h, 6A08h, 6B00h, 74000200h, 6B0Ch
		dd 6E00h, 74000200h, 6E10h, 0C500h, 74000200h, 0C530h
		dd 0C600h, 74000200h, 0C610h, 0C700h, 74000200h, 0C70Ch
		dd 0C800h, 74000200h, 0C808h, 0CC00h, 74000200h, 0CC04h
		dd 0D500h, 74000200h, 30h, 0
		db 0
off_1421	dd offset _purple_stringref_new	; DATA XREF: .debug_info:00000AE2o
		dd offset loc_8A
		db 2, 0, 91h
		dd 0C900h, 0D000h, 91000200h, 2	dup(0)
		db 0
off_1441	dd offset loc_9B	; DATA XREF: .debug_info:00000AF1o
		dd offset loc_A6
		db 1, 0, 50h
		dd offset loc_A6
		dd offset loc_B4
		dd 570001h, 0
		db 3 dup(0)
off_145F	dd offset _purple_stringref_new_noref ;	DATA XREF: .debug_info:00000B6Eo
		dd offset loc_D9
		db 2
		dd 0D9047400h, 0DA000000h, 2000000h, 0DA087400h, 0DB000000h
		dd 2000000h, 0DB0C7400h, 0DE000000h, 2000000h, 0DE107400h
		dd 4D000000h, 2000001h,	4D307400h, 4E000001h, 2000001h
		dd 4E107400h, 4F000001h, 2000001h, 4F0C7400h, 50000001h
		dd 2000001h, 50087400h,	54000001h, 2000001h, 54047400h
		dd 81000001h, 2000001h,	307400h, 0
		db 3 dup(0)
off_14DF	dd offset _purple_stringref_new_noref ;	DATA XREF: .debug_info:00000B84o
		dd offset loc_FE
		db 2
		dd 77009100h, 7C000001h, 2000001h, 9100h, 0
		db 3 dup(0)
off_14FF	dd offset loc_10D	; DATA XREF: .debug_info:00000B93o
		dd offset loc_114
		db 1
		dd 1145000h, 13C0000h, 10000h, 15153h, 17700h, 53000100h
		dd 2 dup(0)
off_1528	dd offset _purple_stringref_printf ; DATA XREF:	.debug_info:00000C28o
		dd offset loc_185
		dd 4740002h, 185h, 186h, 8740002h, 186h, 187h, 0C740002h
		dd 187h, 18Ah, 10740002h, 18Ah,	1E4h, 30740002h, 1E4h
		dd 1E5h, 10740002h, 1E5h, 1E6h,	0C740002h, 1E6h, 1E7h
		dd 8740002h, 1E7h, 1E8h, 4740002h, 1E8h, 1F1h, 30740002h
		dd 2 dup(0)
off_15A8	dd offset loc_1BA	; DATA XREF: .debug_info:00000C4Eo
		dd offset loc_1C5
		dd 0C5500001h, 0D3000001h, 1000001h, 5600h, 0
		db 2 dup(0)
off_15C6	dd offset loc_1A1	; DATA XREF: .debug_info:00000C5Co
		dd offset loc_1D3
		dw 1
		dd offset loc_56+1
		dd 0
		db 0
off_15D9	dd offset _purple_stringref_ref	; DATA XREF: .debug_info:00000CD8o
		dd offset loc_1F7
		db 2, 0, 74h
		dd 1F704h, 21C00h, 74000200h, 21C20h, 21D00h, 74000200h
		dd 21D04h, 22200h, 74000200h, 20h, 0
		db 0
off_1611	dd offset _purple_stringref_unref ; DATA XREF: .debug_info:00000D1Do
		dd offset loc_225
		db 2, 0, 74h
		dd 22504h, 22800h, 74000200h, 22808h, 25E00h, 74000200h
		dd 25E30h, 25F00h, 74000200h, 25F08h, 26400h, 74000200h
		dd 26404h, 27300h, 74000200h, 27330h, 27400h, 74000200h
		dd 27408h, 27800h, 74000200h, 27804h, 29500h, 74000200h
		dd 30h,	0
		db 0
off_1685	dd offset loc_24B	; DATA XREF: .debug_info:00000D4Co
		dd offset loc_25F
		db 1, 0, 53h
		dd offset loc_25F
		dd offset loc_264
		dd 910002h, 2 dup(0)
off_16A4	dd offset _purple_stringref_value ; DATA XREF: .debug_info:00000D87o
		dd offset loc_29B
		dd 4740002h, 29Bh, 2C1h, 20740002h, 2C1h, 2C2h,	4740002h
		dd 2C2h, 2CBh, 20740002h, 2 dup(0)
off_16DC	dd offset _purple_stringref_cmp	; DATA XREF: .debug_info:00000DC8o
		dd offset loc_2CF
		dd 4740002h, 2CFh, 30Ch, 20740002h, 30Ch, 314h,	4740002h
		dd 314h, 331h, 20740002h, 331h,	332h, 4740002h,	332h, 337h
		dd 20740002h, 2	dup(0)
off_172C	dd offset loc_2E7	; DATA XREF: .debug_info:00000E03o
		dd offset loc_2EE
		dd 0EE520001h, 11000002h, 2000003h, 11049100h, 16000003h
		dd 1000003h, 3165200h, 3200000h, 20000h, 491h, 0
		db 2 dup(0)
off_1762	dd offset loc_2EE	; DATA XREF: .debug_info:00000E20o
		dd offset loc_2F5
		dw 1
		dd 2F550h, 31100h, 91000200h, 31600h, 31E00h, 50000100h
		dd 31Eh, 320h, 910002h,	2 dup(0)
off_1798	dd offset _purple_stringref_len	; DATA XREF: .debug_info:00000E5Fo
		dd offset loc_339
		dd 4740002h, 339h, 33Ch, 8740002h, 33Ch, 36Fh, 20740002h
		dd 36Fh, 370h, 8740002h, 370h, 374h, 4740002h, 374h, 37Dh
		dd 20740002h, 2	dup(0)
off_17E8	dd offset loc_34B	; DATA XREF: .debug_info:00000E8Eo
		dd offset loc_352
		dd 52570001h, 71000003h, 2000003h, 71009100h, 76000003h
		dd 1000003h, 3765700h, 37D0000h, 20000h, 91h, 0
		db 2 dup(0)
		align 10h
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 1820h
		dd 1Ch
		db 2, 0
		dd offset off_388
		dw 4
		dd 0
		dd offset _gs_idle_cb
		dd offset unk_37D
		align 10h
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 1840h
off_1840	dd offset loc_24B	; DATA XREF: .debug_info:00000D3Do
		dd offset loc_25B
		dd offset loc_25F
		dd offset loc_264
		dd 2 dup(0)
off_1858	dd offset loc_2E7	; DATA XREF: .debug_info:00000DF4o
		dd offset loc_2EE
		dd offset loc_314
		dd offset loc_316
		align 10h
off_1870	dd offset loc_2EE	; DATA XREF: .debug_info:00000E11o
		dd offset loc_2F5
		dd offset loc_316
		dd offset loc_320
		dd 2 dup(0)
off_1888	dd offset loc_34B	; DATA XREF: .debug_info:00000E7Fo
		dd offset loc_352
		dd offset loc_374
		dd offset loc_378
		align 10h
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 18A0h
off_18A0	dd offset loc_2D7+5	; DATA XREF: .debug_info:000003ECo
		db    2
		align 2
		dd offset loc_22C+1
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/include',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a____Win32Dev_1	db '../../win32-dev/gtk_2_0-2.14/include',0
		align 4
aStringref_c_0	db 'stringref.c',0
		dd 73000000h, 65646474h, 682E66h, 73000001h, 72616474h
		dd 682E67h, 73000001h, 6F696474h, 200682Eh, 6C670000h
		dd 6F636269h, 6769666Eh, 300682Eh, 74670000h, 73657079h
		dd 400682Eh, 6C670000h,	2E747369h, 40068h, 616D6700h, 682E6E69h
		dd 400h, 69727473h, 6572676Eh, 682E66h,	63000000h, 65707974h
		dd 200682Eh, 6D670000h,	682E6D65h, 400h, 72747367h, 636E7566h
		dd 682E73h, 73000004h, 6E697274h, 682E67h, 65000002h, 746E6576h
		dd 706F6F6Ch, 682Eh, 6D670000h,	61737365h, 2E736567h, 40068h
		dd 62696C00h, 6C746E69h, 500682Eh, 74770000h, 73657079h
		dd 200682Eh, 0
		db 5, 2
		dd offset _gs_idle_cb
		dw 0A403h
		dd 0B03C0101h, 790391DCh, 32F9182h, 13038276h, 7F8E03F2h
		dd 0B09E7408h, 8CBCA4Dh, 7503692Fh, 0B037408h, 0AF9E854Ah
		dd 0E5750885h, 15089268h, 79037008h, 3012402h, 9E854A0Bh
		dd 84B4DB0h, 69300883h,	4A087703h, 854A0903h, 304CBB74h
		dd 0AD826908h, 1D03BB4Ch, 0F267034Ah, 34A1903h,	39085867h
		dd 74857708h, 40200BBh,	4A0601h, 6030402h, 6BA063Dh, 0AC694B49h
		dd 8DB45BBh, 7D3B3Dh, 0C0030402h, 0A106D606h, 0AC770382h
		dd 0D7740A03h, 3C087503h, 24A0B03h, 1010005h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 1B80h
aStringref	db 'stringref',0        ; DATA XREF: .debug_info:000009CFo
					; .debug_info:00000A06o ...
aNewref		db 'newref',0           ; DATA XREF: .debug_info:00000AE7o
					; .debug_info:00000B89o ...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 1B94h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch
		dd offset unk_37F-1F33h
		dd offset unk_67
		dd 300E4300h, 0E0A5E02h, 0B4104h, 34h, 38h
		dd offset unk_37F-1EE7h
		dd offset loc_6B+2
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A57h, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 34h
		dd 70h
		dd offset unk_37F-1EAFh
		dd offset loc_A9
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A6Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 34h
		dd 0A8h
		dd offset unk_37F-1E3Bh
		dd offset loc_6B+2
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A5Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
		dd 0E0h
		dd offset unk_37F-1E03h
		dd offset loc_2D+1
		dd 200E4300h, 40E0A65h,	0B41h, 2Ch, 0FCh
		dd offset unk_37F-1DEFh
		dd offset loc_6E+3
		dd 80E4100h, 0E430283h,	0E0A7630h, 0EC34108h, 4F0B4504h
		dd 41080E0Ah, 44040EC3h, 0Bh, 18h, 12Ch
		dd offset unk_37F-1DABh
		dd offset loc_32+1
		dd 200E4300h, 40E0A66h,	0B41h, 1Ch, 148h
		dd offset unk_37F-1D93h
		dd offset loc_6B
		dd 200E4300h, 40E0A7Dh,	0A5D0B48h, 0B41040Eh, 20h, 168h
		dd offset unk_37F-1D47h
		dd offset loc_43+2
		dd 80E4100h, 0E430287h,	0E0A7320h, 0EC74108h, 0B4404h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _gs_idle_cb+3r
					; _gs_idle_cb:loc_56r ...
		extrn _g_list_free_1:near ; CODE XREF: _gs_idle_cb+28p
		extrn _g_free:near	; CODE XREF: _gs_idle_cb:loc_43p
					; _purple_stringref_unref:loc_25Fj
		extrn ___stack_chk_fail:near ; CODE XREF: _gs_idle_cb:loc_62p
					; _purple_stringref_new:loc_D0p ...
		extrn _g_malloc:near	; CODE XREF: _purple_stringref_new+2Cp
					; _purple_stringref_new_noref+2Ep ...
		extrn _g_strlcpy:near	; CODE XREF: _purple_stringref_new:loc_A9p
; char *__cdecl	strcpy(char *, const char *)
		extrn _strcpy:near	; CODE XREF: _purple_stringref_new_noref+3Fp
		extrn _g_list_prepend:near ; CODE XREF:	_purple_stringref_new_noref+5Ap
		extrn _purple_timeout_add:near
					; CODE XREF: _purple_stringref_new_noref:loc_16Bp
		extrn _g_printf_string_upper_bound:near
					; CODE XREF: _purple_stringref_printf+24p
		extrn _libintl_vsprintf:near ; CODE XREF: _purple_stringref_printf+44p
		extrn _g_list_remove:near ; CODE XREF: _purple_stringref_unref+60p
; int __cdecl strcmp(const char	*, const char *)
		extrn _strcmp:near	; CODE XREF: _purple_stringref_cmp+40j


		end

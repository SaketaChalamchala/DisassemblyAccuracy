;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	BC3A95633EAD859FBEDFA4127BE42E10
; Input	CRC32 :	BDB3C149

; File Name   :	d:\pidgin-o\message-2.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; jumptable 000002B4 cases 16,38,51,57,64

_msim_msg_list_copy proc near		; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
					; _msim_msg_clone_element+97p ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h

		push	esi
		push	ebx
		sub	esp, 24h	; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
		mov	ebx, eax
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		xor	esi, esi
		test	ebx, ebx
		jz	short loc_37

loc_18:					; CODE XREF: _msim_msg_list_copy+35j
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	_g_strdup

loc_22:					; DATA XREF: .debug_info:00004C33o
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], esi
		call	_g_list_append

loc_2E:					; DATA XREF: .debug_info:00004C3Co
		mov	esi, eax
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_18

loc_37:					; CODE XREF: _msim_msg_list_copy+16j
		mov	eax, esi

loc_39:					; DATA XREF: .eh_frame:0000BF40o
					; .eh_frame:0000C284o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4B
		add	esp, 24h
		pop	ebx
		pop	esi

locret_4A:				; DATA XREF: .eh_frame:0000C090o
		retn
; ---------------------------------------------------------------------------

loc_4B:					; CODE XREF: _msim_msg_list_copy+43j
		call	___stack_chk_fail
_msim_msg_list_copy endp


; =============== S U B	R O U T	I N E =======================================


_msim_msg_pack_using proc near		; CODE XREF: _msim_msg_dump_to_str:loc_224p
					; _msim_msg_pack+30p ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_51:					; DATA XREF: .debug_loc:00008674o
		push	edi

loc_52:					; DATA XREF: .eh_frame:0000C1D8o
		push	esi
		push	ebx

loc_54:					; DATA XREF: .eh_frame:0000C334o
		sub	esp, 3Ch

loc_57:					; DATA XREF: .debug_loc:0000A714o
					; .eh_frame:0000BDECo ...
		mov	edi, eax
		mov	ebp, edx

loc_5B:					; DATA XREF: .data:00001B74o
					; .eh_frame:0000BF9Co ...
		mov	edx, [esp+4Ch+arg_0]

loc_5F:					; DATA XREF: .debug_loc:00008753o
					; .eh_frame:0000C000o
		mov	[esp+4Ch+var_30], edx

loc_63:					; DATA XREF: .eh_frame:0000BEC8o
		mov	edx, [esp+4Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard

loc_6C:					; DATA XREF: .eh_frame:0000C0B4o
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_72:					; DATA XREF: .debug_info:00004D52o
					; .debug_loc:0000870Eo
		test	edi, edi

loc_74:					; DATA XREF: .eh_frame:0000C0D0o
		jz	loc_128

loc_7A:					; DATA XREF: .debug_info:00002E24o
					; .debug_info:00003B0Co ...
		mov	[esp+4Ch+var_4C], edi

loc_7D:					; DATA XREF: .debug_info:00002880o
					; .debug_info:000028DCo ...
		mov	[esp+4Ch+var_38], edx

loc_81:					; DATA XREF: .eh_frame:0000BF5Co
		mov	[esp+4Ch+var_34], ecx

loc_85:					; DATA XREF: .eh_frame:0000C398o
					; .debug_loc:00008798o
		call	_g_list_length

loc_8A:					; DATA XREF: .debug_info:00004D70o
		mov	esi, eax

loc_8C:					; DATA XREF: .debug_loc:off_87CEo
		lea	eax, ds:4[eax*4]

loc_93:					; DATA XREF: .debug_loc:000087D2o
		mov	[esp+4Ch+var_4C], eax
		call	_g_malloc0

loc_9B:					; DATA XREF: .debug_info:00004D85o
		mov	ebx, eax

loc_9D:					; DATA XREF: .debug_loc:off_87ECo
					; .debug_loc:00009070o	...
		mov	[esp+4Ch+var_24], eax

loc_A1:					; DATA XREF: .debug_loc:off_880Ao
		lea	eax, [esp+4Ch+var_24] ;	jumptable 000002B4 cases 2,26

loc_A5:					; DATA XREF: .debug_loc:000087F0o
					; .eh_frame:0000BDBCo
		mov	[esp+4Ch+var_44], eax

loc_A9:					; DATA XREF: .eh_frame:0000C208o
		mov	[esp+4Ch+var_48], ebp
		mov	[esp+4Ch+var_4C], edi
		call	_g_list_foreach

loc_B5:					; DATA XREF: .debug_info:00004D9Eo
		mov	[esp+4Ch+var_48], ebx
		mov	ecx, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_4C], ecx

loc_C0:					; DATA XREF: .eh_frame:0000C060o
					; .debug_info:000028C4o
		call	_g_strjoinv

loc_C5:					; DATA XREF: .debug_info:00004DC1o
		mov	edi, eax

loc_C7:					; DATA XREF: .debug_loc:off_882Ao
					; .eh_frame:0000C3D8o
		mov	[esp+4Ch+var_40], 0

loc_CF:					; DATA XREF: .eh_frame:0000C168o
		mov	edx, [esp+4Ch+var_38]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], eax
		mov	edx, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_4C], edx

loc_E2:					; DATA XREF: .eh_frame:0000BE48o
					; .debug_loc:0000882Eo
		call	_g_strconcat

loc_E7:					; DATA XREF: .debug_info:off_4DD6o
		mov	ebp, eax

loc_E9:					; DATA XREF: .debug_loc:off_8848o
		mov	[esp+4Ch+var_4C], edi

loc_EC:					; DATA XREF: .debug_loc:0000884Co
		call	_g_free

loc_F1:					; DATA XREF: .debug_info:00004DF9o
					; .debug_loc:off_8866o
		xor	edi, edi

loc_F3:					; DATA XREF: .eh_frame:0000C2A0o
		test	esi, esi

loc_F5:					; DATA XREF: .eh_frame:0000C1A0o
		jle	short loc_108

loc_F7:					; DATA XREF: .debug_loc:0000886Ao
		nop

loc_F8:					; CODE XREF: _msim_msg_pack_using+B6j
		mov	eax, [ebx+edi*4]

loc_FB:					; DATA XREF: .eh_frame:0000BD7Co
		mov	[esp+4Ch+var_4C], eax

loc_FE:					; DATA XREF: .debug_info:00005500o
		call	_g_free

loc_103:				; DATA XREF: .debug_info:00004E0Eo
		inc	edi
		cmp	esi, edi
		jnz	short loc_F8

loc_108:				; CODE XREF: _msim_msg_pack_using:loc_F5j
		mov	[esp+4Ch+var_4C], ebx
		call	_g_free

loc_110:				; CODE XREF: _msim_msg_pack_using+F6j
					; DATA XREF: .debug_info:00004E17o ...
		mov	eax, ebp
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_148
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_125:				; DATA XREF: .eh_frame:0000BE88o
		retn
; ---------------------------------------------------------------------------
unk_126		db  66h	; f		; DATA XREF: .debug_loc:0000880Eo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_128:				; CODE XREF: _msim_msg_pack_using:loc_74j
		mov	[esp+4Ch+var_44], offset aMsgNull ; "msg != NULL"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___44551 ; "msim_msg_pack_using"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_144:				; DATA XREF: .debug_info:00004E2Co
		xor	ebp, ebp
		jmp	short loc_110
; ---------------------------------------------------------------------------

loc_148:				; CODE XREF: _msim_msg_pack_using+CCj
		call	___stack_chk_fail
_msim_msg_pack_using endp

; ---------------------------------------------------------------------------
unk_14D		db  8Dh	; ç		; DATA XREF: .debug_info:00004C7Ao
					; .debug_info:00004E54o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_msim_msg_get_node proc	near		; CODE XREF: _msim_msg_insert_before:loc_98Ep
					; _msim_msg_get+16p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		push	esi

loc_151:				; DATA XREF: .debug_loc:000088A9o
		push	ebx

loc_152:				; DATA XREF: .eh_frame:0000C244o
		sub	esp, 24h
		mov	ebx, eax

loc_157:				; DATA XREF: .eh_frame:0000C2E8o
		mov	esi, edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_164:				; DATA XREF: .debug_loc:00008911o
					; .debug_loc:00008918o
		test	edx, edx

loc_166:				; DATA XREF: .eh_frame:0000BFC0o
		jz	loc_1EC
		test	ebx, ebx
		jnz	short loc_191
		jmp	short loc_1EC
; ---------------------------------------------------------------------------
byte_172	db 66h			; DATA XREF: .debug_loc:0000891Co
					; .debug_loc:00008956o	...
unk_173		db  90h	; ê		; DATA XREF: .debug_info:00002949o
					; .debug_info:00002A55o ...
; ---------------------------------------------------------------------------

loc_174:				; CODE XREF: _msim_msg_get_node+45j
					; DATA XREF: .debug_info:00004EC1o ...
		mov	ecx, [eax]
		test	ecx, ecx
		jz	short loc_1CC

loc_17A:				; DATA XREF: .debug_info:00004EC5o
					; .debug_loc:off_89DBo
		mov	[esp+2Ch+var_28], esi ;	char *
		mov	[esp+2Ch+var_2C], ecx ;	char *

loc_181:				; DATA XREF: .debug_loc:000089B6o
		call	_strcmp

loc_186:				; DATA XREF: .debug_info:00004EEFo
		test	eax, eax
		jz	short loc_1B5

loc_18A:				; DATA XREF: .debug_ranges:0000B018o
		mov	ebx, [ebx+4]

loc_18D:				; DATA XREF: .debug_loc:off_899Fo
		test	ebx, ebx
		jz	short loc_1B5

loc_191:				; CODE XREF: _msim_msg_get_node+1Ej
					; DATA XREF: .debug_loc:000089A3o ...
		mov	eax, [ebx]

loc_193:				; DATA XREF: .debug_info:00004ED8o
		test	eax, eax
		jnz	short loc_174

loc_197:				; DATA XREF: .debug_info:00004EDCo
		mov	[esp+2Ch+var_24], offset aElemNull ; "elem != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"

loc_1A7:				; DATA XREF: .debug_info:off_29A9o
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1B3:				; DATA XREF: .debug_info:00004F04o
		xor	ebx, ebx

loc_1B5:				; CODE XREF: _msim_msg_get_node+38j
					; _msim_msg_get_node+3Fj ...
		mov	eax, ebx
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1F0
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_1CC:				; CODE XREF: _msim_msg_get_node+28j
					; DATA XREF: .debug_info:00004F2Do ...
		mov	[esp+2Ch+var_24], offset aElemNameNull ; "elem->name !=	NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1E8:				; DATA XREF: .debug_info:00004F6Eo
		xor	ebx, ebx
		jmp	short loc_1B5
; ---------------------------------------------------------------------------

loc_1EC:				; CODE XREF: _msim_msg_get_node:loc_166j
					; _msim_msg_get_node+20j
					; DATA XREF: ...
		xor	ebx, ebx
		jmp	short loc_1B5
; ---------------------------------------------------------------------------

loc_1F0:				; CODE XREF: _msim_msg_get_node+71j
					; DATA XREF: .eh_frame:0000BF08o ...
		call	___stack_chk_fail
_msim_msg_get_node endp

; ---------------------------------------------------------------------------
unk_1F5		db  8Dh	; ç		; DATA XREF: .debug_info:00004E7Bo
					; .debug_info:00004F95o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_msim_msg_dump_to_str proc near		; CODE XREF: _msim_msg_debug_string_element:loc_333p
					; _msim_msg_dump:loc_12D1p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h

		sub	esp, 2Ch

loc_1FB:				; DATA XREF: .debug_loc:00008A2Bo
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_23C
		mov	[esp+2Ch+var_28], offset aMsimmessage ;	"\n/MsimMessage>"
		mov	[esp+2Ch+var_2C], offset aMsimmessage_0	; "<MsimMessage: \n"
		mov	ecx, offset asc_1BC5 ; "\n"
		mov	edx, offset _msim_msg_debug_string_element

loc_224:				; DATA XREF: .debug_loc:00008A63o
					; .eh_frame:0000C340o
		call	_msim_msg_pack_using

loc_229:				; CODE XREF: _msim_msg_dump_to_str:loc_248j
					; DATA XREF: .debug_info:00005008o ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_24A
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
unk_239		db  8Dh	; ç		; DATA XREF: .debug_loc:00008A9Do
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_23C:				; CODE XREF: _msim_msg_dump_to_str+11j
					; DATA XREF: .debug_info:off_4FCBo ...
		mov	[esp+2Ch+var_2C], offset aMsimmessageEmp ; "<MsimMessage: empty>"
		call	_g_strdup

loc_248:				; DATA XREF: .debug_info:off_4FF2o
					; .debug_loc:off_8AB7o
		jmp	short loc_229
; ---------------------------------------------------------------------------

loc_24A:				; CODE XREF: _msim_msg_dump_to_str+3Bj
					; DATA XREF: .debug_info:00004FCFo ...
		call	___stack_chk_fail
_msim_msg_dump_to_str endp

; ---------------------------------------------------------------------------
unk_24F		db  90h	; ê		; DATA XREF: .debug_info:00004FA7o
					; .debug_info:00005043o

; =============== S U B	R O U T	I N E =======================================


_msim_msg_debug_string_element proc near ; DATA	XREF: _msim_msg_dump_to_str+27o
					; .debug_info:00005020o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

; FUNCTION CHUNK AT 0000C349 SIZE 0000001A BYTES

		push	ebp

loc_251:				; DATA XREF: .debug_loc:00008ACEo
		push	edi
		push	esi
		push	ebx

loc_254:				; DATA XREF: .eh_frame:0000C100o
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	esi, [esp+4Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_26A:				; DATA XREF: .debug_loc:off_8B64o
					; .debug_loc:off_8C70o
		mov	edx, [ebx+8]
		lea	eax, [edx-2Dh]
		cmp	eax, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_2B4

loc_275:				; DATA XREF: .rdata:00001CACo
					; .rdata:00001CB0o ...
		mov	eax, [ebx]	; jumptable 000002B4 default case
		test	eax, eax
		jz	loc_448

loc_27F:				; CODE XREF: _msim_msg_debug_string_element+1FDj
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSUnknownTypeD	; "%s(unknown type %d"
		call	_g_strdup_printf

loc_293:				; DATA XREF: .debug_info:0000511Co
					; .debug_loc:00008B68o	...
		nop

loc_294:				; CODE XREF: _msim_msg_debug_string_element:loc_2DDj
					; _msim_msg_debug_string_element+D3j ...
		mov	edx, [esi]
		mov	[edx], eax
		add	dword ptr [esi], 4
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard

loc_2A5:				; DATA XREF: .debug_loc:00008BB5o
					; .debug_loc:00008BBCo
		jnz	loc_497
		add	esp, 3Ch
		pop	ebx
		pop	esi

loc_2B0:				; DATA XREF: .debug_loc:00008C74o
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_2B3		db  90h	; ê		; DATA XREF: .debug_loc:00008BC0o
; ---------------------------------------------------------------------------

loc_2B4:				; CODE XREF: _msim_msg_debug_string_element+23j
		jmp	ds:off_1CA8[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_2BC:				; DATA XREF: .rdata:off_1CA8o
		mov	eax, [ebx+0Ch]
		test	eax, eax

loc_2C1:				; DATA XREF: .debug_info:00002A24o
		jz	loc_48D

loc_2C7:				; CODE XREF: _msim_msg_debug_string_element+242j
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSRawS	; "%s(raw): %s"
		call	_g_strdup_printf

loc_2DD:				; DATA XREF: .debug_info:00005134o
		jmp	short loc_294
; ---------------------------------------------------------------------------
		align 10h

loc_2E0:				; DATA XREF: .rdata:00001D7Co
		mov	edi, [ebx+0Ch]

loc_2E3:				; DATA XREF: .debug_loc:off_8C29o
		mov	eax, [edi+4]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [edi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_base64_encode

loc_2F4:				; DATA XREF: .debug_info:0000514Co
		mov	ebp, eax

loc_2F6:				; DATA XREF: .debug_loc:off_8C52o
		mov	[esp+4Ch+var_40], eax
		mov	eax, [edi+4]

loc_2FD:				; DATA XREF: .debug_loc:00008C56o
					; .debug_info:00007F45o ...
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_48], eax

loc_307:				; DATA XREF: .debug_info:00002CBCo
					; .debug_info:00002CD4o ...
		mov	[esp+4Ch+var_4C], offset aSBinaryDBytesS ; "%s(binary, %d bytes): %s"
		call	_g_strdup_printf

loc_313:				; DATA XREF: .debug_info:00005155o
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_30], eax

loc_31A:				; DATA XREF: .debug_info:00002FC4o
					; .debug_info:000033ACo ...
		call	_g_free

loc_31F:				; DATA XREF: .debug_info:00005174o
		mov	eax, [esp+4Ch+var_30]
		jmp	loc_294
; ---------------------------------------------------------------------------

loc_328:				; DATA XREF: .rdata:00001D84o
					; .debug_loc:00008C2Do	...
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	loc_460

loc_333:				; DATA XREF: .debug_info:00002E88o
					; .debug_info:00003D15o ...
		call	_msim_msg_dump_to_str

loc_338:				; DATA XREF: .debug_info:00005189o
		mov	edi, eax

loc_33A:				; CODE XREF: _msim_msg_debug_string_element+21Ej
					; DATA XREF: .debug_loc:off_8C9Ao
		test	edi, edi
		jz	loc_47A

loc_342:				; CODE XREF: _msim_msg_debug_string_element+238j
					; DATA XREF: .debug_info:00004530o
		mov	[esp+4Ch+var_44], edi
		mov	eax, [ebx]

loc_348:				; DATA XREF: .debug_loc:00008C9Eo
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSDictS ; "%s(dict): %s"

loc_353:				; DATA XREF: .debug_info:00003135o
					; .debug_info:off_3C1Do ...
		call	_g_strdup_printf

loc_358:				; DATA XREF: .debug_info:00005192o
		mov	[esp+4Ch+var_4C], edi
		mov	[esp+4Ch+var_30], eax
		call	_g_free

loc_364:				; DATA XREF: .debug_info:000051B1o
		mov	eax, [esp+4Ch+var_30]

loc_368:				; DATA XREF: .debug_info:0000383Do
					; .debug_info:00004B7Co ...
		jmp	loc_294
; ---------------------------------------------------------------------------
		align 10h

loc_370:				; DATA XREF: .rdata:00001D8Co
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	loc_454
		mov	eax, offset aTrue ; "TRUE"

loc_380:				; CODE XREF: _msim_msg_debug_string_element+209j
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSBooleanS ; "%s(boolean): %s"
		call	_g_strdup_printf

loc_396:				; DATA XREF: .debug_info:000051C6o
		jmp	loc_294
; ---------------------------------------------------------------------------
		align 4

loc_39C:				; DATA XREF: .rdata:00001D98o
		mov	eax, [ebx+0Ch]
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSIntegerD ; "%s(integer): %d"
		call	_g_strdup_printf

loc_3B5:				; DATA XREF: .debug_info:000051DEo
					; .debug_info:000047D4o ...
		jmp	loc_294
; ---------------------------------------------------------------------------
		align 4

loc_3BC:				; DATA XREF: .rdata:00001DA4o
		mov	[esp+4Ch+var_4C], offset byte_1C7F

loc_3C3:				; DATA XREF: .debug_info:off_4870o
					; .debug_info:off_492Co ...
		call	_g_string_new

loc_3C8:				; DATA XREF: .debug_info:000051F6o
		mov	ebp, eax

loc_3CA:				; DATA XREF: .debug_info:0000343Co
					; .debug_info:00003458o ...
		mov	eax, [ebx]

loc_3CC:				; DATA XREF: .debug_loc:00008C38o
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], offset aSList	; "%s(list): \n"
		mov	[esp+4Ch+var_4C], ebp
		call	_g_string_append_printf

loc_3E0:				; DATA XREF: .debug_info:0000520Eo
					; .debug_loc:off_8D04o
		mov	ebx, [ebx+0Ch]

loc_3E3:				; DATA XREF: .debug_loc:off_8CF1o
		xor	edi, edi
		test	ebx, ebx
		jz	short loc_40E

loc_3E9:				; DATA XREF: .debug_loc:00008D08o
		lea	esi, [esi+0]

loc_3EC:				; CODE XREF: _msim_msg_debug_string_element+1BCj
		mov	eax, [ebx]
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], edi
		mov	[esp+4Ch+var_48], offset aD_S ;	" %d. %s\n"
		mov	[esp+4Ch+var_4C], ebp
		call	_g_string_append_printf

loc_406:				; DATA XREF: .debug_info:0000522Do
		inc	edi
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_3EC

loc_40E:				; CODE XREF: _msim_msg_debug_string_element+197j
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebp

loc_419:				; DATA XREF: .debug_info:00002F4Co
					; .debug_info:00003BB0o ...
		call	_g_string_free

loc_41E:				; DATA XREF: .debug_info:00005253o
		jmp	loc_294
; ---------------------------------------------------------------------------
unk_423		db  90h	; ê		; DATA XREF: .debug_loc:00008CF5o
; ---------------------------------------------------------------------------

loc_424:				; DATA XREF: .rdata:00001DC0o
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	short loc_473

loc_42B:				; CODE XREF: _msim_msg_debug_string_element+228j
		mov	[esp+4Ch+var_44], eax
		mov	eax, [ebx]
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], offset aSStringS ; "%s(string): %s"
		call	_g_strdup_printf

loc_441:				; DATA XREF: .debug_info:0000526Eo
		jmp	loc_294
; ---------------------------------------------------------------------------
		align 4

loc_448:				; CODE XREF: _msim_msg_debug_string_element+29j
		mov	eax, offset aNull ; "(NULL)"
		jmp	loc_27F
; ---------------------------------------------------------------------------
		align 4

loc_454:				; CODE XREF: _msim_msg_debug_string_element+125j
		mov	eax, offset aFalse ; "FALSE"
		jmp	loc_380
; ---------------------------------------------------------------------------
		align 10h

loc_460:				; CODE XREF: _msim_msg_debug_string_element+DDj
		mov	[esp+4Ch+var_4C], offset aNull ; "(NULL)"
		call	_g_strdup

loc_46C:				; DATA XREF: .debug_info:00005286o
		mov	edi, eax
		jmp	loc_33A
; ---------------------------------------------------------------------------

loc_473:				; CODE XREF: _msim_msg_debug_string_element+1D9j
		mov	eax, offset aNull ; "(NULL)"
		jmp	short loc_42B
; ---------------------------------------------------------------------------

loc_47A:				; CODE XREF: _msim_msg_debug_string_element+ECj
					; DATA XREF: .debug_info:00002C79o ...
		mov	[esp+4Ch+var_4C], offset aNullCouldnTMsi ; "(NULL, couldn't msim_msg_dump_to_str)"
		call	_g_strdup

loc_486:				; DATA XREF: .debug_info:0000529Eo
		mov	edi, eax
		jmp	loc_342
; ---------------------------------------------------------------------------

loc_48D:				; CODE XREF: _msim_msg_debug_string_element:loc_2C1j
		mov	eax, offset aNull ; "(NULL)"
		jmp	loc_2C7
; ---------------------------------------------------------------------------

loc_497:				; CODE XREF: _msim_msg_debug_string_element:loc_2A5j
		call	___stack_chk_fail
_msim_msg_debug_string_element endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


		public _msim_escape
_msim_escape	proc near		; CODE XREF: _msim_msg_pack_element_data+94j
					; DATA XREF: .debug_info:00005073o ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_49D:				; DATA XREF: .debug_loc:00008D27o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebp, [esp+3Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], eax
		xor	eax, eax
		mov	[esp+3Ch+var_3C], offset byte_1C7F
		call	_g_string_new

loc_4BE:				; DATA XREF: .debug_info:000053EAo
		mov	ebx, eax

loc_4C0:				; DATA XREF: .debug_loc:off_8DD1o
		xor	eax, eax

loc_4C2:				; DATA XREF: .debug_loc:00008DD5o
					; .debug_loc:00008DDCo
		mov	ecx, 0FFFFFFFFh
		mov	edi, ebp
		repne scasb

loc_4CB:				; DATA XREF: .debug_loc:00008DC1o
		not	ecx

loc_4CD:				; DATA XREF: .debug_loc:off_8DFAo
					; .debug_loc:off_8E38o
		dec	ecx

loc_4CE:				; DATA XREF: .debug_loc:00008E3Co
		jz	short loc_52D
		mov	edi, ebp
		lea	esi, [ebp+ecx+0]

loc_4D6:				; DATA XREF: .debug_loc:00008DFEo
					; .debug_loc:off_8E0Eo	...
		xchg	ax, ax

loc_4D8:				; CODE XREF: _msim_escape+8Fj
					; DATA XREF: .debug_info:000052DCo ...
		mov	eax, _msim_escape_replacements

loc_4DD:				; DATA XREF: .debug_info:000076A4o
		movsx	ecx, byte ptr [edi]
		test	eax, eax
		jz	short loc_50D
		cmp	cl, byte_1B6C
		jz	short loc_554
		xor	edx, edx
		jmp	short loc_4F5
; ---------------------------------------------------------------------------

loc_4F0:				; CODE XREF: _msim_escape+6Fj
					; DATA XREF: .debug_loc:00008E12o ...
		cmp	[ebp+4], cl
		jz	short loc_554

loc_4F5:				; CODE XREF: _msim_escape+52j
					; DATA XREF: .debug_loc:00008E6Co
		inc	edx
		lea	eax, ds:0[edx*8]
		lea	ebp, _msim_escape_replacements[eax]
		mov	eax, _msim_escape_replacements[eax]
		test	eax, eax
		jnz	short loc_4F0

loc_50D:				; CODE XREF: _msim_escape+46j
					; DATA XREF: .debug_info:0000539Eo ...
		mov	edx, [ebx+4]
		lea	eax, [edx+1]
		cmp	eax, [ebx+8]
		jnb	short loc_564
		mov	ebp, [ebx]
		mov	[ebp+edx+0], cl
		mov	[ebx+4], eax
		mov	edx, [ebx]
		mov	byte ptr [edx+eax], 0

loc_527:				; DATA XREF: .debug_loc:00008E8Ao
					; .debug_loc:00008EB5o	...
		nop

loc_528:				; CODE XREF: _msim_escape:loc_560j
					; _msim_escape:loc_578j
		inc	edi

loc_529:				; DATA XREF: .debug_ranges:0000B030o
					; .debug_ranges:0000B048o
		cmp	edi, esi
		jnz	short loc_4D8

loc_52D:				; CODE XREF: _msim_escape:loc_4CEj
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], ebx
		call	_g_string_free

loc_53D:				; DATA XREF: .debug_info:00005402o
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_57A
		add	esp, 2Ch
		pop	ebx

loc_54D:				; DATA XREF: .debug_loc:00008DE0o
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_554:				; CODE XREF: _msim_escape+4Ej
					; _msim_escape+57j
					; DATA XREF: ...
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], ebx
		call	_g_string_append

loc_560:				; DATA XREF: .debug_info:000053D8o
		jmp	short loc_528
; ---------------------------------------------------------------------------
unk_562		db  66h	; f		; DATA XREF: .debug_loc:00008EBCo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_564:				; CODE XREF: _msim_escape+7Aj
					; DATA XREF: .debug_ranges:0000B04Co
		mov	[esp+3Ch+var_34], ecx
		mov	[esp+3Ch+var_38], 0FFFFFFFFh
		mov	[esp+3Ch+var_3C], ebx

loc_573:				; DATA XREF: .debug_loc:00008EC0o
		call	_g_string_insert_c

loc_578:				; DATA XREF: .debug_info:000053BFo
		jmp	short loc_528
; ---------------------------------------------------------------------------

loc_57A:				; CODE XREF: _msim_escape+ABj
					; DATA XREF: .debug_ranges:0000B038o ...
		call	___stack_chk_fail
_msim_escape	endp

; ---------------------------------------------------------------------------
unk_57F		db  90h	; ê		; DATA XREF: .debug_info:00005317o
					; .debug_info:0000541Do

; =============== S U B	R O U T	I N E =======================================


		public _msim_unescape
_msim_unescape	proc near		; CODE XREF: _msim_msg_get_string_from_element+A2j
					; DATA XREF: .debug_info:00005443o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_581:				; DATA XREF: .debug_loc:00008EF1o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	[esp+4Ch+var_4C], offset byte_1C7F
		call	_g_string_new

loc_5A2:				; DATA XREF: .debug_info:00005505o
		mov	ebx, eax

loc_5A4:				; DATA XREF: .debug_loc:off_8F9Bo
		xor	eax, eax

loc_5A6:				; DATA XREF: .debug_loc:00008F9Fo
					; .debug_info:00002CECo
		mov	ecx, 0FFFFFFFFh
		mov	edi, esi
		repne scasb

loc_5AF:				; DATA XREF: .debug_loc:00008F8Bo
		not	ecx

loc_5B1:				; DATA XREF: .debug_loc:off_8FB9o
					; .debug_loc:off_900Fo
		dec	ecx

loc_5B2:				; DATA XREF: .debug_loc:00009013o
		mov	[esp+4Ch+var_34], ecx
		jz	loc_64C

loc_5BC:				; DATA XREF: .debug_info:00002EECo
					; .debug_info:00003B81o ...
		mov	[esp+4Ch+var_30], 0

loc_5C4:				; CODE XREF: _msim_unescape+C6j
					; DATA XREF: .debug_loc:00008FBDo ...
		mov	edx, [esp+4Ch+var_30]
		movsx	ecx, byte ptr [esi+edx]

loc_5CC:				; DATA XREF: .debug_loc:off_8FD9o
					; .debug_loc:off_903Bo	...
		mov	eax, _msim_escape_replacements

loc_5D1:				; DATA XREF: .debug_info:000061E4o
		test	eax, eax
		jz	loc_699
		mov	ebp, [esp+4Ch+var_30]
		inc	ebp

loc_5DE:				; DATA XREF: .debug_info:00004329o
					; .debug_info:000043A5o ...
		mov	edi, offset _msim_escape_replacements
		xor	edx, edx
		mov	[esp+4Ch+var_38], ebx
		jmp	short loc_604
; ---------------------------------------------------------------------------
unk_5EB		db  90h	; ê		; DATA XREF: .debug_loc:00008FDDo
					; .debug_loc:0000903Fo
; ---------------------------------------------------------------------------

loc_5EC:				; CODE XREF: _msim_unescape+86j
					; _msim_unescape+8Cj ...
		inc	edx

loc_5ED:				; DATA XREF: .debug_info:00002FDDo
		lea	eax, ds:0[edx*8]
		lea	edi, _msim_escape_replacements[eax]
		mov	eax, _msim_escape_replacements[eax]
		test	eax, eax
		jz	short loc_670

loc_604:				; CODE XREF: _msim_unescape+69j
		cmp	cl, [eax]
		jnz	short loc_5EC
		cmp	[esp+4Ch+var_34], ebp
		jbe	short loc_5EC

loc_60E:				; DATA XREF: .eh_frame:0000C338o
		mov	bl, [eax+1]
		cmp	[esi+ebp], bl
		jnz	short loc_5EC
		mov	ebx, [esp+4Ch+var_38]
		movsx	ecx, byte ptr [edi+4]
		add	[esp+4Ch+var_30], 2

loc_623:				; CODE XREF: _msim_unescape+11Ej
					; DATA XREF: .debug_info:000054CEo ...
		mov	edx, [ebx+4]
		lea	eax, [edx+1]
		cmp	eax, [ebx+8]
		jnb	short loc_683
		xchg	ax, ax

loc_630:				; CODE XREF: _msim_unescape+101j
		mov	edi, [ebx]
		mov	[edi+edx], cl
		mov	[ebx+4], eax
		mov	edx, [ebx]
		mov	byte ptr [edx+eax], 0

loc_63E:				; CODE XREF: _msim_unescape:loc_697j
					; DATA XREF: .debug_loc:0000907Do ...
		mov	edx, [esp+4Ch+var_30]
		cmp	[esp+4Ch+var_34], edx
		ja	loc_5C4

loc_64C:				; CODE XREF: _msim_unescape+36j
					; DATA XREF: .debug_loc:000090C4o
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebx
		call	_g_string_free

loc_65C:				; DATA XREF: .debug_info:0000551Do
		mov	ebx, [esp+4Ch+var_20]
		xor	ebx, dword ptr ds:___stack_chk_guard
		jnz	short loc_6A0
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_670:				; CODE XREF: _msim_unescape+82j
					; DATA XREF: .debug_loc:00009084o
		mov	ebx, [esp+4Ch+var_38]

loc_674:				; DATA XREF: .debug_ranges:0000B064o
		mov	[esp+4Ch+var_30], ebp

loc_678:				; DATA XREF: .debug_ranges:0000B07Co
		mov	edx, [ebx+4]
		lea	eax, [edx+1]
		cmp	eax, [ebx+8]
		jb	short loc_630

loc_683:				; CODE XREF: _msim_unescape+ACj
		mov	[esp+4Ch+var_44], ecx
		mov	[esp+4Ch+var_48], 0FFFFFFFFh
		mov	[esp+4Ch+var_4C], ebx

loc_692:				; DATA XREF: .debug_loc:00009088o
		call	_g_string_insert_c

loc_697:				; DATA XREF: .debug_info:000054EBo
		jmp	short loc_63E
; ---------------------------------------------------------------------------

loc_699:				; CODE XREF: _msim_unescape+53j
		inc	edx
		mov	[esp+4Ch+var_30], edx
		jmp	short loc_623
; ---------------------------------------------------------------------------

loc_6A0:				; CODE XREF: _msim_unescape+E6j
					; DATA XREF: .debug_ranges:0000B068o ...
		call	___stack_chk_fail
_msim_unescape	endp

; ---------------------------------------------------------------------------
unk_6A5		db  8Dh	; ç		; DATA XREF: .debug_info:00005447o
					; .debug_info:00005538o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_append
_msim_msg_append proc near		; CODE XREF: _msim_msg_new_v:loc_791p
					; _msim_msg_new_v:loc_7D5p ...

var_3C		= dword	ptr -3Ch
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= byte ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp

loc_6A9:				; DATA XREF: .debug_loc:000090E2o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [esp+3Ch+arg_0]
		mov	ebp, [esp+3Ch+arg_4]
		mov	esi, [esp+3Ch+arg_C]
		movsx	ebx, [esp+3Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], eax
		xor	eax, eax

loc_6CB:				; DATA XREF: .debug_info:0000560Do
					; .debug_info:0000563Do ...
		mov	[esp+3Ch+var_3C], 10h
		call	_g_malloc0

loc_6D7:				; DATA XREF: .debug_info:0000564Fo
					; .debug_loc:off_91CCo
		mov	[eax], ebp
		mov	dword ptr [eax+4], 0
		mov	[eax+8], ebx
		mov	[eax+0Ch], esi

loc_6E6:				; DATA XREF: .debug_info:00005611o
					; .debug_info:00005641o
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_706
		mov	[esp+3Ch+arg_4], eax
		mov	[esp+3Ch+arg_0], edi
		add	esp, 2Ch
		pop	ebx
		pop	esi

loc_6FF:				; DATA XREF: .debug_loc:0000917Co
		pop	edi
		pop	ebp

loc_701:				; DATA XREF: .debug_loc:000091A6o
					; .debug_loc:000091D0o
		jmp	_g_list_append
; ---------------------------------------------------------------------------

loc_706:				; CODE XREF: _msim_msg_append+48j
					; DATA XREF: .debug_info:00005661o
		call	___stack_chk_fail
_msim_msg_append endp

; ---------------------------------------------------------------------------
unk_70B		db  90h	; ê		; DATA XREF: .debug_info:000055BFo
					; .debug_info:0000566Bo

; =============== S U B	R O U T	I N E =======================================


_msim_msg_new_v	proc near		; CODE XREF: _msim_msg_new:loc_917p
					; _msim_send:loc_1278p
					; DATA XREF: ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h

		push	edi

loc_70D:				; DATA XREF: .debug_loc:000091EEo
		push	esi
		push	ebx
		sub	esp, 30h
		mov	esi, eax
		mov	ebx, edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax

loc_721:				; DATA XREF: .debug_loc:00009270o
					; .debug_loc:off_9410o	...
		test	esi, esi
		jnz	short loc_75A
		jmp	short loc_74F
; ---------------------------------------------------------------------------
unk_727		db  90h	; ê		; DATA XREF: .debug_loc:0000929Co
					; .debug_loc:off_9353o	...
; ---------------------------------------------------------------------------

loc_728:				; CODE XREF: _msim_msg_new_v+57j
					; _msim_msg_new_v+5Cj
					; DATA XREF: ...
		add	ebx, 4		; jumptable 00000768 default case
		mov	[esp+3Ch+var_34], ecx
		mov	[esp+3Ch+var_38], offset aMsim_sendUnkno ; "msim_send: unknown type %d\n"
		mov	[esp+3Ch+var_3C], offset aMsim ; "msim"
		mov	[esp+3Ch+var_20], eax

loc_742:				; DATA XREF: .debug_loc:0000939Eo
					; .debug_loc:00009414o
		call	_purple_debug_info

loc_747:				; DATA XREF: .debug_info:000057BBo
		mov	eax, [esp+3Ch+var_20]

loc_74B:				; CODE XREF: _msim_msg_new_v+D0j
					; _msim_msg_new_v+F4j ...
		test	esi, esi
		jz	short loc_79C

loc_74F:				; CODE XREF: _msim_msg_new_v+19j
					; _msim_msg_new_v+8Ej
					; DATA XREF: ...
		lea	edx, [ebx+4]
		mov	esi, [ebx]
		test	esi, esi
		jz	short loc_79C
		mov	ebx, edx

loc_75A:				; CODE XREF: _msim_msg_new_v+17j
		movsx	ecx, byte ptr [ebx]
		lea	edx, [ecx-62h]
		cmp	dl, 11h		; switch 18 cases
		ja	short loc_728	; jumptable 00000768 default case
		movzx	edx, dl
		jmp	ds:off_1E18[edx*4] ; switch jump
; ---------------------------------------------------------------------------
		align 10h

loc_770:				; CODE XREF: _msim_msg_new_v+5Cj
					; DATA XREF: .rdata:off_1E18o
		lea	edi, [ebx+8]	; jumptable 00000768 case 17
		mov	edx, [ebx+4]

loc_776:				; DATA XREF: .debug_info:00005747o
					; .debug_loc:off_937Co
		test	edx, edx
		jz	loc_868

loc_77E:				; DATA XREF: .debug_info:off_574Bo
					; .debug_loc:off_9526o
		mov	[esp+3Ch+var_30], edx
		mov	[esp+3Ch+var_34], 73h ;	's'
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax

loc_791:				; DATA XREF: .debug_loc:00009380o
		call	_msim_msg_append

loc_796:				; DATA XREF: .debug_info:000057DDo
		mov	ebx, edi
		test	esi, esi
		jnz	short loc_74F

loc_79C:				; CODE XREF: _msim_msg_new_v+41j
					; _msim_msg_new_v+4Aj ...
		mov	edx, [esp+3Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_8F7
		add	esp, 30h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_7B4:				; CODE XREF: _msim_msg_new_v+5Cj
					; DATA XREF: .rdata:off_1E18o
		lea	edi, [ebx+8]	; jumptable 00000768 case 10
		mov	edx, [ebx+4]

loc_7BA:				; DATA XREF: .debug_info:00005764o
					; .debug_loc:off_94EAo
		test	edx, edx
		jz	loc_88C

loc_7C2:				; DATA XREF: .debug_info:00005768o
					; .debug_loc:off_9546o
		mov	[esp+3Ch+var_30], edx
		mov	[esp+3Ch+var_34], 6Ch ;	'l'
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax

loc_7D5:				; DATA XREF: .debug_info:00003011o
					; .debug_info:00003088o ...
		call	_msim_msg_append

loc_7DA:				; DATA XREF: .debug_info:000057F9o
		mov	ebx, edi
		jmp	loc_74B
; ---------------------------------------------------------------------------
unk_7E1		db  8Dh	; ç		; DATA XREF: .debug_loc:0000954Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_7E4:				; CODE XREF: _msim_msg_new_v+5Cj
					; DATA XREF: .rdata:off_1E18o
		lea	edi, [ebx+8]	; jumptable 00000768 cases 4,7
		mov	edx, [ebx+4]
		mov	[esp+3Ch+var_30], edx
		mov	[esp+3Ch+var_34], ecx
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax
		call	_msim_msg_append

loc_7FE:				; DATA XREF: .debug_info:00005815o
		mov	ebx, edi
		jmp	loc_74B
; ---------------------------------------------------------------------------
		align 4

loc_808:				; CODE XREF: _msim_msg_new_v+5Cj
					; DATA XREF: .rdata:off_1E18o
		lea	edi, [ebx+8]	; jumptable 00000768 case 2
		mov	edx, [ebx+4]

loc_80E:				; DATA XREF: .debug_info:00005781o
					; .debug_loc:off_9508o
		test	edx, edx
		jz	loc_8B0

loc_816:				; DATA XREF: .debug_info:00005785o
					; .debug_loc:off_9566o
		mov	[esp+3Ch+var_30], edx

loc_81A:				; DATA XREF: .debug_info:0000300Co
					; .debug_info:00004589o
		mov	[esp+3Ch+var_34], 64h ;	'd'
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax

loc_829:				; DATA XREF: .debug_loc:0000950Co
		call	_msim_msg_append

loc_82E:				; DATA XREF: .debug_info:0000582Ao
		mov	ebx, edi

loc_830:				; DATA XREF: .debug_info:00003034o
		jmp	loc_74B
; ---------------------------------------------------------------------------
unk_835		db  8Dh	; ç		; DATA XREF: .debug_loc:0000956Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_838:				; CODE XREF: _msim_msg_new_v+5Cj
					; DATA XREF: .rdata:off_1E18o
		lea	edi, [ebx+8]	; jumptable 00000768 case 0
		mov	edx, [ebx+4]

loc_83E:				; DATA XREF: .debug_info:0000579Eo
					; .debug_loc:off_94CCo
		test	edx, edx
		jz	loc_8D4

loc_846:				; DATA XREF: .debug_info:000057A2o
					; .debug_loc:off_9586o
		mov	[esp+3Ch+var_30], edx
		mov	[esp+3Ch+var_34], 62h ;	'b'
		mov	[esp+3Ch+var_38], esi
		mov	[esp+3Ch+var_3C], eax

loc_859:				; DATA XREF: .debug_loc:000094D0o
		call	_msim_msg_append

loc_85E:				; DATA XREF: .debug_info:00005846o
		mov	ebx, edi
		jmp	loc_74B
; ---------------------------------------------------------------------------
unk_865		db  8Dh	; ç		; DATA XREF: .debug_loc:0000958Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_868:				; CODE XREF: _msim_msg_new_v+6Cj
		mov	[esp+3Ch+var_34], offset aValueNull ; "value !=	NULL"
		mov	[esp+3Ch+var_38], offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		mov	[esp+3Ch+var_3C], 0
		call	_g_return_if_fail_warning

loc_884:				; DATA XREF: .debug_info:00005862o
		xor	eax, eax
		jmp	loc_79C
; ---------------------------------------------------------------------------
unk_88B		db  90h	; ê		; DATA XREF: .debug_loc:00009536o
; ---------------------------------------------------------------------------

loc_88C:				; CODE XREF: _msim_msg_new_v+B0j
		mov	[esp+3Ch+var_34], offset aGlNull ; "gl != NULL"
		mov	[esp+3Ch+var_38], offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		mov	[esp+3Ch+var_3C], 0
		call	_g_return_if_fail_warning

loc_8A8:				; DATA XREF: .debug_info:0000588Ao
		xor	eax, eax
		jmp	loc_79C
; ---------------------------------------------------------------------------
unk_8AF		db  90h	; ê		; DATA XREF: .debug_loc:00009556o
; ---------------------------------------------------------------------------

loc_8B0:				; CODE XREF: _msim_msg_new_v+104j
		mov	[esp+3Ch+var_34], offset aDictNull ; "dict != NULL"
		mov	[esp+3Ch+var_38], offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		mov	[esp+3Ch+var_3C], 0
		call	_g_return_if_fail_warning

loc_8CC:				; DATA XREF: .debug_info:000058B2o
		xor	eax, eax
		jmp	loc_79C
; ---------------------------------------------------------------------------
unk_8D3		db  90h	; ê		; DATA XREF: .debug_loc:00009576o
; ---------------------------------------------------------------------------

loc_8D4:				; CODE XREF: _msim_msg_new_v+134j
		mov	[esp+3Ch+var_34], offset aGsNull ; "gs != NULL"
		mov	[esp+3Ch+var_38], offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"

loc_8E4:				; DATA XREF: .debug_line:off_B25Co
		mov	[esp+3Ch+var_3C], 0
		call	_g_return_if_fail_warning

loc_8F0:				; DATA XREF: .debug_info:off_58DAo
		xor	eax, eax
		jmp	loc_79C
; ---------------------------------------------------------------------------

loc_8F7:				; CODE XREF: _msim_msg_new_v+9Aj
					; DATA XREF: .debug_loc:00009596o
		call	___stack_chk_fail
_msim_msg_new_v	endp


; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_new
_msim_msg_new	proc near		; CODE XREF: _msim_msg_clone+1Ep
					; _msim_parse:loc_13B0p ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		sub	esp, 1Ch

loc_8FF:				; DATA XREF: .debug_loc:000095AAo
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx

loc_90F:				; DATA XREF: .debug_loc:off_95DEo
		test	eax, eax
		jz	short loc_92C

loc_913:				; DATA XREF: .debug_loc:off_9614o
		lea	edx, [esp+1Ch+arg_4]

loc_917:				; DATA XREF: .debug_loc:00009618o
		call	_msim_msg_new_v

loc_91C:				; CODE XREF: _msim_msg_new+32j
					; DATA XREF: .debug_info:00005976o ...
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_930
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_92C:				; CODE XREF: _msim_msg_new+15j
		xor	eax, eax
		jmp	short loc_91C
; ---------------------------------------------------------------------------

loc_930:				; CODE XREF: _msim_msg_new+2Aj
		call	___stack_chk_fail
_msim_msg_new	endp

; ---------------------------------------------------------------------------
unk_935		db  8Dh	; ç		; DATA XREF: .debug_info:0000593Ao
					; .debug_info:00005991o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_insert_before
_msim_msg_insert_before	proc near	; DATA XREF: .debug_info:000059BBo
					; .debug_loc:off_9641o

var_4C		= dword	ptr -4Ch
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= byte ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_939:				; DATA XREF: .debug_loc:00009645o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_0]
		mov	edx, [esp+4Ch+arg_4]
		mov	edi, [esp+4Ch+arg_8]
		mov	ebp, [esp+4Ch+arg_10]

loc_94F:				; DATA XREF: .debug_info:000032E8o
		movsx	eax, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_30], eax
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_963:				; DATA XREF: .debug_info:00005A4Do
					; .debug_info:00005A7Do ...
		mov	[esp+4Ch+var_4C], 10h
		mov	[esp+4Ch+var_34], edx
		call	_g_malloc0

loc_973:				; DATA XREF: .debug_info:00005A8Fo
		mov	ebx, eax

loc_975:				; DATA XREF: .debug_loc:off_9742o
		mov	[eax], edi
		mov	dword ptr [eax+4], 0
		mov	edi, [esp+4Ch+var_30]

loc_982:				; DATA XREF: .debug_loc:00009727o
		mov	[eax+8], edi
		mov	[eax+0Ch], ebp

loc_988:				; DATA XREF: .debug_info:00005A51o
					; .debug_info:00005A81o
		mov	edx, [esp+4Ch+var_34]
		mov	eax, esi

loc_98E:				; DATA XREF: .debug_loc:00009746o
		call	_msim_msg_get_node

loc_993:				; DATA XREF: .debug_info:00005AA1o
					; .debug_loc:off_96DBo
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_9B7
		mov	[esp+4Ch+arg_8], ebx
		mov	[esp+4Ch+arg_4], eax
		mov	[esp+4Ch+arg_0], esi
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

loc_9B2:				; DATA XREF: .debug_loc:000096FDo
					; .debug_loc:00009704o	...
		jmp	_g_list_insert_before
; ---------------------------------------------------------------------------

loc_9B7:				; CODE XREF: _msim_msg_insert_before+65j
					; DATA XREF: .debug_info:00005AB5o ...
		call	___stack_chk_fail
_msim_msg_insert_before	endp


; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_clone
_msim_msg_clone	proc near		; CODE XREF: _msim_msg_clone_element:loc_B4Ap
					; _msim_msg_get_dictionary:loc_1832j
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_9BD:				; DATA XREF: .debug_loc:0000977Bo
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_A10
		mov	[esp+2Ch+var_2C], 0
		call	_msim_msg_new

loc_9DF:				; DATA XREF: .debug_info:00005B12o
					; .debug_loc:off_97C7o
		mov	[esp+2Ch+var_14], eax
		lea	eax, [esp+2Ch+var_14]

loc_9E7:				; DATA XREF: .debug_loc:000097CBo
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], offset _msim_msg_clone_element
		mov	[esp+2Ch+var_2C], ebx
		call	_g_list_foreach

loc_9FB:				; DATA XREF: .debug_info:00005B26o
		mov	eax, [esp+2Ch+var_14]

loc_9FF:				; CODE XREF: _msim_msg_clone+56j
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_A14
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_A10:				; CODE XREF: _msim_msg_clone+15j
		xor	eax, eax
		jmp	short loc_9FF
; ---------------------------------------------------------------------------

loc_A14:				; CODE XREF: _msim_msg_clone+4Dj
		call	___stack_chk_fail
_msim_msg_clone	endp

; ---------------------------------------------------------------------------
unk_A19		db  8Dh	; ç		; DATA XREF: .debug_info:00005AE5o
					; .debug_info:00005B4Co
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_msim_msg_clone_element	proc near	; DATA XREF: _msim_msg_clone+2Fo
					; .debug_info:00005B3Fo ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_A1D:				; DATA XREF: .debug_loc:000097F6o
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	ebx, [esp+5Ch+arg_0]
		mov	esi, [esp+5Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_A36:				; DATA XREF: .debug_loc:off_988Co
					; .debug_loc:off_98D9o
		mov	edx, [ebx+8]
		lea	eax, [edx-2Dh]
		cmp	eax, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_AA8

loc_A41:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	[esp+5Ch+var_54], edx ;	jumptable 00000AA8 default case
		mov	[esp+5Ch+var_58], offset aMsim_msg_clone ; "msim_msg_clone_element: unknown type %d"...
		mov	[esp+5Ch+var_5C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_A59:				; DATA XREF: .debug_info:00005D08o
		mov	[esp+5Ch+var_48], offset ___PRETTY_FUNCTION___44650 ; "msim_msg_clone_element"
		mov	[esp+5Ch+var_4C], 248h
		mov	[esp+5Ch+var_50], offset aMessage_c ; "message.c"
		mov	[esp+5Ch+var_54], offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		mov	[esp+5Ch+var_58], 8
		mov	[esp+5Ch+var_5C], 0
		call	_g_log

loc_A8D:				; DATA XREF: .debug_info:00005D2Ao
					; .debug_loc:00009890o
		lea	esi, [esi+0]

loc_A90:				; CODE XREF: _msim_msg_clone_element+C5j
					; _msim_msg_clone_element+121j
		mov	eax, [esp+5Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	loc_B82
		add	esp, 4Ch
		pop	ebx
		pop	esi

loc_AA5:				; DATA XREF: .debug_loc:000098DDo
					; .debug_loc:000098E4o
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_AA8:				; CODE XREF: _msim_msg_clone_element+23j
					; DATA XREF: .debug_loc:000098E8o
		jmp	ds:off_1EC4[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 10h

loc_AB0:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	eax, [ebx+0Ch]	; jumptable 00000AA8 case 63
		call	_msim_msg_list_copy ; jumptable	000002B4 cases 16,38,51,57,64

loc_AB8:				; DATA XREF: .debug_info:00005D6Ao
		mov	edi, eax

loc_ABA:				; DATA XREF: .debug_loc:off_9903o
		mov	edx, [ebx+8]

loc_ABD:				; CODE XREF: _msim_msg_clone_element+138j
					; _msim_msg_clone_element+143j	...
		mov	ecx, [ebx+4]
		test	ecx, ecx
		jnz	short loc_AFB

loc_AC4:				; CODE XREF: _msim_msg_clone_element+DDj
		mov	[esp+5Ch+var_50], edi
		movsx	edx, dl

loc_ACB:				; DATA XREF: .debug_info:00003B95o
		mov	[esp+5Ch+var_54], edx
		mov	eax, [ebx]
		mov	[esp+5Ch+var_58], eax
		mov	eax, [esi]
		mov	[esp+5Ch+var_5C], eax
		call	_msim_msg_append

loc_ADF:				; DATA XREF: .debug_info:00005D73o
		mov	[esi], eax
		jmp	short loc_A90
; ---------------------------------------------------------------------------
		align 4

loc_AE4:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	eax, [ebx+0Ch]	; jumptable 00000AA8 cases 0,70
		mov	[esp+5Ch+var_5C], eax
		call	_g_strdup

loc_AEF:				; DATA XREF: .debug_info:00005D88o
		mov	edi, eax
		mov	edx, [ebx+8]
		mov	ecx, [ebx+4]
		test	ecx, ecx
		jz	short loc_AC4

loc_AFB:				; CODE XREF: _msim_msg_clone_element+A6j
		mov	eax, [ebx]
		mov	[esp+5Ch+var_5C], eax
		mov	[esp+5Ch+var_30], edx
		call	_g_strdup

loc_B09:				; DATA XREF: .debug_info:00005D91o
		mov	ebp, eax
		mov	ebx, [esi]

loc_B0D:				; DATA XREF: .debug_info:00005C66o
					; .debug_info:00005C9Eo ...
		mov	[esp+5Ch+var_5C], 10h

loc_B14:				; DATA XREF: .debug_loc:000099A2o
					; .debug_loc:000099B6o
		call	_g_malloc0

loc_B19:				; DATA XREF: .debug_info:00005CE4o
					; .debug_loc:off_99F7o
		mov	[eax], ebp
		mov	dword ptr [eax+4], 1
		mov	edx, [esp+5Ch+var_30]
		movsx	edx, dl
		mov	[eax+8], edx

loc_B2C:				; DATA XREF: .debug_info:000032F0o
		mov	[eax+0Ch], edi

loc_B2F:				; DATA XREF: .debug_info:00005CA2o
					; .debug_info:00005CD6o
		mov	[esp+5Ch+var_58], eax
		mov	[esp+5Ch+var_5C], ebx

loc_B36:				; DATA XREF: .debug_loc:000099FBo
		call	_g_list_append

loc_B3B:				; DATA XREF: .debug_info:00005C6Ao
					; .debug_info:00005CF6o
		mov	[esi], eax
		jmp	loc_A90
; ---------------------------------------------------------------------------
unk_B42		db  66h	; f		; DATA XREF: .debug_loc:off_9977o
					; .debug_loc:0000998Fo	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_B44:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	eax, [ebx+0Ch]	; jumptable 00000AA8 case 55
		mov	[esp+5Ch+var_5C], eax

loc_B4A:				; DATA XREF: .debug_loc:0000997Bo
		call	_msim_msg_clone

loc_B4F:				; DATA XREF: .debug_info:00005D9Ao
		mov	edi, eax
		mov	edx, [ebx+8]
		jmp	loc_ABD
; ---------------------------------------------------------------------------
		align 4

loc_B5C:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	edi, [ebx+0Ch]	; jumptable 00000AA8 cases 57,60
		jmp	loc_ABD
; ---------------------------------------------------------------------------

loc_B64:				; CODE XREF: _msim_msg_clone_element:loc_AA8j
					; DATA XREF: .rdata:off_1EC4o
		mov	eax, [ebx+0Ch]	; jumptable 00000AA8 case 53

loc_B67:				; DATA XREF: .debug_loc:off_9958o
		mov	edx, [eax+4]
		mov	[esp+5Ch+var_58], edx
		mov	eax, [eax]

loc_B70:				; DATA XREF: .debug_loc:0000995Co
		mov	[esp+5Ch+var_5C], eax
		call	_g_string_new_len

loc_B78:				; DATA XREF: .debug_info:00005DA3o
		mov	edi, eax
		mov	edx, [ebx+8]
		jmp	loc_ABD
; ---------------------------------------------------------------------------

loc_B82:				; CODE XREF: _msim_msg_clone_element+7Ej
		call	___stack_chk_fail
_msim_msg_clone_element	endp

; ---------------------------------------------------------------------------
unk_B87		db  90h	; ê		; DATA XREF: .debug_info:00005BD1o
					; .debug_info:00005DACo

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_list_free
_msim_msg_list_free proc near		; DATA XREF: .debug_info:00005DE9o
					; .debug_loc:off_9A0Ao	...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi

loc_B89:				; DATA XREF: .debug_loc:00009A0Eo
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_B9C:				; DATA XREF: .debug_loc:00009A76o
		test	ebx, ebx
		jz	short loc_BC6

loc_BA0:				; CODE XREF: _msim_msg_list_free+3Cj
					; DATA XREF: .debug_info:00005E09o
		mov	esi, [ebx]

loc_BA2:				; DATA XREF: .debug_loc:off_9A9Co
		mov	eax, [esi]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_BAC:				; DATA XREF: .debug_info:00005E26o
		mov	eax, [esi+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_BB7:				; DATA XREF: .debug_info:00005E2Fo
		mov	[esp+2Ch+var_2C], esi
		call	_g_free

loc_BBF:				; DATA XREF: .debug_info:00005E0Do
					; .debug_info:00005E38o
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_BA0

loc_BC6:				; CODE XREF: _msim_msg_list_free+16j
					; DATA XREF: .debug_loc:00009AA0o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_BE4
		mov	[esp+2Ch+arg_0], 0
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_g_list_free
; ---------------------------------------------------------------------------

loc_BE4:				; CODE XREF: _msim_msg_list_free+48j
					; DATA XREF: .debug_info:00005E4Ao
		call	___stack_chk_fail
_msim_msg_list_free endp

; ---------------------------------------------------------------------------
unk_BE9		db  8Dh	; ç		; DATA XREF: .debug_info:00005DEDo
					; .debug_info:00005E54o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_free
_msim_msg_free	proc near		; CODE XREF: _msim_msg_free_element_data+B6j
					; _msim_send:loc_1292p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_BED:				; DATA XREF: .debug_loc:00009AB3o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_C34
		mov	[esp+2Ch+var_24], 0
		mov	[esp+2Ch+var_28], offset _msim_msg_free_element
		mov	[esp+2Ch+var_2C], ebx
		call	_g_list_foreach

loc_C1B:				; DATA XREF: .debug_info:00005E92o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_C45
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	_g_list_free
; ---------------------------------------------------------------------------

loc_C34:				; CODE XREF: _msim_msg_free+15j
					; DATA XREF: .debug_info:00005EB7o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_C45
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_C45:				; CODE XREF: _msim_msg_free+39j
					; _msim_msg_free+52j
		call	___stack_chk_fail
_msim_msg_free	endp

; ---------------------------------------------------------------------------
unk_C4A		db  66h	; f		; DATA XREF: .debug_info:00005E75o
					; .debug_info:00005EC1o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_free_element_data
_msim_msg_free_element_data proc near	; CODE XREF: _msim_msg_free_element+16p
					; DATA XREF: .debug_info:00005EEBo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_C4F:				; DATA XREF: .debug_loc:00009B27o
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx
		mov	ecx, [eax+8]
		lea	edx, [ecx-2Dh]
		cmp	edx, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_C94

loc_C6A:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; DATA XREF: .rdata:off_201Co ...
		mov	[esp+2Ch+var_24], ecx ;	jumptable 00000C94 default case
		mov	[esp+2Ch+var_28], offset aMsim_msg_free_ ; "msim_msg_free_element_data:	not freeing"...
		mov	[esp+2Ch+var_2C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_C82:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; _msim_msg_free_element_data:loc_CE7j
					; DATA XREF: ...
		mov	eax, [esp+2Ch+var_10] ;	jumptable 00000C94 cases 57,60
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_D07
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_C94:				; CODE XREF: _msim_msg_free_element_data+1Cj
		jmp	ds:off_201C[edx*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_C9C:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; DATA XREF: .rdata:off_201Co
		mov	edx, [esp+2Ch+var_10] ;	jumptable 00000C94 case	63
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_D07
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	_g_list_free
; ---------------------------------------------------------------------------
unk_CB7		db  90h	; ê		; DATA XREF: .debug_info:00005F2Eo
; ---------------------------------------------------------------------------

loc_CB8:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; DATA XREF: .rdata:off_201Co
		mov	edx, [esp+2Ch+var_10] ;	jumptable 00000C94 cases 0,70
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_D07
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	_g_free
; ---------------------------------------------------------------------------
unk_CD3		db  90h	; ê		; DATA XREF: .debug_info:00005F38o
; ---------------------------------------------------------------------------

loc_CD4:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; DATA XREF: .rdata:off_201Co
		mov	[esp+2Ch+var_28], 1 ; jumptable	00000C94 case 53
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	_g_string_free

loc_CE7:				; DATA XREF: .debug_info:00005F42o
		jmp	short loc_C82	; jumptable 00000C94 cases 57,60
; ---------------------------------------------------------------------------
		align 4

loc_CEC:				; CODE XREF: _msim_msg_free_element_data:loc_C94j
					; DATA XREF: .rdata:off_201Co
		mov	edx, [esp+2Ch+var_10] ;	jumptable 00000C94 case	55
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_D07
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	_msim_msg_free
; ---------------------------------------------------------------------------

loc_D07:				; CODE XREF: _msim_msg_free_element_data+40j
					; _msim_msg_free_element_data+5Aj ...
		call	___stack_chk_fail
_msim_msg_free_element_data endp


; =============== S U B	R O U T	I N E =======================================


_msim_msg_free_element proc near	; DATA XREF: _msim_msg_free+1Fo
					; .debug_info:00005EABo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_D0D:				; DATA XREF: .debug_loc:00009BA7o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_D1F:				; DATA XREF: .debug_loc:off_9BF3o
		mov	[esp+2Ch+var_2C], ebx
		call	_msim_msg_free_element_data

loc_D27:				; DATA XREF: .debug_info:00005FC4o
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_D38
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_D38:				; CODE XREF: _msim_msg_free_element+20j
					; DATA XREF: .debug_info:00005FD9o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_D51
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx

loc_D4C:				; DATA XREF: .debug_loc:00009BF7o
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_D51:				; CODE XREF: _msim_msg_free_element+36j
					; DATA XREF: .debug_info:00005FE2o
		call	___stack_chk_fail
_msim_msg_free_element endp

; ---------------------------------------------------------------------------
unk_D56		db  66h	; f		; DATA XREF: .debug_info:00005F88o
					; .debug_info:00005FECo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_pack
_msim_msg_pack	proc near		; CODE XREF: _msim_msg_send+1Bp
					; DATA XREF: .debug_info:0000600Do ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_D5B:				; DATA XREF: .debug_loc:00009C21o
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_D6B:				; DATA XREF: .debug_info:0000603Eo
		test	eax, eax
		jz	short loc_DA0

loc_D6F:				; DATA XREF: .debug_info:00006042o
					; .debug_loc:off_9C55o
		mov	[esp+2Ch+var_28], offset aFinal	; "\\final\\"
		mov	[esp+2Ch+var_2C], offset byte_2138
		mov	ecx, offset byte_2138
		mov	edx, offset _msim_msg_pack_element
		call	_msim_msg_pack_using

loc_D8D:				; CODE XREF: _msim_msg_pack+66j
					; DATA XREF: .debug_info:0000605Co ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_DC0
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_DA0:				; CODE XREF: _msim_msg_pack+15j
		mov	[esp+2Ch+var_24], offset aMsgNull ; "msg != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44727 ; "msim_msg_pack"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_DBC:				; DATA XREF: .debug_info:00006097o
		xor	eax, eax
		jmp	short loc_D8D
; ---------------------------------------------------------------------------

loc_DC0:				; CODE XREF: _msim_msg_pack+3Fj
		call	___stack_chk_fail
_msim_msg_pack	endp

; ---------------------------------------------------------------------------
unk_DC5		db  8Dh	; ç		; DATA XREF: .debug_info:00006011o
					; .debug_info:000060BFo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_send
_msim_msg_send	proc near		; CODE XREF: _msim_send:loc_1286p
					; DATA XREF: .debug_info:000060E5o ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_DC9:				; DATA XREF: .debug_loc:00009C79o
		push	ebx
		sub	esp, 34h
		mov	esi, [esp+3Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+3Ch+arg_4]
		mov	[esp+3Ch+var_3C], eax
		call	_msim_msg_pack

loc_DE8:				; DATA XREF: .debug_info:0000616Bo
		mov	ebx, eax

loc_DEA:				; DATA XREF: .debug_info:0000614Do
					; .debug_loc:off_9CDFo
		test	eax, eax
		jz	short loc_E1C

loc_DEE:				; DATA XREF: .debug_info:00006151o
					; .debug_loc:off_9D26o
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], esi

loc_DF5:				; DATA XREF: .debug_loc:00009CE3o
		call	_msim_send_raw

loc_DFA:				; DATA XREF: .debug_info:00006181o
					; .debug_loc:off_9D13o
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_20], eax

loc_E01:				; DATA XREF: .debug_loc:00009D17o
		call	_g_free

loc_E06:				; DATA XREF: .debug_info:0000619Do
		mov	eax, [esp+3Ch+var_20]

loc_E0A:				; CODE XREF: _msim_msg_send+72j
					; DATA XREF: .debug_loc:00009D2Ao
		mov	edx, [esp+3Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_E3C
		add	esp, 34h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_E1C:				; CODE XREF: _msim_msg_send+24j
		mov	[esp+3Ch+var_34], offset aRawNull ; "raw != NULL"
		mov	[esp+3Ch+var_38], offset ___PRETTY_FUNCTION___44742 ; "msim_msg_send"
		mov	[esp+3Ch+var_3C], 0
		call	_g_return_if_fail_warning

loc_E38:				; DATA XREF: .debug_info:000061B2o
		xor	eax, eax
		jmp	short loc_E0A
; ---------------------------------------------------------------------------

loc_E3C:				; CODE XREF: _msim_msg_send+4Cj
		call	___stack_chk_fail
_msim_msg_send	endp

; ---------------------------------------------------------------------------
unk_E41		db  8Dh	; ç		; DATA XREF: .debug_info:000060E9o
					; .debug_info:000061DAo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_pack_element_data
_msim_msg_pack_element_data proc near	; CODE XREF: _msim_msg_pack_element_dict+23p
					; _msim_msg_pack_element+23p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi

loc_E45:				; DATA XREF: .debug_loc:00009D4Ao
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_E58:				; DATA XREF: .debug_info:000062ACo
		test	ebx, ebx
		jz	loc_FFC

loc_E60:				; DATA XREF: .debug_info:000062B0o
					; .debug_loc:off_9EB6o
		mov	edx, [ebx+8]
		lea	eax, [edx-2Dh]
		cmp	eax, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_EAC

loc_E6B:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	eax, [ebx]	; jumptable 00000EAC default case
		test	eax, eax

loc_E6F:				; DATA XREF: .debug_info:0000349Co
					; .debug_info:00003829o
		jz	loc_1020

loc_E75:				; CODE XREF: _msim_msg_pack_element_data:loc_1025j
		mov	[esp+2Ch+var_20], edx
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], offset aFieldSUnknownT ; "field %s, unknown type %d\n"

loc_E85:				; DATA XREF: .debug_info:00003689o
		mov	[esp+2Ch+var_2C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_E91:				; DATA XREF: .debug_info:00006386o
		xor	eax, eax

loc_E93:				; DATA XREF: .debug_loc:00009EBAo
		nop

loc_E94:				; CODE XREF: _msim_msg_pack_element_data:loc_F3Cj
					; _msim_msg_pack_element_data:loc_F57j	...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_1093
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_EAC:				; CODE XREF: _msim_msg_pack_element_data+25j
		jmp	ds:off_2190[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_EB4:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o ...
		mov	eax, [ebx+0Ch]	; jumptable 00000EAC case 70
		test	eax, eax
		jz	loc_1070

loc_EBF:				; DATA XREF: .debug_info:000062CEo
					; .debug_loc:off_9EEEo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_1093
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_msim_escape
; ---------------------------------------------------------------------------
unk_EDD		db  8Dh	; ç		; DATA XREF: .debug_info:000063A8o
					; .debug_loc:00009EF2o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_EE0:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	[esp+2Ch+var_2C], offset byte_1C7F ; jumptable 00000EAC	case 63
		call	_g_string_new

loc_EEC:				; DATA XREF: .debug_info:000063B2o
		mov	esi, eax

loc_EEE:				; DATA XREF: .debug_loc:off_9E6Eo
		mov	ebx, [ebx+0Ch]

loc_EF1:				; DATA XREF: .debug_loc:off_9EA3o
		test	ebx, ebx
		jz	short loc_F2C

loc_EF5:				; DATA XREF: .debug_loc:00009E72o
		lea	esi, [esi+0]

loc_EF8:				; CODE XREF: _msim_msg_pack_element_data+E6j
		mov	eax, [ebx]
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], offset aS ; "%s"
		mov	[esp+2Ch+var_2C], esi
		call	_g_string_append_printf

loc_F0E:				; DATA XREF: .debug_info:000063CAo
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_F2C
		mov	[esp+2Ch+var_28], offset asc_215B ; "|"
		mov	[esp+2Ch+var_2C], esi

loc_F20:				; DATA XREF: .debug_info:000036A5o
		call	_g_string_append

loc_F25:				; DATA XREF: .debug_info:000063E9o
		mov	ebx, [ebx+4]
		test	ebx, ebx
		jnz	short loc_EF8

loc_F2C:				; CODE XREF: _msim_msg_pack_element_data+AFj
					; _msim_msg_pack_element_data+CFj
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], esi
		call	_g_string_free

loc_F3C:				; DATA XREF: .debug_info:00006408o
					; .debug_info:00003860o
		jmp	loc_E94
; ---------------------------------------------------------------------------
unk_F41		db  8Dh	; ç		; DATA XREF: .debug_loc:00009EA7o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_F44:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	eax, [ebx+0Ch]	; jumptable 00000EAC case 60
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], offset aD ; "%d"
		call	_g_strdup_printf

loc_F57:				; DATA XREF: .debug_info:00006423o
		jmp	loc_E94
; ---------------------------------------------------------------------------

loc_F5C:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	eax, [ebx+0Ch]	; jumptable 00000EAC case 57
		test	eax, eax
		jz	loc_1050
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard

loc_F71:				; DATA XREF: .debug_info:000037F5o
		jnz	loc_1093
		mov	[esp+2Ch+arg_0], offset	aOn ; "On"
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_g_strdup
; ---------------------------------------------------------------------------
unk_F89		db  8Dh	; ç		; DATA XREF: .debug_info:0000643Bo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_F8C:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	eax, [ebx+0Ch]	; jumptable 00000EAC case 55

loc_F8F:				; DATA XREF: .debug_info:000062ECo
					; .debug_info:00006315o ...
		test	eax, eax
		jz	loc_102C

loc_F97:				; DATA XREF: .debug_info:00006319o
					; .debug_loc:off_9F2Co
		mov	[esp+2Ch+var_28], offset byte_1C7F
		mov	[esp+2Ch+var_2C], offset byte_1C7F
		mov	ecx, offset byte_218B
		mov	edx, offset _msim_msg_pack_element_dict

loc_FB0:				; DATA XREF: .debug_loc:00009F12o
		call	_msim_msg_pack_using

loc_FB5:				; DATA XREF: .debug_info:0000632Co
					; .debug_ranges:0000B090o ...
		jmp	loc_E94
; ---------------------------------------------------------------------------
unk_FBA		db  66h	; f		; DATA XREF: .debug_loc:off_9F30o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_FBC:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	eax, [ebx+0Ch]	; jumptable 00000EAC case 53
		mov	edx, [eax+4]
		mov	[esp+2Ch+var_28], edx
		mov	eax, [eax]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_base64_encode

loc_FD0:				; DATA XREF: .debug_info:00006445o
		jmp	loc_E94
; ---------------------------------------------------------------------------
		align 4

loc_FD8:				; CODE XREF: _msim_msg_pack_element_data:loc_EACj
					; DATA XREF: .rdata:off_2190o
		mov	edx, [esp+2Ch+var_10] ;	jumptable 00000EAC case	0
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_1093
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi

loc_FF4:				; DATA XREF: .debug_info:00003811o
		jmp	_g_strdup
; ---------------------------------------------------------------------------
unk_FF9		db  8Dh	; ç		; DATA XREF: .debug_info:0000644Eo
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_FFC:				; CODE XREF: _msim_msg_pack_element_data+16j
		mov	[esp+2Ch+var_24], offset aElemNull ; "elem != NULL"

loc_1004:				; DATA XREF: .debug_info:00003804o
					; .debug_info:0000381Co ...
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44750 ; "msim_msg_pack_element_data"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1018:				; DATA XREF: .debug_info:00006458o
		xor	eax, eax
		jmp	loc_E94
; ---------------------------------------------------------------------------
		align 10h

loc_1020:				; CODE XREF: _msim_msg_pack_element_data:loc_E6Fj
		mov	eax, offset aNull ; "(NULL)"

loc_1025:				; DATA XREF: .debug_info:00003844o
		jmp	loc_E75
; ---------------------------------------------------------------------------
		align 4

loc_102C:				; CODE XREF: _msim_msg_pack_element_data+14Dj
					; DATA XREF: .debug_ranges:0000B094o ...
		mov	[esp+2Ch+var_24], offset aMsgNull ; "msg != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44733 ; "msim_msg_pack_dict"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1048:				; DATA XREF: .debug_info:00006360o
		xor	eax, eax
		jmp	loc_E94
; ---------------------------------------------------------------------------
		align 10h

loc_1050:				; CODE XREF: _msim_msg_pack_element_data+11Dj
					; DATA XREF: .debug_ranges:0000B098o ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard

loc_105A:				; DATA XREF: .debug_info:00003850o
					; .debug_info:off_3854o
		jnz	short loc_1093
		mov	[esp+2Ch+arg_0], offset	aOff ; "Off"
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_g_strdup
; ---------------------------------------------------------------------------
unk_106E	db  66h	; f		; DATA XREF: .debug_info:00006480o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1070:				; CODE XREF: _msim_msg_pack_element_data+75j
		mov	[esp+2Ch+var_24], offset aElemDataNull ; "elem->data !=	NULL"

loc_1078:				; DATA XREF: .debug_info:0000387Co
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44750 ; "msim_msg_pack_element_data"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_108C:				; DATA XREF: .debug_info:0000648Ao
		xor	eax, eax

loc_108E:				; DATA XREF: .debug_info:0000453Co
		jmp	loc_E94
; ---------------------------------------------------------------------------

loc_1093:				; CODE XREF: _msim_msg_pack_element_data+5Aj
					; _msim_msg_pack_element_data+85j ...
		call	___stack_chk_fail
_msim_msg_pack_element_data endp


; =============== S U B	R O U T	I N E =======================================


_msim_msg_pack_element_dict proc near	; DATA XREF: _msim_msg_pack_element_data+167o
					; .debug_info:00006261o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi

loc_1099:				; DATA XREF: .debug_loc:00009F50o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_0]

loc_10A2:				; DATA XREF: .debug_info:000038A5o
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_10B1:				; DATA XREF: .debug_loc:off_9FCCo
					; .debug_loc:off_A019o
		mov	eax, [ebx]
		cmp	byte ptr [eax],	5Fh ; '_'
		jz	short loc_10F5

loc_10B8:				; DATA XREF: .debug_info:0000457Do
					; .debug_info:00006512o ...
		mov	[esp+2Ch+var_2C], ebx
		call	_msim_msg_pack_element_data

loc_10C0:				; DATA XREF: .debug_info:00006577o
		mov	esi, eax

loc_10C2:				; DATA XREF: .debug_info:00006560o
					; .debug_loc:off_A0B4o
		test	eax, eax
		jz	short loc_1144

loc_10C6:				; DATA XREF: .debug_info:00006564o
					; .debug_loc:off_A0F3o
		mov	eax, [ebx+8]

loc_10C9:				; DATA XREF: .debug_loc:0000A0B8o
		sub	eax, 2Dh ; '-'
		cmp	eax, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_1108

loc_10D1:				; CODE XREF: _msim_msg_pack_element_dict:loc_1108j
					; DATA XREF: .rdata:off_22C4o
		mov	[esp+2Ch+var_2C], esi ;	jumptable 00001108 default case
		call	_g_free

loc_10D9:				; DATA XREF: .debug_info:0000658Co
		mov	[esp+2Ch+var_24], offset aFalse	; "FALSE"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_10F5:				; CODE XREF: _msim_msg_pack_element_dict+1Ej
					; _msim_msg_pack_element_dict+A7j ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_1162
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi

locret_1107:				; DATA XREF: .debug_loc:0000A01Do
					; .debug_loc:0000A024o
		retn
; ---------------------------------------------------------------------------

loc_1108:				; CODE XREF: _msim_msg_pack_element_dict+37j
					; DATA XREF: .debug_loc:0000A028o ...
		jmp	ds:off_22C4[eax*4] ; switch jump
; ---------------------------------------------------------------------------
		align 10h

loc_1110:				; CODE XREF: _msim_msg_pack_element_dict:loc_1108j
					; DATA XREF: .rdata:off_22C4o
		mov	[esp+2Ch+var_20], 0 ; jumptable	00001108 cases 0,53,55,57,60,63,70
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_28], offset byte_22AC
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	_g_strconcat

loc_112E:				; DATA XREF: .debug_info:000065C9o
		mov	ebx, eax

loc_1130:				; DATA XREF: .debug_loc:0000A070o
					; .debug_loc:off_A096o
		mov	[esp+2Ch+var_2C], esi

loc_1133:				; DATA XREF: .debug_loc:0000A09Ao
		call	_g_free

loc_1138:				; DATA XREF: .debug_info:000065EEo
		mov	edx, [edi]
		mov	[edx], ebx
		add	dword ptr [edi], 4
		jmp	short loc_10F5
; ---------------------------------------------------------------------------
		align 4

loc_1144:				; CODE XREF: _msim_msg_pack_element_dict+2Cj
		mov	[esp+2Ch+var_24], offset aData_stringNul ; "data_string	!= NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1160:				; DATA XREF: .debug_info:00006603o
		jmp	short loc_10F5
; ---------------------------------------------------------------------------

loc_1162:				; CODE XREF: _msim_msg_pack_element_dict+67j
					; DATA XREF: .debug_ranges:0000B0C8o ...
		call	___stack_chk_fail
_msim_msg_pack_element_dict endp

; ---------------------------------------------------------------------------
unk_1167	db  90h	; ê		; DATA XREF: .debug_info:000064C9o
					; .debug_info:00006629o

; =============== S U B	R O U T	I N E =======================================


_msim_msg_pack_element proc near	; DATA XREF: _msim_msg_pack+2Bo
					; .debug_info:00006074o ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi

loc_1169:				; DATA XREF: .debug_loc:0000A123o
		push	esi
		push	ebx
		sub	esp, 30h
		mov	ebx, [esp+3Ch+arg_0]
		mov	esi, [esp+3Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax

loc_1181:				; DATA XREF: .debug_loc:off_A1A1o
					; .debug_loc:off_A205o
		mov	eax, [ebx]
		cmp	byte ptr [eax],	5Fh ; '_'
		jz	short loc_11D9

loc_1188:				; DATA XREF: .debug_info:00006684o
					; .debug_loc:off_A22Fo	...
		mov	[esp+3Ch+var_3C], ebx
		call	_msim_msg_pack_element_data

loc_1190:				; DATA XREF: .debug_info:000066D2o
		mov	edi, eax

loc_1192:				; DATA XREF: .debug_loc:off_A2D9o
		mov	edx, [ebx+8]
		sub	edx, 2Dh ; '-'
		cmp	edx, 46h ; 'F'  ; switch 71 cases
		jbe	short loc_11EC

loc_119D:				; CODE XREF: _msim_msg_pack_element:loc_11ECj
					; DATA XREF: .rdata:off_23E4o
		mov	[esp+3Ch+var_3C], edi ;	jumptable 000011EC default case

loc_11A0:				; DATA XREF: .debug_loc:0000A2DDo
					; .debug_loc:0000A2E4o
		call	_g_free

loc_11A5:				; DATA XREF: .debug_info:000066E7o
		mov	[esp+3Ch+var_28], offset ___PRETTY_FUNCTION___44699 ; "msim_msg_pack_element"
		mov	[esp+3Ch+var_2C], 307h
		mov	[esp+3Ch+var_30], offset aMessage_c ; "message.c"
		mov	[esp+3Ch+var_34], offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		mov	[esp+3Ch+var_38], 8
		mov	[esp+3Ch+var_3C], 0
		call	_g_log

loc_11D9:				; CODE XREF: _msim_msg_pack_element+1Ej
					; _msim_msg_pack_element+DBj
					; DATA XREF: ...
		mov	eax, [esp+3Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_1258
		add	esp, 30h
		pop	ebx
		pop	esi

loc_11EA:				; DATA XREF: .debug_loc:0000A209o
					; .debug_loc:0000A210o
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_11EC:				; CODE XREF: _msim_msg_pack_element+33j
					; DATA XREF: .debug_loc:0000A1B0o ...
		jmp	ds:off_23E4[edx*4] ; switch jump
; ---------------------------------------------------------------------------
		align 4

loc_11F4:				; CODE XREF: _msim_msg_pack_element:loc_11ECj
					; DATA XREF: .rdata:off_23E4o
		mov	eax, [ebx+0Ch]	; jumptable 000011EC case 57
		test	eax, eax
		jz	short loc_1248
		mov	eax, [ebx]
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], offset dword_23E0
		call	_g_strdup_printf

loc_120D:				; DATA XREF: .debug_info:0000673Co
		mov	ebx, eax

loc_120F:				; DATA XREF: .debug_loc:0000A25Co
					; .debug_loc:off_A2A5o
		jmp	short loc_1234
; ---------------------------------------------------------------------------
unk_1211	db  8Dh	; ç		; DATA XREF: .debug_loc:0000A2A9o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1214:				; CODE XREF: _msim_msg_pack_element:loc_11ECj
					; DATA XREF: .rdata:off_23E4o
		mov	[esp+3Ch+var_30], 0 ; jumptable	000011EC cases 0,53,55,60,63,70
		mov	[esp+3Ch+var_34], eax
		mov	[esp+3Ch+var_38], offset byte_2138
		mov	eax, [ebx]
		mov	[esp+3Ch+var_3C], eax
		call	_g_strconcat

loc_1232:				; DATA XREF: .debug_info:00006754o
		mov	ebx, eax

loc_1234:				; CODE XREF: _msim_msg_pack_element:loc_120Fj
					; _msim_msg_pack_element+EEj
					; DATA XREF: ...
		mov	[esp+3Ch+var_3C], edi

loc_1237:				; DATA XREF: .debug_loc:0000A2B4o
		call	_g_free

loc_123C:				; DATA XREF: .debug_info:00006779o
		mov	edx, [esi]
		mov	[edx], ebx
		add	dword ptr [esi], 4
		jmp	short loc_11D9
; ---------------------------------------------------------------------------
		align 4

loc_1248:				; CODE XREF: _msim_msg_pack_element+91j
		mov	[esp+3Ch+var_3C], offset byte_1C7F
		call	_g_strdup

loc_1254:				; DATA XREF: .debug_info:0000678Eo
		mov	ebx, eax
		jmp	short loc_1234
; ---------------------------------------------------------------------------

loc_1258:				; CODE XREF: _msim_msg_pack_element+7Bj
					; DATA XREF: .debug_ranges:0000B0F8o ...
		call	___stack_chk_fail
_msim_msg_pack_element endp

; ---------------------------------------------------------------------------
unk_125D	db  8Dh	; ç		; DATA XREF: .debug_info:0000663Bo
					; .debug_info:000067A4o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _msim_send
_msim_send	proc near		; DATA XREF: .debug_info:000067C1o
					; .debug_loc:off_A323o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= byte ptr  8

		push	esi

loc_1261:				; DATA XREF: .debug_loc:0000A327o
		push	ebx
		sub	esp, 34h
		mov	esi, [esp+3Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax

loc_1274:				; DATA XREF: .debug_loc:off_A3C9o
		lea	edx, [esp+3Ch+arg_4]

loc_1278:				; DATA XREF: .debug_loc:0000A3CDo
		call	_msim_msg_new_v

loc_127D:				; DATA XREF: .debug_info:0000681Co
		mov	ebx, eax

loc_127F:				; DATA XREF: .debug_loc:off_A3A0o
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], esi

loc_1286:				; DATA XREF: .debug_loc:0000A3A4o
		call	_msim_msg_send

loc_128B:				; DATA XREF: .debug_info:00006835o
					; .debug_loc:off_A38Do
		mov	[esp+3Ch+var_3C], ebx
		mov	[esp+3Ch+var_20], eax

loc_1292:				; DATA XREF: .debug_loc:0000A391o
		call	_msim_msg_free

loc_1297:				; DATA XREF: .debug_info:00006851o
		mov	eax, [esp+3Ch+var_20]
		mov	edx, [esp+3Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_12AD
		add	esp, 34h
		pop	ebx

loc_12AB:				; DATA XREF: .debug_info:000038F8o
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_12AD:				; CODE XREF: _msim_send+45j
		call	___stack_chk_fail
_msim_send	endp

; ---------------------------------------------------------------------------
unk_12B2	db  66h	; f		; DATA XREF: .debug_info:000067C5o
					; .debug_info:00006866o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_dump
_msim_msg_dump	proc near		; DATA XREF: .debug_info:00006883o
					; .debug_loc:off_A3F6o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_12B5:				; DATA XREF: .debug_loc:0000A3FAo
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	eax, [esp+2Ch+arg_4]

loc_12C1:				; DATA XREF: .debug_info:off_3AC5o
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_12CD:				; DATA XREF: .debug_info:000068DAo
		test	esi, esi
		jz	short loc_130C

loc_12D1:				; DATA XREF: .debug_info:000068DEo
					; .debug_loc:off_A4CEo
		call	_msim_msg_dump_to_str

loc_12D6:				; DATA XREF: .debug_info:00006916o
		mov	ebx, eax

loc_12D8:				; DATA XREF: .debug_info:000068F8o
					; .debug_loc:off_A48Eo
		test	eax, eax
		jz	short loc_133C

loc_12DC:				; DATA XREF: .debug_info:000068FCo
					; .debug_loc:off_A4FAo
		mov	[esp+2Ch+var_24], eax
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], offset aMsim ; "msim"

loc_12EB:				; DATA XREF: .debug_loc:0000A492o
		call	_purple_debug_info

loc_12F0:				; DATA XREF: .debug_info:0000692Bo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_135A
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_g_free
; ---------------------------------------------------------------------------
unk_130A	db  66h	; f		; DATA XREF: .debug_info:00006951o
					; .debug_loc:0000A4D2o	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_130C:				; CODE XREF: _msim_msg_dump+1Bj
		mov	[esp+2Ch+var_24], offset aFmt_stringNull ; "fmt_string != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44777 ; "msim_msg_dump"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1328:				; CODE XREF: _msim_msg_dump:loc_1358j
					; DATA XREF: .debug_info:0000695Bo
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_135A
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_133C:				; CODE XREF: _msim_msg_dump+26j
		mov	[esp+2Ch+var_24], offset aDebug_strNull	; "debug_str !=	NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44777 ; "msim_msg_dump"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1358:				; DATA XREF: .debug_info:00006983o
		jmp	short loc_1328
; ---------------------------------------------------------------------------

loc_135A:				; CODE XREF: _msim_msg_dump+46j
					; _msim_msg_dump+7Ej
		call	___stack_chk_fail
_msim_msg_dump	endp

; ---------------------------------------------------------------------------
unk_135F	db  90h	; ê		; DATA XREF: .debug_info:00006887o
					; .debug_info:000069ABo

; =============== S U B	R O U T	I N E =======================================


		public _msim_parse
_msim_parse	proc near		; DATA XREF: .debug_info:000069CEo
					; .debug_loc:off_A51Ao

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_1361:				; DATA XREF: .debug_loc:0000A51Eo
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_1376:				; DATA XREF: .debug_info:00006A64o
		test	ebx, ebx
		jz	loc_148C

loc_137E:				; DATA XREF: .debug_info:00006A68o
					; .debug_loc:off_A6A2o
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_48], offset aMsim_parseGotS ; "msim_parse:	got <%s>\n"
		mov	[esp+4Ch+var_4C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_1396:				; DATA XREF: .debug_info:00006B28o
					; .debug_loc:off_A62Fo
		cmp	byte ptr [ebx],	5Ch ; '\'
		jnz	loc_146C
		cmp	byte ptr [ebx+1], 0
		jz	loc_146C
		mov	[esp+4Ch+var_4C], 0

loc_13B0:				; DATA XREF: .debug_info:00004571o
		call	_msim_msg_new

loc_13B5:				; DATA XREF: .debug_info:00006B51o
		mov	edi, eax

loc_13B7:				; DATA XREF: .debug_loc:off_A5B4o
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], offset byte_2138
		inc	ebx

loc_13C8:				; DATA XREF: .debug_info:00003BC8o
		mov	[esp+4Ch+var_4C], ebx

loc_13CB:				; DATA XREF: .debug_loc:0000A5B8o
		call	_g_strsplit

loc_13D0:				; DATA XREF: .debug_info:00006B65o
		mov	ebp, eax

loc_13D2:				; DATA XREF: .debug_loc:off_A606o
					; .debug_loc:off_A678o
		mov	esi, [eax]

loc_13D4:				; DATA XREF: .debug_loc:off_A5DDo
		xor	ebx, ebx
		test	esi, esi
		jz	short loc_13F3

loc_13DA:				; CODE XREF: _msim_parse:loc_1465j
					; DATA XREF: .debug_loc:0000A5E1o ...
		inc	ebx
		mov	edx, [ebp+ebx*4+0]

loc_13DF:				; DATA XREF: .debug_loc:0000A5E8o
		test	edx, edx
		jz	short loc_13F3

loc_13E3:				; CODE XREF: _msim_parse+91j
		test	bl, 1
		jnz	short loc_1418
		mov	esi, edx
		inc	ebx
		mov	edx, [ebp+ebx*4+0]
		test	edx, edx
		jnz	short loc_13E3

loc_13F3:				; CODE XREF: _msim_parse+78j
					; _msim_parse+81j
					; DATA XREF: ...
		mov	[esp+4Ch+var_4C], ebp
		call	_g_strfreev

loc_13FB:				; CODE XREF: _msim_parse+126j
					; _msim_parse+14Aj
					; DATA XREF: ...
		mov	eax, edi
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_14AF
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_1415	db  8Dh	; ç		; DATA XREF: .debug_loc:off_A665o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1418:				; CODE XREF: _msim_parse+86j
		mov	[esp+4Ch+var_4C], edx

loc_141B:				; DATA XREF: .debug_loc:0000A669o
		call	_g_strdup

loc_1420:				; DATA XREF: .debug_info:00006B9Fo
		mov	[esp+4Ch+var_4C], esi
		mov	[esp+4Ch+var_34], eax
		call	_g_strdup

loc_142C:				; DATA XREF: .debug_info:00006A86o
					; .debug_info:00006ABEo ...
		mov	[esp+4Ch+var_4C], 10h
		mov	[esp+4Ch+var_30], eax

loc_1437:				; DATA XREF: .debug_loc:0000A6D2o
					; .debug_loc:0000A6FBo
		call	_g_malloc0

loc_143C:				; DATA XREF: .debug_info:00006B04o
					; .debug_loc:off_A731o
		mov	ecx, [esp+4Ch+var_30]
		mov	[eax], ecx
		mov	dword ptr [eax+4], 1
		mov	dword ptr [eax+8], 2Dh ; '-'
		mov	edx, [esp+4Ch+var_34]
		mov	[eax+0Ch], edx

loc_1457:				; DATA XREF: .debug_info:00006AC2o
					; .debug_info:00006AF6o
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], edi

loc_145E:				; DATA XREF: .debug_loc:0000A735o
		call	_g_list_append

loc_1463:				; DATA XREF: .debug_info:00006B16o
		mov	edi, eax

loc_1465:				; DATA XREF: .debug_loc:0000A70Eo
		jmp	loc_13DA
; ---------------------------------------------------------------------------
unk_146A	db  66h	; f		; DATA XREF: .debug_loc:0000A6E6o
					; .debug_loc:0000A721o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_146C:				; CODE XREF: _msim_parse+39j
					; _msim_parse+43j
					; DATA XREF: ...
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_48], offset aMsim_parseInco ; "msim_parse:	incomplete/bad string, miss"...
		mov	[esp+4Ch+var_4C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_1484:				; DATA XREF: .debug_info:00006BBDo
		xor	edi, edi
		jmp	loc_13FB
; ---------------------------------------------------------------------------
		align 4

loc_148C:				; CODE XREF: _msim_parse+18j
		mov	[esp+4Ch+var_44], offset aRawNull ; "raw != NULL"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___44791 ; "msim_parse"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_14A8:				; DATA XREF: .debug_info:00006BE6o
		xor	edi, edi
		jmp	loc_13FB
; ---------------------------------------------------------------------------

loc_14AF:				; CODE XREF: _msim_parse+A7j
		call	___stack_chk_fail
_msim_parse	endp


; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get
_msim_msg_get	proc near		; CODE XREF: _msim_msg_get_string:loc_1601p
					; _msim_msg_get_list+21p ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch

loc_14B7:				; DATA XREF: .debug_loc:0000A748o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	edx, [esp+1Ch+arg_4]
		mov	eax, [esp+1Ch+arg_0]
		call	_msim_msg_get_node

loc_14CF:				; DATA XREF: .debug_info:00006C84o
					; .debug_loc:off_A77Co
		test	eax, eax
		jz	short loc_14E5
		mov	eax, [eax]

loc_14D5:				; CODE XREF: _msim_msg_get+33j
					; DATA XREF: .debug_loc:0000A780o
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_14E9
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_14E5:				; CODE XREF: _msim_msg_get+1Dj
		xor	eax, eax
		jmp	short loc_14D5
; ---------------------------------------------------------------------------

loc_14E9:				; CODE XREF: _msim_msg_get+2Bj
		call	___stack_chk_fail
_msim_msg_get	endp

; ---------------------------------------------------------------------------
unk_14EE	db  66h	; f		; DATA XREF: .debug_info:00006C47o
					; .debug_info:00006CA0o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get_string_from_element
_msim_msg_get_string_from_element proc near ; CODE XREF: _msim_msg_get_string:loc_161Dj
					; DATA XREF: .debug_info:00006CD4o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_14F3:				; DATA XREF: .debug_loc:0000A79Eo
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_1503:				; DATA XREF: .debug_info:00006D05o
		test	eax, eax
		jz	loc_15B0

loc_150B:				; DATA XREF: .debug_info:00006D09o
					; .debug_loc:off_A802o
		mov	edx, [eax+8]
		cmp	edx, 69h ; 'i'
		jz	loc_1598
		cmp	edx, 73h ; 's'
		jz	short loc_1560
		cmp	edx, 2Dh ; '-'
		jz	short loc_157C
		mov	eax, [eax]
		test	eax, eax

loc_1525:				; DATA XREF: .debug_info:00003C94o
					; .debug_info:00003DC9o
		jz	loc_15D4

loc_152B:				; CODE XREF: _msim_msg_get_string_from_element+E9j
		mov	[esp+2Ch+var_20], eax
		mov	[esp+2Ch+var_24], edx
		mov	[esp+2Ch+var_28], offset aMsim_msg_get_s ; "msim_msg_get_string_element: type %d un"...
		mov	[esp+2Ch+var_2C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_1547:				; DATA XREF: .debug_info:00006D23o
		xor	eax, eax

loc_1549:				; CODE XREF: _msim_msg_get_string_from_element:loc_15ABj
					; _msim_msg_get_string_from_element+DEj
					; DATA XREF: ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_15DE
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_1560:				; CODE XREF: _msim_msg_get_string_from_element+2Aj
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_15DE
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	_g_strdup
; ---------------------------------------------------------------------------
unk_157B	db  90h	; ê		; DATA XREF: .debug_info:00006D45o
; ---------------------------------------------------------------------------

loc_157C:				; CODE XREF: _msim_msg_get_string_from_element+2Fj
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_15DE
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch
		jmp	_msim_unescape
; ---------------------------------------------------------------------------
unk_1597	db  90h	; ê		; DATA XREF: .debug_info:00006D4Fo
; ---------------------------------------------------------------------------

loc_1598:				; CODE XREF: _msim_msg_get_string_from_element+21j
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], offset aD ; "%d"
		call	_g_strdup_printf

loc_15AB:				; DATA XREF: .debug_info:00006D59o
		jmp	short loc_1549
; ---------------------------------------------------------------------------
		align 10h

loc_15B0:				; CODE XREF: _msim_msg_get_string_from_element+15j
		mov	[esp+2Ch+var_24], offset aElemNull ; "elem != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44805 ; "msim_msg_get_string_from_element"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_15CC:				; DATA XREF: .debug_info:00006D71o
		xor	eax, eax
		jmp	loc_1549
; ---------------------------------------------------------------------------
		align 4

loc_15D4:				; CODE XREF: _msim_msg_get_string_from_element:loc_1525j
		mov	eax, offset aNull ; "(NULL)"
		jmp	loc_152B
; ---------------------------------------------------------------------------

loc_15DE:				; CODE XREF: _msim_msg_get_string_from_element+63j
					; _msim_msg_get_string_from_element+7Aj ...
		call	___stack_chk_fail
_msim_msg_get_string_from_element endp

; ---------------------------------------------------------------------------
unk_15E3	db  90h	; ê		; DATA XREF: .debug_info:00006CD8o
					; .debug_info:00006D99o

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get_string
_msim_msg_get_string proc near		; DATA XREF: .debug_info:00006DD5o
					; .debug_loc:off_A83Ao

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch

loc_15E7:				; DATA XREF: .debug_loc:0000A83Eo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax

loc_1601:				; DATA XREF: .debug_info:00003DD1o
		call	_msim_msg_get

loc_1606:				; DATA XREF: .debug_info:00006E15o
					; .debug_loc:off_A88Ao
		test	eax, eax
		jz	short loc_1624
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1636
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch

loc_161D:				; DATA XREF: .debug_info:00003FBCo
					; .debug_loc:0000A88Eo
		jmp	_msim_msg_get_string_from_element
; ---------------------------------------------------------------------------
unk_1622	db  66h	; f		; DATA XREF: .debug_info:00006E33o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1624:				; CODE XREF: _msim_msg_get_string+24j
		xor	eax, eax
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1636
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_1636:				; CODE XREF: _msim_msg_get_string+30j
					; _msim_msg_get_string+4Cj
		call	___stack_chk_fail
_msim_msg_get_string endp

; ---------------------------------------------------------------------------
unk_163B	db  90h	; ê		; DATA XREF: .debug_info:00006DD9o
					; .debug_info:00006E3Do

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get_list
_msim_msg_get_list proc	near		; DATA XREF: .debug_info:00006F14o
					; .debug_loc:off_A8A8o

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_163D:				; DATA XREF: .debug_loc:0000A8ACo
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	_msim_msg_get

loc_1662:				; DATA XREF: .debug_info:00007083o
					; .debug_loc:off_A98Bo
		test	eax, eax
		jz	loc_1784

loc_166A:				; DATA XREF: .debug_info:00006F58o
					; .debug_loc:off_A9BFo	...
		mov	edx, [eax+8]
		cmp	edx, 2Dh ; '-'
		jz	short loc_16DC
		cmp	edx, 6Ch ; 'l'
		jz	short loc_16BC
		mov	eax, [eax]

loc_1679:				; DATA XREF: .debug_loc:0000A98Fo
					; .debug_loc:0000A9C3o
		test	eax, eax
		jz	loc_1778

loc_1681:				; CODE XREF: _msim_msg_get_list+141j
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], offset aTypeDUnknownNa ; "type %d unknown, name %s\n"
		mov	[esp+4Ch+var_4C], offset aMsim_msg_get_l ; "msim_msg_get_list"
		call	_purple_debug_info

loc_169D:				; DATA XREF: .debug_info:00007055o
		xor	ebp, ebp

loc_169F:				; CODE XREF: _msim_msg_get_list:loc_1773j
					; _msim_msg_get_list+14Aj
					; DATA XREF: ...
		mov	eax, ebp
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_178F
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_16BC:				; CODE XREF: _msim_msg_get_list+39j
					; DATA XREF: .debug_ranges:0000B124o ...
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_178F
		mov	eax, [eax+0Ch]

loc_16CF:				; DATA XREF: .debug_ranges:0000B128o
					; .debug_ranges:0000B158o
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

loc_16D6:				; DATA XREF: .debug_ranges:0000B12Co
					; .debug_ranges:0000B15Co
		jmp	_msim_msg_list_copy ; jumptable	000002B4 cases 16,38,51,57,64
; ---------------------------------------------------------------------------
unk_16DB	db  90h	; ê		; DATA XREF: .debug_info:00007077o
					; .debug_loc:off_A9E8o
; ---------------------------------------------------------------------------

loc_16DC:				; CODE XREF: _msim_msg_get_list+34j
					; DATA XREF: .debug_info:00006F7Fo ...
		mov	[esp+4Ch+var_44], 0
		mov	[esp+4Ch+var_48], offset asc_215B ; "|"
		mov	eax, [eax+0Ch]

loc_16EF:				; DATA XREF: .debug_loc:0000A9ECo
		mov	[esp+4Ch+var_4C], eax
		call	_g_strsplit

loc_16F7:				; DATA XREF: .debug_info:00007023o
		mov	[esp+4Ch+var_30], eax

loc_16FB:				; DATA XREF: .debug_loc:off_A9FCo
					; .debug_loc:off_AA26o	...
		mov	edx, [eax]
		test	edx, edx
		jz	loc_178B
		mov	esi, eax
		add	esi, 4

loc_170A:				; DATA XREF: .debug_ranges:0000B130o
					; .debug_ranges:0000B160o ...
		mov	ecx, eax
		xor	ebp, ebp
		xor	edi, edi

loc_1710:				; CODE XREF: _msim_msg_get_list+129j
					; DATA XREF: .debug_info:00006FB8o ...
		mov	[esp+4Ch+var_4C], 10h
		mov	[esp+4Ch+var_34], ecx
		call	_g_malloc0

loc_1720:				; DATA XREF: .debug_info:00006FCEo
		mov	ebx, eax

loc_1722:				; DATA XREF: .debug_loc:off_AA87o
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], offset aListItemD ; "(list item #%d)"

loc_172D:				; DATA XREF: .debug_loc:0000AA8Bo
		call	_g_strdup_printf

loc_1732:				; DATA XREF: .debug_info:00006FE2o
		mov	[ebx], eax
		mov	dword ptr [ebx+8], 2Dh ; '-'
		mov	ecx, [esp+4Ch+var_34]
		mov	eax, [ecx]
		mov	[esp+4Ch+var_4C], eax
		call	_g_strdup

loc_1749:				; DATA XREF: .debug_info:00007001o
		mov	[ebx+0Ch], eax
		mov	[esp+4Ch+var_48], ebx
		mov	[esp+4Ch+var_4C], ebp
		call	_g_list_append

loc_1758:				; DATA XREF: .debug_info:0000700Ao
		mov	ebp, eax

loc_175A:				; DATA XREF: .debug_info:00006FBCo
		inc	edi
		mov	ecx, esi
		add	esi, 4
		mov	eax, [esi-4]
		test	eax, eax
		jnz	short loc_1710

loc_1767:				; CODE XREF: _msim_msg_get_list+151j
		mov	eax, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_4C], eax
		call	_g_strfreev

loc_1773:				; DATA XREF: .debug_info:00007041o
		jmp	loc_169F
; ---------------------------------------------------------------------------

loc_1778:				; CODE XREF: _msim_msg_get_list+3Fj
					; DATA XREF: .debug_ranges:0000B188o ...
		mov	eax, offset aNull ; "(NULL)"
		jmp	loc_1681
; ---------------------------------------------------------------------------
		align 4

loc_1784:				; CODE XREF: _msim_msg_get_list+28j
					; DATA XREF: .debug_ranges:0000B138o ...
		xor	ebp, ebp
		jmp	loc_169F
; ---------------------------------------------------------------------------

loc_178B:				; CODE XREF: _msim_msg_get_list+C3j
					; DATA XREF: .debug_ranges:0000B13Co ...
		xor	ebp, ebp
		jmp	short loc_1767
; ---------------------------------------------------------------------------

loc_178F:				; CODE XREF: _msim_msg_get_list+6Fj
					; _msim_msg_get_list+8Aj
					; DATA XREF: ...
		call	___stack_chk_fail
_msim_msg_get_list endp


; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get_dictionary
_msim_msg_get_dictionary proc near	; DATA XREF: .debug_info:00006F18o
					; .debug_info:000070A1o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_1795:				; DATA XREF: .debug_loc:0000AAA9o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	eax, dword ptr ds:___stack_chk_guard

loc_17A0:				; DATA XREF: .debug_info:00004324o
					; .debug_info:0000445Do
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_48], eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	_msim_msg_get

loc_17BA:				; DATA XREF: .debug_info:000074F0o
					; .debug_loc:off_AB88o
		test	eax, eax
		jz	loc_19B0

loc_17C2:				; DATA XREF: .debug_info:00007211o
					; .debug_loc:off_ABBCo	...
		mov	edx, [eax+8]
		cmp	edx, 2Dh ; '-'
		jz	short loc_1838
		cmp	edx, 64h ; 'd'
		jz	short loc_1814
		mov	eax, [eax]

loc_17D1:				; DATA XREF: .debug_loc:0000AB8Co
					; .debug_loc:0000ABC0o
		test	eax, eax
		jz	loc_19A4

loc_17D9:				; CODE XREF: _msim_msg_get_dictionary:loc_19A9j
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], offset aTypeDUnknownNa ; "type %d unknown, name %s\n"
		mov	[esp+4Ch+var_4C], offset aMsim_msg_get_d ; "msim_msg_get_dictionary"
		call	_purple_debug_info

loc_17F5:				; DATA XREF: .debug_info:000074C2o
		xor	edi, edi

loc_17F7:				; CODE XREF: _msim_msg_get_dictionary:loc_1940j
					; _msim_msg_get_dictionary:loc_1978j ...
		mov	eax, edi
		mov	edx, [esp+4Ch+var_20]

loc_17FD:				; DATA XREF: .debug_loc:00008654o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_19B7
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_1814:				; CODE XREF: _msim_msg_get_dictionary+39j
					; DATA XREF: .debug_ranges:0000B1C4o ...
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_19B7
		mov	eax, [eax+0Ch]
		mov	[esp+4Ch+arg_0], eax

loc_182B:				; DATA XREF: .debug_ranges:0000B1C8o
					; .debug_ranges:0000B1E8o
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

loc_1832:				; DATA XREF: .debug_ranges:0000B1CCo
					; .debug_ranges:0000B1ECo
		jmp	_msim_msg_clone
; ---------------------------------------------------------------------------
unk_1837	db  90h	; ê		; DATA XREF: .debug_info:000074E4o
; ---------------------------------------------------------------------------

loc_1838:				; CODE XREF: _msim_msg_get_dictionary+34j
		mov	eax, [eax+0Ch]
		mov	[esp+4Ch+var_30], eax

loc_183F:				; DATA XREF: .debug_info:00007238o
					; .debug_info:00007251o ...
		test	eax, eax
		jz	loc_1980

loc_1847:				; DATA XREF: .debug_info:00007296o
					; .debug_loc:off_ACDFo
		mov	[esp+4Ch+var_4C], 0

loc_184E:				; DATA XREF: .debug_loc:0000ABE9o
					; .debug_loc:0000ABF0o
		call	_msim_msg_new

loc_1853:				; DATA XREF: .debug_info:00007436o
		mov	edi, eax

loc_1855:				; DATA XREF: .debug_loc:off_AC1Bo
		mov	[esp+4Ch+var_44], 0

loc_185D:				; DATA XREF: .debug_info:00004400o
		mov	[esp+4Ch+var_48], offset byte_218B
		mov	edx, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_4C], edx

loc_186C:				; DATA XREF: .debug_loc:0000AC1Fo
		call	_g_strsplit

loc_1871:				; DATA XREF: .debug_info:0000744Ao
		mov	[esp+4Ch+var_34], eax

loc_1875:				; DATA XREF: .debug_loc:off_AC62o
					; .debug_loc:off_ACCBo
		mov	edx, eax
		mov	eax, [eax]

loc_1879:				; DATA XREF: .debug_loc:off_AC44o
					; .debug_loc:0000AC66o
		test	eax, eax
		jz	loc_1934
		mov	esi, edx
		add	esi, 4
		jmp	short loc_18EC
; ---------------------------------------------------------------------------

loc_1888:				; CODE XREF: _msim_msg_get_dictionary+176j
					; DATA XREF: .debug_loc:0000AC48o ...
		mov	eax, [eax+4]

loc_188B:				; DATA XREF: .debug_loc:0000AC90o
					; .debug_loc:off_AD28o
		test	eax, eax
		jz	loc_1948
		mov	[esp+4Ch+var_4C], eax

loc_1896:				; DATA XREF: .debug_loc:0000AD2Co
		call	_g_strdup

loc_189B:				; DATA XREF: .debug_info:0000736Ao
		mov	[esp+4Ch+var_4C], ebp
		mov	[esp+4Ch+var_38], eax
		call	_g_strdup

loc_18A7:				; DATA XREF: .debug_info:00007373o
		mov	ebp, eax

loc_18A9:				; DATA XREF: .debug_info:000072C8o
					; .debug_info:00007300o ...
		mov	[esp+4Ch+var_4C], 10h

loc_18B0:				; DATA XREF: .debug_loc:0000AD4Ao
					; .debug_loc:0000AD73o
		call	_g_malloc0

loc_18B5:				; DATA XREF: .debug_info:00007346o
					; .debug_loc:off_ADB4o
		mov	[eax], ebp
		mov	dword ptr [eax+4], 1
		mov	dword ptr [eax+8], 2Dh ; '-'
		mov	ecx, [esp+4Ch+var_38]
		mov	[eax+0Ch], ecx

loc_18CC:				; DATA XREF: .debug_info:00007304o
					; .debug_info:00007338o
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], edi

loc_18D3:				; DATA XREF: .debug_loc:0000ADB8o
		call	_g_list_append

loc_18D8:				; DATA XREF: .debug_info:00007358o
		mov	edi, eax

loc_18DA:				; DATA XREF: .debug_info:000072CCo
					; .debug_loc:0000AD91o
		mov	[esp+4Ch+var_4C], ebx
		call	_g_strfreev

loc_18E2:				; DATA XREF: .debug_info:00007388o
		add	esi, 4

loc_18E5:				; DATA XREF: .debug_ranges:0000B200o
		mov	eax, [esi-4]
		test	eax, eax
		jz	short loc_1934

loc_18EC:				; CODE XREF: _msim_msg_get_dictionary+F2j
					; DATA XREF: .debug_loc:0000AD5Eo ...
		mov	[esp+4Ch+var_44], 2
		mov	[esp+4Ch+var_48], offset byte_22AC
		mov	[esp+4Ch+var_4C], eax
		call	_g_strsplit

loc_1904:				; DATA XREF: .debug_info:0000739Do
		mov	ebx, eax
		mov	ebp, [eax]
		test	ebp, ebp
		jnz	loc_1888
		mov	edx, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], offset aMsim_msg_dicti ; "msim_msg_dictionary_parse(%s): null	key"...
		mov	[esp+4Ch+var_4C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_192C:				; DATA XREF: .debug_info:000073BBo
		mov	[esp+4Ch+var_4C], ebx
		call	_g_strfreev

loc_1934:				; CODE XREF: _msim_msg_get_dictionary+E7j
					; _msim_msg_get_dictionary+156j
					; DATA XREF: ...
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_4C], eax
		call	_g_strfreev

loc_1940:				; DATA XREF: .debug_info:00007470o
		jmp	loc_17F7
; ---------------------------------------------------------------------------
		align 4

loc_1948:				; CODE XREF: _msim_msg_get_dictionary+F9j
					; DATA XREF: .debug_ranges:0000B20Co
		mov	edx, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], offset aMsim_msg_dic_0 ; "msim_msg_dictionary_prase(%s): null	val"...
		mov	[esp+4Ch+var_4C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_1964:				; DATA XREF: .debug_info:000073FAo
		mov	[esp+4Ch+var_4C], ebx
		call	_g_strfreev

loc_196C:				; DATA XREF: .debug_info:00007424o
					; .debug_ranges:0000B210o
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_4C], eax
		call	_g_strfreev

loc_1978:				; DATA XREF: .debug_info:00007486o
		jmp	loc_17F7
; ---------------------------------------------------------------------------
unk_197D	db  8Dh	; ç		; DATA XREF: .debug_loc:0000ABF4o
					; .debug_loc:0000ACE3o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1980:				; CODE XREF: _msim_msg_get_dictionary+ADj
		mov	[esp+4Ch+var_44], offset aRawNull ; "raw != NULL"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___44849 ; "msim_msg_dictionary_parse"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_199C:				; DATA XREF: .debug_info:0000749Co
		xor	edi, edi
		jmp	loc_17F7
; ---------------------------------------------------------------------------
		align 4

loc_19A4:				; CODE XREF: _msim_msg_get_dictionary+3Fj
					; DATA XREF: .debug_info:0000723Co ...
		mov	eax, offset aNull ; "(NULL)"

loc_19A9:				; DATA XREF: .debug_info:000042F8o
		jmp	loc_17D9
; ---------------------------------------------------------------------------
		align 10h

loc_19B0:				; CODE XREF: _msim_msg_get_dictionary+28j
					; DATA XREF: .debug_ranges:0000B1D0o ...
		xor	edi, edi
		jmp	loc_17F7
; ---------------------------------------------------------------------------

loc_19B7:				; CODE XREF: _msim_msg_get_dictionary+6Fj
					; _msim_msg_get_dictionary+8Aj
		call	___stack_chk_fail
_msim_msg_get_dictionary endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl msim_msg_get_integer_from_element(char *)
		public _msim_msg_get_integer_from_element
_msim_msg_get_integer_from_element proc	near ; CODE XREF: _msim_msg_get_integer:loc_1A7Dj
					; DATA XREF: .debug_info:000071D1o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_19BF:				; DATA XREF: .debug_loc:0000ADCBo
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_19CF:				; DATA XREF: .debug_info:00007574o
		test	eax, eax
		jz	short loc_1A1C

loc_19D3:				; DATA XREF: .debug_info:00007578o
					; .debug_loc:off_AE17o
		mov	edx, [eax+8]
		cmp	edx, 69h ; 'i'
		jz	short loc_1A14
		cmp	edx, 73h ; 's'
		jz	short loc_19F8
		cmp	edx, 2Dh ; '-'
		jz	short loc_19F8
		xor	eax, eax

loc_19E7:				; CODE XREF: _msim_msg_get_integer_from_element+5Bj
					; _msim_msg_get_integer_from_element+7Ej
					; DATA XREF: ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1A3C
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_19F8:				; CODE XREF: _msim_msg_get_integer_from_element+22j
					; _msim_msg_get_integer_from_element+27j
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1A3C
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+arg_0], eax ; char *
		add	esp, 2Ch
		jmp	_atoi
; ---------------------------------------------------------------------------
unk_1A13	db  90h	; ê		; DATA XREF: .debug_info:00007592o
; ---------------------------------------------------------------------------

loc_1A14:				; CODE XREF: _msim_msg_get_integer_from_element+1Dj
		mov	eax, [eax+0Ch]
		jmp	short loc_19E7
; ---------------------------------------------------------------------------
		align 4

loc_1A1C:				; CODE XREF: _msim_msg_get_integer_from_element+15j
		mov	[esp+2Ch+var_24], offset aElemNull ; "elem != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___44874 ; "msim_msg_get_integer_from_element"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_1A38:				; DATA XREF: .debug_info:0000759Co
		xor	eax, eax
		jmp	short loc_19E7
; ---------------------------------------------------------------------------

loc_1A3C:				; CODE XREF: _msim_msg_get_integer_from_element+35j
					; _msim_msg_get_integer_from_element+46j
		call	___stack_chk_fail
_msim_msg_get_integer_from_element endp

; ---------------------------------------------------------------------------
unk_1A41	db  8Dh	; ç		; DATA XREF: .debug_info:00007547o
					; .debug_info:000075C4o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


; int __cdecl msim_msg_get_integer(char	*, int)
		public _msim_msg_get_integer
_msim_msg_get_integer proc near		; DATA XREF: .debug_info:00007601o
					; .debug_loc:off_AE43o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 2Ch

loc_1A47:				; DATA XREF: .debug_loc:0000AE47o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_msim_msg_get

loc_1A66:				; DATA XREF: .debug_info:00007641o
					; .debug_loc:off_AE93o
		test	eax, eax
		jz	short loc_1A84

loc_1A6A:				; DATA XREF: .debug_info:off_4349o
					; .debug_info:000043A0o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1A96
		mov	[esp+2Ch+arg_0], eax ; char *
		add	esp, 2Ch

loc_1A7D:				; DATA XREF: .debug_loc:0000AE97o
		jmp	_msim_msg_get_integer_from_element
; ---------------------------------------------------------------------------
unk_1A82	db  66h	; f		; DATA XREF: .debug_info:0000765Fo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1A84:				; CODE XREF: _msim_msg_get_integer+24j
		xor	eax, eax
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1A96
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_1A96:				; CODE XREF: _msim_msg_get_integer+30j
					; _msim_msg_get_integer+4Cj
		call	___stack_chk_fail
_msim_msg_get_integer endp

; ---------------------------------------------------------------------------
unk_1A9B	db  90h	; ê		; DATA XREF: .debug_info:00007605o
					; .debug_info:00007669o

; =============== S U B	R O U T	I N E =======================================


		public _msim_msg_get_binary
_msim_msg_get_binary proc near		; DATA XREF: .debug_info:000076F3o
					; .debug_loc:off_AEB1o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	edi

loc_1A9D:				; DATA XREF: .debug_loc:0000AEB5o
		push	esi
		push	ebx
		sub	esp, 20h

loc_1AA2:				; DATA XREF: .debug_info:00004375o
		mov	esi, [esp+2Ch+arg_8]
		mov	ebx, [esp+2Ch+arg_C]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_4]
		mov	[esp+2Ch+var_28], eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_msim_msg_get

loc_1AC9:				; DATA XREF: .debug_info:000077D1o
					; .debug_loc:off_AF31o
		test	eax, eax
		jz	loc_1B58

loc_1AD1:				; DATA XREF: .debug_info:00007755o
					; .debug_loc:off_AF65o	...
		mov	edx, [eax+8]
		cmp	edx, 2Dh ; '-'
		jz	short loc_1B3C
		cmp	edx, 62h ; 'b'
		jz	short loc_1B18
		mov	eax, [eax]

loc_1AE0:				; DATA XREF: .debug_loc:0000AF35o
					; .debug_loc:0000AFBBo	...
		test	eax, eax
		jz	short loc_1B5C

loc_1AE4:				; CODE XREF: _msim_msg_get_binary+C5j
		mov	[esp+2Ch+var_20], eax
		mov	[esp+2Ch+var_24], edx

loc_1AEC:				; DATA XREF: .debug_info:000042F1o
		mov	[esp+2Ch+var_28], offset aMsim_msg_get_b ; "msim_msg_get_binary: unhandled type	%d "...

loc_1AF4:				; DATA XREF: .debug_info:00004310o
		mov	[esp+2Ch+var_2C], offset aMsim ; "msim"
		call	_purple_debug_info

loc_1B00:				; DATA XREF: .debug_info:00007793o
		xor	eax, eax

loc_1B02:				; CODE XREF: _msim_msg_get_binary+9Cj
					; _msim_msg_get_binary+B9j ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1B63
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
unk_1B15	db  8Dh	; ç		; DATA XREF: .debug_loc:0000AF3Co
					; .debug_loc:0000AF70o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1B18:				; CODE XREF: _msim_msg_get_binary+40j
					; DATA XREF: .debug_ranges:0000B224o ...
		mov	edi, [eax+0Ch]

loc_1B1B:				; DATA XREF: .debug_loc:off_AFE0o
		mov	eax, [edi+4]

loc_1B1E:				; DATA XREF: .debug_loc:0000AF40o
		mov	[esp+2Ch+var_28], eax
		mov	eax, [edi]
		mov	[esp+2Ch+var_2C], eax
		call	_g_memdup

loc_1B2C:				; DATA XREF: .debug_info:000077B5o
		mov	[esi], eax
		mov	eax, [edi+4]
		mov	[ebx], eax

loc_1B33:				; DATA XREF: .debug_info:0000431Ao
		mov	eax, 1
		jmp	short loc_1B02
; ---------------------------------------------------------------------------
unk_1B3A	db  66h	; f		; DATA XREF: .debug_loc:0000AFE4o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1B3C:				; CODE XREF: _msim_msg_get_binary+3Bj
		mov	[esp+2Ch+var_28], ebx
		mov	eax, [eax+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_base64_decode

loc_1B4B:				; DATA XREF: .debug_info:000077BEo
		mov	[esi], eax
		test	eax, eax
		setnz	al

loc_1B52:				; DATA XREF: .debug_info:00004344o
		movzx	eax, al
		jmp	short loc_1B02
; ---------------------------------------------------------------------------
unk_1B57	db  90h	; ê		; DATA XREF: .debug_loc:0000AF74o
; ---------------------------------------------------------------------------

loc_1B58:				; CODE XREF: _msim_msg_get_binary+2Fj
					; DATA XREF: .debug_ranges:0000B228o ...
		xor	eax, eax
		jmp	short loc_1B02
; ---------------------------------------------------------------------------

loc_1B5C:				; CODE XREF: _msim_msg_get_binary+46j
					; DATA XREF: .debug_ranges:0000B22Co ...
		mov	eax, offset aNull ; "(NULL)"
		jmp	short loc_1AE4
; ---------------------------------------------------------------------------

loc_1B63:				; CODE XREF: _msim_msg_get_binary+70j
					; DATA XREF: .debug_ranges:0000B230o ...
		call	___stack_chk_fail
_msim_msg_get_binary endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 1B68h
_msim_escape_replacements dd offset a1	; DATA XREF: _msim_escape:loc_4D8r
					; _msim_escape+61o ...
					; "/1"
byte_1B6C	db 2Fh			; DATA XREF: _msim_escape+48r
		db 2 dup(0)
		db    0			; DATA XREF: .debug_info:00004364o
		dd offset a2		; "/2"
		dd offset loc_5B+1
		db 3 dup(0)
		db    0			; DATA XREF: .debug_info:00004391o
		db    0
		db    0
		db    0
		db    0
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1B84h
aMsgNull	db 'msg != NULL',0      ; DATA XREF: _msim_msg_pack_using:loc_128o
					; _msim_msg_pack:loc_DA0o ...
aElemNull	db 'elem != NULL',0     ; DATA XREF: _msim_msg_get_node:loc_197o
					; _msim_msg_pack_element_data:loc_FFCo	...
aElemNameNull	db 'elem->name != NULL',0 ; DATA XREF: _msim_msg_get_node:loc_1CCo
					; .debug_info:00004F8Co
aMsimmessageEmp	db '<MsimMessage: empty>',0 ; DATA XREF: _msim_msg_dump_to_str:loc_23Co
					; .debug_info:off_5000o
asc_1BC5	db 0Ah,0		; DATA XREF: _msim_msg_dump_to_str+22o
					; .debug_info:00005029o
aMsimmessage	db 0Ah			; DATA XREF: _msim_msg_dump_to_str+13o
					; .debug_info:0000503Do
		db '/MsimMessage>',0
aMsimmessage_0	db '<MsimMessage: ',0Ah,0 ; DATA XREF: _msim_msg_dump_to_str+1Bo
					; .debug_info:00005033o ...
aNull		db '(NULL)',0           ; DATA XREF: _msim_msg_debug_string_element:loc_448o
					; _msim_msg_debug_string_element:loc_460o ...
aTrue		db 'TRUE',0             ; DATA XREF: _msim_msg_debug_string_element+12Bo
					; .debug_info:000043E8o
aFalse		db 'FALSE',0            ; DATA XREF: _msim_msg_debug_string_element:loc_454o
					; _msim_msg_pack_element_dict:loc_10D9o ...
aSIntegerD	db '%s(integer): %d',0  ; DATA XREF: _msim_msg_debug_string_element+159o
					; .debug_info:000051F0o ...
aSRawS		db '%s(raw): %s',0      ; DATA XREF: _msim_msg_debug_string_element+81o
					; .debug_info:00005146o ...
aSStringS	db '%s(string): %s',0   ; DATA XREF: _msim_msg_debug_string_element+1E5o
					; .debug_info:00005280o
aSBinaryDBytesS	db '%s(binary, %d bytes): %s',0
					; DATA XREF: _msim_msg_debug_string_element:loc_307o
					; .debug_info:00005167o
aSBooleanS	db '%s(boolean): %s',0  ; DATA XREF: _msim_msg_debug_string_element+13Ao
					; .debug_info:000051D8o ...
aNullCouldnTMsi	db '(NULL, couldn',27h,'t msim_msg_dump_to_str)',0
					; DATA XREF: _msim_msg_debug_string_element:loc_47Ao
					; .debug_info:000052B0o
aSDictS		db '%s(dict): %s',0     ; DATA XREF: _msim_msg_debug_string_element+FCo
					; .debug_info:000051A4o
byte_1C7F	db 0			; DATA XREF: _msim_msg_debug_string_element:loc_3BCo
					; _msim_escape+16o ...
aSList		db '%s(list): ',0Ah,0   ; DATA XREF: _msim_msg_debug_string_element+180o
					; .debug_info:00005227o
aD_S		db ' %d. %s',0Ah,0      ; DATA XREF: _msim_msg_debug_string_element+1A6o
					; .debug_info:00005246o
aSUnknownTypeD	db '%s(unknown type %d',0 ; DATA XREF: _msim_msg_debug_string_element+37o
					; .debug_info:0000512Eo
off_1CA8	dd offset loc_2BC	; DATA XREF: _msim_msg_debug_string_element:loc_2B4r
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1CB4	dd offset loc_275	; DATA XREF: .debug_info:000044ACo
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1CBC	dd offset loc_275	; DATA XREF: .debug_info:000044D4o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1CCC	dd offset loc_275	; DATA XREF: .debug_info:00003A58o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1CE4	dd offset loc_275	; DATA XREF: .debug_info:00003A00o
					; .debug_info:000044DEo
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1D04	dd offset loc_275	; DATA XREF: .debug_info:off_3A1Co
					; .debug_info:000044F4o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1D24	dd offset loc_275	; DATA XREF: .debug_info:00004510o
					; .debug_info:00007EA0o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1D34	dd offset loc_275	; DATA XREF: .debug_info:00003C61o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1D68	dd offset loc_275	; DATA XREF: .debug_info:00004545o
					; .debug_info:00004550o
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
off_1D70	dd offset loc_275	; DATA XREF: .debug_info:0000455Do
					; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_2E0
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_328
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_370
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_39C
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_3BC
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_275	; jumptable 000002B4 default case
		dd offset loc_424
aMsim_sendUnkno	db 'msim_send: unknown type %d',0Ah,0 ; DATA XREF: _msim_msg_new_v+23o
					; .debug_info:000057D7o
aMsim		db 'msim',0             ; DATA XREF: _msim_msg_new_v+2Bo
					; _msim_msg_clone_element+31o ...
aValueNull	db 'value != NULL',0    ; DATA XREF: _msim_msg_new_v:loc_868o
					; .debug_info:off_5884o
aGsNull		db 'gs != NULL',0       ; DATA XREF: _msim_msg_new_v:loc_8D4o
					; .debug_info:000058FCo
aGlNull		db 'gl != NULL',0       ; DATA XREF: _msim_msg_new_v:loc_88Co
					; .debug_info:000058ACo
aDictNull	db 'dict != NULL',0     ; DATA XREF: _msim_msg_new_v:loc_8B0o
					; .debug_info:000058D4o
		align 4
off_1E18	dd offset loc_838	; DATA XREF: _msim_msg_new_v+5Cr
		dd offset loc_728	; jump table for switch	statement
		dd offset loc_808
		dd offset loc_728
		dd offset loc_7E4
		dd offset loc_728
		dd offset loc_728
		dd offset loc_7E4
		dd offset loc_728
		dd offset loc_728
		dd offset loc_7B4
		dd offset loc_728
		dd offset loc_728
		dd offset loc_728
		dd offset loc_728
		dd offset loc_728
		dd offset loc_728
		dd offset loc_770
aMsim_msg_clone	db 'msim_msg_clone_element: unknown type %d',0Ah,0
					; DATA XREF: _msim_msg_clone_element+29o
					; .debug_info:00005D24o
aMessage_c	db 'message.c',0        ; DATA XREF: _msim_msg_clone_element+4Do
					; _msim_msg_pack_element+4Do ...
		align 4
aFileSLineDSSho	db 'file %s: line %d (%s): should not be reached',0
					; DATA XREF: _msim_msg_clone_element+55o
					; _msim_msg_pack_element+55o ...
		align 4
off_1EC4	dd offset loc_AE4, offset loc_A41, offset loc_A41, offset loc_A41
					; DATA XREF: _msim_msg_clone_element:loc_AA8r
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41 ; jump table for switch statement
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_B64, offset loc_A41, offset loc_B44
		dd offset loc_A41, offset loc_B5C, offset loc_A41, offset loc_A41
		dd offset loc_B5C, offset loc_A41, offset loc_A41, offset loc_AB0
		dd offset loc_A41, offset loc_A41, offset loc_A41, offset loc_A41
		dd offset loc_A41, offset loc_A41, offset loc_AE4
aMsim_msg_free_	db 'msim_msg_free_element_data: not freeing unknown type %d',0Ah,0
					; DATA XREF: _msim_msg_free_element_data+22o
					; .debug_info:00005F28o
		align 4
off_201C	dd offset loc_CB8, offset loc_C6A, offset loc_C6A, offset loc_C6A
					; DATA XREF: _msim_msg_free_element_data:loc_C94r
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A ; jump table for switch statement
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_CD4, offset loc_C6A, offset loc_CEC
		dd offset loc_C6A, offset loc_C82, offset loc_C6A, offset loc_C6A
		dd offset loc_C82, offset loc_C6A, offset loc_C6A, offset loc_C9C
		dd offset loc_C6A, offset loc_C6A, offset loc_C6A, offset loc_C6A
		dd offset loc_C6A, offset loc_C6A, offset loc_CB8
byte_2138	db 5Ch,	0		; DATA XREF: _msim_msg_pack+1Fo
					; _msim_msg_pack+26o ...
aFinal		db '\final\',0          ; DATA XREF: _msim_msg_pack:loc_D6Fo
					; .debug_info:00006091o
aRawNull	db 'raw != NULL',0      ; DATA XREF: _msim_msg_send:loc_E1Co
					; _msim_parse:loc_148Co ...
aD		db '%d',0               ; DATA XREF: _msim_msg_pack_element_data+107o
					; _msim_msg_get_string_from_element+AFo ...
aOn		db 'On',0               ; DATA XREF: _msim_msg_pack_element_data+133o
aOff		db 'Off',0              ; DATA XREF: _msim_msg_pack_element_data+218o
aS		db '%s',0               ; DATA XREF: _msim_msg_pack_element_data+BAo
					; .debug_info:000063E3o
asc_215B	db '|',0                ; DATA XREF: _msim_msg_pack_element_data+D1o
					; _msim_msg_get_list+A8o ...
aFieldSUnknownT	db 'field %s, unknown type %d',0Ah,0
					; DATA XREF: _msim_msg_pack_element_data+39o
					; .debug_info:000063A2o
aElemDataNull	db 'elem->data != NULL',0 ; DATA XREF: _msim_msg_pack_element_data:loc_1070o
					; .debug_info:000064ACo
byte_218B	db 1Ch			; DATA XREF: _msim_msg_pack_element_data+162o
					; _msim_msg_get_dictionary:loc_185Do ...
		align 10h
off_2190	dd offset loc_FD8, offset loc_E6B, offset loc_E6B, offset loc_E6B
					; DATA XREF: _msim_msg_pack_element_data:loc_EACr
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B ; jump table for switch statement
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_FBC, offset loc_E6B, offset loc_F8C
		dd offset loc_E6B, offset loc_F5C, offset loc_E6B, offset loc_E6B
		dd offset loc_F44, offset loc_E6B, offset loc_E6B, offset loc_EE0
		dd offset loc_E6B, offset loc_E6B, offset loc_E6B, offset loc_E6B
		dd offset loc_E6B, offset loc_E6B, offset loc_EB4
byte_22AC	db 3Dh,	0		; DATA XREF: _msim_msg_pack_element_dict+84o
					; _msim_msg_get_dictionary+160o ...
aData_stringNul	db 'data_string != NULL',0
					; DATA XREF: _msim_msg_pack_element_dict:loc_1144o
					; .debug_info:00006621o
		align 4
off_22C4	dd offset loc_1110, offset loc_10D1, offset loc_10D1, offset loc_10D1
					; DATA XREF: _msim_msg_pack_element_dict:loc_1108r
					; .debug_info:00004FE4o
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1 ;	jump table for switch statement
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_1110, offset loc_10D1, offset loc_1110
		dd offset loc_10D1, offset loc_1110, offset loc_10D1, offset loc_10D1
		dd offset loc_1110, offset loc_10D1, offset loc_10D1, offset loc_1110
		dd offset loc_10D1, offset loc_10D1, offset loc_10D1, offset loc_10D1
		dd offset loc_10D1, offset loc_10D1, offset loc_1110
dword_23E0	dd 5C7325h		; DATA XREF: _msim_msg_pack_element+99o
					; .debug_info:0000674Eo
off_23E4	dd offset loc_1214, offset loc_119D, offset loc_119D, offset loc_119D
					; DATA XREF: _msim_msg_pack_element:loc_11ECr
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D ;	jump table for switch statement
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_1214, offset loc_119D, offset loc_1214
		dd offset loc_119D, offset loc_11F4, offset loc_119D, offset loc_119D
		dd offset loc_1214, offset loc_119D, offset loc_119D, offset loc_1214
		dd offset loc_119D, offset loc_119D, offset loc_119D, offset loc_119D
		dd offset loc_119D, offset loc_119D, offset loc_1214
aFmt_stringNull	db 'fmt_string != NULL',0 ; DATA XREF: _msim_msg_dump:loc_130Co
					; .debug_info:0000697Do
aDebug_strNull	db 'debug_str != NULL',0 ; DATA XREF: _msim_msg_dump:loc_133Co
					; .debug_info:000069A5o
		align 4
aMsim_parseInco	db 'msim_parse: incomplete/bad string, missing initial backslash: <%s'
					; DATA XREF: _msim_parse+110o
					; .debug_info:00006BD9o
		db '>',0Ah,0
aMsim_parseGotS	db 'msim_parse: got <%s>',0Ah,0 ; DATA XREF: _msim_parse+22o
					; .debug_info:00006B44o
		align 4
aMsim_msg_get_s	db 'msim_msg_get_string_element: type %d unknown, name %s',0Ah,0
					; DATA XREF: _msim_msg_get_string_from_element+43o
					; .debug_info:00006D3Fo
aListItemD	db '(list item #%d)',0  ; DATA XREF: _msim_msg_get_list+EAo
					; .debug_info:00006FF4o ...
aTypeDUnknownNa	db 'type %d unknown, name %s',0Ah,0 ; DATA XREF: _msim_msg_get_list+4Do
					; _msim_msg_get_dictionary+4Do	...
aMsim_msg_get_l	db 'msim_msg_get_list',0 ; DATA XREF: _msim_msg_get_list+55o
					; .debug_info:00007067o ...
		align 4
aMsim_msg_dicti	db 'msim_msg_dictionary_parse(%s): null key',0Ah,0
					; DATA XREF: _msim_msg_get_dictionary+184o
					; .debug_info:000073D7o
		align 4
aMsim_msg_dic_0	db 'msim_msg_dictionary_prase(%s): null value',0Ah,0
					; DATA XREF: _msim_msg_get_dictionary+1BCo
					; .debug_info:00007416o ...
aMsim_msg_get_d	db 'msim_msg_get_dictionary',0 ; DATA XREF: _msim_msg_get_dictionary+55o
					; .debug_info:00004E34o ...
		align 4
aMsim_msg_get_b	db 'msim_msg_get_binary: unhandled type %d for key %s',0Ah,0
					; DATA XREF: _msim_msg_get_binary:loc_1AECo
					; .debug_info:000077AFo ...
a1		db '/1',0               ; DATA XREF: .data:_msim_escape_replacementso
a2		db '/2',0               ; DATA XREF: .data:00001B70o
___PRETTY_FUNCTION___44519 db 'msim_msg_new_v',0 ; DATA XREF: _msim_msg_new_v+164o
					; _msim_msg_new_v+188o	...
___PRETTY_FUNCTION___44591 db 'msim_msg_get_node',0 ; DATA XREF: _msim_msg_get_node+4Fo
					; _msim_msg_get_node+84o ...
___PRETTY_FUNCTION___44650 db 'msim_msg_clone_element',0
					; DATA XREF: _msim_msg_clone_element:loc_A59o
					; .debug_info:00005C5Do ...
___PRETTY_FUNCTION___44727 db 'msim_msg_pack',0 ; DATA XREF: _msim_msg_pack+50o
					; .debug_info:00006039o ...
___PRETTY_FUNCTION___44699 db 'msim_msg_pack_element',0
					; DATA XREF: _msim_msg_pack_element:loc_11A5o
					; .debug_info:0000667Bo ...
___PRETTY_FUNCTION___44551 db 'msim_msg_pack_using',0 ; DATA XREF: _msim_msg_pack_using+E0o
					; .debug_info:00004D4Do ...
___PRETTY_FUNCTION___44742 db 'msim_msg_send',0 ; DATA XREF: _msim_msg_send+5Co
					; .debug_info:00006148o ...
___PRETTY_FUNCTION___44750 db 'msim_msg_pack_element_data',0
					; DATA XREF: _msim_msg_pack_element_data:loc_1004o
					; _msim_msg_pack_element_data:loc_1078o ...
___PRETTY_FUNCTION___44733 db 'msim_msg_pack_dict',0
					; DATA XREF: _msim_msg_pack_element_data+1F0o
					; .debug_info:00006310o ...
___PRETTY_FUNCTION___44710 db 'msim_msg_pack_element_dict',0
					; DATA XREF: _msim_msg_pack_element_dict+49o
					; _msim_msg_pack_element_dict+B4o ...
___PRETTY_FUNCTION___44777 db 'msim_msg_dump',0 ; DATA XREF: _msim_msg_dump+60o
					; _msim_msg_dump+90o ...
___PRETTY_FUNCTION___44791 db 'msim_parse',0 ; DATA XREF: _msim_parse+134o
					; .debug_info:00006A5Fo ...
		align 4
___PRETTY_FUNCTION___44805 db 'msim_msg_get_string_from_element',0
					; DATA XREF: _msim_msg_get_string_from_element+C8o
					; .debug_info:00006D00o ...
___PRETTY_FUNCTION___44849 db 'msim_msg_dictionary_parse',0
					; DATA XREF: _msim_msg_get_dictionary+1F4o
					; .debug_info:0000728Do ...
		align 10h
		dd 0
___PRETTY_FUNCTION___44874 db 'msim_msg_get_integer_from_element',0
					; DATA XREF: _msim_msg_get_integer_from_element+68o
					; .debug_info:0000756Fo ...
		align 4
		dd 7 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 2804h
off_2804	dd offset off_5902+2	; DATA XREF: .debug_aranges:0000AFFAo
		db 2, 0
		dd offset dword_810C
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
dword_281C	dd 73656D01h, 65676173h, 4300632Eh, 775C5C3Ah, 736B726Fh
		dd 65636170h, 69705C5Ch, 6E696764h, 7665642Dh, 5C5C6C65h
		dd 67646970h, 322D6E69h, 2E30312Eh, 5C5C3131h, 7062696Ch
		dd 6C707275h, 705C5C65h, 6F746F72h, 736C6F63h, 796D5C5Ch
		dd 63617073h
		db 65h,	0
		dd offset _msim_msg_list_copy ;	jumptable 000002B4 cases 16,38,51,57,64
		dd offset loc_1B63+5
		dd offset off_B25C
		dw 402h
		dd offset loc_7D+3
		db    3
		db 1, 6, 63h
		db  68h	; h
		db 61h,	72h, 0
		db    3
		db 2, 7, 73h
aHortUnsignedIn	db 'hort unsigned int',0
		dw 403h
aUnsignedInt	db 7,'unsigned int',0
		dw 5F04h
a_gnuc_va_list	db '_gnuc_va_list',0
		dw 2804h
		dd offset loc_C0+4
		db    5
		db 4, 2	dup(5Fh)
aBuiltin_va_lis	db 'builtin_va_list',0
		dd offset loc_7D+3
		db    6
a_iobuf		db '_iobuf',0
		db  20h
		db 3, 81h, 73h
		db    1
		db 2 dup(0), 7
a_ptr		db '_ptr',0
		db 3, 83h, 7Ah
		db    0
		db 2 dup(0), 2
		db  23h	; #
		align 2
a_cnt		db 7,'_cnt',0
		db    3
		db 84h,	73h, 1
		db    0
		align 2
		dw 2302h
		db    4
a_base		db 7,'_base',0
		db    3
		dd offset a_user_song_lid ; "_USER_SONG_LID"
		align 2
		dw 2302h
a_flag		db 8,7,'_flag',0
		db    3
		db 86h,	73h, 1
		db    0
		align 2
		dw 2302h
		db  0Ch
a_file		db 7,'_file',0          ; DATA XREF: .debug_info:00005124o
		db    3
		db 87h,	73h, 1
		db    0
		align 2
		dw 2302h
		db  10h
a_charbuf	db 7,'_charbuf',0
byte_2947	db 3			; DATA XREF: .debug_info:0000513Co
		db  88h	; à
		dd offset unk_173
		db 2, 23h, 14h
a_bufsiz	db 7,'_bufsiz',0
		db 3, 89h, 73h
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 18h,	7, 5Fh
aTmpfname	db 'tmpfname',0
byte_296D	db 3, 8Ah, 7Ah		; DATA XREF: .debug_info:0000515Do
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 1Ch,	0, 3
		db    4
		db 5, 69h, 6Eh
		db  74h	; t
		align 2
		dw 4604h
		db  49h	; I
		db 4Ch,	45h, 0
unk_2984	db    3			; DATA XREF: .debug_info:0000517Co
		db 8Bh,	0DCh, 0
		db    0
		align 2
		dw 803h
		db    5
aLongLongInt	db 'long long int',0
		db 4
a__time32_t	db '__time32_t',0
		db 5
		db  1Bh
off_29A9	dd offset loc_1A7+2	; DATA XREF: .debug_info:0000519Ao
		db 3, 4, 5
aLongInt	db 'long int',0
		db 4, 74h, 69h
aMe_t		db 'me_t',0
byte_29C1	db 5, 2Dh, 97h		; DATA XREF: .debug_info:000051B9o
		db    1
		db 2 dup(0), 3
		db    2
		db 5, 73h, 68h
aOrtInt		db 'ort int',0
		db    4
aVa_list	db 'va_list',0          ; DATA XREF: .debug_info:000051CEo
		db 4, 66h, 0AEh
		db    0
		db 2 dup(0), 3
		db    4
aLongUnsignedIn	db 7,'long unsigned int',0 ; DATA XREF: .debug_info:000051E6o
		db    3
		db 4, 7, 73h
aIzetype	db 'izetype',0
		db    3
		db 8, 4, 64h
aOuble		db 'ouble',0            ; DATA XREF: .debug_info:000051FEo
		dw 0C03h
		db    4
aLongDouble	db 'long double',0
		db 6, 74h, 6Dh
		db    0
		db 24h,	6, 50h
		dd offset loc_2C1+4
aTm_sec		db 7,'tm_sec',0         ; DATA XREF: .debug_info:00005216o
		db    6
		db 52h,	73h, 1
		db    0
		align 2
		dw 2302h
		db    0
aTm_min		db 7,'tm_min',0
		db 6, 53h, 73h
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 4, 7, 74h
aM_hour		db 'm_hour',0           ; DATA XREF: .debug_info:00005235o
		db 6
		db  54h	; T
		dd offset unk_173
		db 2, 23h, 8
aTm_mday	db 7,'tm_mday',0
		db 6, 55h, 73h
		db    1
byte_2A69	db 2 dup(0), 2		; DATA XREF: .debug_info:0000525Bo
		db  23h	; #
		db 0Ch,	7, 74h
aM_mon		db 'm_mon',0
		dw 5606h
		dd offset unk_173
		db    2
		db 23h,	10h, 7
aTm_year	db 'tm_year',0          ; DATA XREF: .debug_info:00005276o
		db    6
		db 57h,	73h, 1
		db    0
		align 2
		dw 2302h
		db  14h
aTm_wday	db 7,'tm_wday',0        ; DATA XREF: .debug_info:0000528Eo
		dw 5806h
		dd offset unk_173
		db    2
		db 23h,	18h, 7
aTm_yday	db 'tm_yday',0
		db    6
		db 59h,	73h, 1
		db    0
unk_2AB1	db    0			; DATA XREF: .debug_info:000052A6o
		dw 2302h
		db  1Ch
aTm_isdst	db 7,'tm_isdst',0       ; DATA XREF: .debug_info:0000507Co
		db 6
		db  5Ah	; Z
		dd offset unk_173
		db 2, 23h, 20h
		db    0
		db 3, 1, 6
aSignedChar	db 'signed char',0
		db    3
		db 1, 8, 75h
aNsignedChar	db 'nsigned char',0
		db 3, 8, 7
aLongLongUnsign	db 'long long unsigned int',0
		db 4
aGssize		db 'gssize',0
		db 7
dword_2B0C	dd 17359h, 73670400h, 657A69h, 9E5A07h,	4080000h, 68636704h
		dd 8007261h, 802Dh, 69670400h, 800746Eh, 17330h, 62670400h
		dd 656C6F6Fh, 8006E61h,	32931h,	75670400h, 72616863h, 0D4330800h
		dd 4000002h, 6E697567h,	36080074h, 9Eh,	66040403h, 74616F6Ch
		dd 70670400h, 746E696Fh, 8007265h, 31A4Ch, 63670400h, 74736E6Fh
		dd 6E696F70h, 726574h, 38E4D08h, 4020000h, 394h, 46470409h
		dd 636E75h, 3A25708h, 4020000h,	3A8h, 3B9010Ah,	690B0000h
		dd 0B000003h, 369h, 0BF040200h,	0C000003h, 31Ch, 31C0402h
		dd 4020000h, 3D0h, 4704010Dh, 7473694Ch, 0DF260900h, 6000003h
		dd 694C475Fh, 0C007473h, 41B2809h
		db 2 dup(0), 0Eh
		dd offset aData		; "data"
		db 9
dword_2BF8	dd 3692Ah, 230200h, 78656E07h, 2B090074h, 41Bh,	7042302h
					; DATA XREF: .debug_info:000053F2o
		dd 76657270h, 1B2C0900h, 2000004h, 2000823h, 3D204h, 48470400h
		dd 54687361h, 656C6261h, 33270A00h, 0F000004h, 6148475Fh
		dd 61546873h, 656C62h, 53470401h, 7473694Ch, 4F260B00h
		dd 6000004h, 4C53475Fh,	747369h, 7D280B08h, 0E000004h
		dd offset aData		; "data"
		db  0Bh
		db 2Ah,	69h, 3
		db    0
		align 2
		dw 2302h
		db    0
aNext		db 7,'next',0
		db 0Bh
		db  2Bh	; +
		dd offset loc_47A+3
		db 2, 23h, 4
		db    0
		db 2, 4, 41h
		db    4
		db 2 dup(0), 4
aGstring	db 'GString',0
		db    2
		db 28h,	92h, 4
		db    0
		align 2
		dw 5F06h
aGstring_0	db 'GString',0
		db  0Ch
		db 2, 2Bh, 0D8h
		db    4
		db 2 dup(0), 7
		db  73h	; s
		db 74h,	72h, 0
		db    2
		db 2Dh,	0C4h, 3
		db    0
		align 2
		dw 2302h
		db    0
aLen		db 7,'len',0
		dw 2E02h
		dd offset loc_307+6
		db    2
		db 23h,	4, 7
aAllocated_len	db 'allocated_len',0
		dw 2F02h
		dd offset loc_307+6
		db    2
		db 23h,	8, 0
		db    2
		db 4, 83h, 4
		db    0
		align 2
		dw 402h
		dd offset loc_307+6
		db  10h
		db 4, 0Ch, 3Bh
		dd offset loc_5A6+4
		db  11h
aG_log_flag_rec	db 'G_LOG_FLAG_RECURSION',0
		dw 1101h
aG_log_flag_fat	db 'G_LOG_FLAG_FATAL',0
		db 2, 11h, 47h
a_log_level_err	db '_LOG_LEVEL_ERROR',0
		db 4, 11h, 47h
a_log_level_cri	db '_LOG_LEVEL_CRITICAL',0 ; DATA XREF: .debug_info:off_5525o
					; .debug_info:00005450o ...
		db    8
		db 11h,	47h, 5Fh
aLog_level_warn	db 'LOG_LEVEL_WARNING',0
		dw 1110h
aG_log_level_me	db 'G_LOG_LEVEL_MESSAGE',0 ; DATA XREF: .debug_info:00005634o
		db  20h
		db 11h,	47h, 5Fh
aLog_level_info	db 'LOG_LEVEL_INFO',0
		db '¿',0
		db 11h,	47h, 5Fh
aLog_level_debu	db 'LOG_LEVEL_DEBUG',0
dword_2D98	dd 47110180h, 474F4C5Fh, 56454C5Fh, 4D5F4C45h, 4B5341h
					; DATA XREF: .debug_info:00005560o
					; .debug_info:000057E1o ...
		dd 4704007Ch, 4C676F4Ch, 6C657665h, 67616C46h, 490C0073h
		dd 4E4h, 4210402h, 4020000h, 3C4h, 880402h, 80120000h
		dd 0E2000000h, 13000005h, 1F4h,	402000Dh, 5E8h,	800Ch
		dd 75500400h, 656C7072h, 6F636341h, 746E75h, 602240Dh
		dd 5F060000h, 70727550h, 6341656Ch, 6E756F63h, 0D580074h
		dd 7D77Eh
		db 0, 0Eh
		dd offset aUsername	; "username"
		dw 800Dh
		dd offset loc_7A
		dd 7002302h, 61696C61h,	810D0073h, 7Ah,	0E042302h
		dd offset aPassword	; "password"
		db  0Dh
		dd offset word_7A82
		align 2
		dw 2302h
aUser_info	db 8,7,'user_info',0
aGz		db 0Dh,'Éz',0
		db    0
		align 2
		dw 2302h
unk_2E5C	db  0Ch			; DATA XREF: .debug_info:00005618o
aBuddy_icon_pat	db 7,'buddy_icon_path',0
aEz		db 0Dh,'Öz',0           ; DATA XREF: .debug_info:off_55C8o
					; .debug_info:0000597Ao ...
		align 4
		db    2
		db 23h,	10h, 7
aRemember_pass	db 'remember_pass',0
		dw 870Dh
		dd offset loc_333+2
		db    2
		db 23h,	14h, 7
aProtocol_id	db 'protocol_id',0
aIz		db 0Dh,'âz',0
		db    0
		align 2
		dw 2302h
		db  18h
		db 7, 67h, 63h
		db    0
		db 0Dh,	8Bh, 83h
		db  1Dh
		db 2 dup(0), 2
		db  23h	; #
		db 1Ch,	7, 64h
aIsconnecting	db 'isconnecting',0
		db 0Dh,	8Ch, 35h
		db    3
		db 2 dup(0), 2
aSettings	db '# ',7,'settings',0
		db  0Dh
		db 8Eh,	0C0h, 5
		db    0
		align 2
		dw 2302h
aUi_settings	db '$',7,'ui_settings',0
		dw 8F0Dh
		dd offset loc_5BC+4
		db    2
aProxy_info	db '#(',7,'proxy_info',0
		db 0Dh
		db  91h	; ë
		dd offset off_1EC4+0B2h
		db 2, 23h, 2Ch
aPermit		db 7,'permit',0
		db  0Dh
		db 9Eh,	7Dh, 4
		db    0
		align 2
		dw 2302h
a0Deny		db '0',7,'deny',0
		db 0Dh
		db  9Fh	; ü
		dd offset loc_47A+3
		db 2, 23h, 34h
aPerm_deny	db 7,'perm_deny',0
		db 0Dh
		db 0A0h	; †
		dd offset off_1EC4+99h
		db 2, 23h, 38h
aStatus_types	db 7,'status_types',0
		dw 0A20Dh
		dd offset loc_419+2
		db    2
aPresence	db '#<',7,'presence',0
byte_2F5D	db 0Dh,	0A4h, 0ACh	; DATA XREF: .debug_info:0000574Fo
		db  1Eh
		db 2 dup(0), 2
a@System_log	db '#@',7,'system_log',0
		dw 0A50Dh
		dd offset loc_1B02+2
		db    2
aDUi_data	db '#D',7,'ui_data',0   ; DATA XREF: .debug_info:0000576Co
		db  0Dh
		db 0A7h, 1Ah, 3
		db    0
		align 2
		dw 2302h
aHRegistration_	db 'H',7,'registration_cb',0 ; DATA XREF: .debug_info:00005789o
aI		db 0Dh,'®›',7,0
		align 4
		db    2
aLRegistration_	db '#L',7,'registration_cb_user_data',0
		dw 0A90Dh
		dd offset loc_31A
		db    2
aPPriv		db '#P',7,'priv',0
		db 0Dh,	0ABh, 69h
		db    3
		db 2 dup(0), 2
unk_2FD8	db  23h	; #		; DATA XREF: .debug_info:000057C3o
		db 54h,	0, 2
		db    4
		dd offset loc_5ED
		db 4, 50h, 75h
aRpleaccountreg	db 'rpleAccountRegistrationCb',0
		db 0Dh,'(',0
		db 8,0
		align 4
		db    2
		db 4, 6, 8
		db    0
		align 2
		dw 10Ah
		dd offset loc_81A+2
unk_3010	db  0Bh			; DATA XREF: .debug_info:00005801o
		dd offset loc_7D5+2
		db 0Bh,	35h, 3
		db    0
		align 2
		dw 1A0Bh
		db    3
		align 10h
		db    4
aPurpleconnecti	db 'PurpleConnection',0 ; DATA XREF: .debug_info:0000581Do
		dw 1F0Eh
		dd offset loc_830+4
		db    6
a_purpleconnect	db '_PurpleConnection',0 ; DATA XREF: .debug_info:00005832o
		db 34h
dword_304C	dd 952F50Eh, 70070000h,	6C7072h, 1005F70Eh, 23020000h
		dd 6C660700h, 736761h, 0ACBF80Eh, 23020000h, 74730704h
		dd 657461h, 0B2EFA0Eh, 23020000h
		db 8, 0Eh
off_3082	dd offset aAccount	; DATA XREF: .debug_info:0000586Ao
					; "account"
		dw 0FC0Eh
		dd offset loc_7D5+2
		dd 0E0C2302h
		dd offset aPassword	; "password"
		db  0Eh
		dd offset aFerences_lid	; "FERENCES_LID"
		align 2
		dw 2302h
		db  10h
aInpa		db 7,'inpa',0
		db 0Eh
		db 0FEh	; ˛
		dd offset unk_173
		db 2, 23h, 14h
		db  14h
aBuddy_chats	db 'buddy_chats',0      ; DATA XREF: .debug_info:00005892o
		db 0Eh,	0, 1
		dd offset loc_47A+3
		db    2
		db 23h,	18h, 14h
aProto_data	db 'proto_data',0
		db 0Eh
		db    3
		db 1, 1Ah, 3
		db    0
unk_30D5	db    0			; DATA XREF: .debug_info:off_58BAo
		dw 2302h
		db  1Ch
		db 14h,	64h, 69h
aSplay_name	db 'splay_name',0
		db 0Eh
		db    5
		dd offset aEck_mail_dsn	; "ECK_MAIL_DSN"
		align 2
		dw 2302h
		db  20h
		db 14h,	6Bh, 65h
aEpalive	db 'epalive',0
		db  0Eh
byte_30FD	db 6, 1, 53h		; DATA XREF: .debug_info:000058E2o
		db    3
		db 2 dup(0), 2
		db  23h	; #
byte_3105	db 24h,	14h, 77h	; DATA XREF: .debug_info:00005698o
aAnts_to_die	db 'ants_to_die',0
		db  0Eh
byte_3115	db 0Fh,	1, 35h		; DATA XREF: .debug_info:0000573Bo
					; .debug_info:00005910o
		db    3
		db 2 dup(0), 2
unk_311C	db  23h	; #		; DATA XREF: .debug_info:00005B16o
					; .debug_info:00006B55o ...
		db 28h,	14h, 64h
aIsconnect_time	db 'isconnect_timeout',0
		dw 110Eh
		db    1
		dd offset loc_353
		db 2, 23h, 2Ch
		db  14h
aLast_received	db 'last_received',0
		db 0Eh
		db  12h
		db 1, 0B5h, 1
		db    0
		align 2
		dw 2302h
		db  30h	; 0
		align 2
		dw 410h
		db  0Eh
		db 25h,	0CBh, 0Ah
		db    0
		align 2
		dw 5011h
aUrple_connecti	db 'URPLE_CONNECTION_HTML',0
		dw 1101h
aPurple_connect	db 'PURPLE_CONNECTION_NO_BGCOLOR',0
		db 2, 11h, 50h
aUrple_connec_0	db 'URPLE_CONNECTION_AUTO_RESP',0
		db 4
		db  11h
aPurple_conne_0	db 'PURPLE_CONNECTION_FORMATTING_WBFO',0
		db 8
		db  11h
aPurple_conne_1	db 'PURPLE_CONNECTION_NO_NEWLINES',0
		db 10h
		db  11h
aPurple_conne_2	db 'PURPLE_CONNECTION_NO_FONTSIZE',0
		db 20h
		db  11h
aPurple_conne_3	db 'PURPLE_CONNECTION_NO_URLDESC',0
		db '¿',0
		db  11h
aPurple_conne_4	db 'PURPLE_CONNECTION_NO_IMAGES',0
		db 80h,	1, 11h
aPurple_conne_5	db 'PURPLE_CONNECTION_ALLOW_CUSTOM_SMILEY',0
		dw 280h
		db  11h
aPurple_conne_6	db 'PURPLE_CONNECTION_SUPPORT_MOODS',0
		db 80h,	4, 11h
aPurple_conne_7	db 'PURPLE_CONNECTION_SUPPORT_MOOD_MESSAGES',0
					; DATA XREF: .debug_info:00005AA9o
aA		db 'Ä',8,0
		db 4
aPurpleconnec_0	db 'PurpleConnectionFlags',0
		dw 320Eh
		dd offset loc_94F+3
		db  10h
		db 4, 0Eh, 35h
		dd offset loc_B2C+2
		db  11h
aPurple_disconn	db 'PURPLE_DISCONNECTED',0
		align 2
		dw 5011h
aUrple_connecte	db 'URPLE_CONNECTED',0
		db    1
		db 11h,	50h, 55h
aRple_connectin	db 'RPLE_CONNECTING',0  ; DATA XREF: .debug_info:00005B1Ao
		db    2
		align 2
		dw 5004h
aUrpleconnectio	db 'urpleConnectionState',0
		db 0Eh,	3Ah, 0E8h
		db  0Ah
		db 2 dup(0), 4
aPurpleplugin	db 'PurplePlugin',0     ; DATA XREF: .debug_info:000072C4o
		db 0Fh,	26h, 5Fh
		db  0Bh
		db 2 dup(0), 6
a_purpleplugin	db '_PurplePlugin',0
		dw 0F38h
		db  97h	; ó
		dd offset loc_C6A	; jumptable 00000C94 default case
aNative_plugin	db 7,'native_plugin',0
unk_3388	db  0Fh			; DATA XREF: .debug_info:00005C88o
					; .debug_info:00006AA8o
		db 99h,	35h, 3
		db    0
		align 2
		dw 2302h
		db    0
aLoaded		db 7,'loaded',0
		db 0Fh,	9Ah, 35h
		db    3
		db 2 dup(0), 2
		db  23h	; #
		db 4, 7, 68h
aAndle		db 'andle',0
		dw 9B0Fh
		dd offset loc_31A
		db    2
aPath		db '#',8,7,'path',0
		db 0Fh,	9Ch, 7Ah
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 0Ch,	7, 69h
		db  6Eh	; n
		db 66h,	6Fh, 0
		db  0Fh
		db 9Dh,	44h, 10h
		db    0
		align 2
		dw 2302h
		db  10h
aError		db 7,'error',0
		db  0Fh
		dd offset a_server_info_d ; "_SERVER_INFO_DSN"
		align 2
		dw 2302h
		db  14h
aIpc_data	db 7,'ipc_data',0
		db 0Fh
		db  9Fh	; ü
		dd offset loc_31A
		db 2, 23h, 18h
aExtra		db 7,'extra',0
		db 0Fh
		db 0A0h	; †
		dd offset loc_31A
		db 2, 23h, 1Ch
aUnloadable	db 7,'unloadable',0
		db  0Fh
		db 0A1h, 35h, 3
		db    0
		align 2
		dw 2302h
aDependent_plug	db ' ',7,'dependent_plugins',0
		dd 41BA20Fh, 23020000h
		db 24h,	0Eh
		dd offset a_purple_reserv ; "_purple_reserved1"
		dw 0A40Fh
		dd offset loc_3CA
		dd 0E282302h
		dd offset a_purple_rese_0 ; "_purple_reserved2"
		dd 3CAA50Fh, 23020000h
		db 2Ch,	0Eh
		dd offset a_purple_rese_1 ; "_purple_reserved3"
		dw 0A60Fh
		dd offset loc_3CA
		dd 0E302302h
		dd offset a_purple_rese_2 ; "_purple_reserved4"
		db  0Fh
		db 0A7h, 0CAh, 3
		db    0
		align 2
		dw 2302h
		db  34h	; 4
		align 2
		dw 5004h
aUrpleplugininf	db 'urplePluginInfo',0
		db  0Fh
		db 28h,	82h, 0Ch
		db    0
		align 2
		dw 5F06h
aPurplepluginin	db 'PurplePluginInfo',0
		db 68h,	0Fh, 4Eh
		dd offset loc_E6F
aMagic		db 7,'magic',0
		db 0Fh
		dd offset dword_9E50
		dd 230200h, 6A616D07h, 765F726Fh, 69737265h, 0F006E6Fh
		dd 9E51h, 4230200h, 6E696D07h, 765F726Fh, 69737265h, 0F006E6Fh
		dd 9E52h, 8230200h
		db 0Eh
		dd offset aType		; "type"
		db 0Fh,	53h, 0DDh
dword_34E8	dd 200000Fh, 75070C23h,	65725F69h, 72697571h, 6E656D65h
		dd 540F0074h, 7Ah, 7102302h, 67616C66h,	550F0073h, 1DFh
		dd 7142302h, 65706564h,	6E65646Eh, 73656963h, 1B560F00h
		dd 2000004h, 70071823h,	726F6972h, 797469h, 0F21570Fh
		dd 23020000h, 6469071Ch, 7A590F00h, 2000000h
		db 23h,	20h, 0Eh
		dd offset aName		; "name"
		db 0Fh
		dd offset aNge_lid	; "NGE_LID"
dword_3558	dd 24230200h, 72657607h, 6E6F6973h, 7A5B0F00h, 2000000h
					; DATA XREF: .debug_info:00005D32o
		dd 73072823h, 616D6D75h, 0F007972h, 7A5Ch, 2C230200h, 73656407h
		dd 70697263h, 6E6F6974h, 7A5D0F00h, 2000000h, 61073023h
		dd 6F687475h, 5E0F0072h, 7Ah, 7342302h,	656D6F68h, 65676170h
		dd 7A5F0F00h, 2000000h,	6C073823h, 64616Fh, 100B650Fh
		dd 23020000h, 6E75073Ch, 64616F6Ch, 0B660F00h, 2000010h
		dd 64074023h, 72747365h, 0F00796Fh, 101D67h, 44230200h
		dd 5F697507h, 6F666E69h, 1A690F00h, 2000003h, 65074823h
		dd 61727478h, 666E695Fh, 6A0F006Fh, 31Ah, 74C2302h, 66657270h
		dd 6E695F73h, 0F006F66h, 10236Bh, 50230200h, 74636107h
		dd 736E6F69h, 3E7A0F00h, 2000010h
		db 23h,	54h, 0Eh
		dd offset a_purple_reserv ; "_purple_reserved1"
		db 0Fh
dword_3640	dd 3CA7Ch, 58230200h	; DATA XREF: .debug_info:00005E11o
		db 0Eh
		dd offset a_purple_rese_0 ; "_purple_reserved2"
		db 0Fh,	7Dh, 0CAh
		dd 2000003h
		db 23h,	5Ch, 0Eh
off_3657	dd offset a_purple_rese_1 ; DATA XREF: .debug_info:00006855o
					; "_purple_reserved3"
		db 0Fh
		dd 3CA7Eh, 60230200h
		db 0Eh
		dd offset a_purple_rese_2 ; "_purple_reserved4"
		db 0Fh,	7Fh, 0CAh
		dd 2000003h, 4006423h
aPurplepluginui	db 'PurplePluginUiInfo',0
		db 0Fh
		db  2Ah	; *
		dd offset loc_E85+4
		db 6, 5Fh, 50h
aUrplepluginuii	db 'urplePluginUiInfo',0
		dw 0F1Ch
		db 0ADh	; ≠
		dd offset loc_F20+1
aGet_plugin_pre	db 7,'get_plugin_pref_frame',0 ; DATA XREF: .debug_info:00005E9Ao
dword_36C0	dd 1060AE0Fh, 23020000h, 61700700h, 6E5F6567h, 0F006D75h
					; DATA XREF: .debug_info:00005FC8o
		dd 173B0h, 4230200h, 61726607h,	0F00656Dh, 105AB1h, 8230200h
		db 0Eh
		dd offset a_purple_reserv ; "_purple_reserved1"
		db 0Fh,	0B3h, 0CAh
		dd 2000003h
		db 23h,	0Ch, 0Eh
		dd offset a_purple_rese_0 ; "_purple_reserved2"
		db 0Fh
		dd 3CAB4h, 10230200h
		db 0Eh
		dd offset a_purple_rese_1 ; "_purple_reserved3"
		db 0Fh,	0B5h, 0CAh
		dd 2000003h
		db 23h,	14h, 0Eh
		dd offset a_purple_rese_2 ; "_purple_reserved4"
		db 0Fh
		db 0B6h	; ∂
		dd offset loc_3CA
		db 2, 23h, 18h
		db    0
		db 4, 50h, 75h
aRplepluginprio	db 'rplePluginPriority',0 ; DATA XREF: .debug_info:00005F14o
		db 0Fh
		db  31h	; 1
		dd offset unk_173
		db 4, 50h, 75h
aRplepluginpref	db 'rplePluginPrefFrame',0 ; DATA XREF: .debug_info:00005F4Ao
		db  10h
		db 1Eh,	5Ah, 0Fh
		db    0
		align 2
		dw 5F0Fh
aPurplepluginpr	db 'PurplePluginPrefFrame',0 ; DATA XREF: .debug_info:00005EF8o
		dw 1001h
		dd 0DD390F04h, 1100000Fh
aPurple_plugin_	db 'PURPLE_PLUGIN_UNKNOWN',0
		dw 117Fh
aPurple_plugi_0	db 'PURPLE_PLUGIN_STANDARD',0
		align 10h
		db  11h
aPurple_plugi_1	db 'PURPLE_PLUGIN_LOADER',0
		dw 1101h
aPurple_plugi_2	db 'PURPLE_PLUGIN_PROTOCOL',0 ; DATA XREF: .debug_info:00005FCCo
		db 2
		db    0
		db 4, 50h, 75h
aRpleplugintype	db 'rplePluginType',0   ; DATA XREF: .debug_info:0000616Fo
		db 0Fh
		db  3Fh	; ?
		dd offset loc_F71+2
		db 15h,	1, 35h
		db    3
		db 2 dup(0), 5
		db  10h
		db 2 dup(0), 0Bh
		dd offset loc_1004+1
		db    0
		db 2, 4, 4Bh
		db  0Bh
		db 2 dup(0), 2
		db    4
		dd offset loc_FF4+1
		db 0Ah,	1, 1Dh
		db  10h
		db 2 dup(0), 0Bh
		dd offset loc_1004+1
		db    0
		db 2, 4, 11h
		db  10h
		db 2 dup(0), 2
		db    4
		dd offset loc_E6F
		db 15h,	1, 1Bh
		db    4
		db 2 dup(0), 3Eh
		db  10h
		db 2 dup(0), 0Bh
		dd offset loc_1004+1
		db  0Bh
		dd offset loc_368+1
		align 2
		dw 402h
		dd offset loc_1025+4
		db    2
		db 4, 6Ah, 0Ch
		db    0
		align 2
		dw 115h
		dd offset loc_105A
off_3854	dd offset loc_105A	; DATA XREF: .debug_info:00006046o
		db  0Bh
		dd offset loc_1004+1
		align 2
		dw 402h
		dd offset loc_F3C+1
		db    2
		db 4, 4Ah, 10h
		db    0
		align 2
		dw 5004h
aUrplepresence	db 'urplePresence',0
		dw 5711h
		dd offset loc_1078+4
		db  0Fh
a_purplepresenc	db '_PurplePresence',0
byte_3891	db 1, 4, 50h		; DATA XREF: .debug_info:00006064o
aUrplebuddyicon	db 'urpleBuddyIcon',0
		db 12h
		db  22h	; "
		dd offset loc_10A2+3
		db 0Fh,	5Fh, 50h
aUrplebuddyic_0	db 'urpleBuddyIcon',0
		db 1
		db    4
aPurpleconversa	db 'PurpleConversationUiOps',0 ; DATA XREF: .debug_info:00006032o
					; .debug_info:00006839o
		db 13h,	24h, 0D7h
		dd 6000010h
a_purpleconvers	db '_PurpleConversationUiOps',0
		db 4Ch,	13h, 9Eh
		dd offset loc_12AB
aCreate_convers	db 7,'create_conversation',0
		db 13h,	0A3h, 12h
		db  1Ch
		db 2 dup(0), 2
		db  23h	; #
		align 2
aDestroy_conver	db 7,'destroy_conversation',0
		db  13h
		db 0A6h, 12h, 1Ch
		db    0
		align 2
		dw 2302h
		db    4
aWrite_chat	db 7,'write_chat',0
		db 13h,	0ABh, 38h
		db  1Ch
		db 2 dup(0), 2
aWrite_im	db '#',8,7,'write_im',0
		db  13h
		db 0B2h, 38h, 1Ch
		db    0
		align 2
		dw 2302h
		db  0Ch
aWrite_conv	db 7,'write_conv',0     ; DATA XREF: .debug_info:00006155o
		db 13h,	0BDh, 63h
		db  1Ch
		db 2 dup(0), 2
		db  23h	; #
		db 10h,	7, 63h
aHat_add_users	db 'hat_add_users',0    ; DATA XREF: .debug_info:00006173o
		dw 0CA13h
		dd offset byte_1C7F
		db    2
		db 23h,	14h, 7
aChat_rename_us	db 'chat_rename_user',0 ; DATA XREF: .debug_info:00006189o
		db 13h,	0D2h, 0A0h
		db  1Ch
		db 2 dup(0), 2
		db  23h	; #
		db 18h,	7, 63h
aHat_remove_use	db 'hat_remove_users',0 ; DATA XREF: .debug_info:000061A5o
		db 13h,	0D8h, 0B7h
		db  1Ch
		db 2 dup(0), 2
		db  23h	; #
		db 1Ch,	7, 63h
aHat_update_use	db 'hat_update_user',0  ; DATA XREF: .debug_info:000061BAo
		db  13h
		db 0DCh, 0CEh, 1Ch
		db    0
		align 2
word_39DE	dw 2302h		; DATA XREF: .debug_info:00006141o
aPresent	db ' ',7,'present',0    ; DATA XREF: .debug_info:000062E8o
		dw 0E113h
		dd offset aSRawS+0Ah	; "s"
		db    2
aHas_focus	db '#$',7,'has_focus',0
		dw 0E713h
		dd offset off_1CE4
		db    2
aCustom_smiley_	db '#(',7,'custom_smiley_add',0
		dw 0EA13h
off_3A1C	dd offset off_1D04	; DATA XREF: .debug_info:00006234o
		db    2
aCustom_smile_0	db '#,',7,'custom_smiley_write',0 ; DATA XREF: .debug_info:0000620Bo
					; .debug_info:00006228o
		db  13h
		db 0EBh, 30h, 1Dh
		db    0
		align 2
		dw 2302h
a0Custom_smiley	db '0',7,'custom_smiley_close',0
		dw 0ED13h
		dd offset off_1CCC+2
		dd 7342302h, 646E6573h,	6E6F635Fh, 6D726966h, 0CEF41300h
		dd 200001Ch
		db 23h,	38h, 0Eh
		dd offset a_purple_reserv ; "_purple_reserved1"
		db 13h
		dd 3CAF6h, 3C230200h
		db 0Eh
		dd offset a_purple_rese_0 ; "_purple_reserved2"
		db 13h,	0F7h, 0CAh
		dd 2000003h
		db 23h,	40h, 0Eh
		dd offset a_purple_rese_1 ; "_purple_reserved3"
		db 13h
		dd 3CAF8h, 44230200h
		db 0Eh
		dd offset a_purple_rese_2 ; "_purple_reserved4"
		db 13h,	0F9h, 0CAh
		dd 2000003h, 4004823h
aPurpleconver_0	db 'PurpleConversation',0
		db 13h
		db  26h	; &
off_3AC5	dd offset loc_12C1+4	; DATA XREF: .debug_info:000062B4o
		db 16h,	5Fh, 50h
aUrpleconversat	db 'urpleConversation',0
		dw 1330h
dword_3AE0	dd 13B4014Fh		; DATA XREF: .debug_info:000062D2o
		db 2 dup(0), 17h
		dd offset aType		; "type"
		db 13h
		dd 15AB0151h, 23020000h
		db 0, 17h
		dd offset aAccount	; "account"
		dw 5313h
		dd 7D701h, 4230200h
		db 17h
		dd offset aName		; "name"
		db 13h,	56h, 1
		dd offset loc_7A
dword_3B10	dd 14082302h, 6C746974h, 57130065h, 7A01h, 0C230200h, 676F6C14h
		dd 676E6967h, 1591300h,	335h, 14102302h, 73676F6Ch, 15B1300h
		dd 41Bh, 14142302h, 63130075h, 1D3C01h,	18230200h, 5F697514h
		dd 73706Fh, 77016513h, 200001Dh, 75141C23h, 61645F69h
		dd 13006174h, 31A0166h,	23020000h
		db 20h,	17h
		dd offset aData		; "data"
		dw 6813h
		db    1
		dd offset loc_5BC+4
		db 2, 23h, 24h
		db  14h
aFeatures	db 'features',0
		dw 6A13h
		db    1
		dd offset loc_ACB
		db 2, 23h, 28h
		db  14h
aMessage_histor	db 'message_history',0  ; DATA XREF: .debug_info:0000638Eo
		db 13h,	6Bh, 1
		dd offset loc_419+2
		db    2
		db 23h,	2Ch, 0
		db    4
aPurpleconvim	db 'PurpleConvIm',0     ; DATA XREF: .debug_info:000063BAo
		dw 2813h
		dd offset loc_13C8
		db    6
a_purpleconvim	db '_PurpleConvIm',0
		db 18h
		db  13h
		db 0FFh, 65h, 14h
		db    0
		align 2
		dw 6314h
unk_3BE4	db  6Fh	; o		; DATA XREF: .debug_info:000063D2o
		db 6Eh,	76h, 0
		db  13h
		db 2 dup(1), 0F4h
		db  1Bh
		db 2 dup(0), 2
		db  23h	; #
		align 2
		dw 7414h
aYping_state	db 'yping_state',0
		db  13h
byte_3C01	db 3, 1, 5		; DATA XREF: .debug_info:000063F1o
		db  16h
		db 2 dup(0), 2
		db  23h	; #
		db 4, 14h, 74h
aYping_timeout	db 'yping_timeout',0
		dw 413h
		db    1
off_3C1D	dd offset loc_353	; DATA XREF: .debug_info:00006410o
		db 2, 23h, 8
		db  14h
aType_again	db 'type_again',0
		db  13h
		db 5, 1, 0B5h
		db    1
byte_3C35	db 2 dup(0), 2		; DATA XREF: .debug_info:0000642Bo
		db  23h	; #
		db 0Ch,	14h, 73h
aEnd_typed_time	db 'end_typed_timeout',0
		dw 613h
		db    1
		dd offset loc_353
		db 2, 23h, 10h
		db  14h
aIcon		db 'icon',0
		dw 813h
		db    1
		dd offset off_1D34+2
		db 2, 23h, 14h
		db    0
		db 4, 50h, 75h
aRpleconvchat	db 'rpleConvChat',0
byte_3C79	db 13h,	2Ah, 7Bh	; DATA XREF: .debug_info:00006460o
		db  14h
		db 2 dup(0), 16h
a_purpleconvcha	db '_PurpleConvChat',0
		db  24h	; $
		db 13h,	0Eh, 1
		dd offset loc_1525+5
		db  14h
aConv		db 'conv',0
		dw 1013h
		db    1
		dd offset aFalse+2	; "LSE"
		db 2, 23h, 0
		db  14h
aIn_room	db 'in_room',0          ; DATA XREF: .debug_info:00006492o
		db 13h,	12h, 1
off_3CB4	dd offset loc_419+2	; DATA XREF: .debug_info:000062A0o
		db    2
		db 23h,	4, 14h
aIgnored	db 'ignored',0
		db  13h
		db 15h,	1, 1Bh
		db    4
		db 2 dup(0), 2
		db  23h	; #
		db 8, 14h, 77h
		db  68h	; h
		db 6Fh,	0, 13h
		db  16h
		dd offset aEck_mail_dsn	; "ECK_MAIL_DSN"
		align 2
		dw 2302h
		db  0Ch
		db 14h,	74h, 6Fh
		db  70h	; p
		db 69h,	63h, 0
		db  13h
		db 17h,	1, 7Ah
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 10h,	14h, 69h
		db  64h	; d
		align 2
		dw 1813h
		db    1
		dd offset unk_173
		db 2, 23h, 14h
		db  14h
aNick		db 'nick',0
		dw 1913h
		dd offset aEck_mail_dsn	; "ECK_MAIL_DSN"
		db    0
		db 2, 23h, 18h
		db  14h
aLeft		db 'left',0
		dw 1B13h
		db    1
		dd offset loc_333+2
		db 2, 23h, 1Ch
		db  14h
aUsers		db 'users',0
		db 13h
		db  1Ch
		db 1, 0C0h, 5
		db    0
		align 2
		dw 2302h
		db  20h
		align 2
		dw 410h
		db  13h
		db 34h,	0ABh, 15h
		db    0
		align 2
		dw 5011h
aUrple_conv_typ	db 'URPLE_CONV_TYPE_UNKNOWN',0
		db    0
		db 11h,	50h, 55h
aRple_conv_type	db 'RPLE_CONV_TYPE_IM',0
		dw 1101h
aPurple_conv_ty	db 'PURPLE_CONV_TYPE_CHAT',0 ; DATA XREF: .debug_info:00006568o
		dw 1102h
aPurple_conv__0	db 'PURPLE_CONV_TYPE_MISC',0 ; DATA XREF: .debug_info:0000657Fo
		dw 1103h
aPurple_conv__1	db 'PURPLE_CONV_TYPE_ANY',0 ; DATA XREF: .debug_info:00006594o
		db 4, 0, 4
aPurpleconver_1	db 'PurpleConversationType',0
		db 13h
		db  3Bh	; ;
		dd offset loc_1525+5
		db 10h,	4, 13h
		db  5Fh	; _
		dd offset loc_1601+4
		db 11h,	50h, 55h
aRple_not_typin	db 'RPLE_NOT_TYPING',0
		db    0
byte_3DE9	db 11h,	50h, 55h	; DATA XREF: .debug_info:000065D1o
aRple_typing	db 'RPLE_TYPING',0
		db    1
		db 11h,	50h, 55h
aRple_typed	db 'RPLE_TYPED',0       ; DATA XREF: .debug_info:000065F6o
		db 2
		db    0
		db 4, 50h, 75h
aRpletypingstat	db 'rpleTypingState',0
		db  13h
		db 64h,	0C9h, 15h
		db    0
		align 2
		dw 410h
		db  13h
		db 6Ah,	0A2h, 17h
		db    0
		align 2
		dw 5011h
aUrple_message_	db 'URPLE_MESSAGE_SEND',0
		db 1
		db  11h
aPurple_message	db 'PURPLE_MESSAGE_RECV',0
		db 2, 11h, 50h
aUrple_messag_0	db 'URPLE_MESSAGE_SYSTEM',0
		db 4, 11h, 50h
aUrple_messag_1	db 'URPLE_MESSAGE_AUTO_RESP',0
		db    8
		db 11h,	50h, 55h
aRple_message_a	db 'RPLE_MESSAGE_ACTIVE_ONLY',0
		db 10h,	11h, 50h
aUrple_messag_2	db 'URPLE_MESSAGE_NICK',0
		db 20h
		db  11h
aPurple_messa_0	db 'PURPLE_MESSAGE_NO_LOG',0
		db '¿',0
		db 11h,	50h, 55h
aRple_message_w	db 'RPLE_MESSAGE_WHISPER',0 ; DATA XREF: .debug_info:000066DAo
		db 80h,	1, 11h
aPurple_messa_1	db 'PURPLE_MESSAGE_ERROR',0 ; DATA XREF: .debug_info:000066EFo
		db 80h,	4, 11h
aPurple_messa_2	db 'PURPLE_MESSAGE_DELAYED',0
		db 80h
		db    8
		db 11h,	50h, 55h
aRple_message_r	db 'RPLE_MESSAGE_RAW',0
byte_3F35	db 80h,	10h, 11h	; DATA XREF: .debug_info:00006704o
aPurple_messa_3	db 'PURPLE_MESSAGE_IMAGES',0
word_3F4E	dw 2080h		; DATA XREF: .debug_info:00006744o
		db  11h
aPurple_messa_4	db 'PURPLE_MESSAGE_NOTIFY',0
aA_0		db 'Ä¿',0
		dw 5011h
aUrple_messag_3	db 'URPLE_MESSAGE_NO_LINKIFY',0 ; DATA XREF: .debug_info:0000675Co
		db 2 dup(80h), 1
		db  11h
aPurple_messa_5	db 'PURPLE_MESSAGE_INVISIBLE',0 ; DATA XREF: .debug_info:00006781o
		dw 8080h
		db    2
		align 2
		dw 5004h
aUrplemessagefl	db 'urpleMessageFlags',0 ; DATA XREF: .debug_info:00006644o
		dw 8213h
		dd offset loc_161D+1
		dd 72755004h, 4C656C70h, 1400676Fh, 17CD25h, 505F0600h
		dd 6C707275h, 676F4C65h, 7C142000h, 185Dh
		db 0Eh
		dd offset aType		; "type"
		db 14h,	7Dh, 6Ah
		dd 200001Ah
		db 23h,	0, 0Eh
		dd offset aName		; "name"
		db 14h
		dd offset word_7A7E
		dd 4230200h
		db 0Eh
		dd offset aAccount	; "account"
		db 14h,	7Fh, 0D7h
dword_4008	dd 2000007h, 63070823h,	766E6Fh, 1BF48114h, 23020000h
		dd 6974070Ch, 1400656Dh, 1B582h, 10230200h, 676F6C07h
		dd 726567h, 1BFA8514h, 23020000h, 6F6C0714h, 72656767h
		dd 7461645Fh, 87140061h, 31Ah, 7182302h, 14006D74h, 1C0088h
		dd 1C230200h, 75500400h, 656C7072h, 4C676F4Ch, 6567676Fh
		dd 26140072h, 1874h, 75505F06h,	656C7072h, 4C676F4Ch, 6567676Fh
		dd 14440072h, 19AC3Fh
		db 0, 0Eh
		dd offset aName		; "name"
		dw 4014h
		dd offset loc_7A
dword_409C	dd 7002302h, 14006469h,	7A41h, 4230200h, 65726307h, 657461h
		dd 1B0A4514h, 23020000h, 72770708h, 657469h, 1B344814h
		dd 23020000h, 6966070Ch, 696C616Eh, 1400657Ah, 1B0A4Fh
		dd 10230200h, 73696C07h, 52140074h, 1B54h, 7142302h, 64616572h
		dd 75561400h, 200001Bh,	73071823h, 657A69h, 1B8B5A14h
		dd 23020000h, 6F74071Ch, 5F6C6174h, 657A6973h, 0AB5E1400h
		dd 200001Bh, 6C072023h,	5F747369h, 6C737973h, 1400676Fh
		dd 1BC161h, 24230200h, 74656707h, 676F6C5Fh, 7465735Fh
		dd 6B140073h, 1BD8h, 7282302h, 6F6D6572h, 14006576h, 1BEE6Eh
		dd 2C230200h, 5F736907h, 656C6564h, 6C626174h, 71140065h
		dd 1BEEh, 0E302302h
		dd offset a_purple_reserv ; "_purple_reserved1"
		dd 3CA7314h, 23020000h
		db 34h,	0Eh
		dd offset a_purple_rese_0 ; "_purple_reserved2"
		dw 7414h
		dd offset loc_3CA
		dd 0E382302h
		dd offset a_purple_rese_1 ; "_purple_reserved3"
		dd 3CA7514h, 23020000h
		db 3Ch,	0Eh
		dd offset a_purple_rese_2 ; "_purple_reserved4"
		dw 7614h
		dd offset loc_3CA
dword_41AC	dd 402302h, 72755004h, 4C656C70h, 6553676Fh, 28140074h
					; DATA XREF: .debug_info:00006890o
					; .debug_info:000068CEo
		dd 19C0h, 75505F06h, 656C7072h,	53676F4Ch, 14007465h, 1A2BA314h
		db 2 dup(0), 0Eh
		dd offset aType		; "type"
		db 14h
		dd 1A6AA4h, 230200h
		db 0Eh
		dd offset aName		; "name"
		db 14h,	0A5h, 7Ah
		dd 2000000h
		db 23h,	4, 0Eh
		dd offset aAccount	; "account"
		db 14h
		db 0A6h	; ¶
		dd offset loc_7D5+2
		db 2, 23h, 8
aBuddy		db 7,'buddy',0
		db 14h
		db 0ADh	; ≠
		dd offset loc_333+2
		db 2, 23h, 0Ch
aNormalized_nam	db 7,'normalized_name',0
		db 14h,	0AFh, 7Ah
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 10h,	0, 10h
		db    4
		db 14h,	2Ah, 6Ah
		db  1Ah
		db 2 dup(0), 11h
aPurple_log_im	db 'PURPLE_LOG_IM',0
		dw 1100h
aPurple_log_cha	db 'PURPLE_LOG_CHAT',0
		db    1
		db 11h,	50h, 55h
aRple_log_syste	db 'RPLE_LOG_SYSTEM',0
dword_426C	dd 50040002h, 6C707275h, 676F4C65h, 65707954h, 2B2E1400h
		dd 1000001Ah, 0A5301404h, 1100001Ah
aPurple_log_rea	db 'PURPLE_LOG_READ_NO_NEWLINE',0
		db 1
		db    0
		db 4, 50h, 75h
aRplelogreadfla	db 'rpleLogReadFlags',0
		db 14h,	32h, 7Fh
		dd 400001Ah
aPurplelogsetca	db 'PurpleLogSetCallback',0
		db 14h,	37h, 0DBh
		db  1Ah
		db 2 dup(0), 2
		db    4
		dd offset loc_1AE0+1
		db 0Ah,	1, 0F2h
		db  1Ah
		db 2 dup(0), 0Bh
		dd offset loc_5BC+4
		db  0Bh
		dd offset loc_1AEC+6
		align 2
		dw 402h
		dd offset loc_19A9+3
		db  0Ah
		db 1, 4, 1Bh
		db    0
		align 2
		dw 40Bh
		db  1Bh
		align 4
		db    2
		db 4, 0BCh, 17h
		db    0
		align 2
		dw 402h
		dd offset loc_1AF4+4
		db  15h
		db 1, 0Dh, 3
		db    0
		align 2
		dd offset loc_1B33+1
		dw 40Bh
		db  1Bh
		db 2 dup(0), 0Bh
		dd offset loc_17A0+2
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0B5h, 1
		db    0
		align 2
		dw 0E20Bh
		db    5
		align 4
		db    2
		db 4, 10h, 1Bh
		db    0
		align 2
		dw 115h
		dd offset loc_419+2
		dd offset loc_1B52+2
		db  0Bh
off_4349	dd offset loc_1A6A	; DATA XREF: .debug_info:00006B30o
		db 0Bh,	0E2h, 5
		db    0
		align 2
		dw 0D70Bh
		db    7
		align 4
		db    2
		db 4, 3Ah, 1Bh
		db    0
		align 2
		dw 115h
off_4360	dd offset loc_7A	; DATA XREF: .debug_info:00006B59o
		dd offset unk_1B6F
		db  0Bh
		dd offset loc_1B02+2
		db 0Bh,	6Fh, 1Bh
		db    0
		db 2 dup(0), 2
		db    4
		dd offset loc_1AA2+3
		db 2, 4, 5Ah
		db  1Bh
		db 2 dup(0), 15h
		db    1
		dd offset unk_173
off_4385	dd offset aMsgNull+7	; DATA XREF: .debug_info:00006B6Do
					; "NULL"
		db 0Bh,	4, 1Bh
		db    0
		db 2 dup(0), 2
		db    4
		dd offset unk_1B7B
		db 15h,	1, 73h
		db    1
byte_4399	db 2 dup(0), 0ABh	; DATA XREF: .debug_info:00006B92o
		db  1Bh
		db 2 dup(0), 0Bh
		dd offset loc_1A6A
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0D7h, 7
		db    0
		db 2 dup(0), 2
		db    4
		dd offset aElemNull+1	; "lem != NULL"
		db 15h,	1, 1Bh
unk_43B8	db    4			; DATA XREF: .debug_info:00006BB0o
		db 2 dup(0), 0C1h
		db  1Bh
		db 2 dup(0), 0Bh
		dd offset loc_7D5+2
		db    0
		db 2, 4, 0B1h
		db  1Bh
		db 2 dup(0), 0Ah
		db    1
		dd offset aMsimmessage_0+2 ; "simMessage: \n"
		db 0Bh,	0BFh, 1Ah
		db    0
		align 2
		dw 0C00Bh
		db    5
		align 4
		db    2
		db 4, 0C7h, 1Bh
		db    0
unk_43E1	db    0			; DATA XREF: .debug_info:00006BC5o
		dw 115h
		dd offset loc_333+2
		dd offset aTrue+1	; "RUE"
		db  0Bh
		dd offset loc_1B02+2
		align 2
		dw 402h
		dd offset aMsimmessage_0+8 ; "sage: \n"
		db    2
		db 4, 0ABh, 12h
		db    0
		align 2
		dw 402h
		dd offset loc_185D
		db    2
		db 4, 19h, 2
		db    0
unk_4409	db    0			; DATA XREF: .debug_info:00006BEEo
		dw 10Ah
		dd offset aSRawS+0Ah	; "s"
		db  0Bh
		dd offset aFalse+2	; "LSE"
		align 2
		dw 402h
		dd offset aSIntegerD+0Eh ; "d"
		db  0Ah
		db 1, 38h, 1Ch
		db    0
		align 2
word_4422	dw 0F40Bh		; DATA XREF: .debug_info:00006A58o
					; .debug_info:00006C1Co
		db  1Bh
		db 2 dup(0), 0Bh
off_4428	dd offset loc_5DE+4	; DATA XREF: .debug_info:00006E19o
					; .debug_info:00007087o ...
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0A2h, 17h
		db    0
		align 2
		dw 0B50Bh
		db    1
		align 4
		db    2
		db 4, 18h, 1Ch
		db    0
		align 2
		dw 10Ah
		dd offset aNullCouldnTMsi+17h ;	"g_dump_to_str)"
		db  0Bh
		dd offset aFalse+2	; "LSE"
		db 0Bh,	0E2h, 5
		db    0
		align 2
		dw 0E20Bh
		db    5
		db 2 dup(0), 0Bh
		dd offset loc_5DE+4
		db  0Bh
		dd offset loc_17A0+2
		db 0Bh,	0B5h, 1
		db    0
		db 2 dup(0), 2
		db    4
		dd offset aSBooleanS+2	; "(boolean): %s"
		db 0Ah,	1, 7Fh
		db  1Ch
		db 2 dup(0), 0Bh
		dd offset aFalse+2	; "LSE"
		db  0Bh
		dd offset loc_419+2
		db 0Bh,	35h, 3
		db    0
		db 2 dup(0), 2
		db    4
		dd offset aNullCouldnTMsi+1Dh ;	"_to_str)"
		db 0Ah,	1, 0A0h
		db  1Ch
		db 2 dup(0), 0Bh
off_4490	dd offset aFalse+2	; DATA XREF: .debug_loc:0000AD50o
					; "LSE"
		db  0Bh
		dd offset loc_5DE+4
byte_4499	db 0Bh,	0E2h, 5		; DATA XREF: .debug_info:00006C8Co
		db    0
		align 2
		dw 0E20Bh
		db    5
		align 4
		db    2
byte_44A5	db 4, 85h, 1Ch		; DATA XREF: .debug_info:00006C50o
					; .debug_info:00006E38o
		db    0
		align 2
		dw 10Ah
		dd offset off_1CB4+3
		db  0Bh
		dd offset aFalse+2	; "LSE"
		db 0Bh,	1Bh, 4
		db    0
		db 2 dup(0), 2
		db    4
		dd offset aSUnknownTypeD+11h ; "d"
		db 0Ah,	1, 0CEh
		db  1Ch
		db 2 dup(0), 0Bh
		dd offset aFalse+2	; "LSE"
		db  0Bh
		dd offset loc_5DE+4
		align 2
		dw 402h
		dd offset off_1CBC+1
		db  15h
		db 1, 35h, 3
		db    0
		align 2
		dd offset off_1CE4
		dw 0F40Bh
		db  1Bh
		align 4
		db    2
		db 4, 0D4h, 1Ch
		db    0
		align 2
		dw 115h
		dd offset loc_333+2
		dd offset off_1D04
		db  0Bh
		dd offset aFalse+2	; "LSE"
		db 0Bh,	0E2h, 5
		db    0
		align 2
		dw 350Bh
		db    3
		align 4
		db    2
		db 4, 0EAh, 1Ch
		db    0
		align 2
		dw 10Ah
		dd offset off_1D24+1
		db  0Bh
		dd offset aFalse+2	; "LSE"
		db 0Bh,	0E2h, 5
		db    0
		align 2
word_451E	dw 250Bh		; DATA XREF: .debug_info:00006D0Do
		db  1Dh
		db 2 dup(0), 0Bh
		dd offset loc_307+6
		db    0
		db 2, 4, 2Bh
		db  1Dh
		db 2 dup(0), 0Ch
		dd offset loc_342+3
		db    2
		db 4, 0Ah, 1Dh
		db    0
		align 2
		dw 402h
		dd offset loc_108E
unk_4540	db  18h			; DATA XREF: .debug_info:00006D2Bo
		db 4, 13h, 5Dh
		db    1
		dd offset off_1D68+3
		db 19h,	69h, 6Dh
		db    0
		db 13h,	5Fh, 1
		dd offset off_1D68+3
		db  19h
aChat		db 'chat',0
		dw 6013h
		db    1
		dd offset off_1D70+1
		db 19h,	6Dh, 69h
		db  73h	; s
		db 63h,	0, 13h
		db  61h	; a
		db 1, 1Ah, 3
unk_456C	db    0			; DATA XREF: .debug_info:00006D61o
		db 2 dup(0), 2
		db    4
		dd offset loc_13B0+4
		db 2, 4, 65h
		db  14h
		db 2 dup(0), 2
		db    4
		dd offset loc_10B8
		db 2, 4, 45h
		db    3
		db 2 dup(0), 2
		db    4
		dd offset loc_81A+2
		db 10h,	4, 15h
		db  24h	; $
		dd offset off_1E18+15h
		db 11h,	50h, 55h
aRple_proxy_use	db 'RPLE_PROXY_USE_GLOBAL',0 ; DATA XREF: .debug_info:000076D1o
word_45AE	dw 117Fh		; DATA XREF: .debug_info:00006CF9o
aPurple_proxy_n	db 'PURPLE_PROXY_NONE',0
		dw 1100h
aPurple_proxy_h	db 'PURPLE_PROXY_HTTP',0
		dw 1101h
aPurple_proxy_s	db 'PURPLE_PROXY_SOCKS4',0
		db    2
		db 11h,	50h, 55h
aRple_proxy_soc	db 'RPLE_PROXY_SOCKS5',0
		dw 1103h
aPurple_proxy_u	db 'PURPLE_PROXY_USE_ENVVAR',0
dword_461C	dd 55501104h, 454C5052h, 4F52505Fh, 545F5958h, 500524Fh
		dd 75500400h, 656C7072h, 786F7250h, 70795479h, 2D150065h
		dd 1D89h, 3215141Ah, 1E95h
		db 0Eh
		dd offset aType		; "type"
		db 15h,	34h, 2Dh
		dd 200001Eh, 68070023h,	74736Fh, 7A3615h, 23020000h, 6F700704h
		dd 15007472h, 17337h, 8230200h
		db 0Eh
		dd offset aUsername	; "username"
		db 15h,	38h, 7Ah
		dd 2000000h
		db 23h,	0Ch, 0Eh
off_468B	dd offset aPassword	; DATA XREF: .debug_info:00006E69o
					; .debug_info:00006E86o
					; "password"
		db 15h
		dd offset aAllenge_dsn	; "ALLENGE_DSN"
		db    0
		db 2, 23h, 10h
		db    0
		db 4, 50h, 75h
aRpleproxyinfo	db 'rpleProxyInfo',0
		dw 3B15h
		dd offset off_1E18+2Ch
		db    2
		db 4, 66h, 10h
		db    0
		align 2
a_purpleprivacy	db 1Bh,'_PurplePrivacyType',0
		dw 1604h
		db  20h
		dd offset off_1EC4+99h
		db 11h,	50h, 55h
aRple_privacy_a	db 'RPLE_PRIVACY_ALLOW_ALL',0
		db 1
		db  11h
aPurple_privacy	db 'PURPLE_PRIVACY_DENY_ALL',0
		db 2, 11h, 50h
aUrple_privacy_	db 'URPLE_PRIVACY_ALLOW_USERS',0
		dw 1103h
aPurple_priva_0	db 'PURPLE_PRIVACY_DENY_USERS',0
		dw 1104h
aPurple_priva_1	db 'PURPLE_PRIVACY_ALLOW_BUDDYLIST',0
		db 5
		db    0
		db 4, 50h, 75h
aRpleprivacytyp	db 'rplePrivacyType',0
		dd 1EB22716h, 4020000h,	1E95h, 69734D04h, 73654D6Dh, 65676173h
		dd 65707954h, 1C1C1700h, 4000003h
aMsimmessageele	db 'MsimMessageElement',0
		db 17h
		db  1Dh
		dd offset off_1EC4+0E9h
		db 6, 5Fh, 4Dh
aSimmessageelem	db 'simMessageElement',0
		dw 1710h
		dd 200222h
		db 0, 0Eh
		dd offset aName		; "name"
		dw 2417h
		dd offset loc_3B5+4
		dd 0E002302h
off_47DC	dd offset aDynamic_name	; DATA XREF: .debug_info:00006FD6o
					; "dynamic_name"
		dd 3352517h, 23020000h
		db 4, 0Eh
		dd offset aType		; "type"
		dw 2617h
		dd offset loc_353
		dd 0E082302h
		dd offset aData		; "data"
dword_47FC	dd 3692717h, 23020000h,	5F06000Ch, 6D69734Dh, 73736553h
					; DATA XREF: .debug_info:00006FEAo
		dd 6E6F69h, 0A61D1850h,	7000021h, 6967616Dh, 1F180063h
		dd 353h, 0E002302h
		dd offset aAccount	; "account"
dword_4830	dd 7D72018h, 23020000h,	63670704h, 83211800h, 200001Dh
					; DATA XREF: .debug_info:0000702Bo
		dd 73070823h, 6B737365h, 18007965h, 35322h, 0C230200h
		dd 65737507h, 646972h, 3532318h, 23020000h
		db 10h,	0Eh
		dd offset aUsername	; "username"
		dw 2418h
off_4870	dd offset loc_3C3+1	; DATA XREF: .debug_info:0000705Do
		db    2
		db 23h,	14h, 7
aShow_only_to_l	db 'show_only_to_list',0
		dw 2518h
		dd offset loc_333+2
		db    2
byte_4891	db 23h,	18h, 7		; DATA XREF: .debug_loc:0000A6D8o
aPrivacy_mode	db 'privacy_mode',0     ; DATA XREF: .debug_info:0000708Bo
		db 18h,	26h, 73h
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 1Ch,	7, 6Fh
aFfline_message	db 'ffline_message_mode',0
		dd 1732718h, 23020000h,	64660720h, 29281800h, 2000003h
aUser_lookup_cb	db '#$',7,'user_lookup_cb',0
		dw 2B18h
		dd offset loc_5BC+4
		db    2
aUser_lookup__0	db '#(',7,'user_lookup_cb_data',0 ; DATA XREF: .debug_info:000070CDo
		db  18h
		db 2Ch,	0C0h, 5
		db    0
		align 2
		dw 2302h
aServer_info	db ',',7,'server_info',0
		dw 2E18h
		dd offset loc_419+2
		db    2
a0Rxbuf		db '#0',7,'rxbuf',0
		dw 3018h
off_492C	dd offset loc_3C3+1	; DATA XREF: .debug_info:0000726Co
		db    2
a4Rxoff		db '#4',7,'rxoff',0
		dw 3118h
		dd offset loc_353
		db    2
a8Rxsize	db '#8',7,'rxsize',0
		db 18h
		db  32h	; 2
		dd offset loc_353
		db 2, 23h, 3Ch
aNext_rid	db 7,'next_rid',0
		dw 3318h
		dd offset loc_353
		db    2
a@Last_comm	db '#@',7,'last_comm',0
		dw 3418h
off_4974	dd offset loc_1B5	; DATA XREF: .debug_info:00007168o
		db    2
aDInbox_status	db '#D',7,'inbox_status',0
		db 18h,	35h, 53h
		db    3
		db 2 dup(0), 2
aHInbox_handle	db '#H',7,'inbox_handle',0
		db  18h
byte_49A1	db 36h,	53h, 3		; DATA XREF: .debug_info:0000715Eo
		db    0
		align 2
		dw 2302h
		db  4Ch	; L
		align 2
		dw 4D04h
aSimsession	db 'simSession',0
		db 18h
		db  37h	; 7
		dd offset aMsim_msg_free_+22h ;	"eeing unknown type %d\n"
		db 2, 4, 0A6h
		db  21h	; !
		db 2 dup(0), 2
		db    4
		dd offset off_2190+35h
		db 0Ch,	0D2h, 3
		db    0
		align 2
		dw 4D06h
aSim_escape_rep	db 'SIM_ESCAPE_REPLACEMENT',0
		db 8
		dd 22091F01h, 63070000h, 65646Fh, 3C42001h, 23020000h
		dd 65740700h, 1007478h,	31C21h,	4230200h
		db 0, 1Ch
		dd offset aMsim_msg_get_n ; "msim_msg_get_node"
		dw 9401h
		dd 41B0101h, 7D010000h,	1D000022h, 67736Dh, 0BF019401h
		dd 1E000021h
		dd offset aName		; "name"
		dd 0B9019401h, 1F000003h, 65646F6Eh, 1960100h, 41Bh
		db 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_2190+0FDh
		db 1
		dd offset aMsim_msg_get_n ; "msim_msg_get_node"
		dw 2221h
		dd offset aElem		; "elem"
		dd 92019E01h, 23000022h, 226Dh
		db 22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 0A2h, 1
		dd offset unk_173
		db 0, 21h, 22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 17301A3h, 0
		dd 801200h, 228D0000h, 0F4130000h, 11000001h, 227D0C00h
		dd 4020000h, 1F93h
aMsim_msg_dump_	db '$msim_msg_dump_to_str',0 ; DATA XREF: .debug_info:0000729Ao
		dw 2001h
		dd 3C40101h, 0D4010000h, 1D000022h, 67736Dh, 1B012001h
		dd 22000004h
		dd offset aDebug_str	; "debug_str"
		dd 0C4012201h, 3
		db 25h
		dd offset aMsim_msg_pack_ ; "msim_msg_pack_element_dict"
		db 1, 17h, 3
		dd 23470101h
		db 2 dup(0), 1Eh
		dd offset aData		; "data"
		db 1
		dd 3690317h
		db 2 dup(0), 1Eh
		dd offset aUser_data	; "user_data"
		db 1
		dd 3690317h
		db 2 dup(0), 22h
		dd offset aElem		; "elem"
		db 1
		dd 22920319h
		db 2 dup(0), 22h
		dd offset aString	; "string"
		db 1
		dd 3C4031Ah
		db 2 dup(0), 22h
		dd offset aData_string	; "data_string"
		db 1
		dd 3C4031Ah
		db 2 dup(0), 22h
		dd offset aItems	; "items"
		db 1
		dd 2347031Ah
		db 2 dup(0), 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_22C4+99h
		db 1
		dd offset aMsim_msg_pack_ ; "msim_msg_pack_element_dict"
		db 21h,	22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 2601h
		dd 17303h, 2000000h, 5C604h, 801200h, 235D0000h, 0F4130000h
		dd 1A000001h, 234D0C00h
		db 2 dup(0), 25h
		dd offset aMsim_msg_pac_0 ; "msim_msg_pack_element"
		db 1
		dd 10102DFh, 23C7h
		db 1Eh
		dd offset aData		; "data"
		db 1, 0DFh, 2
		dd offset loc_368+1
		db 1Eh
off_4B81	dd offset aUser_data	; DATA XREF: .debug_info:0000737Bo
					; "user_data"
		db 1, 0DFh, 2
		dd offset loc_368+1
		db 22h
		dd offset aElem		; "elem"
		db 1, 0E1h, 2
		dd offset off_2190+102h
byte_4B98	db 22h			; DATA XREF: .debug_info:00007390o
		dd offset aString	; "string"
		db 1, 0E2h, 2
		dd offset loc_3C3+1
		db 22h
		dd offset aData_string	; "data_string"
		db 1, 0E2h, 2
		dd offset loc_3C3+1
		db 22h
		dd offset aItems	; "items"
byte_4BB5	db 1, 0E3h, 2		; DATA XREF: .debug_info:000073A5o
		dd offset off_22C4+83h
		db 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_22C4+113h
		db 1
		dd offset aMsim_msg_pac_0 ; "msim_msg_pack_element"
		dw 1200h
		dd offset loc_7D+3
		dd offset off_22C4+113h
		dd 1F413h, 0C001500h, 23C7h
aMsim_msg_list_	db '&msim_msg_list_copy',0 ; DATA XREF: .debug_info:000073C3o
dword_4BF4	dd 1020B01h, 41Bh	; DATA XREF: .debug_info:000073EDo
		dd offset _msim_msg_list_copy ;	jumptable 000002B4 cases 16,38,51,57,64
		dd offset _msim_msg_pack_using
		dd offset dword_85C0
		dd 245601h, 6C6F2700h, 0B010064h, 21BF02h
		db 0
		dd offset dword_8628
aNew_list	db '(new_list',0        ; DATA XREF: .debug_info:00007402o
		db 1
		dd 41B020Dh
		db 2 dup(0)
off_4C2E	dd offset byte_8651	; DATA XREF: .debug_info:000072ADo
		db 29h
		dd offset loc_22
		dd offset byte_54E1
		db 2Ah
		dd offset loc_2E
		dd offset word_54FE
off_4C44	dd offset off_23E4+68h	; DATA XREF: .debug_info:0000743Eo
		dd 74022Bh, 7602h
		db 29h
		dd offset _msim_msg_pack_using
		dd offset off_5525
		align 2
aMsim_msg_pac_1	db ',msim_msg_pack_using',0
		db 1
		dd 3C401F6h
		db 2 dup(0)
		dd offset _msim_msg_pack_using
		dd offset unk_14D
off_4C7E	dd offset off_8670	; DATA XREF: .debug_info:00007478o
		dw 5901h
		dd 2D000026h, 67736Dh, 41BF601h
byte_4C90	db 2 dup(0)		; DATA XREF: .debug_loc:000099A8o
		dd offset off_870A
word_4C96	dw 672Dh		; DATA XREF: .debug_info:0000748Eo
		dd 0F7010066h, 395h
		dd offset off_874F
aSep		db '-sep',0
		db 1, 0F8h, 0B9h
		db 3, 2	dup(0)
		dd offset off_8794
a_begin		db '.begin',0
		dw 0F901h
		dd offset loc_3B5+4
dword_4CC0	dd 2E009102h, 646E65h, 3B9F901h, 91020000h, 756E2F04h
		dd 74695F6Dh, 736D65h, 173FB01h
		db 2 dup(0)
		dd offset off_87CE
aStrings	db '/strings',0         ; DATA XREF: .debug_info:0000721Co
		db 1
		dd 5C6FCh
		db 0
		dd offset off_87EC
aStrings_tmp	db '/strings_tmp',0
		dw 0FD01h
off_4D08	dd offset loc_5C4+2	; DATA XREF: .debug_info:000074F8o
		dd offset off_880A
aJoined		db '/joined',0          ; DATA XREF: .debug_info:00007664o
		dd 3C4FE01h
		db 2 dup(0)
		dd offset off_882A
aFinal_0	db '/final',0
		db 1, 0FFh, 0C4h
		db 3, 2	dup(0)
		dd offset off_8848
		db 28h
		dd 10069h, 17301h
		db 0
		dd offset off_8866
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aMsim_msg_get_b+1 ; "sim_msg_get_binary: unhandled type %d f"...
		dw 501h
		db 3
		dd offset ___PRETTY_FUNCTION___44551 ; "msim_msg_pack_using"
		db 31h
		dd offset loc_72
		dd offset loc_7A
		dd offset aMsim_parseInco+43h ;	""
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 1730102h
		db 2 dup(0)
		dd offset off_8885
		dw 2A00h
		dd offset loc_8A
		dd offset off_5538+3
		dd offset aMsim_parseGotS+14h ;	"\n"
		dd 74022Bh, 7702h
		db 2Ah
		dd offset loc_9B
		dd offset byte_555D
off_4D8D	dd offset aMsim_msg_get_s+15h ;	DATA XREF: .debug_info:0000757Co
					; "lement: type	%d unknown, name %s\n"
		db 2Bh,	2, 74h
		dd 760600h, 4232432h
		db 0, 2Ah
		dd offset loc_B5
		dd offset byte_557B
		dd offset aListItemD+1	; "list	item #%d)"
		dw 22Bh
dword_4DAC	dd 77020074h, 74022B00h, 750204h, 874022Bh, 589102h
		db 2Ah
		dd offset loc_C5
		dd offset aSim_msg_append ; "sim_msg_append"
off_4DC9	dd offset aTypeDUnknownNa+6 ; DATA XREF: .debug_info:00007550o
					; "d unknown, name %s\n"
		db 2Bh,	2, 74h
		dd 730204h
		db 0, 2Ah
off_4DD6	dd offset loc_E7	; DATA XREF: .debug_info:00007568o
		dd offset off_55C8
		dd offset aMsim_msg_get_l+0Fh ;	"st"
		dw 22Bh
		dd 91030074h, 22B064Ch,	77020474h, 74022B00h, 30010Ch
		db 2Ah
		dd offset loc_F1
		dd offset byte_55E9
		dd offset aMsim_msg_dicti+11h ;	"ry_parse(%s): null key\n"
		db 2Bh,	2, 74h
		dd 770200h
		db 0, 29h
		dd offset loc_103
		dd offset byte_55E9
		db 2Ah
		dd offset loc_110
		dd offset byte_55E9
		dd offset aMsim_msg_dic_0+3 ; "m_msg_dictionary_prase(%s): null	value\"...
		db 2Bh
		dd 2007402h, 2A000073h
		dd offset loc_144
		dd offset dword_5600
		dd offset aMsim_msg_get_d ; "msim_msg_get_dictionary"
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44551 ; "msim_msg_pack_using"
		dd 874022Bh
		db 5, 3
		dd offset aMsgNull	; "msg != NULL"
		dw 2900h
		dd offset unk_14D
off_4E58	dd offset off_5525	; DATA XREF: .debug_info:00007649o
		dd 801200h, 26690000h, 0F4130000h, 13000001h, 26590C00h
		dd 9330000h
		db 22h,	2 dup(0)
		dd offset _msim_msg_get_node
		dd offset unk_1F5
		dd offset off_88A5
		db 1
		dd offset ___PRETTY_FUNCTION___44805+16h ; "om_element"
		dd 221B34h
		db 0
		dd offset off_890D
		db 34h,	27h, 22h
		db 2 dup(0)
		dd offset off_8952
		dw 3335h
		db 22h,	2 dup(0)
		dd offset off_899F
		db 36h
		dd offset off_2190+0B0h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"
		db 37h
		dd offset off_B014
		dd offset ___PRETTY_FUNCTION___44750+5 ; "msg_pack_element_data"
		db 35h
		dd offset off_2190+0BFh
		dd offset off_89B2
		db 31h
		dd offset loc_174
		dd offset loc_17A
off_4EC9	dd offset ___PRETTY_FUNCTION___44650+11h ; DATA	XREF: .debug_info:000076B8o
					; "ement"
		db 35h,	6Eh, 22h
		db 2 dup(0)
		dd offset off_89DB
		dw 3100h
		dd offset loc_193
		dd offset loc_197
		dd offset ___PRETTY_FUNCTION___44699+3 ; "m_msg_pack_element"
		dd 226035h
		db 0
		dd offset off_89FB
		align 2
		db 2Ah
		dd offset loc_186
		dd offset byte_5633
		dd offset ___PRETTY_FUNCTION___44551+2 ; "im_msg_pack_using"
		db 2Bh
		dd 2047402h, 38000076h
		dd offset loc_1B3
		dd offset dword_5600
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"
		dd 874022Bh
		db 5, 3
		dd offset aElemNull	; "elem	!= NULL"
		align 4
		dd 220939h
		db 0
		dd offset loc_1CC
		dd offset loc_1EC
		db 1, 94h, 1
		dd offset ___PRETTY_FUNCTION___44805+0Ch ; "_string_from_element"
		db 3Ah
		dd offset loc_1CC
		dd offset loc_1EC
		db 3Bh,	33h, 22h
		dd 273C0000h, 3C000022h, 221Bh,	224036h
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"
		db 3Ah
		dd offset loc_1CC
		dd offset loc_1EC
		dd 224F3Bh
		db 0, 38h
		dd offset loc_1E8
		dd offset dword_5600
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44591 ; "msim_msg_get_node"
		dw 22Bh
		dd 3050874h
		dd offset aElemNameNull	; "elem->name != NULL"
		dd 0
		db 29h
		dd offset unk_1F5
		dd offset off_5525
		align 2
		dw 9833h
		db 22h,	2 dup(0)
		dd offset _msim_msg_dump_to_str
		dd offset unk_24F
		dd offset off_8A27
		db 1
off_4FB0	dd offset dword_281C+2Ch ; DATA	XREF: .debug_info:0000779Bo
		dd 22BB34h
		db 0
		dd offset off_8A5F
		db 35h,	0C7h, 22h
		db 2 dup(0)
		dd offset off_8A99
		dw 9839h
		db 22h,	2 dup(0)
off_4FCB	dd offset loc_23C	; DATA XREF: .debug_info:00007760o
		dd offset loc_24A
		db 1
		dd 28030120h
		db 2 dup(0), 3Ah
		dd offset loc_23C
		dd offset loc_24A
		db 35h
		dd offset off_22C4+3
off_4FE8	dd offset off_8AB7	; DATA XREF: .debug_info:000077D9o
		dd 22BB3Ch
		db 0, 38h
off_4FF2	dd offset loc_248	; DATA XREF: .debug_info:00007700o
		dd offset byte_54E1
		dw 22Bh
		dd 3050074h
off_5000	dd offset aMsimmessageEmp ; DATA XREF: .debug_loc:00008AC0o
					; .debug_loc:00009A00o	...
					; "<MsimMessage: empty>"
		dd 2A000000h
		dd offset loc_229
		dd offset off_23E4+72h
		dd offset dword_281C+22h
dword_5014	dd 350012Bh, 2B5001F3h,	3055201h ; DATA	XREF: .debug_info:00007814o
					; .debug_info:00007859o ...
		dd offset _msim_msg_debug_string_element
		dd 551012Bh
		db 3
		dd offset asc_1BC5	; "\n"
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aMsimmessage_0 ; "<MsimMessage: \n"
		db 2Bh
		dd 5047402h
		db 3
		dd offset aMsimmessage	; "\n/MsimMessage>"
		align 2
		db 29h
		dd offset unk_24F
		dd offset off_5525
		align 4
aMsim_msg_debug	db '=msim_msg_debug_string_element',0
		db 1
		db 35h,	2 dup(1)
		dd offset _msim_msg_debug_string_element
		dd offset _msim_escape
		dd offset off_8ACA
		db 1
		dd offset aTm_isdst+6	; "dst"
		db 3Eh
		dd offset aData		; "data"
		db 1, 35h, 1
		dd offset loc_368+1
		dd 3E009102h
		dd offset aUser_data	; "user_data"
		dd 69013501h, 2000003h
		db 91h,	4, 32h
		dd offset aElem		; "elem"
		db 1
		dd 22920137h
		db 2 dup(0)
		dd offset off_8B64
		db 32h
		dd offset aString	; "string"
		db 1
		dd 3C40138h
		db 2 dup(0)
		dd offset off_8BB1
		dw 6728h
		dd 39010073h, 4D801h
		db 0
		dd offset off_8C29
aBinary		db '(binary',0
		db 1, 3Ah, 1
		dd offset loc_3C3+1
		dd offset off_8C52
		db 32h
		dd offset aItems	; "items"
		db 1, 3Bh, 1
		dd offset off_22C4+83h
		dd offset off_8C70
		dd 1007328h, 3C4013Dh
		db 2 dup(0)
		dd offset off_8C9A
		dw 6728h
		dd 3E01006Ch, 41B01h
		db 0
		dd offset off_8CF1
		db 28h,	69h, 0
		dd 53013F01h
		db 3, 2	dup(0)
		dd offset off_8D04
		db 2Ah
		dd offset loc_293
		dd offset off_5653
		dd offset a_file+2	; "file"
		dd 74022Bh
		db 5, 3
		dd offset aSUnknownTypeD ; "%s(unknown type %d"
		dw 2A00h
		dd offset loc_2DD
		dd offset off_5653
		dd offset byte_2947
		dd 74022Bh
		db 5, 3
		dd offset aSRawS	; "%s(raw): %s"
		dw 2900h
		dd offset loc_2F4
		dd offset aM_msg_new_v	; "m_msg_new_v"
		db 2Ah
		dd offset loc_313
		dd offset off_5653
		dd offset byte_296D+2
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aSBinaryDBytesS ; "%s(binary,	%d bytes): %s"
		db 2Bh
		dd 20C7402h, 2A000075h
		dd offset loc_31F
		dd offset byte_55E9
		dd offset unk_2984
		dd 74022Bh, 7502h
		db 29h
		dd offset loc_338
		dd offset off_2190+108h
		db 2Ah
		dd offset loc_358
		dd offset off_5653
		dd offset off_29A9+3
		dw 22Bh
		dd 3050074h
		dd offset aSDictS	; "%s(dict): %s"
		dd 874022Bh, 7702h
		db 2Ah
		dd offset loc_364
		dd offset byte_55E9
		dd offset byte_29C1
		db 2Bh,	2, 74h
		dd 770200h
		db 0, 2Ah
		dd offset loc_396
		dd offset off_5653
		dd offset aVa_list+4	; "ist"
		dw 22Bh
		dd 3050074h
		dd offset aSBooleanS	; "%s(boolean):	%s"
		db 0, 2Ah
		dd offset loc_3B5
		dd offset off_5653
		dd offset aLongUnsignedIn+0Ch ;	"ed int"
		dw 22Bh
		dd 3050074h
		dd offset aSIntegerD	; "%s(integer):	%d"
		db 0, 2Ah
		dd offset loc_3C8
		dd offset byte_56A6
		dd offset aOuble+1	; "uble"
		dw 22Bh
		dd 3050074h
		dd offset byte_1C7F
		db 0, 2Ah
		dd offset loc_3E0
		dd offset off_56C6+1
		dd offset aTm_sec	; "\atm_sec"
		dw 22Bh
		dd 75020074h, 74022B00h
		db 4, 5, 3
		dd offset aSList	; "%s(list): \n"
		align 4
		db 2Ah
		dd offset loc_406
		dd offset off_56C6+1
		dd offset aM_hour+2	; "hour"
		db 2Bh,	2, 74h
		dd 750200h, 474022Bh
		db 5, 3
		dd offset aD_S		; " %d.	%s\n"
		dw 22Bh
		dd 77020874h
		db 2 dup(0), 2Ah
		dd offset loc_41E
		dd offset byte_56F4
		dd offset byte_2A69
		db 2Bh
		dd 2007402h, 22B0075h, 30010474h
		db 0, 2Ah
		dd offset loc_441
		dd offset off_5653
		dd offset aTm_year+1	; "m_year"
		dw 22Bh
		dd 3050074h
		dd offset aSStringS	; "%s(string): %s"
		db 0, 2Ah
		dd offset loc_46C
		dd offset byte_54E1
		dd offset aTm_wday+8	; ""
		dw 22Bh
		dd 3050074h
		dd offset aNull		; "(NULL)"
		db 0, 2Ah
		dd offset loc_486
		dd offset byte_54E1
		dd offset unk_2AB1
		dw 22Bh
		dd 3050074h
		dd offset aNullCouldnTMsi ; "(NULL, couldn't msim_msg_dump_to_str)"
		db 0, 29h
		dd offset _msim_escape
		dd offset off_5525
		dw 3F00h
aG_string_appen	db 'g_string_append_c_inline',0
		db 2, 90h, 1
		dd offset loc_4D8
dword_52E0	dd 2AFA03h, 73674000h, 6E697274h, 90020067h, 4D8h, 2006340h
		dd 31C91h, 1410000h, 6D69736Dh,	6373655Fh, 657061h, 0C4012F01h
		db 3, 2	dup(0)
		dd offset _msim_escape
		dd offset unk_57F
		dd offset off_8D23
		db 1
		dd offset dword_2BF8+2Ah
aMsg		db '-msg',0
		db 1, 2Fh, 0B9h
		db 3, 2	dup(0)
		dd offset off_8DBD
		db 2Fh
		dd 1007367h, 4D831h
		db 0
		dd offset off_8DD1
		db 2Fh,	69h, 0
		dd 3533201h
		db 2 dup(0)
		dd offset off_8DFA
		dw 6A2Fh
		dd 53320100h
		db 3, 2	dup(0)
		dd offset off_8E0E
aMsg_len	db '/msg_len',0
		dd 3533301h
		db 2 dup(0)
		dd offset off_8E38
		db 37h
		dd offset off_B02C
		dd offset dword_2B0C+0D9h
		db 42h
		dd offset aReplacement	; "replacement"
		dd 2C223901h
		db 2 dup(0)
		dd offset off_8E58
aReplace	db '/replace',0
		db 1
		dd 3C43Ah
		db 0
		dd offset off_8E86
		db 43h,	0BBh, 2Ah
		db 2 dup(0)
		dd offset loc_50D
		dd offset off_B044
		dw 4A01h
		dd offset dword_2B0C+0C7h
		dd 2AF034h
		db 0
		dd offset off_8EB1
		db 34h,	0E1h, 2Ah
		db 2 dup(0)
		dd offset off_8ECF
		db 38h
		dd offset loc_578
		dd offset byte_571B
		db 2Bh
		dd 2007402h, 22B0073h, 9020474h, 380000FFh
		dd offset loc_560
		dd offset off_574B
		dd 74022Bh, 7302h
		db 0, 2Ah
		dd offset loc_4BE
		dd offset byte_56A6
		dd offset dword_2BF8+5
		dw 22Bh
		dd 3050074h
		dd offset byte_1C7F
		db 0, 2Ah
		dd offset loc_53D
		dd offset byte_56F4
		dd offset dword_2BF8+20h
		dw 22Bh
		dd 73020074h, 74022B00h, 300104h
		db 29h
		dd offset unk_57F
		dd offset off_5525
		align 2
		dw 402h
		dd offset off_2190+3Ah
		dd 736D0141h, 755F6D69h, 6373656Eh, 657061h, 0C4015B01h
		db 3, 2	dup(0)
		dd offset _msim_unescape
		dd offset unk_6A5
		dd offset off_8EED
		db 1
		dd offset a_log_level_cri+0Dh ;	"ITICAL"
aMsg_0		db '-msg',0
		db 1, 5Bh, 0B9h
		db 3, 2	dup(0)
		dd offset off_8F87
		db 2Fh
		dd 1007367h, 4D85Dh
		db 0
		dd offset off_8F9B
		db 2Fh,	69h, 0
		dd 3535E01h
		db 2 dup(0)
off_547A	dd offset off_8FB9	; DATA XREF: .debug_info:00007C74o
		dw 6A2Fh
		dd 535E0100h
		db 3, 2	dup(0)
		dd offset off_8FD9
aMsg_len_0	db '/msg_len',0
		dd 3535F01h
		db 2 dup(0)
		dd offset off_900F
		db 37h
off_549F	dd offset off_B05C	; DATA XREF: .debug_info:00007CB8o
		align 4
		dd 4200002Dh
		dd offset aReplacement	; "replacement"
dword_54AC	dd 2C226501h		; DATA XREF: .debug_info:00007CAAo
		db 2 dup(0)
		dd offset off_903B
aReplace_0	db '/replace',0
		db 1
		dd 31C66h
		db 0
		dd offset off_9079
		db 44h,	0BBh, 2Ah
		db 2 dup(0)
		dd offset loc_623
		dd offset off_B074
		dw 7501h
		dd 2AF034h
		db 0
		dd offset off_90A2
byte_54E1	db 34h,	0E1h, 2Ah	; DATA XREF: .debug_info:00004C37o
					; .debug_info:00004FF6o ...
		db 2 dup(0)
		dd offset off_90C0
		db 38h
		dd offset loc_697
		dd offset byte_571B
		db 2Bh
		dd 2007402h, 22B0073h
		db 74h,	4
word_54FE	dw 902h			; DATA XREF: .debug_info:00004C40o
					; .debug_info:00005CFAo ...
		dd offset loc_FE+1
		db 2Ah
		dd offset loc_5A2
		dd offset byte_56A6
		dd offset aG_log_flag_fat+10h ;	""
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset byte_1C7F
		align 4
		db 2Ah
		dd offset loc_65C
		dd offset byte_56F4
off_5525	dd offset a_log_level_cri+3 ; DATA XREF: .debug_info:00004C55o
					; .debug_info:off_4E58o ...
					; "G_LEVEL_CRITICAL"
		db 2Bh,	2, 74h
		dd 730200h, 474022Bh, 29003001h
off_5538	dd offset unk_6A5	; DATA XREF: .debug_info:00004D74o
		dd offset off_5525
		db    0
aMsim_msg_eleme	db '$msim_msg_element_new',0
		db 1
		dd 920101B4h
		db 22h
byte_555D	db 2 dup(0), 1		; DATA XREF: .debug_info:00004D89o
					; .debug_info:off_5653o ...
		dd offset dword_2D98+5
		db 1Eh
		dd offset aName		; "name"
		db 1, 0B4h, 1
		dd offset loc_3B5+4
		db 1Eh
		dd offset aType		; "type"
		db 1, 0B4h, 1
		db 7Ch,	1Fh, 0
byte_557B	db 0			; DATA XREF: .debug_info:00004DA2o
					; .debug_info:00005B2Ao ...
		db 1Eh
		dd offset aData		; "data"
		db 1, 0B4h, 1
		dd offset loc_368+1
		db 1Eh
		dd offset aDynamic_name	; "dynamic_name"
		db 1, 0B4h, 1
		dd offset loc_333+2
		db 22h
		dd offset aElem		; "elem"
		db 1, 0B6h, 1
		dd offset off_2190+102h
		dd 6D014500h
aSim_msg_append	db 'sim_msg_append',0   ; DATA XREF: .debug_info:00004DC5o
					; .debug_info:00007D94o
		db 1
		dd 1B0101DFh
		db 4, 2	dup(0)
		dd offset _msim_msg_append
		dd offset unk_70B
		dd offset off_90DE
		db 1
off_55C8	dd offset aEz+2		; DATA XREF: .debug_info:00004DDAo
					; .debug_info:000065CDo ...
					; "z"
aFmsg		db 'Fmsg',0
		db 1, 0DFh, 1
		dd offset loc_419+2
		dd 3E009102h
		dd offset aName		; "name"
		dd 0B901DF01h, 2000003h
		db 91h
byte_55E9	db 4, 3Eh		; DATA XREF: .debug_info:00004DFDo
					; .debug_info:00004E12o ...
		dd offset aType		; "type"
		db 1
		dd 1F7C01E0h, 91020000h
		db 8, 3Eh
		dd offset aData		; "data"
		dw 0E001h
dword_5600	dd 36901h, 0C910200h, 2D3D39h ;	DATA XREF: .debug_info:00004E30o
					; .debug_info:00004F08o ...
		db 0
		dd offset loc_6CB
		dd offset loc_6E6
		db 1, 0E2h, 1
		dd offset unk_2E5C
		dd 2D8447h, 78340000h
		db 2Dh,	2 dup(0)
		dd offset off_9178
		db 48h
		dd offset aG_log_level_me+10h ;	"AGE"
		db 2, 91h, 8
byte_5633	db 34h			; DATA XREF: .debug_info:00004EF3o
		dd offset aG_log_level_me+4 ; "G_LEVEL_MESSAGE"
		dd offset off_91A2
		db 3Ah
		dd offset loc_6CB
		dd offset loc_6E6
		db 35h,	90h, 2Dh
		db 2 dup(0)
		dd offset off_91CC
		db 38h
		dd offset loc_6D7
off_5653	dd offset byte_555D	; DATA XREF: .debug_info:00005120o
					; .debug_info:00005138o ...
		db 2Bh
		dd 1007402h, 40h
		db 49h
		dd offset loc_706
		db 1, 0FEh, 54h
		db 2 dup(0), 29h
		dd offset unk_70B
		dd offset off_5525
		align 4
		dd 69736D2Ch
aM_msg_new_v	db 'm_msg_new_v',0      ; DATA XREF: .debug_info:00005150o
					; .debug_info:00006449o ...
		dd 1B018A01h
		db 4, 2	dup(0)
		dd offset _msim_msg_new_v
		dd offset _msim_msg_new
		dd offset off_91EA
		db 1
		dd offset byte_3105+2
		db 4Ah
		dd offset aFirst_key	; "first_key"
		db 1, 8Ah, 0C4h
		db 3, 0
byte_56A6	db 0			; DATA XREF: .debug_info:000051FAo
					; .debug_info:000053EEo ...
		dd offset off_926C
aArgp		db '-argp',0
		db 1, 8Ah, 0D0h
		db 1, 2	dup(0)
		dd offset off_9298
aKey		db '/key',0
		dd 3C48C01h
		db 2 dup(0)
off_56C6	dd offset off_9353	; DATA XREF: .debug_info:00005212o
					; .debug_info:00005231o ...
aValue		db '/value',0
		db 1, 8Ch, 0C4h
		db 3, 2	dup(0)
		dd offset off_937C
		db 42h
		dd offset aType		; "type"
		dd 1F7C8D01h
		db 2 dup(0)
		dd offset off_939A
aMsg_1		db '/msg',0
		db 1
		dd 41B8Eh
byte_56F4	db 0			; DATA XREF: .debug_info:00005257o
					; .debug_info:00005406o ...
		dd offset off_9410
aFirst		db '/first',0
dword_5700	dd 3358F01h		; DATA XREF: .debug_loc:00009994o
		db 2 dup(0)
		dd offset off_9491
		dw 672Fh
		dd 91010073h, 4D8h
		dd offset off_94CC
		db 2Fh,	67h, 6Ch
byte_571B	db 0			; DATA XREF: .debug_info:000053C3o
					; .debug_info:000054EFo ...
		dd 41B9201h
		db 2 dup(0)
		dd offset off_94EA
aDict		db '/dict',0
		dd 41B9301h
		db 2 dup(0)
		dd offset off_9508
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset byte_3115+2
		db 1
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		db 31h
		dd offset loc_776
off_574B	dd offset loc_77E	; DATA XREF: .debug_info:000053DCo
					; .debug_info:000063EDo
		dd offset byte_2F5D+2
		db 42h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dd 173B301h
		db 2 dup(0)
		dd offset off_9526
		dw 3100h
		dd offset loc_7BA
		dd offset loc_7C2
		dd offset aDUi_data+3	; "ui_data"
		db 42h
off_5771	dd offset a_g_boolean_var ; DATA XREF: .debug_info:000057BFo
					; .debug_info:00005D0Co ...
					; "_g_boolean_var_"
		db 1, 0C4h, 73h
		db 1, 2	dup(0)
		dd offset off_9546
		align 10h
		db 31h
		dd offset loc_80E
		dd offset loc_816
		dd offset aHRegistration_+0Dh ;	"n_cb"
		db 42h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 0CC01h
		dd offset unk_173
		dd offset off_9566
byte_579C	db 0, 31h		; DATA XREF: .debug_info:00007F90o
		dd offset loc_83E
		dd offset loc_846
		dd offset aLRegistration_+11h ;	"b_user_data"
		db 42h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 173BBh
		db 0
		dd offset off_9586
		align 2
		db 2Ah
		dd offset loc_747
		dd offset off_5771+3
		dd offset unk_2FD8
		db 2Bh
		dd 5007402h
		db 3
off_57CD	dd offset aMsim		; DATA XREF: .debug_info:00005D2Eo
					; .debug_info:00006700o
					; "msim"
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aMsim_sendUnkno ; "msim_send:	unknown	type %d\n"
		align 4
		db 2Ah
		dd offset loc_796
		dd offset dword_2D98+5
		dd offset aRpleaccountreg+10h ;	"trationCb"
		db 2Bh,	2, 74h
dword_57EC	dd 760204h, 874022Bh, 730802h ;	DATA XREF: .debug_info:00005DA7o
		db 2Ah
		dd offset loc_7DA
		dd offset dword_2D98+5
		dd offset unk_3010
		db 2Bh,	2, 74h
		dd 760204h, 874022Bh, 6C0802h
		db 2Ah
		dd offset loc_7FE
off_5819	dd offset dword_2D98+5	; DATA XREF: .debug_info:00005EBCo
		dd offset aPurpleconnecti+4 ; "leConnection"
		db 2Bh,	2, 74h
		dd 760204h
		db 0, 2Ah
		dd offset loc_82E
		dd offset dword_2D98+5
		dd offset a_purpleconnect+8 ; "onnection"
word_5836	dw 22Bh			; DATA XREF: .debug_info:00006185o
					; .debug_info:00008030o
		dd 76020474h, 74022B00h, 64080208h
		db 0, 2Ah
		dd offset loc_85E
		dd offset dword_2D98+5
		dd offset dword_304C+11h
		dw 22Bh
dword_5854	dd 76020474h, 74022B00h, 62080208h ; DATA XREF:	.debug_info:00006B69o
					; .debug_info:00007027o ...
		db 0, 2Ah
		dd offset loc_884
		dd offset dword_5600
		dd offset off_3082+3
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		dw 22Bh
		dd 3050874h
off_5884	dd offset aValueNull	; DATA XREF: .debug_info:00006B8Eo
					; .debug_info:00007045o ...
					; "value != NULL"
		db 0, 2Ah
		dd offset loc_8A8
		dd offset dword_5600
		dd offset aBuddy_chats	; "buddy_chats"
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		dw 22Bh
		dd 3050874h
		dd offset aGlNull	; "gl != NULL"
		db 0, 2Ah
		dd offset loc_8CC
		dd offset dword_5600
off_58BA	dd offset unk_30D5	; DATA XREF: .debug_info:000077B9o
					; .debug_info:000080B5o
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		dw 22Bh
		dd 3050874h
		dd offset aDictNull	; "dict	!= NULL"
		db 0, 2Ah
off_58DA	dd offset loc_8F0	; DATA XREF: .debug_info:000077C2o
		dd offset dword_5600
		dd offset byte_30FD
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44519 ; "msim_msg_new_v"
		dw 22Bh
		dd 3050874h
		dd offset aGsNull	; "gs != NULL"
		db 0, 29h
off_5902	dd offset _msim_msg_new	; DATA XREF: .debug_info:off_2804o
		dd offset off_5525
		dw 1200h
		dd offset loc_7D+3
		dd offset byte_3115+2
		dd 1F413h, 0C000E00h, 3107h, 736D0141h,	6D5F6D69h, 6E5F6773h
		dd 1007765h, 41B01E3h
		db 2 dup(0)
		dd offset _msim_msg_new
		dd offset unk_935
		dd offset off_95A6
		dw 9601h
		dd 4B000031h
		dd offset aFirst_key	; "first_key"
		dd 3C4E301h, 91020000h,	722F4C00h, 1007465h, 41BE5h
		db 0
		dd offset off_95DE
aArgp_0		db '/argp',0
		db 1
		dd 1D0E6h
		db 0
		dd offset off_9614
		db 2Ah
		dd offset loc_91C
		dd offset aEz+2		; "z"
		dd offset aPurple_connect+14h ;	"_BGCOLOR"
		dw 12Bh
		dd 910350h, 52012B06h, 49102h
		db 29h
		dd offset unk_935
		dd offset off_5525
		align 2
		dw 145h
aMsim_msg_inser	db 'msim_msg_insert_before',0
		db 1
		dd 1B0101FAh
		db 4, 2	dup(0)
		dd offset _msim_msg_insert_before
		dd offset _msim_msg_clone
		dd offset off_9641
		db 1
		dd offset aPurple_conne_7+20h ;	"ESSAGES"
aFmsg_0		db 'Fmsg',0
		db 1, 0FAh, 1
		dd offset loc_419+2
		dd 46009102h, 656D616Eh, 6665625Fh, 65726Fh, 0B901FA01h
		dd 2000003h
		db 91h,	4, 3Eh
		dd offset aName		; "name"
		db 1
		dd 3B901FBh, 91020000h
		db 8, 3Eh
		dd offset aType		; "type"
		dw 0FB01h
		dd 1F7C01h, 0C910200h
		db 3Eh
		dd offset aData		; "data"
		db 1, 0FBh, 1
		dd offset loc_368+1
		dd 1F109102h, 5F77656Eh, 6D656C65h, 1FD0100h, 2292h, 646F6E28h
		dd 65625F65h, 65726F66h, 1FE0100h, 41Bh
		dd offset off_96DB
		dd 2D3D39h
		db 0
		dd offset loc_963
		dd offset loc_988
		db 1, 0, 2
		dd offset aPurple_conne_6+1Bh ;	"OODS"
		dd 2D8447h, 78340000h
		db 2Dh,	2 dup(0)
		dd offset off_96F9
		db 48h
		dd offset aG_log_level_me+10h ;	"AGE"
		dd 344C9102h, 2D60h
		dd offset off_9723
		db 3Ah
		dd offset loc_963
		dd offset loc_988
		db 35h,	90h, 2Dh
		db 2 dup(0)
		dd offset off_9742
		db 38h
		dd offset loc_973
		dd offset byte_555D
		db 2Bh
		dd 1007402h, 40h
		db 2Ah
		dd offset loc_993
		dd offset off_2190+79h
		dd offset aPurple_conne_7+0Ch ;	"CTION_SUPPORT_MOOD_MESSAGES"
		db 2Bh,	1, 50h
		dd offset off_7601+1
		db 49h
		dd offset loc_9B7
		db 1, 9Ch, 57h
		db 2 dup(0), 29h
		dd offset _msim_msg_clone
		dd offset off_5525
		align 4
		dd 736D0145h, 6D5F6D69h, 635F6773h, 656E6F6Ch, 2590100h
		dd 41B01h
		db 0
		dd offset _msim_msg_clone
		dd offset unk_A19
		dd offset off_9777
		db 1, 51h, 33h
		dd 6F460000h, 100646Ch,	41B0259h, 91020000h, 656E2800h
		dd 5B010077h, 41B02h
		db 0
		dd offset off_97C7
		db 2Ah
		dd offset loc_9DF
		dd offset unk_311C
		dd offset aRple_connectin+1 ; "PLE_CONNECTING"
		dw 22Bh
		dd 30010074h
		db 0, 2Ah
		dd offset loc_9FB
		dd offset byte_557B
		dd offset aUrpleconnectio+13h ;	"e"
		dw 22Bh
		dd 73020074h, 74022B00h
		db 4, 5, 3
		dd offset _msim_msg_clone_element
		db 2Bh
		dd 2087402h, 29006891h
		dd offset unk_A19
		dd offset off_5525
		db    0
aMsim_msg_appen	db '$msim_msg_append_dynamic_name',0
		db 1
		dd 1B0101EBh, 1000004h,	33ADh, 67736D1Dh, 1EB0100h, 41Bh
		db 1Eh
		dd offset aName		; "name"
		db 1, 0EBh, 1
		dd offset loc_3C3+1
		db 1Eh
		dd offset aType		; "type"
		db 1, 0ECh, 1
		dd offset off_1EC4+0B8h
		db 1Eh
		dd offset aData		; "data"
		db 1, 0ECh, 1
		dd offset loc_368+1
		db    0
aMsim_msg_clo_0	db '=msim_msg_clone_element',0
		db 1, 20h, 2
		db 1
		dd offset _msim_msg_clone_element
		dd offset unk_B87
		dd offset off_97F2
		db 1, 0B1h, 35h
		db 2 dup(0), 3Eh
		dd offset aData		; "data"
		db 1
		dd 3690220h, 91020000h
		db 0, 3Eh
		dd offset aUser_data	; "user_data"
		dw 2001h
		dd 36902h, 4910200h
		db 32h
		dd offset aElem		; "elem"
		db 1, 22h, 2
		dd offset off_2190+102h
		dd offset off_988C
aNew		db '(new',0
		db 1, 23h, 2
		dd offset dword_3558+59h
		dd offset off_98D9
aNew_data	db '(new_data',0
		dw 2401h
		dd 36902h
		db 0
		dd offset off_9903
		db 28h,	67h, 73h
		dd 2260100h, 4D8h
		dd offset off_9958
aDict_0		db '(dict',0
		dw 2701h
		dd 41B02h
		db 0
		dd offset off_9977
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset dword_3558+6Fh
		dw 501h
		db 3
		dd offset ___PRETTY_FUNCTION___44650 ; "msim_msg_clone_element"
		db 39h,	51h, 33h
		db 2 dup(0)
		dd offset loc_B0D
		dd offset loc_B3B
		dw 4E01h
		dd 350302h, 33A03400h
		db 2 dup(0)
		dd offset off_998B
		dw 9434h
		db 33h,	2 dup(0)
		dd offset off_999E
		db 34h
		dd offset unk_3388
		dd offset off_99B2
		dd 337C34h
		db 0
		dd offset off_99D0
		db 39h,	3Dh, 2Dh
		db 2 dup(0)
		dd offset loc_B0D
		dd offset loc_B2F
		dw 0EE01h
		dd 34F101h, 2D843400h
		db 2 dup(0)
		dd offset off_99E3
		dw 7834h
		db 2Dh,	2 dup(0)
		dd offset off_998B
		db 34h
		dd offset aG_log_level_me+10h ;	"AGE"
		dd offset off_999E
		dd 2D6034h
		db 0
		dd offset off_99B2
		db 3Ah
		dd offset loc_B0D
		dd offset loc_B2F
		dw 9035h
		db 2Dh,	2 dup(0)
		dd offset off_99F7
		db 38h
		dd offset loc_B19
		dd offset byte_555D
		dd 74022Bh, 4001h
		db 0, 38h
		dd offset loc_B3B
		dd offset word_54FE
		dw 22Bh
		dd 73020074h, 2A000000h
		dd offset loc_A59
		dd offset off_5771+3
		dd offset dword_34E8+3Dh
		dd 74022Bh
		db 5, 3
		dd offset aMsim		; "msim"
		dw 22Bh
		dd 3050474h
		dd offset aMsim_msg_clone ; "msim_msg_clone_element: unknown type %d"...
		db 0, 2Ah
		dd offset loc_A8D
		dd offset off_57CD+2
		dd offset dword_3558+0Dh
		dw 22Bh
		dd 30010074h, 474022Bh,	22B3801h, 3050874h
		dd offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		dd 0C74022Bh
		db 5, 3
		dd offset aMessage_c	; "message.c"
		dw 22Bh
		dd 0A031074h, 22B0248h,	3051474h
		dd offset ___PRETTY_FUNCTION___44650 ; "msim_msg_clone_element"
		db 0, 29h
		dd offset loc_AB8
		dd offset off_22C4+118h
		db 2Ah
		dd offset loc_ADF
		dd offset dword_2D98+5
		dd offset dword_3558+2Bh
		db 2Bh
		dd 20C7402h, 29000077h
		dd offset loc_AEF
		dd offset byte_54E1
		db 29h
		dd offset loc_B09
		dd offset byte_54E1
		db 29h
		dd offset loc_B4F
		dd offset aPurple_conne_7+20h ;	"ESSAGES"
		db 29h
		dd offset loc_B78
		dd offset dword_57EC+4
		db 29h
		dd offset unk_B87
		dd offset off_5525
		db    0
		db 2, 4, 1Bh
		db    4
		db 2 dup(0), 12h
		dd offset loc_7D+3
		dd offset dword_3558+6Fh
		db  13h
		dd offset loc_1F0+4
		db 16h,	0, 0Ch
		dd offset dword_3558+5Fh
		db  4Dh	; M
		db 1, 6Dh, 73h
aIm_msg_list_fr	db 'im_msg_list_free',0
		db 1, 98h, 2
		db 1
		dd offset _msim_msg_list_free
		dd offset unk_BE9
		dd offset off_9A0A
		db 1, 59h, 36h
		dd 6C270000h, 2980100h,	41Bh
		dd offset off_9A72
		db 31h
		dd offset loc_BA0
		dd offset loc_BBF
		dd offset dword_3640+5
		db 32h
		dd offset aElem		; "elem"
		dw 9C01h
		dd 229202h
		db 0
		dd offset off_9A9C
		db 29h
		dd offset loc_BAC
		dd offset byte_55E9
		db 29h
		dd offset loc_BB7
		dd offset byte_55E9
		db 38h
		dd offset loc_BBF
		dd offset byte_55E9
		dd 74022Bh, 7602h
		db 0, 49h
		dd offset loc_BE4
		dw 1A01h
		dd 29000058h
		dd offset unk_BE9
		dd offset off_5525
		dd 6D014D00h, 5F6D6973h, 5F67736Dh, 65657266h, 2C80100h
		db 1
		dd offset _msim_msg_free
		dd offset unk_C4A
		dd offset off_9AAF
		db 1, 0C6h, 36h
		dd 6D460000h, 1006773h,	41B02C8h, 91020000h
		db 0, 2Ah
		dd offset loc_C1B
		dd offset byte_557B
		dd offset aGet_plugin_pre+9 ; "in_pref_frame"
		dw 22Bh
		dd 73020074h, 74022B00h
		db 4, 5, 3
		dd offset _msim_msg_free_element
		db 2Bh
		dd 1087402h
		db 30h,	0, 49h
		dd offset loc_C34
		db 1
		dd offset off_5819+1
		db 29h
		dd offset unk_C4A
		dd offset off_5525
		align 2
		dw 14Dh
aMsim_msg_fre_0	db 'msim_msg_free_element_data',0
		db 1
		db 71h,	2, 1
		dd offset _msim_msg_free_element_data
		dd offset _msim_msg_free_element
		dd offset off_9B23
		db 1
		dd offset aPurplepluginpr+5 ; "ePluginPrefFrame"
		db 3Eh
		dd offset aElem		; "elem"
		db 1, 71h, 2
		dd offset off_2190+102h
		dd 2A009102h
		dd offset loc_C82	; jumptable 00000C94 cases 57,60
		dd offset off_5771+3
		dd offset aRplepluginprio+1 ; "plePluginPriority"
		dd 74022Bh
		db 5, 3
		dd offset aMsim		; "msim"
		dw 22Bh
		dd 3050474h
		dd offset aMsim_msg_free_ ; "msim_msg_free_element_data: not freeing"...
		db 0, 49h
		dd offset unk_CB7
		dw 1A01h
		dd 49000058h
		dd offset unk_CD3
		dd 55E901h
		db 0, 2Ah
		dd offset loc_CE7
		dd offset byte_56F4
		dd offset aRplepluginpref+0Dh ;	"fFrame"
		dw 22Bh
		dd 31010474h
		db 0, 49h
		dd offset loc_D07
		dw 5901h
		dd 29000036h
		dd offset _msim_msg_free_element
		dd offset off_5525
		db    0
aMsim_msg_fre_1	db '=msim_msg_free_element',0
		dd 102B301h
		dd offset _msim_msg_free_element
		dd offset unk_D56
		dd offset off_9BA3
		dd 37F101h
		db 0, 3Eh
		dd offset aData		; "data"
		dw 0B301h
		dd 36902h, 910200h
		db 3Eh
		dd offset aUser_data	; "user_data"
		db 1, 0B3h, 2
		dd offset loc_368+1
		dd 32049102h
		dd offset aElem		; "elem"
		dd 9202B501h
		db 22h,	2 dup(0)
		dd offset off_9BF3
		db 2Ah
		dd offset loc_D27
		dd offset dword_36C0+6
		dd offset aPurple_plugi_2+0Ch ;	"N_PROTOCOL"
		dd 74022Bh, 7302h
		db 29h
		dd offset loc_D38
		dd offset byte_55E9
		db 49h
		dd offset loc_D51
		dw 0E901h
		dd 29000055h
		dd offset unk_D56
		dd offset off_5525
		dd 6D014500h, 5F6D6973h, 5F67736Dh, 6B636170h, 3460100h
		dd 3C401h
		db 0
		dd offset _msim_msg_pack
		dd offset unk_DC5
		dd offset off_9C1D
		db 1, 0C4h, 38h
		dd 6D460000h, 1006773h,	41B0346h, 91020000h
		db 0, 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aPurpleconversa+7 ; "onversationUiOps"
		dw 501h
		db 3
		dd offset ___PRETTY_FUNCTION___44727 ; "msim_msg_pack"
		db 31h
		dd offset loc_D6B
		dd offset loc_D6F
		dd offset off_3854+3
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 1730348h
		db 2 dup(0)
		dd offset off_9C55
		dw 2A00h
		dd offset loc_D8D
		dd offset off_23E4+72h
		dd offset byte_3891+1
		dd 350012Bh, 2B060091h,	3055201h
		dd offset _msim_msg_pack_element
		dd 551012Bh
		db 3
		dd offset byte_2138
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset byte_2138
		db 2Bh
		dd 5047402h
		db 3
		dd offset aFinal	; "\\final\\"
		align 2
		db 2Ah
		dd offset loc_DBC
		align 4
		dd 0BA000056h, 2B000038h, 1007402h, 74022B30h
		db 4, 5, 3
		dd offset ___PRETTY_FUNCTION___44727 ; "msim_msg_pack"
		db 2Bh
		dd 5087402h
		db 3
		dd offset aMsgNull	; "msg != NULL"
		align 2
		db 29h
		dd offset unk_DC5
		dd offset off_5525
		align 4
		dd 5D20Ch, 6D014500h, 5F6D6973h, 5F67736Dh, 646E6573h
		dd 35E0100h, 33501h
		db 0
		dd offset _msim_msg_send
		dd offset unk_E41
		dd offset off_9C75
		db 1, 0DFh, 39h
		dd 73460000h, 69737365h, 1006E6Fh, 21B9035Eh, 91020000h
		dd 736D4600h, 5E010067h, 41B03h, 4910200h, 77617228h, 3600100h
		dd 3C4h
		dd offset off_9CDF
aSuccess	db '(success',0
		db 1, 61h, 3
		dd offset loc_333+2
		dd offset off_9D13
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset word_39DE+1
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___44742 ; "msim_msg_send"
		db 31h
		dd offset loc_DEA
		dd offset loc_DEE
		dd offset aWrite_conv+5	; "e_conv"
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 6401h
		dd 17303h
		db 0
		dd offset off_9D26
		align 2
		db 2Ah
		dd offset loc_DE8
		dd offset aRpleplugintype+0Dh ;	"e"
		dd offset aHat_add_users+4 ; "add_users"
		db 2Bh
		dd 3007402h, 60491h
		db 2Ah
		dd offset loc_DFA
		dd offset word_5836
		dd offset aChat_rename_us+8 ; "ame_user"
		db 2Bh,	2, 74h
		dd 760200h, 474022Bh, 7302h
		db 2Ah
		dd offset loc_E06
		dd offset byte_55E9
		dd offset aHat_remove_use+1 ; "at_remove_users"
		db 2Bh,	2, 74h
		dd 730200h
		db 0, 2Ah
		dd offset loc_E38
		dd offset dword_5600
		dd offset aHat_update_use+0Dh ;	"er"
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44742 ; "msim_msg_send"
		dw 22Bh
		dd 3050874h
		dd offset aRawNull	; "raw != NULL"
		db 0, 29h
		dd offset unk_E41
		dd offset off_5525
		dw 0C00h
		dd offset loc_5D1+1
		db 1Ch
		dd offset aMsim_msg_pac_2 ; "msim_msg_pack_dict"
		db 1, 53h, 3
		dd 3C401h, 3A1F0100h, 6D1D0000h, 1006773h, 41B0353h
		db 2 dup(0), 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aCustom_smile_0+0Eh ;	"ey_write"
		db 1
		dd offset aMsim_msg_pac_2 ; "msim_msg_pack_dict"
		db 21h,	22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 5501h
		db    3
		dd offset unk_173
		db 2 dup(0), 12h
		dd offset loc_7D+3
		dd offset aCustom_smile_0+0Eh ;	"ey_write"
		db  13h
		dd offset loc_1F0+4
		db 12h,	0, 0Ch
		dd offset off_3A1C+3
		db  45h	; E
		db 1, 6Dh, 73h
aIm_msg_pack_el	db 'im_msg_pack_element_data',0
		db 1, 76h, 3
		dd 3C401h
		db 0
		dd offset _msim_msg_pack_element_data
		dd offset _msim_msg_pack_element_dict
		dd offset off_9D46
		db 1, 0B7h, 3Ch
		db 2 dup(0), 3Eh
		dd offset aElem		; "elem"
		db 1
		dd 22920376h, 91020000h, 73672800h, 3780100h, 4D8h
		dd offset off_9E6E
		dd 6C6728h, 1B037901h
		db 4, 2	dup(0)
		dd offset off_9EA3
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_3CB4+3
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___44750 ; "msim_msg_pack_element_data"
		db 31h
		dd offset loc_E58
		dd offset loc_E60
		dd offset off_3AC5
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 7Bh, 3
		dd offset unk_173
		dd offset off_9EB6
		db 0, 31h
		dd offset loc_EB4	; jumptable 00000EAC case 70
		dd offset loc_EBF
		dd offset dword_3AE0+3
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 1730387h
		db 2 dup(0)
		dd offset off_9EEE
		dw 4E00h
		dd offset aPresent+4	; "esent"
		dd offset loc_F8F
		dd offset off_B08C
		dd 81039601h, 3400003Bh, 39F6h
		dd offset off_9F0E
		db 4Fh
		dd offset off_B0A4
		db 36h,	2, 3Ah
		dd 3050000h
		dd offset ___PRETTY_FUNCTION___44733 ; "msim_msg_pack_dict"
		db 31h
		dd offset loc_F8F
		dd offset loc_F97
		dd offset dword_3B10+17h
		db 35h,	11h, 3Ah
		db 2 dup(0)
		dd offset off_9F2C
		dw 2A00h
		dd offset loc_FB5
		dd offset off_23E4+72h
		dd offset dword_3B10+4Bh
		dd 552012Bh
		db 3
		dd offset _msim_msg_pack_element_dict
		db 2Bh,	1, 51h
		db 5, 3
		dd offset byte_218B
		dw 22Bh
		dd 3050074h
		dd offset byte_1C7F
		dd 474022Bh
		db 5, 3
		dd offset byte_1C7F
		dw 3800h
		dd offset loc_1048
		dd offset dword_5600
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44733 ; "msim_msg_pack_dict"
		dd 874022Bh
		db 5, 3
		dd offset aMsgNull	; "msg != NULL"
		align 4
		db 0, 2Ah
		dd offset loc_E91
		dd offset off_5771+3
		dd offset aMessage_histor+6 ; "e_history"
		dw 22Bh
		dd 3050074h
		dd offset aMsim		; "msim"
		dd 474022Bh
		db 5, 3
		dd offset aFieldSUnknownT ; "field %s, unknown type %d\n"
		dw 4900h
		dd offset unk_EDD
		dd 2AFA01h
		db 0, 2Ah
		dd offset loc_EEC
		dd offset byte_56A6
		dd offset aPurpleconvim+0Ch ; ""
		dw 22Bh
		dd 3050074h
		dd offset byte_1C7F
		db 0, 2Ah
		dd offset loc_F0E
		dd offset off_56C6+1
		dd offset unk_3BE4
		dw 22Bh
		dd 76020074h, 74022B00h
		db 4, 5, 3
		dd offset aS		; "%s"
		align 4
		db 2Ah
		dd offset loc_F25
		dd offset off_574B
		dd offset byte_3C01+2
		db 2Bh,	2, 74h
		dd 760200h, 474022Bh
		db 5, 3
		dd offset asc_215B	; "|"
		dw 2A00h
		dd offset loc_F3C
		dd offset byte_56F4
		dd offset off_3C1D+1
		dd 74022Bh, 2B007602h, 1047402h
		db 30h,	0, 2Ah
		dd offset loc_F57
		dd offset off_5653
		dd offset byte_3C35+1
		db 2Bh
		dd 5007402h
		db 3
		dd offset aD		; "%d"
		align 2
		db 49h
		dd offset unk_F89
		db 1
		dd offset byte_54E1
		db 29h
		dd offset loc_FD0
		dd offset aM_msg_new_v	; "m_msg_new_v"
		db 49h
		dd offset unk_FF9
		dw 0E101h
		dd 2A000054h
		dd offset loc_1018
		dd offset dword_5600
		dd offset byte_3C79+2
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44750 ; "msim_msg_pack_element_data"
		dd 874022Bh
		db 5, 3
		dd offset aElemNull	; "elem	!= NULL"
		dw 4900h
		dd offset unk_106E
		dd 54E101h
		db 0, 2Ah
		dd offset loc_108C
		dd offset dword_5600
		dd offset aIn_room+4	; "oom"
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44750 ; "msim_msg_pack_element_data"
		dw 22Bh
		dd 3050874h
		dd offset aElemDataNull	; "elem->data != NULL"
		db 0, 29h
		dd offset _msim_msg_pack_element_dict
		dd offset off_5525
		dw 0C00h
		dd offset off_22C4+89h
		dd 22D433h
		db 0
		dd offset _msim_msg_pack_element_dict
		dd offset unk_1167
		dd offset off_9F4C
		db 1, 2Eh, 3Eh
		dd 0E2480000h, 2000022h, 0EE480091h, 2000022h, 0FA350491h
		db 22h,	2 dup(0)
		dd offset off_9FCC
		db 3Bh
		dd offset off_22C4+42h
		dd 23123Bh, 231E3500h
		db 2 dup(0)
		dd offset off_A019
		dw 2A36h
		dd 5000023h
		db 3
		dd offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		db 4Eh,	0D4h, 22h
		db 2 dup(0)
		dd offset loc_10B8
		dd offset off_B0BC
		dw 1701h
		dd 3E2403h, 22EE3400h
		db 2 dup(0)
		dd offset off_A043
		dw 0E234h
		db 22h,	2 dup(0)
		dd offset off_A061
		db 4Fh
		dd offset off_B0D4
		dd 22FA3Bh, 23063500h
		db 2 dup(0)
		dd offset off_A096
		dw 1235h
		db 23h,	2 dup(0)
		dd offset off_A0B4
		db 3Bh
		dd offset off_22C4+5Ah
		dd 232A36h
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		db 31h
		dd offset loc_10C2
		dd offset loc_10C6
		dd offset aPurple_conv_ty+0Ah ;	"V_TYPE_CHAT"
		dd 233935h
		db 0
		dd offset off_A0F3
		align 2
		db 2Ah
		dd offset loc_10C0
		dd offset aCustom_smile_0+13h ;	"ite"
		dd offset aPurple_conv__0+7 ; "CONV_TYPE_MISC"
		db 2Bh
		dd 2007402h, 2A000073h
		dd offset loc_10D9
		dd offset byte_55E9
		dd offset aPurple_conv__1+4 ; "LE_CONV_TYPE_ANY"
		dd 74022Bh, 7602h
		db 2Ah
		dd offset loc_10F5
		align 2
		dw 56h
		dd 3DC400h, 74022B00h, 2B300100h, 5047402h
		db 3
		dd offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		db 2Bh,	2, 74h
		db 8, 5, 3
		dd offset aFalse	; "FALSE"
		align 4
		db 2Ah
		dd offset loc_112E
		dd offset off_55C8
		dd offset byte_3DE9
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset byte_22AC
		db 2Bh
		dd 2087402h, 22B0076h, 30010C74h
		db 0, 2Ah
		dd offset loc_1138
		dd offset byte_55E9
		dd offset aRple_typed+2	; "LE_TYPED"
		dw 22Bh
		dd 76020074h
		db 2 dup(0), 38h
		dd offset loc_1160
		align 4
		dd 2B000056h, 1007402h,	74022B30h
		db 4, 5, 3
		dd offset ___PRETTY_FUNCTION___44710 ; "msim_msg_pack_element_dict"
		db 2Bh
		dd 5087402h
		db 3
		dd offset aData_stringNul ; "data_string != NULL"
		align 4
		db 29h
		dd offset unk_1167
		dd offset off_5525
		align 2
		dw 6233h
		db 23h,	2 dup(0)
		dd offset _msim_msg_pack_element
		dd offset unk_125D
		dd offset off_A11F
		db 1
		dd offset aUrplemessagefl+1 ; "rpleMessageFlags"
		dd 237048h, 910200h, 237C48h, 4910200h,	238835h
		db 0
		dd offset off_A1A1
		db 3Bh,	94h, 23h
		dd 0A03B0000h, 35000023h, 23ACh
		dd offset off_A205
		dd 23B836h
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___44699 ; "msim_msg_pack_element"
		db 4Eh
		dd offset off_22C4+9Eh
		dd offset loc_1188
		dd offset off_B0EC
		dd 9F02DF01h, 3400003Fh, 237Ch
		dd offset off_A22F
		dd 237034h
		db 0
		dd offset off_A24D
		db 4Fh
		dd offset off_B104
		dw 883Bh
		dd 35000023h, 2394h
		dd offset off_A2A5
		dd 23A035h
		db 0
		dd offset off_A2D9
		db 3Bh,	0ACh, 23h
		dd 0B8360000h, 5000023h
		db 3
		dd offset ___PRETTY_FUNCTION___44699 ; "msim_msg_pack_element"
		db 2Ah
		dd offset loc_1190
		dd offset aCustom_smile_0+13h ;	"ite"
		dd offset aRple_message_w+0Ah ;	"GE_WHISPER"
		dw 22Bh
		dd 73020074h
		db 2 dup(0), 2Ah
		dd offset loc_11A5
		dd offset byte_55E9
		dd offset aPurple_messa_1+7 ; "MESSAGE_ERROR"
		db 2Bh
		dd 2007402h, 2A000077h
		dd offset loc_11D9
		dd offset off_57CD+2
		dd offset byte_3F35+2
		dd 74022Bh, 22B3001h, 38010474h, 874022Bh
		db 5, 3
		dd offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		dw 22Bh
		dd 3050C74h
		dd offset aMessage_c	; "message.c"
		dd 1074022Bh, 3070A03h,	1474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44699 ; "msim_msg_pack_element"
		dw 2A00h
		dd offset loc_120D
		dd offset off_5653
		dd offset word_3F4E+1
		dd 74022Bh
		db 5, 3
		dd offset dword_23E0
		dw 2A00h
		dd offset loc_1232
		dd offset off_55C8
		dd offset aUrple_messag_3+8 ; "SSAGE_NO_LINKIFY"
		dd 474022Bh
		db 5, 3
		dd offset byte_2138
		dw 22Bh
		dd 77020874h, 74022B00h, 30010Ch
		db 2Ah
		dd offset loc_123C
		dd offset byte_55E9
		dd offset aPurple_messa_5 ; "PURPLE_MESSAGE_INVISIBLE"
		db 2Bh,	2, 74h
		dd 770200h
		db 0, 38h
		dd offset loc_1254
		dd offset byte_54E1
		dw 22Bh
		dd 3050074h
		dd offset byte_1C7F
		dd 29000000h
		dd offset unk_125D
		dd offset off_5525
		dd 6D014500h, 5F6D6973h, 646E6573h, 3BC0100h, 33501h
		db 0
		dd offset _msim_send
		dd offset unk_12B2
		dd offset off_A323
		db 1, 6Bh, 40h
		dd 73460000h, 69737365h, 1006E6Fh, 21B903BCh, 91020000h
		dd 73284C00h, 65636375h, 1007373h, 33503BEh
		db 2 dup(0)
		dd offset off_A38D
aMsg_2		db '(msg',0
		db 1
		dd 41B03BFh
		db 2 dup(0)
		dd offset off_A3A0
aArgp_1		db '(argp',0
		dd 0D003C001h
		db 1, 2	dup(0)
		dd offset off_A3C9
		db 2Ah
		dd offset loc_127D
		dd offset aEz+2		; "z"
		dd offset dword_4008+28h
		dd 150012Bh, 52012B30h,	49102h
		db 2Ah
		dd offset loc_128B
		dd offset aPurpleconversa+0Ch ;	"sationUiOps"
		dd offset dword_4008+44h
		db 2Bh,	2, 74h
		dd 760200h, 474022Bh, 7302h
		db 2Ah
		dd offset loc_1297
		dd offset off_3657+2
		dd offset dword_4008+59h
		db 2Bh,	2, 74h
		dd 730200h
		db 0, 29h
		dd offset unk_12B2
		dd offset off_5525
		dw 4D00h
		dd 69736D01h, 736D5F6Dh, 75645F67h, 100706Dh
		db 0D5h, 3, 1
		dd offset _msim_msg_dump
		dd offset unk_135F
		dd offset off_A3F6
		db 1
		dd offset dword_41AC+4
aFfmt_string	db 'Ffmt_string',0
		dd 0B903D501h, 2000003h, 6D460091h, 1006773h, 41B03D5h
		dd 91020000h
		db 4, 32h
		dd offset aDebug_str	; "debug_str"
		dw 0D701h
		dd 3C403h
		db 0
		dd offset off_A48E
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset dword_41AC+4
		dw 501h
		db 3
		dd offset ___PRETTY_FUNCTION___44777 ; "msim_msg_dump"
		db 31h
		dd offset loc_12CD
		dd offset loc_12D1
		dd offset dword_409C+57h
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 17303D9h
		db 2 dup(0)
		dd offset off_A4CE
		dw 3100h
		dd offset loc_12D8
		dd offset loc_12DC
		dd offset dword_409C+75h
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 0DDh, 3
		dd offset unk_173
		dd offset off_A4FA
		db 0, 2Ah
		dd offset loc_12D6
		dd offset off_2190+108h
		dd offset dword_409C+8Ah
		dw 12Bh
		dd 4910350h
		db 6, 0, 2Ah
		dd offset loc_12F0
		dd offset off_5771+3
		dd offset dword_409C+0B0h
		db 2Bh
		dd 5007402h
		db 3
		dd offset aMsim		; "msim"
		db 2Bh,	2, 74h
		dd 760204h, 874022Bh, 7302h
		db 49h
		dd offset unk_130A
		db 1, 0E9h, 55h
		db 2 dup(0), 2Ah
		dd offset loc_1328
		align 10h
		dd 7E000056h, 2B000041h, 1007402h, 74022B30h
		db 4, 5, 3
		dd offset ___PRETTY_FUNCTION___44777 ; "msim_msg_dump"
		db 2Bh
		dd 5087402h
		db 3
		dd offset aFmt_stringNull ; "fmt_string	!= NULL"
		align 2
		db 2Ah
		dd offset loc_1358
		align 4
		dd 0A6000056h, 2B000041h, 1007402h, 74022B30h
		db 4, 5, 3
		dd offset ___PRETTY_FUNCTION___44777 ; "msim_msg_dump"
		db 2Bh
		dd 5087402h
		db 3
		dd offset aDebug_strNull ; "debug_str != NULL"
		align 2
		db 29h
		dd offset unk_135F
		dd offset off_5525
		align 4
		dd 5D20Ch, 6D014500h, 5F6D6973h, 73726170h, 0EC010065h
		dd 41B0103h
		db 2 dup(0)
		dd offset _msim_parse
		dd offset _msim_msg_get
		dd offset off_A51A
		dw 1301h
		dd 46000044h, 776172h, 0B903EC01h, 2000003h, 6D280091h
		dd 1006773h, 41B03EEh
		db 2 dup(0)
		dd offset off_A5B4
aToken		db '(token',0
		db 1, 0EFh, 3
		dd offset loc_3C3+1
		dd offset off_A5DD
aTokens		db '(tokens',0
		dd 0C603F001h
		db 5, 2	dup(0)
		dd offset off_A606
aKey_0		db '(key',0
		dd 0C403F101h
		db 3, 2	dup(0)
		dd offset off_A62F
aValue_0	db '(value',0
		dw 0F201h
		dd 3C403h
		db 0
		dd offset off_A665
		db 28h,	69h, 0
		dd 7303F301h
		db 1, 2	dup(0)
		dd offset off_A678
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset word_4422+1
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___44791 ; "msim_parse"
		db 31h
		dd offset loc_1376
		dd offset loc_137E
		dd offset dword_426C+11h
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 0F5h, 3
		dd offset unk_173
		dd offset off_A6A2
		dd 33513900h
		db 2 dup(0)
		dd offset loc_142C
		dd offset loc_146C
		dw 1401h
		dd 432304h, 33A03400h
		db 2 dup(0)
		dd offset off_A6CE
		dw 9434h
		db 33h,	2 dup(0)
		dd offset off_A6E2
		db 34h
		dd offset unk_3388
		dd offset off_A6F7
		dd 337C34h
		db 0
		dd offset off_A70A
		db 39h,	3Dh, 2Dh
		db 2 dup(0)
		dd offset loc_142C
		dd offset loc_1457
		dw 0EE01h
		dd 431101h, 2D843400h
		db 2 dup(0)
		dd offset off_A71D
		dw 7834h
		db 2Dh,	2 dup(0)
		dd offset off_A6CE
		db 34h
		dd offset aG_log_level_me+10h ;	"AGE"
		dd offset off_A6E2
		dd 2D6034h
		db 0
		dd offset off_A6F7
		db 3Ah
		dd offset loc_142C
		dd offset loc_1457
		dw 9035h
		db 2Dh,	2 dup(0)
		dd offset off_A731
		db 38h
		dd offset loc_143C
		dd offset byte_555D
		dd 74022Bh, 4001h
		db 0, 38h
		dd offset loc_1463
		dd offset word_54FE
		dw 22Bh
		dd 77020074h, 2A000000h
		dd offset loc_1396
		dd offset off_5771+3
		dd offset off_4349+3
		dd 74022Bh
		db 5, 3
		dd offset aMsim		; "msim"
		dw 22Bh
		dd 3050474h
		dd offset aMsim_parseGotS ; "msim_parse: got <%s>\n"
		dd 874022Bh, 7302h
		db 2Ah
		dd offset loc_13B5
		dd offset unk_311C
		dd offset off_4360
		db 2Bh,	2, 74h
		dd 300100h
		db 2Ah
		dd offset loc_13D0
		dd offset dword_5854+9
		dd offset off_4385
		db 2Bh,	2, 74h
		dd 730200h, 474022Bh
		db 5, 3
		dd offset byte_2138
		dw 22Bh
		dd 30010874h
		db 0, 2Ah
		dd offset loc_13FB
		dd offset off_5884+2
		dd offset byte_4399+1
		dw 22Bh
		dd 75020074h
		db 2 dup(0), 29h
		dd offset loc_1420
		dd offset byte_54E1
		db 2Ah
		dd offset loc_142C
		dd offset byte_54E1
		dd offset unk_43B8
		dd 74022Bh, 7602h
		db 2Ah
		dd offset loc_1484
		dd offset off_5771+3
		dd offset unk_43E1
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aMsim		; "msim"
		db 2Bh
		dd 5047402h
		db 3
		dd offset aMsim_parseInco ; "msim_parse: incomplete/bad	string,	miss"...
		db 2Bh,	2, 74h
		dd 730208h
		db 0, 2Ah
		dd offset loc_14A8
		dd offset dword_5600
		dd offset unk_4409
		dw 22Bh
		dd 30010074h, 474022Bh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___44791 ; "msim_parse"
		dw 22Bh
		dd 3050874h
		dd offset aRawNull	; "raw != NULL"
		db 0, 29h
		dd offset _msim_msg_get
		dd offset off_5525
		dw 1200h
		dd offset loc_7D+3
		dd offset word_4422+1
		dd 1F413h, 0C000A00h, 4413h, 736D0145h,	6D5F6D69h, 675F6773h
		dd 1007465h, 9201042Eh
		db 22h,	2 dup(0)
		dd offset _msim_msg_get
		dd offset unk_14EE
		dd offset off_A744
		db 1
		dd offset byte_44A5
aFmsg_1		db 'Fmsg',0
		db 1, 2Eh, 4
		dd offset off_2190+2Fh
		dd 3E009102h
		dd offset aName		; "name"
		dd 0B9042E01h, 2000003h, 6E280491h, 65646Fh, 1B043001h
		db 4, 2	dup(0)
		dd offset off_A77C
		db 2Ah
		dd offset loc_14CF
		dd offset off_2190+79h
		dd offset byte_4499+2
		dd 350012Bh, 2B060091h,	91035201h, 29000604h
		dd offset unk_14EE
		dd offset off_5525
		db    0
		db 45h,	1, 6Dh
aSim_msg_get_st	db 'sim_msg_get_string_from_element',0
		dd 1043B01h, 3C4h
		dd offset _msim_msg_get_string_from_element
		dd offset unk_15E3
		dd offset off_A79A
		dd 459E01h
		db 0, 3Eh
		dd offset aElem		; "elem"
		dw 3B01h
		dd 229204h, 910200h
		db 30h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset word_45AE
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___44805 ; "msim_msg_get_string_from_element"
		db 31h
		dd offset loc_1503
		dd offset loc_150B
		dd offset word_451E
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 3D01h
		dd 17304h
		db 0
		dd offset off_A802
		align 2
		db 2Ah
		dd offset loc_1547
		dd offset off_5771+3
		dd offset unk_4540
		db 2Bh
		dd 5007402h
		db 3
		dd offset aMsim		; "msim"
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aMsim_msg_get_s ; "msim_msg_get_string_element: type %d un"...
		align 4
		db 49h
		dd offset unk_157B
		db 1, 0E1h, 54h
		db 2 dup(0), 49h
		dd offset unk_1597
		db 1
		dd offset dword_2BF8+30h
		db 2Ah
		dd offset loc_15AB
		dd offset off_5653
		dd offset unk_456C
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aD		; "%d"
		align 10h
		db 2Ah
		dd offset loc_15CC
		align 2
		dw 56h
		dd 459400h, 74022B00h, 2B300100h, 5047402h
		db 3
		dd offset ___PRETTY_FUNCTION___44805 ; "msim_msg_get_string_from_element"
		db 2Bh,	2, 74h
		db 8, 5, 3
		dd offset aElemNull	; "elem	!= NULL"
		align 4
		db 29h
		dd offset unk_15E3
		dd offset off_5525
		align 2
		dd offset word_8012
		dw 0AE00h
		db  45h	; E
		db 2 dup(0), 13h
		dd offset loc_1F0+4
		db  20h
		align 2
		dw 9E0Ch
		db  45h	; E
		db 2 dup(0), 45h
		db    1
aMsim_msg_get_0	db 'msim_msg_get_string',0
		db 1, 5Fh, 4
		dd 3C401h
		db 0
		dd offset _msim_msg_get_string
		dd offset unk_163B
		dd offset off_A83A
		db 1, 42h, 46h
		dd 6D460000h, 1006773h,	21BF045Fh, 91020000h
		db 0, 3Eh
		dd offset aName		; "name"
		dw 5F01h
		dd 3B904h, 4910200h
		db 32h
		dd offset aElem		; "elem"
		db 1, 61h, 4
		dd offset off_2190+102h
		dd offset off_A88A
		db 2Ah
		dd offset loc_1606
		dd offset off_4428
		dd offset dword_461C+12h
		db 2Bh,	2, 74h
		dd 910300h, 74022B06h, 4910304h
		db 6, 0, 49h
		dd offset unk_1622
		db 1
		dd offset byte_44A5
		db 29h
		dd offset unk_163B
		dd offset off_5525
		align 2
		db 1Ch
		dd offset aMsim_msg_get_1 ; "msim_msg_get_list_from_element"
		db 1
		dd 1B010490h, 1000004h,	467Dh
		db 1Eh
		dd offset aElem		; "elem"
		db 1, 90h, 4
		dd offset off_2190+102h
		db 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_468B+2
		db 1
		dd offset aMsim_msg_get_1 ; "msim_msg_get_list_from_element"
		dw 2221h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db    1
		db 92h,	4, 73h
		db    1
		align 10h
		db    0
		dd offset word_8012
		align 2
		dd offset off_468B+2
		dw 0F413h
		db    1
		db 2 dup(0), 1Eh
		db    0
		db 0Ch,	7Dh, 46h
		db    0
		align 2
aMsim_msg_lis_0	db '$msim_msg_list_parse',0
		db 1
		dd 1B01046Fh, 1000004h,	46F4h, 7761721Dh, 46F0100h, 3B9h
		dd 7272611Fh, 1007961h,	5C60471h, 6C1F0000h, 747369h, 1B047201h
		dd 1F000004h, 73010069h, 35304h
		db 0, 21h, 22h
		dd offset aElem		; "elem"
		db 1
		dd 2292047Bh, 0
		db  45h	; E
		db 1, 6Dh, 73h
aIm_msg_get_lis	db 'im_msg_get_list',0
		dd 104A501h, 41Bh
		dd offset _msim_msg_get_list
		dd offset _msim_msg_get_dictionary
		dd offset off_A8A8
		dd 48A601h, 736D4600h, 0A5010067h, 21BF04h, 910200h
		db 3Eh
		dd offset aName		; "name"
		db 1, 0A5h, 4
		dd offset loc_3B5+4
		dd 32049102h
		dd offset aElem		; "elem"
		dd 9204A701h
		db 22h,	2 dup(0)
		dd offset off_A98B
		db 4Eh
		dd offset dword_461C+26h
		dd offset loc_166A
		dd offset off_B11C
		dd 7E04AE01h, 34000048h, 4654h
		dd offset off_A9BF
		db 4Fh
		dd offset off_B14C
		db 3Bh,	60h, 46h
		dd 924E0000h
		db 46h,	2 dup(0)
		dd offset loc_16DC
		dd offset off_B17C
		db 1
		dd 48500498h, 0B4340000h
		db 46h,	2 dup(0)
		dd offset off_A9E8
		db 4Fh
		dd offset off_B19C
		dd 46C035h
		db 0
		dd offset off_A9FC
		db 35h,	0CEh, 46h
		db 2 dup(0)
		dd offset off_AA26
		dw 0DB35h
		db 46h,	2 dup(0)
		dd offset off_AA5C
		db 31h
		dd offset loc_1710
		dd offset loc_175A
		dd offset dword_47FC+22h
		dd 46E635h
		db 0
		dd offset off_AA87
		db 2Ah
		dd offset loc_1720
		dd offset byte_555D
		dd offset off_47DC+1
		dw 22Bh
		dd 40010074h
		db 0, 2Ah
		dd offset loc_1732
		dd offset off_5653
		dd offset dword_47FC
		dw 22Bh
		dd 3050074h
		dd offset aListItemD	; "(list item #%d)"
		dd 474022Bh, 7702h
		db 29h
		dd offset loc_1749
		dd offset byte_54E1
		db 38h
		dd offset loc_1758
		dd offset word_54FE
		dw 22Bh
		dd 75020074h, 74022B00h, 730204h
		db 2 dup(0), 2Ah
		dd offset loc_16F7
		dd offset dword_5854+9
		dd offset dword_4830+0Ch
		db 2Bh
		dd 5047402h
		db 3
		dd offset asc_215B	; "|"
		db 2Bh,	2, 74h
		dd 300108h
		db 38h
		dd offset loc_1773
		dd offset off_5884+2
		db 2Bh,	2, 74h
		dd 4C910300h, 6
		db 2Ah
		dd offset loc_169D
		dd offset off_5771+3
		dd offset off_4870+2
		db 2Bh,	2, 74h
		db 0, 5, 3
		dd offset aMsim_msg_get_l ; "msim_msg_get_list"
		db 2Bh
		dd 5047402h
		db 3
		dd offset aTypeDUnknownNa ; "type %d unknown, name %s\n"
		align 2
		db 49h
		dd offset unk_16DB
		db 1
		dd offset off_22C4+118h
		db 2 dup(0), 2Ah
		dd offset loc_1662
		dd offset off_4428
		dd offset aPrivacy_mode+8 ; "mode"
		db 2Bh
		dd 3007402h, 2B060091h,	3047402h, 60491h
		db 29h
		dd offset _msim_msg_get_dictionary
		dd offset off_5525
		align 2
		db 1Ch
		dd offset aMsim_msg_get_2 ; "msim_msg_get_dictionary_from_element"
		db 1
		dd 1B0104EEh, 1000004h,	48E1h
		db 1Eh
		dd offset aElem		; "elem"
		db 1, 0EEh, 4
		dd offset off_2190+102h
		db 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aUser_lookup__0+4 ; "ser_lookup_cb_data"
		db 1
		dd offset aMsim_msg_get_2 ; "msim_msg_get_dictionary_from_element"
		dw 2221h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dd 7304F001h, 1, 801200h, 48F10000h, 0F4130000h, 24000001h
		dd 48E10C00h
		db 2 dup(0), 1Ch
		dd offset aMsim_msg_dic_1 ; "msim_msg_dictionary_parse"
		db 1
		dd 1B0104BAh, 1000004h,	4992h, 7761721Dh, 4BA0100h, 3B9h
		dd 6369641Fh, 0BC010074h, 41B04h, 74691F00h, 1006D65h
		dd 3C404BDh
		db 2 dup(0), 22h
		dd offset aItems	; "items"
		db 1
		dd 5C604BEh, 651F0000h,	656D656Ch, 73746Eh, 0C604BF01h
		dd 1F000005h, 0C0010069h, 35304h
		db 0, 20h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset byte_49A1+1
		db 1
		dd offset aMsim_msg_dic_1 ; "msim_msg_dictionary_parse"
		db 23h
		dd offset off_4974+1
		db 22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 0C2h, 4
		dd offset unk_173
		db    0
		db 21h,	1Fh, 6Bh
		db  65h	; e
		db 79h,	0, 1
		db 0C9h	; …
		db 4, 0C4h, 3
		db    0
		align 2
		dw 761Fh
aAlue		db 'alue',0
		db 1, 0C9h, 4
		dd offset loc_3C3+1
		db    0
		align 2
		dd offset word_8012
		dw 0A200h
		db  49h	; I
		db 2 dup(0), 13h
		dd offset loc_1F0+4
		db  19h
		align 2
		dw 920Ch
		db  49h	; I
		db 2 dup(0), 45h
		db    1
aMsim_msg_get_3	db 'msim_msg_get_dictionary',0
		db 1, 3, 5
		dd 41B01h
		db 0
		dd offset _msim_msg_get_dictionary
		dd offset _msim_msg_get_integer_from_element
		dd offset off_AAA5
		db 1, 13h, 4Dh
		dd 6D460000h, 1006773h,	21BF0503h, 91020000h
		db 0, 3Eh
		dd offset aName		; "name"
		dw 301h
		dd 3B905h, 4910200h
		db 32h
		dd offset aElem		; "elem"
		db 1, 2	dup(5)
		dd offset off_2190+102h
		dd offset off_AB88
		dd 48A64Eh
		db 0
		dd offset loc_17C2
		dd offset off_B1BC
		db 1, 0Ch, 5
		dd offset aStrings+5	; "ngs"
		dd 48B834h
		db 0
		dd offset off_ABBC
		db 4Fh
		dd offset off_B1DC
		dw 0C43Bh
		dd 39000048h, 48F6h
		dd offset loc_183F
		dd offset loc_19A4
		dd 0BD04F601h, 3400004Ch, 4908h
		dd offset off_ABE5
byte_7250	db 3Ah			; DATA XREF: .debug_loc:00008714o
		dd offset loc_183F
		dd offset loc_19A4
		db 35h,	14h, 49h
		db 2 dup(0)
		dd offset off_AC1B
		dw 2135h
		db 49h,	2 dup(0)
		dd offset off_AC44
		db 35h
		dd offset off_492C+2
		dd offset off_AC62
		dd 493A35h
		db 0
		dd offset off_AC8C
		db 35h,	4Bh, 49h
		db 2 dup(0)
		dd offset off_ACCB
		dw 5536h
		dd 5000049h
		db 3
		dd offset ___PRETTY_FUNCTION___44849 ; "msim_msg_dictionary_parse"
		db 31h
		dd offset loc_183F
		dd offset loc_1847
		dd offset aMsim_msg_dump_+8 ; "g_dump_to_str"
		dw 6835h
		db 49h,	2 dup(0)
		dd offset off_ACDF
		align 4
		db 37h
		dd offset off_B1FC
		dd offset off_4C2E+3
		db 35h,	76h, 49h
		db 2 dup(0)
		dd offset off_ACFF
		dw 8235h
		db 49h,	2 dup(0)
		dd offset off_AD28
		db 39h
		dd offset aPurpleplugin+1 ; "urplePlugin"
		dd offset loc_18A9
		dd offset loc_18DA
		dd 6504E301h, 3400004Bh, 33A0h
		dd offset off_AD46
		dd 339434h
		db 0
		dd offset off_AD5A
		db 34h,	88h, 33h
		db 2 dup(0)
		dd offset off_AD6F
		dw 7C34h
		db 33h,	2 dup(0)
		dd offset off_AD8D
		db 39h
		dd offset a_log_level_cri+0Dh ;	"ITICAL"
		dd offset loc_18A9
		dd offset loc_18CC
		dd 5301EE01h, 3400004Bh, 2D84h
		dd offset off_ADA0
		dd 2D7834h
		db 0
		dd offset off_AD46
		db 34h,	6Ch, 2Dh
		db 2 dup(0)
		dd offset off_AD5A
		dw 6034h
		db 2Dh,	2 dup(0)
		dd offset off_AD6F
		db 3Ah
		dd offset loc_18A9
		dd offset loc_18CC
		dd 2D9035h
		db 0
		dd offset off_ADB4
		db 38h
		dd offset loc_18B5
		dd offset byte_555D
		dw 22Bh
		dd 40010074h, 38000000h
		dd offset loc_18D8
		dd offset word_54FE
		dd 74022Bh, 7702h
		db 0, 29h
		dd offset loc_189B
		dd offset byte_54E1
		db 2Ah
		dd offset loc_18A7
		dd offset byte_54E1
		dd offset off_4B81+2
		db 2Bh
		dd 2007402h, 2A000075h
		dd offset loc_18E2
		dd offset off_5884+2
		dd offset byte_4B98
		dd 74022Bh, 7302h
		db 2Ah
		dd offset loc_1904
		dd offset dword_5854+9
		dd offset byte_4BB5+1
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset byte_22AC
		db 2Bh
		dd 1087402h
		db 32h,	0, 2Ah
		dd offset loc_192C
		dd offset off_5771+3
		dd offset aMsim_msg_list_ ; "&msim_msg_list_copy"
		db 2Bh
		dd 5007402h
		db 3
		dd offset aMsim		; "msim"
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aMsim_msg_dicti ; "msim_msg_dictionary_parse(%s): null key"...
		db 2Bh
		dd 3087402h, 64C91h
		db 2Ah
		dd offset loc_1934
		dd offset off_5884+2
		dd offset dword_4BF4+1
		db 2Bh,	2, 74h
		dd 730200h
		db 0, 2Ah
		dd offset loc_1964
		dd offset off_5771+3
		dd offset aNew_list+2	; "ew_list"
		dw 22Bh
		dd 3050074h
		dd offset aMsim		; "msim"
		dd 474022Bh
		db 5, 3
		dd offset aMsim_msg_dic_0 ; "msim_msg_dictionary_prase(%s): null val"...
		dw 22Bh
		dd 91030874h, 3800064Ch
		dd offset loc_196C
		dd offset off_5884+2
		dd 74022Bh, 7302h
		db 0, 2Ah
		dd offset loc_1853
		dd offset unk_311C
		dd offset off_4C44+1
		dw 22Bh
		dd 30010074h
		db 0, 2Ah
		dd offset loc_1871
		dd offset dword_5854+9
		dd offset aMsim_msg_pac_1+11h ;	"ing"
		dw 22Bh
		dd 91030074h, 22B064Ch,	3050474h
		dd offset byte_218B
		dd 874022Bh, 2A003001h
		dd offset loc_1940
		dd offset off_5884+2
		dd offset off_4C7E+3
		dd 74022Bh, 6489103h
		db 0, 2Ah
		dd offset loc_1978
		dd offset off_5884+2
		dd offset word_4C96+1
		dw 22Bh
		dd 91030074h, 38000648h
		dd offset loc_199C
		dd offset dword_5600
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44849 ; "msim_msg_dictionary_parse"
		dd 874022Bh
		db 5, 3
		dd offset aRawNull	; "raw != NULL"
		align 10h
		db 0, 2Ah
		dd offset loc_17F5
		dd offset off_5771+3
		dd offset dword_4CC0+1Fh
		dw 22Bh
		dd 3050074h
		dd offset aMsim_msg_get_d ; "msim_msg_get_dictionary"
		dd 474022Bh
		db 5, 3
		dd offset aTypeDUnknownNa ; "type %d unknown, name %s\n"
		dw 4900h
		dd offset unk_1837
		dd 32C401h, 2A000000h
		dd offset loc_17BA
		dd offset off_4428
		dd offset off_4D08+1
		dd 74022Bh, 6009103h, 474022Bh,	6049103h
		db 0, 29h
		dd offset _msim_msg_get_integer_from_element
		dd offset off_5525
		dw 4500h
		db    1
aMsim_msg_get_i	db 'msim_msg_get_integer_from_element',0
		db 1
		dd 53010510h
		db 3, 2	dup(0)
		dd offset _msim_msg_get_integer_from_element
		dd offset unk_1A41
		dd offset off_ADC7
		db 1
		dd offset off_4DC9
		db 3Eh
		dd offset aElem		; "elem"
		db 1, 10h, 5
		dd offset off_2190+102h
		dd 30009102h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_4DD6+3
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___44874 ; "msim_msg_get_integer_from_element"
		db 31h
		dd offset loc_19CF
		dd offset loc_19D3
		dd offset off_4D8D
		db 32h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 12h, 5
		dd offset unk_173
		dd offset off_AE17
		db 0, 49h
		dd offset unk_1A13
		dw 0A101h
		dd 2A000058h
		dd offset loc_1A38
		dd offset dword_5600
		dd offset dword_4DAC+13h
		dd 74022Bh, 22B3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___44874 ; "msim_msg_get_integer_from_element"
		dd 874022Bh
		db 5, 3
		dd offset aElemNull	; "elem	!= NULL"
		dw 2900h
		dd offset unk_1A41
		dd offset off_5525
		dd 801200h, 4DD90000h, 0F4130000h, 21000001h, 4DC90C00h
		dd 1450000h
aMsim_msg_get_4	db 'msim_msg_get_integer',0
		db 1, 2Dh, 5
		dd 35301h
		db 0
off_7601	dd offset _msim_msg_get_integer	; DATA XREF: .debug_info:00005AB0o
		dd offset unk_1A9B
		dd offset off_AE43
		db 1, 6Eh, 4Eh
		dd 6D460000h, 1006773h,	21BF052Dh, 91020000h
		db 0, 3Eh
		dd offset aName		; "name"
		dw 2D01h
		dd 3B905h, 4910200h
		db 32h
		dd offset aElem		; "elem"
		db 1, 2Fh, 5
		dd offset off_2190+102h
		dd offset off_AE93
		db 2Ah
		dd offset loc_1A66
		dd offset off_4428
		dd offset off_4E58+2
		db 2Bh,	2, 74h
		dd 910300h, 74022B06h, 4910304h
		db 6, 0, 49h
		dd offset unk_1A82
		db 1
		dd offset aJoined+3	; "ined"
		db 29h
		dd offset unk_1A9B
		dd offset off_5525
		align 2
		db 1Ch
		dd offset aMsim_msg_get_5 ; "msim_msg_get_binary_from_element"
		db 1
		dd 3501053Bh, 1000003h,	4ECCh
		db 1Eh
		dd offset aElem		; "elem"
		db 1, 3Bh, 5
		dd offset off_2190+102h
		db 1Eh
		dd offset aBinary_data	; "binary_data"
		db 1, 3Bh, 5
		dd offset loc_5C4+2
		db 1Eh
		dd offset aBinary_length ; "binary_length"
		db 1, 3Bh, 5
		dd offset loc_4DD+1
		dd 73671Fh, 0D8053D01h,	20000004h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset off_4EC9+3
		db 1
		dd offset aMsim_msg_get_5 ; "msim_msg_get_binary_from_element"
		db 21h,	22h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 173053Fh, 0
		db  0Ch
		dd offset aRple_proxy_use+6 ; "ROXY_USE_GLOBAL"
		db 45h,	1, 6Dh
aSim_msg_get_bi	db 'sim_msg_get_binary',0
		db 1
		dd 3501057Ah
		db 3, 2	dup(0)
		dd offset _msim_msg_get_binary
		dd offset loc_1B63+5
		dd offset off_AEB1
		db 1
		dd offset off_4FF2+2
aFmsg_2		db 'Fmsg',0
		db 1, 7Ah, 5
		dd offset off_2190+2Fh
		dd 3E009102h
		dd offset aName		; "name"
		dd 0B9057A01h, 2000003h
		db 91h,	4, 3Eh
		dd offset aBinary_data	; "binary_data"
		db 1
		dd 5C6057Bh, 91020000h
		db 8, 3Eh
		dd offset aBinary_length ; "binary_length"
		dw 7B01h
		dd 4DE05h, 0C910200h
		db 32h
		dd offset aElem		; "elem"
		db 1, 7Dh, 5
		dd offset off_2190+102h
		dd offset off_AF31
		dd 4E6E4Eh
		db 0
		dd offset loc_1AD1
		dd offset off_B21C
		db 1, 84h, 5
		dd offset off_4FCB+1
		dd 4E9834h
		db 0
		dd offset off_AF65
		db 34h,	8Ch, 4Eh
		db 2 dup(0)
		dd offset off_AF8E
		dw 8034h
		db 4Eh,	2 dup(0)
		dd offset off_AFB7
		db 4Fh
		dd offset off_B23C
		dd 4EA435h
		db 0
		dd offset off_AFE0
		db 3Bh,	0AFh, 4Eh
		db 2 dup(0), 2Ah
		dd offset loc_1B00
		dd offset off_5771+3
		dd offset off_4FB0
		db 2Bh
		dd 5007402h
		db 3
		dd offset aMsim		; "msim"
		db 2Bh,	2, 74h
		db 4, 5, 3
		dd offset aMsim_msg_get_b ; "msim_msg_get_binary: unhandled type %d "...
		align 4
		db 29h
		dd offset loc_1B2C
		dd offset off_58BA+1
		db 38h
		dd offset loc_1B4B
		dd offset off_58DA+3
		dw 22Bh
		dd 73020474h, 0
		db 2Ah
		dd offset loc_1AC9
		dd offset off_4428
		dd offset off_4FE8+2
		db 2Bh,	2, 74h
		dd 910300h, 74022B06h, 4910304h
		db 6, 0, 29h
		dd offset loc_1B63+5
		dd offset off_5525
		align 4
aPmg_list_all_c	db 'PMG_LIST_ALL_CONTACTS_DSN',0
		dw 3C19h
		dd offset dword_5014+1
		db    0
		db 0Ch,	73h, 1
		db    0
		align 2
aPmg_list_all_0	db 'PMG_LIST_ALL_CONTACTS_LID',0
		db  19h
		db 3Ch,	15h, 50h
		db    0
		align 2
		dw 5001h
aMg_user_info_b	db 'MG_USER_INFO_BY_ID_DSN',0
		db 19h
		db  3Dh	; =
		dd offset dword_5014+1
		align 2
aPmg_user_info_	db 'PMG_USER_INFO_BY_ID_LID',0
		dw 3D19h
		dd offset dword_5014+1
		db    2
aPmg_own_im_inf	db 'PMG_OWN_IM_INFO_DSN',0
		db 19h,	3Eh, 15h
		dd 1000050h
aPmg_own_im_i_0	db 'PMG_OWN_IM_INFO_LID',0
		db  19h
		db 3Eh,	15h, 50h
		db    0
		align 2
		dw 5004h
aMg_im_info_by_	db 'MG_IM_INFO_BY_ID_DSN',0
		db 19h,	3Fh, 15h
		dd 1000050h
aPmg_im_info_by	db 'PMG_IM_INFO_BY_ID_LID',0
		dw 3F19h
		dd offset dword_5014+1
		db  11h
aPmg_list_all_g	db 'PMG_LIST_ALL_GROUPS_DSN',0
		db 19h,	40h, 15h
		dd 2000050h
aPmg_list_all_1	db 'PMG_LIST_ALL_GROUPS_LID',0
		db  19h
		db 40h,	15h, 50h
		db    0
		align 2
		dw 5006h
aMg_myspace_inf	db 'MG_MYSPACE_INFO_BY_ID_DSN',0
		dw 4119h
		dd offset dword_5014+1
		db    4
aPmg_myspace_in	db 'PMG_MYSPACE_INFO_BY_ID_LID',0
		db  19h
		db 41h,	15h, 50h
		db    0
		align 2
		dw 5003h
aMg_own_myspace	db 'MG_OWN_MYSPACE_INFO_DSN',0
		db  19h
		db 42h,	15h, 50h
		db    0
		align 2
		dw 5004h
aMg_own_myspa_0	db 'MG_OWN_MYSPACE_INFO_LID',0
		db  19h
		db 42h,	15h, 50h
		db    0
		align 2
		dw 5005h
aMg_myspace_i_0	db 'MG_MYSPACE_INFO_BY_STRING_DSN',0
		dw 4319h
		dd offset dword_5014+1
		db    5
aPmg_myspace__0	db 'PMG_MYSPACE_INFO_BY_STRING_LID',0
		dd 50154319h, 50070000h, 435F474Dh
		db 48h
aEck_mail_dsn	db 'ECK_MAIL_DSN',0     ; DATA XREF: .debug_info:000030E9o
					; .debug_info:00003CD5o ...
		dw 4419h
		dd offset dword_5014+1
aPmg_check_mail	db 7,'PMG_CHECK_MAIL_LID',0
		dd 50154419h, 50120000h, 575F474Dh, 435F4245h
		db 48h
aAllenge_dsn	db 'ALLENGE_DSN',0      ; DATA XREF: .debug_info:00004690o
		db 19h,	45h, 15h
		dd 11000050h, 5F474D50h, 5F424557h, 4C414843h
		db 4Ch,	45h
aNge_lid	db 'NGE_LID',0          ; DATA XREF: .debug_info:00003554o
		dw 4519h
		dd offset dword_5014+1
		db  1Ah
aPmg_user_song_	db 'PMG_USER_SONG_DSN',0
		db 19h
		db 46h,	15h
word_7A7E	dw 50h			; DATA XREF: .debug_info:00003FF8o
		db 0, 15h
word_7A82	dw 4D50h		; DATA XREF: .debug_info:00002E41o
		db 47h
a_user_song_lid	db '_USER_SONG_LID',0   ; DATA XREF: .debug_info:00002915o
		dd 50154619h, 501C0000h
		db 4Dh,	47h
a_server_info_d	db '_SERVER_INFO_DSN',0 ; DATA XREF: .debug_info:000033D9o
		db 19h
		db  47h	; G
		dd offset dword_5014+1
aEpmg_server_in	db 'ePMG_SERVER_INFO_LID',0
		dw 4719h
		dd offset dword_5014+1
		db  14h
aPmc_user_prefe	db 'PMC_USER_PREFERENCES_DSN',0
		dw 4A19h
		dd offset dword_5014+1
		dd 434D5001h, 4553555Fh, 52505F52h
		db 45h
aFerences_lid	db 'FERENCES_LID',0     ; DATA XREF: .debug_info:00003095o
		dw 4A19h
		dd offset dword_5014+1
aPmc_delete_con	db 0Ah
		db 'PMC_DELETE_CONTACT_INFO_DSN',0
		db 19h,	4Bh, 15h
		dd offset _msim_msg_pack_using
aPmc_delete_c_0	db 'PMC_DELETE_CONTACT_INFO_LID',0
		db  19h
		db 4Bh,	15h, 50h
		db    0
		align 2
aPmc_contact_in	db 8,'PMC_CONTACT_INFO_DSN',0
		db  19h
		db 4Ch,	15h, 50h
		db    0
		db 2 dup(0), 50h
aMc_contact_inf	db 'MC_CONTACT_INFO_LID',0
		db  19h
		db 4Ch,	15h, 50h
		db    0
		align 2
aPmc_set_userna	db 9,'PMC_SET_USERNAME_DSN',0
		db  19h
		db 4Dh,	15h, 50h
		db    0
		align 2
aPmc_set_user_0	db 9,'PMC_SET_USERNAME_LID',0
		db  19h
		db 4Dh,	15h, 50h
		db    0
		align 2
		dw 500Eh
aMc_import_all_	db 'MC_IMPORT_ALL_FRIENDS_DSN',0
		dw 4E19h
		dd offset dword_5014+1
		db  0Eh
aPmc_import_all	db 'PMC_IMPORT_ALL_FRIENDS_LID',0
		db  19h
		db 4Eh,	15h, 50h
		db    0
		align 2
		dw 5015h
aMc_invite_dsn	db 'MC_INVITE_DSN',0
		dw 4F19h
		dd offset dword_5014+1
		db  10h
aPmc_invite_lid	db 'PMC_INVITE_LID',0
		db  19h
		db 4Fh,	15h, 50h
		db    0
		align 2
		dw 5019h
aMd_delete_budd	db 'MD_DELETE_BUDDY_DSN',0
		db  19h
		db 52h,	15h, 50h
		db    0
		db 2 dup(0), 50h
aMd_delete_bu_0	db 'MD_DELETE_BUDDY_LID',0
		db  19h
		db 52h,	15h, 50h
		db    0
		align 2
		dw 1208h
		dd offset off_2190+3Ah
		dd offset off_547A+1
		db  13h
		dd offset loc_1F0+4
		db 2, 0, 51h
aMsim_escape_re	db 'msim_escape_replacements',0
		db 1, 22h, 6Bh
		dd 5000054h
		db 3
		dd offset _msim_escape_replacements
		db 12h,	7Ah, 1
		db    0
		align 2
		dd offset dword_54AC
		dw 52h
aS_iob		db 'S_iob',0
		dw 9A03h
		dd offset off_549F+2
		db    1
		db 1, 53h, 5Fh
a_mb_cur_max	db '_mb_cur_max',0
		db  1Ah
		db 5Ch,	73h, 1
		db    0
		align 2
		dw 101h
aS_pctype	db 'S_pctype',0
		db 1Ah,	73h, 0CCh
		db    5
		db 2 dup(0), 1
		db    1
		db 54h,	1, 67h
a_strdup	db '_strdup',0
		db  1Bh
		db 0BDh, 1, 0C4h
		db    3
		db 2 dup(0), 1
		dd offset word_54FE
		db  0Bh
		dd offset loc_3B5+4
		align 2
		dw 154h
aG_list_append	db 'g_list_append',0
		dw 3509h
		db    1
		dd offset loc_419+2
		db 1, 25h, 55h
		db    0
		align 2
		dw 1B0Bh
		db    4
		db 2 dup(0), 0Bh
		dd offset loc_368+1
		db    0
		db 55h,	1, 5Fh
a_stack_chk_fai	db '_stack_chk_fail',0
		db    1
		db 2 dup(1), 54h
		db    1
aG_list_length	db 'g_list_length',0
		db 9
		db  61h	; a
		db 1, 53h, 3
		db    0
		align 2
		dw 5D01h
		db  55h	; U
		db 2 dup(0), 0Bh
		dd offset loc_419+2
		db    0
		db 54h,	1, 67h
a_malloc0	db '_malloc0',0
		db 1Ch,	34h, 1
		dd offset loc_368+1
		db    1
		dd offset byte_557B
		db 0Bh,	0Dh, 3
		db    0
		db 2 dup(0), 56h
		db    1
aG_list_foreach	db 'g_list_foreach',0
		db    9
		db 62h,	2 dup(1)
		dd offset aSim_msg_append ; "sim_msg_append"
		db  0Bh
		dd offset loc_419+2
		db 0Bh,	95h, 3
		db    0
		align 2
		dw 690Bh
		db    3
		align 4
		db  54h	; T
		db 1, 67h, 5Fh
aStrjoinv	db 'strjoinv',0
		db 1Bh,	0EEh, 1
		dd offset loc_3C3+1
		db    1
		dd offset off_55C8
		db 0Bh,	0B9h, 3
		db    0
		align 2
		dw 0C60Bh
		db    5
		align 4
		db  54h	; T
		db 1, 67h, 5Fh
aStrconcat	db 'strconcat',0
		dw 0C61Bh
		db    1
		dd offset loc_3C3+1
		db 1, 0E9h, 55h
		db    0
		align 2
		dw 0B90Bh
		db    3
		db 2 dup(0), 4Ch
		db    0
		db 56h,	1, 67h
a_free		db '_free',0
		dw 371Ch
		db    1
		db 1, 0, 56h
		db    0
		align 2
		dw 690Bh
		db    3
		align 4
		db  56h	; V
		db 1, 67h, 5Fh
aReturn_if_fail	db 'return_if_fail_warning',0
		db 0Ch
		db  74h	; t
		db 2 dup(1), 33h
		db  56h	; V
		db 2 dup(0), 0Bh
		dd offset loc_5DE+4
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0E2h, 5
		db    0
		db 2 dup(0), 54h
		db    1
aStrcmp		db 'strcmp',0
		db  1Dh
		db 2Bh,	1, 73h
		db    1
		db 2 dup(0), 1
		dd offset off_5653
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0E2h, 5
		db    0
		db 2 dup(0), 54h
		db    1
aG_strdup_print	db 'g_strdup_printf',0
		db 1Bh,	0BEh, 1
		dd offset loc_3C3+1
		db    1
		dd offset aM_msg_new_v	; "m_msg_new_v"
		db 0Bh,	0B9h, 3
		db    0
		align 2
		dw 4Ch
		db  54h	; T
		db 1, 70h, 75h
aRple_base64_en	db 'rple_base64_encode',0
		db 1Eh
		db 0D4h	; ‘
		db 1, 0C4h, 3
		db    0
		align 2
		dw 0A601h
		db  56h	; V
		db 2 dup(0), 0Bh
		dd offset off_1D24+1
		db  0Bh
		dd offset loc_307+6
		align 2
		dw 154h
aG_string_new	db 'g_string_new',0
		db 2, 42h, 1
		dd offset loc_4D8
		db    1
		dd offset off_56C6+1
		db 0Bh,	0B9h, 3
		db    0
		db 2 dup(0), 56h
		db    1
aG_string_app_0	db 'g_string_append_printf',0
		db    2
		db 85h,	2 dup(1)
		dd offset byte_56F4
		db  0Bh
		dd offset loc_4D8
		db 0Bh,	0B9h, 3
		db    0
		align 2
		dw 4Ch
		db  54h	; T
		db 1, 67h, 5Fh
aString_free	db 'string_free',0
		db    2
		db 46h,	1, 0C4h
		db    3
		db 2 dup(0), 1
		dd offset byte_571B
		db  0Bh
		dd offset loc_4D8
		db 0Bh,	35h, 3
		db    0
		db 2 dup(0), 54h
		db    1
aG_string_inser	db 'g_string_insert_c',0
		db 2
		db  6Ah	; j
		db 1, 0D8h, 4
		db    0
		align 2
		dw 4B01h
		db  57h	; W
		db 2 dup(0), 0Bh
		dd offset loc_4D8
		db  0Bh
		dd offset loc_2FD+2
		db 0Bh,	1Ch, 3
		db    0
		db 2 dup(0), 54h
		db    1
aG_string_app_1	db 'g_string_append',0
		db 2, 55h, 1
		dd offset loc_4D8
		db    1
		dd offset off_5771+3
		db 0Bh,	0D8h, 4
		db    0
		align 2
		dw 0B90Bh
		db    3
		align 4
		db  56h	; V
		db 1, 70h, 75h
aRple_debug_inf	db 'rple_debug_info',0
		db  1Fh
		db 67h,	2 dup(1)
		dd offset byte_579C
		db  0Bh
		dd offset loc_5DE+4
		db 0Bh,	0E2h, 5
		db    0
		align 2
		dw 4Ch
		db  54h	; T
		db 1, 67h, 5Fh
aList_insert_be	db 'list_insert_before',0
		db 9
		dd 41B0143h, 0CF010000h, 0B000057h, 41Bh, 41B0Bh, 3690B00h
		dd 56000000h, 6C5F6701h, 0C00676Fh, 0F0010161h,	0B000057h
		dd 3B9h, 5AA0Bh, 3B90B00h, 4C0000h, 5F670154h, 69727473h
		dd 6E5F676Eh, 6C5F7765h, 2006E65h, 4D80143h, 1A010000h
		db 58h,	0
word_8012	dw 0B00h		; DATA XREF: .debug_info:00006DA2o
					; .debug_info:00006E81o ...
		dd offset loc_3B5+4
		db  0Bh
		dd offset loc_2FD+2
		align 2
		dw 156h
aG_list_free	db 'g_list_free',0
		db    9
		db 32h,	2 dup(1)
		dd offset word_5836
		db  0Bh
		dd offset loc_419+2
		align 2
		dw 154h
aMsim_send_raw	db 'msim_send_raw',0
		dw 0C220h
		db    1
		dd offset loc_333+2
		db 1, 5Dh, 58h
		db    0
		align 2
		dw 0B90Bh
		db  21h	; !
		db 2 dup(0), 0Bh
		dd offset loc_3B5+4
		db    0
		db 54h,	1, 67h
a_strsplit	db '_strsplit',0
		dw 0E81Bh
		db    1
		dd offset loc_5C4+2
		db 1, 86h, 58h
		db    0
		align 2
		dw 0B90Bh
		db    3
		db 2 dup(0), 0Bh
		dd offset loc_3B5+4
		db  0Bh
		dd offset loc_328+1
		align 2
		dw 156h
aG_strfreev	db 'g_strfreev',0
		db 1Bh
		db 0F0h	; 
		db 2 dup(1), 0A1h
		db  58h	; X
		db 2 dup(0), 0Bh
		dd offset loc_5C4+2
		db    0
		db 57h,	1, 61h
		db  74h	; t
		db 6Fh,	69h, 0
		db  21h	; !
		db 30h,	2 dup(1)
		dd offset unk_173
		db    1
		dd offset off_58BA+1
		db 0Bh,	0E2h, 5
		db    0
		db 2 dup(0), 54h
		db    1
aG_memdup	db 'g_memdup',0
		dw 0DC1Bh
		db    1
		dd offset loc_368+1
		db 1, 0DDh, 58h
		db    0
		align 2
		dw 790Bh
		db    3
		db 2 dup(0), 0Bh
		dd offset loc_353
		db    0
		db 58h,	1, 70h
aUrple_base64_d	db 'urple_base64_decode',0
		dd 7D01E51Eh, 100001Dh,	5E20Bh,	4DE0B00h, 0
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 810Ch
dword_810C	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000280Ao
		dd 0B0B000Fh, 1349h, 0B002403h,	30B3E0Bh, 4000008h, 8030016h
		dd 0B3B0B3Ah, 1349h, 0B000F05h,	4908030Bh, 6000013h, 8030113h
		dd 0B3A0B0Bh, 13010B3Bh, 0D070000h, 3A080300h, 490B3B0Bh
		dd 0A3813h, 0F0800h, 0B0Bh, 2609h, 1150A00h, 13010C27h
		dd 50B0000h, 134900h, 260C00h, 1349h, 2700150Dh, 0E00000Ch
		dd 0E03000Dh, 0B3B0B3Ah, 0A381349h, 130F0000h, 3C080300h
		dd 1000000Ch, 0B0B0104h, 0B3B0B3Ah, 1301h, 3002811h, 0D1C08h
		dd 1011200h, 13011349h,	21130000h, 2F134900h, 1400000Bh
		dd 803000Dh, 53B0B3Ah, 0A381349h, 15150000h, 490C2701h
		dd 130113h, 1131600h, 0B0B0803h, 53B0B3Ah, 1301h, 3000D17h
		dd 3B0B3A0Eh, 38134905h, 1800000Ah, 0B0B0117h, 53B0B3Ah
		dd 1301h, 3000D19h, 3B0B3A08h, 134905h,	1131A00h, 0B3A0B0Bh
		dd 13010B3Bh, 41B0000h,	0B080301h, 3B0B3A0Bh, 13010Bh
		dd 12E1C00h, 0B3A0E03h,	0C27053Bh, 0B201349h, 1301h, 300051Dh
		dd 3B0B3A08h, 134905h, 51E00h, 0B3A0E03h, 1349053Bh, 341F0000h
		dd 3A080300h, 49053B0Bh, 20000013h, 0E030034h, 0C341349h
		dd 0E1Ch, 10B21h, 342200h, 0B3A0E03h, 1349053Bh, 0B230000h
		dd 130101h, 12E2400h, 0B3A0803h, 0C27053Bh, 0B201349h
		dd 1301h, 3012E25h, 3B0B3A0Eh, 200C2705h, 13010Bh, 12E2600h
		dd 0B3A0803h, 0C27053Bh, 1111349h, 6400112h, 10C4297h
		dd 27000013h, 8030005h,	53B0B3Ah, 6021349h, 34280000h
		dd 3A080300h, 49053B0Bh, 60213h, 82892900h, 1110001h, 1331h
		dd 182892Ah, 31011101h,	130113h, 828A2B00h, 0A020001h
		dd 0A4291h, 12E2C00h, 0B3A0803h, 0C270B3Bh, 1111349h, 6400112h
		dd 10C4297h, 2D000013h,	8030005h, 0B3B0B3Ah, 6021349h
		dd 52E0000h, 3A080300h,	490B3B0Bh, 0A0213h, 342F00h, 0B3A0803h
		dd 13490B3Bh, 602h, 3003430h, 3413490Eh, 0A020Ch, 10B3100h
		dd 1120111h, 1301h, 3003432h, 3B0B3A0Eh, 2134905h, 33000006h
		dd 1331012Eh, 1120111h,	42970640h, 13010Ch, 53400h, 6021331h
		dd 34350000h, 2133100h,	36000006h, 13310034h, 0A02h, 55010B37h
		dd 130106h, 82893800h, 1110101h, 1331h,	31011D39h, 12011113h
		dd 590B5801h, 130105h, 10B3A00h, 1120111h, 343B0000h, 133100h
		dd 53C00h, 1331h, 3012E3Dh, 3B0B3A08h, 110C2705h, 40011201h
		dd 0C429706h, 1301h, 300053Eh, 3B0B3A0Eh, 2134905h, 3F00000Ah
		dd 803012Eh, 0B3B0B3Ah,	13490C27h, 13010B20h, 5400000h
		dd 3A080300h, 490B3B0Bh, 41000013h, 0C3F012Eh, 0B3A0803h
		dd 0C270B3Bh, 1111349h,	6400112h, 10C4297h, 42000013h
		dd 0E030034h, 0B3B0B3Ah, 6021349h, 1D430000h, 52133101h
		dd 58065501h, 10B590Bh,	44000013h, 1331011Dh, 6550152h
		dd 0B590B58h, 2E450000h, 30C3F01h, 3B0B3A08h, 490C2705h
		dd 12011113h, 97064001h, 13010C42h, 5460000h, 3A080300h
		dd 49053B0Bh, 0A0213h, 54700h, 0B1C1331h, 5480000h, 2133100h
		dd 4900000Ah, 18289h, 42950111h, 13310Ch, 54A00h, 0B3A0E03h
		dd 13490B3Bh, 602h, 300054Bh, 3B0B3A0Eh, 213490Bh, 4C00000Ah
		dd 18h,	3F012E4Dh, 3A08030Ch, 27053B0Bh, 1201110Ch, 97064001h
		dd 13010C42h, 1D4E0000h, 52133101h, 58065501h, 105590Bh
		dd 4F000013h, 655010Bh,	34500000h, 3A080300h, 490B3B0Bh
		dd 0B1C13h, 345100h, 0B3A0803h,	13490B3Bh, 0A02h, 2152h
		dd 345300h, 0B3A0803h, 13490B3Bh, 0C3C0C3Fh, 2E540000h
		dd 30C3F01h, 3B0B3A08h,	490C270Bh, 10C3C13h, 55000013h
		dd 0C3F002Eh, 0C270803h, 0C3C0C34h, 2E560000h, 30C3F01h
		dd 3B0B3A08h, 3C0C270Bh, 13010Ch, 12E5700h, 8030C3Fh, 53B0B3Ah
		dd 13490C27h, 13010C3Ch, 2E580000h, 30C3F01h, 3B0B3A08h
		dd 490C270Bh, 0C3C13h
		db 2 dup(0)
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 85C0h
dword_85C0	dd 0			; DATA XREF: .debug_info:00004C04o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 5, 0C740002h, 5, 48h
		dd 30740002h, 48h, 49h,	0C740002h, 49h,	4Ah, 8740002h
		dd 4Ah,	4Bh, 4740002h, 4Bh, 50h, 30740002h, 2 dup(0)
dword_8628	dd 0			; DATA XREF: .debug_info:00004C19o
		dd 12h,	12500001h, 49000000h, 1000000h,	4B5300h, 500000h
		dd 10000h, 53h,	0
		db 0
byte_8651	db 12h,	2 dup(0)	; DATA XREF: .debug_info:off_4C2Eo
		dd offset loc_17FD+3
		dd 30000200h, 309Fh, 3700h, 50000100h, 2 dup(0)
off_8670	dd offset _msim_msg_pack_using ; DATA XREF: .debug_info:off_4C7Eo
		dd offset loc_51
		dd 4740002h, 51h, 52h, 8740002h, 52h, 53h, 0C740002h, 53h
		dd 54h,	10740002h, 54h,	57h, 14740002h,	57h, 121h, 0D0740003h
		dd 12100h, 12200h, 74000200h, 12214h, 12300h, 74000200h
		dd 12310h, 12400h, 74000200h, 1240Ch, 12500h, 74000200h
		dd 12508h, 12800h, 74000200h, 12804h, 14D00h, 74000300h
		dd 0D0h, 0
		db 2 dup(0)
off_870A	dd offset _msim_msg_pack_using ; DATA XREF: .debug_info:00004C92o
		dd offset loc_72
		dw 1
		dd offset byte_7250
		dd 0C700h, 57000100h, 0C7h, 126h, 1F30004h, 1269F50h, 1480000h
		dd 10000h, 14857h, 14D00h, 0F3000400h, 9F5001h,	0
		db 3 dup(0)
off_874F	dd offset _msim_msg_pack_using ; DATA XREF: .debug_info:00004CA0o
		dd offset loc_5F
		db 1
		dd 5F5200h, 0E90000h, 10000h, 0E955h, 12600h, 0F3000400h
		dd 269F5201h, 46000001h, 1000001h, 1465500h, 14D0000h
		dd 40000h, 9F5201F3h, 2	dup(0)
off_8794	dd offset _msim_msg_pack_using ; DATA XREF: .debug_info:00004CAFo
		dd offset loc_85+4
		dd 89510001h, 26000000h, 4000001h, 5101F300h, 1269Fh, 14300h
		dd 51000100h, 143h, 14Dh, 1F30004h, 9F51h, 0
		db 2 dup(0)
off_87CE	dd offset loc_8C	; DATA XREF: .debug_info:00004CE2o
		dd offset loc_93
		dw 1
		dd offset byte_9350
		dd 11000h, 56000100h, 2	dup(0)
off_87EC	dd offset loc_9D	; DATA XREF: .debug_info:00004CF5o
		dd offset loc_A5
		dd 0A5500001h, 10000000h, 1000001h, 5300h, 0
		db 2 dup(0)
off_880A	dd offset loc_A1	; DATA XREF: .debug_info:00004D0Co
					; jumptable 000002B4 cases 2,26
		dd offset unk_126
		dw 2
		dd 1485891h, 14D0000h, 20000h, 5891h, 0
		db 2 dup(0)
off_882A	dd offset loc_C7	; DATA XREF: .debug_info:00004D1Eo
		dd offset loc_E2+4
		dw 1
		dd 0E650h, 0F300h, 57000100h, 2	dup(0)
off_8848	dd offset loc_E9	; DATA XREF: .debug_info:00004D2Fo
		dd offset loc_EC+4
		dd 0F0500001h, 10000000h, 1000001h, 5500h, 0
		db 2 dup(0)
off_8866	dd offset loc_F1	; DATA XREF: .debug_info:00004D3Do
		dd offset loc_F7
		dw 2
		dd 1049F30h, 1080000h, 10000h, 57h, 0
		db 0
off_8885	dd offset loc_7A	; DATA XREF: .debug_info:00004D6Ao
		dd offset loc_110
		db 2, 0, 31h
		dd 1269Fh, 14800h, 30000200h, 9Fh, 0
		db 0
off_88A5	dd offset _msim_msg_get_node ; DATA XREF: .debug_info:00004E7Fo
		dd offset loc_151
		db 2, 0, 74h
		dd 15104h, 15200h, 74000200h, 15208h, 15500h, 74000200h
		dd 1550Ch, 1C600h, 74000200h, 1C630h, 1C700h, 74000200h
		dd 1C70Ch, 1C800h, 74000200h, 1C808h, 1CC00h, 74000200h
		dd 1CC04h, 1F500h, 74000200h, 30h, 0
		db 0
off_890D	dd offset _msim_msg_get_node ; DATA XREF: .debug_info:00004E8Do
		dd offset loc_164
		db 1, 0, 50h
		dd offset loc_164
		dd offset byte_172
		dd 72530001h, 0EC000001h, 4000001h, 5001F300h, 1EC9Fh
		dd 1EE00h, 53000100h, 1EEh, 1F5h, 1F30004h, 9F50h, 0
		db 2 dup(0)
off_8952	dd offset _msim_msg_get_node ; DATA XREF: .debug_info:00004E96o
		dd offset byte_172
		dw 1
		dd 17252h, 1C800h, 56000100h, 1C8h, 1C9h, 1F30004h, 1C99F52h
		dd 1EC0000h, 10000h, 1EC56h, 1F000h, 52000100h,	1F0h, 1F5h
		dd 560001h, 0
		db 3 dup(0)
off_899F	dd offset loc_18D	; DATA XREF: .debug_info:00004E9Fo
		dd offset loc_191
		db 1
		dd offset dword_52E0+20h
		dd 0
		db 2 dup(0)
off_89B2	dd offset byte_172	; DATA XREF: .debug_info:00004EBCo
		dd offset loc_181+4
		dw 1
		dd 19350h, 1B200h, 50000100h, 1C9h, 1E7h, 500001h, 0
		db 3 dup(0)
off_89DB	dd offset loc_17A	; DATA XREF: .debug_info:00004ED2o
		dd offset loc_191
		db 2
		dd 0C99F3100h, 0EC000001h, 2000001h, 9F3000h, 0
		db 3 dup(0)
off_89FB	dd offset byte_172	; DATA XREF: .debug_info:00004EE9o
		dd offset loc_191
		db 2
		dd 979F3100h, 0B5000001h, 2000001h, 0C99F3000h,	0EC000001h
		dd 2000001h, 9F3100h, 0
		db 3 dup(0)
off_8A27	dd offset _msim_msg_dump_to_str	; DATA XREF: .debug_info:00004FABo
		dd offset loc_1FB
		db 2
		dd 0FB047400h, 38000001h, 2000002h, 38307400h, 3C000002h
		dd 2000002h, 3C047400h,	4F000002h, 2000002h, 307400h, 0
		db 3 dup(0)
off_8A5F	dd offset _msim_msg_dump_to_str	; DATA XREF: .debug_info:00004FB9o
		dd offset loc_224+4
		db 1
		dd 2285000h, 2390000h, 40000h, 9F5001F3h, 239h,	247h, 47500001h
		dd 4F000002h, 4000002h,	5001F300h, 9Fh,	0
		db 0
off_8A99	dd offset loc_229	; DATA XREF: .debug_info:00004FC2o
		dd offset unk_239
		db 1, 0, 50h
		dd offset loc_24A
		dd offset loc_24A+4
		dd 500001h, 0
		db 3 dup(0)
off_8AB7	dd offset loc_248	; DATA XREF: .debug_info:off_4FE8o
		dd offset loc_24A
		db 1
		dd offset off_5000
		dd 0
		db 2 dup(0)
off_8ACA	dd offset _msim_msg_debug_string_element ; DATA	XREF: .debug_info:00005077o
		dd offset loc_251
		dw 2
		dd 2510474h, 2520000h, 20000h, 2520874h, 2530000h, 20000h
		dd 2530C74h, 2540000h, 20000h, 2541074h, 2570000h, 20000h
		dd 2571474h, 2AE0000h, 30000h, 0AE00D074h, 0AF000002h
		dd 2000002h, 0AF147400h, 0B0000002h, 2000002h, 0B0107400h
		dd 0B1000002h, 2000002h, 0B10C7400h, 0B2000002h, 2000002h
		dd 0B2087400h, 0B4000002h, 2000002h, 0B4047400h, 9C000002h
		dd 3000004h, 0D07400h, 2 dup(0)
off_8B64	dd offset loc_26A	; DATA XREF: .debug_info:000050AAo
		dd offset loc_293
		dd 93530001h, 0B3000002h, 2000002h, 0B3009100h,	0E3000002h
		dd 1000003h, 3E35300h, 4230000h, 20000h, 4230091h, 4970000h
		dd 10000h, 49753h, 49C00h, 91000200h, 2	dup(0)
		db 0
off_8BB1	dd offset loc_293	; DATA XREF: .debug_info:000050BAo
		dd offset loc_2A5
		db 1, 0, 50h
		dd offset loc_2A5
		dd offset unk_2B3
		dd 720002h, 2DDh, 2DFh,	13500001h, 1E000003h, 1000003h
		dd 3585000h, 3630000h, 10000h, 39650h, 39B00h, 50000100h
		dd 3B5h, 3BAh, 1E500001h, 23000004h, 1000004h, 4415000h
		dd 4460000h, 10000h, 49750h, 49B00h, 72000200h,	2 dup(0)
		db 0
off_8C29	dd offset loc_2E3	; DATA XREF: .debug_info:000050C9o
		dd offset loc_328
		db 1, 0, 57h
		dd offset loc_3CA
		dd offset loc_3CC
		dd 0CC500001h, 23000003h, 1000004h, 5500h, 0
		db 2 dup(0)
off_8C52	dd offset loc_2F6	; DATA XREF: .debug_info:000050DCo
		dd offset loc_2FD
		dw 1
		dd 2FD50h, 32800h, 55000100h, 2	dup(0)
off_8C70	dd offset loc_26A	; DATA XREF: .debug_info:000050ECo
		dd offset loc_2B0
		dd 0B0560001h, 0B3000002h, 2000002h, 0B3049100h, 9C000002h
		dd 1000004h, 5600h, 0
		db 2 dup(0)
off_8C9A	dd offset loc_33A	; DATA XREF: .debug_info:000050FAo
		dd offset loc_348
		dw 1
		dd 34850h, 35700h, 91000300h, 3577FB8h,	36D0000h, 10000h
		dd 46E57h, 47300h, 50000100h, 47Ah, 485h, 85500001h, 88000004h
		dd 1000004h, 4885700h, 48D0000h, 10000h, 50h, 0
		db 0
off_8CF1	dd offset loc_3E3	; DATA XREF: .debug_info:00005109o
		dd offset unk_423
		db 1, 0, 53h
		dd 2 dup(0)
off_8D04	dd offset loc_3E0	; DATA XREF: .debug_info:00005117o
		dd offset loc_3E9
		dd 9F300002h, 407h, 40Eh, 570001h, 0
		db 3 dup(0)
off_8D23	dd offset _msim_escape	; DATA XREF: .debug_info:0000531Bo
		dd offset loc_49D
		db 2
		dd 9D047400h, 9E000004h, 2000004h, 9E087400h, 9F000004h
		dd 2000004h, 9F0C7400h,	0A0000004h, 2000004h, 0A0107400h
		dd 0A3000004h, 2000004h, 0A3147400h, 4C000004h,	3000005h
		dd 0C07400h, 54Ch, 54Dh, 14740002h, 54Dh, 54Eh,	10740002h
		dd 54Eh, 54Fh, 0C740002h, 54Fh,	550h, 8740002h,	550h, 554h
		dd 4740002h, 554h, 57Fh, 0C0740003h, 2 dup(0)
		db 0
off_8DBD	dd offset _msim_escape	; DATA XREF: .debug_info:0000532Fo
		dd offset loc_4CB
		db 2, 0, 91h
		dd 2 dup(0)
		db 0
off_8DD1	dd offset loc_4C0	; DATA XREF: .debug_info:0000533Do
		dd offset loc_4C2
		db 1, 0, 50h
		dd offset loc_4C2
		dd offset loc_54D
		dd 51530001h, 7F000005h, 1000005h, 5300h, 0
		db 2 dup(0)
off_8DFA	dd offset loc_4CD	; DATA XREF: .debug_info:0000534Ao
		dd offset loc_4D6
		dw 2
		dd offset off_9F30
		dd 0
		db 2 dup(0)
off_8E0E	dd offset loc_4D6	; DATA XREF: .debug_info:00005357o
		dd offset loc_4F0
		dw 2
		dd 4F09F30h, 4F50000h, 10000h, 4F652h, 50D00h, 52000100h
		dd 2 dup(0)
off_8E38	dd offset loc_4CD	; DATA XREF: .debug_info:0000536Ao
		dd offset loc_4CE
		dd 7F710003h, 4CE9Fh, 4D600h, 51000100h, 2 dup(0)
off_8E58	dd offset loc_4D6	; DATA XREF: .debug_info:00005382o
		dd offset loc_4F0
		db 6, 0, 3
		dd offset _msim_escape_replacements
		db 9Fh
		dd offset loc_4F0
		dd offset loc_4F5
		dd 3550001h, 0D000005h,	1000005h, 5500h, 0
		db 2 dup(0)
off_8E86	dd offset loc_50D	; DATA XREF: .debug_info:00005395o
		dd offset loc_527
		dw 2
		dd 5519F30h, 55F0000h, 10000h, 56250h, 57A00h, 30000200h
		dd 9Fh,	0
		db 0
off_8EB1	dd offset loc_50D	; DATA XREF: .debug_info:000053B1o
		dd offset loc_527
		db 1, 0, 51h
		dd offset unk_562
		dd offset loc_573+4
		dd 510001h, 0
		db 3 dup(0)
off_8ECF	dd offset loc_50D	; DATA XREF: .debug_info:000053BAo
		dd offset loc_527
		db 1
		dd 5625300h, 57A0000h, 10000h, 53h, 0
		db 0
off_8EED	dd offset _msim_unescape ; DATA	XREF: .debug_info:0000544Bo
		dd offset loc_581
		db 2, 0, 74h
		dd 58104h, 58200h, 74000200h, 58208h, 58300h, 74000200h
		dd 5830Ch, 58400h, 74000200h, 58410h, 58700h, 74000200h
		dd 58714h, 66B00h, 74000300h, 66B00D0h,	66C0000h, 20000h
		dd 66C1474h, 66D0000h, 20000h, 66D1074h, 66E0000h, 20000h
		dd 66E0C74h, 66F0000h, 20000h, 66F0874h, 6700000h, 20000h
		dd 6700474h, 6A50000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_8F87	dd offset _msim_unescape ; DATA	XREF: .debug_info:0000545Fo
		dd offset loc_5AF
		db 2
		dd offset dword_9100
		dd 0
		db 3 dup(0)
off_8F9B	dd offset loc_5A4	; DATA XREF: .debug_info:0000546Do
		dd offset loc_5A6
		db 1
		dd 5A65000h, 5C40000h, 10000h, 53h, 0
		db 0
off_8FB9	dd offset loc_5B1	; DATA XREF: .debug_info:off_547Ao
		dd offset loc_5C4
		db 2, 0, 30h
		dd 63E9Fh, 64C00h, 91000200h, 4Ch, 0
		db 0
off_8FD9	dd offset loc_5CC	; DATA XREF: .debug_info:00005487o
		dd offset unk_5EB
		db 2, 0, 30h
		dd 5ED9Fh, 60400h, 52000100h, 670h, 67Bh, 99520001h, 0A0000006h
		dd 2000006h, 9F3000h, 0
		db 3 dup(0)
off_900F	dd offset loc_5B1	; DATA XREF: .debug_info:0000549Ao
		dd offset loc_5B2
		db 3
		dd 9F7F7100h, 5B2h, 5C4h, 0C4510001h, 0A5000005h, 2000006h
		dd 489100h, 0
		db 3 dup(0)
off_903B	dd offset loc_5CC	; DATA XREF: .debug_info:000054B2o
		dd offset unk_5EB
		db 6
		db 0, 3
		dd offset _msim_escape_replacements
		dw 0FA9Fh
		dd 4000005h, 1000006h, 6705700h, 6830000h, 10000h, 69957h
		dd 6A000h, 3000600h
		dd offset _msim_escape_replacements
		dd offset loc_9D+2
		dd 0
		db 0
off_9079	dd offset loc_5CC	; DATA XREF: .debug_info:000054C5o
		dd offset loc_63E
		db 1, 0, 51h
		dd offset loc_670
		dd offset loc_692+4
		dd 99510001h, 0A0000006h, 1000006h, 5100h, 0
		db 2 dup(0)
off_90A2	dd offset loc_623	; DATA XREF: .debug_info:000054DDo
		dd offset loc_63E
		dw 1
		dd 67851h, 69600h, 51000100h, 2	dup(0)
off_90C0	dd offset loc_623	; DATA XREF: .debug_info:000054E6o
		dd offset loc_64C
		dd 78530001h, 99000006h, 1000006h, 5300h, 0
		db 2 dup(0)
off_90DE	dd offset _msim_msg_append ; DATA XREF:	.debug_info:000055C3o
		dd offset loc_6A9
		dw 2
		dd 6A90474h, 6AA0000h, 20000h, 6AA0874h, 6AB0000h, 20000h
dword_9100	dd 6AB0C74h, 6AC0000h, 20000h, 6AC1074h, 6AF0000h, 20000h
					; DATA XREF: .debug_loc:00008F90o
		dd 6AF1474h, 6FD0000h, 30000h, 0FD00C074h, 0FE000006h
		dd 2000006h, 0FE147400h, 0FF000006h, 2000006h, 0FF107400h
		dd 6, 2000007h,	0C7400h, 1000007h, 2000007h, 1087400h
		dd 6000007h, 2000007h, 6047400h, 0B000007h, 3000007h, 0C07400h
		dd 2 dup(0)
off_9178	dd offset loc_6CB	; DATA XREF: .debug_info:00005627o
		dd offset loc_6FF
		dd 0FF560001h, 6000006h, 2000007h, 60C9100h, 0B000007h
		dd 1000007h, 5600h, 0
		db 2 dup(0)
off_91A2	dd offset loc_6CB	; DATA XREF: .debug_info:00005638o
		dd offset loc_701
		dw 1
		dd 70155h, 70600h, 91000200h, 70604h, 70B00h, 55000100h
		dd 2 dup(0)
off_91CC	dd offset loc_6D7	; DATA XREF: .debug_info:0000564Ao
		dd offset loc_701+4
		dd 6500001h, 0A000007h,	1000007h, 5000h, 0
		db 2 dup(0)
off_91EA	dd offset _msim_msg_new_v ; DATA XREF: .debug_info:00005693o
		dd offset loc_70D
		dw 2
		dd 70D0474h, 70E0000h, 20000h, 70E0874h, 70F0000h, 20000h
		dd 70F0C74h, 7120000h, 20000h, 7121074h, 7AF0000h, 30000h
		dd 0AF00C074h, 0B0000007h, 2000007h, 0B0107400h, 0B1000007h
		dd 2000007h, 0B10C7400h, 0B2000007h, 2000007h, 0B2087400h
		dd 0B4000007h, 2000007h, 0B4047400h, 0FC000007h, 3000008h
		dd 0C07400h, 2 dup(0)
off_926C	dd offset _msim_msg_new_v ; DATA XREF: .debug_info:000056A7o
		dd offset loc_721
		dd 21500001h, 27000007h, 1000007h, 7275600h, 8FC0000h
		dd 40000h, 9F5001F3h, 2	dup(0)
off_9298	dd offset _msim_msg_new_v ; DATA XREF: .debug_info:000056B7o
		dd offset unk_727
		dd 27520001h, 2B000007h, 3000007h, 9F047300h, 72Bh, 752h
		dd 52530001h, 5A000007h, 1000007h, 75A5200h, 7600000h
		dd 30000h, 609F0472h, 73000007h, 3000007h, 9F047300h, 773h
		dd 79Ch, 0B3570001h, 0B7000007h, 3000007h, 9F047300h, 7B7h
		dd 7E1h, 0E1570001h, 0E7000007h, 3000007h, 9F047300h, 7E7h
		dd 805h, 5570001h, 0B000008h, 3000008h,	9F047300h, 80Bh
		dd 835h, 35570001h, 3B000008h, 3000008h, 9F047300h, 83Bh
		dd 8F7h, 570001h, 0
byte_9350	db 3 dup(0)		; DATA XREF: .debug_loc:000087D8o
off_9353	dd offset unk_727	; DATA XREF: .debug_info:off_56C6o
		dd offset loc_74F
		db 1
		dd 7545600h, 7B10000h, 10000h, 7B356h, 8FC00h, 56000100h
		dd 2 dup(0)
off_937C	dd offset loc_776	; DATA XREF: .debug_info:000056D7o
		dd offset loc_791+4
		dd 65520001h, 83000008h, 1000008h, 5200h, 0
		db 2 dup(0)
off_939A	dd offset unk_727	; DATA XREF: .debug_info:000056E6o
		dd offset loc_742+4
		dw 1
		dd 75D51h, 79500h, 51000100h, 7B3h, 7D9h, 0E1510001h, 0FD000007h
		dd 1000007h, 8055100h, 82D0000h, 10000h, 83551h, 85D00h
		dd 51000100h, 865h, 883h, 8B510001h, 0A7000008h, 1000008h
		dd 8AF5100h, 8CB0000h, 10000h, 8D351h, 8EF00h, 51000100h
		dd 2 dup(0)
off_9410	dd offset loc_721	; DATA XREF: .debug_info:000056F5o
		dd offset loc_742+4
		dd 4B500001h, 95000007h, 1000007h, 7965000h, 79C0000h
		dd 10000h, 7B350h, 7D900h, 50000100h, 7DAh, 7FDh, 0FE500001h
		dd 2D000007h, 1000008h,	82E5000h, 85D0000h, 10000h, 85E50h
		dd 88300h, 50000100h, 88Bh, 8A7h, 0AF500001h, 0CB000008h
		dd 1000008h, 8D35000h, 8EF0000h, 10000h, 50h, 0
		db 0
off_9491	dd offset loc_721	; DATA XREF: .debug_info:00005706o
		dd offset unk_727
		db 5, 0, 76h
		dd 9F2E3000h, 727h, 74Fh, 9F300002h, 75Ah, 79Ch, 9F300002h
		dd 7B3h, 8F7h, 9F300002h, 2 dup(0)
off_94CC	dd offset loc_83E	; DATA XREF: .debug_info:00005714o
		dd offset loc_859+4
		dd 0D3520001h, 0EF000008h, 1000008h, 5200h, 0
		db 2 dup(0)
off_94EA	dd offset loc_7BA	; DATA XREF: .debug_info:00005722o
		dd offset loc_7D5+4
		dw 1
		dd 88B52h, 8A700h, 52000100h, 2	dup(0)
off_9508	dd offset loc_80E	; DATA XREF: .debug_info:00005732o
		dd offset loc_829+4
		dd 0AF520001h, 0CB000008h, 1000008h, 5200h, 0
		db 2 dup(0)
off_9526	dd offset loc_77E	; DATA XREF: .debug_info:0000575Eo
		dd offset loc_79C
		dw 2
a1qe		db '1üe',8,0
		align 2
		dd offset unk_88B
		dw 2
		dd offset off_9F30
		dd 0
		db 2 dup(0)
off_9546	dd offset loc_7C2	; DATA XREF: .debug_info:0000577Bo
		dd offset unk_7E1
		dw 2
a1ql		db '1üã',8,0
		align 2
		dd offset unk_8AF
		dw 2
		dd offset off_9F30
		dd 0
		db 2 dup(0)
off_9566	dd offset loc_816	; DATA XREF: .debug_info:00005798o
		dd offset unk_835
		dw 2
a1qp		db '1üØ',8,0
		align 2
		dd offset unk_8D3
		dw 2
		dd offset off_9F30
		dd 0
		db 2 dup(0)
off_9586	dd offset loc_846	; DATA XREF: .debug_info:000057B5o
		dd offset unk_865
		dw 2
a1q		db '1ü”',8,0
		align 2
		dd offset loc_8F7
		dw 2
		dd offset off_9F30
		dd 0
		db 2 dup(0)
off_95A6	dd offset _msim_msg_new	; DATA XREF: .debug_info:0000593Eo
		dd offset loc_8FF
		dw 2
		dd 8FF0474h, 92B0000h, 20000h, 92B2074h, 92C0000h, 20000h
		dd 92C0474h, 9350000h, 20000h, 2074h, 0
		db 2 dup(0)
off_95DE	dd offset loc_90F	; DATA XREF: .debug_info:00005961o
		dd offset loc_91C
		dw 2
		dd 91C9F30h, 92C0000h, 10000h, 92C50h, 93000h, 30000200h
		dd 9309Fh, 93400h, 50000100h, 2	dup(0)
off_9614	dd offset loc_913	; DATA XREF: .debug_info:00005971o
		dd offset loc_917
		dd 4910003h, 9179Fh, 91B00h, 52000100h,	91Bh, 91Ch, 4910003h
		dd 9Fh,	0
		db 0
off_9641	dd offset _msim_msg_insert_before ; DATA XREF: .debug_info:000059C3o
		dd offset loc_939
		db 2, 0, 74h
		dd 93904h, 93A00h, 74000200h, 93A08h, 93B00h, 74000200h
		dd 93B0Ch, 93C00h, 74000200h, 93C10h, 93F00h, 74000200h
		dd 93F14h, 9AE00h, 74000300h, 9AE00D0h,	9AF0000h, 20000h
		dd 9AF1474h, 9B00000h, 20000h, 9B01074h, 9B10000h, 20000h
		dd 9B10C74h, 9B20000h, 20000h, 9B20874h, 9B70000h, 20000h
		dd 9B70474h, 9BC0000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_96DB	dd offset loc_993	; DATA XREF: .debug_info:00005A44o
		dd offset loc_9B2+4
		db 1
		dd 9B75000h, 9BB0000h, 10000h, 50h, 0
		db 0
off_96F9	dd offset loc_963	; DATA XREF: .debug_info:00005A67o
		dd offset loc_9B2
		db 1, 0, 55h
		dd offset loc_9B2
		dd offset loc_9B7
		dd 10910002h, 9B7h, 9BCh, 550001h, 0
		db 3 dup(0)
off_9723	dd offset loc_963	; DATA XREF: .debug_info:00005A78o
		dd offset loc_982
		db 1
		dd 9825700h, 9BC0000h, 20000h, 891h, 0
		db 2 dup(0)
off_9742	dd offset loc_975	; DATA XREF: .debug_info:00005A8Ao
		dd offset loc_98E
		dw 1
		dd 98E50h, 9AF00h, 53000100h, 9AFh, 9B6h, 8910002h, 9B7h
		dd 9BCh, 530001h, 0
		db 3 dup(0)
off_9777	dd offset _msim_msg_clone ; DATA XREF: .debug_info:00005AE9o
		dd offset loc_9BD
		db 2
		dd 0BD047400h, 0C0000009h, 2000009h, 0C0087400h, 0E000009h
		dd 200000Ah, 0E307400h,	0F00000Ah, 200000Ah, 0F087400h
		dd 1000000Ah, 200000Ah,	10047400h, 1900000Ah, 200000Ah
		dd 307400h, 0
		db 3 dup(0)
off_97C7	dd offset loc_9DF	; DATA XREF: .debug_info:00005B0Do
		dd offset loc_9E7
		db 1
		dd 9E75000h, 0A100000h,	20000h,	0A146891h, 0A190000h, 20000h
		dd 6891h, 0
		db 2 dup(0)
off_97F2	dd offset _msim_msg_clone_element ; DATA XREF: .debug_info:00005BD5o
		dd offset loc_A1D
		dw 2
		dd 0A1D0474h, 0A1E0000h, 20000h, 0A1E0874h, 0A1F0000h
		dd 20000h, 0A1F0C74h, 0A200000h, 20000h, 0A201074h, 0A230000h
		dd 20000h, 0A231474h, 0AA30000h, 30000h, 0A300E074h, 0A400000Ah
		dd 200000Ah, 0A4147400h, 0A500000Ah, 200000Ah, 0A5107400h
		dd 0A600000Ah, 200000Ah, 0A60C7400h, 0A700000Ah, 200000Ah
		dd 0A7087400h, 0A800000Ah, 200000Ah, 0A8047400h, 8700000Ah
		dd 300000Bh, 0E07400h, 2 dup(0)
off_988C	dd offset loc_A36	; DATA XREF: .debug_info:00005C08o
		dd offset loc_A8D
		dd 8D530001h, 0A800000Ah, 200000Ah, 0A8009100h,	0D00000Ah
		dd 100000Bh, 0B0D5300h,	0B420000h, 20000h, 0B420091h, 0B820000h
		dd 10000h, 0B8253h, 0B8700h, 91000200h,	2 dup(0)
		db 0
off_98D9	dd offset loc_A36	; DATA XREF: .debug_info:00005C18o
		dd offset loc_AA5
		db 1, 0, 56h
		dd offset loc_AA5
		dd offset loc_AA8
		dd 4910002h, 0AA8h, 0B87h, 560001h, 0
		db 3 dup(0)
off_9903	dd offset loc_ABA	; DATA XREF: .debug_info:00005C2Do
		dd offset loc_ABD
		db 1
		dd 0ABD5000h, 0AE30000h, 10000h, 0AF157h, 0AFB00h, 50000100h
		dd 0AFBh, 0B42h, 51570001h, 5900000Bh, 100000Bh, 0B5F5000h
		dd 0B640000h, 10000h, 0B7A57h, 0B8200h,	50000100h, 2 dup(0)
off_9958	dd offset loc_B67	; DATA XREF: .debug_info:00005C3Co
		dd offset loc_B70
		dd 70500001h, 7700000Bh, 200000Bh, 0C7300h, 0
		db 3 dup(0)
off_9977	dd offset unk_B42	; DATA XREF: .debug_info:00005C4Do
		dd offset loc_B4A+4
		db 2
		dd 0C7300h, 0
		db 3 dup(0)
off_998B	dd offset loc_B0D	; DATA XREF: .debug_info:00005C7Ao
					; .debug_info:00005CBBo
		dd offset unk_B42
		db 1
		dd offset dword_5700
		dd 0
		db 2 dup(0)
off_999E	dd offset loc_B0D	; DATA XREF: .debug_info:00005C83o
					; .debug_info:00005CC4o
		dd offset loc_B14+4
		dw 2
		dd offset byte_4C90+1
		dd 0
		db 2 dup(0)
off_99B2	dd offset loc_B0D	; DATA XREF: .debug_info:00005C8Co
					; .debug_info:00005CCDo
		dd offset loc_B14+4
		dw 1
		dd 0B1850h, 0B4200h, 55000100h,	2 dup(0)
off_99D0	dd offset loc_B0D	; DATA XREF: .debug_info:00005C95o
		dd offset unk_B42
		dd 530001h, 0
		db 3 dup(0)
off_99E3	dd offset loc_B0D	; DATA XREF: .debug_info:00005CB2o
		dd offset unk_B42
		db 2
		dd 9F3100h, 0
		db 3 dup(0)
off_99F7	dd offset loc_B19	; DATA XREF: .debug_info:00005CDFo
		dd offset loc_B36+4
		db 1
		dd offset off_5000
		dd 0
		db 2 dup(0)
off_9A0A	dd offset _msim_msg_list_free ;	DATA XREF: .debug_info:00005DF1o
		dd offset loc_B89
		dw 2
		dd 0B890474h, 0B8A0000h, 20000h, 0B8A0874h, 0B8D0000h
		dd 20000h, 0B8D0C74h, 0BDD0000h, 20000h, 0BDD3074h, 0BDE0000h
		dd 20000h, 0BDE0C74h, 0BDF0000h, 20000h, 0BDF0874h, 0BE40000h
		dd 20000h, 0BE40474h, 0BE90000h, 20000h, 3074h,	0
		db 2 dup(0)
off_9A72	dd offset _msim_msg_list_free ;	DATA XREF: .debug_info:00005E04o
		dd offset loc_B9C
		dw 2
		dd 0B9C0091h, 0BDE0000h, 10000h, 0BE453h, 0BE900h, 53000100h
		dd 2 dup(0)
off_9A9C	dd offset loc_BA2	; DATA XREF: .debug_info:00005E21o
		dd offset loc_BC6
		dd 560001h, 0
		db 3 dup(0)
off_9AAF	dd offset _msim_msg_free ; DATA	XREF: .debug_info:00005E79o
		dd offset loc_BED
		db 2
		dd 0ED047400h, 0F000000Bh, 200000Bh, 0F0087400h, 2E00000Bh
		dd 200000Ch, 2E307400h,	2F00000Ch, 200000Ch, 2F087400h
		dd 3400000Ch, 200000Ch,	34047400h, 4300000Ch, 200000Ch
		dd 43307400h, 4400000Ch, 200000Ch, 44087400h, 4500000Ch
		dd 200000Ch, 45047400h,	4A00000Ch, 200000Ch, 307400h, 0
		db 3 dup(0)
off_9B23	dd offset _msim_msg_free_element_data ;	DATA XREF: .debug_info:00005EF3o
		dd offset loc_C4F
		db 2
		dd 4F047400h, 9100000Ch, 200000Ch, 91307400h, 9400000Ch
		dd 200000Ch, 94047400h,	0B200000Ch, 200000Ch, 0B2307400h
		dd 0B800000Ch, 200000Ch, 0B8047400h, 0CE00000Ch, 200000Ch
		dd 0CE307400h, 0D400000Ch, 200000Ch, 0D4047400h, 200000Ch
		dd 200000Dh, 2307400h, 700000Dh, 200000Dh, 7047400h, 0C00000Dh
		dd 200000Dh, 307400h, 0
		db 3 dup(0)
off_9BA3	dd offset _msim_msg_free_element ; DATA	XREF: .debug_info:00005F8Co
		dd offset loc_D0D
		db 2
		dd 0D047400h, 1000000Dh, 200000Dh, 10087400h, 4B00000Dh
		dd 200000Dh, 4B307400h,	4C00000Dh, 200000Dh, 4C087400h
		dd 5100000Dh, 200000Dh,	51047400h, 5600000Dh, 200000Dh
		dd 307400h, 0
		db 3 dup(0)
off_9BF3	dd offset loc_D1F	; DATA XREF: .debug_info:00005FBFo
		dd offset loc_D4C
		db 1
		dd 0D4C5300h, 0D510000h, 20000h, 0D510091h, 0D560000h
		dd 10000h, 53h,	0
		db 0
off_9C1D	dd offset _msim_msg_pack ; DATA	XREF: .debug_info:00006015o
		dd offset loc_D5B
		db 2, 0, 74h
		dd 0D5B04h, 0D9C00h, 74000200h,	0D9C30h, 0DA000h, 74000200h
		dd 0DA004h, 0DC500h, 74000200h,	30h, 0
		db 0
off_9C55	dd offset loc_D6F	; DATA XREF: .debug_info:00006056o
		dd offset loc_D8D
		db 2, 0, 31h
		dd 0DA09Fh, 0DC000h, 30000200h,	9Fh, 0
		db 0
off_9C75	dd offset _msim_msg_send ; DATA	XREF: .debug_info:000060EDo
		dd offset loc_DC9
		db 2, 0, 74h
		dd 0DC904h, 0DCA00h, 74000200h,	0DCA08h, 0DCD00h, 74000200h
		dd 0DCD0Ch, 0E1900h, 74000300h,	0E1900C0h, 0E1A0000h, 20000h
		dd 0E1A0C74h, 0E1B0000h, 20000h, 0E1B0874h, 0E1C0000h
		dd 20000h, 0E1C0474h, 0E410000h, 30000h, 0C074h, 0
		db 3 dup(0)
off_9CDF	dd offset loc_DEA	; DATA XREF: .debug_info:00006124o
		dd offset loc_DF5+4
		db 1
		dd 0DF95000h, 0E1A0000h, 10000h, 0E1C53h, 0E3700h, 50000100h
		dd 0E37h, 0E41h, 530001h, 0
		db 3 dup(0)
off_9D13	dd offset loc_DFA	; DATA XREF: .debug_info:00006138o
		dd offset loc_E01+4
		db 1
		dd offset off_5000
		dd 0
		db 2 dup(0)
off_9D26	dd offset loc_DEE	; DATA XREF: .debug_info:00006165o
		dd offset loc_E0A
		dw 2
		dd 0E1C9F31h, 0E3C0000h, 20000h, 9F30h,	0
		db 2 dup(0)
off_9D46	dd offset _msim_msg_pack_element_data ;	DATA XREF: .debug_info:00006265o
		dd offset loc_E45
		dw 2
		dd 0E450474h, 0E460000h, 20000h, 0E460874h, 0E490000h
		dd 20000h, 0E490C74h, 0EA70000h, 20000h, 0EA73074h, 0EA80000h
		dd 20000h, 0EA80C74h, 0EA90000h, 20000h, 0EA90874h, 0EAC0000h
		dd 20000h, 0EAC0474h, 0ED60000h, 20000h, 0ED63074h, 0ED70000h
		dd 20000h, 0ED70C74h, 0ED80000h, 20000h, 0ED80874h, 0EE00000h
		dd 20000h, 0EE00474h, 0F820000h, 20000h, 0F823074h, 0F830000h
		dd 20000h, 0F830C74h, 0F840000h, 20000h, 0F840874h, 0F8C0000h
		dd 20000h, 0F8C0474h, 0FF20000h, 20000h, 0FF23074h, 0FF30000h
		dd 20000h, 0FF30C74h, 0FF40000h, 20000h, 0FF40874h, 0FFC0000h
		dd 20000h, 0FFC0474h, 10670000h, 20000h, 10673074h, 10680000h
		dd 20000h, 10680C74h, 10690000h, 20000h, 10690874h
dword_9E50	dd 10700000h, 20000h, 10700474h, 10980000h, 20000h, 3074h
					; DATA XREF: .debug_info:000034A8o
		dd 0
		db 2 dup(0)
off_9E6E	dd offset loc_EEE	; DATA XREF: .debug_info:00006288o
		dd offset loc_EF5
		dw 1
		dd 0EF550h, 0F4100h, 56000100h,	0FBFh, 0FC8h, 0C8500001h
		dd 0CF00000Fh, 200000Fh, 0C7300h, 0
		db 3 dup(0)
off_9EA3	dd offset loc_EF1	; DATA XREF: .debug_info:00006297o
		dd offset unk_F41
		db 1
		dd offset dword_52E0+20h
		dd 0
		db 2 dup(0)
off_9EB6	dd offset loc_E60	; DATA XREF: .debug_info:000062C4o
		dd offset loc_E93
		dw 2
		dd 0EAA9F31h, 0FF90000h, 20000h, 0FF99F31h, 101F0000h
		dd 20000h, 101F9F30h, 10930000h, 20000h, 9F31h,	0
		db 2 dup(0)
off_9EEE	dd offset loc_EBF	; DATA XREF: .debug_info:000062E2o
		dd offset unk_EDD
		dw 2
		dd 106E9F31h, 10930000h, 20000h, 9F30h,	0
		db 2 dup(0)
off_9F0E	dd offset loc_F8F	; DATA XREF: .debug_info:00006300o
		dd offset loc_FB0+4
		dw 1
		dd 102A50h, 104700h, 50000100h,	2 dup(0)
off_9F2C	dd offset loc_F97	; DATA XREF: .debug_info:00006326o
off_9F30	dd offset unk_FBA	; DATA XREF: .debug_loc:00008E04o
					; .debug_loc:0000953Co	...
		dd 9F310002h, 102Ah, 104Fh, 9F300002h, 2 dup(0)
off_9F4C	dd offset _msim_msg_pack_element_dict ;	DATA XREF: .debug_info:000064CDo
		dd offset loc_1099
		dd 4740002h, 1099h, 109Ah, 8740002h, 109Ah, 109Bh, 0C740002h
		dd 109Bh, 109Eh, 10740002h, 109Eh, 1104h, 30740002h, 1104h
		dd 1105h, 10740002h, 1105h, 1106h, 0C740002h, 1106h, 1107h
		dd 8740002h, 1107h, 1108h, 4740002h, 1108h, 1167h, 30740002h
		dd 2 dup(0)
off_9FCC	dd offset loc_10B1	; DATA XREF: .debug_info:000064EBo
		dd offset loc_10F5
		dd 0F5530001h, 8000010h, 2000011h, 8009100h, 30000011h
		dd 1000011h, 11305300h,	11410000h, 20000h, 11410091h, 11620000h
		dd 10000h, 116253h, 116700h, 91000200h,	2 dup(0)
		db 0
off_A019	dd offset loc_10B1	; DATA XREF: .debug_info:000064FEo
		dd offset locret_1107
		db 1, 0, 57h
		dd offset locret_1107
		dd offset loc_1108
		dd 4910002h, 1108h, 1167h, 570001h, 0
		db 3 dup(0)
off_A043	dd offset loc_10B8	; DATA XREF: .debug_info:00006526o
		dd offset loc_10F5
		db 1
		dd 11085700h, 11620000h, 10000h, 57h, 0
		db 0
off_A061	dd offset loc_10B8	; DATA XREF: .debug_info:0000652Fo
		dd offset loc_10F5
		db 1, 0, 53h
		dd offset loc_1108
		dd offset loc_1130
		dd 30530001h, 41000011h, 2000011h, 41009100h, 62000011h
		dd 1000011h, 5300h, 0
		db 2 dup(0)
off_A096	dd offset loc_1130	; DATA XREF: .debug_info:00006542o
		dd offset loc_1133+4
		dw 1
		dd 113750h, 114100h, 53000100h,	2 dup(0)
off_A0B4	dd offset loc_10C2	; DATA XREF: .debug_info:0000654Bo
		dd offset loc_10C9
		dd 0C9500001h, 0F5000010h, 1000010h, 11085600h,	11410000h
		dd 10000h, 114156h, 115F00h, 50000100h,	115Fh, 1162h, 560001h
		dd 0
		db 3 dup(0)
off_A0F3	dd offset loc_10C6	; DATA XREF: .debug_info:00006571o
		dd offset loc_10F5
		db 2
		dd 89F3100h, 41000011h,	2000011h, 419F3100h, 62000011h
		dd 2000011h, 9F3000h, 0
		db 3 dup(0)
off_A11F	dd offset _msim_msg_pack_element ; DATA	XREF: .debug_info:0000663Fo
		dd offset loc_1169
		db 2
		dd 69047400h, 6A000011h, 2000011h, 6A087400h, 6B000011h
		dd 2000011h, 6B0C7400h,	6E000011h, 2000011h, 6E107400h
		dd 0E8000011h, 3000011h, 0C07400h, 11E8h, 11E9h, 10740002h
		dd 11E9h, 11EAh, 0C740002h, 11EAh, 11EBh, 8740002h, 11EBh
		dd 11ECh, 4740002h, 11ECh, 125Dh, 0C0740003h, 2	dup(0)
		db 0
off_A1A1	dd offset loc_1181	; DATA XREF: .debug_info:0000665Do
		dd offset loc_11D9
		db 1, 0, 53h
		dd offset loc_11D9
		dd offset loc_11EC
		dd 910002h, 11ECh, 120Fh, 0F530001h, 11000012h,	2000012h
		dd 11009100h, 34000012h, 1000012h, 12345300h, 12450000h
		dd 20000h, 12450091h, 12560000h, 10000h, 125653h, 125D00h
		dd 91000200h, 2	dup(0)
		db 0
off_A205	dd offset loc_1181	; DATA XREF: .debug_info:00006670o
		dd offset loc_11EA
		db 1, 0, 56h
		dd offset loc_11EA
		dd offset loc_11EC
		dd 4910002h, 11ECh, 125Dh, 560001h, 0
		db 3 dup(0)
off_A22F	dd offset loc_1188	; DATA XREF: .debug_info:00006698o
		dd offset loc_11D9
		db 1
		dd 11EC5600h, 12580000h, 10000h, 56h, 0
		db 0
off_A24D	dd offset loc_1188	; DATA XREF: .debug_info:000066A1o
		dd offset loc_11D9
		db 1, 0, 53h
		dd offset loc_11EC
		dd offset loc_120F
		dd 0F530001h, 11000012h, 2000012h, 11009100h, 34000012h
		dd 1000012h, 12345300h,	12450000h, 20000h, 12450091h, 12560000h
		dd 10000h, 125653h, 125800h, 91000200h,	2 dup(0)
		db 0
off_A2A5	dd offset loc_120F	; DATA XREF: .debug_info:000066B4o
		dd offset unk_1211
		db 1, 0, 50h
		dd offset loc_1234
		dd offset loc_1237+4
		dd 3B500001h, 45000012h, 1000012h, 12565300h, 12580000h
		dd 10000h, 50h,	0
		db 0
off_A2D9	dd offset loc_1192	; DATA XREF: .debug_info:000066BDo
		dd offset loc_11A0+4
		db 1, 0, 50h
		dd offset loc_11A0+4
		dd offset loc_11D9
		dd 0EC570001h, 0F7000011h, 1000011h, 11F75000h,	12110000h
		dd 10000h, 121157h, 122A00h, 50000100h,	122Ah, 1258h, 570001h
		dd 0
		db 3 dup(0)
off_A323	dd offset _msim_send	; DATA XREF: .debug_info:000067C9o
		dd offset loc_1261
		db 2
		dd 61047400h, 62000012h, 2000012h, 62087400h, 65000012h
		dd 2000012h, 650C7400h,	0AA000012h, 3000012h, 0C07400h
		dd 12AAh, 12ABh, 0C740002h, 12ABh, 12ACh, 8740002h, 12ACh
		dd 12ADh, 4740002h, 12ADh, 12B2h, 0C0740003h, 2	dup(0)
		db 0
off_A38D	dd offset loc_128B	; DATA XREF: .debug_info:000067F6o
		dd offset loc_1292+4
		db 1, 0, 50h
		align 10h
off_A3A0	dd offset loc_127F	; DATA XREF: .debug_info:00006806o
		dd offset loc_1286+4
		dd 8A500001h, 0AB000012h, 1000012h, 12AD5300h, 12B20000h
		dd 10000h, 53h,	0
		db 0
off_A3C9	dd offset loc_1274	; DATA XREF: .debug_info:00006817o
		dd offset loc_1278
		db 3, 0, 91h
		dd 12789F04h, 127C0000h, 10000h, 127C52h, 12B200h, 91000300h
		dd 9F04h, 0
		db 2 dup(0)
off_A3F6	dd offset _msim_msg_dump ; DATA	XREF: .debug_info:0000688Bo
		dd offset loc_12B5
		dw 2
		dd 12B50474h, 12B60000h, 20000h, 12B60874h, 12B90000h
		dd 20000h, 12B90C74h, 13030000h, 20000h, 13033074h, 13040000h
		dd 20000h, 13040C74h, 13050000h, 20000h, 13050874h, 130C0000h
		dd 20000h, 130C0474h, 13370000h, 20000h, 13373074h, 13380000h
		dd 20000h, 13380C74h, 13390000h, 20000h, 13390874h, 133C0000h
		dd 20000h, 133C0474h, 135F0000h, 20000h, 3074h,	0
		db 2 dup(0)
off_A48E	dd offset loc_12D8	; DATA XREF: .debug_info:000068C5o
		dd offset loc_12EB+4
		dw 1
		dd 12EF50h, 130400h, 53000100h,	1304h, 1309h, 910002h
		dd 133Ah, 1357h, 57500001h, 5A000013h, 1000013h, 5300h
		dd 0
		db 2 dup(0)
off_A4CE	dd offset loc_12D1	; DATA XREF: .debug_info:000068F2o
		dd offset unk_130A
		dw 2
		dd 130A9F31h, 13280000h, 20000h, 133A9F30h, 135A0000h
		dd 20000h, 9F31h, 0
		db 2 dup(0)
off_A4FA	dd offset loc_12DC	; DATA XREF: .debug_info:00006910o
		dd offset unk_130A
		dw 2
		dd 133A9F31h, 135A0000h, 20000h, 9F30h,	0
		db 2 dup(0)
off_A51A	dd offset _msim_parse	; DATA XREF: .debug_info:000069D6o
		dd offset loc_1361
		dw 2
		dd 13610474h, 13620000h, 20000h, 13620874h, 13630000h
		dd 20000h, 13630C74h, 13640000h, 20000h, 13641074h, 13670000h
		dd 20000h, 13671474h, 14100000h, 30000h, 1000D074h, 11000014h
		dd 2000014h, 11147400h,	12000014h, 2000014h, 12107400h
		dd 13000014h, 2000014h,	130C7400h, 14000014h, 2000014h
		dd 14087400h, 18000014h, 2000014h, 18047400h, 0B4000014h
		dd 3000014h, 0D07400h, 2 dup(0)
off_A5B4	dd offset loc_13B7	; DATA XREF: .debug_info:000069FAo
		dd offset loc_13CB+4
		dd 0CF500001h, 0FB000013h, 1000013h, 14155700h,	14650000h
		dd 10000h, 57h,	0
		db 0
off_A5DD	dd offset loc_13D4	; DATA XREF: .debug_info:00006A0Co
		dd offset loc_13DA
		db 1, 0, 56h
		dd offset loc_13DF
		dd offset loc_13F3
		dd 15520001h, 1F000014h, 1000014h, 5200h, 0
		db 2 dup(0)
off_A606	dd offset loc_13D2	; DATA XREF: .debug_info:00006A1Fo
		dd offset loc_13DA
		dw 1
		dd 13DA50h, 13FB00h, 55000100h,	1415h, 146Ah, 550001h
		dd 0
		db 3 dup(0)
off_A62F	dd offset loc_1396	; DATA XREF: .debug_info:00006A2Fo
		dd offset loc_13DA
		db 2
		dd 0DA9F3000h, 0F3000013h, 1000013h, 14155600h,	146A0000h
		dd 10000h, 146A56h, 148B00h, 30000200h,	9Fh, 0
		db 0
off_A665	dd offset unk_1415	; DATA XREF: .debug_info:00006A41o
		dd offset loc_141B+4
		db 1, 0, 52h
		dd 2 dup(0)
off_A678	dd offset loc_13D2	; DATA XREF: .debug_info:00006A4Fo
		dd offset loc_13DA
		dd 9F300002h, 13DBh, 13F3h, 15530001h, 6A000014h, 1000014h
		dd 5300h, 0
		db 2 dup(0)
off_A6A2	dd offset loc_137E	; DATA XREF: .debug_info:00006A7Co
		dd offset loc_13FB
		dw 2
		dd 14159F31h, 148B0000h, 20000h, 148B9F31h, 14AF0000h
		dd 20000h, 9F30h, 0
		db 2 dup(0)
off_A6CE	dd offset loc_142C	; DATA XREF: .debug_info:00006A9Ao
					; .debug_info:00006ADBo
		dd offset loc_1437+4
		dw 2
		dd offset byte_4891
		dd 0
		db 2 dup(0)
off_A6E2	dd offset loc_142C	; DATA XREF: .debug_info:00006AA3o
					; .debug_info:00006AE4o
		dd offset unk_146A
		dw 3
		dd 9F2D08h, 0
		db 3 dup(0)
off_A6F7	dd offset loc_142C	; DATA XREF: .debug_info:00006AACo
					; .debug_info:00006AEDo
		dd offset loc_1437+4
		db 1
		dd offset off_5000
		dd 0
		db 2 dup(0)
off_A70A	dd offset loc_142C	; DATA XREF: .debug_info:00006AB5o
		dd offset loc_1465
		dw 1
		dd offset loc_57
		dd 0
		db 0
off_A71D	dd offset loc_142C	; DATA XREF: .debug_info:00006AD2o
		dd offset unk_146A
		db 2, 0, 31h
		dd offset loc_9D+2
		dd 0
		db 0
off_A731	dd offset loc_143C	; DATA XREF: .debug_info:00006AFFo
		dd offset loc_145E+4
		db 1, 0, 50h
		dd 2 dup(0)
off_A744	dd offset _msim_msg_get	; DATA XREF: .debug_info:00006C4Bo
		dd offset loc_14B7
		dd 4740002h, 14B7h, 14E4h, 20740002h, 14E4h, 14E5h, 4740002h
		dd 14E5h, 14EEh, 20740002h, 2 dup(0)
off_A77C	dd offset loc_14CF	; DATA XREF: .debug_info:00006C7Fo
		dd offset loc_14D5
		dd 0E5500001h, 0E7000014h, 1000014h, 5000h, 0
		db 2 dup(0)
off_A79A	dd offset _msim_msg_get_string_from_element
					; DATA XREF: .debug_info:00006CDCo
		dd offset loc_14F3
		dw 2
		dd 14F30474h, 155C0000h, 20000h, 155C3074h, 15600000h
		dd 20000h, 15600474h, 15760000h, 20000h, 15763074h, 157C0000h
		dd 20000h, 157C0474h, 15920000h, 20000h, 15923074h, 15980000h
		dd 20000h, 15980474h, 15E30000h, 20000h, 3074h,	0
		db 2 dup(0)
off_A802	dd offset loc_150B	; DATA XREF: .debug_info:00006D1Do
		dd offset loc_1549
		dw 2
		dd 155D9F31h, 15AD0000h, 20000h, 15AD9F31h, 15D30000h
		dd 20000h, 15D39F30h, 15DE0000h, 20000h, 9F31h,	0
		db 2 dup(0)
off_A83A	dd offset _msim_msg_get_string ; DATA XREF: .debug_info:00006DDDo
		dd offset loc_15E7
		dw 2
		dd 15E70474h, 161D0000h, 20000h, 161D3074h, 16240000h
		dd 20000h, 16240474h, 16350000h, 20000h, 16353074h, 16360000h
		dd 20000h, 16360474h, 163B0000h, 20000h, 3074h,	0
		db 2 dup(0)
off_A88A	dd offset loc_1606	; DATA XREF: .debug_info:00006E10o
		dd offset loc_161D+4
		dw 1
		dd 162250h, 162600h, 50000100h,	2 dup(0)
off_A8A8	dd offset _msim_msg_get_list ; DATA XREF: .debug_info:00006F1Co
		dd offset loc_163D
		dd 4740002h, 163Dh, 163Eh, 8740002h, 163Eh, 163Fh, 0C740002h
		dd 163Fh, 1640h, 10740002h, 1640h, 1643h, 14740002h, 1643h
		dd 16B4h, 0D0740003h, 16B400h, 16B500h,	74000200h, 16B514h
		dd 16B600h, 74000200h, 16B610h,	16B700h, 74000200h, 16B70Ch
		dd 16B800h, 74000200h, 16B808h,	16BC00h, 74000200h, 16BC04h
		dd 16D200h, 74000300h, 16D200D0h, 16D30000h, 20000h, 16D31474h
		dd 16D40000h, 20000h, 16D41074h, 16D50000h, 20000h, 16D50C74h
		dd 16D60000h, 20000h, 16D60874h, 16DC0000h, 20000h, 16DC0474h
		dd 17940000h, 30000h, 0D074h, 0
		db 3 dup(0)
off_A98B	dd offset loc_1662	; DATA XREF: .debug_info:00006F4Fo
		dd offset loc_1679
		db 1
		dd 16B95000h, 16CF0000h, 10000h, 16DB50h, 16EF00h, 50000100h
		dd 1782h, 178Bh, 500001h, 0
		db 3 dup(0)
off_A9BF	dd offset loc_166A	; DATA XREF: .debug_info:00006F6Co
		dd offset loc_1679
		db 1
		dd 16B95000h, 16CF0000h, 10000h, 16DB50h, 16EF00h, 50000100h
		dd 2 dup(0)
off_A9E8	dd offset unk_16DB	; DATA XREF: .debug_info:00006F93o
		dd offset loc_16EF
		dd 0C700002h, 2	dup(0)
off_A9FC	dd offset loc_16FB	; DATA XREF: .debug_info:00006FA1o
		dd offset loc_1710
		dd 10500001h, 78000017h, 2000017h, 8B4C9100h, 8F000017h
		dd 1000017h, 5000h, 0
		db 2 dup(0)
off_AA26	dd offset loc_16FB	; DATA XREF: .debug_info:00006FAAo
		dd offset loc_1710
		dw 2
		dd 175A9F30h, 17630000h, 10000h, 176350h, 176700h, 55000100h
		dd 178Bh, 178Fh, 9F300002h, 2 dup(0)
off_AA5C	dd offset loc_16FB	; DATA XREF: .debug_info:00006FB3o
		dd offset loc_1710
		dd 9F300002h, 175Bh, 1767h, 8B570001h, 8F000017h, 2000017h
		dd 9F3000h, 0
		db 3 dup(0)
off_AA87	dd offset loc_1722	; DATA XREF: .debug_info:00006FC9o
		dd offset loc_172D+4
		db 1
		dd 17315000h, 17670000h, 10000h, 53h, 0
		db 0
off_AAA5	dd offset _msim_msg_get_dictionary ; DATA XREF:	.debug_info:000071D5o
		dd offset loc_1795
		db 2, 0, 74h
		dd 179504h, 179600h, 74000200h,	179608h, 179700h, 74000200h
		dd 17970Ch, 179800h, 74000200h,	179810h, 179B00h, 74000200h
		dd 179B14h, 180C00h, 74000300h,	180C00D0h, 180D0000h, 20000h
		dd 180D1474h, 180E0000h, 20000h, 180E1074h, 180F0000h
		dd 20000h, 180F0C74h, 18100000h, 20000h, 18100874h, 18140000h
		dd 20000h, 18140474h, 182E0000h, 30000h, 2E00D074h, 2F000018h
		dd 2000018h, 2F147400h,	30000018h, 2000018h, 30107400h
		dd 31000018h, 2000018h,	310C7400h, 32000018h, 2000018h
		dd 32087400h, 38000018h, 2000018h, 38047400h, 0BC000018h
		dd 3000019h, 0D07400h, 2 dup(0)
off_AB88	dd offset loc_17BA	; DATA XREF: .debug_info:00007208o
		dd offset loc_17D1
		dd 11500001h, 27000018h, 1000018h, 18375000h, 183B0000h
		dd 10000h, 19AE50h, 19B700h, 50000100h,	2 dup(0)
off_ABBC	dd offset loc_17C2	; DATA XREF: .debug_info:00007225o
		dd offset loc_17D1
		dd 11500001h, 27000018h, 1000018h, 18375000h, 183B0000h
		dd 10000h, 50h,	0
		db 0
off_ABE5	dd offset loc_183F	; DATA XREF: .debug_info:0000724Co
		dd offset loc_184E+4
		db 1, 0, 50h
		dd offset loc_184E+4
		dd offset unk_197D
		dd 4C910002h, 197Dh, 199Bh, 9B500001h, 0A3000019h, 2000019h
		dd 4C9100h, 0
		db 3 dup(0)
off_AC1B	dd offset loc_1855	; DATA XREF: .debug_info:0000725Eo
		dd offset loc_186C+4
		db 1
		dd 18705000h, 18DA0000h, 10000h, 18E257h, 197D00h, 57000100h
		dd 2 dup(0)
off_AC44	dd offset loc_1879	; DATA XREF: .debug_info:00007267o
		dd offset loc_1888
		dd 0E8500001h, 3000018h, 1000019h, 5000h, 0
		db 2 dup(0)
off_AC62	dd offset loc_1875	; DATA XREF: .debug_info:00007270o
		dd offset loc_1879
		dw 1
		dd 187950h, 188800h, 52000100h,	1888h, 197Dh, 48910002h
		dd 2 dup(0)
off_AC8C	dd offset loc_1888	; DATA XREF: .debug_info:00007279o
		dd offset loc_188B
		dd 8B500001h, 0EC000018h, 1000018h, 19065300h, 192B0000h
		dd 10000h, 192B50h, 193400h, 53000100h,	1945h, 197Dh, 530001h
		dd 0
		db 3 dup(0)
off_ACCB	dd offset loc_1875	; DATA XREF: .debug_info:00007282o
		dd offset loc_1888
		db 2
		dd 9F3000h, 0
		db 3 dup(0)
off_ACDF	dd offset loc_1847	; DATA XREF: .debug_info:000072A3o
		dd offset unk_197D
		db 2
		dd 7D9F3100h, 0A3000019h, 2000019h, 9F3000h, 0
		db 3 dup(0)
off_ACFF	dd offset loc_1888	; DATA XREF: .debug_info:000072B6o
		dd offset loc_18A9
		db 1
		dd 19085500h, 19340000h, 10000h, 194555h, 197D00h, 55000100h
		dd 2 dup(0)
off_AD28	dd offset loc_188B	; DATA XREF: .debug_info:000072BFo
		dd offset loc_1896+4
		dd 45500001h, 63000019h, 1000019h, 5000h, 0
		db 2 dup(0)
off_AD46	dd offset loc_18A9	; DATA XREF: .debug_info:000072DCo
					; .debug_info:0000731Do
		dd offset loc_18B0+4
		dw 2
		dd offset off_4490+1
		dd 0
		db 2 dup(0)
off_AD5A	dd offset loc_18A9	; DATA XREF: .debug_info:000072E5o
					; .debug_info:00007326o
		dd offset loc_18EC
		dw 3
		dd 9F2D08h, 0
		db 3 dup(0)
off_AD6F	dd offset loc_18A9	; DATA XREF: .debug_info:000072EEo
					; .debug_info:0000732Fo
		dd offset loc_18B0+4
		db 1
		dd 18B45000h, 18EC0000h, 10000h, 55h, 0
		db 0
off_AD8D	dd offset loc_18A9	; DATA XREF: .debug_info:000072F7o
		dd offset loc_18DA
		db 1, 0, 57h
		align 10h
off_ADA0	dd offset loc_18A9	; DATA XREF: .debug_info:00007314o
		dd offset loc_18EC
		dd 9F310002h, 2	dup(0)
off_ADB4	dd offset loc_18B5	; DATA XREF: .debug_info:00007341o
		dd offset loc_18D3+4
		dd 500001h, 0
		db 3 dup(0)
off_ADC7	dd offset _msim_msg_get_integer_from_element
					; DATA XREF: .debug_info:0000754Bo
		dd offset loc_19BF
		db 2
		dd 0BF047400h, 0F6000019h, 2000019h, 0F6307400h, 0F8000019h
		dd 2000019h, 0F8047400h, 0E000019h, 200001Ah, 0E307400h
		dd 1400001Ah, 200001Ah,	14047400h, 4100001Ah, 200001Ah
		dd 307400h, 0
		db 3 dup(0)
off_AE17	dd offset loc_19D3	; DATA XREF: .debug_info:0000758Co
		dd offset loc_19E7
		db 2
		dd 0F79F3100h, 19000019h, 200001Ah, 199F3100h, 3C00001Ah
		dd 200001Ah, 9F3000h, 0
		db 3 dup(0)
off_AE43	dd offset _msim_msg_get_integer	; DATA XREF: .debug_info:00007609o
		dd offset loc_1A47
		db 2
		dd 47047400h, 7D00001Ah, 200001Ah, 7D307400h, 8400001Ah
		dd 200001Ah, 84047400h,	9500001Ah, 200001Ah, 95307400h
		dd 9600001Ah, 200001Ah,	96047400h, 9B00001Ah, 200001Ah
		dd 307400h, 0
		db 3 dup(0)
off_AE93	dd offset loc_1A66	; DATA XREF: .debug_info:0000763Co
		dd offset loc_1A7D+4
		db 1
		dd 1A825000h, 1A860000h, 10000h, 50h, 0
		db 0
off_AEB1	dd offset _msim_msg_get_binary ; DATA XREF: .debug_info:000076FBo
		dd offset loc_1A9D
		db 2, 0, 74h
		dd 1A9D04h, 1A9E00h, 74000200h,	1A9E08h, 1A9F00h, 74000200h
		dd 1A9F0Ch, 1AA200h, 74000200h,	1AA210h, 1B1100h, 74000200h
		dd 1B1130h, 1B1200h, 74000200h,	1B1210h, 1B1300h, 74000200h
		dd 1B130Ch, 1B1400h, 74000200h,	1B1408h, 1B1800h, 74000200h
		dd 1B1804h, 1B6800h, 74000200h,	30h, 0
		db 0
off_AF31	dd offset loc_1AC9	; DATA XREF: .debug_info:0000774Co
		dd offset loc_1AE0
		db 1, 0, 50h
		dd offset unk_1B15
		dd offset loc_1B1E
		dd 3A500001h, 4300001Bh, 100001Bh, 1B575000h, 1B5A0000h
		dd 10000h, 50h,	0
		db 0
off_AF65	dd offset loc_1AD1	; DATA XREF: .debug_info:00007769o
		dd offset loc_1B02
		db 1, 0, 53h
		dd offset unk_1B15
		dd offset unk_1B57
		dd 5C530001h, 6300001Bh, 100001Bh, 5300h, 0
		db 2 dup(0)
off_AF8E	dd offset loc_1AD1	; DATA XREF: .debug_info:00007772o
		dd offset loc_1B02
		dw 1
		dd 1B1556h, 1B5700h, 56000100h,	1B5Ch, 1B63h, 560001h
		dd 0
		db 3 dup(0)
off_AFB7	dd offset loc_1AD1	; DATA XREF: .debug_info:0000777Bo
		dd offset loc_1AE0
		db 1
		dd 1B155000h, 1B1E0000h, 10000h, 1B3A50h, 1B4300h, 50000100h
		dd 2 dup(0)
off_AFE0	dd offset loc_1B1B	; DATA XREF: .debug_info:00007789o
		dd offset unk_1B3A
		dd 570001h, 0
		db 3 dup(0)
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 0AFF4h
		dd 1Ch
		db 2, 0
		dd offset off_2804
		dw 4
		dd 0
		dd offset _msim_msg_list_copy ;	jumptable 000002B4 cases 16,38,51,57,64
		dd offset _msim_escape_replacements
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 0B014h
off_B014	dd offset loc_174	; DATA XREF: .debug_info:00004EAFo
		dd offset loc_18A
		dd offset loc_191
		dd offset loc_1B5
		dd 2 dup(0)
off_B02C	dd offset loc_4D8	; DATA XREF: .debug_info:0000536Fo
		dd offset loc_529
		dd offset loc_554
		dd offset loc_57A
		dd 2 dup(0)
off_B044	dd offset loc_50D	; DATA XREF: .debug_info:000053A2o
		dd offset loc_529
		dd offset loc_564
		dd offset loc_57A
		dd 2 dup(0)
off_B05C	dd offset loc_5C4	; DATA XREF: .debug_info:off_549Fo
		dd offset loc_63E
		dd offset loc_674
		dd offset loc_6A0
		dd 2 dup(0)
off_B074	dd offset loc_623	; DATA XREF: .debug_info:000054D2o
		dd offset loc_63E
		dd offset loc_678
		dd offset loc_6A0
		dd 2 dup(0)
off_B08C	dd offset loc_F8F	; DATA XREF: .debug_info:000062F0o
		dd offset loc_FB5
		dd offset loc_102C
		dd offset loc_1050
		dd 2 dup(0)
off_B0A4	dd offset loc_F8F	; DATA XREF: .debug_info:00006305o
		dd offset loc_FB5
		dd offset loc_102C
		dd offset loc_1050
		dd 2 dup(0)
off_B0BC	dd offset loc_10B8	; DATA XREF: .debug_info:00006516o
		dd offset loc_10F5
		dd offset loc_1108
		dd offset loc_1162
		dd 2 dup(0)
off_B0D4	dd offset loc_10B8	; DATA XREF: .debug_info:00006534o
		dd offset loc_10F5
		dd offset loc_1108
		dd offset loc_1162
		dd 2 dup(0)
off_B0EC	dd offset loc_1188	; DATA XREF: .debug_info:00006688o
		dd offset loc_11D9
		dd offset loc_11EC
		dd offset loc_1258
		dd 2 dup(0)
off_B104	dd offset loc_1188	; DATA XREF: .debug_info:000066A6o
		dd offset loc_11D9
		dd offset loc_11EC
		dd offset loc_1258
		dd 2 dup(0)
off_B11C	dd offset loc_166A	; DATA XREF: .debug_info:00006F5Co
		dd offset loc_169F
		dd offset loc_16BC
		dd offset loc_16CF
		dd offset loc_16D6
		dd offset loc_170A
		dd offset loc_1710
		dd offset loc_1784
		dd offset loc_178B
		dd offset loc_178F
		dd 2 dup(0)
off_B14C	dd offset loc_166A	; DATA XREF: .debug_info:00006F71o
		dd offset loc_169F
		dd offset loc_16BC
		dd offset loc_16CF
		dd offset loc_16D6
		dd offset loc_170A
		dd offset loc_1710
		dd offset loc_1784
		dd offset loc_178B
		dd offset loc_178F
		dd 2 dup(0)
off_B17C	dd offset loc_16DC	; DATA XREF: .debug_info:00006F83o
		dd offset loc_170A
		dd offset loc_1710
		dd offset loc_1778
		dd offset loc_178B
		dd offset loc_178F
		dd 2 dup(0)
off_B19C	dd offset loc_16DC	; DATA XREF: .debug_info:00006F98o
		dd offset loc_170A
		dd offset loc_1710
		dd offset loc_1778
		dd offset loc_178B
		dd offset loc_178F
		dd 2 dup(0)
off_B1BC	dd offset loc_17C2	; DATA XREF: .debug_info:00007215o
		dd offset loc_17F7
		dd offset loc_1814
		dd offset loc_182B
		dd offset loc_1832
		dd offset loc_19B0
		dd 2 dup(0)
off_B1DC	dd offset loc_17C2	; DATA XREF: .debug_info:0000722Ao
		dd offset loc_17F7
		dd offset loc_1814
		dd offset loc_182B
		dd offset loc_1832
		dd offset loc_19B0
		dd 2 dup(0)
off_B1FC	dd offset loc_1888	; DATA XREF: .debug_info:000072A9o
		dd offset loc_18E5
		dd offset loc_18EC
		dd offset loc_1934
		dd offset loc_1948
		dd offset loc_196C
		dd 2 dup(0)
off_B21C	dd offset loc_1AD1	; DATA XREF: .debug_info:00007759o
		dd offset loc_1B02
		dd offset loc_1B18
		dd offset loc_1B58
		dd offset loc_1B5C
		dd offset loc_1B63
		dd 2 dup(0)
off_B23C	dd offset loc_1AD1	; DATA XREF: .debug_info:00007780o
		dd offset loc_1B02
		dd offset loc_1B18
		dd offset loc_1B58
		dd offset loc_1B5C
		dd offset loc_1B63
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 0B25Ch
off_B25C	dd offset loc_8E4+6	; DATA XREF: .debug_info:0000287Ao
		dd 36D0002h, 1010000h, 0D0EFBh,	1010101h, 1000000h, 2E010000h
		dd 2E2E2F2Eh, 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh
		dd 6B74672Fh, 305F325Fh, 312E322Dh, 6E692F34h, 64756C63h
		dd 6C672F65h, 322D6269h, 672F302Eh, 62696Ch, 772F3A63h
		dd 736B726Fh, 65636170h, 6469702Fh, 2D6E6967h, 65766564h
		dd 69772F6Ch, 2D32336Eh, 2F766564h, 676E696Dh, 2E342D77h
		dd 2F322E37h, 2F6E6962h, 6C2F2E2Eh, 672F6269h, 6D2F6363h
		dd 77676E69h, 342F3233h, 322E372Eh, 2F2E2E2Fh, 2E2F2E2Eh
		dd 2E2E2F2Eh, 636E692Fh, 6564756Ch, 2F3A6300h, 6B726F77h
		dd 63617073h, 69702F65h, 6E696764h, 7665642Dh, 772F6C65h
		dd 32336E69h, 7665642Dh, 6E696D2Fh, 342D7767h, 322E372Eh
		dd 6E69622Fh, 2F2E2E2Fh, 2F62696Ch, 2F636367h, 676E696Dh
		dd 2F323377h, 2E372E34h, 6E692F32h, 64756C63h, 3A630065h
		dd 726F772Fh, 6170736Bh, 702F6563h, 69676469h, 65642D6Eh
		dd 2F6C6576h, 336E6977h, 65642D32h, 696D2F76h, 2D77676Eh
		dd 2E372E34h, 69622F32h, 2E2E2F6Eh, 62696C2Fh, 6363672Fh
		dd 6E696D2Fh, 32337767h, 372E342Fh, 2E2F322Eh, 2E2E2F2Eh
		dd 2F2E2E2Fh, 692F2E2Eh, 756C636Eh, 732F6564h, 2E007379h
		dd 2E2E2F2Eh, 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh
		dd 6B74672Fh, 305F325Fh, 312E322Dh, 696C2F34h, 6C672F62h
		dd 322D6269h, 692F302Eh, 756C636Eh, 2E006564h, 2E2E2F2Eh
		dd 2F2E2E2Fh, 7062696Ch, 6C707275h, 2E2E0065h, 2F2E2E2Fh
		dd 6C2F2E2Eh, 75706269h, 656C7072h, 64656D2Fh, 2E2F6169h
		dd 6D00002Eh, 61737365h, 632E6567h, 0
aGstring_h	db 'gstring.h',0
		dw 1
		dd 64747300h, 682E6F69h, 200h, 61647473h, 682E6772h, 300h
		dd 65707974h, 682E73h, 74000004h, 2E656D69h, 20068h, 696C6700h
		dd 6E6F6362h, 2E676966h, 50068h, 79746700h, 2E736570h
		dd 10068h, 696C6700h, 682E7473h, 100h, 73616867h, 682E68h
		dd 67000001h, 73696C73h, 682E74h, 67000001h, 7373656Dh
		dd 73656761h, 100682Eh,	63610000h, 6E756F63h, 682E74h
		dd 63000006h, 656E6E6Fh, 6F697463h, 682E6Eh, 70000006h
		dd 6967756Ch, 682E6Eh, 70000006h, 6967756Ch, 6572706Eh
		dd 682E66h, 73000006h, 75746174h, 682E73h, 62000006h, 79646475h
		dd 6E6F6369h, 600682Eh,	6F630000h, 7265766Eh, 69746173h
		dd 682E6E6Fh, 600h, 2E676F6Ch, 60068h, 6F727000h, 682E7978h
		dd 600h, 76697270h, 2E796361h, 60068h, 73656D00h, 65676173h
		dd 682Eh, 65730000h, 6F697373h,	682E6Eh, 70000000h, 69737265h
		dd 682E7473h, 0
aCtype_h	db 'ctype.h',0
		dd 67000002h, 66727473h, 73636E75h, 100682Eh, 6D670000h
		dd 682E6D65h, 100h, 69727473h, 682E676Eh, 200h,	6C697475h
		dd 700682Eh, 65640000h,	2E677562h, 60068h, 73796D00h, 65636170h
		dd 682Eh, 74730000h, 62696C64h,	200682Eh, 0
		db 5, 2
		dd offset _msim_msg_list_copy ;	jumptable 000002B4 cases 16,38,51,57,64
		dw 8B03h
		dd 0B2740104h, 2040200h, 4020067h, 79730802h, 87DE303h
		dd 0B4660882h, 8230884h, 3E084B14h, 22022108h, 2008513h
		dd 750204h, 0AB020402h,	6A03855Ch, 16037408h, 0FD03E408h
		dd 0AF908200h, 1040200h, 3068206h, 68820Bh, 3010402h, 3077F278h
		dd 31A2202h, 3660879h, 3E40876h, 0F7034A11h, 0BD3C827Eh
		dd 3CD084Dh, 0DD2E0879h, 0E4660A03h, 3AC0E03h, 2DAC3Bh
		dd 6030402h, 4F080682h,	0BF033D4Bh, 8A82087Fh, 402003Bh
		dd 820603h, 6030402h, 3D445A08h, 0BB082F08h, 77AF98BBh
		dd 0BB5A0886h, 0BA6E03h, 6030402h, 40200F2h, 5A080603h
		dd 8666803h, 74290384h,	5B08D7h, 0BB020402h, 2040200h
		dd 2009108h, 791E0204h,	665603F3h, 402003Bh, 4A0603h, 6030402h
		dd 2C035A08h, 0BA5E0374h, 86E03C0h, 7418032Eh, 2E086303h
		dd 39E3A03h, 0AC587DABh, 3CAD7B1h, 2005877h, 11030104h
		dd 4020066h, 2005901h, 4C3A0104h, 65C91FFFh, 0D4030204h
		dd 91AE4A00h, 0A2030104h, 1A03827Fh, 7503F34Ah,	2046608h
		dd 0F200D103h, 0BA030104h, 358087Fh, 0B1AC6609h, 3208CAD7h
		dd 9F085785h, 4C65C91Fh, 1040200h, 67064A06h, 30204BCh
		dd 83CA9024h, 4E030104h, 0D6180366h, 86D03F3h, 3020474h
		dd 4B24A29h, 8640301h, 2E403BAh, 3740882h, 2FBCAC57h, 25033D75h
		dd 733D083Ch, 0AC7DA903h, 0AC12039Eh, 3740A03h,	0E7083C2Bh
		dd 594A4C03h, 83F3449h,	8846835h, 2E240370h, 86A034Dh
		dd 8846874h, 66033370h,	3AD0882h, 8468821Ch, 3337008h
		dd 8568826Ah, 3346F08h,	11038274h, 2012402h, 6F031A24h
		dd 3012402h, 123021Dh, 74580C03h, 3954CBEh, 0A03F276h
		dd 28D034Ah, 3E40882h, 8AC7FBCh, 75752F22h, 3C00C503h
		dd 737508AEh, 9E00D603h, 0F44EAF82h, 34B7608h, 52120878h
		dd 827FBB03h, 0AC0B03E4h, 8AC1B03h, 2090375h, 5B030137h
		dd 0C037408h, 0C8150382h, 8640377h, 0F21903E4h,	7EEA0375h
		dd 2FBC2008h, 31039F75h, 0E0033Ch, 907503BAh, 826B03F3h
		dd 580C033Dh, 359083Eh,	0C8035812h, 0AE906600h,	2040200h
		dd 402004Dh, 2003202h, 9F0204h,	0AD020402h, 2040200h, 3827703h
		dd 3D08740Bh, 0C8230357h, 84FAD82h, 5949F375h, 87FA103h
		dd 3BB7474h, 7808AC1Bh,	20086103h, 8821703h, 3C780336h
		dd 3667303h, 32E0815h, 86B3C6Bh, 0C035B2Fh, 74032E08h
		dd 580C033Ch, 82582203h, 0A07884B1h, 860349F3h,	0BB74BA01h
		dd 8C9084Ch, 3E7082Bh, 0B0908214h, 0BCBB4BD7h, 81B084Bh
		dd 820E03E9h, 384B090h,	2DAC2Bh, 6030402h, 4020082h, 0AF080603h
		dd 851033Eh, 820A0374h,	1040200h, 40200ADh, 8240301h, 402003Ch
		dd 585C0301h, 0D8821203h, 755B089Fh, 5B037CEDh,	14037408h
		dd 2007408h, 0AC060104h, 1040200h, 8190306h, 4020074h
		dd 58670301h, 7FBF0385h, 3F03843Ch, 7603C808h, 75033E74h
		dd 29038208h, 57036608h, 82780358h, 24022C03h, 7FAE0301h
		dd 40200BAh, 23E0302h, 2000124h, 19030204h, 2003C08h, 67030204h
		dd 74740358h, 23022503h, 7EEC0301h, 78B4D658h, 0D034CA0h
		dd 0B40883ACh, 2E086A03h, 3820903h, 84E40809h, 8269034Bh
		dd 0C8081803h, 667FA203h, 0AC0903D6h, 1703A078h, 340283ACh
		dd 860031Ah, 820D032Eh,	8790376h, 8140382h, 34B84E4h, 0E038273h
		dd 1AE03F2h, 0B0B29082h, 903BDBDh, 0BDC8BA08h, 84C764Ch
		dd 357F33Eh, 9037478h, 3708AC08h, 0B03CD08h, 84B4AC66h
		dd 2007908h, 90060104h,	8D8A606h, 1F682D9Fh, 1F705049h
		dd 4A170349h, 8740385h,	7BA403BAh, 67F43C08h, 31037575h
		dd 48F0374h, 78084A08h,	3827403h, 123022Bh, 3C580F03h
		dd 324BC9AFh, 74784CF0h, 0F0383BBh, 2D5808h, 6030402h
		dd 4020082h, 0AE080603h, 8790330h, 3350866h, 3623C79h
		dd 32E080Bh, 8613C75h, 20F0371h, 3A20124h, 0AF3C6610h
		dd 0F34E3D08h, 3D03753Bh, 0AF747408h, 69033D08h, 0C8090382h
		dd 1424022Dh, 32E1203h,	3BA0866h, 32E081Ah, 60037466h
		dd 3DB0866h, 51039E2Bh,	8323274h, 75210825h, 73031408h
		dd 0C81003D6h, 12081103h, 3BA1003h, 3903744Bh, 0D5034Ah
		dd 8AF7458h, 8269033Dh,	2DC80903h, 3142402h, 66032E12h
		dd 1A03BA08h, 66036608h, 4C036974h, 8D88474h, 3D0349E5h
		dd 74520382h, 820D033Dh, 879D503h, 752FBC58h, 74310375h
		dd 0D605F703h, 3BAC6203h, 2F92084Fh, 3AE0883h, 6F038217h
		dd 0AE083C08h, 3820F03h, 33C085Ah, 1240237h, 78BA1003h
		dd 4BBB745Ch, 20080A03h, 3308FB30h, 37F6137h, 3E4080Dh
		dd 0AF3C820Fh, 0F34E3E08h, 0C403753Bh, 0D6740800h, 33D08AFh
		dd 2A038241h, 0E6082DC8h, 32E1903h, 3F580856h, 35A2F08h
		dd 13089076h, 3AC2903h,	1B034A69h, 50274h
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 0BB4Ch
aBinary_data	db 'binary_data',0      ; DATA XREF: .debug_info:00007691o
					; .debug_info:00007723o
aDynamic_name	db 'dynamic_name',0     ; DATA XREF: .debug_info:off_47DCo
					; .debug_info:00005589o
aMsim_msg_get_2	db 'msim_msg_get_dictionary_from_element',0
					; DATA XREF: .debug_info:000070ABo
					; .debug_info:000070D2o
aUser_data	db 'user_data',0        ; DATA XREF: .debug_info:00004AF3o
					; .debug_info:off_4B81o ...
a_g_boolean_var	db '_g_boolean_var_',0  ; DATA XREF: .debug_info:00004A65o
					; .debug_info:00004A73o ...
aData		db 'data',0             ; DATA XREF: .debug_info:00002BF3o
					; .debug_info:00002C64o ...
aString		db 'string',0           ; DATA XREF: .debug_info:00004B0Bo
					; .debug_info:00004B99o ...
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00004A45o
					; .debug_info:00004B2Fo ...
aItems		db 'items',0            ; DATA XREF: .debug_info:00004B23o
					; .debug_info:00004BB1o ...
aMsim_msg_get_1	db 'msim_msg_get_list_from_element',0 ; DATA XREF: .debug_info:00006E47o
					; .debug_info:00006E6Eo
aMsim_msg_pack_	db 'msim_msg_pack_element_dict',0 ; DATA XREF: .debug_info:00004AD9o
					; .debug_info:00004B38o
aDebug_str	db 'debug_str',0        ; DATA XREF: .debug_info:00004ACCo
					; .debug_info:000068BAo
aMsim_msg_pac_2	db 'msim_msg_pack_dict',0 ; DATA XREF: .debug_info:000061E9o
					; .debug_info:00006210o
aData_string	db 'data_string',0      ; DATA XREF: .debug_info:00004B17o
					; .debug_info:00004BA5o
aMsim_msg_pac_0	db 'msim_msg_pack_element',0 ; DATA XREF: .debug_info:00004B67o
					; .debug_info:00004BC6o
aElem		db 'elem',0             ; DATA XREF: .debug_info:00004A54o
					; .debug_info:00004AFFo ...
aMsim_msg_dic_1	db 'msim_msg_dictionary_parse',0 ; DATA XREF: .debug_info:000070FBo
					; .debug_info:00007163o
a_purple_reserv	db '_purple_reserved1',0 ; DATA XREF: .debug_info:00003436o
					; .debug_info:0000363Bo ...
a_purple_rese_1	db '_purple_reserved3',0 ; DATA XREF: .debug_info:00003452o
					; .debug_info:off_3657o ...
a_purple_rese_2	db '_purple_reserved4',0 ; DATA XREF: .debug_info:00003460o
					; .debug_info:00003665o ...
aUsername	db 'username',0         ; DATA XREF: .debug_info:00002E1Eo
					; .debug_info:0000467Do ...
aFirst_key	db 'first_key',0        ; DATA XREF: .debug_info:0000569Do
					; .debug_info:00005948o
aReplacement	db 'replacement',0      ; DATA XREF: .debug_info:00005378o
					; .debug_info:000054A8o
aMsim_msg_get_n	db 'msim_msg_get_node',0 ; DATA XREF: .debug_info:00004A0Eo
					; .debug_info:00004A4Eo
a_purple_rese_0	db '_purple_reserved2',0 ; DATA XREF: .debug_info:00003444o
					; .debug_info:00003649o ...
aName		db 'name',0             ; DATA XREF: .debug_info:0000354Fo
					; .debug_info:00003B05o ...
aBinary_length	db 'binary_length',0    ; DATA XREF: .debug_info:0000769Do
					; .debug_info:00007732o
aType		db 'type',0             ; DATA XREF: .debug_info:000034E1o
					; .debug_info:00003AE7o ...
aAccount	db 'account',0          ; DATA XREF: .debug_info:off_3082o
					; .debug_info:00003AF6o ...
aMsim_msg_get_5	db 'msim_msg_get_binary_from_element',0 ; DATA XREF: .debug_info:00007673o
					; .debug_info:000076BDo
aPassword	db 'password',0         ; DATA XREF: .debug_info:00002E3Co
					; .debug_info:00003090o ...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 0BD28h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch
		dd offset loc_1B63-0D8ABh
		dd offset _msim_msg_pack_using
		dd 80E4100h, 0E410286h,	4303830Ch, 4302300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch
		dd offset loc_1B63-0D88Bh
		dd offset loc_FB+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0ACA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 2Ch, 8Ch
		dd offset loc_1B63-0D7CBh
		dd offset loc_A5
		dd 80E4100h, 0E410286h,	4303830Ch, 7102300Eh, 410C0E0Ah
		dd 41080EC3h, 44040EC6h, 0Bh, 18h, 0BCh
		dd offset loc_1B63-0D753h
		dd offset loc_57
		dd 300E4300h, 40E0A7Dh,	0B44h, 3Ch, 0D8h
		dd offset loc_1B63-0D717h
		dd offset loc_24A+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A5702h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4204h, 3Ch, 118h
		dd offset loc_1B63-0D50Bh
		dd offset loc_E2+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0AA902h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 3Ch, 158h
		dd offset loc_1B63-0D467h
		dd offset locret_125
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0AE402h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 3Ch, 198h
		dd offset loc_1B63-0D37Fh
		dd offset loc_63
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0A4E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4504h, 34h, 1D8h
		dd offset loc_1B63-0D35Bh
		dd offset loc_1F0
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
		dd 100E0A9Dh, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 18h
		dd 210h
		dd offset loc_1B63-0D1A3h
		dd offset loc_39
		dd 200E4300h, 40E0A6Ch,	0B41h, 3Ch, 22Ch
		dd offset loc_1B63-0D183h
		dd offset loc_81+3
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A6F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4504h, 20h, 26Ch
		dd offset loc_1B63-0D13Fh
		dd offset loc_5B+2
		dd 80E4100h, 0E430283h,	0A4E0230h, 0C341080Eh, 0B41040Eh
		dd 3Ch,	290h
		dd offset loc_1B63-0D103h
		dd offset loc_166+5
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 2Ch, 2D0h
		dd offset loc_1B63-0CFD7h
		dd offset loc_5F+2
		dd 80E4100h, 0E410286h,	4303830Ch, 5002300Eh, 410C0E0Ah
		dd 41080EC3h, 45040EC6h, 0Bh, 2Ch, 300h
		dd offset loc_1B63-0CFA3h
		dd offset loc_5B+3
		dd 80E4100h, 0E430283h,	0E0A7E30h, 0EC34108h, 4F0B4504h
		dd 41080E0Ah, 41040EC3h, 0Bh, 2Ch, 330h
		dd offset loc_1B63-0CF73h
		dd offset loc_C0
		dd 300E4300h, 0E0A4202h, 5E0B4304h, 46040E0Ah, 0E0A560Bh
		dd 6E0B4604h, 45040E0Ah, 0Bh, 20h, 360h
		dd offset loc_1B63-0CEE3h
		dd offset locret_4A
		dd 80E4100h, 0E430283h,	0E0A7B30h, 0EC34108h, 0B4504h
		dd 18h,	384h
		dd offset loc_1B63-0CEBBh
		dd offset loc_6C+1
		dd 300E4300h, 0E0A4102h, 0B4404h, 2Ch, 3A0h
		dd offset loc_1B63-0CE67h
		dd offset loc_74+5
		dd 80E4100h, 0E410286h,	4303830Ch, 4C02400Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 64h, 3D0h
		dd offset loc_1B63-0CE1Bh
		dd offset loc_254
		dd 80E4100h, 0E410286h,	4303830Ch, 5E02300Eh, 410C0E0Ah
		dd 41080EC3h, 43040EC6h, 0E0A6A0Bh, 0EC3410Ch, 0EC64108h
		dd 20B4804h, 0C0E0AA2h,	80EC341h, 40EC641h, 66020B48h
		dd 410C0E0Ah, 41080EC3h, 48040EC6h, 0A6B020Bh, 0C3410C0Eh
		dd 0C641080Eh, 0B47040Eh, 34h, 438h
		dd offset loc_1B63-0CC2Fh
		dd offset loc_CF
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A66h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
		dd 470h
		dd offset loc_1B63-0CB97h
		dd offset loc_F5
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
		dd 100E0A7Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 2Ch
		dd 4A8h
		dd offset loc_1B63-0CAD7h
		dd offset loc_52
		dd 80E4100h, 0E410286h,	4303830Ch, 4502400Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 38h, 4D8h
		dd offset loc_1B63-0CAB3h
		dd offset loc_A9+2
		dd 80E4100h, 0E410286h,	4303830Ch, 4A02300Eh, 410C0E0Ah
		dd 41080EC3h, 47040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
		dd 0B4304h, 3Ch, 514h
		dd offset loc_1B63-0CA43h
		dd offset loc_152+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0AA902h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 18h, 554h
		dd offset loc_1B63-0C92Fh
		dd offset loc_39+1
		dd 200E4300h, 40E0A6Dh,	0B41h, 24h, 570h
		dd offset loc_1B63-0C90Fh
		dd offset loc_F3
		dd 300E4300h, 0E0A6902h, 560B4404h, 46040E0Ah, 0E0A560Bh
		dd 0B4604h, 1Ch, 598h
		dd offset loc_1B63-0C843h
		dd offset loc_57
		dd 300E4300h, 40E0A76h,	0A510B47h, 0B41040Eh, 54h, 5B8h
		dd offset loc_1B63-0C80Bh
		dd offset loc_157+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A7102h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 560B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 46040EC5h
		db 0Bh
byte_C331	db 3 dup(0)		; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
		dd offset loc_54
		dd offset loc_60E+2
		dd offset loc_1B63-0C70Bh
		dd offset loc_224+4
		dd 80E4100h
		db 85h
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR _msim_msg_debug_string_element

loc_C349:				; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
		add	al, [ecx+0Eh]
		or	al, 87h
		add	eax, [ecx+0Eh]
		adc	[esi+140E4104h], al
		add	dword ptr ds:2500E43h, 71h ; 'q'
		or	cl, [esi]
		adc	al, 41h	; 'A'
		retn
; END OF FUNCTION CHUNK	FOR _msim_msg_debug_string_element
; ---------------------------------------------------------------------------
		db 0Eh
		dd 0EC64110h, 0EC7410Ch, 0EC54108h, 5A0B4404h, 41140E0Ah
		dd 41100EC3h, 410C0EC6h, 41080EC7h, 46040EC5h
		db 0Bh
byte_C389	db 3 dup(0)		; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
		dd 1Ch,	668h
		dd offset loc_1B63-0C53Bh
		dd offset loc_85
		dd 300E4300h, 40E0A77h,	0A560B42h, 0B46040Eh, 1Ch, 688h
		dd offset loc_1B63-0C4D3h
		dd offset loc_57
		dd 300E4300h, 40E0A76h,	0A510B47h, 0B41040Eh, 34h, 6A8h
		dd offset loc_1B63-0C49Bh
		dd offset loc_C7+5
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A6Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near
					; CODE XREF: _msim_msg_debug_string_element:loc_2B4j
					; DATA XREF: _msim_msg_list_copy+7r ...
		extrn _g_strdup:near	; CODE XREF: _msim_msg_list_copy+1Dp
					; _msim_msg_dump_to_str+4Bp ...
		extrn _g_list_append:near ; CODE XREF: _msim_msg_list_copy+29p
					; _msim_msg_append:loc_701j ...
		extrn ___stack_chk_fail:near ; CODE XREF: _msim_msg_list_copy:loc_4Bp
					; _msim_msg_pack_using:loc_148p ...
		extrn _g_list_length:near ; CODE XREF: _msim_msg_pack_using:loc_85p
		extrn _g_malloc0:near	; CODE XREF: _msim_msg_pack_using+46p
					; _msim_msg_append+2Ap	...
		extrn _g_list_foreach:near ; CODE XREF:	_msim_msg_pack_using+60p
					; _msim_msg_clone+3Ap ...
		extrn _g_strjoinv:near	; CODE XREF: _msim_msg_pack_using:loc_C0p
		extrn _g_strconcat:near	; CODE XREF: _msim_msg_pack_using:loc_E2p
					; _msim_msg_pack_element_dict+91p ...
		extrn _g_free:near	; CODE XREF: _msim_msg_pack_using:loc_ECp
					; _msim_msg_pack_using:loc_FEp	...
		extrn _g_return_if_fail_warning:near ; CODE XREF: _msim_msg_pack_using+EFp
					; _msim_msg_get_node+5Ep ...
; int __cdecl strcmp(const char	*, const char *)
		extrn _strcmp:near	; CODE XREF: _msim_msg_get_node:loc_181p
		extrn _g_strdup_printf:near ; CODE XREF: _msim_msg_debug_string_element+3Ep
					; _msim_msg_debug_string_element+88p ...
		extrn _purple_base64_encode:near
					; CODE XREF: _msim_msg_debug_string_element+9Fp
					; _msim_msg_pack_element_data+187p
		extrn _g_string_new:near
					; CODE XREF: _msim_msg_debug_string_element:loc_3C3p
					; _msim_escape+1Dp ...
		extrn _g_string_append_printf:near
					; CODE XREF: _msim_msg_debug_string_element+18Bp
					; _msim_msg_debug_string_element+1B1p ...
		extrn _g_string_free:near
					; CODE XREF: _msim_msg_debug_string_element:loc_419p
					; _msim_escape+9Cp ...
		extrn _g_string_append:near ; CODE XREF: _msim_escape+BFp
					; _msim_msg_pack_element_data:loc_F20p
		extrn _g_string_insert_c:near ;	CODE XREF: _msim_escape:loc_573p
					; _msim_unescape:loc_692p
		extrn _purple_debug_info:near ;	CODE XREF: _msim_msg_new_v:loc_742p
					; _msim_msg_clone_element+38p ...
		extrn _g_list_insert_before:near
					; CODE XREF: _msim_msg_insert_before:loc_9B2j
		extrn _g_log:near	; CODE XREF: _msim_msg_clone_element+6Cp
					; _msim_msg_pack_element+6Cp
		extrn _g_string_new_len:near ; CODE XREF: _msim_msg_clone_element+157p
		extrn _g_list_free:near	; CODE XREF: _msim_msg_list_free+57j
					; _msim_msg_free+43j ...
		extrn _msim_send_raw:near ; CODE XREF: _msim_msg_send:loc_DF5p
		extrn _g_strsplit:near	; CODE XREF: _msim_parse:loc_13CBp
					; _msim_msg_get_list+B6p ...
		extrn _g_strfreev:near	; CODE XREF: _msim_parse+96p
					; _msim_msg_get_list+132p ...
; int __cdecl atoi(const char *)
		extrn _atoi:near	; CODE XREF: _msim_msg_get_integer_from_element+52j
		extrn _g_memdup:near	; CODE XREF: _msim_msg_get_binary+8Bp
		extrn _purple_base64_decode:near ; CODE	XREF: _msim_msg_get_binary+AAp


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	3E19B765428AA163F5F2D7536356F78C
; Input	CRC32 :	CAF05B4E

; File Name   :	d:\pidgin-o\untar.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_cvtwrite_constprop_3 proc near		; CODE XREF: _untar:loc_1D3p
					; _untar+156p
					; DATA XREF: ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h

		push	edi

loc_1:					; DATA XREF: .debug_loc:00003C90o
					; .debug_loc:00003C98o
		push	esi

loc_2:					; DATA XREF: .debug_loc:00003C9Co
					; .debug_loc:00003CA4o
		push	ebx

loc_3:					; DATA XREF: .debug_loc:00003CA8o
					; .debug_loc:00003CB0o
		sub	esp, 20h

loc_6:					; DATA XREF: .debug_loc:00003CB4o
					; .debug_loc:00003CBCo
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], ecx
		xor	ecx, ecx

loc_12:					; DATA XREF: .debug_loc:off_3DADo
		test	byte ptr ds:_untarops, 20h
		jz	short loc_98

loc_1B:					; DATA XREF: .debug_loc:off_3D6Fo
					; .debug_loc:off_3D83o
		test	eax, eax
		jz	short loc_66
		mov	ecx, 1

loc_24:					; DATA XREF: .debug_aranges:00004318o
		xor	esi, esi
		xor	edi, edi
		jmp	short loc_3F
; ---------------------------------------------------------------------------
unk_2A		db  66h	; f		; DATA XREF: .debug_loc:00003D73o
					; .debug_loc:00003D87o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2C:					; CODE XREF: _cvtwrite_constprop_3+48j
		cmp	bl, 0Dh
		jz	short loc_54

loc_31:					; CODE XREF: _cvtwrite_constprop_3+5Fj
		mov	ds:_mod_36524[esi], bl
		inc	esi

loc_38:					; CODE XREF: _cvtwrite_constprop_3:loc_52j
					; DATA XREF: .debug_loc:00003D8Fo
		cmp	eax, ecx
		jbe	short loc_64

loc_3C:					; CODE XREF: _cvtwrite_constprop_3+61j
					; DATA XREF: .debug_loc:00003D93o
		mov	edi, ecx
		inc	ecx

loc_3F:					; CODE XREF: _cvtwrite_constprop_3+28j
		mov	bl, byte ptr ds:_slide[edi]
		cmp	bl, 0Ah
		jnz	short loc_2C

loc_4A:					; DATA XREF: .debug_loc:00003D2Co
		mov	ds:_mod_36524[esi], 0Ah

loc_51:					; DATA XREF: .debug_loc:000040F8o
		inc	esi

loc_52:					; DATA XREF: .debug_loc:00003D9Ao
					; .debug_loc:00003FCCo
		jmp	short loc_38
; ---------------------------------------------------------------------------

loc_54:					; CODE XREF: _cvtwrite_constprop_3+2Fj
					; DATA XREF: .debug_loc:00003D9Eo
		cmp	eax, ecx

loc_56:					; DATA XREF: .debug_loc:00003DA4o
		jbe	short loc_64
		cmp	byte ptr ds:(_slide+1)[edi], 0Ah
		jnz	short loc_31
		jmp	short loc_3C
; ---------------------------------------------------------------------------
		align 4

loc_64:					; CODE XREF: _cvtwrite_constprop_3+3Aj
					; _cvtwrite_constprop_3:loc_56j
		mov	eax, esi

loc_66:					; CODE XREF: _cvtwrite_constprop_3+1Dj
					; DATA XREF: .debug_loc:00003D10o ...
		mov	ecx, offset _mod_36524

loc_6B:					; CODE XREF: _cvtwrite_constprop_3+9Dj
					; DATA XREF: .debug_info:00002295o ...
		mov	[esp+2Ch+var_20], edx ;	FILE *
		mov	[esp+2Ch+var_24], 1 ; size_t
		mov	[esp+2Ch+var_28], eax ;	size_t
		mov	[esp+2Ch+var_2C], ecx ;	void *

loc_7E:					; DATA XREF: .debug_info:0000213Co
					; .debug_loc:00003D1Bo	...
		call	_fwrite

loc_83:					; DATA XREF: .debug_info:00002BDBo
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_9F
		add	esp, 20h

loc_92:					; DATA XREF: .debug_loc:00003CC0o
					; .debug_loc:00003CC8o
		pop	ebx

loc_93:					; DATA XREF: .debug_loc:00003CCCo
					; .debug_loc:00003CD4o
		pop	esi

loc_94:					; DATA XREF: .debug_loc:00003CD8o
					; .debug_loc:00003CE0o
		pop	edi

locret_95:				; DATA XREF: .debug_loc:00003CE4o
					; .debug_loc:00003CECo
		retn
; ---------------------------------------------------------------------------
unk_96		db  66h	; f		; DATA XREF: .debug_loc:00003D22o
					; .debug_loc:00003D44o	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_98:					; CODE XREF: _cvtwrite_constprop_3+19j
					; DATA XREF: .debug_loc:00003CF0o ...
		mov	ecx, offset _slide
		jmp	short loc_6B
; ---------------------------------------------------------------------------

loc_9F:					; CODE XREF: _cvtwrite_constprop_3+8Dj
					; DATA XREF: .debug_loc:00003D26o ...
		call	___stack_chk_fail
_cvtwrite_constprop_3 endp


; =============== S U B	R O U T	I N E =======================================


		public _untar
_untar		proc near		; DATA XREF: .debug_info:00002160o
					; .debug_info:00002B95o ...

nBufferLength	= dword	ptr -46Ch
lpBuffer	= dword	ptr -468h
var_464		= dword	ptr -464h
var_460		= dword	ptr -460h
var_45C		= dword	ptr -45Ch
var_458		= dword	ptr -458h
var_454		= dword	ptr -454h
var_44C		= dword	ptr -44Ch
var_448		= dword	ptr -448h
var_444		= dword	ptr -444h
var_440		= dword	ptr -440h
var_43C		= dword	ptr -43Ch
lpPathName	= dword	ptr -438h
var_434		= dword	ptr -434h
var_430		= dword	ptr -430h
var_428		= byte ptr -428h
var_3C5		= byte ptr -3C5h
var_3AC		= byte ptr -3ACh
var_3A0		= byte ptr -3A0h
var_394		= byte ptr -394h
var_38C		= byte ptr -38Ch
var_38B		= byte ptr -38Bh
var_2CF		= byte ptr -2CFh
Buffer		= word ptr -228h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_A5:					; DATA XREF: .debug_loc:00003E5Fo
					; .debug_loc:00003E67o
		push	edi

loc_A6:					; DATA XREF: .debug_loc:00003E6Bo
					; .debug_loc:00003E73o
		push	esi

loc_A7:					; DATA XREF: .debug_loc:00003E77o
					; .debug_loc:00003E7Fo
		push	ebx

loc_A8:					; DATA XREF: .debug_loc:00003E83o
					; .debug_loc:00003E8Bo	...
		sub	esp, 45Ch

loc_AE:					; DATA XREF: .debug_loc:00003E8Fo
					; .debug_loc:00003E97o
		mov	ebp, [esp+46Ch+arg_0]
		mov	ebx, [esp+46Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+46Ch+var_20], eax

loc_C8:					; DATA XREF: .debug_info:000021E4o
		xor	eax, eax

loc_CA:					; DATA XREF: .debug_loc:off_3F43o
		mov	eax, [esp+46Ch+arg_8]
		mov	ds:_untarops, eax
		mov	ds:_inname, ebp
		mov	[esp+46Ch+lpBuffer], offset aRb	; "rb"
		mov	[esp+46Ch+nBufferLength], ebp
		call	_g_fopen

loc_EC:					; DATA XREF: .debug_info:00003354o
		mov	ds:_infp, eax
		test	eax, eax

loc_F3:					; DATA XREF: .debug_info:00003654o
		jz	loc_528

loc_F9:					; DATA XREF: .debug_info:000021B5o
					; .debug_info:000021D4o
		mov	[esp+46Ch+var_45C], 0
		mov	[esp+46Ch+var_460], 0

loc_109:				; DATA XREF: .debug_info:00003659o
					; .debug_info:000037C8o
		mov	[esp+46Ch+var_464], 0

loc_111:				; DATA XREF: .debug_aranges:00004334o
					; .eh_frame:0000490Co
		mov	[esp+46Ch+lpBuffer], 0FFFFFFFFh
		mov	[esp+46Ch+nBufferLength], ebx
		call	_g_utf8_to_utf16

loc_121:				; DATA XREF: .debug_info:00003373o
		mov	[esp+46Ch+lpPathName], eax

loc_125:				; DATA XREF: .debug_loc:off_3FD5o
		lea	edx, [esp+46Ch+Buffer]
		mov	[esp+46Ch+var_440], edx
		mov	[esp+46Ch+lpBuffer], edx ; lpBuffer
		mov	[esp+46Ch+nBufferLength], 104h ; nBufferLength

loc_13B:				; DATA XREF: .debug_info:00003741o
					; .debug_info:0000220Co ...
		call	_GetCurrentDirectoryW@8

loc_140:				; DATA XREF: .debug_info:000033A1o
					; .debug_loc:00003E9Bo	...
		sub	esp, 8

loc_143:				; DATA XREF: .debug_loc:00003EA8o
					; .debug_loc:00003EB1o
		test	eax, eax
		jz	loc_36C
		mov	eax, [esp+46Ch+lpPathName]
		mov	[esp+46Ch+nBufferLength], eax ;	lpPathName
		call	_SetCurrentDirectoryW@4

loc_157:				; DATA XREF: .debug_info:000033C0o
					; .debug_loc:00003EB5o	...
		push	edx

loc_158:				; DATA XREF: .debug_loc:00003EC2o
					; .debug_loc:00003ECBo
		test	eax, eax

loc_15A:				; DATA XREF: .debug_info:00002234o
		jz	loc_484

loc_160:				; DATA XREF: .debug_info:00002220o
		mov	ebx, 1

loc_165:				; DATA XREF: .debug_info:00002E19o
					; .debug_ranges:off_4340o ...
		lea	edx, [esp+46Ch+var_428]
		mov	[esp+46Ch+var_444], edx
		lea	eax, [esp+46Ch+var_3A0]
		mov	[esp+46Ch+var_448], eax

loc_178:				; CODE XREF: _untar+143j
					; _untar:loc_220j ...
		mov	eax, ds:_infp
		mov	[esp+46Ch+var_460], eax	; FILE *
		mov	[esp+46Ch+var_464], 200h ; size_t
		mov	[esp+46Ch+lpBuffer], 1 ; size_t
		mov	[esp+46Ch+nBufferLength], offset _slide	; void *
		call	_fread

loc_19D:				; DATA XREF: .debug_info:000033D7o
		cmp	eax, 200h
		jnz	loc_308

loc_1A8:				; DATA XREF: .debug_loc:off_407Co
					; .debug_ranges:00004348o ...
		mov	esi, offset _slide
		mov	ecx, 80h ; 'Ä'

loc_1B2:				; DATA XREF: .debug_info:00002288o
		mov	edi, [esp+46Ch+var_444]
		rep movsd
		mov	eax, ds:_outsize
		cmp	eax, 200h
		jbe	short loc_1EC
		mov	edx, ds:_outfp
		test	edx, edx
		jz	short loc_1DD

loc_1CE:				; DATA XREF: .debug_info:000036DDo
					; .debug_info:00003720o ...
		mov	eax, 200h

loc_1D3:				; DATA XREF: .debug_info:00002290o
		call	_cvtwrite_constprop_3

loc_1D8:				; DATA XREF: .debug_info:000030FDo
		mov	eax, ds:_outsize

loc_1DD:				; CODE XREF: _untar+128j
		sub	eax, 200h
		mov	ds:_outsize, eax
		jmp	short loc_178
; ---------------------------------------------------------------------------
		align 4

loc_1EC:				; CODE XREF: _untar+11Ej
		test	eax, eax
		jz	short loc_228
		mov	edx, ds:_outfp
		test	edx, edx
		jz	short loc_216
		call	_cvtwrite_constprop_3

loc_1FF:				; DATA XREF: .debug_info:00003112o
		mov	eax, ds:_outfp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_20C:				; DATA XREF: .debug_info:0000311Bo
		mov	ds:_outfp, 0

loc_216:				; CODE XREF: _untar+154j _untar+64Dj ...
		mov	ds:_outsize, 0

loc_220:				; DATA XREF: .debug_line:00004486o
		jmp	loc_178
; ---------------------------------------------------------------------------
		align 4

loc_228:				; CODE XREF: _untar+14Aj
		cmp	[esp+46Ch+var_428], 0
		jnz	short loc_260
		mov	eax, ds:_didabs
		test	eax, eax
		jz	loc_178
		mov	[esp+46Ch+var_464], offset aRemovedLeading ; "Removed leading slashes because \"ABSPA"...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 3
		call	_purple_debug

loc_258:				; DATA XREF: .debug_info:00003124o
		jmp	loc_178
; ---------------------------------------------------------------------------
		align 10h

loc_260:				; CODE XREF: _untar+189j
		cmp	[esp+46Ch+var_3C5], 0
		jnz	short loc_284
		mov	al, [esp+46Ch+var_3AC]
		cmp	al, 2Fh	; '/'
		jg	loc_3A4
		cmp	al, 20h	; ' '
		jz	loc_3AC
		lea	esi, [esi+0]

loc_284:				; CODE XREF: _untar+1C4j _untar+302j
		mov	eax, _first_36546
		test	eax, eax
		jz	short loc_2E8
		mov	eax, ds:_inname
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aSNotAValidTarF ; "%s: not a	valid tar file\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_2B2:				; CODE XREF: _untar:loc_304j
					; _untar:loc_7C1j
					; DATA XREF: ...
		mov	[esp+46Ch+var_460], ebp
		mov	[esp+46Ch+var_464], offset aUntarFailureS ; "untar failure: %s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_2D2:				; DATA XREF: .debug_info:000033FDo
		mov	eax, ds:_infp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_2DF:				; DATA XREF: .debug_info:0000342Co
					; .debug_loc:00003F53o	...
		xor	ebx, ebx
		jmp	loc_178
; ---------------------------------------------------------------------------
unk_2E6		db  66h	; f		; DATA XREF: .debug_loc:00003F5Eo
					; .debug_loc:00003F66o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_2E8:				; CODE XREF: _untar+1E7j
					; DATA XREF: .debug_ranges:00004350o ...
		mov	[esp+46Ch+var_464], offset aGarbageDetecte ; "Garbage detected;	preceding file may be"...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_304:				; DATA XREF: .debug_info:00003174o
		jmp	short loc_2B2
; ---------------------------------------------------------------------------
unk_306		db  66h	; f		; DATA XREF: .debug_loc:00004080o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_308:				; CODE XREF: _untar+FEj
					; DATA XREF: .debug_ranges:00004354o ...
		mov	ecx, ds:_outsize
		test	ecx, ecx
		jz	short loc_31A
		test	ebx, ebx
		jnz	loc_4C1

loc_31A:				; CODE XREF: _untar+26Cj
					; _untar:loc_4F4j
		lea	edx, [esp+46Ch+Buffer]
		mov	[esp+46Ch+nBufferLength], edx ;	lpPathName
		call	_SetCurrentDirectoryW@4

loc_329:				; DATA XREF: .debug_info:00003435o
					; .debug_loc:00003ECFo	...
		push	edx

loc_32A:				; DATA XREF: .debug_loc:00003EDCo
					; .debug_loc:00003EE5o
		test	eax, eax
		jz	loc_4FC

loc_332:				; CODE XREF: _untar+47Fj
		mov	eax, [esp+46Ch+lpPathName]
		mov	[esp+46Ch+nBufferLength], eax
		call	_g_free

loc_33E:				; DATA XREF: .debug_info:0000344Co
		mov	eax, ds:_infp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_34B:				; CODE XREF: _untar+2FCj _untar+418j ...
		mov	eax, ebx
		mov	edx, [esp+46Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_AAC
		add	esp, 45Ch

loc_366:				; DATA XREF: .debug_loc:00003EE9o
					; .debug_loc:00003EF2o
		pop	ebx

loc_367:				; DATA XREF: .debug_loc:00003EF6o
					; .debug_loc:00003EFEo
		pop	esi

loc_368:				; DATA XREF: .debug_loc:00003F02o
					; .debug_loc:00003F0Ao
		pop	edi

loc_369:				; DATA XREF: .debug_loc:00003F0Eo
					; .debug_loc:00003F16o
		pop	ebp

locret_36A:				; DATA XREF: .debug_loc:00003F1Ao
					; .debug_loc:00003F22o
		retn
; ---------------------------------------------------------------------------
unk_36B		db  90h	; ê		; DATA XREF: .debug_loc:00003F71o
					; .debug_loc:00003FEDo
; ---------------------------------------------------------------------------

loc_36C:				; CODE XREF: _untar+A1j
					; DATA XREF: .debug_loc:00003F26o ...
		call	_GetLastError@0

loc_371:				; DATA XREF: .debug_info:0000346Co
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aCouldNotGetCur ; "Could not	get current directory (error "...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_391:				; DATA XREF: .debug_info:00003475o
		mov	eax, ds:_infp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_39E:				; DATA XREF: .debug_info:0000349Do
		xor	ebx, ebx
		jmp	short loc_34B
; ---------------------------------------------------------------------------
unk_3A2		db  66h	; f		; DATA XREF: .debug_loc:00003F75o
					; .debug_loc:00003F7Do	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_3A4:				; CODE XREF: _untar+1CFj
					; DATA XREF: .debug_ranges:00004358o ...
		cmp	al, 39h	; '9'
		jg	loc_284

loc_3AC:				; CODE XREF: _untar+1D7j
		mov	[esp+46Ch+var_434], offset _nbuf_36543
		mov	ecx, 1000h
		xor	eax, eax
		mov	edi, offset _nbuf_36543
		rep stosb
		cmp	[esp+46Ch+var_2CF], 0
		jz	loc_74D
		lea	edx, [esp+46Ch+var_428]
		mov	[esp+46Ch+var_45C], edx
		lea	eax, [esp+46Ch+var_2CF]
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aSS ; "%s/%s"
		mov	[esp+46Ch+lpBuffer], 1000h ; size_t
		mov	[esp+46Ch+nBufferLength], offset _nbuf_36543 ; char *
		call	_snprintf

loc_3FF:				; CODE XREF: _untar:loc_769j
					; DATA XREF: .debug_info:0000319Co
		mov	edx, ds:_untarops
		mov	[esp+46Ch+var_430], edx
		mov	esi, edx
		and	esi, 10h
		jnz	loc_54F

loc_414:				; DATA XREF: .debug_info:00002E7Eo
					; .debug_line:off_4480o
		mov	[esp+46Ch+lpBuffer], 3Ah ; ':' ; int
		mov	[esp+46Ch+nBufferLength], offset _nbuf_36543 ; char *
		call	_strrchr

loc_428:				; DATA XREF: .debug_info:00002E94o
		mov	edx, eax

loc_42A:				; DATA XREF: .debug_loc:off_40C4o
		test	eax, eax
		jz	short loc_459
		xor	eax, eax

loc_430:				; DATA XREF: .debug_loc:000040C8o
					; .debug_loc:000040CFo
		mov	ecx, 0FFFFFFFFh
		mov	edi, edx
		repne scasb

loc_439:				; DATA XREF: .debug_loc:000040D3o
		not	ecx
		mov	[esp+46Ch+var_464], ecx	; size_t
		mov	[esp+46Ch+lpBuffer], edx ; void	*
		mov	[esp+46Ch+nBufferLength], offset _nbuf_36543 ; void *
		call	_memmove

loc_44F:				; DATA XREF: .debug_info:00002EB2o
		mov	ds:_didabs, 1

loc_459:				; CODE XREF: _untar+388j
					; DATA XREF: .debug_info:00002E82o
		mov	ds:_name_36544,	offset _nbuf_36543
		mov	al, ds:_nbuf_36543
		cmp	al, 2Fh	; '/'
		jz	short loc_474
		cmp	al, 5Ch	; '\'
		jnz	loc_55E

loc_474:				; CODE XREF: _untar+3C6j
		mov	ds:_didabs, 1
		jmp	loc_55E
; ---------------------------------------------------------------------------
unk_483		db  90h	; ê		; DATA XREF: .debug_loc:00003F81o
					; .debug_loc:00003F88o	...
; ---------------------------------------------------------------------------

loc_484:				; CODE XREF: _untar:loc_15Aj
					; DATA XREF: .debug_ranges:0000435Co ...
		call	_GetLastError@0

loc_489:				; DATA XREF: .debug_info:000034A6o
		mov	[esp+46Ch+var_45C], ebx
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aCouldNotSetCur ; "Could not	set current directory to (err"...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_4AD:				; DATA XREF: .debug_info:000034AFo
		mov	eax, ds:_infp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_4BA:				; DATA XREF: .debug_info:000034DEo
		xor	ebx, ebx
		jmp	loc_34B
; ---------------------------------------------------------------------------

loc_4C1:				; CODE XREF: _untar+270j
					; DATA XREF: .debug_loc:00003F8Co ...
		mov	[esp+46Ch+var_464], offset aLastFileMightB ; "Last file	might be truncated!\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 3
		call	_purple_debug

loc_4DD:				; DATA XREF: .debug_info:000034E7o
		mov	eax, ds:_outfp
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_4EA:				; DATA XREF: .debug_info:0000350Fo
		mov	ds:_outfp, 0

loc_4F4:				; DATA XREF: .debug_info:00003600o
		jmp	loc_31A
; ---------------------------------------------------------------------------
		align 4

loc_4FC:				; CODE XREF: _untar+288j
		call	_GetLastError@0

loc_501:				; DATA XREF: .debug_info:00003518o
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aCouldNotSetC_0 ; "Could not	set current dir	back to	origi"...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_521:				; DATA XREF: .debug_info:00003521o
					; .debug_loc:00003F98o	...
		xor	ebx, ebx
		jmp	loc_332
; ---------------------------------------------------------------------------

loc_528:				; CODE XREF: _untar:loc_F3j
					; DATA XREF: .debug_loc:00003FA3o ...
		mov	[esp+46Ch+var_460], ebp
		mov	[esp+46Ch+var_464], offset aErrorOpeningS ; "Error opening: %s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_548:				; DATA XREF: .debug_info:00003549o
		xor	ebx, ebx

loc_54A:				; DATA XREF: .debug_info:00003820o
					; .debug_info:0000383Co
		jmp	loc_34B
; ---------------------------------------------------------------------------

loc_54F:				; CODE XREF: _untar+36Aj
					; DATA XREF: .debug_loc:00003FAFo ...
		mov	ds:_name_36544,	offset _nbuf_36543
		mov	al, ds:_nbuf_36543

loc_55E:				; CODE XREF: _untar+3CAj _untar+3DAj
		mov	ds:_n2_36545, offset _nbuf_36543
		test	al, al
		jz	loc_990

loc_570:				; DATA XREF: .debug_info:00003695o
					; .debug_info:000037F1o
		mov	edi, ds:_name_36544
		mov	ecx, offset _nbuf_36543
		mov	[esp+46Ch+var_434], ecx

loc_57F:				; DATA XREF: .debug_info:000037ECo
		mov	edx, ecx
		jmp	short loc_597
; ---------------------------------------------------------------------------
		align 4

loc_584:				; CODE XREF: _untar+4F5j
		cmp	byte ptr [edx],	2Fh ; '/'
		jz	short loc_59E

loc_589:				; CODE XREF: _untar+504j _untar+50Aj
		mov	al, [edi]
		mov	[ecx], al
		inc	ecx

loc_58E:				; CODE XREF: _untar+50Cj _untar+518j
		inc	edx
		mov	al, [edx]
		test	al, al
		jz	short loc_5C0
		mov	edi, edx

loc_597:				; CODE XREF: _untar+4DDj
		cmp	al, 5Ch	; '\'
		jnz	short loc_584
		mov	byte ptr [edx],	2Fh ; '/'

loc_59E:				; CODE XREF: _untar+4E3j
		test	esi, esi
		jz	short loc_5B4
		cmp	ecx, offset _nbuf_36543
		jz	short loc_589

loc_5AA:				; CODE XREF: _untar+516j
		cmp	byte ptr [ecx-1], 2Fh ;	'/'
		jnz	short loc_589
		jmp	short loc_58E
; ---------------------------------------------------------------------------
		align 4

loc_5B4:				; CODE XREF: _untar+4FCj
		cmp	ecx, offset _nbuf_36543
		jnz	short loc_5AA
		jmp	short loc_58E
; ---------------------------------------------------------------------------
		align 10h

loc_5C0:				; CODE XREF: _untar+4EFj
		mov	ds:_n2_36545, ecx
		mov	ds:_name_36544,	edx
		cmp	ecx, offset _nbuf_36543
		jz	loc_990

loc_5D8:				; CODE XREF: _untar+902j
		mov	byte ptr [ecx],	0

loc_5DB:				; DATA XREF: .debug_loc:off_401Co
					; .debug_loc:off_405Co
		lea	eax, [esp+46Ch+var_394]
		mov	[esp+46Ch+var_43C], eax
		lea	edi, [esp+46Ch+var_38C]
		xor	esi, esi

loc_5EF:				; DATA XREF: .debug_loc:00004020o
					; .debug_loc:00004060o
		nop

loc_5F0:				; CODE XREF: _untar+55Ej
		movsx	edx, byte ptr [eax]
		lea	ecx, [edx-30h]
		cmp	cl, 7
		ja	short loc_5FF
		lea	esi, [edx+esi*8-30h]

loc_5FF:				; CODE XREF: _untar+555j
					; DATA XREF: .debug_loc:00004028o
		inc	eax
		cmp	eax, edi
		jnz	short loc_5F0

loc_604:				; DATA XREF: .debug_loc:off_40E2o
					; .debug_loc:off_4101o
		xor	ecx, ecx
		lea	eax, [esp+46Ch+var_428]

loc_60A:				; DATA XREF: .debug_loc:000040E6o
					; .debug_loc:00004105o	...
		xchg	ax, ax

loc_60C:				; CODE XREF: _untar+572j
					; DATA XREF: .debug_info:00002ECAo ...
		movzx	edx, byte ptr [eax]
		add	ecx, edx

loc_611:				; DATA XREF: .debug_loc:000040EEo
		inc	eax
		cmp	eax, [esp+46Ch+var_43C]
		jnz	short loc_60C
		add	ecx, 100h
		lea	edx, [esp+46Ch+var_38C]

loc_625:				; DATA XREF: .debug_loc:00004112o
					; .debug_loc:00004119o
		cmp	edx, [esp+46Ch+var_440]
		jnb	short loc_63C
		mov	eax, edx

loc_62D:				; DATA XREF: .debug_loc:0000411Do
					; .debug_loc:00004124o
		lea	esi, [esi+0]

loc_630:				; CODE XREF: _untar+596j
		movzx	edi, byte ptr [eax]
		add	ecx, edi
		inc	eax
		cmp	eax, [esp+46Ch+var_440]
		jnz	short loc_630

loc_63C:				; CODE XREF: _untar+585j
					; DATA XREF: .debug_info:00002ECEo ...
		cmp	esi, ecx
		jz	short loc_671
		xor	ecx, ecx

loc_642:				; DATA XREF: .debug_loc:000040F2o
		lea	eax, [esp+46Ch+var_428]
		mov	[esp+46Ch+var_44C], edx
		jmp	short loc_657
; ---------------------------------------------------------------------------

loc_64C:				; CODE XREF: _untar+5BBj _untar+5C3j
					; DATA XREF: ...
		inc	eax

loc_64D:				; DATA XREF: .debug_loc:off_416Bo
		cmp	eax, [esp+46Ch+var_43C]
		jz	loc_718

loc_657:				; CODE XREF: _untar+5A6j
					; DATA XREF: .debug_loc:0000413Bo ...
		movzx	edi, byte ptr [eax]
		add	ecx, edi

loc_65C:				; DATA XREF: .debug_loc:00004142o
		cmp	byte ptr [eax],	0
		jns	short loc_64C
		sub	ecx, 100h
		jmp	short loc_64C
; ---------------------------------------------------------------------------

loc_669:				; CODE XREF: _untar+684j _untar+691j
					; DATA XREF: ...
		cmp	esi, ecx
		jnz	loc_76E

loc_671:				; CODE XREF: _untar+59Aj
					; DATA XREF: .debug_loc:00004146o ...
		mov	_first_36546, 0
		cmp	ds:_nbuf_36543,	0
		jnz	loc_80E

loc_688:				; CODE XREF: _untar+780j _untar+78Ej
					; DATA XREF: ...
		lea	eax, [esp+46Ch+var_3AC]
		xor	esi, esi

loc_691:				; DATA XREF: .debug_loc:0000402Co
					; .debug_loc:0000406Co
		lea	esi, [esi+0]

loc_694:				; CODE XREF: _untar+604j
					; DATA XREF: .debug_info:000036D8o
		movsx	edx, byte ptr [eax]
		lea	ecx, [edx-30h]
		cmp	cl, 7
		ja	short loc_6A3
		lea	esi, [edx+esi*8-30h]

loc_6A3:				; CODE XREF: _untar+5F9j
		inc	eax
		cmp	eax, [esp+46Ch+var_448]
		jnz	short loc_694
		mov	ds:_outsize, esi
		test	byte ptr [esp+46Ch+var_430], 4
		jnz	loc_7C6
		test	byte ptr [esp+46Ch+var_430], 2
		jz	loc_9ED

loc_6C6:				; CODE XREF: _untar:loc_809j
					; _untar:loc_A11j
		mov	al, [esp+46Ch+var_38C]
		lea	edx, [eax-31h]
		cmp	dl, 1
		jbe	loc_837
		cmp	al, 35h	; '5'
		jz	loc_9AB
		cmp	dl, 5
		ja	loc_8EE
		test	byte ptr ds:_untarops, 4
		jz	loc_216
		mov	[esp+46Ch+var_464], offset aIgnored ; "	ignored\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 2
		call	_purple_debug

loc_713:				; DATA XREF: .debug_info:000031D6o
		jmp	loc_216
; ---------------------------------------------------------------------------

loc_718:				; CODE XREF: _untar+5ADj
					; DATA XREF: .debug_loc:00004033o ...
		mov	edx, [esp+46Ch+var_44C]

loc_71C:				; DATA XREF: .debug_ranges:000043B8o
					; .debug_ranges:000043D0o
		add	ecx, 100h

loc_722:				; DATA XREF: .debug_loc:00004185o
					; .debug_loc:0000418Co
		cmp	edx, [esp+46Ch+var_440]
		jb	short loc_73B
		jmp	loc_669
; ---------------------------------------------------------------------------
		align 10h

loc_730:				; CODE XREF: _untar+69Fj _untar+6A7j
		inc	edx
		cmp	edx, [esp+46Ch+var_440]
		jz	loc_669

loc_73B:				; CODE XREF: _untar+682j
		movzx	eax, byte ptr [edx]
		add	ecx, eax
		cmp	byte ptr [edx],	0
		jns	short loc_730
		sub	ecx, 100h
		jmp	short loc_730
; ---------------------------------------------------------------------------

loc_74D:				; CODE XREF: _untar+326j
					; DATA XREF: .debug_loc:00004037o ...
		mov	[esp+46Ch+var_464], 1000h
		lea	eax, [esp+46Ch+var_428]
		mov	[esp+46Ch+lpBuffer], eax
		mov	[esp+46Ch+nBufferLength], offset _nbuf_36543
		call	_g_strlcpy

loc_769:				; DATA XREF: .debug_info:000031FEo
		jmp	loc_3FF
; ---------------------------------------------------------------------------

loc_76E:				; CODE XREF: _untar+5C7j
					; DATA XREF: .debug_loc:0000403Eo ...
		mov	edi, _first_36546
		test	edi, edi
		jnz	short loc_794
		mov	[esp+46Ch+var_464], offset aGarbageDetecte ; "Garbage detected;	preceding file may be"...
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4

loc_78F:				; DATA XREF: .debug_loc:0000415Co
					; .debug_loc:0000419Bo
		call	_purple_debug

loc_794:				; CODE XREF: _untar+6D2j
					; DATA XREF: .debug_info:00003226o
		mov	[esp+46Ch+var_45C], offset _nbuf_36543
		mov	eax, ds:_inname
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aSHeaderHasBadC ; "%s: header has bad checksum for %s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4
		call	_purple_debug

loc_7C1:				; DATA XREF: .debug_info:0000324Eo
		jmp	loc_2B2
; ---------------------------------------------------------------------------

loc_7C6:				; CODE XREF: _untar+611j
					; DATA XREF: .debug_loc:00004042o
		movsx	eax, [esp+46Ch+var_38C]
		lea	edx, [eax-31h]
		cmp	dl, 5
		ja	loc_8E4
		movsx	eax, byte ptr ds:(aCouldNotSetC_0+1Bh)[eax] ; "ack to original (error %lu).\n"

loc_7E1:				; CODE XREF: _untar+845j
		mov	[esp+46Ch+var_45C], offset _nbuf_36543
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aCS ; "%c %s"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 2
		call	_purple_debug

loc_809:				; DATA XREF: .debug_info:0000327Fo
		jmp	loc_6C6
; ---------------------------------------------------------------------------

loc_80E:				; CODE XREF: _untar+5DEj
					; DATA XREF: .debug_loc:00004049o
		xor	eax, eax
		mov	ecx, 0FFFFFFFFh
		mov	edi, [esp+46Ch+var_434]
		repne scasb
		not	ecx
		cmp	ds:byte_B06[ecx], 2Fh ;	'/'
		jnz	loc_688
		mov	[esp+46Ch+var_38C], 35h	; '5'
		jmp	loc_688
; ---------------------------------------------------------------------------

loc_837:				; CODE XREF: _untar+62Fj
					; DATA XREF: .debug_loc:0000404Do
		mov	eax, ds:_untarops
		test	al, 4
		jnz	loc_A27

loc_844:				; CODE XREF: _untar+9AFj
		test	al, 1
		jnz	loc_216

loc_84C:				; DATA XREF: .debug_info:00002F3Co
					; .debug_loc:off_41AAo	...
		mov	[esp+46Ch+lpBuffer], offset aRb	; "rb"
		lea	edi, [esp+46Ch+var_38B]

loc_85B:				; DATA XREF: .debug_loc:000041AEo
					; .debug_loc:000041B8o
		mov	[esp+46Ch+nBufferLength], edi
		call	_g_fopen

loc_863:				; DATA XREF: .debug_info:00002FE2o
		mov	esi, eax

loc_865:				; DATA XREF: .debug_loc:off_4200o
		test	eax, eax
		jz	loc_AB1

loc_86D:				; DATA XREF: .debug_info:0000281Co
					; .debug_loc:00004204o	...
		call	_createpath_constprop_5

loc_872:				; DATA XREF: .debug_info:00003001o
		mov	edi, eax

loc_874:				; DATA XREF: .debug_loc:000041BCo
					; .debug_loc:000041C3o	...
		test	eax, eax
		jz	loc_AD6

loc_87C:				; CODE XREF: _untar:loc_A22j
					; DATA XREF: .debug_info:00002F85o ...
		dec	dword ptr [esi+4]
		js	short loc_89E

loc_881:				; CODE XREF: _untar+7F8j
		mov	edx, [esi]
		movzx	eax, byte ptr [edx]
		inc	edx
		mov	[esi], edx

loc_889:				; CODE XREF: _untar+805j
					; DATA XREF: .debug_info:00002FB3o ...
		dec	dword ptr [edi+4]
		js	loc_A16
		mov	edx, [edi]
		mov	[edx], al
		inc	edx
		mov	[edi], edx

loc_899:				; DATA XREF: .debug_ranges:00004428o
					; .debug_ranges:0000443Co
		dec	dword ptr [esi+4]
		jns	short loc_881

loc_89E:				; CODE XREF: _untar+7DBj
					; DATA XREF: .debug_loc:000042D8o
		mov	[esp+46Ch+nBufferLength], esi ;	FILE *
		call	__filbuf

loc_8A6:				; DATA XREF: .debug_info:00002F9Do
					; .debug_ranges:0000442Co
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_889
		mov	[esp+46Ch+nBufferLength], esi ;	FILE *
		call	_fclose

loc_8B3:				; DATA XREF: .debug_info:0000300Ao
		mov	[esp+46Ch+nBufferLength], edi ;	FILE *
		call	_fclose

loc_8BB:				; DATA XREF: .debug_info:0000301Fo
		mov	[esp+46Ch+var_460], offset _nbuf_36543
		mov	[esp+46Ch+var_464], offset aSCopyInsteadOf ; "%s: copy instead of link\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 3
		call	_purple_debug

loc_8DF:				; DATA XREF: .debug_info:00003034o
		jmp	loc_216
; ---------------------------------------------------------------------------

loc_8E4:				; CODE XREF: _untar+730j
					; DATA XREF: .debug_loc:000041C7o ...
		mov	eax, 2Dh ; '-'
		jmp	loc_7E1
; ---------------------------------------------------------------------------

loc_8EE:				; CODE XREF: _untar+640j
					; DATA XREF: .debug_info:000036ACo ...
		mov	eax, ds:_untarops
		test	al, 4
		jz	short loc_94D
		mov	edx, ds:_outsize
		lea	eax, [edx-1]
		cmp	eax, 1FFh
		ja	loc_A58
		mov	esi, offset byte_1D9D
		mov	eax, 1
		cmp	edx, 1
		jnz	short loc_987

loc_91A:				; CODE XREF: _untar+9C2j
		mov	ecx, esi

loc_91C:				; CODE XREF: _untar+8E8j
		mov	[esp+46Ch+var_454], esi
		mov	[esp+46Ch+var_458], eax
		mov	[esp+46Ch+var_45C], ecx
		mov	[esp+46Ch+var_460], edx
		mov	[esp+46Ch+var_464], offset aLdByteSLdTapeB ; " (%ld byte%s, %ld	tape block%s)\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 2

loc_943:				; DATA XREF: .debug_info:00002F38o
		call	_purple_debug

loc_948:				; DATA XREF: .debug_info:000032B0o
		mov	eax, ds:_untarops

loc_94D:				; CODE XREF: _untar+851j
		test	al, 1
		jz	loc_A6B
		mov	ds:_outfp, 0

loc_95F:				; CODE XREF: _untar:loc_A75j
		mov	esi, ds:_outsize
		test	esi, esi
		jnz	loc_178
		mov	eax, ds:_outfp
		test	eax, eax
		jz	loc_178
		mov	[esp+46Ch+nBufferLength], eax ;	FILE *
		call	_fclose

loc_982:				; DATA XREF: .debug_info:000032DFo
					; .debug_info:00002F68o
		jmp	loc_178
; ---------------------------------------------------------------------------

loc_987:				; CODE XREF: _untar+874j
		mov	ecx, offset aS_1 ; "s"
		jmp	short loc_91C
; ---------------------------------------------------------------------------
		align 10h

loc_990:				; CODE XREF: _untar+4C6j _untar+52Ej
		mov	ds:_nbuf_36543,	2Fh ; '/'
		mov	ds:_n2_36545, offset byte_B09
		mov	ecx, offset byte_B09
		jmp	loc_5D8
; ---------------------------------------------------------------------------

loc_9AB:				; CODE XREF: _untar+637j
					; DATA XREF: .debug_ranges:off_4450o
		mov	edx, ds:_untarops
		test	dl, 1
		jz	loc_A7A
		mov	eax, offset aDirectory ; " directory"

loc_9BF:				; CODE XREF: _untar:loc_A9Dj
					; _untar+A03j
					; DATA XREF: ...
		and	edx, 4

loc_9C2:				; DATA XREF: .debug_info:00002BACo
		jz	loc_178
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aS ;	"%s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 2

loc_9E3:				; DATA XREF: .debug_info:00002BD0o
					; .debug_loc:000042F6o
		call	_purple_debug

loc_9E8:				; DATA XREF: .debug_info:000030B9o
		jmp	loc_178
; ---------------------------------------------------------------------------

loc_9ED:				; CODE XREF: _untar+61Cj
					; DATA XREF: .debug_ranges:00004454o
		mov	[esp+46Ch+var_460], offset _nbuf_36543
		mov	[esp+46Ch+var_464], offset aS ;	"%s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 2
		call	_purple_debug

loc_A11:				; DATA XREF: .debug_info:000032E8o
		jmp	loc_6C6
; ---------------------------------------------------------------------------

loc_A16:				; CODE XREF: _untar+7E8j
					; DATA XREF: .debug_loc:000041D1o ...
		mov	[esp+46Ch+lpBuffer], edi ; FILE	*
		mov	[esp+46Ch+nBufferLength], eax ;	int
		call	__flsbuf

loc_A22:				; DATA XREF: .debug_info:00002FD0o
		jmp	loc_87C
; ---------------------------------------------------------------------------

loc_A27:				; CODE XREF: _untar+79Aj
					; DATA XREF: .debug_loc:000041D5o ...
		lea	eax, [esp+46Ch+var_38B]
		mov	[esp+46Ch+var_460], eax
		mov	[esp+46Ch+var_464], offset aS_0	; " -> %s\n"

loc_A3A:				; DATA XREF: .eh_frame:00004930o
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"

loc_A42:				; DATA XREF: .debug_info:00002E68o
		mov	[esp+46Ch+nBufferLength], 2
		call	_purple_debug

loc_A4E:				; DATA XREF: .debug_info:00003319o
		mov	eax, ds:_untarops
		jmp	loc_844
; ---------------------------------------------------------------------------

loc_A58:				; CODE XREF: _untar+861j
		lea	eax, [edx+1FFh]
		shr	eax, 9
		mov	esi, offset aS_1 ; "s"
		jmp	loc_91A
; ---------------------------------------------------------------------------

loc_A6B:				; CODE XREF: _untar+8ABj
		call	_createpath_constprop_5

loc_A70:				; DATA XREF: .debug_info:00003349o
		mov	ds:_outfp, eax

loc_A75:				; DATA XREF: .debug_info:00002E40o
		jmp	loc_95F
; ---------------------------------------------------------------------------

loc_A7A:				; CODE XREF: _untar+910j
					; DATA XREF: .debug_ranges:00004458o
		mov	[esp+46Ch+lpBuffer], 1EDh
		mov	[esp+46Ch+nBufferLength], offset _nbuf_36543
		call	_g_mkdir

loc_A8E:				; DATA XREF: .debug_info:000030E1o
		mov	edx, ds:_untarops
		test	eax, eax
		jnz	short loc_AA2
		mov	eax, offset aCreated ; " created"

loc_A9D:				; DATA XREF: .debug_info:000030B0o
		jmp	loc_9BF
; ---------------------------------------------------------------------------

loc_AA2:				; CODE XREF: _untar+9F2j
					; DATA XREF: .debug_loc:000042FDo
		mov	eax, offset aIgnored_0 ; " ignored"
		jmp	loc_9BF
; ---------------------------------------------------------------------------

loc_AAC:				; CODE XREF: _untar+2B6j
					; DATA XREF: .debug_loc:00003FBBo ...
		call	___stack_chk_fail
; ---------------------------------------------------------------------------

loc_AB1:				; CODE XREF: _untar+7C3j
					; DATA XREF: .debug_info:00003578o ...
		mov	[esp+46Ch+var_460], edi
		mov	[esp+46Ch+var_464], offset aErrorOpeningS ; "Error opening: %s\n"
		mov	[esp+46Ch+lpBuffer], offset aUntar ; "untar"
		mov	[esp+46Ch+nBufferLength], 4

loc_ACC:				; DATA XREF: .debug_info:00003101o
					; .debug_info:00003116o ...
		call	_purple_debug

loc_AD1:				; DATA XREF: .debug_info:00003065o
		jmp	loc_216
; ---------------------------------------------------------------------------

loc_AD6:				; CODE XREF: _untar+7D2j
					; DATA XREF: .debug_loc:000041E3o ...
		mov	[esp+46Ch+nBufferLength], esi ;	FILE *

loc_AD9:				; DATA XREF: .debug_loc:00004264o
					; .debug_loc:0000426Bo
		call	_fclose

loc_ADE:				; DATA XREF: .debug_info:00003094o
		jmp	loc_216
_untar		endp

; ---------------------------------------------------------------------------
unk_AE3		db  90h	; ê		; DATA XREF: .debug_info:00002D99o
					; .debug_loc:00003F32o	...
_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 0AE4h
_first_36546	dd 1			; DATA XREF: _untar:loc_284r
					; _untar:loc_671w ...
_data		ends

; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_bss		segment	para public 'BSS' use32
		assume cs:_bss
		;org 0AE8h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
_untarops	dd ?			; DATA XREF: _cvtwrite_constprop_3:loc_12r
					; _untar+2Dw ...
_inname		dd ?			; DATA XREF: _untar+32w _untar+1E9r ...
; FILE *infp
_infp		dd ?			; DATA XREF: _untar:loc_ECw
					; _untar:loc_178r ...
_outsize	dd ?			; DATA XREF: _untar+114r
					; _untar:loc_1D8r ...
; FILE *outfp
_outfp		dd ?			; DATA XREF: _untar+120r _untar+14Cr ...
_didabs		dd ?			; DATA XREF: _untar+18Br
					; _untar:loc_44Fw ...
		dd ?
		db 2 dup(?)
byte_B06	db ?			; DATA XREF: _untar+779r
		align 4
; char nbuf_36543
_nbuf_36543	db ?			; DATA XREF: _untar:loc_3ACo
					; _untar+317o ...
byte_B09	db 3 dup(?)		; DATA XREF: _untar+8F3o _untar+8FDo
dword_B0C	dd 3FFh	dup(?)
_name_36544	dd ?			; DATA XREF: _untar:loc_459w
					; _untar:loc_54Fw ...
_n2_36545	dd ?			; DATA XREF: _untar:loc_55Ew
					; _untar:loc_5C0w ...
		dd 6 dup(?)
_mod_36524	db ?			; DATA XREF: _cvtwrite_constprop_3:loc_31w
					; _cvtwrite_constprop_3:loc_4Aw ...
		align 4
		dd 7Fh dup(?)
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1D28h
byte_1D28	db 77h,	0		; DATA XREF: _createpath_constprop_5+69o
					; _createpath_constprop_5+BCo
word_1D2A	dw 6277h		; DATA XREF: _createpath_constprop_5:loc_1FEBo
					; _createpath_constprop_5+AEo
		align 10h
aSExistsWillNot	db '%s: exists, will not overwrite without "FORCE option"',0Ah,0
					; DATA XREF: _createpath_constprop_5+38o
					; .debug_info:00002D08o
aUntar		db 'untar',0            ; DATA XREF: _untar+1A0o _untar+1FAo ...
aErrorOpeningS	db 'Error opening: %s',0Ah,0 ; DATA XREF: _untar+488o
					; _untar+A11o ...
aDirectory	db ' directory',0       ; DATA XREF: _untar+916o
aCreated	db ' created',0         ; DATA XREF: _untar+9F4o
aIgnored_0	db ' ignored',0         ; DATA XREF: _untar:loc_AA2o
					; .debug_loc:00004308o
byte_1D9D	db 0			; DATA XREF: _untar+867o
aS_1		db 's',0                ; DATA XREF: _untar:loc_987o
					; _untar+9BDo
aRb		db 'rb',0               ; DATA XREF: _untar+38o
					; _untar:loc_84Co ...
		align 4
aCouldNotGetCur	db 'Could not get current directory (error %lu).',0Ah,0
					; DATA XREF: _untar+2D1o
					; .debug_info:00003497o
		align 4
aCouldNotSetCur	db 'Could not set current directory to (error %lu): %s',0Ah,0
					; DATA XREF: _untar+3EDo
					; .debug_info:000034D1o
aRemovedLeading	db 'Removed leading slashes because "ABSPATH option" wasn',27h,'t given.'
					; DATA XREF: _untar+198o
					; .debug_info:00003146o
		db 0Ah,0
aSNotAValidTarF	db '%s: not a valid tar file',0Ah,0 ; DATA XREF: _untar+1F2o
					; .debug_info:0000316Eo
		align 4
aGarbageDetecte	db 'Garbage detected; preceding file may be damaged',0Ah,0
					; DATA XREF: _untar:loc_2E8o
					; _untar+6D4o ...
; char aSS[]
aSS		db '%s/%s',0            ; DATA XREF: _untar+33Fo
					; .debug_info:000031BFo
		align 4
aSHeaderHasBadC	db '%s: header has bad checksum for %s',0Ah,0 ; DATA XREF: _untar+701o
					; .debug_info:00003270o
aCS		db '%c %s',0            ; DATA XREF: _untar+749o
					; .debug_info:000032A1o
aS		db '%s',0Ah,0           ; DATA XREF: _untar+928o _untar+951o ...
aS_0		db ' -> %s',0Ah,0       ; DATA XREF: _untar+98Eo
					; .debug_info:0000333Bo
aSCopyInsteadOf	db '%s: copy instead of link',0Ah,0 ; DATA XREF: _untar+81Fo
					; .debug_info:00003056o
aIgnored	db ' ignored',0Ah,0     ; DATA XREF: _untar+653o
					; .debug_info:000031F8o
		align 4
aLdByteSLdTapeB	db ' (%ld byte%s, %ld tape block%s)',0Ah,0 ; DATA XREF: _untar+888o
					; .debug_info:000032D2o
		align 4
aLastFileMightB	db 'Last file might be truncated!',0Ah,0 ; DATA XREF: _untar:loc_4C1o
					; .debug_info:00003509o
		align 4
aCouldNotSetC_0	db 'Could not set current dir back to original (error %lu).',0Ah,0
					; DATA XREF: _untar+461o
					; .debug_info:00003543o
aUntarFailureS	db 'untar failure: %s',0Ah,0 ; DATA XREF: _untar+212o
					; .debug_info:0000341Fo
aHlcbdp		db 'hlcbdp',0
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text_unlikely	segment	dword public 'CODE' use32
		assume cs:_text_unlikely
		;org 1F90h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_createpath_constprop_5	proc near	; CODE XREF: _untar:loc_86Dp
					; _untar:loc_A6Bp
					; DATA XREF: ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
var_10		= dword	ptr -10h

		push	ebx

loc_1F91:				; DATA XREF: .debug_loc:00003DF4o
					; .debug_loc:00003DFCo
		sub	esp, 38h

loc_1F94:				; DATA XREF: .debug_loc:00003E00o
					; .debug_loc:00003E08o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax
		test	byte ptr ds:_untarops, 8
		jnz	short loc_1FEB
		mov	[esp+3Ch+var_38], 0 ; int
		mov	[esp+3Ch+var_3C], offset _nbuf_36543 ; char *
		call	_access

loc_1FBC:				; DATA XREF: .debug_info:00002CC8o
		test	eax, eax
		jnz	short loc_1FEB
		mov	[esp+3Ch+var_30], offset _nbuf_36543
		mov	[esp+3Ch+var_34], offset aSExistsWillNot ; "%s:	exists,	will not overwrite without "...
		mov	[esp+3Ch+var_38], offset aUntar	; "untar"
		mov	[esp+3Ch+var_3C], 3
		call	_purple_debug

loc_1FE4:				; DATA XREF: .debug_info:00002CE6o
		xor	eax, eax
		jmp	loc_2091
; ---------------------------------------------------------------------------

loc_1FEB:				; CODE XREF: _createpath_constprop_5+16j
					; _createpath_constprop_5+2Ej
		mov	eax, offset word_1D2A
		test	byte ptr ds:_untarops, 20h
		jz	short loc_1FFE
		mov	eax, offset byte_1D28

loc_1FFE:				; CODE XREF: _createpath_constprop_5+67j
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], offset _nbuf_36543
		call	_g_fopen

loc_200E:				; DATA XREF: .debug_info:00002D18o
					; .debug_loc:off_3E35o
		mov	ebx, offset _nbuf_36543
		test	eax, eax
		jz	short loc_2038
		jmp	short loc_2091
; ---------------------------------------------------------------------------

loc_2019:				; CODE XREF: _createpath_constprop_5+ACj
					; DATA XREF: .debug_info:00002C35o ...
		cmp	al, 2Fh	; '/'
		jnz	short loc_2037
		mov	byte ptr [ebx],	0
		mov	[esp+3Ch+var_38], 1FFh
		mov	[esp+3Ch+var_3C], offset _nbuf_36543
		call	_g_mkdir

loc_2034:				; DATA XREF: .debug_info:00002C60o
		mov	byte ptr [ebx],	2Fh ; '/'

loc_2037:				; CODE XREF: _createpath_constprop_5+8Bj
		inc	ebx

loc_2038:				; CODE XREF: _createpath_constprop_5+85j
		mov	al, [ebx]
		test	al, al
		jnz	short loc_2019
		mov	eax, offset word_1D2A
		test	byte ptr ds:_untarops, 20h
		jz	short loc_2051
		mov	eax, offset byte_1D28

loc_2051:				; CODE XREF: _createpath_constprop_5+BAj
		mov	[esp+3Ch+var_38], eax
		mov	[esp+3Ch+var_3C], offset _nbuf_36543
		call	_g_fopen

loc_2061:				; DATA XREF: .debug_info:00002C80o
					; .debug_loc:off_3E48o
		test	eax, eax
		jnz	short loc_2091
		mov	[esp+3Ch+var_30], offset _nbuf_36543
		mov	[esp+3Ch+var_34], offset aErrorOpeningS	; "Error opening: %s\n"
		mov	[esp+3Ch+var_38], offset aUntar	; "untar"
		mov	[esp+3Ch+var_3C], 4
		mov	[esp+3Ch+var_20], eax

loc_2088:				; DATA XREF: .debug_loc:00003E4Co
		call	_purple_debug

loc_208D:				; DATA XREF: .debug_info:00002C98o
		mov	eax, [esp+3Ch+var_20]

loc_2091:				; CODE XREF: _createpath_constprop_5+56j
					; _createpath_constprop_5+87j ...
		mov	edx, [esp+3Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jz	short loc_20A2
		call	___stack_chk_fail
; ---------------------------------------------------------------------------

loc_20A2:				; CODE XREF: _createpath_constprop_5+10Bj
					; DATA XREF: .debug_info:00002D30o
		add	esp, 38h

loc_20A5:				; DATA XREF: .debug_loc:00003E0Co
					; .debug_loc:00003E15o
		pop	ebx

locret_20A6:				; DATA XREF: .debug_loc:00003E19o
					; .debug_loc:00003E21o
		retn
_createpath_constprop_5	endp

; ---------------------------------------------------------------------------
unk_20A7	db  90h	; ê		; DATA XREF: .debug_info:00002C09o
					; .debug_loc:00003E25o	...
_text_unlikely	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_drectve	segment	dword public 'DATA' use32
		assume cs:_drectve
		;org 20A8h
aAligncomm_slid	db ' -aligncomm:"_slide",5',0
		align 10h
_drectve	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 20C0h
off_20C0	dd offset dword_B0C+0D60h ; DATA XREF: .debug_aranges:0000431Eo
		db 2, 0
		dd offset dword_3930
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 6E697701h, 752F3233h, 7261746Eh, 4300632Eh, 775C5C3Ah
		dd 736B726Fh, 65636170h, 69705C5Ch, 6E696764h, 7665642Dh
		dd 5C5C6C65h, 67646970h, 322D6E69h, 2E30312Eh, 5C5C3131h
		dd 67646970h
		db 69h,	6Eh, 0
		dd offset off_4468
		align 10h
		dd 0
		db 3 dup(0)
		dd offset off_4480
		db 2
		db    1
		db 6, 63h, 68h
		db  61h	; a
		db 72h,	0, 3
aDword		db 'DWORD',0
		dw 0E503h
		dd offset loc_7E+2
		db    2
		db 4, 7, 6Ch
aOngUnsignedInt	db 'ong unsigned int',0
		db 3, 57h, 49h
aNbool		db 'NBOOL',0
		dw 0E603h
		dd offset _untar
		db    2
		db 4, 5, 69h
		db  6Eh	; n
		db 74h,	0, 3
aBool		db 'BOOL',0
		db 3, 0EAh, 95h
		db    0
		db 2 dup(0), 2
		db    1
aUnsignedChar	db 8,'unsigned char',0
		db    2
		db 2, 7, 73h
aHortUnsignedIn	db 'hort unsigned int',0
		dw 402h
		db    4
aFloat		db 'float',0
		db 2
		db    4
		db 5, 6Ch, 6Fh
aNgInt		db 'ng int',0
		db 4
		db    4
		dd offset loc_F9
		db 5, 2, 4
aUnsignedInt	db 7,'unsigned int',0
		dw 7303h
aIze_t		db 'ize_t',0
		dw 0D504h
		dd offset loc_F9+1
		db    6
aWchar_t	db 'wchar_t',0
		db 4, 45h, 1
		dd offset loc_C8
		db    2
		db 2, 5, 73h
aHortInt	db 'hort int',0
		db 2 dup(4), 6Bh
		db    0
		db 2 dup(0), 7
		db    4
		db 3, 57h, 43h
		db  48h	; H
		db 41h,	52h, 0
		db    5
		db 69h,	18h, 1
		db    0
		align 2
		dw 404h
		dd offset loc_13B+2
		db    3
aLpwstr		db 'LPWSTR',0
		db    5
		db 6Ah,	4Ah, 1
		db    0
		align 2
		dw 404h
		dd offset loc_160+4
		db    8
		dd offset loc_13B+2
		db 3, 4Ch, 50h
aCwstr		db 'CWSTR',0
		dw 6B05h
		dd offset loc_15A+4
		db    2
		db 8, 5, 6Ch
aOngLongInt	db 'ong long int',0
		db 2, 8, 7
aLongLongUnsign	db 'long long unsigned int',0
		db 2
		db    1
		db 6, 73h, 69h
aGnedChar	db 'gned char',0
		dw 402h
aSizetype	db 7,'sizetype',0
aK		db 9,'k',0
		db 2 dup(0), 0CEh
		db    1
		db 2 dup(0), 0Ah
		dd offset loc_1B2
		db    7
		align 2
		dw 404h
		dd offset loc_1D3+1
		db    8
		dd offset loc_6B
		db 2, 8, 4
aDouble		db 'double',0
aVarenum	db 0Bh,'VARENUM',0
		db    4
		db 0Ch,	73h, 5Fh
		db    4
		db 2 dup(0), 0Ch
aVt_empty	db 'VT_EMPTY',0
		align 2
		dw 560Ch
aT_null		db 'T_NULL',0
		db 1
		db  0Ch
aVt_i2		db 'VT_I2',0
		db 2
		db  0Ch
aVt_i4		db 'VT_I4',0
		db 3
		db  0Ch
aVt_r4		db 'VT_R4',0
		db 4
		db  0Ch
aVt_r8		db 'VT_R8',0
		db 5
		db  0Ch
aVt_cy		db 'VT_CY',0
		db 6
		db  0Ch
aVt_date	db 'VT_DATE',0
		db 7, 0Ch, 56h
aT_bstr		db 'T_BSTR',0
		db 8
		db  0Ch
aVt_dispatch	db 'VT_DISPATCH',0
		db 9, 0Ch, 56h
aT_error	db 'T_ERROR',0
		db  0Ah
		db 0Ch,	56h, 54h
a_bool		db '_BOOL',0
		dw 0C0Bh
aVt_variant	db 'VT_VARIANT',0
		db 0Ch
		db  0Ch
aVt_unknown	db 'VT_UNKNOWN',0
		db  0Dh
		db 0Ch,	56h, 54h
a_decimal	db '_DECIMAL',0
		db 0Eh,	0Ch, 56h
aT_i1		db 'T_I1',0
		db 10h,	0Ch, 56h
aT_ui1		db 'T_UI1',0
		dw 0C11h
aVt_ui2		db 'VT_UI2',0
		db 12h
		db  0Ch
aVt_ui4		db 'VT_UI4',0
		db  13h
		db 0Ch,	56h, 54h
		db  5Fh	; _
		db 49h,	38h, 0
		db  14h
		db 0Ch,	56h, 54h
a_ui8		db '_UI8',0
		db 15h,	0Ch, 56h
aT_int		db 'T_INT',0
		dw 0C16h
aVt_uint	db 'VT_UINT',0
		db  17h
		db 0Ch,	56h, 54h
a_void		db '_VOID',0
		dw 0C18h
aVt_hresult	db 'VT_HRESULT',0
		db 19h
		db  0Ch
aVt_ptr		db 'VT_PTR',0
		db  1Ah
		db 0Ch,	56h, 54h
a_safearray	db '_SAFEARRAY',0
		db 1Bh
		db  0Ch
aVt_carray	db 'VT_CARRAY',0
		db 1Ch
		db  0Ch
aVt_userdefined	db 'VT_USERDEFINED',0
		db  1Dh
		db 0Ch,	56h, 54h
a_lpstr		db '_LPSTR',0
		db 1Eh
		db  0Ch
aVt_lpwstr	db 'VT_LPWSTR',0
		db 1Fh
		db  0Ch
aVt_record	db 'VT_RECORD',0
		db 24h
		db  0Ch
aVt_int_ptr	db 'VT_INT_PTR',0
		db  25h	; %
		db 0Ch,	56h, 54h
a_uint_ptr	db '_UINT_PTR',0
		dw 0C26h
aVt_filetime	db 'VT_FILETIME',0
		db '¿',0
		dw 560Ch
aT_blob		db 'T_BLOB',0
		db '¡',0
		db 0Ch,	56h, 54h
a_stream	db '_STREAM',0
		db '¬',0
		dw 560Ch
aT_storage	db 'T_STORAGE',0
		db '√',0
		db  0Ch
aVt_streamed_ob	db 'VT_STREAMED_OBJECT',0
		db 'ƒ',0
		dw 560Ch
aT_stored_objec	db 'T_STORED_OBJECT',0
		db '≈',0
		dw 560Ch
aT_blob_object	db 'T_BLOB_OBJECT',0
		db '∆',0
		dd 5F54560Ch, 0C7004643h, 54560C00h, 534C435Fh,	0C8004449h
		dd 54560C00h, 5453425Fh, 4C425F52h, 0FF00424Fh,	54560C1Fh
		dd 4345565Fh, 524F54h, 560C2080h, 52415F54h, 594152h, 0C00C080h
		dd 425F5456h, 46455259h, 1808000h, 5F54560Ch, 45534552h
		dd 44455652h, 2808000h,	5F54560Ch, 454C4C49h, 4C4147h
		dd 0C03FFFFh, 495F5456h, 47454C4Ch, 414D4C41h, 44454B53h
		dd 0C1FFF00h, 545F5456h, 4D455059h, 4B5341h, 0D001FFFh
		dd 626F695Fh, 20006675h, 4F68102h, 5F0E0000h, 727470h
		dd 1358302h, 23020000h,	635F0E00h, 200746Eh, 0A484h, 4230200h
		dd 61625F0Eh, 2006573h,	13585h,	8230200h, 6C665F0Eh, 2006761h
		dd 0A486h, 0C230200h, 69665F0Eh, 200656Ch, 0A487h, 10230200h
		dd 68635F0Eh, 75627261h, 88020066h, 0A4h, 0E142302h, 6675625Fh
		dd 7A6973h, 0A48902h, 23020000h, 745F0E18h, 6E66706Dh
		dd 656D61h, 1358A02h, 23020000h, 4603001Ch, 454C49h, 45F8B02h
		dd 18090000h, 13000001h, 0F000005h, 1B2h, 3000103h, 6E697567h
		dd 363174h, 0C82206h, 67030000h, 746E6975h, 6003233h, 0FA27h
		dd 73670300h, 657A69h, 0FA5A06h, 67030000h, 72616863h
		dd 6B2D0700h, 3000000h,	6E6F6C67h, 2F070067h, 0E7h, 6E696703h
		dd 30070074h, 0A4h, 6F706703h, 65746E69h, 4C070072h, 13Bh
		dd 57A0404h, 3E080000h,	4000005h, 53E04h, 51470300h, 6B726175h
		dd 22260800h, 3000005h,	72724547h, 900726Fh, 5A120h, 475F0D00h
		dd 6F727245h, 90C0072h,	5E422h,	6F640E00h, 6E69616Dh, 85240900h
		dd 2000005h, 630E0023h,	65646Fh, 5582509h, 23020000h, 656D0E04h
		dd 67617373h, 26090065h, 57Fh, 82302h, 5EA0404h, 4040000h
		dd 593h, 6E756703h, 61686369h, 0A003272h, 51323h, 40C0200h
		dd 676E6F6Ch, 756F6420h, 656C62h, 240B0410h, 695h, 5255500Ch
		dd 5F454C50h, 55424544h, 4C415F47h, 0C00004Ch
aPurple_debug_m	db 'PURPLE_DEBUG_MISC',0
		dw 0C01h
aPurple_debug_i	db 'PURPLE_DEBUG_INFO',0
		dw 0C02h
aPurple_debug_w	db 'PURPLE_DEBUG_WARNING',0
		db 3, 0Ch, 50h
aUrple_debug_er	db 'URPLE_DEBUG_ERROR',0
		dw 0C04h
aPurple_debug_f	db 'PURPLE_DEBUG_FATAL',0
		db 5
		dd 75500300h, 656C7072h, 75626544h, 76654C67h, 0B006C65h
		dd 6102Ch, 755F0B00h, 7261746Eh, 74706F5Fh, 0F0D0400h
		dd 71Dh, 544E550Ch, 4C5F5241h, 49545349h, 100474Eh, 544E550Ch
		dd 515F5241h, 54454955h, 550C0200h, 5241544Eh, 5245565Fh
		dd 45534F42h, 550C0400h, 5241544Eh, 524F465Fh, 8004543h
		dd 544E550Ch, 415F5241h, 41505342h, 10004854h, 544E550Ch
		dd 435F5241h, 45564E4Fh, 20005452h, 6E750300h, 5F726174h
		dd 74706Fh, 6AD160Dh, 55030000h, 72616863h, 100745Fh, 0B75Eh
		dd 6C550300h, 5F676E6Fh, 60010074h, 80h, 1020011h, 86D62h
		db 0, 12h
		dd offset aFilename	; "filename"
		dw 6401h
		dd offset loc_86D
		dd 0E002302h, 65646F6Dh, 0BE650100h, 2000001h, 6F0E6423h
		dd 72656E77h, 0BE660100h, 2000001h, 670E6C23h, 70756F72h
		dd 0BE670100h, 2000001h, 730E7423h, 657A69h, 87D6801h
		dd 23020000h, 746D0E7Ch, 656D69h, 87D6901h, 23030000h
		db 88h,	1, 12h
		dd offset aChecksum	; "checksum"
		db 1
		dd 1BE6Ah, 94230300h, 79740E01h, 1006570h, 6B6Bh, 9C230300h
		dd 696C0E01h, 6F746B6Eh, 6D6C0100h, 3000008h, 0E019D23h
		dd 6E617262h, 6D010064h, 1BEh, 2812303h, 6E776F0Eh, 616E7265h
		dd 100656Dh, 88D6Eh, 89230300h,	72670E02h, 6E70756Fh, 656D61h
		dd 88D6F01h, 23030000h,	640E02A9h, 616D7665h, 726F6Ah
		dd 1BE7001h, 23030000h,	640E02C9h, 696D6665h, 726F6Eh
		dd 1BE7101h, 23030000h,	700E02D1h, 69666572h, 72010078h
		dd 89Dh, 2D92303h, 5345520Eh, 45565245h, 73010044h, 87Dh
		dd 3F42303h, 6B0900h, 87D0000h,	0B20A0000h, 63000001h
		dd 6B0900h, 88D0000h, 0B20A0000h, 0B000001h, 6B0900h, 89D0000h
		dd 0B20A0000h, 1F000001h, 6B0900h, 8AD0000h, 0B20A0000h
		dd 9A000001h, 61740300h, 745F72h, 74C7401h, 63130000h
		dd 74616572h, 74617065h, 8E010068h, 8F1h, 8F101h, 616E1400h
		dd 100656Dh, 1358Fh, 70661500h,	0F1910100h, 15000008h
		dd 92010069h, 0A4h, 0F6040400h,	16000004h, 74757001h, 7B020063h
		dd 0A40101h, 24030000h,	17000009h, 635F5Fh, 0A4017B02h
		dd 17000000h, 465F5Fh, 0F1017B02h, 8, 65670116h, 2006374h
		dd 0A4010174h, 3000000h, 945h, 465F5F17h, 1740200h, 8F1h
		dd 696C1800h, 726F6B6Eh, 79706F63h, 1B90100h, 99Dh, 63727314h
		dd 35BA0100h, 14000001h, 747364h, 135BB01h, 73140000h
		dd 1006D79h, 0A4BCh, 70661500h,	637273h, 8F1BE01h, 66150000h
		dd 74736470h, 0F1BF0100h, 15000008h, 0C0010063h, 0A4h
		dd 76631800h, 69727774h, 1006574h, 9F101FDh, 62140000h
		dd 1006B6Ch, 9F1FEh, 69731400h,	100657Ah, 73DFFh, 70661700h
		dd 1000100h, 8F1h, 1006919h, 0A40102h, 6A190000h, 1020100h
		dd 0A4h, 646F6D19h, 1030100h, 9F7h, 2E040400h, 9000007h
		dd 72Eh, 0A08h,	1B20Fh,	1FF00h,	746E751Ah, 625F7261h, 6B636F6Ch
		dd 1430100h, 0A401h, 0AAB0100h,	62170000h, 1006B6Ch, 9F10143h
		dd 6E190000h, 667562h, 0AB014401h, 1900000Ah, 656D616Eh
		dd 1450100h, 135h, 326E19h, 35014501h, 19000001h, 73726966h
		dd 46010074h, 0A401h, 75731900h, 4701006Dh, 0E701h, 691900h
		dd 0A4014801h, 19000000h, 6B6C6274h, 1490100h, 0ABCh, 0A9C1Bh
		dd 616C1900h, 6F637473h, 6E6F6Ch, 0CE019A01h, 1, 6D74191Ch
		dd 10070h, 13502h, 9000000h, 6Bh, 0ABCh, 1B20Fh, 0FFF00h
		dd 8AD09h, 0ACC00h, 1B20A00h, 0
		dd 99D1Dh
		db 0
		dd offset _cvtwrite_constprop_3
		dd offset _untar
		dd offset off_3C8C
		db 1, 40h, 0Bh
		dd 0B91E0000h
		db 9, 2	dup(0)
		dd offset off_3D0C
		db 1Eh
		dd offset loc_9C2+3
		dd offset off_3D35
		dd 9D01Fh
		db 0
		dd offset off_3D6F
		db 1Fh,	0DAh, 9
		db 2 dup(0)
		dd offset off_3D83
		dw 0AE1Eh
		db 9, 2	dup(0)
		dd offset off_3DAD
		db 20h
		dd offset loc_9E3+1
		db 5, 3
		dd offset _mod_36524
		db 21h
		dd offset loc_83
		dd offset dword_B0C+0A71h
		dd offset dword_B0C+2Ah
		db 22h
		dd 1087402h, 74022231h,	1F3030Ch
		db 52h,	0, 23h
		dd offset _untar
		dd offset dword_B0C+0A9Ch
		align 10h
		dd 8BA1Dh
		db 0
		dd offset _createpath_constprop_5
		dd offset unk_20A7
		dd offset off_3DF0
		db 1, 79h, 0Ch
		dd 0DD1F0000h
		db 8, 2	dup(0)
		dd offset off_3E35
		db 24h
		dd offset loc_8E4+3
		dd 8D125h
		db 0, 6, 3
		dd offset _nbuf_36543
aQ		db 'ü&∫',8,0
		db 0
		dd offset loc_2019
		dd offset loc_2091
		db 1, 8Eh, 7
		dd 2700000Ch
		dd offset loc_2019
		dd offset loc_2091
		dd 8DD1Fh
		db 0
		dd offset off_3E48
		db 24h,	0E7h, 8
		dd 0D1280000h, 21000008h
		dd offset loc_2034
		dd offset dword_B0C+0AB2h
		dd offset dword_B0C+0B3h
		dd 740222h
		db 5, 3
		dd offset _nbuf_36543
		dw 222h
		dd 0A030474h, 210001FFh
		dd offset loc_2061
		dd offset dword_B0C+0AD3h
		dd offset dword_B0C+0CBh
		dd 740222h
		db 5, 3
		dd offset _nbuf_36543
		dw 2900h
		dd offset loc_208D
		dd offset dword_B0C+0AF4h
		dd 740222h, 2223401h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aErrorOpeningS ; "Error opening: %s\n"
		dw 222h
		dd 3050C74h
		dd offset _nbuf_36543
		dd 21000000h
		dd offset loc_1FBC
		dd offset dword_B0C+0B1Ch
		dd offset dword_B0C+119h
		dd 740222h
		db 5, 3
		dd offset _nbuf_36543
		dw 222h
		dd 30010474h
		db 0, 21h
		dd offset loc_1FE4
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+14Bh
		dw 222h
		dd 33010074h, 4740222h
		db 5, 3
		dd offset aUntar	; "untar"
		dw 222h
		dd 3050874h
		dd offset aSExistsWillNot ; "%s: exists, will not overwrite without "...
		dd 0C740222h
		db 5, 3
		dd offset _nbuf_36543
		dw 2100h
		dd offset loc_200E
		dd offset dword_B0C+0AD3h
		dd offset dword_B0C+163h
		dd 740222h
		db 5, 3
		dd offset _nbuf_36543
		dw 2300h
		dd offset loc_20A2
		dd offset dword_B0C+0A9Ch
		db 0, 2Ah
		dd offset aChecksum	; "checksum"
		dw 1F01h
		dd 0E701h, 0CBF0100h, 74170000h, 6B6C62h, 0BF012001h, 1700000Ch
		dd 6E6E7573h, 21010079h, 0A401h, 75731900h, 2301006Dh
		dd 0E701h, 63731900h, 1006E61h,	1350124h, 4000000h, 8AD04h
		dd 75012B00h, 7261746Eh, 2390100h, 0A401h
		db 0
		dd offset _untar
		dd offset unk_AE3
		dd offset off_3E5B
		db 1, 0C1h, 14h
		db 2 dup(0), 2Ch
		dd offset aFilename	; "filename"
		db 1
		dd 1CE0239h, 91020000h,	65642D00h, 69647473h, 39010072h
		dd 1CE02h, 4910200h, 74706F2Dh,	736E6F69h, 2390100h, 71Dh
		dd 2E089102h, 746572h, 0A4023A01h
		db 3 dup(0)
		dd offset off_3F43
aCurdir		db '/curdir',0
		db 1
		dd 502023Bh, 91030000h,	772E7BD4h, 7365645Fh, 72696474h
		dd 23C0100h, 14C1h
		dd offset off_3FD5
		dd 0A0830h
		db 0
		dd offset loc_165
		dd offset off_4340
		db 1, 57h, 2
		dd offset dword_B0C+787h
		db 31h
		dd offset off_4378
		db 1Fh,	61h, 0Ah
		db 2 dup(0)
		dd offset off_401C
		dw 6D1Fh
		db 0Ah,	2 dup(0)
		dd offset off_405C
		db 20h
		dd offset loc_A75+2
		dd 77D49103h, 0A221Eh
		db 0
		dd offset off_407C
		db 20h,	2Eh, 0Ah
		dd 3050000h
		dd offset _nbuf_36543
		dd 0A3B20h
		db 0, 5, 3
		dd offset _name_36544
		db 20h
		dd offset loc_A42+6
		db 5, 3
		dd offset _n2_36545
		dw 5320h
		dd 500000Ah
		db 3
		dd offset _first_36546
		db 32h
		dd offset loc_414
		dd offset loc_459
		dd offset dword_B0C+2F9h
		dw 891Fh
		db 0Ah,	2 dup(0)
		dd offset off_40C4
		db 21h
		dd offset loc_428
		dd offset dword_B0C+0B3Dh
		dd offset dword_B0C+2E5h
		dd 740222h, 77C89104h, 74022206h, 3A080204h
		db 0, 29h
		dd offset loc_44F
		dd offset dword_B0C+0B5Eh
		dw 222h
		dd 91040074h, 677C8h, 0C793300h
		db 2 dup(0)
		dd offset loc_60C
		dd offset loc_63C
		dw 0BC01h
		dd 0E4001h, 0C972800h, 8A280000h, 2700000Ch
		dd offset loc_60C
		dd offset loc_63C
		dd 0CA51Fh
		db 0
		dd offset off_40E2
		db 1Fh,	0B1h, 0Ch
		db 2 dup(0)
		dd offset off_4101
		align 10h
		dd 0C7930h
		db 0
		dd offset loc_64C
		dd offset off_43B0
		db 1, 0BCh, 1
		dd offset dword_B0C+36Bh
		dd 0C9728h, 0C8A2800h
		db 2 dup(0), 31h
		dd offset off_43C8
		db 1Fh
		dd offset dword_B0C+199h
		dd offset off_4137
		dd 0CB11Fh
		db 0
		dd offset off_416B
		db 2 dup(0), 30h
		dd offset loc_943+2
		dd offset loc_84C
		dd offset off_43E0
		dd 0E601F401h, 1E00000Fh, 958h
		dd offset off_41AA
		db 31h
		dd offset off_4400
		db 28h,	6Eh, 9
		dd 791F0000h
		db 9, 2	dup(0)
		dd offset off_4200
		db 1Fh
		dd offset loc_982+4
		dd offset off_423F
		dd 99320h, 1E500100h, 963h
		dd offset off_427E
		dd 92434h
		db 0
		dd offset loc_87C
		dd offset off_4420
		db 1, 0F1h, 0EEh
		dd 1E00000Eh, 938h
		dd offset off_42B6
		db 29h
		dd offset loc_8A6
		dd offset dword_B0C+0B84h
		db 22h,	2, 74h
		dd 760200h, 0F7340000h
		db 8, 2	dup(0)
		dd offset loc_889
		dd offset off_4438
		db 1
		dd 0F21F2h, 9171E00h
		db 2 dup(0)
		dd offset off_42D4
		dw 0B28h
		dd 29000009h
		dd offset loc_A22
		dd offset dword_B0C+0BA1h
		dd 4740222h, 7702h
		db 0, 21h
		dd offset loc_863
		dd offset dword_B0C+0AD3h
		dd offset dword_B0C+434h
		dw 222h
		dd 77020074h, 74022200h
		db 4, 5, 3
		dd offset aRb		; "rb"
		align 10h
		db 23h
		dd offset loc_872
		dd offset dword_B0C+34h
		db 21h
		dd offset loc_8B3
		dd offset dword_B0C+0BC3h
		dd offset dword_B0C+452h
		dw 222h
		dd 76020074h
		db 2 dup(0), 21h
		dd offset loc_8BB
		dd offset dword_B0C+0BC3h
		dd offset dword_B0C+467h
		db 22h
		dd 2007402h, 21000077h
		dd offset loc_8DF
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+498h
		dd 740222h, 2223301h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aSCopyInsteadOf ; "%s: copy instead of link\n"
		dw 222h
		dd 91040C74h, 677C8h
		db 21h
		dd offset loc_AD1
		align 2
		dw 16h
		dd 0FD300h, 74022200h, 22340100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aErrorOpeningS ; "Error opening: %s\n"
		db 22h
		dd 20C7402h, 29000077h
		dd offset loc_ADE
		dd offset dword_B0C+0BC3h
		dd 740222h, 7602h
		db 2 dup(0), 35h
		dd offset off_4450
		dd offset dword_B0C+530h
		db 1Fh
		dd offset loc_A9D
		dd offset off_42F2
		db 21h
		dd offset loc_9E8
		align 2
		dw 16h
		dd 102000h, 74022200h, 22320100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aS		; "%s\n"
		align 10h
		db 29h
		dd offset loc_A8E
		dd offset dword_B0C+0AB2h
		db 22h,	2, 74h
		dd 0C8910400h, 2220677h, 0A030474h, 1EDh
		db 21h
		dd offset loc_1D8
		dd offset loc_ACC
		dd offset dword_B0C+545h
		db 22h,	1, 50h
		dd 2000A03h
		db 0, 23h
		dd offset loc_1FF
		dd offset loc_ACC
		db 23h
		dd offset loc_20C
		dd offset dword_B0C+0BC3h
		db 21h
		dd offset loc_258
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+57Fh
		dd 740222h, 2223301h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aRemovedLeading ; "Removed leading slashes because \"ABSPA"...
		dw 2100h
		dd offset loc_2B2
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+5A7h
		dd 740222h, 2223401h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aSNotAValidTarF ; "%s: not a valid tar file\n"
		dw 2100h
		dd offset loc_304
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+5CFh
		dd 740222h, 2223401h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aGarbageDetecte ; "Garbage detected; preceding file may be"...
		dw 2100h
		dd offset loc_3FF
		dd offset dword_B0C+0BDEh
		dd offset dword_B0C+609h
		dd 740222h, 77C89104h, 74022206h, 0A0304h, 74022210h
		db 8, 5, 3
		dd offset aSS		; "%s/%s"
		db 22h
		dd 30C7402h, 227AAD91h,	4107402h, 677B891h
		db 0, 21h
		dd offset loc_713
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+631h
		dw 222h
		dd 32010074h, 4740222h
		db 5, 3
		dd offset aUntar	; "untar"
		dw 222h
		dd 3050874h
		dd offset aIgnored	; " ignored\n"
		db 0, 21h
		dd offset loc_769
		dd offset dword_B0C+0C07h
		dd offset dword_B0C+659h
		dw 222h
		dd 91040074h, 220677C8h, 4047402h, 677B891h, 8740222h
		dd 10000A03h
		db 0, 21h
		dd offset loc_794
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+681h
		dw 222h
		dd 34010074h, 4740222h
		db 5, 3
		dd offset aUntar	; "untar"
		dw 222h
		dd 3050874h
		dd offset aGarbageDetecte ; "Garbage detected; preceding file may be"...
		db 0, 21h
		dd offset loc_7C1
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+6B2h
		dw 222h
		dd 34010074h, 4740222h
		db 5, 3
		dd offset aUntar	; "untar"
		dw 222h
		dd 3050874h
		dd offset aSHeaderHasBadC ; "%s: header	has bad	checksum for %s\n"
		dd 10740222h, 77C89104h
		db 6, 0, 21h
		dd offset loc_809
		align 4
		dd 0EF000016h, 22000011h, 1007402h, 74022232h
		db 4, 5, 3
		dd offset aUntar	; "untar"
		db 22h
		dd 5087402h
		db 3
		dd offset aCS		; "%c %s"
		db 22h,	2, 74h
		dd 0C8910410h, 21000677h
		dd offset loc_948
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+712h
		dd 740222h, 2223201h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aLdByteSLdTapeB ; " (%ld byte%s, %ld tape block%s)\n"
		dw 222h
		dd 76021874h
		db 2 dup(0), 23h
		dd offset loc_982
		dd offset dword_B0C+0BC3h
		db 21h
		dd offset loc_A11
		dd offset dword_B0C+0AF4h
		dd offset dword_B0C+74Ch
		dd 740222h, 2223201h, 3050474h
		dd offset aUntar	; "untar"
		dd 8740222h
		db 5, 3
		dd offset aS		; "%s\n"
		dw 222h
		dd 91040C74h, 677C8h
		db 21h
		dd offset loc_A4E
		align 2
		dw 16h
		dd 128800h, 74022200h, 22320100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aS_0		; " -> %s\n"
		db 22h
		dd 30C7402h, 78F191h
		db 23h
		dd offset loc_A70
		dd offset dword_B0C+34h
		db 2 dup(0), 21h
		dd offset loc_EC
		dd offset dword_B0C+0AD3h
		dd offset dword_B0C+7A6h
		dd 740222h, 22007502h, 5047402h
		db 3
		dd offset aRb		; "rb"
		align 2
		db 21h
		dd offset loc_121
		dd offset dword_B0C+0C2Fh
		dd offset dword_B0C+7D4h
		db 22h
		dd 2007402h, 2220073h, 9020474h, 740222FFh, 22300108h
		dd 10C7402h, 74022230h,	300110h
		db 21h
		dd offset loc_140
		dd offset dword_B0C+0C74h
		dd offset dword_B0C+7F3h
		db 22h,	2, 74h
		dd 40A0300h, 74022201h,	0BC910404h, 21000677h
		dd offset loc_157
		dd offset dword_B0C+0CBAh
		dd offset dword_B0C+80Ah
		dd 740222h, 77C49104h
		db 6, 0, 21h
		dd offset loc_19D
		dd offset dword_B0C+0CFBh
		dd offset dword_B0C+830h
		db 22h
		dd 5007402h
		db 3
		dd offset _slide
		db 22h,	2, 74h
		dd 22310104h, 3087402h,	2000Ah
		db 21h
		dd offset loc_2D2
		align 2
		dw 16h
		dd 136B00h, 74022200h, 22340100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aUntarFailureS ; "untar failure: %s\n"
		db 22h
		dd 20C7402h, 23000075h
		dd offset loc_2DF
		dd offset dword_B0C+0BC3h
		db 21h
		dd offset loc_329
		dd offset dword_B0C+0CBAh
		dd offset dword_B0C+87Fh
		db 22h,	2, 74h
		dd 0BC910400h, 21000677h
		dd offset loc_33E
		dd offset dword_B0C+0D25h
		dd offset dword_B0C+896h
		dd 740222h, 77C49104h
		db 6, 0, 23h
		dd offset loc_34B
		dd offset dword_B0C+0BC3h
		db 23h
		dd offset loc_371
		dd offset dword_B0C+0D3Ch
		db 21h
		dd offset loc_391
		align 2
		dw 16h
		dd 13DC00h, 74022200h, 22340100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aCouldNotGetCur ; "Could not get current directory (error "...
		align 4
		db 23h
		dd offset loc_39E
		dd offset dword_B0C+0BC3h
		db 23h
		dd offset loc_489
		dd offset dword_B0C+0D3Ch
		db 21h
		dd offset loc_4AD
		align 4
		dd 1D000016h, 22000014h, 1007402h, 74022234h
		db 4, 5, 3
		dd offset aUntar	; "untar"
		db 22h
		dd 5087402h
		db 3
		dd offset aCouldNotSetCur ; "Could not set current directory to	(err"...
		db 22h,	2, 74h
		dd 730210h
		db 0, 23h
		dd offset loc_4BA
		dd offset dword_B0C+0BC3h
		db 21h
		dd offset loc_4DD
		align 4
		dd 4E000016h, 22000014h, 1007402h, 74022233h
		db 4, 5, 3
		dd offset aUntar	; "untar"
		db 22h
		dd 5087402h
		db 3
		dd offset aLastFileMightB ; "Last file might be	truncated!\n"
		align 2
		db 23h
		dd offset loc_4EA
		dd offset dword_B0C+0BC3h
		db 23h
		dd offset loc_501
		dd offset dword_B0C+0D3Ch
		db 21h
		dd offset loc_521
		align 2
		dw 16h
		dd 148800h, 74022200h, 22340100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aCouldNotSetC_0 ; "Could not set current dir back to origi"...
		align 4
		db 21h
		dd offset loc_548
		align 2
		dw 16h
		dd 14B700h, 74022200h, 22340100h, 5047402h
		db 3
		dd offset aUntar	; "untar"
		db 22h,	2, 74h
		db 8, 5, 3
		dd offset aErrorOpeningS ; "Error opening: %s\n"
		db 22h
		dd 20C7402h, 23000075h
		dd offset loc_AB1
		dd offset dword_B0C+0A9Ch
		dd 18040400h, 36000001h, 616E6E69h, 100656Dh, 1CE79h
		db 0, 5, 3
		dd offset _inname
a6infp		db '6infp',0
		db 1, 7Ah, 0F1h
		dd 5000008h
		db 3
		dd offset _infp
a6outfp		db '6outfp',0
		dd 8F17B01h, 3050000h
		dd offset _outfp
a6outsize	db '6outsize',0
		db 1, 7Ch, 3Dh
		dd 5000007h
		db 3
		dd offset _outsize
a6didabs	db '6didabs',0
		db 1, 7Dh, 0A4h
		dd 5000000h
		db 3
		dd offset _didabs
a6untarops	db '6untarops',0
		db 1
		dd 71D7Fh
		db 0, 5, 3
		dd offset _untarops
		db 9
		dd offset loc_4F4+2
		dd offset dword_B0C+0A3Eh
		dd 5F380037h, 626F69h, 153F9A02h, 1010000h, 72E09h, 156900h
		dd 1B20F00h, 7FFF0000h,	6C733900h, 656469h, 15587701h
		dd 5010000h
		db 3
		dd offset _slide
		db 3Ah,	1, 66h
aWrite		db 'write',0
		dw 9D02h
		db    1
		db 1, 0Ah, 1
		db    0
		align 2
		dw 0A801h
		db  15h
		db 2 dup(0), 3Bh
		dd offset loc_F3
		db  3Bh	; ;
		dd offset loc_109+1
		db 3Bh,	0Ah, 1
		db    0
		align 2
		dw 0F13Bh
		db    8
		align 4
		db  3Ch	; <
		db 1, 2	dup(5Fh)
aStack_chk_fail	db 'stack_chk_fail',0
		db 1
		db    1
		db 1, 3Dh, 1
aG_mkdir	db 'g_mkdir',0
		db  0Eh
		db 57h,	1, 0A4h
		db    0
		db 2 dup(0), 1
		dd offset dword_B0C+0AD3h
		db  3Bh	; ;
		dd offset loc_570+4
		db 3Bh,	0A4h, 0
		db    0
		db 2 dup(0), 3Dh
		db    1
aG_fopen	db 'g_fopen',0
		db 0Eh,	68h, 1
		dd offset loc_8EE+3
		db    1
		align 2
		dw 16h
		db    0
		db 3Bh,	74h, 5
		db    0
		align 2
		dw 743Bh
		db    5
		align 10h
		db  3Eh	; >
		db 1, 70h, 75h
aRple_debug	db 'rple_debug',0
		db 0Bh
		db  4Ch	; L
		db 2 dup(1), 28h
		db  16h
		db 2 dup(0), 3Bh
		dd offset loc_694+1
		db  3Bh	; ;
		dd offset loc_1CE
		db 3Bh,	0CEh, 1
		db    0
		align 2
		dw 3Fh
		db  3Ah	; :
		db 1, 61h, 63h
aCess		db 'cess',0
		db 0Fh,	0B9h, 1
		db    1
		dd offset _untar
		db 1, 49h, 16h
		db    0
		align 2
		dw 0CE3Bh
		db    1
		db 2 dup(0), 3Bh
		dd offset _untar
		db    0
		db 3Dh,	1, 73h
aTrrchr		db 'trrchr',0
		db 10h
		db  36h	; 6
		db 1, 35h, 1
		db    0
		align 2
		dw 6A01h
		db  16h
		db 2 dup(0), 3Bh
		dd offset loc_1CE
		db  3Bh	; ;
		dd offset _untar
		align 2
		dw 13Dh
aMemmove	db 'memmove',0
		db  10h
		db 27h,	1, 3Bh
		db    1
		db 2 dup(0), 1
		dd offset dword_B0C+0B84h
		db  3Bh	; ;
		dd offset loc_13B
		db 3Bh,	0F3h, 0
		db    0
		align 2
		dw 0A3Bh
		db    1
		align 10h
		db  3Ah	; :
		db 1, 5Fh, 66h
aIlbuf		db 'ilbuf',0
		dw 6F02h
		db    1
		db 1, 0A4h, 0
		db    0
		align 2
		dw 0AD01h
		db  16h
		db 2 dup(0), 3Bh
		dd offset loc_8EE+3
		db    0
		db 3Ah,	1, 5Fh
aFlsbuf		db 'flsbuf',0
		db 2
		db  70h	; p
		db 2 dup(1), 0A4h
		db    0
		db 2 dup(0), 1
		dd offset dword_B0C+0BC3h
		db  3Bh	; ;
		dd offset _untar
		db 3Bh,	0F1h, 8
		db    0
		db 2 dup(0), 3Dh
		db    1
aFclose		db 'fclose',0
		db    2
		db 0ACh, 1, 0A4h
		db    0
		db 2 dup(0), 1
		dd offset dword_B0C+0BDEh
		db  3Bh	; ;
		dd offset loc_8EE+3
		align 2
		dw 13Ah
aSnprintf	db 'snprintf',0
		db 2, 4Bh, 1
		db    1
		dd offset _untar
		db 1, 13h, 17h
		db    0
		align 2
		dw 353Bh
		db    1
		db 2 dup(0), 3Bh
		dd offset loc_109+1
		db  3Bh	; ;
		dd offset loc_1CE
		db 3Fh,	0, 3Dh
		db    1
aG_strlcpy	db 'g_strlcpy',0
		db 11h
		db  6Ch	; l
		db 1, 31h, 5
		db    0
		align 2
		dw 3B01h
		db  17h
		db 2 dup(0), 3Bh
		dd offset loc_57F
		db  3Bh	; ;
		dd offset loc_570+4
		db 3Bh,	31h, 5
		db    0
		db 2 dup(0), 3Ah
		db    1
aG_utf8_to_utf1	db 'g_utf8_to_utf16',0
		db 0Ah,	37h, 1
		db    1
		dd offset dword_B0C+0C68h
		db 1, 74h, 17h
		db    0
		align 2
		dw 743Bh
		db    5
		db 2 dup(0), 3Bh
		dd offset loc_54A+1
		db  3Bh	; ;
		dd offset dword_B0C+0C6Eh
		db 3Bh,	7Ah, 17h
		db    0
		align 2
		dw 0E43Bh
		db    5
		align 4
		db    4
		db 4, 0F0h, 5
		db    0
		align 2
		dw 404h
		dd offset loc_54A+1
		db  40h	; @
		db 1, 47h, 65h
aTcurrentdirect	db 'tCurrentDirectoryW',0
		db 12h
		db  28h	; (
		db 6, 47h, 65h
aTcurrentdire_0	db 'tCurrentDirectoryW@8',0
		db 1, 73h, 0
		dd 0C6010000h, 3B000017h, 73h, 1503Bh, 1400000h
aSetcurrentdire	db 'SetCurrentDirectoryW',0
		db 12h,	13h, 8
aSetcurrentdi_0	db 'SetCurrentDirectoryW@4',0
		db 1
		dd offset loc_A8+3
		dd 180701h, 1693B00h, 3A000000h, 65726601h, 2006461h, 0A01019Ch
		dd 1000001h, 1831h, 13B3Bh, 10A3B00h, 0A3B0000h, 3B000001h
		dd 8F1h, 67013E00h, 6572665Fh, 37130065h, 18480101h, 643B0000h
		dd 5, 65470141h, 73614C74h, 72724574h, 1200726Fh, 65470663h
		dd 73614C74h, 72724574h, 3040726Fh, 730100h, 10000h
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 3930h
dword_3930	dd 25011101h, 30B1308h,	55081B08h, 52011106h, 61001h, 240200h
					; DATA XREF: .debug_info:000020C6o
		dd 0B3E0B0Bh, 803h, 3001603h, 3B0B3A08h, 13490Bh, 0F0400h
		dd 13490B0Bh, 26050000h, 6000000h, 8030016h, 53B0B3Ah
		dd 1349h, 0B000F07h, 800000Bh, 13490026h, 1090000h, 1134901h
		dd 0A000013h, 13490021h, 0B2Fh,	301040Bh, 3A0B0B08h, 10B3B0Bh
		dd 0C000013h, 8030028h,	0D1Ch, 301130Dh, 3A0B0B08h, 10B3B0Bh
		dd 0E000013h, 803000Dh,	0B3B0B3Ah, 0A381349h, 210F0000h
		dd 2F134900h, 10000005h, 0B0B0104h, 0B3B0B3Ah, 1301h, 0B011311h
		dd 3B0B3A05h, 13010Bh, 0D1200h,	0B3A0E03h, 13490B3Bh, 0A38h
		dd 3012E13h, 3B0B3A08h,	2013490Bh, 13010Bh, 51400h, 0B3A0803h
		dd 13490B3Bh, 34150000h, 3A080300h, 490B3B0Bh, 16000013h
		dd 0C3F012Eh, 0B3A0803h, 0C27053Bh, 0B201349h, 1301h, 3000517h
		dd 3B0B3A08h, 134905h, 12E1800h, 0B3A0803h, 0B200B3Bh
		dd 1301h, 3003419h, 3B0B3A08h, 134905h,	12E1A00h, 0B3A0803h
		dd 0C27053Bh, 0B201349h, 1301h,	1010B1Bh, 1C000013h, 10Bh
		dd 31012E1Dh, 12011113h, 97064001h, 13010C42h, 51E0000h
		dd 2133100h, 1F000006h,	13310034h, 602h, 31003420h, 0A0213h
		dd 82892100h, 1110101h,	13011331h, 8A220000h, 2000182h
		dd 0A42910Ah, 89230000h, 11000182h, 133101h, 342400h, 1331h
		dd 31000525h, 0A0213h, 11D2600h, 1111331h, 0B580112h, 13010B59h
		dd 0B270000h, 12011101h, 28000001h, 13310005h, 89290000h
		dd 11010182h, 133101h, 12E2A00h, 0B3A0E03h, 1349053Bh
		dd 13010B20h, 2E2B0000h, 30C3F01h, 3B0B3A08h, 490C2705h
		dd 12011113h, 97064001h, 13010C42h, 52C0000h, 3A0E0300h
		dd 49053B0Bh, 0A0213h, 52D00h, 0B3A0803h, 1349053Bh, 0A02h
		dd 300342Eh, 3B0B3A08h,	2134905h, 2F000006h, 8030034h
		dd 53B0B3Ah, 0A021349h,	1D300000h, 52133101h, 58065501h
		dd 105590Bh, 31000013h,	655010Bh, 0B320000h, 12011101h
		dd 130101h, 11D3300h, 1111331h,	0B580112h, 13010559h, 1D340000h
		dd 52133101h, 58065501h, 10B590Bh, 35000013h, 655010Bh
		dd 1301h, 3003436h, 3B0B3A08h, 213490Bh, 3700000Ah, 21h
		dd 3003438h, 3B0B3A08h,	3F13490Bh, 0C3C0Ch, 343900h, 0B3A0803h
		dd 13490B3Bh, 0A020C3Fh, 2E3A0000h, 30C3F01h, 3B0B3A08h
		dd 490C2705h, 10C3C13h,	3B000013h, 13490005h, 2E3C0000h
		dd 30C3F00h, 340C2708h,	0C3C0Ch, 12E3D00h, 8030C3Fh, 0B3B0B3Ah
		dd 13490C27h, 13010C3Ch, 2E3E0000h, 30C3F01h, 3B0B3A08h
		dd 3C0C270Bh, 13010Ch, 183F00h,	2E400000h, 30C3F01h, 3B0B3A08h
		dd 8408705h, 13490C27h,	13010C3Ch, 2E410000h, 30C3F00h
		dd 3B0B3A08h, 8408705h,	13490C27h, 0C3Ch
		db 0
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 3C8Ch
off_3C8C	dd offset _cvtwrite_constprop_3	; DATA XREF: .debug_info:00002B99o
		dd offset loc_1
		dd 4740002h
		dd offset loc_1
		dd offset loc_2
		dd 8740002h
		dd offset loc_2
		dd offset loc_3
		dd 0C740002h
		dd offset loc_3
		dd offset loc_6
		dd 10740002h
		dd offset loc_6
		dd offset loc_92
		dd 30740002h
		dd offset loc_92
		dd offset loc_93
		dd 10740002h
		dd offset loc_93
		dd offset loc_94
		dd 0C740002h
		dd offset loc_94
		dd offset locret_95
		dd 8740002h
		dd offset locret_95
		dd offset loc_98
		dd 4740002h
		dd offset loc_98
		dd offset _untar
		dd 30740002h, 2	dup(0)
off_3D0C	dd offset _cvtwrite_constprop_3	; DATA XREF: .debug_info:00002BA7o
		dd offset loc_66
		db 1, 0, 50h
		dd offset loc_66
		dd offset loc_7E+4
		db 1
		db 0, 50h
		dd offset unk_96
		dd offset loc_9F
		dw 1
		dd offset loc_4A+6
		dd 0
		db 0
off_3D35	dd offset _cvtwrite_constprop_3	; DATA XREF: .debug_info:00002BB0o
		dd offset loc_7E+4
		db 1, 0, 52h
		dd offset loc_7E+4
		dd offset unk_96
		dd 1F30004h
		db 52h,	9Fh
		dd offset unk_96
		dd offset loc_9F
		dw 1
		db 52h
		dd offset loc_9F
		dd offset _untar
		db 4, 0, 0F3h
		dd 9F5201h, 0
		db 3 dup(0)
off_3D6F	dd offset loc_1B	; DATA XREF: .debug_info:00002BB9o
		dd offset unk_2A
		db 2
		dd 9F3000h, 0
		db 3 dup(0)
off_3D83	dd offset loc_1B	; DATA XREF: .debug_info:00002BC2o
		dd offset unk_2A
		db 2
		db 0, 30h, 9Fh
		dd offset loc_38
		dd offset loc_3C
		db 1
		db 0, 56h
		dd offset loc_52
		dd offset loc_54
		dw 1
		dd offset loc_56
		dd 0
		db 0
off_3DAD	dd offset loc_12	; DATA XREF: .debug_info:00002BCBo
		dd offset loc_66
		db 6, 0, 3
		dd offset _slide
		db 9Fh
		dd offset loc_66
		dd offset loc_6B
		db 6, 0, 3
		dd offset _mod_36524
		db 9Fh
		dd offset loc_6B
		dd offset loc_7E+4
		db 1, 0, 51h
		dd offset unk_96
		dd offset loc_9F
		db 6, 0, 3
		dd offset _slide
		dd offset loc_9F
		align 10h
off_3DF0	dd offset _createpath_constprop_5 ; DATA XREF: .debug_info:00002C0Do
		dd offset loc_1F91
		dd 4740002h
		dd offset loc_1F91
		dd offset loc_1F94
		dd 8740002h
		dd offset loc_1F94
		dd offset loc_20A5
		dd 0C0740003h
		db 0
		dd offset loc_20A5
		dd offset locret_20A6
		db 2, 0, 74h
		db 8
		dd offset locret_20A6
		dd offset unk_20A7
		db 2, 0, 74h
		dd 4, 0
		db 0
off_3E35	dd offset loc_200E	; DATA XREF: .debug_info:00002C1Bo
		dd offset loc_2019
		db 1, 0, 50h
		dd 2 dup(0)
off_3E48	dd offset loc_2061	; DATA XREF: .debug_info:00002C51o
		dd offset loc_2088+4
		dd 500001h, 0
		db 3 dup(0)
off_3E5B	dd offset _untar	; DATA XREF: .debug_info:00002D9Do
		dd offset loc_A5
		db 2
		db 0, 74h, 4
		dd offset loc_A5
		dd offset loc_A6
		db 2
		db 0, 74h, 8
		dd offset loc_A6
		dd offset loc_A7
		db 2
		db 0, 74h, 0Ch
		dd offset loc_A7
		dd offset loc_A8
		db 2
		db 0, 74h, 10h
		dd offset loc_A8
		dd offset loc_AE
		db 2
		db 0, 74h, 14h
		dd offset loc_AE
		dd offset loc_140
		db 3
		dd 8F07400h
		dd offset loc_140
		dd offset loc_143
		dd 0E8740003h
		db 8
		dd offset loc_143
		dd offset loc_157
		db 3, 0, 74h
		db 0F0h, 8
		dd offset loc_157
		dd offset loc_158
		dw 3
		db 74h,	0ECh, 8
		dd offset loc_158
		dd offset loc_329
		db 3
		dd 8F07400h
		dd offset loc_329
		dd offset loc_32A
		dd 0EC740003h
		db 8
		dd offset loc_32A
		dd offset loc_366
		db 3, 0, 74h
		db 0F0h, 8
		dd offset loc_366
		dd offset loc_367
		dw 2
		db 74h,	14h
		dd offset loc_367
		dd offset loc_368
		dw 2
		db 74h,	10h
		dd offset loc_368
		dd offset loc_369
		dw 2
		db 74h,	0Ch
		dd offset loc_369
		dd offset locret_36A
		dw 2
		db 74h,	8
		dd offset locret_36A
		dd offset loc_36C
		dw 2
		db 74h,	4
		dd offset loc_36C
		dd offset unk_AE3
		dw 3
		dd 8F074h, 0
		db 3 dup(0)
off_3F43	dd offset loc_CA	; DATA XREF: .debug_info:00002DE7o
		dd offset loc_178
		db 2
		db 0, 31h, 9Fh
		dd offset loc_178
		dd offset loc_2DF
		db 1
		db 0, 53h
		dd offset loc_2DF
		dd offset unk_2E6
		dw 2
		db 30h,	9Fh
		dd offset unk_2E6
		dd offset loc_34B
		dw 1
		db 53h
		dd offset unk_36B
		dd offset unk_3A2
		db 2, 0, 31h
		db 9Fh
		dd offset unk_3A2
		dd offset unk_483
		db 1, 0, 53h
		dd offset unk_483
		dd offset loc_4C1
		dd 9F310002h
		dd offset loc_4C1
		dd offset loc_521
		db 1, 0, 53h
		dd offset loc_521
		dd offset loc_528
		db 2
		db 0, 30h, 9Fh
		dd offset loc_528
		dd offset loc_54F
		db 2
		db 0, 31h, 9Fh
		dd offset loc_54F
		dd offset loc_AAC
		db 1
		db 0, 53h
		dd offset loc_AB1
		dd offset unk_AE3
		dw 1
		dd offset loc_52+1
		dd 0
		db 0
off_3FD5	dd offset loc_125	; DATA XREF: .debug_info:00002E10o
		dd offset loc_13B+4
		db 1, 0, 50h
		dd offset loc_13B+4
		dd offset loc_34B
		dd 0C4910003h
		db 77h
		dd offset unk_36B
		dd offset loc_528
		db 3, 0, 91h
		db 0C4h, 77h
		dd offset loc_54F
		dd offset loc_AAC
		dw 3
		db 91h,	0C4h, 77h
		dd offset loc_AB1
		dd offset unk_AE3
		db 3
		dd 77C49100h, 2	dup(0)
off_401C	dd offset loc_5DB	; DATA XREF: .debug_info:00002E32o
		dd offset loc_5EF
		dd 9F300002h
		dd offset loc_5FF
		dd offset loc_691
		db 1, 0, 56h
		dd offset loc_718
		dd offset loc_74D
		db 1
		db 0, 56h
		dd offset loc_76E
		dd offset loc_7C6
		dw 1
		db 56h
		dd offset loc_80E
		dd offset loc_837
		db 1, 0, 56h
		dd 2 dup(0)
off_405C	dd offset loc_5DB	; DATA XREF: .debug_info:00002E3Bo
		dd offset loc_5EF
		dd 9F300002h
		dd offset loc_688
		dd offset loc_691
		dd 9F300002h, 2	dup(0)
off_407C	dd offset loc_1A8	; DATA XREF: .debug_info:00002E4Do
		dd offset unk_306
		db 6, 0, 3
		dd offset _slide
		db 9Fh
		dd offset unk_3A2
		dd offset unk_483
		db 6, 0, 3
		dd offset _slide
		db 9Fh
		dd offset loc_54F
		dd offset loc_AAC
		db 6, 0, 3
		dd offset _slide
		db 9Fh
		dd offset loc_AB1
		dd offset unk_AE3
		db 6, 0, 3
		dd offset _slide
		dd offset loc_9F
		align 10h
		dd 0
off_40C4	dd offset loc_42A	; DATA XREF: .debug_info:00002E8Fo
		dd offset loc_430
		db 1, 0, 50h
		dd offset loc_430
		dd offset loc_439
		db 1
		dd 5200h, 0
		db 2 dup(0)
off_40E2	dd offset loc_604	; DATA XREF: .debug_info:00002EF1o
		dd offset loc_60A
		dw 2
		db 30h,	9Fh
		dd offset loc_611
		dd offset loc_642
		dw 1
		dd offset loc_51
		dd 0
		db 0
off_4101	dd offset loc_604	; DATA XREF: .debug_info:00002EFAo
		dd offset loc_60A
		db 3, 0, 91h
		db 0B8h, 77h
		dd offset loc_60A
		dd offset loc_625
		dw 1
		db 50h
		dd offset loc_625
		dd offset loc_62D
		db 1, 0, 52h
		dd offset loc_62D
		dd offset loc_63C
		dd 500001h, 0
		db 3 dup(0)
off_4137	dd offset loc_64C	; DATA XREF: .debug_info:00002F28o
		dd offset loc_657
		db 1
		db 0, 51h
		dd offset loc_65C
		dd offset loc_671
		dw 1
		db 51h
		dd offset loc_718
		dd offset loc_74D
		db 1, 0, 51h
		dd offset loc_76E
		dd offset loc_78F+4
		dd 510001h, 0
		db 3 dup(0)
off_416B	dd offset loc_64D	; DATA XREF: .debug_info:00002F31o
		dd offset loc_657
		db 1
		db 0, 50h
		dd offset loc_669
		dd offset loc_671
		dw 1
		db 52h
		dd offset loc_718
		dd offset loc_722
		db 1, 0, 50h
		dd offset loc_722
		dd offset loc_74D
		db 1, 0, 52h
		dd offset loc_76E
		dd offset loc_78F+4
		db 1
		dd 5200h, 0
		db 2 dup(0)
off_41AA	dd offset loc_84C	; DATA XREF: .debug_info:00002F50o
		dd offset loc_85B
		dw 4
		dd 9F78F191h
		dd offset loc_85B
		dd offset loc_874
		db 1, 0, 57h
		dd offset loc_874
		dd offset loc_8E4
		db 4
		dd 78F19100h
		db 9Fh
		dd offset loc_A16
		dd offset loc_A27
		db 4, 0, 91h
		db 0F1h, 78h, 9Fh
		dd offset loc_AB1
		dd offset loc_AD6
		db 1
		db 0, 57h
		dd offset loc_AD6
		dd offset unk_AE3
		dw 4
		dd 9F78F191h, 2	dup(0)
off_4200	dd offset loc_865	; DATA XREF: .debug_info:00002F63o
		dd offset loc_86D+4
		db 1, 0, 50h
		dd offset loc_86D+4
		dd offset loc_8E4
		db 1
		db 0, 56h
		dd offset loc_A16
		dd offset loc_A27
		dw 1
		db 56h
		dd offset loc_AB1
		dd offset loc_ACC+4
		db 1, 0, 50h
		dd offset loc_ACC+4
		dd offset unk_AE3
		dd 560001h, 0
		db 3 dup(0)
off_423F	dd offset loc_874	; DATA XREF: .debug_info:00002F6Co
		dd offset loc_87C
		db 1
		db 0, 50h
		dd offset loc_87C
		dd offset loc_8E4
		dw 1
		db 57h
		dd offset loc_A16
		dd offset loc_A27
		db 1, 0, 57h
		dd offset loc_AD6
		dd offset loc_AD9+4
		db 1, 0, 50h
		dd offset loc_AD9+4
		dd offset unk_AE3
		db 1
		dd 5700h, 0
		db 2 dup(0)
off_427E	dd offset loc_84C	; DATA XREF: .debug_info:00002F7Co
		dd offset loc_8E4
		dw 6
		db 3
		dd offset _nbuf_36543
		db 9Fh
		dd offset loc_A16
		dd offset loc_A27
		dw 6
		db 3
		dd offset _nbuf_36543
		db 9Fh
		dd offset loc_AB1
		dd offset unk_AE3
		dw 6
		db 3
		dd offset _nbuf_36543
		dd offset loc_9F
		align 4
		db 2 dup(0)
off_42B6	dd offset loc_87C	; DATA XREF: .debug_info:00002F98o
		dd offset loc_8E4
		dw 1
		db 56h
		dd offset loc_A16
		dd offset loc_A27
		db 1, 0, 56h
		dd 2 dup(0)
off_42D4	dd offset loc_889	; DATA XREF: .debug_info:00002FC6o
		dd offset loc_89E
		db 1, 0, 57h
		dd offset loc_A16
		dd offset loc_A27
		db 1
		dd 5700h, 0
		db 2 dup(0)
off_42F2	dd offset loc_9BF	; DATA XREF: .debug_info:000030B4o
		dd offset loc_9E3+4
		dw 1
		db 50h
		dd offset loc_AA2
		dd offset loc_AAC
		db 6, 0, 3
		dd offset aIgnored_0	; " ignored"
		dd offset loc_9F
		dd 0
		db 0
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 4318h
		dd offset loc_24
		db 2, 0
		dd offset off_20C0
		dw 4
		dd 0
		dd offset _cvtwrite_constprop_3
		dd offset unk_AE3
		dd offset _createpath_constprop_5
		dd offset loc_111+6
		align 10h
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 4340h
off_4340	dd offset loc_165	; DATA XREF: .debug_info:00002E1Do
		dd offset loc_178
		dd offset loc_1A8
		dd offset loc_2B2
		dd offset loc_2E8
		dd offset loc_308
		dd offset loc_3A4
		dd offset loc_484
		dd offset loc_54F
		dd offset loc_AAC
		dd offset loc_AB1
		dd offset unk_AE3
		dd 2 dup(0)
off_4378	dd offset loc_165	; DATA XREF: .debug_info:00002E29o
		dd offset loc_178
		dd offset loc_1A8
		dd offset loc_2B2
		dd offset loc_2E8
		dd offset loc_308
		dd offset loc_3A4
		dd offset loc_484
		dd offset loc_54F
		dd offset loc_AAC
		dd offset loc_AB1
		dd offset unk_AE3
		align 10h
off_43B0	dd offset loc_64C	; DATA XREF: .debug_info:00002F09o
		dd offset loc_669
		dd offset loc_71C
		dd offset loc_74D
		dd 2 dup(0)
off_43C8	dd offset loc_64C	; DATA XREF: .debug_info:00002F1Fo
		dd offset loc_669
		dd offset loc_71C
		dd offset loc_74D
		align 10h
off_43E0	dd offset loc_84C	; DATA XREF: .debug_info:00002F40o
		dd offset loc_8E4
		dd offset loc_A16
		dd offset loc_A27
		dd offset loc_AB1
		dd offset unk_AE3
		align 10h
off_4400	dd offset loc_84C	; DATA XREF: .debug_info:00002F55o
		dd offset loc_8E4
		dd offset loc_A16
		dd offset loc_A27
		dd offset loc_AB1
		dd offset unk_AE3
		align 10h
off_4420	dd offset loc_87C	; DATA XREF: .debug_info:00002F89o
		dd offset loc_889
		dd offset loc_899
		dd offset loc_8A6
		dd 2 dup(0)
off_4438	dd offset loc_889	; DATA XREF: .debug_info:00002FB7o
		dd offset loc_899
		dd offset loc_A16
		dd offset loc_A27
		align 10h
off_4450	dd offset loc_9AB	; DATA XREF: .debug_info:000030A7o
		dd offset loc_9ED
		dd offset loc_A7A
		dd offset loc_AAC
		dd 2 dup(0)
off_4468	dd offset _cvtwrite_constprop_3	; DATA XREF: .debug_info:0000211Bo
		dd offset unk_AE3
		dd offset _createpath_constprop_5
		dd offset unk_20A7
		align 10h
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 4480h
off_4480	dd offset loc_414+4	; DATA XREF: .debug_info:00002127o
		db    2
		align 2
		dd offset loc_220+4
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 7701h
aIn32		db 'in32',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a__Libpurple	db '../libpurple',0
		align 2
aUntar_c	db 'untar.c',0
		dw 1
		dd 64747300h, 682E6F69h, 200h, 646E6977h, 682E6665h, 200h
		dd 64647473h, 682E6665h, 300h, 6E6E6977h, 682E74h, 67000002h
		dd 6362696Ch, 69666E6Fh, 682E67h, 67000004h, 65707974h
		dd 682E73h, 67000005h, 72617571h, 682E6Bh, 67000005h, 6F727265h
		dd 682E72h, 67000005h, 63696E75h, 2E65646Fh, 50068h, 62656400h
		dd 682E6775h, 600h, 70797477h, 682E7365h, 200h,	61746E75h
		dd 682E72h, 67000001h, 69647473h, 682E6Fh, 69000005h, 682E6Fh
		dd 73000002h, 6E697274h, 682E67h, 67000002h, 66727473h
		dd 73636E75h, 500682Eh,	69770000h, 7361626Eh, 682E65h
		dd 67000002h, 2E6D656Dh, 50068h, 5000000h
		db 2
		dd offset _cvtwrite_constprop_3
		db 3, 0FCh, 1
		dd 92C26601h, 35C1808h,	0AD777476h, 5B2708A0h, 6D037508h
		dd 13034A08h, 2A10374h,	0DA740858h, 4B0867BCh, 152C0288h
		dd 3172602h, 90087E82h,	8201E803h, 1040200h, 3AC1D03h
		dd 30027DFBh, 9FBDF501h, 0A04DE6E5h, 0B303C959h, 0D5039E01h
		dd 7720087Eh, 1A2402C9h, 92AFE59Fh, 201DB03h, 0E5080125h
		dd 7EA803C9h, 1DB0390h,	200E408h, 9E060104h, 7A088706h
		dd 5D03CBBDh, 2502F208h, 0AC03C913h, 0F03667Eh,	0D9590882h
		dd 0A032D08h, 4F08AC08h, 84B5908h, 89FA6F3h, 1A90313h
		dd 132902F2h, 740C03C9h, 8C9AD08h, 13250223h, 8745F03h
		dd 7EE103E5h, 2602E774h, 79035B16h, 3E4B9258h, 152202BBh
		dd 18603BCh, 7EFD03D6h,	3B3D3E74h, 36C545Ah, 56667EF0h
		dd 0AE77677Ch, 1860356h, 7EEE0374h, 5959AEF2h, 82018E03h
		dd 0A1820B03h, 800EF03h, 7F97033Ch, 355AD58h, 0B0B0BA19h
		dd 2E080F03h, 92821303h, 7E9E03C9h, 6A012502h, 59598408h
		dd 8200D603h, 0F2082E03h, 3AD089Fh, 1320228h, 48026203h
		dd 3AD0801h, 3CAC826h, 3827DD0h, 38202B1h, 759E7DCFh, 75820903h
		dd 0AA030204h, 2F578201h, 38F443Bh, 104747Ah, 0C87EF903h
		dd 385835Ch, 290201EFh,	9E320301h, 1A560292h, 0A008A185h
		dd 3C87003h, 3907F96h, 9E0800CFh, 580903E5h, 2600391h
		dd 2040125h, 27F9303h, 1040129h, 800F303h, 22A0312h, 9030131h
		dd 61032E08h, 0A0CA08E4h, 9E00E403h, 587F8603h,	4A7DD203h
		dd 0F2080A03h, 1000D02h, 2050001h
		dd offset _createpath_constprop_5
		dd 1018D03h, 0F408B34Ah, 78132402h, 3132802h, 3D4C660Ch
		dd 76033D08h, 660D034Ah, 4B132302h, 2142C02h, 1010016h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 489Ch
aFilename	db 'filename',0         ; DATA XREF: .debug_info:00002816o
					; .debug_info:00002DA7o
aChecksum	db 'checksum',0         ; DATA XREF: .debug_info:00002873o
					; .debug_info:00002D3Ao
		align 10h
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 48B0h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch
		dd offset unk_AE3-53B3h
		dd offset _untar
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A8Ch, 0C0EC341h, 80EC641h, 40EC741h, 0B43h, 20h
		dd 54h
		dd offset unk_20A7-4A1Fh
		dd offset loc_111+6
		dd 80E4100h, 0E430283h,	1110340h, 0C341080Eh, 40Eh, 58h
		dd 78h
		dd offset unk_AE3-536Bh
		dd offset loc_A3A+5
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0F00E4605h, 0E920208h, 0E4308E8h, 0E5408F0h,	0E4108ECh
		dd 0D10308F0h, 8EC0E01h, 8F00E41h, 140E0A7Ch, 100EC341h
		dd 0C0EC641h, 80EC741h,	40EC541h, 0B42h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn _slide:near	; DATA XREF: _cvtwrite_constprop_3:loc_3Fr
					; _cvtwrite_constprop_3+58r ...
		extrn ___stack_chk_guard:near ;	DATA XREF: _cvtwrite_constprop_3:loc_6r
					; _cvtwrite_constprop_3+87r ...
; size_t __cdecl fwrite(const void *, size_t, size_t, FILE *)
		extrn _fwrite:near	; CODE XREF: _cvtwrite_constprop_3:loc_7Ep
		extrn ___stack_chk_fail:near ; CODE XREF: _cvtwrite_constprop_3:loc_9Fp
					; _untar:loc_AACp ...
; int __cdecl access(const char	*, int)
		extrn _access:near	; CODE XREF: _createpath_constprop_5+27p
		extrn _purple_debug:near ; CODE	XREF: _untar+1AFp _untar+209p	...
		extrn _g_fopen:near	; CODE XREF: _untar+43p _untar+7BAp ...
		extrn _g_mkdir:near	; CODE XREF: _untar+9E5p
					; _createpath_constprop_5+9Fp
		extrn _g_utf8_to_utf16:near ; CODE XREF: _untar+78p
; DWORD	__stdcall GetCurrentDirectoryW(DWORD nBufferLength, LPWSTR lpBuffer)
		extrn _GetCurrentDirectoryW@8:near ; CODE XREF:	_untar:loc_13Bp
; BOOL __stdcall SetCurrentDirectoryW(LPCWSTR lpPathName)
		extrn _SetCurrentDirectoryW@4:near ; CODE XREF:	_untar+AEp
					; _untar+280p
; size_t __cdecl fread(void *, size_t, size_t, FILE *)
		extrn _fread:near	; CODE XREF: _untar+F4p
; int __cdecl fclose(FILE *)
		extrn _fclose:near	; CODE XREF: _untar+163p _untar+236p ...
		extrn _g_free:near	; CODE XREF: _untar+295p
; DWORD	__stdcall GetLastError()
		extrn _GetLastError@0:near ; CODE XREF:	_untar:loc_36Cp
					; _untar:loc_484p ...
; int snprintf(char *, size_t, const char *, ...)
		extrn _snprintf:near	; CODE XREF: _untar+356p
; char *__cdecl	strrchr(const char *, int)
		extrn _strrchr:near	; CODE XREF: _untar+37Fp
; void *__cdecl	memmove(void *,	const void *, size_t)
		extrn _memmove:near	; CODE XREF: _untar+3A6p
		extrn _g_strlcpy:near	; CODE XREF: _untar+6C0p
; int __cdecl _filbuf(FILE *)
		extrn __filbuf:near	; CODE XREF: _untar+7FDp
; int __cdecl _flsbuf(int, FILE	*)
		extrn __flsbuf:near	; CODE XREF: _untar+979p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1FF7CA66F230E6C0D111B2FCB417D93C
; Input	CRC32 :	12B9FB95

; File Name   :	d:\pidgin-o\message.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_gg_append	proc near		; CODE XREF: _gg_message_text_to_html_110_buff+3Bp
					; _gg_message_text_to_html_110_buff+B5p ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, ecx
		mov	ebx, [esp+1Ch+arg_0]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], ecx
		xor	ecx, ecx
		test	eax, eax
		jz	short loc_24
		add	eax, [edx]
		mov	edi, eax
		mov	ecx, ebx
		rep movsb

loc_24:					; CODE XREF: _gg_append+1Aj
		add	[edx], ebx
		mov	eax, [esp+1Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_39
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_39:					; CODE XREF: _gg_append+30j
		call	__imp____stack_chk_fail
_gg_append	endp

; ---------------------------------------------------------------------------
unk_3E		db  66h	; f		; DATA XREF: .debug_info:000019A8o
					; .debug_info:000019F5o ...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_gg_message_text_to_html_110_buff proc near ; CODE XREF: _gg_message_text_to_html_110+1Dp
					; _gg_message_text_to_html_110:loc_14A9p
					; DATA XREF: ...

var_3C		= dword	ptr -3Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp

loc_41:					; DATA XREF: .debug_loc:00002EB2o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, eax
		mov	esi, edx
		mov	ebp, ecx
		mov	eax, dword ptr ds:___stack_chk_guard

loc_52:					; DATA XREF: .eh_frame:000048CCo
		mov	[esp+3Ch+var_20], eax
		xor	eax, eax

loc_58:					; DATA XREF: .debug_loc:00002F4Co
		cmp	ecx, 0FFFFFFFFh
		jz	loc_1F0

loc_61:					; CODE XREF: _gg_message_text_to_html_110_buff+1B9j
					; DATA XREF: .debug_loc:00002F83o ...
		mov	[esp+3Ch+var_24], 0

loc_69:					; DATA XREF: .debug_loc:off_3006o
		mov	[esp+3Ch+var_3C], 6
		mov	ecx, offset aSpan ; "<span>"
		lea	edx, [esp+3Ch+var_24]

loc_79:					; DATA XREF: .debug_info:00001A00o
					; .debug_info:00001D6Do ...
		mov	eax, ebx
		call	_gg_append

loc_80:					; DATA XREF: .debug_info:00001BC9o
					; .debug_loc:off_2FDCo
		xor	edi, edi
		test	ebp, ebp
		jnz	short loc_DB
		jmp	short loc_100
; ---------------------------------------------------------------------------

loc_88:					; CODE XREF: _gg_message_text_to_html_110_buff+A1j
					; DATA XREF: .debug_loc:00002FE0o ...
		cmp	cl, 3Eh	; '>'
		jz	loc_13C
		cmp	cl, 26h	; '&'
		jz	loc_160
		cmp	cl, 22h	; '"'
		jz	loc_180
		cmp	cl, 27h	; '''
		jz	loc_1B0

loc_AC:					; DATA XREF: .debug_info:000023D8o
					; .debug_info:00002418o
		cmp	cl, 0Ah
		jz	loc_1D0
		cmp	cl, 0Dh
		jz	loc_158
		cmp	cl, 0C2h ; '¬'
		jz	loc_1A0
		inc	edi

loc_C8:					; CODE XREF: _gg_message_text_to_html_110_buff+16Bj
		test	ebx, ebx
		jz	short loc_D3
		mov	eax, [esp+3Ch+var_24]
		mov	[ebx+eax], cl

loc_D3:					; CODE XREF: _gg_message_text_to_html_110_buff+8Aj
		inc	[esp+3Ch+var_24]

loc_D7:					; CODE XREF: _gg_message_text_to_html_110_buff+114j
					; _gg_message_text_to_html_110_buff+119j ...
		cmp	ebp, edi

loc_D9:					; CODE XREF: sub_8C8+3j
		jbe	short loc_100	; jumptable 000008CB case 49

loc_DB:					; CODE XREF: _gg_message_text_to_html_110_buff+44j
					; _gg_message_text_to_html_110_buff:loc_FDj ...
		mov	cl, [esi+edi]
		cmp	cl, 3Ch	; '<'
		jnz	short loc_88
		mov	[esp+3Ch+var_3C], 4
		mov	ecx, offset aLt	; "&lt;"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_FA:					; DATA XREF: .debug_info:00001AADo
		inc	edi

loc_FB:					; DATA XREF: .debug_ranges:00003F70o
		cmp	ebp, edi

loc_FD:					; DATA XREF: .debug_info:000022DCo
		ja	short loc_DB
		nop

loc_100:				; CODE XREF: _gg_message_text_to_html_110_buff+46j
					; _gg_message_text_to_html_110_buff:loc_D9j
		mov	[esp+3Ch+var_3C], 7
		mov	ecx, offset aSpan_0 ; "</span>"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_117:				; DATA XREF: .debug_info:00001BF2o
		mov	eax, [esp+3Ch+var_24]
		test	ebx, ebx
		jz	short loc_123
		mov	byte ptr [ebx+eax], 0

loc_123:				; CODE XREF: _gg_message_text_to_html_110_buff+DDj
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_21F
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_13A:				; DATA XREF: .debug_loc:00002FACo
		retn
; ---------------------------------------------------------------------------
		align 4

loc_13C:				; CODE XREF: _gg_message_text_to_html_110_buff+4Bj
					; DATA XREF: .debug_ranges:00003F74o
		mov	[esp+3Ch+var_3C], 4
		mov	ecx, offset aGt	; "&gt;"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_153:				; DATA XREF: .debug_info:00001AD6o
		inc	edi
		jmp	short loc_D7
; ---------------------------------------------------------------------------
		align 4

loc_158:				; CODE XREF: _gg_message_text_to_html_110_buff+78j
		inc	edi
		jmp	loc_D7
; ---------------------------------------------------------------------------
		align 10h

loc_160:				; CODE XREF: _gg_message_text_to_html_110_buff+54j
		mov	[esp+3Ch+var_3C], 5
		mov	ecx, offset aAmp ; "&amp;"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_177:				; DATA XREF: .debug_info:00001AFFo
		inc	edi

loc_178:				; DATA XREF: .eh_frame:000047D4o
		jmp	loc_D7
; ---------------------------------------------------------------------------
		align 10h

loc_180:				; CODE XREF: _gg_message_text_to_html_110_buff+5Dj
		mov	[esp+3Ch+var_3C], 6
		mov	ecx, offset aQuot ; "&quot;"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_197:				; DATA XREF: .debug_info:00001B28o
		inc	edi

loc_198:				; DATA XREF: .debug_info:000027C5o
		jmp	loc_D7
; ---------------------------------------------------------------------------
		align 10h

loc_1A0:				; CODE XREF: _gg_message_text_to_html_110_buff+81j
		lea	eax, [edi+1]
		cmp	byte ptr [esi+eax], 0A0h ; '†'
		jz	short loc_200

loc_1A9:				; DATA XREF: .debug_line:00004122o
		mov	edi, eax
		jmp	loc_C8
; ---------------------------------------------------------------------------

loc_1B0:				; CODE XREF: _gg_message_text_to_html_110_buff+66j
		mov	[esp+3Ch+var_3C], 6
		mov	ecx, offset aApos ; "&apos;"

loc_1BC:				; DATA XREF: .debug_info:00001F08o
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_1C7:				; DATA XREF: .debug_info:00001B51o
		inc	edi
		jmp	loc_D7
; ---------------------------------------------------------------------------
		align 10h

loc_1D0:				; CODE XREF: _gg_message_text_to_html_110_buff+6Fj
		mov	[esp+3Ch+var_3C], 4
		mov	ecx, offset aBr	; "<br>"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx

loc_1E2:				; DATA XREF: .eh_frame:00004794o
		call	_gg_append

loc_1E7:				; DATA XREF: .debug_info:00001B7Ao
		inc	edi
		jmp	loc_D7
; ---------------------------------------------------------------------------
unk_1ED		db  8Dh	; ç		; DATA XREF: .debug_loc:0000300Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1F0:				; CODE XREF: _gg_message_text_to_html_110_buff+1Bj
					; DATA XREF: .debug_ranges:00003F78o
		mov	edi, edx
		repne scasb
		not	ecx

loc_1F6:				; DATA XREF: .debug_info:00002778o
					; .debug_info:00002788o
		lea	ebp, [ecx-1]
		jmp	loc_61
; ---------------------------------------------------------------------------
		align 10h

loc_200:				; CODE XREF: _gg_message_text_to_html_110_buff+167j
					; DATA XREF: .debug_ranges:00003F7Co
		mov	[esp+3Ch+var_3C], 6
		mov	ecx, offset aNbsp ; "&nbsp;"
		lea	edx, [esp+3Ch+var_24]
		mov	eax, ebx
		call	_gg_append

loc_217:				; DATA XREF: .debug_info:00001BA3o
		add	edi, 2
		jmp	loc_D7
; ---------------------------------------------------------------------------

loc_21F:				; CODE XREF: _gg_message_text_to_html_110_buff+EDj
					; DATA XREF: .debug_ranges:00003F80o
		call	__imp____stack_chk_fail
_gg_message_text_to_html_110_buff endp


; =============== S U B	R O U T	I N E =======================================


_gg_after_append_formatted_char	proc near ; CODE XREF: _gg_message_html_to_text+218p
					; _gg_message_html_to_text+2BEp ...

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_3D		= byte ptr -3Dh
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_225:				; DATA XREF: .debug_loc:000030F3o
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebp, eax
		mov	eax, [esp+6Ch+arg_0]

loc_231:				; DATA XREF: .debug_loc:0000318Do
					; .debug_loc:00003194o
		mov	[esp+6Ch+var_34], eax
		mov	eax, [esp+6Ch+arg_4]
		mov	[esp+6Ch+var_30], eax
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_38], eax
		mov	ebx, [esp+6Ch+arg_C]
		mov	eax, [esp+6Ch+arg_10]
		mov	[esp+6Ch+var_3C], eax
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+6Ch+var_20], eax
		xor	eax, eax

loc_25F:				; DATA XREF: .debug_loc:off_324Bo
		mov	[esp+6Ch+var_3D], dl
		mov	esi, edx
		shr	esi, 3
		and	esi, 1

loc_26B:				; DATA XREF: .debug_loc:0000324Fo
		cmp	[ecx], dl

loc_26D:				; DATA XREF: .debug_info:00001D68o
					; .debug_info:00002364o
		jz	loc_338

loc_273:				; DATA XREF: .debug_info:00001E88o
					; .debug_info:00001F38o ...
		cmp	esi, 1
		sbb	edi, edi
		and	edi, 0FFFFFFFDh
		add	edi, 6

loc_27E:				; CODE XREF: _gg_after_append_formatted_char+145j
					; DATA XREF: .debug_loc:000031C4o ...
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_2EE
		sub	eax, [esp+6Ch+var_38]
		mov	[ebx], eax
		mov	edx, [esp+6Ch+var_38]
		mov	[esp+6Ch+var_64], edx ;	size_t
		mov	[esp+6Ch+var_68], eax ;	void *
		add	eax, edi
		mov	[esp+6Ch+var_6C], eax ;	void *
		mov	[esp+6Ch+var_48], ecx

loc_29F:				; DATA XREF: .debug_loc:000031FCo
		call	_memmove

loc_2A4:				; DATA XREF: .debug_info:00001D20o
		mov	eax, [ebx]
		mov	dl, [ebp+0]
		mov	[eax], dl
		mov	edx, [ebx]
		lea	eax, [edx+1]
		mov	[ebx], eax
		mov	ax, [ebp+0]
		shr	ax, 8
		mov	[edx+1], al
		mov	eax, [ebx]
		lea	edx, [eax+1]
		mov	[ebx], edx

loc_2C4:				; DATA XREF: .debug_info:00001AB1o
					; .debug_info:00001ADAo ...
		mov	dl, [esp+6Ch+var_3D]
		mov	[eax+1], dl
		mov	eax, [ebx]
		mov	[esp+6Ch+var_4C], eax
		inc	eax
		mov	[esp+6Ch+var_50], eax
		mov	[ebx], eax
		test	esi, esi
		mov	ecx, [esp+6Ch+var_48]
		jnz	loc_370

loc_2E4:				; CODE XREF: _gg_after_append_formatted_char+172j
		mov	eax, [esp+6Ch+var_50]
		add	eax, [esp+6Ch+var_38]
		mov	[ebx], eax

loc_2EE:				; CODE XREF: _gg_after_append_formatted_char+5Ej
		mov	eax, [esp+6Ch+var_3C]
		test	eax, eax
		jz	short loc_2FC
		mov	edx, [esp+6Ch+var_3C]
		add	[edx], edi

loc_2FC:				; CODE XREF: _gg_after_append_formatted_char+D0j
		mov	dl, [esp+6Ch+var_3D]
		mov	[ecx], dl
		test	esi, esi
		jz	short loc_31E
		mov	edx, [esp+6Ch+var_34]
		mov	ax, [edx]
		mov	edx, [esp+6Ch+var_30]
		mov	[edx], ax
		mov	eax, [esp+6Ch+var_34]
		mov	al, [eax+2]
		mov	[edx+2], al

loc_31E:				; CODE XREF: _gg_after_append_formatted_char+E0j
					; _gg_after_append_formatted_char:loc_33Aj ...
		inc	word ptr [ebp+0]
		mov	edx, [esp+6Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_39B

loc_32E:				; DATA XREF: .debug_info:00002374o
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_335:				; DATA XREF: .debug_loc:00003198o
		retn
; ---------------------------------------------------------------------------
		align 4

loc_338:				; CODE XREF: _gg_after_append_formatted_char:loc_26Dj
		test	esi, esi

loc_33A:				; DATA XREF: .debug_info:0000296Ao
					; .debug_info:00002992o
		jz	short loc_31E
		mov	[esp+6Ch+var_64], 3 ; size_t
		mov	edx, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_68], edx ;	void *
		mov	edx, [esp+6Ch+var_30]
		mov	[esp+6Ch+var_6C], edx ;	void *
		mov	[esp+6Ch+var_48], ecx
		call	_memcmp

loc_35C:				; DATA XREF: .debug_info:00001D33o
		test	eax, eax
		mov	ecx, [esp+6Ch+var_48]
		jz	short loc_31E
		mov	edi, 6
		jmp	loc_27E
; ---------------------------------------------------------------------------
unk_36E		db  66h	; f		; DATA XREF: .debug_loc:00003280o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_370:				; CODE XREF: _gg_after_append_formatted_char+BAj
					; DATA XREF: .debug_ranges:00003F94o
		mov	edx, [esp+6Ch+var_34]
		mov	dx, [edx]
		mov	eax, [esp+6Ch+var_4C]
		mov	[eax+1], dx
		mov	edx, [esp+6Ch+var_34]
		mov	dl, [edx+2]
		mov	eax, [esp+6Ch+var_50]
		mov	[eax+2], dl
		mov	edx, [ebx]
		add	edx, 3
		mov	[esp+6Ch+var_50], edx
		jmp	loc_2E4
; ---------------------------------------------------------------------------

loc_39B:				; CODE XREF: _gg_after_append_formatted_char+108j
					; DATA XREF: .debug_loc:00003284o ...
		call	__imp____stack_chk_fail
_gg_after_append_formatted_char	endp


; =============== S U B	R O U T	I N E =======================================


		public _gg_message_text_to_html
_gg_message_text_to_html proc near	; DATA XREF: .debug_info:00001C4Co
					; .debug_info:00001D57o ...

var_D0		= dword	ptr -0D0h
var_C8		= dword	ptr -0C8h
var_C0		= dword	ptr -0C0h
var_B0		= dword	ptr -0B0h
var_A0		= byte ptr -0A0h
var_72		= byte ptr -72h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_3A1:				; DATA XREF: .debug_loc:00003297o
		push	edi
		push	esi
		push	ebx
		sub	esp, 0FCh
		mov	eax, [esp+10Ch+arg_0]
		mov	[esp+10Ch+var_C0], eax
		mov	eax, [esp+10Ch+arg_4]
		mov	edx, [esp+10Ch+arg_8]
		mov	[esp+10Ch+var_B0], edx
		mov	ebp, [esp+10Ch+arg_C]
		mov	edx, [esp+10Ch+arg_10]
		mov	[esp+10Ch+var_C8], edx
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+10Ch+var_20], edx
		xor	edx, edx
		lea	edx, [esp+10Ch+var_72]
		mov	[esp+10Ch+var_D0], edx
		mov	esi, offset aSpanStyleColor ; "<span style=\"color:#%02x%02x%02x; font"...
		mov	ecx, 52h ; 'R'
		mov	edi, edx
		rep movsb
		lea	edx, [esp+10Ch+var_A0]
_gg_message_text_to_html endp ;	sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_405		proc near		; DATA XREF: .debug_info:00001AB5o

arg_34		= dword	ptr  38h
arg_3F		= byte ptr  43h
arg_40		= dword	ptr  44h
arg_44		= dword	ptr  48h
arg_4C		= dword	ptr  50h
arg_50		= dword	ptr  54h
arg_54		= dword	ptr  58h
arg_58		= dword	ptr  5Ch
arg_60		= dword	ptr  64h
arg_65		= byte ptr  69h
arg_66		= byte ptr  6Ah
arg_67		= byte ptr  6Bh

		mov	[esp+arg_34], edx
		mov	esi, offset aImgName02x02x0 ; "<img name=\"%02x%02x%02x%02x%02x%02x%02"...
		mov	cl, 2Eh	; '.'
		mov	edi, edx
		rep movsb

loc_414:				; DATA XREF: .debug_loc:off_3367o
					; .debug_loc:off_33ACo
		mov	[esp+arg_65], 0
		mov	[esp+arg_66], 0
		mov	[esp+arg_67], 0

loc_423:				; DATA XREF: .debug_loc:off_33F3o
					; .debug_loc:off_3476o
		mov	[esp+arg_60], 0
		test	ebp, ebp

loc_42D:				; DATA XREF: .debug_info:00001ADEo
		jz	sub_A1D

loc_433:				; CODE XREF: sub_A1D+8j
					; DATA XREF: .debug_loc:00003331o ...
		mov	[esp+arg_4C], eax
		mov	[esp+arg_54], 0
		mov	[esp+arg_50], 0
		mov	[esp+arg_3F], 0
		mov	[esp+arg_44], 0

loc_454:				; DATA XREF: .debug_loc:0000336Bo
					; .debug_loc:000033B0o	...
		cmp	[esp+arg_58], 1
		jz	loc_593
		nop
sub_405		endp ; sp-analysis failed


loc_460:				; CODE XREF: sub_562+2Bj sub_562+41j
		cmp	byte ptr [esp+43h], 0
		js	loc_988

; =============== S U B	R O U T	I N E =======================================


sub_46B		proc near		; DATA XREF: .debug_ranges:off_3FC4o

arg_40		= dword	ptr  44h
arg_4C		= dword	ptr  50h

		cmp	[esp+arg_40], 2
		jbe	loc_998

loc_476:				; CODE XREF: sub_98D+5j
		test	ebp, ebp
		jz	sub_A2A

loc_47E:				; DATA XREF: .debug_info:00001B30o
		mov	edx, [esp+arg_4C]
		mov	cl, [edx]
		mov	edi, 3
		xor	ebx, ebx
		jmp	short sub_4A2
sub_46B		endp

; ---------------------------------------------------------------------------
unk_48D		db  8Dh	; ç		; DATA XREF: .debug_loc:00003563o
					; .debug_loc:off_35FAo	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_490:				; CODE XREF: sub_4A2+2Bj
		add	ebx, 6
		mov	eax, esi

; =============== S U B	R O U T	I N E =======================================


sub_495		proc near		; DATA XREF: .debug_loc:00003669o
					; .debug_loc:00003670o

arg_40		= dword	ptr  44h

		test	al, al
		js	short loc_4D7

loc_499:				; CODE XREF: sub_4A2+33j sub_662+C4j ...
		lea	edi, [ebx+3]
		cmp	[esp+arg_40], edi
		jb	short loc_4E4
sub_495		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_4A2		proc near		; CODE XREF: sub_46B+20j sub_4A2+3Fj
					; DATA XREF: ...

arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_3F		= byte ptr  43h
arg_40		= dword	ptr  44h
arg_44		= dword	ptr  48h
arg_48		= dword	ptr  4Ch
arg_54		= dword	ptr  58h

		movzx	eax, byte ptr [ebp+ebx+1]

loc_4A7:				; DATA XREF: .debug_info:00001B59o
		shl	eax, 8
		movzx	edx, byte ptr [ebp+ebx+0]
		or	eax, edx
		movzx	esi, byte ptr [ebp+ebx+2]
		test	cl, cl
		jnz	short loc_4BD
		and	esi, 0FFFFFFF0h

loc_4BD:				; CODE XREF: sub_4A2+16j
		cmp	eax, [esp+arg_44]
		jz	sub_618
		test	esi, 8
		jnz	short loc_490
		mov	ebx, edi

loc_4D1:				; DATA XREF: .debug_info:00001B82o
		mov	eax, esi
		test	al, al
		jns	short loc_499

loc_4D7:				; CODE XREF: sub_495+2j
		add	ebx, 0Ah
		lea	edi, [ebx+3]
		cmp	[esp+arg_40], edi
		jnb	short sub_4A2
		nop

loc_4E4:				; CODE XREF: sub_495+Bj
		xor	ebx, ebx

loc_4E6:				; CODE XREF: sub_98D+13j
					; DATA XREF: .debug_ranges:00003FC8o
		test	cl, cl
		jz	loc_5B6

loc_4EE:				; CODE XREF: sub_562+4Ej
		cmp	[esp+arg_3F], 0

loc_4F3:				; DATA XREF: .debug_info:00001A9Ao
		js	loc_57C
		mov	eax, [esp+arg_54]
		test	eax, eax
		jnz	short loc_557
		mov	edi, [esp+arg_48]
		test	edi, edi
		jz	short loc_542
		mov	[esp+arg_C], 0
		mov	[esp+arg_8], 0
		mov	[esp+arg_4], 0
sub_4A2		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_521(char *, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, int, char, int, int, int, int,	int, int, int, int, int, int, int, __int16)
sub_521		proc near		; DATA XREF: .debug_info:00001BD1o

arg_0		= dword	ptr  4
arg_48		= dword	ptr  4Ch
arg_4C		= dword	ptr  50h
arg_50		= dword	ptr  54h
arg_54		= dword	ptr  58h
arg_60		= dword	ptr  64h
arg_65		= byte ptr  69h
arg_96		= byte ptr  9Ah

		lea	eax, [esp+arg_96]
		mov	[esp+arg_0], eax ; char	*
		mov	eax, [esp+arg_48]
		add	eax, [esp+arg_60]
		mov	[esp+0], eax	; char *
		call	_sprintf

loc_53C:				; DATA XREF: .debug_info:000020EBo
		mov	edx, [esp+arg_4C]
		mov	cl, [edx]

loc_542:				; CODE XREF: sub_4A2+65j
		add	[esp+arg_60], 4Bh ; 'K'

loc_547:				; DATA XREF: .debug_info:00001BFAo
		mov	[esp+arg_54], 1
		lea	eax, [esp+arg_65]

loc_553:				; DATA XREF: .debug_info:00002548o
					; .debug_info:000026EFo ...
		mov	[esp+arg_50], eax

loc_557:				; CODE XREF: sub_4A2+5Dj
		lea	eax, [ecx-0Ah]
		cmp	al, 34h	; '4'   ; switch 53 cases
		jbe	sub_8C8
sub_521		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; jumptable 000008CB default case

sub_562		proc near		; DATA XREF: .rdata:000015CCo
					; .rdata:000015D0o ...

arg_3F		= byte ptr  43h
arg_44		= dword	ptr  48h
arg_48		= dword	ptr  4Ch
arg_4C		= dword	ptr  50h
arg_54		= dword	ptr  58h
arg_58		= dword	ptr  5Ch
arg_60		= dword	ptr  64h
arg_E8		= dword	ptr  0ECh

		mov	esi, [esp+arg_48]
		test	esi, esi
		jz	short loc_575
		mov	eax, [esp+arg_60]
		mov	edx, [esp+arg_48]
		mov	[edx+eax], cl

loc_575:				; CODE XREF: sub_562+6j
		inc	[esp+arg_60]
		lea	esi, [esi+0]

loc_57C:				; CODE XREF: sub_4A2:loc_4F3j
					; sub_8D2:loc_8EBj ...
		cmp	ebx, 1
		adc	[esp+arg_44], 0
		inc	[esp+arg_4C]
		cmp	[esp+arg_58], 1
		jnz	loc_460

loc_593:				; CODE XREF: sub_405+54j
		mov	eax, [esp+arg_4C]
		mov	cl, [eax]
		mov	eax, ecx
		and	eax, 0C0h
		add	eax, 0FFFFFF80h
		jnz	loc_460
		mov	ebx, 1
		test	cl, cl
		jnz	loc_4EE

loc_5B6:				; CODE XREF: sub_4A2+46j
					; DATA XREF: .debug_ranges:00003FA8o
		test	[esp+arg_3F], 4

loc_5BB:				; DATA XREF: .debug_line:off_411Co
		jnz	loc_9FF

loc_5C1:				; CODE XREF: sub_A18j
		test	[esp+arg_3F], 2
		jnz	loc_9E1

loc_5CC:				; CODE XREF: sub_9FAj
		test	[esp+arg_3F], 1
		jnz	loc_9C3

loc_5D7:				; CODE XREF: sub_9DCj
		mov	ecx, [esp+arg_54]
		test	ecx, ecx
		jnz	sub_9A5

loc_5E3:				; CODE XREF: sub_9BEj
		mov	eax, [esp+arg_60]
		mov	edx, [esp+arg_48]
		test	edx, edx
		jz	short loc_5F7
		mov	edx, [esp+arg_48]
		mov	byte ptr [edx+eax], 0

loc_5F7:				; CODE XREF: sub_562+8Bj
		mov	edx, [esp+arg_E8]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	___stack_chk_fail
		add	esp, 0FCh
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_562		endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_618		proc near		; CODE XREF: sub_4A2+1Fj
					; DATA XREF: .debug_ranges:00003FACo ...

arg_3F		= byte ptr  43h
arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

; FUNCTION CHUNK AT 00000758 SIZE 00000019 BYTES
; FUNCTION CHUNK AT 00000778 SIZE 00000019 BYTES

		test	[esp+arg_3F], 4
		jnz	loc_778

loc_623:				; CODE XREF: sub_791j sub_8C8+3j
		test	[esp+arg_3F], 2
		jnz	loc_758

loc_62E:				; CODE XREF: sub_771j
		test	[esp+arg_3F], 1
		jnz	sub_738

loc_639:				; CODE XREF: sub_751j
		test	esi, 0Fh
		jz	loc_6EC
sub_618		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_645		proc near		; DATA XREF: .debug_ranges:off_3FECo

arg_40		= dword	ptr  44h

		test	esi, 8
		jz	sub_72C
		lea	eax, [ebx+6]
		cmp	[esp+arg_40], eax
		jb	sub_72C
		lea	ebx, [ebp+edi+0]
sub_645		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_662		proc near		; DATA XREF: .debug_info:00001D05o
					; .debug_loc:off_36D9o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_3F		= byte ptr  43h
arg_48		= dword	ptr  4Ch
arg_4C		= dword	ptr  50h
arg_50		= dword	ptr  54h
arg_54		= dword	ptr  58h
arg_60		= dword	ptr  64h
arg_96		= byte ptr  9Ah

		mov	edi, eax

loc_664:				; CODE XREF: sub_72C+4j
		mov	eax, [esp+arg_50]
		test	eax, eax
		jz	short loc_688
		mov	[esp+arg_4], 3	; size_t
		mov	edx, [esp+arg_50]
		mov	[esp+arg_0], edx ; void	*
		mov	[esp+0], ebx	; void *
		call	_memcmp

loc_684:				; DATA XREF: .debug_info:00001F41o
		test	eax, eax

loc_686:				; DATA XREF: .debug_info:00001D3Bo
		jz	short loc_6EC

loc_688:				; CODE XREF: sub_662+8j
		mov	eax, [esp+arg_54]
		test	eax, eax
		jnz	sub_8A8

loc_694:				; CODE XREF: sub_8C1j
					; DATA XREF: .debug_info:00001CC0o
		mov	eax, [esp+arg_4C]
		cmp	byte ptr [eax],	0
		jz	sub_818
		mov	eax, [esp+arg_48]
		test	eax, eax
		jz	short loc_6DB

loc_6A9:				; DATA XREF: .eh_frame:00004814o
		movzx	eax, byte ptr [ebx+2]
		mov	[esp+arg_C], eax
		movzx	eax, byte ptr [ebx+1]
		mov	[esp+arg_8], eax
		movzx	eax, byte ptr [ebx]
		mov	[esp+arg_4], eax
		lea	edx, [esp+arg_96]
		mov	[esp+arg_0], edx ; char	*
		mov	eax, [esp+arg_48]
		add	eax, [esp+arg_60]
		mov	[esp+0], eax	; char *
		call	_sprintf

loc_6DB:				; CODE XREF: sub_662+45j
					; DATA XREF: .debug_info:00001F65o
		add	[esp+arg_60], 4Bh ; 'K'
		mov	[esp+arg_50], ebx
		mov	[esp+arg_54], 1

loc_6EC:				; CODE XREF: sub_618+27j
					; sub_662:loc_686j ...
		test	esi, 1
		jnz	loc_7F8

loc_6F8:				; CODE XREF: sub_811j
		test	esi, 2
		jnz	loc_7D8

loc_704:				; CODE XREF: sub_7F1j
		test	esi, 4
		jnz	loc_798
		mov	eax, esi
		test	al, al
		js	loc_7BB

loc_71A:				; CODE XREF: sub_7B1+4j
		mov	edx, [esp+arg_4C]
		mov	cl, [edx]
		mov	ebx, edi
		mov	[esp+arg_3F], al
		jmp	loc_499
sub_662		endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_72C		proc near		; CODE XREF: sub_645+6j sub_645+13j
					; DATA XREF: ...

arg_65		= byte ptr  69h

		lea	ebx, [esp+arg_65]
		jmp	loc_664
sub_72C		endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_738		proc near		; CODE XREF: sub_618+1Bj
					; DATA XREF: .debug_ranges:00003FF8o

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 4
		mov	ecx, offset aB	; "</b>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append
sub_738		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_751		proc near		; DATA XREF: .debug_info:00001FA5o
		jmp	loc_639
sub_751		endp

; ---------------------------------------------------------------------------
		align 4
; START	OF FUNCTION CHUNK FOR sub_618

loc_758:				; CODE XREF: sub_618+10j
		mov	dword ptr [esp+0], 4
		mov	ecx, offset aI	; "</i>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append
; END OF FUNCTION CHUNK	FOR sub_618

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_771		proc near		; DATA XREF: .debug_info:00001FD1o
		jmp	loc_62E
sub_771		endp

; ---------------------------------------------------------------------------
		align 4
; START	OF FUNCTION CHUNK FOR sub_618

loc_778:				; CODE XREF: sub_618+5j
		mov	dword ptr [esp+0], 4
		mov	ecx, offset aU	; "</u>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append
; END OF FUNCTION CHUNK	FOR sub_618

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_791		proc near		; DATA XREF: .debug_info:00001FFDo
		jmp	loc_623
sub_791		endp

; ---------------------------------------------------------------------------
		align 4

loc_798:				; CODE XREF: sub_662+A8j
		mov	dword ptr [esp], 3
		mov	ecx, offset aU_0 ; "<u>"
		lea	edx, [esp+64h]
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================


sub_7B1		proc near		; DATA XREF: .debug_info:00002029o

arg_3F		= byte ptr  43h
arg_40		= dword	ptr  44h
arg_4C		= dword	ptr  50h

		mov	eax, esi
		test	al, al
		jns	loc_71A

loc_7BB:				; CODE XREF: sub_662+B2j
		lea	ebx, [edi+0Ah]
		cmp	[esp+arg_40], ebx
		jnb	short sub_828
		mov	edx, [esp+arg_4C]
		mov	cl, [edx]
		mov	ebx, edi
		mov	eax, esi
		mov	[esp+arg_3F], al
		jmp	loc_499
sub_7B1		endp

; ---------------------------------------------------------------------------
		align 4

loc_7D8:				; CODE XREF: sub_662+9Cj
		mov	dword ptr [esp], 3
		mov	ecx, offset aI_0 ; "<i>"
		lea	edx, [esp+64h]
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_7F1		proc near		; DATA XREF: .debug_info:00002055o
		jmp	loc_704
sub_7F1		endp

; ---------------------------------------------------------------------------
		align 4

loc_7F8:				; CODE XREF: sub_662+90j
		mov	dword ptr [esp], 3
		mov	ecx, offset aB_0 ; "<b>"
		lea	edx, [esp+64h]
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_811		proc near		; DATA XREF: .debug_info:00002081o
		jmp	loc_6F8
sub_811		endp

; ---------------------------------------------------------------------------
unk_816		db  66h	; f		; DATA XREF: .debug_loc:000036E4o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


sub_818		proc near		; CODE XREF: sub_662+39j
					; DATA XREF: .debug_ranges:00003FFCo

arg_54		= dword	ptr  58h

		mov	[esp+arg_54], 0
		jmp	loc_6EC
sub_818		endp

; ---------------------------------------------------------------------------
unk_825		db  8Dh	; ç		; DATA XREF: .debug_loc:000036E8o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_828(char *, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, int, int, char)
sub_828		proc near		; CODE XREF: sub_7B1+11j
					; DATA XREF: .debug_ranges:00004000o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= dword	ptr  24h
arg_48		= dword	ptr  4Ch
arg_60		= dword	ptr  64h
arg_68		= byte ptr  6Ch

		mov	eax, [esp+arg_48]
		test	eax, eax
		jz	short sub_890
		movzx	eax, byte ptr [ebp+edi+2]
		mov	[esp+arg_20], eax
		movzx	eax, byte ptr [ebp+edi+3]
		mov	[esp+arg_1C], eax
		movzx	eax, byte ptr [ebp+edi+4]
		mov	[esp+arg_18], eax
		movzx	eax, byte ptr [ebp+edi+5]
		mov	[esp+arg_14], eax
		movzx	eax, byte ptr [ebp+edi+6]
		mov	[esp+arg_10], eax
		movzx	eax, byte ptr [ebp+edi+7]
		mov	[esp+arg_C], eax
		movzx	eax, byte ptr [ebp+edi+8]
		mov	[esp+arg_8], eax
		movzx	eax, byte ptr [ebp+edi+9]
		mov	[esp+arg_4], eax
		lea	edx, [esp+arg_68]
		mov	[esp+arg_0], edx ; char	*
		mov	eax, [esp+arg_48]
		add	eax, [esp+arg_60]
		mov	[esp+0], eax	; char *
		call	_sprintf
sub_828		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_890		proc near		; CODE XREF: sub_828+6j
					; DATA XREF: .debug_info:000020ADo ...

arg_3F		= byte ptr  43h
arg_4C		= dword	ptr  50h
arg_60		= dword	ptr  64h

		add	[esp+arg_60], 1Dh
		mov	eax, [esp+arg_4C]
		mov	cl, [eax]
		mov	edx, esi
		mov	[esp+arg_3F], dl
		jmp	loc_499
sub_890		endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_8A8		proc near		; CODE XREF: sub_662+2Cj
					; DATA XREF: .debug_ranges:00004004o ...

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 7
		mov	ecx, offset aSpan_0 ; "</span>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append
sub_8A8		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_8C1		proc near		; DATA XREF: .debug_info:00001F7Co
		jmp	loc_694
sub_8C1		endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================


sub_8C8		proc near		; CODE XREF: sub_521+3Bj
					; DATA XREF: .debug_ranges:00003FD0o ...

; FUNCTION CHUNK AT 00001824 SIZE 00000008 BYTES

		movzx	eax, al
		jmp	ds:off_15C8[eax*4] ; switch jump
sub_8C8		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


sub_8D2		proc near		; DATA XREF: .rdata:00001698o
					; .debug_info:00001F2Ao

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 4
		mov	ecx, offset aGt	; "&gt;"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_8EB:				; DATA XREF: .debug_info:0000211Do
		jmp	loc_57C
sub_8D2		endp


; =============== S U B	R O U T	I N E =======================================


sub_8F0		proc near		; DATA XREF: .rdata:00001690o

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 4
		mov	ecx, offset aLt	; "&lt;"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_909:				; DATA XREF: .debug_info:00002149o
		jmp	loc_57C
sub_8F0		endp


; =============== S U B	R O U T	I N E =======================================


sub_90E		proc near		; DATA XREF: .rdata:0000163Co

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 6
		mov	ecx, offset aApos ; "&apos;"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_927:				; DATA XREF: .debug_info:00002175o
		jmp	loc_57C
sub_90E		endp


; =============== S U B	R O U T	I N E =======================================


sub_92C		proc near		; DATA XREF: .rdata:00001638o
					; .debug_info:00001FD9o

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 5
		mov	ecx, offset aAmp ; "&amp;"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_945:				; DATA XREF: .debug_info:000021A1o
		jmp	loc_57C
sub_92C		endp


; =============== S U B	R O U T	I N E =======================================


sub_94A		proc near		; DATA XREF: .rdata:00001628o

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 6
		mov	ecx, offset aQuot ; "&quot;"

loc_956:				; DATA XREF: .debug_info:00002005o
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_963:				; DATA XREF: .debug_info:000021CDo
		jmp	loc_57C
sub_94A		endp


; =============== S U B	R O U T	I N E =======================================


; int __cdecl sub_968(char *, size_t, int, int,	int, int, int, int, int, int, int, int,	int, int, int, __int16,	int, int, int, int, void *, int, int, int, int,	char, char, int, int, int, int,	int, int, int, int, int, int, __int16, int, int, int, int, int,	int, int, int, int, int, int, int, int,	int, int, int, int, int, int, int, int)
sub_968		proc near		; DATA XREF: .rdata:off_15C8o

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h
arg_14		= dword	ptr  18h
arg_18		= dword	ptr  1Ch
arg_1C		= dword	ptr  20h
arg_20		= dword	ptr  24h
arg_3F		= byte ptr  43h
arg_40		= dword	ptr  44h
arg_44		= dword	ptr  48h
arg_48		= dword	ptr  4Ch
arg_4C		= dword	ptr  50h
arg_50		= dword	ptr  54h
arg_54		= dword	ptr  58h
arg_58		= dword	ptr  5Ch
arg_60		= dword	ptr  64h
arg_65		= byte ptr  69h
arg_68		= byte ptr  6Ch
arg_96		= byte ptr  9Ah
arg_E8		= dword	ptr  0ECh

		mov	dword ptr [esp+0], 4
		mov	ecx, offset aBr	; "<br>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append

loc_981:				; DATA XREF: .debug_info:000021F9o
					; .debug_info:00002031o
		jmp	loc_57C
sub_968		endp

; ---------------------------------------------------------------------------
		align 4

loc_988:				; CODE XREF: .text:00000465j
		and	byte ptr [esp+43h], 7Fh

; =============== S U B	R O U T	I N E =======================================


sub_98D		proc near		; DATA XREF: .debug_ranges:00003FD4o

arg_40		= dword	ptr  44h
arg_4C		= dword	ptr  50h

		cmp	[esp+arg_40], 2
		ja	loc_476

loc_998:				; CODE XREF: sub_46B+5j
		mov	eax, [esp+arg_4C]

loc_99C:				; DATA XREF: .eh_frame:00004858o
		mov	cl, [eax]
		xor	ebx, ebx
		jmp	loc_4E6
sub_98D		endp


; =============== S U B	R O U T	I N E =======================================


sub_9A5		proc near		; CODE XREF: sub_562+7Bj
					; DATA XREF: .debug_ranges:00003FB0o ...

arg_48		= dword	ptr  4Ch
arg_60		= byte ptr  64h

		mov	dword ptr [esp+0], 7

loc_9AC:				; DATA XREF: .debug_info:0000205Do
		mov	ecx, offset aSpan_0 ; "</span>"
		lea	edx, [esp+arg_60]
		mov	eax, [esp+arg_48]
		call	_gg_append
sub_9A5		endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_9BE		proc near		; DATA XREF: .debug_info:00002222o
		jmp	loc_5E3
sub_9BE		endp

; ---------------------------------------------------------------------------

loc_9C3:				; CODE XREF: sub_562+6Fj
		mov	dword ptr [esp], 4
		mov	ecx, offset aB	; "</b>"
		lea	edx, [esp+64h]
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_9DC		proc near		; DATA XREF: .debug_info:00002089o
					; .debug_info:0000224Eo
		jmp	loc_5D7
sub_9DC		endp

; ---------------------------------------------------------------------------

loc_9E1:				; CODE XREF: sub_562+64j
		mov	dword ptr [esp], 4
		mov	ecx, offset aI	; "</i>"
		lea	edx, [esp+64h]

loc_9F1:				; DATA XREF: .debug_info:000020B5o
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_9FA		proc near		; DATA XREF: .debug_info:0000227Ao
		jmp	loc_5CC
sub_9FA		endp

; ---------------------------------------------------------------------------

loc_9FF:				; CODE XREF: sub_562:loc_5BBj
		mov	dword ptr [esp], 4
		mov	ecx, offset aU	; "</u>"
		lea	edx, [esp+64h]
		mov	eax, [esp+4Ch]
		call	_gg_append

; =============== S U B	R O U T	I N E =======================================

; Attributes: thunk

sub_A18		proc near		; DATA XREF: .debug_info:000022A6o
					; .debug_info:00001EFBo
		jmp	loc_5C1
sub_A18		endp


; =============== S U B	R O U T	I N E =======================================


sub_A1D		proc near		; CODE XREF: sub_405:loc_42Dj
					; DATA XREF: .debug_loc:00003543o

arg_40		= dword	ptr  44h

		mov	[esp+arg_40], 0
		jmp	loc_433
sub_A1D		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

; int __cdecl sub_A2A(void *, unsigned int)
sub_A2A		proc near		; CODE XREF: sub_46B+Dj
					; DATA XREF: .debug_ranges:00003FB4o ...

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		mov	[esp+arg_4], 1BBh ; unsigned int
		mov	[esp+arg_0], offset aLibMessage_c ; "lib/message.c"
		mov	dword ptr [esp+0], offset aFormatNull ;	"format	!= NULL"
		call	__assert
sub_A2A		endp

; [00000005 BYTES: COLLAPSED FUNCTION ___stack_chk_fail]
unk_A4B		db  90h	; ê		; DATA XREF: .debug_info:00001D97o
					; .debug_info:000022D2o

; =============== S U B	R O U T	I N E =======================================


		public _gg_message_html_to_text
_gg_message_html_to_text proc near	; CODE XREF: _gg_message_html_to_text_110+37p
					; _gg_message_html_to_text_110:loc_1456p
					; DATA XREF: ...

var_AC		= dword	ptr -0ACh
var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_65		= byte ptr -65h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_3F		= byte ptr -3Fh
var_3E		= word ptr -3Eh
var_3C		= dword	ptr -3Ch
var_36		= word ptr -36h
var_34		= byte ptr -34h
var_33		= word ptr -33h
var_31		= byte ptr -31h
var_30		= byte ptr -30h
var_2E		= byte ptr -2Eh
var_2D		= byte ptr -2Dh
var_2B		= byte ptr -2Bh
var_2A		= byte ptr -2Ah
var_29		= byte ptr -29h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_A4D:				; DATA XREF: .debug_loc:00003706o
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	eax, [esp+0ACh+arg_0]
		mov	[esp+0ACh+var_7C], eax
		mov	edx, [esp+0ACh+arg_8]
		mov	[esp+0ACh+var_78], edx
		mov	edx, [esp+0ACh+arg_C]

loc_A73:				; DATA XREF: .debug_info:00002125o
		mov	ecx, [esp+0ACh+arg_10]
		mov	[esp+0ACh+var_64], ecx
		mov	eax, [esp+0ACh+arg_4]
		mov	[esp+0ACh+var_50], eax
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+0ACh+var_20], eax
		xor	eax, eax

loc_A97:				; DATA XREF: .debug_loc:off_37F1o
					; .debug_loc:off_3812o	...
		mov	[esp+0ACh+var_36], 0
		mov	[esp+0ACh+var_34], 0

loc_AA3:				; DATA XREF: .debug_info:00002151o
		mov	[esp+0ACh+var_33], 0
		mov	[esp+0ACh+var_31], 0

loc_AAF:				; DATA XREF: .debug_loc:off_3AAFo
		mov	[esp+0ACh+var_3F], 0
		mov	[esp+0ACh+var_3E], 0
		mov	[esp+0ACh+var_3C], 0

loc_AC3:				; DATA XREF: .debug_loc:off_3B45o
		mov	ecx, [esp+0ACh+var_78]
		test	ecx, ecx
		jz	short loc_AD5
		mov	ecx, [esp+0ACh+var_78]

loc_ACF:				; DATA XREF: .debug_info:0000217Do
		mov	dword ptr [ecx], 0

loc_AD5:				; CODE XREF: _gg_message_html_to_text+7Dj
					; DATA XREF: .debug_loc:off_37BDo
		movsx	eax, byte ptr [edx]
		test	al, al
		jz	loc_B7E
		mov	ebp, edx
		mov	[esp+0ACh+var_6C], 0
		mov	[esp+0ACh+var_65], 0
		mov	[esp+0ACh+var_54], 0

loc_AF7:				; DATA XREF: .debug_info:000021A9o
		mov	[esp+0ACh+var_58], 0
		mov	[esp+0ACh+var_5C], 0
		xor	ebx, ebx
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		mov	[esp+0ACh+var_74], 0

loc_B1B:				; DATA XREF: .debug_loc:000037C1o
					; .debug_loc:000037C8o	...
		nop

loc_B1C:				; CODE XREF: _gg_message_html_to_text:loc_B7Cj
		test	ebx, ebx
		jz	loc_BB4

loc_B24:				; DATA XREF: .debug_info:000024ADo
					; .debug_loc:off_3B8Do	...
		mov	esi, dword ptr ds:__imp____mb_cur_max
		cmp	dword ptr [esi], 1
		jnz	loc_C84
		mov	edx, dword ptr ds:__imp___pctype
		mov	edx, [edx]
		mov	ax, [edx+eax*2]

loc_B3F:				; DATA XREF: .debug_loc:00003B91o
		and	eax, 107h

loc_B44:				; DATA XREF: .debug_ranges:00004018o
		test	eax, eax
		jnz	loc_C9C

loc_B4C:				; CODE XREF: _gg_message_html_to_text+24Aj
		movsx	eax, byte ptr [ebp+0]

loc_B50:				; DATA XREF: .debug_info:00001EC7o
		cmp	al, 23h	; '#'
		jz	short loc_B5C
		cmp	al, 3Bh	; ';'
		jnz	loc_D20

loc_B5C:				; CODE XREF: _gg_message_html_to_text+106j
		test	edi, edi
		jz	short loc_BD2
		mov	ebx, 1
		lea	esi, [esi+0]

loc_B68:				; CODE XREF: _gg_message_html_to_text+178j
		cmp	al, 3Eh	; '>'
		jz	loc_CA8
		mov	edi, 1

loc_B75:				; CODE XREF: _gg_message_html_to_text+221j
					; _gg_message_html_to_text+231j ...
		inc	ebp
		movsx	eax, byte ptr [ebp+0]
		test	al, al

loc_B7C:				; DATA XREF: .debug_info:0000222Ao
		jnz	short loc_B1C

loc_B7E:				; CODE XREF: _gg_message_html_to_text+8Ej
					; DATA XREF: .debug_loc:000037CCo ...
		mov	eax, [esp+0ACh+var_3C]
		mov	edx, [esp+0ACh+var_7C]
		test	edx, edx
		jz	short loc_B92
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 0

loc_B92:				; CODE XREF: _gg_message_html_to_text+13Cj
		mov	ecx, [esp+0ACh+var_20]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	loc_13C3

loc_BA5:				; DATA XREF: .debug_info:00002256o
		add	esp, 9Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_BB0:				; CODE XREF: _gg_message_html_to_text+31Cj
					; DATA XREF: .debug_loc:off_3BB7o ...
		mov	edi, [esp+0ACh+var_60]

loc_BB4:				; CODE XREF: _gg_message_html_to_text+D2j
					; _gg_message_html_to_text+2F0j
					; DATA XREF: ...
		xor	ebx, ebx

loc_BB6:				; CODE XREF: _gg_message_html_to_text+255j
					; DATA XREF: .debug_ranges:00004038o
		movsx	eax, byte ptr [ebp+0]
		cmp	al, 3Ch	; '<'
		jz	loc_C74
		test	edi, edi
		jnz	short loc_B68
		cmp	al, 26h	; '&'
		jz	loc_DC8
		test	ebx, ebx
		jz	short loc_C0B

loc_BD2:				; CODE XREF: _gg_message_html_to_text+112j
		cmp	al, 3Bh	; ';'

loc_BD4:				; DATA XREF: .debug_info:00002282o
		jz	loc_F0C

loc_BDA:				; DATA XREF: .debug_info:00002591o
					; .debug_loc:off_3C35o	...
		mov	esi, dword ptr ds:__imp____mb_cur_max
		cmp	dword ptr [esi], 1
		jz	loc_E5C
		mov	[esp+0ACh+var_A8], 107h	; int

loc_BF1:				; DATA XREF: .debug_ranges:00004050o
		mov	[esp+0ACh+var_AC], eax ; int

loc_BF4:				; DATA XREF: .debug_ranges:00004054o
					; .debug_loc:00003C39o
		call	__isctype

loc_BF9:				; DATA XREF: .debug_info:000025AAo
					; .debug_ranges:00004058o
		test	eax, eax
		jnz	loc_E75

loc_C01:				; CODE XREF: _gg_message_html_to_text:loc_E6Fj
					; DATA XREF: .debug_info:000022AEo
		cmp	byte ptr [ebp+0], 23h ;	'#'
		jz	loc_E75

loc_C0B:				; CODE XREF: _gg_message_html_to_text+184j
					; DATA XREF: .debug_info:00001DA0o
		mov	eax, [esp+0ACh+var_7C]
		test	eax, eax
		jz	short loc_C21
		mov	eax, [esp+0ACh+var_3C]
		mov	dl, [ebp+0]

loc_C1A:				; DATA XREF: .debug_info:000022E0o
		mov	ecx, [esp+0ACh+var_7C]
		mov	[ecx+eax], dl

loc_C21:				; CODE XREF: _gg_message_html_to_text+1C5j
		inc	[esp+0ACh+var_3C]
		cmp	[esp+0ACh+var_64], 1
		jz	loc_E84

loc_C30:				; CODE XREF: _gg_message_html_to_text+444j
		movzx	edx, [esp+0ACh+var_65]
		mov	eax, [esp+0ACh+var_78]
		mov	[esp+0ACh+var_9C], eax
		lea	eax, [esp+0ACh+var_50]
		mov	[esp+0ACh+var_A0], eax

loc_C45:				; DATA XREF: .debug_info:00001E78o
		mov	ecx, [esp+0ACh+var_6C]

loc_C49:				; DATA XREF: .debug_info:00002866o
					; .debug_info:000028B6o
		mov	[esp+0ACh+var_A4], ecx

loc_C4D:				; CODE XREF: _gg_message_html_to_text+522j
		lea	eax, [esp+0ACh+var_33]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_36]
		mov	[esp+0ACh+var_AC], eax
		lea	ecx, [esp+0ACh+var_3F]
		lea	eax, [esp+0ACh+var_3E]
		call	_gg_after_append_formatted_char

loc_C69:				; DATA XREF: .debug_info:000026EBo
		xor	ebx, ebx
		xor	edi, edi
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 4

loc_C74:				; CODE XREF: _gg_message_html_to_text+170j
		mov	[esp+0ACh+var_80], ebp
		mov	edi, 1
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 4

loc_C84:				; CODE XREF: _gg_message_html_to_text+E1j
					; DATA XREF: .debug_ranges:0000401Co
		mov	[esp+0ACh+var_A8], 107h	; int

loc_C8C:				; DATA XREF: .debug_ranges:00004020o
		mov	[esp+0ACh+var_AC], eax ; int

loc_C8F:				; DATA XREF: .debug_ranges:00004024o
		call	__isctype

loc_C94:				; DATA XREF: .debug_info:000024C6o
					; .debug_ranges:00004028o
		test	eax, eax
		jz	loc_B4C

loc_C9C:				; CODE XREF: _gg_message_html_to_text+FAj
		mov	ebx, 1
		jmp	loc_BB6
; ---------------------------------------------------------------------------
		align 4

loc_CA8:				; CODE XREF: _gg_message_html_to_text+11Ej
		mov	edi, offset dword_169C
		mov	ecx, 3
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	loc_DD8
		mov	eax, [esp+0ACh+var_7C]
		test	eax, eax
		jz	short loc_CD2
		mov	eax, [esp+0ACh+var_3C]
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 0Ah

loc_CD2:				; CODE XREF: _gg_message_html_to_text+278j
		inc	[esp+0ACh+var_3C]
		movzx	edx, [esp+0ACh+var_65]
		mov	eax, [esp+0ACh+var_78]
		mov	[esp+0ACh+var_9C], eax
		lea	eax, [esp+0ACh+var_50]
		mov	[esp+0ACh+var_A0], eax
		mov	ecx, [esp+0ACh+var_6C]
		mov	[esp+0ACh+var_A4], ecx
		lea	eax, [esp+0ACh+var_33]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_36]
		mov	[esp+0ACh+var_AC], eax
		lea	ecx, [esp+0ACh+var_3F]
		lea	eax, [esp+0ACh+var_3E]
		call	_gg_after_append_formatted_char

loc_D0F:				; DATA XREF: .debug_info:00002715o
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 10h

loc_D20:				; CODE XREF: _gg_message_html_to_text+10Aj
					; DATA XREF: .debug_ranges:0000403Co
		mov	esi, ebp
		sub	esi, [esp+0ACh+var_74]
		mov	[esp+0ACh+var_AC], esi
		mov	ecx, [esp+0ACh+var_74]
		lea	edx, [esp+0ACh+var_3C]
		mov	eax, [esp+0ACh+var_7C]
		call	_gg_append

loc_D3A:				; DATA XREF: .debug_info:00002519o
					; .debug_loc:00003BF8o
		test	esi, esi
		jz	loc_BB4
		xor	ebx, ebx
		mov	eax, 1
		movzx	edx, [esp+0ACh+var_65]
		mov	[esp+0ACh+var_70], edx
		mov	[esp+0ACh+var_60], edi
		mov	edi, [esp+0ACh+var_64]
		jmp	short loc_D6E
; ---------------------------------------------------------------------------

loc_D5C:				; CODE XREF: _gg_message_html_to_text+325j
					; DATA XREF: .debug_loc:00003BFCo
		test	eax, eax
		jnz	short loc_D8A

loc_D60:				; CODE XREF: _gg_message_html_to_text+33Cj
		inc	[esp+0ACh+var_3E]

loc_D65:				; CODE XREF: _gg_message_html_to_text+338j
					; _gg_message_html_to_text+378j
		inc	ebx
		cmp	esi, ebx
		jz	loc_BB0

loc_D6E:				; CODE XREF: _gg_message_html_to_text+30Ej
		cmp	edi, 1
		jnz	short loc_D5C
		mov	ecx, [esp+0ACh+var_74]
		movsx	edx, byte ptr [ecx+ebx]
		and	edx, 0C0h
		add	edx, 0FFFFFF80h
		jz	short loc_D65
		test	eax, eax
		jz	short loc_D60

loc_D8A:				; CODE XREF: _gg_message_html_to_text+312j
		mov	eax, [esp+0ACh+var_78]
		mov	[esp+0ACh+var_9C], eax
		lea	eax, [esp+0ACh+var_50]
		mov	[esp+0ACh+var_A0], eax
		mov	edx, [esp+0ACh+var_6C]
		mov	[esp+0ACh+var_A4], edx
		lea	eax, [esp+0ACh+var_33]
		mov	[esp+0ACh+var_A8], eax
		lea	eax, [esp+0ACh+var_36]
		mov	[esp+0ACh+var_AC], eax
		lea	ecx, [esp+0ACh+var_3F]
		mov	edx, [esp+0ACh+var_70]
		lea	eax, [esp+0ACh+var_3E]
		call	_gg_after_append_formatted_char

loc_DC2:				; DATA XREF: .debug_info:00002544o
		xor	eax, eax
		jmp	short loc_D65
; ---------------------------------------------------------------------------
		align 4

loc_DC8:				; CODE XREF: _gg_message_html_to_text+17Cj
					; DATA XREF: .debug_ranges:00004040o
		mov	[esp+0ACh+var_74], ebp
		mov	ebx, 1
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 4

loc_DD8:				; CODE XREF: _gg_message_html_to_text+26Cj
		mov	edi, offset aImgName ; "<img name=\""
		mov	ecx, 0Bh
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	loc_EA0

loc_DEE:				; CODE XREF: _gg_message_html_to_text+464j
		mov	eax, [esp+0ACh+var_80]
		add	eax, 1Ch
		cmp	ebp, eax
		jb	loc_EFC
		mov	edi, [esp+0ACh+var_80]
		add	edi, 0Bh
		mov	edx, [esp+0ACh+var_80]

loc_E08:				; DATA XREF: .debug_info:000024B8o
		add	edx, 1Bh
		mov	esi, dword ptr ds:__imp____mb_cur_max

loc_E11:				; DATA XREF: .debug_info:000025E7o
					; .debug_ranges:off_406Co ...
		mov	[esp+0ACh+var_70], ebx
		mov	ebx, esi
		mov	esi, edx
		jmp	short loc_E41
; ---------------------------------------------------------------------------
unk_E1B		db  90h	; ê		; DATA XREF: .debug_loc:off_3CAAo
; ---------------------------------------------------------------------------

loc_E1C:				; CODE XREF: _gg_message_html_to_text+3FBj
		mov	edx, dword ptr ds:__imp___pctype
		mov	ecx, [edx]
		mov	ax, [ecx+eax*2]

loc_E28:				; DATA XREF: .debug_loc:00003CAEo
		and	eax, 80h
		movzx	eax, ax

loc_E30:				; CODE XREF: _gg_message_html_to_text:loc_E59j
					; DATA XREF: .debug_ranges:00004098o
		test	eax, eax
		jz	loc_108C
		inc	edi
		cmp	edi, esi
		jz	loc_F88

loc_E41:				; CODE XREF: _gg_message_html_to_text+3CDj
		movsx	eax, byte ptr [edi]

loc_E44:				; DATA XREF: .debug_ranges:0000409Co
		cmp	dword ptr [ebx], 1
		jz	short loc_E1C
		mov	[esp+0ACh+var_A8], 80h ; 'Ä' ; int

loc_E51:				; DATA XREF: .debug_ranges:000040A0o
		mov	[esp+0ACh+var_AC], eax ; int

loc_E54:				; DATA XREF: .debug_ranges:000040A4o
		call	__isctype

loc_E59:				; DATA XREF: .debug_info:00002600o
		jmp	short loc_E30
; ---------------------------------------------------------------------------
		align 4

loc_E5C:				; CODE XREF: _gg_message_html_to_text+197j
					; DATA XREF: .debug_ranges:0000405Co ...
		mov	edx, dword ptr ds:__imp___pctype
		mov	edx, [edx]
		mov	ax, [edx+eax*2]
		and	eax, 107h

loc_E6D:				; DATA XREF: .debug_ranges:00004060o
		test	eax, eax

loc_E6F:				; DATA XREF: .debug_info:00002521o
		jz	loc_C01

loc_E75:				; CODE XREF: _gg_message_html_to_text+1AFj
					; _gg_message_html_to_text+1B9j
		mov	ebx, 1
		xor	edi, edi
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 4

loc_E84:				; CODE XREF: _gg_message_html_to_text+1DEj
		movsx	eax, byte ptr [ebp+0]
		and	eax, 0C0h
		add	eax, 0FFFFFF80h
		jnz	loc_C30
		xor	ebx, ebx
		xor	edi, edi
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 10h

loc_EA0:				; CODE XREF: _gg_message_html_to_text+39Cj
		mov	edi, offset aImgName_0 ; "<img name='"
		mov	ecx, 0Bh
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jz	loc_DEE
		mov	edi, offset aB_0 ; "<b>"

loc_EBB:				; DATA XREF: .debug_info:000024DDo
		mov	ecx, 3
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	loc_10DD
		inc	[esp+0ACh+var_5C]
		or	[esp+0ACh+var_65], 1
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_EE4:				; CODE XREF: _gg_message_html_to_text+869j
		mov	edi, offset aSpan_2 ; "</span"

loc_EE9:				; DATA XREF: .debug_info:0000259Co
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	short loc_EFC
		and	[esp+0ACh+var_65], 0F7h
		nop

loc_EFC:				; CODE XREF: _gg_message_html_to_text+3ABj
					; _gg_message_html_to_text+4A8j ...
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------
		align 4

loc_F0C:				; CODE XREF: _gg_message_html_to_text:loc_BD4j
		mov	ecx, [esp+0ACh+var_7C]
		test	ecx, ecx
		jz	loc_1159
		mov	edi, offset aLt	; "&lt;"
		mov	ecx, 4
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jz	short loc_F74
		mov	edi, offset aGt	; "&gt;"
		mov	ecx, 4
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jnz	loc_109F
		mov	eax, [esp+0ACh+var_3C]
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 3Eh	; '>'
		inc	eax
		mov	[esp+0ACh+var_3C], eax

loc_F51:				; CODE XREF: _gg_message_html_to_text+539j
					; _gg_message_html_to_text+68Cj ...
		movzx	edx, [esp+0ACh+var_65]
		mov	ecx, [esp+0ACh+var_78]
		mov	[esp+0ACh+var_9C], ecx
		lea	eax, [esp+0ACh+var_50]
		mov	[esp+0ACh+var_A0], eax
		mov	eax, [esp+0ACh+var_6C]
		mov	[esp+0ACh+var_A4], eax
		jmp	loc_C4D
; ---------------------------------------------------------------------------
		align 4

loc_F74:				; CODE XREF: _gg_message_html_to_text+4DCj
		mov	eax, [esp+0ACh+var_3C]
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 3Ch	; '<'
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	short loc_F51
; ---------------------------------------------------------------------------
		align 4

loc_F88:				; CODE XREF: _gg_message_html_to_text+3EFj
		mov	ebx, [esp+0ACh+var_70]

loc_F8C:				; DATA XREF: .debug_loc:off_3C7Eo
					; .debug_ranges:00004074o ...
		mov	edx, [esp+0ACh+var_50]
		test	edx, edx

loc_F92:				; DATA XREF: .debug_info:000025C1o
		jz	loc_1037

loc_F98:				; DATA XREF: .debug_info:0000262Bo
		mov	word ptr [esp+0ACh+var_30], 0
		mov	[esp+0ACh+var_2E], 0
		mov	ax, [esp+0ACh+var_3E]
		mov	[esp+0ACh+var_2D], al
		shr	ax, 8
		mov	[esp+0ACh+var_2D+1], al
		mov	[esp+0ACh+var_2B], 80h ; 'Ä'
		mov	[esp+0ACh+var_2A], 9
		mov	[esp+0ACh+var_29], 1

loc_FD0:				; DATA XREF: .debug_loc:off_3C5Fo
		xor	esi, esi
		lea	edi, [esp+0ACh+var_30]
		mov	[esp+0ACh+var_70], ebx
		mov	ebx, [esp+0ACh+var_80]

loc_FDE:				; DATA XREF: .debug_loc:00003C63o
		xchg	ax, ax

loc_FE0:				; CODE XREF: _gg_message_html_to_text+5D1j
		mov	cl, [ebx+esi+0Bh]
		mov	[esp+0ACh+var_30], cl
		mov	al, [ebx+esi+0Ch]
		mov	[esp+0ACh+var_30+1], al
		mov	[esp+0ACh+var_A4], 10h ; int
		mov	[esp+0ACh+var_A8], 0 ; char **
		mov	[esp+0ACh+var_AC], edi ; char *
		call	_strtoul

loc_1008:				; DATA XREF: .debug_info:00002643o
		mov	ecx, esi
		sar	ecx, 1
		mov	edx, 0Ch
		sub	edx, ecx
		mov	[esp+edx+0ACh+var_2D], al
		add	esi, 2

loc_101A:				; DATA XREF: .debug_info:0000266Ao
		cmp	esi, 10h
		jnz	short loc_FE0
		mov	ebx, [esp+0ACh+var_70]
		lea	esi, [esp+0ACh+var_2D]
		mov	ecx, 0Dh
		mov	edi, [esp+0ACh+var_50]
		rep movsb
		add	[esp+0ACh+var_50], 0Dh

loc_1037:				; CODE XREF: _gg_message_html_to_text:loc_F92j
					; DATA XREF: .debug_info:0000262Fo ...
		mov	eax, [esp+0ACh+var_78]
		test	eax, eax
		jz	short loc_1046
		mov	ecx, [esp+0ACh+var_78]

loc_1043:				; DATA XREF: .debug_info:000026F3o
		add	dword ptr [ecx], 0Dh

loc_1046:				; CODE XREF: _gg_message_html_to_text+5F1j
		add	[esp+0ACh+var_6C], 0Dh
		mov	eax, [esp+0ACh+var_7C]
		test	eax, eax
		jz	loc_11F0
		mov	eax, [esp+0ACh+var_3C]
		cmp	[esp+0ACh+var_64], 1
		jz	loc_117E

loc_1066:				; CODE XREF: _gg_message_html_to_text+73Bj
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 0A0h ; '†'
		inc	eax
		mov	[esp+0ACh+var_3C], eax

loc_1073:				; CODE XREF: _gg_message_html_to_text+7A9j
		inc	[esp+0ACh+var_3E]
		mov	[esp+0ACh+var_3F], 0FFh
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_108C:				; CODE XREF: _gg_message_html_to_text+3E6j
					; DATA XREF: .debug_loc:00003C82o
		mov	ebx, [esp+0ACh+var_70]

loc_1090:				; DATA XREF: .debug_ranges:000040B8o
		xor	edi, edi

loc_1092:				; DATA XREF: .debug_info:0000271Do
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_109F:				; CODE XREF: _gg_message_html_to_text+4EEj
					; DATA XREF: .debug_ranges:00004078o
		mov	edi, offset aQuot ; "&quot;"
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jz	short loc_1119
		mov	edi, offset aApos ; "&apos;"
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jnz	loc_118C
		mov	eax, [esp+0ACh+var_3C]
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 27h	; '''
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_10DD:				; CODE XREF: _gg_message_html_to_text+47Aj
		mov	edi, offset aB	; "</b>"
		mov	ecx, 4
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb

loc_10ED:				; DATA XREF: .debug_info:0000285Co
		jnz	short loc_112F
		mov	eax, [esp+0ACh+var_5C]
		test	eax, eax
		jle	loc_EFC
		dec	[esp+0ACh+var_5C]
		jnz	loc_EFC

loc_1105:				; DATA XREF: .debug_info:000027B9o
		and	[esp+0ACh+var_65], 0FEh
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_1119:				; CODE XREF: _gg_message_html_to_text+663j
		mov	eax, [esp+0ACh+var_3C]
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 22h	; '"'
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_112F:				; CODE XREF: _gg_message_html_to_text:loc_10EDj
		mov	edi, offset aI_0 ; "<i>"
		mov	ecx, 3
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	short loc_11B4
		inc	[esp+0ACh+var_58]
		or	[esp+0ACh+var_65], 2
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_1159:				; CODE XREF: _gg_message_html_to_text+4C6j
		mov	edi, offset aNbsp ; "&nbsp;"
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jnz	short loc_1175
		add	[esp+0ACh+var_3C], 2
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_1175:				; CODE XREF: _gg_message_html_to_text+71Dj
		inc	[esp+0ACh+var_3C]
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_117E:				; CODE XREF: _gg_message_html_to_text+614j
					; DATA XREF: .debug_ranges:0000407Co ...
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 0C2h ; '¬'
		inc	eax
		jmp	loc_1066
; ---------------------------------------------------------------------------

loc_118C:				; CODE XREF: _gg_message_html_to_text+675j
					; DATA XREF: .debug_ranges:00004080o ...
		mov	edi, offset aAmp ; "&amp;"
		mov	ecx, 5
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		jnz	short loc_11FA
		mov	eax, [esp+0ACh+var_3C]
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 26h	; '&'
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_11B4:				; CODE XREF: _gg_message_html_to_text+6F3j
		mov	edi, offset aI	; "</i>"
		mov	ecx, 4
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	short loc_122D
		mov	edi, [esp+0ACh+var_58]
		test	edi, edi
		jle	loc_EFC
		dec	[esp+0ACh+var_58]
		jnz	loc_EFC
		and	[esp+0ACh+var_65], 0FDh
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_11F0:				; CODE XREF: _gg_message_html_to_text+605j
					; DATA XREF: .debug_ranges:00004084o ...
		add	[esp+0ACh+var_3C], 2
		jmp	loc_1073
; ---------------------------------------------------------------------------

loc_11FA:				; CODE XREF: _gg_message_html_to_text+750j
					; DATA XREF: .debug_ranges:00004088o ...
		mov	edi, offset aNbsp ; "&nbsp;"
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_74]
		repe cmpsb
		mov	eax, [esp+0ACh+var_3C]
		jnz	short loc_1257
		cmp	[esp+0ACh+var_64], 1
		jz	loc_13C8

loc_121B:				; CODE XREF: _gg_message_html_to_text:loc_13D1j
		mov	ecx, [esp+0ACh+var_7C]
		mov	byte ptr [ecx+eax], 0A0h ; '†'
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_122D:				; CODE XREF: _gg_message_html_to_text+778j
		mov	edi, offset aU_0 ; "<u>"
		mov	ecx, 3
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	short loc_1269
		inc	[esp+0ACh+var_54]
		or	[esp+0ACh+var_65], 4
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_1257:				; CODE XREF: _gg_message_html_to_text+7C2j
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 3Fh	; '?'
		inc	eax
		mov	[esp+0ACh+var_3C], eax
		jmp	loc_F51
; ---------------------------------------------------------------------------

loc_1269:				; CODE XREF: _gg_message_html_to_text+7F1j
		mov	edi, offset aU	; "</u>"
		mov	ecx, 4
		mov	esi, [esp+0ACh+var_80]
		repe cmpsb
		jnz	short loc_12A5
		mov	esi, [esp+0ACh+var_54]
		test	esi, esi
		jle	loc_EFC
		dec	[esp+0ACh+var_54]
		jnz	loc_EFC
		and	[esp+0ACh+var_65], 0FBh
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
; ---------------------------------------------------------------------------

loc_12A5:				; CODE XREF: _gg_message_html_to_text+82Dj
		mov	edi, offset aSpan_1 ; "<span "
		mov	ecx, 6
		mov	esi, [esp+0ACh+var_80]

loc_12B3:				; DATA XREF: .debug_info:0000296Eo
		repe cmpsb
		jnz	loc_EE4
		mov	edx, [esp+0ACh+var_80]
		add	edx, 6
		lea	eax, [ebp-8]
		mov	[esp+0ACh+var_70], eax
		cmp	edx, eax
		jnb	loc_EFC

loc_12D1:				; DATA XREF: .debug_info:0000269Fo
					; .debug_ranges:off_40D4o ...
		mov	[esp+0ACh+var_80], ebx
		mov	ebx, edx
		jmp	short loc_12EF
; ---------------------------------------------------------------------------
		align 4

loc_12DC:				; CODE XREF: _gg_message_html_to_text+8A7j
					; DATA XREF: .debug_ranges:000040D8o ...
		cmp	al, 27h	; '''
		jz	short loc_12F5
		cmp	al, 20h	; ' '
		jz	short loc_12F5
		inc	ebx

loc_12E5:				; CODE XREF: _gg_message_html_to_text:loc_1367j
					; _gg_message_html_to_text+969j
		cmp	[esp+0ACh+var_70], ebx
		jbe	loc_13D6

loc_12EF:				; CODE XREF: _gg_message_html_to_text+88Bj
		mov	al, [ebx]
		cmp	al, 22h	; '"'
		jnz	short loc_12DC

loc_12F5:				; CODE XREF: _gg_message_html_to_text+892j
					; _gg_message_html_to_text+896j
		lea	eax, [ebx+1]
		mov	edi, offset aColor ; "color:#"
		mov	ecx, 7
		mov	esi, eax
		repe cmpsb
		jnz	short loc_1365

loc_1308:				; DATA XREF: .debug_loc:off_3CFAo
					; .debug_ranges:000040DCo
		mov	word ptr [esp+0ACh+var_2D], 0
		mov	[esp+0ACh+var_2B], 0
		lea	esi, [ebx+8]
		lea	edi, [ebx+0Eh]
		cmp	ebp, edi
		jnb	short loc_1345
		jmp	loc_13BA
; ---------------------------------------------------------------------------
unk_1326	db  66h	; f		; DATA XREF: .debug_loc:off_3D1Ao
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_1328:				; CODE XREF: _gg_message_html_to_text+905j
					; DATA XREF: .debug_ranges:000040FCo ...
		mov	ecx, dword ptr ds:__imp___pctype
		mov	edx, [ecx]
		mov	ax, [edx+eax*2]

loc_1334:				; DATA XREF: .debug_loc:00003D1Eo
		and	eax, 80h
		movzx	eax, ax

loc_133C:				; CODE XREF: _gg_message_html_to_text:loc_1363j
					; DATA XREF: .debug_ranges:00004100o
		test	eax, eax
		jz	short loc_13BA
		inc	esi
		cmp	esi, edi

loc_1343:				; DATA XREF: .debug_info:00001D24o
		jz	short loc_136C

loc_1345:				; CODE XREF: _gg_message_html_to_text+8D3j
		movsx	eax, byte ptr [esi]

loc_1348:				; DATA XREF: .debug_ranges:00004104o
		mov	edx, dword ptr ds:__imp____mb_cur_max
		cmp	dword ptr [edx], 1
		jz	short loc_1328
		mov	[esp+0ACh+var_A8], 80h ; 'Ä' ; int

loc_135B:				; DATA XREF: .debug_ranges:00004108o
		mov	[esp+0ACh+var_AC], eax ; int

loc_135E:				; DATA XREF: .debug_ranges:0000410Co
		call	__isctype

loc_1363:				; DATA XREF: .debug_info:000026B8o
		jmp	short loc_133C
; ---------------------------------------------------------------------------

loc_1365:				; CODE XREF: _gg_message_html_to_text+8BAj
					; DATA XREF: .debug_ranges:000040E0o ...
		mov	ebx, eax

loc_1367:				; DATA XREF: .debug_info:00001D37o
					; .debug_info:00001F45o
		jmp	loc_12E5
; ---------------------------------------------------------------------------

loc_136C:				; CODE XREF: _gg_message_html_to_text:loc_1343j
					; DATA XREF: .debug_ranges:000040E4o
		xor	esi, esi
		lea	edi, [esp+0ACh+var_2D]

loc_1372:				; CODE XREF: _gg_message_html_to_text+95Fj
		mov	al, [ebx+esi+8]
		mov	[esp+0ACh+var_2D], al
		mov	dl, [ebx+esi+9]
		mov	[esp+0ACh+var_2D+1], dl
		mov	[esp+0ACh+var_A4], 10h ; int

loc_138D:				; DATA XREF: .debug_info:00001F69o
					; .debug_info:000020B1o ...
		mov	[esp+0ACh+var_A8], 0 ; char **
		mov	[esp+0ACh+var_AC], edi ; char *
		call	_strtoul

loc_139D:				; DATA XREF: .debug_info:000026CAo
		mov	edx, esi
		sar	edx, 1
		mov	byte ptr [esp+edx+0ACh+var_36],	al
		add	esi, 2

loc_13A8:				; DATA XREF: .debug_loc:off_3CE7o
		cmp	esi, 6
		jnz	short loc_1372

loc_13AD:				; DATA XREF: .debug_info:000020C8o
		or	[esp+0ACh+var_65], 8
		add	ebx, 9
		jmp	loc_12E5
; ---------------------------------------------------------------------------

loc_13BA:				; CODE XREF: _gg_message_html_to_text+8D5j
					; _gg_message_html_to_text+8F2j
					; DATA XREF: ...
		mov	ebx, [esp+0ACh+var_80]
		jmp	loc_EFC
; ---------------------------------------------------------------------------

loc_13C3:				; CODE XREF: _gg_message_html_to_text+153j
					; DATA XREF: .debug_ranges:000040E8o
		call	__imp____stack_chk_fail
; ---------------------------------------------------------------------------

loc_13C8:				; CODE XREF: _gg_message_html_to_text+7C9j
					; DATA XREF: .debug_info:00002765o
		mov	edx, [esp+0ACh+var_7C]
		mov	byte ptr [edx+eax], 0C2h ; '¬'
		inc	eax

loc_13D1:				; DATA XREF: .debug_info:000024CAo
					; .debug_info:000025AEo ...
		jmp	loc_121B
; ---------------------------------------------------------------------------

loc_13D6:				; CODE XREF: _gg_message_html_to_text+89Dj
		mov	ebx, [esp+0ACh+var_80]
		xor	edi, edi
		mov	[esp+0ACh+var_80], 0
		jmp	loc_B75
_gg_message_html_to_text endp

; ---------------------------------------------------------------------------
unk_13E9	db  8Dh	; ç		; DATA XREF: .debug_info:00002340o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _gg_message_html_to_text_110
_gg_message_html_to_text_110 proc near	; DATA XREF: .debug_info:000027FDo
					; .debug_loc:off_3D57o

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi

loc_13ED:				; DATA XREF: .debug_loc:00003D5Bo
		push	ebx
		sub	esp, 34h
		mov	esi, [esp+3Ch+arg_0]

loc_13F5:				; DATA XREF: .debug_info:00002647o
					; .debug_info:000026CEo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_10], eax
		xor	eax, eax

loc_1400:				; DATA XREF: .debug_info:00002843o
					; .debug_loc:off_3E15o
		mov	[esp+3Ch+var_2C], 1
		mov	[esp+3Ch+var_30], esi
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], 0
		call	_gg_message_html_to_text

loc_1428:				; DATA XREF: .debug_info:00002847o
					; .debug_info:00002862o ...
		inc	eax

loc_1429:				; DATA XREF: .debug_loc:00003DC5o
		mov	[esp+3Ch+var_3C], eax ;	size_t
		call	_malloc

loc_1431:				; DATA XREF: .debug_info:000028DDo
					; .debug_info:000028E1o ...
		mov	ebx, eax

loc_1433:				; DATA XREF: .debug_loc:off_3DE1o
		test	eax, eax
		jz	short loc_145B

loc_1437:				; DATA XREF: .debug_info:00002890o
					; .debug_loc:off_3E3Fo	...
		mov	[esp+3Ch+var_2C], 1
		mov	[esp+3Ch+var_30], esi

loc_1443:				; DATA XREF: .debug_info:off_16D0o
		mov	[esp+3Ch+var_34], 0
		mov	[esp+3Ch+var_38], 0
		mov	[esp+3Ch+var_3C], eax

loc_1456:				; DATA XREF: .debug_loc:00003DE5o
					; .debug_loc:00003DECo	...
		call	_gg_message_html_to_text

loc_145B:				; CODE XREF: _gg_message_html_to_text_110+49j
					; DATA XREF: .debug_info:00002894o ...
		mov	eax, ebx
		mov	edx, [esp+3Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_146F

loc_1469:				; DATA XREF: .debug_loc:00003DF0o
		add	esp, 34h
		pop	ebx
		pop	esi

locret_146E:				; DATA XREF: .debug_loc:00003E19o
					; .debug_loc:00003E20o
		retn
; ---------------------------------------------------------------------------

loc_146F:				; CODE XREF: _gg_message_html_to_text_110+7Bj
					; DATA XREF: .debug_loc:00003E24o
		call	__imp____stack_chk_fail
_gg_message_html_to_text_110 endp


; =============== S U B	R O U T	I N E =======================================


		public _gg_message_text_to_html_110
_gg_message_text_to_html_110 proc near	; DATA XREF: .debug_info:00002801o
					; .debug_info:000028E6o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi

loc_1475:				; DATA XREF: .debug_loc:00003E74o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_0]
		mov	edi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	ecx, edi
		mov	edx, esi
		call	_gg_message_text_to_html_110_buff

loc_1496:				; DATA XREF: .debug_info:00002966o
					; .debug_loc:off_3EF0o
		inc	eax

loc_1497:				; DATA XREF: .debug_loc:00003EF4o
		mov	[esp+2Ch+var_2C], eax ;	size_t
		call	_malloc

loc_149F:				; DATA XREF: .debug_info:00002985o
		mov	ebx, eax

loc_14A1:				; DATA XREF: .debug_loc:off_3F10o
		test	eax, eax
		jz	short loc_14AE
		mov	ecx, edi
		mov	edx, esi

loc_14A9:				; DATA XREF: .debug_loc:00003F14o
		call	_gg_message_text_to_html_110_buff

loc_14AE:				; CODE XREF: _gg_message_text_to_html_110+2Fj
					; DATA XREF: .debug_info:0000298Eo
		mov	eax, ebx
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_14C3
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_14C3:				; CODE XREF: _gg_message_text_to_html_110+46j
					; DATA XREF: .debug_info:00001741o ...
		call	__imp____stack_chk_fail
_gg_message_text_to_html_110 endp

_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
byte_14C8	label byte		; DATA XREF: .debug_aranges:00003F58o
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 14D0h
aSpan		db '<span>',0           ; DATA XREF: _gg_message_text_to_html_110_buff+30o
					; .debug_info:00001BE6o
aSpan_0		db '</span>',0          ; DATA XREF: _gg_message_text_to_html_110_buff+C7o
					; sub_8A8+7o ...
aLt		db '&lt;',0             ; DATA XREF: _gg_message_text_to_html_110_buff+AAo
					; sub_8F0+7o ...
aGt		db '&gt;',0             ; DATA XREF: _gg_message_text_to_html_110_buff+103o
					; sub_8D2+7o ...
aAmp		db '&amp;',0            ; DATA XREF: _gg_message_text_to_html_110_buff+127o
					; sub_92C+7o ...
aQuot		db '&quot;',0           ; DATA XREF: _gg_message_text_to_html_110_buff+147o
					; sub_94A+7o ...
aApos		db '&apos;',0           ; DATA XREF: _gg_message_text_to_html_110_buff+177o
					; sub_90E+7o ...
aBr		db '<br>',0             ; DATA XREF: _gg_message_text_to_html_110_buff+197o
					; sub_968+7o ...
aNbsp		db '&nbsp;',0           ; DATA XREF: _gg_message_text_to_html_110_buff+1C7o
					; _gg_message_html_to_text:loc_1159o ...
aLibMessage_c	db 'lib/message.c',0    ; DATA XREF: sub_A2A+8o
					; .debug_info:000020DCo
aFormatNull	db 'format != NULL',0   ; DATA XREF: sub_A2A+10o
					; .debug_info:000020D2o
aU		db '</u>',0             ; DATA XREF: sub_618+167o
					; .text:00000A06o ...
aI		db '</i>',0             ; DATA XREF: sub_618+147o
					; .text:000009E8o ...
aB		db '</b>',0             ; DATA XREF: sub_738+7o
					; .text:000009CAo ...
aB_0		db '<b>',0              ; DATA XREF: .text:000007FFo
					; _gg_message_html_to_text+46Ao ...
aI_0		db '<i>',0              ; DATA XREF: .text:000007DFo
					; _gg_message_html_to_text:loc_112Fo ...
aU_0		db '<u>',0              ; DATA XREF: .text:0000079Fo
					; _gg_message_html_to_text:loc_122Do ...
		align 4
aSpanStyleColor	db '<span style="color:#%02x%02x%02x; font-family:',27h,'MS Shell Dlg 2',27h
					; DATA XREF: _gg_message_text_to_html+53o
		db '; font-size:9pt; ">',0
		align 4
aImgName02x02x0	db '<img name="%02x%02x%02x%02x%02x%02x%02x%02x">',0 ; DATA XREF: sub_405+4o
		align 4
off_15C8	dd offset sub_968	; DATA XREF: sub_8C8+3r
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset loc_57C
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_94A
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_92C
		dd offset sub_90E
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_8F0
		dd offset sub_562	; jumptable 000008CB default case
		dd offset sub_8D2
dword_169C	dd 72623Ch		; DATA XREF: _gg_message_html_to_text:loc_CA8o
aImgName	db '<img name="',0      ; DATA XREF: _gg_message_html_to_text:loc_DD8o
aImgName_0	db '<img name=',27h,0   ; DATA XREF: _gg_message_html_to_text:loc_EA0o
aSpan_1		db '<span ',0           ; DATA XREF: _gg_message_html_to_text:loc_12A5o
aColor		db 'color:#',0          ; DATA XREF: _gg_message_html_to_text+8ACo
aSpan_2		db '</span',0           ; DATA XREF: _gg_message_html_to_text:loc_EE4o
		align 10h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 16D0h
off_16D0	dd offset loc_1443+3	; DATA XREF: .debug_aranges:00003F4Ao
		db 2, 0
		dd offset dword_2B1C
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 62696C01h, 73656D2Fh, 65676173h, 4300632Eh, 775C5C3Ah
		dd 736B726Fh, 65636170h, 69705C5Ch, 6E696764h, 7665642Dh
		dd 5C5C6C65h, 67646970h, 322D6E69h, 2E30312Eh, 5C5C3131h
		dd 7062696Ch, 6C707275h, 705C5C65h, 6F746F72h, 736C6F63h
		dd 67675C5Ch
		db 0
		dd offset _gg_append
		dd offset loc_14C3+5
		dd offset off_411C
		db 2, 73h, 69h
aZe_t		db 'ze_t',0
		db 3, 0D5h, 87h
		db    0
		db 2 dup(0), 3
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 3
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 3, 4, 5
		dd 746E69h, 6C050403h, 20676E6Fh, 746E69h, 6C050803h, 20676E6Fh
		dd 676E6F6Ch, 746E6920h, 5020300h, 726F6873h, 6E692074h
		dd 5F020074h, 7A697373h, 745F65h, 0AD7304h, 73020000h
		dd 657A6973h, 400745Fh,	0DE76h,	6010300h, 72616863h, 695F0400h
		dd 6675626Fh, 81052000h, 19Ch, 74705F05h, 83050072h, 19Ch
		dd 5002302h, 746E635Fh,	0AD840500h, 2000000h, 5F050423h
		dd 65736162h, 9C850500h, 2000001h, 5F050823h, 67616C66h
		dd 0AD860500h, 2000000h, 5F050C23h
; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_8C8

loc_1824:				; CODE XREF: sub_8C8+3j
		imul	bp, [ebp+0], 8705h ; jumptable 000008CB	case 25
		lodsd
; END OF FUNCTION CHUNK	FOR sub_8C8
; ---------------------------------------------------------------------------
		dd 2000000h, 5F051023h,	72616863h, 667562h, 0AD8805h, 23020000h
		dd 625F0514h, 69736675h, 8905007Ah, 0ADh, 5182302h, 706D745Fh
		dd 6D616E66h, 8A050065h, 19Ch, 1C2302h,	0FD0406h, 46020000h
		dd 454C49h, 1058B05h, 1030000h,	67697306h, 2064656Eh, 72616863h
		dd 8010300h, 69736E75h,	64656E67h, 61686320h, 75020072h
		dd 31746E69h, 745F36h, 971E06h,	8030000h, 6E6F6C07h, 6F6C2067h
		dd 7520676Eh, 6769736Eh, 2064656Eh, 746E69h, 73070403h
		dd 74657A69h, 657079h, 0E0070407h, 24Bh, 5F474708h, 4F434E45h
		dd 474E4944h, 3150435Fh, 303532h, 47470800h, 434E455Fh
		dd 4E49444Fh, 54555F47h, 1003846h, 5F474708h, 4F434E45h
		dd 474E4944h, 564E495Fh, 44494C41h, 2007F00h, 655F6767h
		dd 646F636Eh, 5F676E69h, 0E4070074h, 204h, 4060409h, 268h
		dd 0FD0Ah, 0BD040600h, 6000001h, 27904h, 1BD0A00h, 4060000h
		dd 19Ch, 7369010Bh, 756E6C61h, 9A02006Dh, 0AD01h, 2A40300h
		dd 630C0000h, 0AD9A0200h, 0
		dd 7369010Bh, 67696478h, 2007469h, 0AD01A4h, 0C5030000h
		dd 0C000002h, 0A4020063h, 0ADh,	67670D00h, 7070615Fh, 646E65h
		dd 1017001h
		dd offset _gg_append
		dd offset unk_3E
		dd offset dword_2DC0
		dd 32E01h, 73640E00h, 70010074h, 19C01h
		db 0
		dd offset dword_2E40
		db 0Eh,	70h, 6Fh
		dd 70010073h, 32E01h
		db 0
		dd offset byte_2E61
		db 0Eh,	73h, 72h
		dd 70010063h, 33401h
		db 0
		dd offset word_2E82
		db 0Fh,	6Ch, 65h
		dd 7001006Eh, 7901h, 910200h
		db 10h
		dd offset unk_3E
		dd offset loc_1328+5
		align 2
		dw 406h
		dd offset loc_79
		dd 33A0406h, 12110000h
aGg_message_tex	db 'gg_message_text_to_html_110_buff',0
		db 1, 0B1h, 3
		dd 7901h
		db 0
		dd offset _gg_message_text_to_html_110_buff
		dd offset _gg_after_append_formatted_char
		dd offset off_2EAE
		db 1, 54h, 5
		dd 640E0000h, 1007473h,	19C03B1h
		db 2 dup(0)
		dd offset off_2F48
		dw 740Eh
		dd 747865h, 6203B101h
		db 2, 2	dup(0)
		dd offset off_2F7F
		db 13h
		dd offset aText_len	; "text_len"
		dd 0EE03B201h
		db 3 dup(0)
		dd offset off_2F9D
		db 14h
		dd 0B4010069h, 7903h
		db 0
		dd offset off_2FDC
		db 15h
		dd offset aDst_len	; "dst_len"
		dw 0B401h
		dd 7903h
		db 0
		dd offset off_3006
		db 16h
		dd offset off_3F64
		dd offset loc_4F3+5
		dw 6314h
		dd 3BD0100h, 0FDh
		dd offset off_3026
		db 17h
		dd offset loc_FA
		dd offset loc_2C4+1
		dd offset sub_405
		db 18h,	1, 50h
		dd 18007302h, 91025201h, 51011858h
		db 5, 3
		dd offset aLt		; "&lt;"
		dw 218h
		dd 34010074h
		db 0, 17h
		dd offset loc_153
		dd offset loc_2C4+1
		dd offset loc_42D+1
		dw 118h
		dd 730250h, 2520118h, 1185891h
		db 51h,	5, 3
		dd offset aGt		; "&gt;"
		db 18h
		dd 1007402h
		db 34h,	0, 17h
		dd offset loc_177
		dd offset loc_2C4+1
		dd offset loc_454+3
		db 18h
		dd 73025001h, 52011800h, 18589102h, 3055101h
		dd offset aAmp		; "&amp;"
		dd 740218h, 17003501h
		dd offset loc_197
		dd offset loc_2C4+1
		dd offset loc_47E+2
		dd 2500118h, 1180073h, 58910252h, 5510118h
		db 3
		dd offset aQuot		; "&quot;"
		db 18h,	2, 74h
		dd 360100h
		db 17h
		dd offset loc_1C7
		dd offset loc_2C4+1
		dd offset loc_4A7+2
		db 18h,	1, 50h
		dd 18007302h, 91025201h, 51011858h
		db 5, 3
		dd offset aApos		; "&apos;"
		dw 218h
		dd 36010074h
		db 0, 17h
		dd offset loc_1E7
		dd offset loc_2C4+1
		dd offset loc_4D1+1
		dw 118h
		dd 730250h, 2520118h, 1185891h
		db 51h,	5, 3
		dd offset aBr		; "<br>"
		db 18h
		dd 1007402h
		db 34h,	0, 19h
		dd offset loc_217
		dd offset loc_2C4+1
		db 18h
		dd 73025001h, 52011800h, 18589102h, 3055101h
		dd offset aNbsp		; "&nbsp;"
		dd 740218h, 3601h
		db 17h
		dd offset loc_80
		dd offset loc_2C4+1
		dd offset sub_521
		db 18h,	1, 50h
		dd 18007302h, 91025201h, 51011858h
		db 5, 3
		dd offset aSpan		; "<span>"
		dw 218h
		dd 36010074h
		db 0, 17h
		dd offset loc_117
		dd offset loc_2C4+1
		dd offset loc_547+3
		dw 118h
		dd 730250h, 2520118h, 1185891h
		db 51h,	5, 3
		dd offset aSpan_0	; "</span>"
		db 18h
		dd 1007402h
		db 37h,	0, 10h
		dd offset _gg_after_append_formatted_char
		dd offset loc_1328+5
		align 4
aGg_after_appen	db 0Dh,'gg_after_append_formatted_char',0
		dd 1026D01h
		dd offset _gg_after_append_formatted_char
		dd offset _gg_message_text_to_html
		dd offset off_30EF
		dd 69001h, 6F700E00h, 6D010073h, 69002h
		db 0
		dd offset off_3189
		db 13h
		dd offset aAttr_flag	; "attr_flag"
		dw 6E01h
		dd 1BD02h
		db 0
		dd offset off_31C0
		db 13h
		dd offset aOld_attr_flag ; "old_attr_flag"
		dw 6E01h
		dd 26D02h
		db 0
		dd offset off_31F8
		db 0Fh,	63h, 6Fh
		dd 726F6Ch, 73026F01h, 2000002h
		db 91h,	0, 1Ah
		dd offset aOld_color	; "old_color"
		db 1
		dd 26D026Fh, 91020000h
		db 4, 1Ah
		dd offset aImgs_size	; "imgs_size"
		dw 6F01h
		dd 7902h, 8910200h
		db 1Ah
		dd offset aFormat	; "format"
		db 1, 70h, 2
		dd offset loc_694+2
		dd 1A0C9102h
		dd offset aFormat_len	; "format_len"
		dd 2E027001h, 2000003h,	631B1091h, 726F6C6Fh, 7A69735Fh
		dd 72010065h, 69C02h, 68140300h, 635F7361h, 726F6C6Fh
		dd 2730100h, 0ADh
		dd offset off_324B
		db 16h
		dd offset off_3F8C
		dd offset sub_662
		db 14h,	61h, 74h
aTr_size	db 'tr_size',0
		dd 79027901h
		db 3 dup(0)
		dd offset off_3275
		db 19h
		dd offset loc_2A4
		dd offset loc_1343
		dd 8740218h, 6449103h
		db 2 dup(0), 17h
		dd offset loc_35C
		dd offset loc_1367+2
		dd offset loc_686
		db 18h
		dd 3007402h, 18064C91h,	3047402h, 18064891h, 1087402h
		db 33h,	0, 10h
		dd offset _gg_message_text_to_html
		dd offset loc_1328+5
		align 10h
		db    6
		db 4, 0CEh, 1
		db    0
		align 2
		dw 406h
		dd offset loc_26D
		db  0Ah
		dd offset loc_79
		db 1Ch,	1, 67h
aG_message_text	db 'g_message_text_to_html',0
		db 1
		dd 79010188h
		db 3 dup(0)
		dd offset _gg_message_text_to_html
		dd offset unk_A4B
		dd offset off_3293
		db 1
		dd offset loc_C0B
		dd 7473640Fh, 1880100h,	19Ch, 0F009102h, 637273h, 62018801h
		dd 2000002h
		db 91h,	4, 1Ah
		dd offset aEncoding	; "encoding"
		db 1
		dd 24B0189h, 91020000h
		db 8, 1Ah
		dd offset aFormat	; "format"
		dw 8901h
		dd 27301h, 0C910200h
		db 13h
		dd offset aFormat_len	; "format_len"
		db 1, 89h, 1
		dd offset loc_79
		dd offset off_332D
		dd 6170731Dh, 6D665F6Eh, 8B010074h, 0C1B01h, 8A910300h
		dd 70731B7Fh, 6C5F6E61h, 1006E65h, 69C018Ch, 1D4B0000h
		dd 5F676D69h, 746D66h, 30018D01h, 300000Ch, 1B7EDC91h
		dd 5F676D69h, 6E656Ch, 9C018E01h, 1D000006h, 61686314h
		dd 6F705F72h, 8F010073h, 7901h
		db 0
		dd offset off_3367
		db 14h,	6Fh, 6Ch
aD_attr		db 'd_attr',0
		db 1
		dd 1BD0190h
		db 2 dup(0)
		dd offset off_33AC
		dw 641Dh
aEfault_color	db 'efault_color',0
		db 1, 91h, 1
		dd offset loc_C45
		dd 7ED99103h
		db 15h
		dd offset aOld_color	; "old_color"
		db 1, 92h, 1
		dd offset loc_273
		dd offset off_33F3
		dd 5F6E6914h, 6E617073h, 1930100h, 0ADh
		dd offset off_3476
		dd 1006914h, 870194h
		db 2 dup(0)
		dd offset off_352B
		dw 6C1Dh
		dd 1006E65h, 790195h, 91030000h
		db 0D4h, 7Eh, 16h
		dd offset off_3FA4
		dd offset loc_B50+1
		db 14h
aIn_char	db 'in_char',0
		dd 0AD019E01h
		db 3 dup(0)
		dd offset off_353F
		db 14h
aFormat_idx	db 'format_idx',0
		db 1
		dd 79019Fh
		db 2 dup(0)
		dd offset off_355F
		db 16h
		dd offset off_3FC4
		dd offset sub_A18+2
		db 14h
aAttr		db 'attr',0
		db 1, 0ACh, 1
		dd offset loc_1BC+1
		dd offset off_35FA
		dd 74746114h, 6F705F72h, 0AD010073h, 7901h
		db 0
		dd offset off_3665
		db 16h
		dd offset off_3FEC
		dd offset sub_8D2+2
		dw 6314h
aOlor		db 'olor',0
		db 1, 0DAh, 1
		dd offset loc_273
		dd offset off_36D9
		db 17h
		dd offset loc_684
		dd offset loc_1367+2
		dd offset sub_890+4
		db 18h,	2, 74h
		dd 730200h, 4740218h, 7EC49104h, 74021806h, 330108h
		db 17h
		dd offset loc_6DB
		dd offset loc_138D+1
		dd offset sub_8A8+3
		db 18h,	2, 74h
		dd 0AC910404h, 1900067Eh
		dd offset sub_8C1
		dd offset loc_2C4+1
		dd 4500118h, 67EBC91h, 3520118h, 187ED491h, 3055101h
		dd offset aSpan_0	; "</span>"
		dd 740218h, 3701h
		db 17h
		dd offset sub_751
		dd offset loc_2C4+1
		align 2
		dw 9
		dd 50011800h, 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aB		; "</b>"
		db 18h,	2, 74h
		dd 340100h
		db 17h
		dd offset sub_771
		dd offset loc_2C4+1
		dd offset sub_92C
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aI		; "</i>"
		db 18h,	2, 74h
		dd 340100h
		db 17h
		dd offset sub_791
		dd offset loc_2C4+1
		dd offset loc_956+2
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aU		; "</u>"
		db 18h,	2, 74h
		dd 340100h
		db 17h
		dd offset sub_7B1
		dd offset loc_2C4+1
		dd offset loc_981+3
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aU_0		; "<u>"
		db 18h,	2, 74h
		dd 330100h
		db 17h
		dd offset sub_7F1
		dd offset loc_2C4+1
		dd offset loc_9AC+4
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aI_0		; "<i>"
		db 18h,	2, 74h
		dd 330100h
		db 17h
		dd offset sub_811
		dd offset loc_2C4+1
		dd offset sub_9DC
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aB_0		; "<b>"
		db 18h,	2, 74h
		dd 330100h
		db 17h
		dd offset sub_890
		dd offset loc_138D+1
		dd offset loc_9F1+2
		db 18h,	2, 74h
		dd 0A8910404h, 1900067Eh
		dd offset ___stack_chk_fail
		dd offset loc_13AD+4
		dd 740218h
		db 5, 3
		dd offset aFormatNull	; "format != NULL"
		dw 218h
		dd 3050474h
		dd offset aLibMessage_c	; "lib/message.c"
		dd 8740218h, 1BB0A03h
		db 2 dup(0), 17h
		dd offset loc_53C
		dd offset loc_138D+1
		dd offset _gg_message_html_to_text
		db 18h
		dd 4047402h, 67EAC91h, 8740218h, 7EC89104h, 74021806h
		dd 0C891040Ch, 218067Eh, 91041074h, 67EC8h
		db 17h
		dd offset loc_8EB
		dd offset loc_2C4+1
		dd offset loc_A73+5
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aGt		; "&gt;"
		db 18h,	2, 74h
		dd 340100h
		db 17h
		dd offset loc_909
		dd offset loc_2C4+1
		dd offset loc_AA3+1
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aLt		; "&lt;"
		db 18h,	2, 74h
		dd 340100h
		db 17h
		dd offset loc_927
		dd offset loc_2C4+1
		dd offset loc_ACF+1
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aApos		; "&apos;"
		db 18h,	2, 74h
		dd 360100h
		db 17h
		dd offset loc_945
		dd offset loc_2C4+1
		dd offset loc_AF7+5
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aAmp		; "&amp;"
		db 18h,	2, 74h
		dd 350100h
		db 17h
		dd offset loc_963
		dd offset loc_2C4+1
		dd offset loc_B24+4
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aQuot		; "&quot;"
		db 18h,	2, 74h
		dd 360100h
		db 19h
		dd offset loc_981
		dd offset loc_2C4+1
		db 18h,	1, 50h
		dd 7EBC9104h, 52011806h, 7ED49103h, 5510118h
		db 3
		dd offset aBr		; "<br>"
		db 18h,	2, 74h
		dd 340100h
		db 0, 17h
		dd offset sub_9BE
		dd offset loc_2C4+1
		dd offset loc_B7C+1
		dw 118h
		dd 0BC910450h, 118067Eh, 0D4910352h, 5101187Eh
		db 5, 3
		dd offset aSpan_0	; "</span>"
		dw 218h
		dd 37010074h
		db 0, 17h
		dd offset sub_9DC
		dd offset loc_2C4+1
		dd offset loc_BA5+4
		dw 118h
		dd 0BC910450h, 118067Eh, 0D4910352h, 5101187Eh
		db 5, 3
		dd offset aB		; "</b>"
		dw 218h
		dd 34010074h
		db 0, 17h
		dd offset sub_9FA
		dd offset loc_2C4+1
		dd offset loc_BD4+1
		dw 118h
		dd 0BC910450h, 118067Eh, 0D4910352h, 5101187Eh
		db 5, 3
		dd offset aI		; "</i>"
		dw 218h
		dd 34010074h
		db 0, 17h
		dd offset sub_A18
		dd offset loc_2C4+1
		dd offset loc_C01
		dw 118h
		dd 0BC910450h, 118067Eh, 0D4910352h, 5101187Eh
		db 5, 3
		dd offset aU		; "</u>"
		dw 218h
		dd 34010074h
		db 0, 10h
		dd offset unk_A4B
		dd offset loc_1328+5
		dw 1E00h
		dd offset loc_FD
		dd offset loc_C1A+1
		dd 1F81Fh, 0A005100h, 0C0Bh, 0FD1Eh, 0C3000h, 1F81F00h
		dd 2D0000h, 0C200Ah, 1BD1E00h, 0C450000h, 0F81F0000h, 2000001h
		dd 0C350A00h, 11C0000h
aGg_message_htm	db 'gg_message_html_to_text',0
		dd 102AB01h, 79h
		dd offset _gg_message_html_to_text
		dd offset unk_13E9
		dd offset off_3702
		dd 109E01h, 73640F00h, 0AB010074h, 19C02h, 910200h
		db 13h
		dd offset aFormat	; "format"
		db 1, 0ABh, 2
		dd offset loc_26D
		dd offset off_379C
		db 1Ah
		dd offset aFormat_len	; "format_len"
		db 1, 0ACh, 2
		dd offset loc_32E
		dd 0F089102h, 6C6D7468h, 2AC0100h, 262h, 1A0C9102h
		dd offset aEncoding	; "encoding"
		dd 4B02AC01h, 2000002h,	73141091h, 1006372h, 26202AEh
		db 2 dup(0)
		dd offset off_37BD
		dw 6514h
aNtity		db 'ntity',0
		dw 0AE01h
		dd 26202h
		db 0
		dd offset off_37F1
		db 14h,	74h, 61h
		dd 0AE010067h, 26202h
		db 0
		dd offset off_3812
		db 14h,	69h, 6Eh
a_tag		db '_tag',0
		db 1, 0AFh, 2
		dd offset loc_AC+1
		dd offset off_3900
		dd 5F6E6914h, 69746E65h, 1007974h, 0AD02AFh
		db 2 dup(0)
		dd offset off_391F
		dw 6914h
aN_bold		db 'n_bold',0
		db 1
		dd 0AD02AFh
		db 2 dup(0)
		dd offset off_39D7
		dw 6914h
aN_italic	db 'n_italic',0
		db 1, 0AFh, 2
		dd offset loc_AC+1
		dd offset off_3A1F
		dd 5F6E6914h, 65646E75h, 6E696C72h, 0AF010065h,	0AD02h
		db 0
		dd offset off_3A67
		db 1Dh,	63h, 6Fh
		dd 726F6Ch, 3502B001h, 200000Ch
		db 91h,	46h, 20h
		dd offset aOld_color	; "old_color"
		db 1
		dd 0C3502B0h, 91020000h
		db 49h,	15h
		dd offset aAttr_flag	; "attr_flag"
		dw 0B101h
		dd 1BD02h
		db 0
		dd offset off_3AAF
		db 20h
		dd offset aOld_attr_flag ; "old_attr_flag"
		dw 0B101h
		dd 1BD02h, 0BD910300h, 6F701D7Fh, 0B2010073h, 1CE02h, 0BE910300h
		dd 656C1D7Fh, 0B301006Eh, 7902h, 40910200h
		db 15h
		dd offset aImgs_size	; "imgs_size"
		db 1, 0B3h, 2
		dd offset loc_79
		dd offset off_3B45
		dd 28421h
		db 0
		dd offset loc_B24
		dd offset off_4014
		db 1, 0B9h, 2
		dd offset loc_E08
		dd 29A22h
		db 0
		dd offset off_3B8D
		db 19h
		dd offset loc_C94
		dd offset loc_13D1+2
		dw 218h
		dd 0A030474h, 107h
		db 16h
		dd offset off_4034
		dd offset loc_EBB+1
		db 14h,	66h, 69h
		dd 747372h, 0AD02BA01h
		db 3 dup(0)
		dd offset off_3BB7
		db 14h
		dd 0BB010069h, 7902h
		db 0
		dd offset off_3BED
		db 14h,	61h, 70h
aPend_len	db 'pend_len',0
		db 1, 0BBh, 2
		dd offset loc_79
		dd offset off_3C17
		db 17h
		dd offset loc_D3A
		dd offset loc_2C4+1
		dd offset loc_E6F+4
		db 18h,	1, 50h
		dd 7F809104h, 52011806h, 18409102h, 91045101h, 18067F88h
		dd 2007402h, 19000076h
		dd offset loc_DC2
		dd offset loc_553+1
		dd 3500118h, 187FBE91h,	91045201h, 18067F8Ch, 91035101h
		dd 2187FBDh, 91020074h,	74021846h, 49910204h, 8740218h
		dd 7F909104h, 74021806h, 0AC91030Ch, 7402187Fh,	84910410h
		dd 67Fh, 28421h
		db 0
		dd offset loc_BDA
		dd offset off_404C
		db 1, 95h, 3
		dd offset loc_EE9+3
		dd 29A22h
		db 0
		dd offset off_3C35
		db 19h
		dd offset loc_BF9
		dd offset loc_13D1+2
		dw 218h
		dd 0A030474h, 107h
		db 16h
		dd offset off_406C
		dd offset loc_F92+3
		db 14h,	69h, 0
		dd 0AD02E201h
		db 3 dup(0)
		dd offset off_3C5F
		db 14h
		dd 1006B6Fh, 0AD02E2h
		db 2 dup(0)
		dd offset off_3C7E
		dw 0A421h
		db 2, 2	dup(0)
		dd offset loc_E11
		dd offset off_4094
		db 1
		dd 0F4102E5h, 0BB220000h
		db 2, 2	dup(0)
		dd offset off_3CAA
		db 19h
		dd offset loc_E59
		dd offset loc_13D1+2
		dd 4740218h, 800802h
		db 0, 23h
		dd offset off_40B4
		dw 691Dh
aMg_attr	db 'mg_attr',0
		dd 9E02EC01h, 2000010h
		db 91h,	4Fh, 24h
		dd offset loc_F98
		dd offset loc_1037
		db 1Dh
		dd 667562h, 0AE02EF01h,	2000010h
		db 91h,	4Ch, 19h
		dd offset loc_1008
		dd offset loc_13F5
		db 18h
		dd 2007402h, 2180077h, 91040474h, 18067F90h, 1087402h
		dd 40h
		db 0, 16h
		dd offset off_40D4
		dd offset loc_101A
		dw 6914h
		dd 3420100h, 0ADh
		dd offset off_3CE7
		dd 6B6F14h, 0AD034201h
		db 3 dup(0)
		dd offset off_3CFA
		db 1Dh
		dd 667562h, 0AE034301h,	2000010h, 0A4214F91h
		db 2, 2	dup(0)
		dd offset loc_12D1
		dd offset off_40F4
		db 1
		dd 0FF9034Ah, 0BB220000h
		db 2, 2	dup(0)
		dd offset off_3D1A
		db 19h
		dd offset loc_1363
		dd offset loc_13D1+2
		dd 4740218h, 800802h
		db 0, 19h
		dd offset loc_139D
		dd offset loc_13F5
		dw 218h
		dd 77020074h, 74021800h, 90910404h, 218067Fh, 40010874h
		db 2 dup(0), 17h
		dd offset loc_C69
		dd offset loc_553+1
		dd offset loc_1043+1
		db 18h
		dd 91035001h, 1187FBEh,	0BD910351h, 7402187Fh, 46910200h
		dd 4740218h, 499102h
		db 17h
		dd offset loc_D0F
		dd offset loc_553+1
		dd offset loc_1092+2
		db 18h,	1, 50h
		dd 7FBE9103h, 8520118h,	947F9791h, 1AFF0801h, 3510118h
		dd 187FBD91h, 2007402h,	2184691h, 91020474h, 74021849h
		dd 90910408h, 218067Fh,	91030C74h, 2187FACh, 91041074h
		dd 67F84h
		db 10h
		dd offset loc_13C8
		dd offset loc_1328+5
		align 2
		dw 0BD1Eh
		db    1
		db 2 dup(0), 0AEh
		db  10h
		db 2 dup(0), 1Fh
		dd offset loc_1F6+2
		db  0Ch
		align 2
		dw 0FD1Eh
		db    0
		db 2 dup(0), 0BEh
		db  10h
		db 2 dup(0), 1Fh
		dd offset loc_1F6+2
		db    2
		align 2
aGg_message_h_0	db '%gg_message_html_to_text_110_buff',0
		db    1
		db 0ACh, 3, 1
		dd offset loc_79
		db    1
		dd offset loc_1105+2
aDst		db '&dst',0
		dw 0AC01h
		db    3
		dd offset loc_198+4
aHtml		db '&html',0
		db 1
		db 0ACh	; ¨
		db 3, 62h, 2
		db    0
		db 2 dup(0), 1Ch
		db    1
aGg_message_h_1	db 'gg_message_html_to_text_110',0
		db 1, 0DEh, 3
		dd 19C01h
		db 0
		dd offset _gg_message_html_to_text_110
		dd offset _gg_message_text_to_html_110
		dd offset off_3D57
		db 1, 1Fh, 12h
		dd 680F0000h, 6C6D74h, 6203DE01h, 2000002h
		db 91h,	0, 15h
		dd offset aDst_len	; "dst_len"
		db 1
		dd 7903E0h
		db 2 dup(0)
		dd offset off_3DC1
		dw 6414h
		dd 1007473h, 19C03E1h
		db 2 dup(0)
		dd offset off_3DE1
		dw 0BE27h
		db 10h,	2 dup(0)
		dd offset loc_1400
		dd offset loc_1428
		db 1
		dd 11BB03E3h, 0F9220000h
		db 10h,	2 dup(0)
		dd offset off_3E15
		db 28h
		dd offset loc_10ED
		db 0, 19h
		dd offset loc_1428
		dd offset loc_C49+1
		dw 218h
		dd 30010074h, 4740218h,	2183001h, 30010874h, 0C740218h
		dd 18007602h, 1107402h,	27000031h, 10BEh
		dd offset loc_1437
		dd offset loc_145B
		dd 0C03E701h, 22000012h, 10F9h
		dd offset off_3E3F
		dd 10ED22h
		db 0
		dd offset off_3E52
		db 19h
		dd offset loc_145B
		dd offset loc_C49+1
		dw 218h
		dd 73020074h, 74021800h, 18300104h, 1087402h, 74021830h
		dd 76020Ch, 10740218h, 3101h
		db 10h
		dd offset loc_1431
		dd offset loc_1431
		db 10h
		dd offset _gg_message_text_to_html_110
		dd offset loc_1328+5
		dw 1C00h
		db    1
aGg_message_t_0	db 'gg_message_text_to_html_110',0
		db 1, 0ECh, 3
		dd 19C01h
		db 0
		dd offset _gg_message_text_to_html_110
		dd offset loc_14C3+5
		dd offset off_3E70
		db 1, 0E7h, 12h
		dd 740F0000h, 747865h, 6203EC01h, 2000002h
		db 91h,	0, 1Ah
		dd offset aText_len	; "text_len"
		db 1
		dd 0EE03ECh, 91020000h
		db 4, 15h
		dd offset aDst_len	; "dst_len"
		dw 0EE01h
		dd 7903h
		db 0
		dd offset off_3EF0
		db 14h,	64h, 73h
		dd 0EF010074h, 19C03h
		db 0
		dd offset off_3F10
		db 17h
		dd offset loc_1496
		dd offset loc_33A+1
		dd offset loc_12B3+1
		dw 118h
		dd 18300150h, 76025201h, 51011800h, 7702h
		db 10h
		dd offset loc_149F
		dd offset loc_1431
		db 17h
		dd offset loc_14AE
		dd offset loc_33A+1
		dd offset loc_12DC+1
		dw 118h
		dd 730250h, 2520118h, 1180076h,	770251h
		db 0, 10h
		dd offset loc_14C3+5
		dd offset loc_1328+5
		dw 2900h
a__mb_cur_max	db '__mb_cur_max',0
aPn		db 8,'p≠',0
		db 2 dup(0), 1
		dd 705F2901h, 70797463h, 73020065h, 130Eh, 4060101h, 97h
		dd 1A21Eh, 131F00h, 29002A00h, 626F695Fh, 149A0500h, 1000013h
		dd 5F012B01h, 6174735Fh, 635F6B63h, 665F6B68h, 6C6961h
		dd 2C010101h, 6D656D01h, 65766F6Dh, 1270900h, 260h, 136901h
		dd 2602D00h, 342D0000h,	2D000003h, 79h,	6D012C00h, 6D636D65h
		dd 25090070h, 0AD01h, 138E0100h, 342D0000h, 2D000003h
		dd 334h, 792Dh,	12E0000h, 69727073h, 66746Eh, 1012705h
		dd 0ADh, 13B101h, 19C2D00h, 622D0000h, 2F000002h, 5F013000h
		dd 65737361h, 0A007472h, 0D3010126h, 2D000013h,	262h, 2622Dh
		dd 0AD2D00h, 2C000000h,	73695F01h, 70797463h, 42020065h
		dd 0AD01h, 13F50100h, 0AD2D0000h, 2D000000h, 0ADh, 73012E00h
		dd 6F747274h, 8006C75h,	1C010142h, 1000014h, 141Ch, 2622Dh
		dd 27E2D00h, 0AD2D0000h, 0
		db    3
		db 4, 7, 6Ch
aOngUnsignedInt	db 'ong unsigned int',0
		db 31h,	1, 6Dh
aAlloc		db 'alloc',0
		dw 6408h
		dd 2600101h, 2D010000h,	79h
		db 2 dup(0)
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 2B1Ch
dword_2B1C	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:000016D6o
		dd 8030016h, 0B3B0B3Ah,	1349h, 0B002403h, 30B3E0Bh, 4000008h
		dd 8030113h, 0B3A0B0Bh,	13010B3Bh, 0D050000h, 3A080300h
		dd 490B3B0Bh, 0A3813h, 0F0600h,	13490B0Bh, 4070000h, 3A0B0B01h
		dd 10B3B0Bh, 8000013h, 8030028h, 0D1Ch,	0B000F09h, 0A00000Bh
		dd 13490026h, 2E0B0000h, 30C3F01h, 3B0B3A08h, 490C270Bh
		dd 10B2013h, 0C000013h,	8030005h, 0B3B0B3Ah, 1349h, 3012E0Dh
		dd 3B0B3A08h, 110C2705h, 40011201h, 0C429706h, 1301h, 300050Eh
		dd 3B0B3A08h, 2134905h,	0F000006h, 8030005h, 53B0B3Ah
		dd 0A021349h, 89100000h, 11000182h, 133101h, 261100h, 2E120000h
		dd 3A080301h, 27053B0Bh, 1113490Ch, 40011201h, 0C429706h
		dd 1301h, 3000513h, 3B0B3A0Eh, 2134905h, 14000006h, 8030034h
		dd 53B0B3Ah, 6021349h, 34150000h, 3A0E0300h, 49053B0Bh
		dd 60213h, 10B1600h, 13010655h,	89170000h, 11010182h, 1133101h
		dd 18000013h, 1828Ah, 42910A02h, 1900000Ah, 1018289h, 13310111h
		dd 51A0000h, 3A0E0300h,	49053B0Bh, 0A0213h, 341B00h, 0B3A0803h
		dd 1349053Bh, 0B1Ch, 3F012E1Ch,	3A08030Ch, 27053B0Bh, 1113490Ch
		dd 40011201h, 0C429706h, 1301h,	300341Dh, 3B0B3A08h, 2134905h
		dd 1E00000Ah, 13490101h, 1301h,	4900211Fh, 0B2F13h, 342000h
		dd 0B3A0E03h, 1349053Bh, 0A02h,	31011D21h, 55015213h, 590B5806h
		dd 130105h, 52200h, 6021331h, 0B230000h, 65501h, 10B2400h
		dd 1120111h, 2E250000h,	3A080301h, 27053B0Bh, 2013490Ch
		dd 13010Bh, 52600h, 0B3A0803h, 1349053Bh, 1D270000h, 11133101h
		dd 58011201h, 105590Bh,	28000013h, 13310005h, 0B1Ch, 3003429h
		dd 3B0B3A08h, 3F13490Bh, 0C3C0Ch, 212A00h, 2E2B0000h, 30C3F00h
		dd 340C2708h, 0C3C0Ch, 12E2C00h, 8030C3Fh, 0B3B0B3Ah, 13490C27h
		dd 13010C3Ch, 52D0000h,	134900h, 12E2E00h, 8030C3Fh, 53B0B3Ah
		dd 13490C27h, 13010C3Ch, 182F0000h, 30000000h, 0C3F012Eh
		dd 0B3A0803h, 0C270B3Bh, 13010C3Ch, 2E310000h, 30C3F01h
		dd 3B0B3A08h, 490C2705h, 0C3C13h
		db 2 dup(0)
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 2DC0h
dword_2DC0	dd 0			; DATA XREF: .debug_info:000019ACo
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 6
		dd 10740002h, 6, 35h, 20740002h, 35h, 36h, 10740002h, 36h
		dd 37h,	0C740002h, 37h,	38h, 8740002h, 38h, 39h, 4740002h
		dd 39h,	3Eh, 20740002h,	2 dup(0)
dword_2E40	dd 0			; DATA XREF: .debug_info:000019C1o
		dd 1Eh,	1E500001h, 3E000000h, 4000000h,	5001F300h, 9Fh
		dd 0
		db 0
byte_2E61	db 3 dup(0)		; DATA XREF: .debug_info:000019D1o
		dd offset dword_3D00
		dd 52000100h, 3Dh, 3Eh,	1F30004h, 9F52h, 0
		db 2 dup(0)
word_2E82	dw 0			; DATA XREF: .debug_info:000019E1o
		dd 180000h, 10000h, 1851h, 2400h, 56000100h, 24h, 3Eh
		dd 1F30004h, 9F51h, 0
		db 2 dup(0)
off_2EAE	dd offset _gg_message_text_to_html_110_buff
					; DATA XREF: .debug_info:00001A3Do
		dd offset loc_41
		dw 2
		dd 410474h, 420000h, 20000h, 420874h, 430000h, 20000h
		dd 430C74h, 440000h, 20000h, 441074h, 470000h, 20000h
		dd 471474h, 1360000h, 30000h, 3600C074h, 37000001h, 2000001h
		dd 37147400h, 38000001h, 2000001h, 38107400h, 39000001h
		dd 2000001h, 390C7400h,	3A000001h, 2000001h, 3A087400h
		dd 3C000001h, 2000001h,	3C047400h, 24000001h, 3000002h
		dd 0C07400h, 2 dup(0)
off_2F48	dd offset _gg_message_text_to_html_110_buff
					; DATA XREF: .debug_info:00001A52o
		dd offset loc_58
		dd 58500001h, 37000000h, 1000001h, 1375300h, 13B0000h
		dd 40000h, 9F5001F3h, 13Bh, 224h, 530001h, 0
		db 3 dup(0)
off_2F7F	dd offset _gg_message_text_to_html_110_buff
					; DATA XREF: .debug_info:00001A63o
		dd offset loc_61
		db 1
		dd 1ED5200h, 1F40000h, 10000h, 52h, 0
		db 0
off_2F9D	dd offset _gg_message_text_to_html_110_buff
					; DATA XREF: .debug_info:00001A73o
		dd offset loc_61
		db 1, 0, 51h
		dd offset loc_61
		dd offset locret_13A
		dd 3B550001h, 0ED000001h, 1000001h, 1ED5500h, 1F40000h
		dd 10000h, 1F451h, 22400h, 55000100h, 2	dup(0)
off_2FDC	dd offset loc_80	; DATA XREF: .debug_info:00001A81o
		dd offset loc_88
		dd 9F300002h, 0D7h, 0DBh, 0FB570001h, 0FF000000h, 1000000h
		dd 5700h, 0
		db 2 dup(0)
off_3006	dd offset loc_69	; DATA XREF: .debug_info:00001A91o
		dd offset unk_1ED
		dw 2
		dd 1FE5891h, 2240000h, 20000h, 5891h, 0
		db 2 dup(0)
off_3026	dd offset loc_88	; DATA XREF: .debug_info:00001AA8o
		dd offset loc_D7
		dw 1
		dd 0DE51h, 0EF00h, 51000100h, 0EFh, 0F9h, 760005h, 3B220077h
		dd 48000001h, 1000001h,	1485100h, 1520000h, 50000h, 770076h
		dd 15622h, 16C00h, 51000100h, 16Ch, 176h, 760005h, 7D220077h
		dd 8C000001h, 1000001h,	18C5100h, 1960000h, 50000h, 770076h
		dd 19D22h, 1BC00h, 51000100h, 1BCh, 1C6h, 760005h, 0CD220077h
		dd 0DC000001h, 1000001h, 1DC5100h, 1E60000h, 50000h, 770076h
		dd 1FE22h, 20C00h, 51000100h, 20Ch, 216h, 760005h, 220077h
		dd 0
		db 3 dup(0)
off_30EF	dd offset _gg_after_append_formatted_char ; DATA XREF: .debug_info:00001C50o
		dd offset loc_225
		db 2
		dd 25047400h, 26000002h, 2000002h, 26087400h, 27000002h
		dd 2000002h, 270C7400h,	28000002h, 2000002h, 28107400h
		dd 2B000002h, 2000002h,	2B147400h, 31000002h, 3000003h
		dd 0F07400h, 331h, 332h, 14740002h, 332h, 333h,	10740002h
		dd 333h, 334h, 0C740002h, 334h,	335h, 8740002h,	335h, 338h
		dd 4740002h, 338h, 3A0h, 0F0740003h, 2 dup(0)
		db 0
off_3189	dd offset _gg_after_append_formatted_char ; DATA XREF: .debug_info:00001C65o
		dd offset loc_231
		db 1, 0, 50h
		dd offset loc_231
		dd offset locret_335
		dd 35550001h, 36000003h, 4000003h, 5001F300h, 3369Fh, 3A000h
		dd 55000100h, 2	dup(0)
off_31C0	dd offset _gg_after_append_formatted_char ; DATA XREF: .debug_info:00001C75o
		dd offset loc_27E
		dd 7E520001h, 36000002h, 3000003h, 7FBF9100h, 336h, 348h
		dd 48520001h, 0A0000003h, 3000003h, 7FBF9100h, 2 dup(0)
off_31F8	dd offset _gg_after_append_formatted_char ; DATA XREF: .debug_info:00001C85o
		dd offset loc_29F+4
		dd 0A3510001h, 36000002h, 4000003h, 5101F300h, 3369Fh
		dd 35B00h, 51000100h, 35Bh, 364h, 1F30004h, 3649F51h, 36E0000h
		dd 10000h, 36E51h, 3A000h, 0F3000400h, 9F5101h,	0
		db 3 dup(0)
off_324B	dd offset loc_25F	; DATA XREF: .debug_info:00001CFCo
		dd offset loc_26B
		db 2
		dd 6B9F3000h, 33000002h, 1000003h, 3365600h, 3A00000h
		dd 10000h, 56h,	0
		db 0
off_3275	dd offset loc_27E	; DATA XREF: .debug_info:00001D1Bo
		dd offset loc_31E
		db 1, 0, 57h
		dd offset unk_36E
		dd offset loc_39B
		dd 570001h, 0
		db 3 dup(0)
off_3293	dd offset _gg_message_text_to_html ; DATA XREF:	.debug_info:00001D9Bo
		dd offset loc_3A1
		db 2
		dd 0A1047400h, 0A2000003h, 2000003h, 0A2087400h, 0A3000003h
		dd 2000003h, 0A30C7400h, 0A4000003h, 2000003h, 0A4107400h
		dd 0AA000003h, 2000003h, 0AA147400h, 10000003h,	3000006h
		dd 2907400h, 610h, 611h, 14740002h, 611h, 612h,	10740002h
		dd 612h, 613h, 0C740002h, 613h,	614h, 8740002h,	614h, 618h
		dd 4740002h, 618h, 0A4Bh, 90740003h, 2,	0
		db 0
off_332D	dd offset _gg_message_text_to_html ; DATA XREF:	.debug_info:00001DECo
		dd offset loc_433
		db 2, 0, 91h
		dd 43310h, 0A1D00h, 91000300h, 0A1D7EB4h, 0A2A0000h, 20000h
		dd 0A2A1091h, 0A4B0000h, 30000h, 7EB491h, 0
		db 3 dup(0)
off_3367	dd offset loc_414	; DATA XREF: .debug_info:00001E4Do
		dd offset loc_454
		db 2
		dd 549F3000h, 5F000004h, 1000004h, 45F5100h, 0A1D0000h
		dd 30000h, 1D7EB891h, 2A00000Ah, 200000Ah, 2A9F3000h, 4B00000Ah
		dd 300000Ah, 7EB89100h,	2 dup(0)
off_33AC	dd offset loc_414	; DATA XREF: .debug_info:00001E62o
		dd offset loc_454
		dd 9F300002h, 454h, 45Fh, 0D9910003h, 45F7Eh, 0A1D00h
		dd 91000300h, 0A1D7EB3h, 0A2A0000h, 20000h, 0A2A9F30h
		dd 0A4B0000h, 30000h, 7EB391h, 0
		db 3 dup(0)
off_33F3	dd offset loc_423	; DATA XREF: .debug_info:00001E8Co
		dd offset loc_454
		db 2
		dd 549F3000h, 5F000004h, 1000004h, 45F5100h, 5470000h
		dd 30000h, 477EC491h, 53000005h, 4000005h, 7ED99100h, 5539Fh
		dd 55700h, 50000100h, 557h, 6E0h, 0C4910003h, 6E07Eh, 6EC00h
		dd 53000100h, 6ECh, 0A1Dh, 0C4910003h, 0A1D7Eh,	0A2A00h
		dd 30000200h, 0A2A9Fh, 0A4B00h,	91000300h, 7EC4h, 0
		db 2 dup(0)
off_3476	dd offset loc_423	; DATA XREF: .debug_info:00001EA0o
		dd offset loc_454
		dw 2
		dd 4549F30h, 45F0000h, 10000h, 45F51h, 54700h, 91000300h
		dd 5477EC8h, 5570000h, 20000h, 5579F31h, 6940000h, 30000h
		dd 947EC891h, 0E0000006h, 2000006h, 0E09F3000h,	0EC000006h
		dd 2000006h, 0EC9F3100h, 16000006h, 3000008h, 7EC89100h
		dd 816h, 825h, 9F300002h, 825h,	8C1h, 0C8910003h, 8C17Eh
		dd 8C600h, 30000200h, 8C69Fh, 0A1D00h, 91000300h, 0A1D7EC8h
		dd 0A2A0000h, 20000h, 0A2A9F30h, 0A4B0000h, 30000h, 7EC891h
		dd 0
		db 3 dup(0)
off_352B	dd offset loc_433	; DATA XREF: .debug_info:00001EAEo
		dd offset loc_454
		db 2
		dd 9F3000h, 0
		db 3 dup(0)
off_353F	dd offset loc_454	; DATA XREF: .debug_info:00001EDBo
		dd offset sub_A1D
		db 2
		dd 2A9F3000h, 4B00000Ah, 200000Ah, 9F3000h, 0
		db 3 dup(0)
off_355F	dd offset loc_454	; DATA XREF: .debug_info:00001EF2o
		dd offset unk_48D
		db 2
		dd 8D9F3000h, 93000004h, 1000004h, 4935700h, 4A20000h
		dd 10000h, 4BD53h, 4D700h, 57000100h, 4D7h, 4E6h, 88530001h
		dd 0B6000005h, 2000005h, 159F3000h, 62000006h, 1000006h
		dd 6625700h, 6640000h, 10000h, 66450h, 89500h, 57000100h
		dd 895h, 8A6h, 0A6530001h, 0C6000008h, 1000008h, 9865700h
		dd 9A50000h, 20000h, 0A2A9F30h,	0A460000h, 20000h, 9F30h
		dd 0
		db 2 dup(0)
off_35FA	dd offset unk_48D	; DATA XREF: .debug_info:00001F0Co
		dd offset sub_4A2
		dw 1
		dd 4B656h, 4E600h, 56000100h, 615h, 71Ah, 1A560001h, 2B000007h
		dd 1000007h, 72B5000h, 7BB0000h, 10000h, 7BB56h, 7CE00h
		dd 50000100h, 7CEh, 825h, 25560001h, 2C000008h,	1000008h
		dd 82C5000h, 8C60000h, 10000h, 56h, 0
		db 0
off_3665	dd offset unk_48D	; DATA XREF: .debug_info:00001F21o
		dd offset sub_495
		db 1, 0, 50h
		dd offset sub_495
		dd offset loc_499
		dd 750012h, 35220073h, 801941Ch, 24381AFFh, 9F210072h
		dd 4B1h, 4D3h, 15500001h, 23000006h, 1000006h, 7765000h
		dd 78C0000h, 10000h, 78C50h, 79000h, 75001A00h,	22007300h
		dd 1940123h, 381AFF08h,	73007524h, 1942200h, 211AFF08h
		dd 9Fh,	0
		db 0
off_36D9	dd offset sub_662	; DATA XREF: .debug_info:00001F3Co
		dd offset loc_6EC
		db 1, 0, 53h
		dd offset unk_816
		dd offset unk_825
		dd 0A6530001h, 0C6000008h, 1000008h, 5300h, 0
		db 2 dup(0)
off_3702	dd offset _gg_message_html_to_text ; DATA XREF:	.debug_info:00002344o
		dd offset loc_A4D
		dw 2
		dd 0A4D0474h, 0A4E0000h, 20000h, 0A4E0874h, 0A4F0000h
		dd 20000h, 0A4F0C74h, 0A500000h, 20000h, 0A501074h, 0A560000h
		dd 20000h, 0A561474h, 0BAB0000h, 30000h, 0AB01B074h, 0AC00000Bh
		dd 200000Bh, 0AC147400h, 0AD00000Bh, 200000Bh, 0AD107400h
		dd 0AE00000Bh, 200000Bh, 0AE0C7400h, 0AF00000Bh, 200000Bh
		dd 0AF087400h, 0B000000Bh, 200000Bh, 0B0047400h, 0E900000Bh
		dd 3000013h, 1B07400h, 2 dup(0)
off_379C	dd offset _gg_message_html_to_text ; DATA XREF:	.debug_info:00002368o
		dd offset loc_1037
		dd 4910002h, 1037h, 13E9h, 0AC910003h, 7Fh, 0
		db 0
off_37BD	dd offset loc_AD5	; DATA XREF: .debug_info:000023A6o
		dd offset loc_B1B
		db 1, 0, 52h
		dd offset loc_B1B
		dd offset loc_B7E
		dd 0B0550001h, 0C300000Bh, 1000013h, 13C85500h,	13E90000h
		dd 10000h, 55h,	0
		db 0
off_37F1	dd offset loc_A97	; DATA XREF: .debug_info:000023B9o
		dd offset loc_B1B
		db 2, 0, 30h
		dd 0B759Fh, 0B7E00h, 91000300h,	7F88h, 0
		db 2 dup(0)
off_3812	dd offset loc_A97	; DATA XREF: .debug_info:000023C9o
		dd offset loc_B1B
		dw 2
a0qu		db '0üu',0Bh,0
		align 2
		dd offset loc_B7E
		dw 3
		dd 0EE7EFC91h, 400000Dh, 700000Eh, 7EFC9100h, 9F0B2306h
		dd 0E04h, 0E1Bh, 1B570001h, 5B00000Eh, 700000Eh, 7EFC9100h
		dd 9F0B2306h, 0F87h, 109Fh, 0FC910007h,	0B23067Eh, 117E9Fh
		dd 118C00h, 91000700h, 23067EFCh, 11F09F0Bh, 11FA0000h
		dd 70000h, 67EFC91h, 0C29F0B23h, 0D9000012h, 1000012h
		dd 12D95200h, 13060000h, 10000h, 131A53h, 132600h, 56000100h
		dd 1326h, 1365h, 8730003h, 136C9Fh, 13B500h, 73000300h
		dd 13B59F08h, 13BA0000h, 30000h, 0BA9F7F73h, 0BE000013h
		dd 3000013h, 9F087300h,	13BEh, 13C3h, 7A770003h, 13D69Fh
		dd 13DA00h, 53000100h, 2 dup(0)
off_3900	dd offset loc_A97	; DATA XREF: .debug_info:000023DCo
		dd offset loc_B1B
		dd 9F300002h, 0B75h, 0B7Eh, 570001h, 0
		db 3 dup(0)
off_391F	dd offset loc_A97	; DATA XREF: .debug_info:000023F2o
		dd offset loc_B1B
		db 2
		dd 759F3000h, 7E00000Bh, 100000Bh, 0BB65300h, 0BD20000h
		dd 10000h, 0C0B53h, 0C7200h, 30000200h,	0C729Fh, 0C8200h
		dd 53000100h, 0DC6h, 0DD1h, 81530001h, 9F00000Eh, 200000Eh
		dd 0B9F3000h, 8700000Fh, 200000Fh, 9F9F3000h, 0DD000010h
		dd 2000010h, 199F3000h,	2F000011h, 2000011h, 599F3000h
		dd 7E000011h, 2000011h,	8C9F3000h, 0B4000011h, 2000011h
		dd 0FA9F3000h, 2D000011h, 2000012h, 579F3000h, 69000012h
		dd 2000012h, 0C89F3000h, 0D6000013h, 2000013h, 9F3000h
		dd 0
		db 3 dup(0)
off_39D7	dd offset loc_A97	; DATA XREF: .debug_info:00002406o
		dd offset loc_B1B
		db 2
		dd 759F3000h, 7E00000Bh, 300000Bh, 7FA09100h, 0ED0h, 0EE4h
		dd 0A0910003h, 10FB7Fh,	10FF00h, 70000300h, 10FF9F7Fh
		dd 11190000h, 30000h, 7FA091h, 0
		db 3 dup(0)
off_3A1F	dd offset loc_A97	; DATA XREF: .debug_info:0000241Co
		dd offset loc_B1B
		db 2
		dd 759F3000h, 7E00000Bh, 300000Bh, 7FA49100h, 1145h, 1159h
		dd 0A4910003h, 11D27Fh,	11D600h, 77000300h, 11D69F7Fh
		dd 11F00000h, 30000h, 7FA491h, 0
		db 3 dup(0)
off_3A67	dd offset loc_A97	; DATA XREF: .debug_info:00002435o
		dd offset loc_B1B
		db 2
		dd 759F3000h, 7E00000Bh, 300000Bh, 7FA89100h, 1243h, 1257h
		dd 0A8910003h, 12877Fh,	128B00h, 76000300h, 128B9F7Fh
		dd 12A50000h, 30000h, 7FA891h, 0
		db 3 dup(0)
off_3AAF	dd offset loc_AAF	; DATA XREF: .debug_info:00002465o
		dd offset loc_B1B
		db 2
		dd 759F3000h, 7E00000Bh, 300000Bh, 7F979100h, 0ED5h, 0EE4h
		dd 97910003h, 0EFC7Fh, 0F0B00h,	91000300h, 110A7F97h, 11190000h
		dd 30000h, 4A7F9791h, 59000011h, 3000011h, 7F979100h, 11E1h
		dd 11F0h, 97910003h, 12487Fh, 125700h, 91000300h, 12967F97h
		dd 12A50000h, 30000h, 0C27F9791h, 0C3000012h, 3000013h
		dd 7F979100h, 13D6h, 13E9h, 97910003h, 7Fh, 0
		db 0
off_3B45	dd offset loc_AC3	; DATA XREF: .debug_info:000024A4o
		dd offset loc_B1B
		db 2, 0, 30h
		dd 0B759Fh, 0B7E00h, 91000300h,	104B7F90h, 108C0000h, 30000h
		dd 7E7F9091h, 8C000011h, 3000011h, 7F909100h, 11F0h, 11FAh
		dd 90910003h, 7Fh, 0
		db 0
off_3B8D	dd offset loc_B24	; DATA XREF: .debug_info:000024C1o
		dd offset loc_B3F
		db 7, 0, 70h
		dd 48244800h, 0C829F26h, 0C930000h, 70000h, 24480070h
		dd 9F2648h, 0
		db 3 dup(0)
off_3BB7	dd offset loc_BB0	; DATA XREF: .debug_info:000024EFo
		dd offset loc_BB4
		db 1
		dd 0D205000h, 0D5C0000h, 20000h, 0D659F31h, 0D6E0000h
		dd 10000h, 0DC250h, 0DC600h, 30000200h,	9Fh, 0
		db 0
off_3BED	dd offset loc_BB0	; DATA XREF: .debug_info:000024FDo
		dd offset loc_BB4
		db 1, 0, 53h
		dd offset loc_D3A
		dd offset loc_D5C
		dd 9F300002h, 0D66h, 0D6Eh, 530001h, 0
		db 3 dup(0)
off_3C17	dd offset loc_BB0	; DATA XREF: .debug_info:00002514o
		dd offset loc_BB4
		db 1
		dd 0D265600h, 0DC60000h, 10000h, 56h, 0
		db 0
off_3C35	dd offset loc_BDA	; DATA XREF: .debug_info:000025A5o
		dd offset loc_BF4+4
		db 7, 0, 70h
		dd 48244800h, 0E5B9F26h, 0E680000h, 70000h, 24480070h
		dd 9F2648h, 0
		db 3 dup(0)
off_3C5F	dd offset loc_FD0	; DATA XREF: .debug_info:000025CFo
		dd offset loc_FDE
		db 2
		dd 1A9F3000h, 27000010h, 1000010h, 5600h, 0
		db 2 dup(0)
off_3C7E	dd offset loc_F8C	; DATA XREF: .debug_info:000025DEo
		dd offset loc_108C
		dw 2
		dd 117E9F31h, 118C0000h, 20000h, 11F09F31h, 11FA0000h
		dd 20000h, 9F31h, 0
		db 2 dup(0)
off_3CAA	dd offset unk_E1B	; DATA XREF: .debug_info:000025FBo
		dd offset loc_E28
		dw 7
		dd 24480070h, 289F2648h, 3000000Eh, 900000Eh, 94007700h
		dd 48244801h, 0E449F26h, 0E580000h, 70000h, 24480070h
		dd 9F2648h, 0
		db 3 dup(0)
off_3CE7	dd offset loc_13A8	; DATA XREF: .debug_info:00002678o
		dd offset loc_13BA
		db 1
		dd 5600h, 0
		db 2 dup(0)
off_3CFA	dd offset loc_1308	; DATA XREF: .debug_info:00002687o
		dw 1365h
dword_3D00	dd 20000h, 136C9F31h, 13C30000h, 20000h, 9F31h,	0
					; DATA XREF: .debug_loc:00002E64o
		db 2 dup(0)
off_3D1A	dd offset unk_1326	; DATA XREF: .debug_info:000026B3o
		dd offset loc_1334
		dw 7
		dd 24480070h, 349F2648h, 3C000013h, 9000013h, 94007600h
		dd 48244801h, 13489F26h, 13620000h, 70000h, 24480070h
		dd 9F2648h, 0
		db 3 dup(0)
off_3D57	dd offset _gg_message_html_to_text_110 ; DATA XREF: .debug_info:00002805o
		dd offset loc_13ED
		db 2
		dd 0ED047400h, 0EE000013h, 2000013h, 0EE087400h, 0F1000013h
		dd 2000013h, 0F10C7400h, 6C000013h, 3000014h, 0C07400h
		dd 146Ch, 146Dh, 0C740002h, 146Dh, 146Eh, 8740002h, 146Eh
		dd 146Fh, 4740002h, 146Fh, 1474h, 0C0740003h, 2	dup(0)
		db 0
off_3DC1	dd offset loc_1428	; DATA XREF: .debug_info:0000282Ao
		dd offset loc_1429
		db 3, 0, 70h
		dd 14299F01h, 14300000h, 10000h, 50h, 0
		db 0
off_3DE1	dd offset loc_1433	; DATA XREF: .debug_info:0000283Ao
		dd offset loc_1456+4
		db 1, 0, 50h
		dd offset loc_1456+4
		dd offset loc_1469
		dd 69530001h, 73000014h, 1000014h, 14735000h, 14740000h
		dd 10000h, 53h,	0
		db 0
off_3E15	dd offset loc_1400	; DATA XREF: .debug_info:00002857o
		dd offset locret_146E
		db 1, 0, 56h
		dd offset locret_146E
		dd offset loc_146F
		dd 910002h, 146Fh, 1474h, 560001h, 0
		db 3 dup(0)
off_3E3F	dd offset loc_1437	; DATA XREF: .debug_info:000028A4o
		dd offset loc_145B
		db 1
		dd 5600h, 0
		db 2 dup(0)
off_3E52	dd offset loc_1437	; DATA XREF: .debug_info:000028ADo
		dd offset loc_1456+4
		dw 1
		dd 145A50h, 145B00h, 53000100h,	2 dup(0)
off_3E70	dd offset _gg_message_text_to_html_110 ; DATA XREF: .debug_info:0000291Do
		dd offset loc_1475
		dd 4740002h, 1475h, 1476h, 8740002h, 1476h, 1477h, 0C740002h
		dd 1477h, 147Ah, 10740002h, 147Ah, 14BFh, 30740002h, 14BFh
		dd 14C0h, 10740002h, 14C0h, 14C1h, 0C740002h, 14C1h, 14C2h
		dd 8740002h, 14C2h, 14C3h, 4740002h, 14C3h, 14C8h, 30740002h
		dd 2 dup(0)
off_3EF0	dd offset loc_1496	; DATA XREF: .debug_info:00002951o
		dd offset loc_1497
		dd 1700003h, 14979Fh, 149E00h, 50000100h, 2 dup(0)
off_3F10	dd offset loc_14A1	; DATA XREF: .debug_info:00002961o
		dd offset loc_14A9+4
		dd 0AD500001h, 0BC000014h, 1000014h, 14BC5300h,	14C70000h
		dd 10000h, 14C750h, 14C800h, 53000100h,	2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 3F44h
		dd 1Ch
		db 2, 0
		dd offset off_16D0
		dw 4
		dd 0
		dd offset _gg_append
		dd offset byte_14C8
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 3F64h
off_3F64	dd offset loc_88	; DATA XREF: .debug_info:00001A96o
		dd offset loc_D7
		dd offset loc_DB
		dd offset loc_FB
		dd offset loc_13C
		dd offset loc_1F0
		dd offset loc_200
		dd offset loc_21F
		dd 2 dup(0)
off_3F8C	dd offset loc_273	; DATA XREF: .debug_info:00001D01o
		dd offset loc_31E
		dd offset loc_370
		dd offset loc_39B
		dd 2 dup(0)
off_3FA4	dd offset loc_454	; DATA XREF: .debug_info:00001EC3o
		dd offset loc_5B6
		dd offset sub_618
		dd offset sub_9A5
		dd offset sub_A2A
		dd offset ___stack_chk_fail
		dd 2 dup(0)
off_3FC4	dd offset sub_46B	; DATA XREF: .debug_info:00001EF7o
		dd offset loc_4E6
		dd offset sub_618
		dd offset sub_8C8
		dd offset sub_98D
		dd offset sub_9A5
		dd offset sub_A2A
		dd offset ___stack_chk_fail
		dd 2 dup(0)
off_3FEC	dd offset sub_645	; DATA XREF: .debug_info:00001F26o
		dd offset loc_6EC
		dd offset sub_72C
		dd offset sub_738
		dd offset sub_818
		dd offset sub_828
		dd offset sub_8A8
		dd offset sub_8C8
		dd 2 dup(0)
off_4014	dd offset loc_B24	; DATA XREF: .debug_info:000024B1o
		dd offset loc_B44
		dd offset loc_C84
		dd offset loc_C8C
		dd offset loc_C8F
		dd offset loc_C94
		dd 2 dup(0)
off_4034	dd offset loc_BB4	; DATA XREF: .debug_info:000024D9o
		dd offset loc_BB6
		dd offset loc_D20
		dd offset loc_DC8
		dd 2 dup(0)
off_404C	dd offset loc_BDA	; DATA XREF: .debug_info:00002595o
		dd offset loc_BF1
		dd offset loc_BF4
		dd offset loc_BF9
		dd offset loc_E5C
		dd offset loc_E6D
		dd 2 dup(0)
off_406C	dd offset loc_E11	; DATA XREF: .debug_info:000025BDo
		dd offset loc_E5C
		dd offset loc_F8C
		dd offset loc_109F
		dd offset loc_117E
		dd offset loc_118C
		dd offset loc_11F0
		dd offset loc_11FA
		dd 2 dup(0)
off_4094	dd offset loc_E11	; DATA XREF: .debug_info:000025EBo
		dd offset loc_E30
		dd offset loc_E44
		dd offset loc_E51
		dd offset loc_E54
		dd offset loc_E5C
		dd 2 dup(0)
off_40B4	dd offset loc_F8C	; DATA XREF: .debug_info:00002612o
		dd offset loc_1090
		dd offset loc_117E
		dd offset loc_118C
		dd offset loc_11F0
		dd offset loc_11FA
		dd 2 dup(0)
off_40D4	dd offset loc_12D1	; DATA XREF: .debug_info:00002666o
		dd offset loc_12DC
		dd offset loc_1308
		dd offset loc_1365
		dd offset loc_136C
		dd offset loc_13C3
		dd 2 dup(0)
off_40F4	dd offset loc_12D1	; DATA XREF: .debug_info:000026A3o
		dd offset loc_12DC
		dd offset loc_1328
		dd offset loc_133C
		dd offset loc_1348
		dd offset loc_135B
		dd offset loc_135E
		dd offset loc_1365
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 411Ch
off_411C	dd offset loc_5BB+3	; DATA XREF: .debug_info:00001745o
		db    2
		align 2
		dd offset loc_1A9
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6C01h
		db  69h	; i
		db 62h,	0, 63h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/../../../../include',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include/sys',0
		dw 6D00h
aEssage_c	db 'essage.c',0
		db 1, 2	dup(0)
aCtype_h	db 'ctype.h',0
		dd 73000002h, 65646474h, 682E66h, 74000003h, 73657079h
		dd 400682Eh, 74730000h,	2E6F6964h, 20068h, 64747300h, 2E746E69h
		dd 20068h, 62696C00h, 75646167h, 100682Eh, 74730000h, 62696C64h
		dd 200682Eh, 74730000h,	676E6972h, 200682Eh, 73610000h
		dd 74726573h, 200682Eh,	0
		db 5, 2
		dd offset _gg_append
		dw 0F003h
		dd 0BBBA0102h, 32F844Bh, 900804BDh, 8492AFC8h, 92866808h
		dd 92929292h, 754BA292h, 4B4A6A03h, 7108593Dh, 8581A03h
		dd 4D4B4969h, 82086503h, 8142402h, 40200E6h, 6EB0801h
		dd 86F0690h, 86E03E6h, 0F21603E4h, 0E039108h, 7D950358h
		dd 12300258h, 83BDB0h, 0AE030402h, 92086769h, 76AD7575h
		dd 0A1BFCA75h, 4B676883h, 4B7708h, 3010402h, 258085Eh
		dd 1103132Ch, 3BB08BAh,	0F003D60Fh, 3902587Dh, 8408E512h
		dd 84E83208h, 578081B6h, 0BF821303h, 0B4AC0C03h, 60D67803h
		dd 3D740E03h, 3666903h,	5CE5900Ah, 0A09F404Bh, 3C680367h
		dd 0BA00DE03h, 0AC0A0387h, 39028383h, 87835914h, 83AC1603h
		dd 0DB0378ADh, 200BA7Eh, 0AC060104h, 3590806h, 35800EEh
		dd 0AFAF823Bh, 8349BEAFh, 7EF40385h, 0AFAFF208h, 200BDAFh
		dd 0BA060104h, 334BC906h, 1040200h, 8068206h, 83C9BFADh
		dd 91143202h, 0BDBDBD88h, 0AC086303h, 8BA7703h,	3E108E1h
		dd 8E4082Ah, 4020084h, 0E49E0601h, 0E108D106h, 0E4087403h
		dd 83F21503h, 60020B03h, 85B0301h, 0C60374h, 8A6E408h
		dd 83085483h, 383085Dh,	83085876h, 8580B03h, 83085A83h
		dd 747EEB03h, 3580B03h,	740801A3h, 0C508C508h, 0CB03C508h
		dd 0C8087Eh, 3010402h, 0A103C823h, 3AC0801h, 26600D1h
		dd 8D9123Dh, 84755975h,	4020083h, 0AC06A001h, 133C0206h
		dd 2000204h, 0E1030104h, 0E406827Bh, 3060104h, 1208049Fh
		dd 1040200h, 3068206h, 200F21Bh, 0BA060104h, 64030682h
		dd 1EF0358h, 85834990h,	27E9A03h, 0A030122h, 9903C02Eh
		dd 884A01h, 6010402h, 2044Ah, 6010402h,	827AA703h, 104E406h
		dd 5FB0306h, 3020482h, 43C7A85h, 5FB0301h, 4020058h, 6820601h
		dd 4CD783A4h, 0E3BB08ADh, 87EAE03h, 2044C74h, 0BA7BCA03h
		dd 9F030104h, 2048204h,	3C7BE103h, 9F030104h, 1C035804h
		dd 59083C08h, 84CBB83h,	8C03E3BBh, 32DC801h, 68E47ED6h
		dd 5F9A3D08h, 3502D08h,	915878h, 6010402h, 2F080658h, 0E375084Bh
		dd 0A9031508h, 34B6601h, 8BA7EEFh, 4D03E15Ch, 3020474h
		dd 4C87BF9h, 4C10301h, 838FD608h, 0BF030204h, 1043C7Bh
		dd 0C804C103h, 0BF030204h, 76033C7Bh, 3010482h,	120805FBh
		dd 1040200h, 66080A03h,	200806h, 6010402h, 9E7EBE03h, 800C603h
		dd 4B590858h, 5800C103h, 0C879032Dh, 2D6A2408h,	0BBD61103h
		dd 59082208h, 12081403h, 23026A03h, 7EF60301h, 0BCBB7408h
		dd 8383AD91h, 2006A83h,	9B0204h, 83020402h, 2040200h, 4020085h
		dd 730802h, 0AD020402h,	2040200h, 5BE5C245h, 0BC5A7583h
		dd 0E03AE49h, 580903C8h, 5800C603h, 2D13082Dh, 8C81603h
		dd 3590822h, 58087FA8h,	9FBC2108h, 2D583C03h, 3C81703h
		dd 58087FB0h, 34B2108h,	32D5838h, 2108C823h, 7EFD03A0h
		dd 0F70390h, 32108D6h, 58087FAFh, 9FBC2108h, 2D583303h
		dd 0C87FA603h, 9E00F603h, 0AE2F48F4h, 87FB103h,	4B210820h
		dd 2D582F03h, 3C82103h,	20087FB2h, 9FBC2108h, 2D582A03h
		dd 8C85903h, 7EEC0359h,	1940374h, 3020474h, 4827AE5h, 4020001h
		dd 59C0301h, 679F8FACh,	3DE63008h, 0DE030204h, 104D67Ah
		dd 805A603h, 44B573Ch, 7ADA0302h, 301043Ch, 2E0805A6h
		dd 0DA030204h, 1043C7Ah, 74059D03h, 402007Ch, 660B0302h
		dd 2040200h, 4020083h, 200AE02h, 0E0080204h, 0D00389h
		dd 59035808h, 8630358h,	0FA032D20h, 390F200h, 3503AC4Fh
		dd 21012802h, 4A49039Fh, 24023C03h, 0D6850801h,	4C9F9FB0h
		dd 1A0293h
		db 2 dup(1)
		align 10h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 46E0h
aFormat_len	db 'format_len',0       ; DATA XREF: .debug_info:00001CC8o
					; .debug_info:00001DE1o ...
aAttr_flag	db 'attr_flag',0        ; DATA XREF: .debug_info:00001C6Ao
					; .debug_info:0000245Ao
aOld_color	db 'old_color',0        ; DATA XREF: .debug_info:00001C9Bo
					; .debug_info:00001E81o ...
aText_len	db 'text_len',0         ; DATA XREF: .debug_info:00001A68o
					; .debug_info:00002937o
aFormat		db 'format',0           ; DATA XREF: .debug_info:00001CB9o
					; .debug_info:00001DD2o ...
aOld_attr_flag	db 'old_attr_flag',0    ; DATA XREF: .debug_info:00001C7Ao
					; .debug_info:0000246Ao
aImgs_size	db 'imgs_size',0        ; DATA XREF: .debug_info:00001CAAo
					; .debug_info:00002499o
aDst_len	db 'dst_len',0          ; DATA XREF: .debug_info:00001A86o
					; .debug_info:0000281Fo ...
aEncoding	db 'encoding',0         ; DATA XREF: .debug_info:00001DC3o
					; .debug_info:0000238Co
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 4738h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch
		dd offset loc_14C3-5C1Bh
		dd offset unk_3E
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 6F200E43h
		dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 3Ch
		dd 54h
		dd offset loc_14C3-5C13h
		dd offset loc_1E2+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0E0AEF02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4204h, 3Ch, 94h
		dd offset loc_14C3-5A6Fh
		dd offset loc_178+4
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 700E4305h, 0A010603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B43040Eh, 40h, 0D4h
		dd offset loc_14C3-5933h
		dd offset loc_6A9+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 900E4605h, 2660302h,	41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 44040EC5h, 0Bh, 40h, 118h
		dd offset loc_14C3-52CBh
		dd offset loc_99C+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 0B00E4605h, 1550301h, 41140E0Ah, 41100EC3h, 410C0EC6h
		dd 41080EC7h, 41040EC5h, 0Bh, 2Ch, 15Ch
		dd offset loc_14C3-496Fh
		dd offset loc_88
		dd 80E4100h, 0E410286h,	4303830Ch, 7B02400Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 34h, 18Ch
		dd offset loc_14C3-4917h
		dd offset loc_52+2
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A45h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _gg_append+Cr
					; _gg_append+2Ar ...
; int ___mb_cur_max
		extrn __imp____mb_cur_max:near
					; DATA XREF: _gg_message_html_to_text:loc_B24r
					; _gg_message_html_to_text:loc_BDAr ...
; unsigned __int16 *__pctype
		extrn __imp___pctype:near ; DATA XREF: _gg_message_html_to_text+E7r
					; _gg_message_html_to_text:loc_E1Cr ...
		extrn __imp____stack_chk_fail:near ; CODE XREF:	_gg_append:loc_39p
					; _gg_message_text_to_html_110_buff:loc_21Fp ...
; void *__cdecl	memmove(void *,	const void *, size_t)
		extrn _memmove:near	; CODE XREF: _gg_after_append_formatted_char:loc_29Fp
; int __cdecl memcmp(const void	*, const void *, size_t)
		extrn _memcmp:near	; CODE XREF: _gg_after_append_formatted_char+133p
					; sub_662+1Dp
; int sprintf(char *, const char *, ...)
		extrn _sprintf:near	; CODE XREF: sub_521+16p sub_662+74p ...
; void __cdecl _assert(void *, void *, unsigned	int)
		extrn __assert:near	; CODE XREF: sub_A2A+17p
; int __cdecl _isctype(int, int)
		extrn __isctype:near	; CODE XREF: _gg_message_html_to_text:loc_BF4p
					; _gg_message_html_to_text:loc_C8Fp ...
; unsigned __int32 __cdecl strtoul(const char *, char **, int)
		extrn _strtoul:near	; CODE XREF: _gg_message_html_to_text+5B7p
					; _gg_message_html_to_text+94Cp
; void *__cdecl	malloc(size_t)
		extrn _malloc:near	; CODE XREF: _gg_message_html_to_text_110+40p
					; _gg_message_text_to_html_110+26p


		end

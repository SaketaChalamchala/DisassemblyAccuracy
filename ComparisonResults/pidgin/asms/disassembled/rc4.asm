;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F3D9FE5AD63A908E9465B06CFA6EA944
; Input	CRC32 :	986CA04F

; File Name   :	d:\pidgin-o\rc4.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_rc4_set_key	proc near		; DATA XREF: .data:00000418o
					; .debug_info:000004E2o ...

var_4C		= dword	ptr -4Ch
var_35		= byte ptr -35h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebp, [esp+4Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_get_data

loc_22:					; DATA XREF: .debug_info:00000C87o
		mov	esi, eax

loc_24:					; DATA XREF: .debug_loc:off_16CAo
					; .debug_loc:off_173Co	...
		mov	eax, [eax+104h]

loc_2A:					; DATA XREF: .debug_loc:000016CEo
		mov	[esp+4Ch+var_34], eax
		mov	ecx, esi
		lea	eax, [esi+100h]
		mov	[esp+4Ch+var_30], eax
		xor	edi, edi
		xor	edx, edx

loc_3E:					; DATA XREF: .debug_loc:00001740o
					; .debug_loc:0000175Fo	...
		xchg	ax, ax

loc_40:					; CODE XREF: _rc4_set_key:loc_76j
		mov	al, [ecx]
		mov	[esp+4Ch+var_35], al

loc_46:					; DATA XREF: .eh_frame:0000208Co
		movzx	ebx, al
		and	edi, 0FFh

loc_4F:					; DATA XREF: .debug_loc:00001848o
		add	ebx, edi

loc_51:					; DATA XREF: .debug_loc:00001C8Co
					; .eh_frame:000020B0o
		movzx	edx, dl
		add	bl, [ebp+edx+0]

loc_58:					; DATA XREF: .eh_frame:000020E0o
					; .eh_frame:00002110o
		movzx	ebx, bl
		mov	edi, ebx

loc_5D:					; DATA XREF: .debug_loc:off_1705o
		mov	al, [esi+ebx]

loc_60:					; DATA XREF: .debug_loc:00001709o
					; .debug_loc:00001710o
		mov	[ecx], al
		mov	al, [esp+4Ch+var_35]
		mov	[esi+ebx], al

loc_69:					; DATA XREF: .debug_info:00000B68o
					; .debug_info:00000BD8o
		lea	eax, [edx+1]
		cdq
		idiv	[esp+4Ch+var_34]
		inc	ecx

loc_72:					; DATA XREF: .debug_loc:00001714o
		cmp	ecx, [esp+4Ch+var_30]

loc_76:					; DATA XREF: .eh_frame:00002164o
		jnz	short loc_40
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_8C
		add	esp, 3Ch
		pop	ebx

loc_88:					; DATA XREF: .eh_frame:00002148o
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_8C:					; CODE XREF: _rc4_set_key+82j
		call	___stack_chk_fail
_rc4_set_key	endp

; ---------------------------------------------------------------------------
unk_91		db  8Dh	; ç		; DATA XREF: .debug_info:00000C07o
					; .debug_info:00000C9Do ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_rc4_encrypt	proc near		; DATA XREF: .data:00000408o
					; .debug_info:00000CBAo ...

var_4C		= dword	ptr -4Ch
var_3A		= byte ptr -3Ah
var_39		= byte ptr -39h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_95:					; DATA XREF: .debug_loc:000017A8o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	esi, [esp+4Ch+arg_4]

loc_9F:					; DATA XREF: .debug_loc:00001CA0o
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_38], edx
		mov	ebx, [esp+4Ch+arg_C]
		mov	[esp+4Ch+var_34], ebx
		mov	edx, [esp+4Ch+arg_10]

loc_B3:					; DATA XREF: .debug_info:000005EDo
		mov	[esp+4Ch+var_30], edx
		mov	ebx, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], ebx
		xor	ebx, ebx
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_get_data

loc_CF:					; DATA XREF: .debug_info:off_D7Co
					; .debug_loc:off_183Eo
		movzx	ebp, byte ptr [eax+100h]

loc_D6:					; DATA XREF: .debug_loc:off_187Fo
					; .eh_frame:0000204Co
		mov	dl, [eax+101h]
		mov	[esp+4Ch+var_39], dl

loc_E0:					; DATA XREF: .debug_loc:off_18C9o
					; .debug_loc:off_191Co	...
		mov	edx, [esp+4Ch+var_38]

loc_E4:					; DATA XREF: .debug_loc:000018CDo
					; .debug_loc:000018D4o
		test	edx, edx
		jz	short loc_12B
		xor	edx, edx

loc_EA:					; DATA XREF: .debug_loc:000018D8o
					; .debug_loc:00001933o
		xchg	ax, ax

loc_EC:					; CODE XREF: _rc4_encrypt+95j
		lea	ecx, [ebp+1]
		movzx	ecx, cl
		mov	ebp, ecx

loc_F4:					; DATA XREF: .debug_loc:00001883o
		mov	bl, [eax+ecx]
		mov	[esp+4Ch+var_3A], bl
		add	[esp+4Ch+var_39], bl

loc_FF:					; DATA XREF: .debug_loc:off_1851o
		movzx	edi, [esp+4Ch+var_39]
		mov	bl, [eax+edi]

loc_107:				; DATA XREF: .debug_loc:00001855o
					; .debug_loc:0000185Co
		mov	[eax+ecx], bl
		mov	bl, [esp+4Ch+var_3A]
		mov	[eax+edi], bl

loc_111:				; DATA XREF: .debug_loc:off_18F5o
		add	bl, [eax+ecx]

loc_114:				; DATA XREF: .debug_loc:000018F9o
		movzx	ebx, bl
		mov	cl, [esi+edx]

loc_11A:				; DATA XREF: .debug_loc:00001860o
		xor	cl, [eax+ebx]
		mov	ebx, [esp+4Ch+var_34]
		mov	[ebx+edx], cl
		inc	edx

loc_125:				; DATA XREF: .debug_info:00000628o
					; .debug_info:00000E9Co
		cmp	edx, [esp+4Ch+var_38]
		jnz	short loc_EC

loc_12B:				; CODE XREF: _rc4_encrypt+52j
		mov	edx, ebp
		mov	[eax+100h], dl
		mov	bl, [esp+4Ch+var_39]
		mov	[eax+101h], bl
		mov	eax, [esp+4Ch+var_30]

loc_141:				; DATA XREF: .debug_loc:00001842o
					; .debug_loc:00001920o
		test	eax, eax
		jz	short loc_14F
		mov	ebx, [esp+4Ch+var_38]
		mov	edx, [esp+4Ch+var_30]
		mov	[edx], ebx

loc_14F:				; CODE XREF: _rc4_encrypt+AFj
		xor	eax, eax
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_165
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_165:				; CODE XREF: _rc4_encrypt+C7j
		call	___stack_chk_fail
_rc4_encrypt	endp

; ---------------------------------------------------------------------------
unk_16A		db  66h	; f		; DATA XREF: .debug_info:00000CBEo
					; .debug_info:00000D92o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_rc4_uninit	proc near		; DATA XREF: .data:000003F8o
					; .debug_info:00000DAAo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_16D:				; DATA XREF: .debug_loc:00001952o
		sub	esp, 28h
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_187:				; DATA XREF: .debug_info:00000DD9o
		mov	edx, eax

loc_189:				; DATA XREF: .debug_loc:off_199Eo
		mov	ecx, 108h
		xor	eax, eax

loc_190:				; DATA XREF: .debug_loc:000019A2o
		mov	edi, edx
		rep stosb
		mov	eax, [esp+2Ch+var_10]

loc_198:				; DATA XREF: .debug_info:000012E4o
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_1AD
		mov	[esp+2Ch+arg_0], edx
		add	esp, 28h
		pop	edi

loc_1A8:				; DATA XREF: .debug_info:00001309o
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_1AD:				; CODE XREF: _rc4_uninit+32j
					; DATA XREF: .debug_info:00000DEFo ...
		call	___stack_chk_fail
_rc4_uninit	endp

; ---------------------------------------------------------------------------
unk_1B2		db  66h	; f		; DATA XREF: .debug_info:00000DAEo
					; .debug_info:00000DF9o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_rc4_init	proc near		; DATA XREF: .data:000003F0o
					; .debug_info:00000E0Fo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_1B5:				; DATA XREF: .debug_loc:000019D9o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 108h
		call	_g_malloc0

loc_1D8:				; DATA XREF: .debug_info:00000E4Eo
					; .debug_loc:off_1A3Do	...
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], ebx

loc_1DF:				; DATA XREF: .debug_loc:00001A41o
		call	_purple_cipher_context_set_data

loc_1E4:				; DATA XREF: .debug_info:off_E64o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_202
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_purple_cipher_context_reset
; ---------------------------------------------------------------------------

loc_202:				; CODE XREF: _rc4_init+3Aj
					; DATA XREF: .debug_info:00000E79o
		call	___stack_chk_fail
_rc4_init	endp

; ---------------------------------------------------------------------------
unk_207		db  90h	; ê		; DATA XREF: .debug_info:00000E13o
					; .debug_info:00000E83o

; =============== S U B	R O U T	I N E =======================================


_rc4_get_opt	proc near		; DATA XREF: .data:000003ECo
					; .debug_info:00000EA0o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_209:				; DATA XREF: .debug_loc:00001A54o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_228:				; DATA XREF: .debug_info:00000EDEo
		mov	esi, eax

loc_22A:				; DATA XREF: .debug_loc:off_1AB8o
		mov	[esp+2Ch+var_28], offset aKey_len ; "key_len"
		mov	[esp+2Ch+var_2C], ebx

loc_235:				; DATA XREF: .debug_loc:00001ABCo
		call	_purple_strequal

loc_23A:				; DATA XREF: .debug_info:00000EF4o
		test	eax, eax
		jz	short loc_258
		mov	eax, [esi+104h]

loc_244:				; CODE XREF: _rc4_get_opt+52j
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_25C
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_258:				; CODE XREF: _rc4_get_opt+34j
		xor	eax, eax
		jmp	short loc_244
; ---------------------------------------------------------------------------

loc_25C:				; CODE XREF: _rc4_get_opt+46j
		call	___stack_chk_fail
_rc4_get_opt	endp

; ---------------------------------------------------------------------------
unk_261		db  8Dh	; ç		; DATA XREF: .debug_info:00000EA4o
					; .debug_info:00000F13o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_rc4_set_opt	proc near		; DATA XREF: .data:_RC4Opso
					; .debug_info:00000F2Co ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi

loc_265:				; DATA XREF: .debug_loc:00001AE5o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]

loc_281:				; DATA XREF: .debug_line:off_1D04o
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_289:				; DATA XREF: .debug_info:00000F7Ao
		mov	edi, eax

loc_28B:				; DATA XREF: .debug_loc:off_1B61o
		mov	[esp+2Ch+var_28], offset aKey_len ; "key_len"
		mov	[esp+2Ch+var_2C], ebx

loc_296:				; DATA XREF: .debug_loc:00001B65o
					; .debug_loc:00001B6Co
		call	_purple_strequal

loc_29B:				; DATA XREF: .debug_info:00000F90o
		test	eax, eax
		jz	short loc_2A5
		mov	[edi+104h], esi

loc_2A5:				; CODE XREF: _rc4_set_opt+39j
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_2B8
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi

locret_2B7:				; DATA XREF: .debug_loc:00001B70o
		retn
; ---------------------------------------------------------------------------

loc_2B8:				; CODE XREF: _rc4_set_opt+4Bj
		call	___stack_chk_fail
_rc4_set_opt	endp

; ---------------------------------------------------------------------------
unk_2BD		db  8Dh	; ç		; DATA XREF: .debug_info:00000F30o
					; .debug_info:00000FAFo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_rc4_get_key_size proc near		; DATA XREF: .data:0000041Co
					; .debug_info:00000FBDo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_2C3:				; DATA XREF: .debug_loc:00001B8Eo
		mov	eax, [esp+2Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_2D3:				; DATA XREF: .debug_info:00000FEBo
		test	eax, eax
		jz	short loc_2FC

loc_2D7:				; DATA XREF: .debug_info:00000FEFo
					; .debug_loc:off_1BE0o
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_2DF:				; DATA XREF: .debug_info:00001002o
					; .debug_info:00001070o ...
		test	eax, eax
		jz	short loc_320

loc_2E3:				; DATA XREF: .debug_info:00001006o
					; .debug_loc:off_1C0Co
		mov	eax, [eax+104h]

loc_2E9:				; CODE XREF: _rc4_get_key_size+5Dj
					; _rc4_get_key_size+81j
					; DATA XREF: ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_343
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_2FC:				; CODE XREF: _rc4_get_key_size+15j
		mov	[esp+2Ch+var_24], offset aContext ; "context"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_318:				; DATA XREF: .debug_info:00001086o
		mov	eax, 0FFFFFFFFh
		jmp	short loc_2E9
; ---------------------------------------------------------------------------
		align 10h

loc_320:				; CODE XREF: _rc4_get_key_size+21j
					; DATA XREF: .debug_info:0000101Do ...
		mov	[esp+2Ch+var_24], offset aCtx ;	"ctx"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_33C:				; DATA XREF: .debug_info:0000104Ao
		mov	eax, 0FFFFFFFFh
		jmp	short loc_2E9
; ---------------------------------------------------------------------------

loc_343:				; CODE XREF: _rc4_get_key_size+33j
					; DATA XREF: .debug_info:00001021o ...
		call	___stack_chk_fail
_rc4_get_key_size endp


; =============== S U B	R O U T	I N E =======================================


_rc4_reset	proc near		; DATA XREF: .data:000003F4o
					; .debug_info:00000FC1o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_34B:				; DATA XREF: .debug_loc:00001C30o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_362:				; DATA XREF: .debug_info:000010FBo
					; .debug_info:00001173o ...
		test	eax, eax
		jz	short loc_39C
		xor	edx, edx

loc_368:				; CODE XREF: _rc4_reset+2Aj
					; DATA XREF: .debug_info:000010FFo
		mov	[eax+edx], dl
		inc	edx

loc_36C:				; DATA XREF: .debug_loc:off_1C82o
		cmp	edx, 100h
		jnz	short loc_368

loc_374:				; DATA XREF: .debug_info:000007F9o
		mov	byte ptr [eax+100h], 0
		mov	byte ptr [eax+101h], 0
		mov	dword ptr [eax+104h], 5

loc_38C:				; CODE XREF: _rc4_reset:loc_3B8j
					; DATA XREF: .debug_loc:00001C68o ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_3BA
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_39C:				; CODE XREF: _rc4_reset+1Cj
					; DATA XREF: .debug_info:00001116o ...
		mov	[esp+2Ch+var_24], offset aRc4_ctx ; "rc4_ctx"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___14834 ; "rc4_reset"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_3B8:				; DATA XREF: .debug_info:0000114Do
		jmp	short loc_38C
; ---------------------------------------------------------------------------

loc_3BA:				; CODE XREF: _rc4_reset+4Ej
					; DATA XREF: .debug_info:0000111Ao ...
		call	___stack_chk_fail
_rc4_reset	endp

; ---------------------------------------------------------------------------
unk_3BF		db  90h	; ê		; DATA XREF: .debug_info:000010C0o
					; .debug_info:00001189o

; =============== S U B	R O U T	I N E =======================================


		public _purple_rc4_cipher_get_ops
_purple_rc4_cipher_get_ops proc	near	; DATA XREF: .debug_info:000011B5o
					; .debug_loc:off_1CA9o

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_3C3:				; DATA XREF: .debug_loc:00001CADo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _RC4Ops
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_3E3
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_3E3:				; CODE XREF: _purple_rc4_cipher_get_ops+1Dj
					; DATA XREF: .debug_info:000004E6o ...
		call	___stack_chk_fail
_purple_rc4_cipher_get_ops endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 3E8h
_RC4Ops		dd offset _rc4_set_opt	; DATA XREF: _purple_rc4_cipher_get_ops+Eo
					; .debug_info:000011E6o ...
		dd offset _rc4_get_opt
		dd offset _rc4_init
		dd offset _rc4_reset
		dd offset _rc4_uninit
		dd 3 dup(0)
		dd offset _rc4_encrypt
		dd 3 dup(0)
		dd offset _rc4_set_key
		dd offset _rc4_get_key_size
dword_420	dd 0Ah dup(0)		; DATA XREF: .debug_info:00000F44o
					; .debug_info:000012ADo ...
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 44Ch
aKey_len	db 'key_len',0          ; DATA XREF: _rc4_get_opt:loc_22Ao
					; _rc4_set_opt:loc_28Bo ...
aContext	db 'context',0          ; DATA XREF: _rc4_get_key_size:loc_2FCo
					; .debug_info:000010A8o ...
aCtx		db 'ctx',0              ; DATA XREF: _rc4_get_key_size:loc_320o
					; .debug_info:00001068o
aRc4_ctx	db 'rc4_ctx',0          ; DATA XREF: _rc4_reset:loc_39Co
					; .debug_info:0000116Bo
___PRETTY_FUNCTION___14867 db 'rc4_get_key_size',0 ; DATA XREF: _rc4_get_key_size+44o
					; _rc4_get_key_size+68o ...
___PRETTY_FUNCTION___14834 db 'rc4_reset',0 ; DATA XREF: _rc4_reset+5Co
					; .debug_info:000010F6o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 484h
off_484		dd offset byte_EBB	; DATA XREF: .debug_aranges:00001CEAo
					; .debug_info:00000C48o
		db 2, 0
		dd offset dword_1344
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
dword_49C	dd 70696301h, 73726568h, 3463722Fh, 4300632Eh, 775C5C3Ah
		dd 736B726Fh, 65636170h, 69705C5Ch, 6E696764h, 7665642Dh
		dd 5C5C6C65h, 67646970h, 322D6E69h, 2E30312Eh, 5C5C3131h
		dd 7062696Ch, 6C707275h
		db 65h,	0
		dd offset _rc4_set_key
		dd offset loc_3E3+5
		dd offset off_1D04
		dw 402h
		db    5
		db 69h,	6Eh, 74h
		db    0
		db 3, 73h, 69h
aZe_t		db 'ze_t',0
		db 2, 0D5h, 7Fh
		db    0
		db 2 dup(0), 2
		db    4
aUnsignedInt	db 7,'unsigned int',0   ; DATA XREF: .debug_info:00000720o
		db 2
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 1, 6
aSignedChar	db 'signed char',0      ; DATA XREF: .debug_info:00000774o
dword_538	dd 75080102h, 6769736Eh, 2064656Eh, 72616863h, 5020200h
		dd 726F6873h, 6E692074h, 8020074h, 6E6F6C05h, 6F6C2067h
		dd 6920676Eh, 200746Eh
aLongLongUnsign	db 8,7,'long long unsigned int',0
		db 3, 67h, 73h
		db  69h	; i
		db 7Ah,	65h, 0
		db    3
		db 5Ah,	7Fh, 0
		db    0
		align 2
		dw 402h
aSizetype	db 7,'sizetype',0
		dw 102h
		db    6
aChar		db 'char',0
		dw 802h
		db    4
aDouble		db 'double',0
		db    4
		db 4, 2, 4
		db    5
aLongInt	db 'long int',0
		dw 6703h
aChar_0		db 'char',0
		db 4, 2Dh, 16h
		db    1
		db 2 dup(0), 3
aGint		db 'gint',0
		db 4, 30h, 6Ah
		db    0
		db 2 dup(0), 3
aGboolean	db 'gboolean',0
		db 4, 31h, 43h
		db    1
		db 2 dup(0), 3
aGuchar		db 'guchar',0
		db 4
		db  33h	; 3
		dd offset loc_B3+1
		db 2, 4, 7
aLongUnsignedIn	db 'long unsigned int',0
		dw 6703h
aUint		db 'uint',0
		db 4, 36h, 7Fh
		db    0
		db 2 dup(0), 2
		db    4
		db 4, 66h, 6Ch
		db  6Fh	; o
		db 61h,	74h, 0
		db    3
aGpointer	db 'gpointer',0
		dw 4C04h
		dd offset loc_125+3
		db    5
		db 4, 0AEh, 1
		db    0
		align 2
		dw 3606h
		db    1
		db 2 dup(0), 2
		db  0Ch
		db 4, 6Ch, 6Fh
aNgDouble	db 'ng double',0
		dw 5003h
aUrplecipherops	db 'urpleCipherOps',0
		db 5
		db  26h	; &
		dd offset loc_1D8+1
a_purpleciphero	db 7,'_PurpleCipherOps',0
		db 48h
		db    5
		db 4Dh,	5Eh, 3
		db    0
		align 2
aSet_option	db 8,'set_option',0
		dw 4F05h
		dd offset dword_420+7
		db    2
		db 23h,	0, 8
aGet_option	db 'get_option',0
		db 5
		db  52h	; R
		dd offset dword_420+22h
		db 2, 23h, 4
aInit		db 8,'init',0
		dw 5505h
		dd offset aContext+5	; "xt"
		db    2
aReset		db '#',8,8,'reset',0
		dw 5805h
		dd offset aContext+5	; "xt"
		db    2
byte_6BD	db 23h,	0Ch, 8		; DATA XREF: .debug_info:00000FE0o
aUninit		db 'uninit',0
		db 5
		db  5Bh	; [
		dd offset ___PRETTY_FUNCTION___14867+3 ; "_get_key_size"
		db 2, 23h, 10h
aSet_iv		db 8,'set_iv',0         ; DATA XREF: .debug_info:00000FF8o
		db    5
		db 5Eh,	8Dh, 4
unk_6DC		db    0			; DATA XREF: .debug_info:00000B50o
		align 2
		dw 2302h
		db  14h
aAppend		db 8,'append',0
byte_6E9	db 5, 61h, 0B4h		; DATA XREF: .debug_info:00000DD0o
		db    4
		db 2 dup(0), 2
		db  23h	; #
		db 18h,	8, 64h
aIgest		db 'igest',0
		dw 6405h
		dd offset dword_49C+43h
unk_700		db    2			; DATA XREF: .debug_info:00000B46o
		db 23h,	1Ch, 8
aEncrypt	db 'encrypt',0          ; DATA XREF: .debug_info:000010B8o
		db    5
		db 67h,	9, 5
		db    0
		align 2
		dw 2302h
aDecrypt	db ' ',8,'decrypt',0
		dw 6A05h
		dd offset aUnsignedInt+4 ; "igned int"
		db    2
aSet_salt	db '#$',8,'set_salt',0
		db 5, 6Dh, 20h
		db    5
		db 2 dup(0), 2
aGet_salt_size	db '#(',8,'get_salt_size',0 ; DATA XREF: .debug_info:000010F0o
		db 5, 70h, 36h
		db    5
byte_74D	db 2 dup(0), 2		; DATA XREF: .debug_info:00001108o
aSet_key	db '#,',8,'set_key',0
		db 5
		db  73h	; s
		dd offset dword_538+15h
		db 2, 23h, 30h
aGet_key_size	db 8,'get_key_size',0   ; DATA XREF: .debug_info:00000BC7o
		dw 7605h
		dd offset aSignedChar+0Ah ; "r"
		db    2
a4Set_batch_mod	db '#4',8,'set_batch_mode',0
		db 5
		db  79h	; y
		dd offset dword_538+2Ch
		db 2, 23h, 38h
aGet_batch_mode	db 8,'get_batch_mode',0
		db    5
		db 7Ch,	7Ah, 5
		db    0
		align 2
		dw 2302h
aGet_block_size	db '<',8,'get_block_size',0
		db 5, 7Fh, 36h
		dd 2000005h
a@Set_key_with_	db '#@',8,'set_key_with_len',0
		db    5
		db 82h,	0B4h, 4
		db    0
		align 2
		dw 2302h
		db  44h	; D
		align 2
		dw 5003h
aUrpleciphercon	db 'urpleCipherContext',0
		db 5
		db  27h	; '
		dd offset loc_374+5
a_purplecipherc	db 9,'_PurpleCipherContext',0
		db 1
a_purplecipherb	db 0Ah			; DATA XREF: .debug_info:00000C8Fo
					; .debug_info:00000C10o
		db '_PurpleCipherBatchMode',0
		db    4
		db 5, 2Ch, 0EEh
		db    3
		db 2 dup(0), 0Bh
aPurple_cipher_	db 'PURPLE_CIPHER_BATCH_MODE_ECB',0
		align 2
aPurple_ciphe_0	db 0Bh,'PURPLE_CIPHER_BATCH_MODE_CBC',0
		db    1
		align 2
		dw 5003h
aUrplecipherbat	db 'urpleCipherBatchMode',0
		db 5, 2Fh, 90h
dword_88C	dd 0C000003h, 42101h, 4210D00h,	0A80D0000h, 0D000001h
		dd 128h, 5E040500h, 5000003h, 40B04h, 28010E00h, 42000001h
		dd 0D000004h, 421h, 1A80Dh, 4050000h, 42Dh, 459010Ch, 210D0000h
		dd 0D000004h, 128h, 48040500h, 0C000004h, 46B01h, 4210D00h
		dd 5000000h, 45F04h, 87010C00h,	0D000004h, 421h, 4870Dh
		dd 710D00h, 5000000h, 15F04h, 71040500h, 0C000004h, 4A901h
		dd 4210D00h, 0A90D0000h, 0D000004h, 71h, 0AF040500h, 6000004h
		dd 15Fh, 4930405h, 10E0000h, 14Fh, 4D9h, 4210Dh, 710D00h
		dd 870D0000h, 0D000004h, 4D9h, 71040500h, 5000000h, 4BA04h
		dd 6A010E00h, 9000000h,	0D000005h, 421h, 4A90Dh, 710D00h
		dd 870D0000h, 0D000004h, 4D9h, 0E5040500h, 0C000004h, 52001h
		dd 4210D00h, 870D0000h,	4, 50F0405h, 10E0000h, 71h, 536h
		dd 4210Dh, 4050000h, 526h, 54D010Ch, 210D0000h,	0D000004h
		dd 4A9h, 3C040500h, 0C000005h, 56401h, 4210D00h, 0EE0D0000h
		dd 3, 5530405h,	10E0000h, 3EEh,	57Ah, 4210Dh, 4050000h
		dd 56Ah, 6F695F07h, 667562h, 17810620h,	8000006h, 7274705Fh
		dd 17830600h, 2000006h,	5F080023h, 746E63h, 6A8406h, 23020000h
		dd 625F0804h, 657361h, 6178506h, 23020000h, 665F0808h
		dd 67616Ch, 6A8606h, 23020000h,	665F080Ch, 656C69h, 6A8706h
		dd 23020000h, 635F0810h, 62726168h, 6006675h, 6A88h, 14230200h
		dd 75625F08h, 7A697366h, 6A890600h, 2000000h, 5F081823h
		dd 66706D74h, 656D616Eh, 178A0600h, 2000006h, 5001C23h
		dd 11604h, 49460300h, 600454Ch,	5808Bh,	2F040500h, 6000006h
		dd 116h, 3443520Fh, 746E6F43h, 747865h,	19010108h, 686h
		dd 61747308h, 1006574h,	6861Ah,	230200h, 1007808h, 15F1Bh
		dd 80230300h, 790802h, 15F1C01h, 23030000h, 6B080281h
		dd 6C5F7965h, 1006E65h,	1431Dh,	84230300h, 5F100002h, 96000001h
		dd 11000006h, 10Ah
		db 0FFh, 0, 12h
		dd offset aRc4_get_key_si ; "rc4_get_key_size"
		db 1
dword_B20	dd 71016Ch, 0EA010000h,	13000006h ; DATA XREF: .debug_info:00000F98o
		dd offset aContext_0	; "context"
		dd 4216C01h, 63140000h,	1007874h, 6EA6Eh
		db 0, 15h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset unk_700
		db 1
		dd offset aRc4_get_key_si ; "rc4_get_key_size"
		db 16h
		dd offset unk_6DC
		db 17h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 70h, 6Ah
		align 10h
		db 18h,	17h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 7401h
		dd offset loc_69+1
dword_B6C	dd 4050000h, 634h, 11610h, 70000h, 10A1100h, 100000h, 6F006h
		db 0, 19h
		dd offset aRc4_reset	; "rc4_reset"
		dw 2A01h
		dd 75A0101h
byte_B94	db 2 dup(0), 13h	; DATA XREF: .debug_info:0000100Ao
		dd offset aContext_0	; "context"
		db 1
		dd 4212Ah, 78651A00h, 617274h, 1282A01h
		db 2 dup(0), 17h
		dd offset aRc4_ctx_0	; "rc4_ctx"
		db 1
		dd 6EA2Bh, 691400h, 1822C01h
		db 2 dup(0), 15h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aGet_key_size+6 ; "ey_size"
		db 1
		dd offset aRc4_reset	; "rc4_reset"
		db 18h,	17h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 3001h
		dd offset loc_69+1
		dd 16100000h, 6A000001h, 11000007h, 10Ah, 5A060009h, 1B000007h
		dd 5F346372h, 5F746573h, 79656Bh
byte_C00	db 1, 4Ah, 1		; DATA XREF: .debug_info:00001078o
		dd offset _rc4_set_key
		dd offset unk_91
		dd offset dword_1630
		db 1
		dd offset a_purplecipherb+0Eh ;	"BatchMode"
		db 1Ch
		dd offset aContext_0	; "context"
		db 1, 4Ah, 21h
dword_C1C	dd 2000004h, 6B1D0091h,	1007965h, 4A94Ah, 4910200h, 7874631Eh
					; DATA XREF: .debug_info:0000108Eo
		dd 0EA4B0100h
		db 6, 2	dup(0)
		dd offset off_16CA
		db 1Eh
aState		db 'state',0
		dw 4C01h
		dd offset off_484+3
		dd offset off_16CA
		db 1Fh
		dd offset aTemp_swap	; "temp_swap"
		db 1, 4Dh, 5Fh
		db 1, 2	dup(0)
		dd offset off_1705
		db 1Eh
		dd 4E010078h, 15Fh
		dd offset off_173C
		dd 100791Eh, 15F4Eh
		db 0
		dd offset off_175B
		db 1Eh,	69h, 0
		dd 1824F01h
		db 2 dup(0)
		dd offset off_1790
		db 20h
		dd offset loc_22
off_C8B		dd offset off_D7C+3	; DATA XREF: .debug_info:00001103o
		dd offset a_purplecipherb+4 ; "rpleCipherBatchMode"
		db 21h
		dd 3007402h, 60091h
		db 22h
		dd offset unk_91
		dd offset off_DB2+1
		align 2
aRc4_encrypt	db '#rc4_encrypt',0
		db 1
		dd 1430187h
		db 2 dup(0)
		dd offset _rc4_encrypt
		dd offset unk_16A
		dd offset off_17A4
		dw 1701h
		dd 1C000009h
		dd offset aContext_0	; "context"
dword_CD0	dd 4218701h, 91020000h,	61641D00h, 1006174h, 4A987h, 4910200h
		dd 6E656C1Dh, 71880100h, 2000000h, 6F1D0891h, 75707475h
		dd 88010074h, 487h, 1D0C9102h, 6C74756Fh, 1006E65h, 4D988h
		dd 10910200h, 7874631Eh, 0EA890100h
		db 6, 2	dup(0)
		dd offset off_183E
		db 1Fh
		dd offset aTemp_swap	; "temp_swap"
		dd 15F8A01h
		db 2 dup(0)
		dd offset off_1851
		dw 781Eh
		dd 5F8B0100h
		db 1, 2	dup(0)
		dd offset off_187F
		db 1Eh
		dd 8B010079h, 15Fh
		dd offset off_18C9
		dd 1007A1Eh, 15F8Bh
		db 0
		dd offset off_18F5
		db 1Eh,	73h, 74h
dword_D60	dd 657461h, 4878C01h	; DATA XREF: .debug_info:000011FDo
		db 2 dup(0)
		dd offset off_191C
		dw 691Eh
		dd 828D0100h
		db 1, 2	dup(0)
		dd offset off_192F
		db 20h
off_D7C		dd offset loc_CF	; DATA XREF: .debug_info:off_C8Bo
					; .debug_info:00000D80o ...
		dd offset off_D7C+3
		dd offset dword_88C+81h
		dd 740221h, 6009103h
		db 0, 22h
		dd offset unk_16A
		dd offset off_DB2+1
		dw 1B00h
aRc4_uninit	db 'rc4_uninit',0
		db 1
		db 3Dh,	1
		dd offset _rc4_uninit
		dd offset unk_1B2
off_DB2		dd offset off_194E	; DATA XREF: .debug_info:00000CA1o
					; .debug_info:00000D96o ...
		dw 7E01h
		dd 1C000009h
		dd offset aContext_0	; "context"
		dd 4213D01h, 91020000h
byte_DC8	db 0, 1Fh		; DATA XREF: .debug_info:00000DF4o
		dd offset aRc4_ctx_0	; "rc4_ctx"
		dw 3E01h
		dd offset byte_6E9+1
		dd offset off_199E
		db 20h
		dd offset loc_187
off_DDD		dd offset off_D7C+3	; DATA XREF: .debug_info:00000E52o
		dd offset dword_88C+0DEh
		db 21h,	2, 74h
		dd 910300h
		db 6, 0, 24h
		dd offset loc_1AD
		db 1
		dd offset byte_DC8+1
		db 22h
		dd offset unk_1B2
off_DFD		dd offset off_DB2+1	; DATA XREF: .debug_info:00000E68o
		align 2
aRc4_init	db 1Bh,'rc4_init',0
		db 1, 21h, 1
		dd offset _rc4_init
		dd offset unk_207
		dd offset off_19D5
		db 1
		dd offset dword_88C+17Ch
		db 1Ch
		dd offset aContext_0	; "context"
		db 1, 2	dup(21h)
dword_E28	dd 2000004h, 651D0091h,	61727478h, 28210100h, 2000001h
					; DATA XREF: .debug_info:000012A8o
		db 91h,	4, 1Fh
		dd offset aRc4_ctx_0	; "rc4_ctx"
		db 1
		dd 6EA22h
		db 0
		dd offset off_1A3D
		db 20h
		dd offset loc_1D8
		dd offset off_DDD+3
		dd offset dword_88C+153h
		dw 221h
		dd 0A030074h, 20000108h
off_E64		dd offset loc_1E4	; DATA XREF: .debug_info:00000EF8o
					; .debug_info:00000F94o
		dd offset off_DFD+1
		dd offset dword_88C+168h
		dd 740221h, 7302h
		db 24h
		dd offset loc_202
		db 1, 33h, 0Eh
		db 2 dup(0), 22h
		dd offset unk_207
		dd offset off_DB2+1
		align 4
aRc4_get_opt	db '#rc4_get_opt',0     ; DATA XREF: .debug_info:0000104Eo
					; .debug_info:0000108Ao ...
		db 1, 7Ah, 1
		dd offset loc_125+3
		dd offset _rc4_get_opt
		dd offset unk_261
		dd offset off_1A50
		dd 0A9801h
		db 0, 1Ch
		dd offset aContext_0	; "context"
		dw 7A01h
		db 21h,	4, 0
byte_EBB	db 0			; DATA XREF: .debug_info:off_484o
		dd 1D009102h, 656D616Eh, 0A87A0100h, 2000001h, 631E0491h
		dd 1007874h, 6EA7Bh
		db 0
		dd offset off_1AB8
		db 20h
		dd offset loc_228
		dd offset off_D7C+3
		dd offset dword_88C+1E3h
		dw 221h
		dd 91030074h, 20000600h
		dd offset loc_23A
		dd offset off_E64+1
		dd offset dword_88C+202h
		dd 740221h, 21007302h, 5047402h
		db 3
		dd offset aKey_len	; "key_len"
		align 2
		db 22h
		dd offset unk_261
		dd offset off_DB2+1
		align 4
aRc4_set_opt	db 1Bh,'rc4_set_opt',0
		db 1, 61h, 1
		dd offset _rc4_set_opt
		dd offset unk_2BD
		dd offset off_1AE1
		dd 0B3401h
		db 0, 1Ch
		dd offset aContext_0	; "context"
		dw 6101h
		dd offset dword_420+1
		dd 1D009102h, 656D616Eh, 0A8610100h, 2000001h, 761D0491h
		dd 65756C61h, 28610100h, 2000001h, 631E0891h, 1007874h
		dd 6EA62h
		db 0
		dd offset off_1B61
		db 20h
		dd offset loc_289
		dd offset off_D7C+3
		dd offset dword_88C+27Fh
		dw 221h
		dd 91030074h, 20000600h
		dd offset loc_29B
		dd offset off_E64+1
		dd offset dword_B20+0Ah
		dd 740221h, 21007302h, 5047402h
		db 3
		dd offset aKey_len	; "key_len"
		align 2
		db 22h
		dd offset unk_2BD
		dd offset off_DB2+1
		align 4
		dd 69625h
		db 0
		dd offset _rc4_get_key_size
		dd offset _rc4_reset
		dd offset off_1B8A
		db 1, 33h, 0Ch
		dd 0A7260000h, 2000006h, 0B2270091h
		db 6, 2	dup(0)
		dd offset off_1BC2
		db 28h
		dd offset byte_6BD
		db 5, 3
		dd offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		db 29h
		dd offset loc_2D3
		dd offset loc_2D7
		dd offset dword_B6C+11h
		db 27h
		dd offset aSet_iv	; "\bset_iv"
		dd offset off_1BE0
		db 0, 29h
		dd offset loc_2DF
		dd offset loc_2E3
		dd offset byte_B94
		dw 0DD27h
		db 6, 2	dup(0)
		dd offset off_1C0C
		align 4
		dd 6962Ah
		db 0
		dd offset loc_320
		dd offset loc_343
		db 1, 6Ch, 0EBh
		dd 2B00000Bh
		dd offset loc_320
		dd offset loc_343
		dd 6B22Ch, 6A72D00h, 0BD280000h, 5000006h
		db 3
		dd offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		db 2Eh
		dd offset loc_33C
		dd offset aRc4_get_opt+3 ; "4_get_opt"
		dw 221h
		dd 30010074h, 4740221h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		dw 221h
		dd 3050874h
		dd offset aCtx		; "ctx"
		dd 20000000h
		dd offset loc_2DF
		dd offset off_D7C+3
		dd offset byte_C00+1
		dd 740221h, 6009103h
		db 0, 20h
		dd offset loc_318
		dd offset aRc4_get_opt+3 ; "4_get_opt"
		dd offset dword_C1C+0Dh
		dw 221h
		dd 30010074h, 4740221h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___14867 ; "rc4_get_key_size"
		dw 221h
		dd 3050874h
		dd offset aContext	; "context"
		db 0, 22h
		dd offset _rc4_reset
		dd offset off_DB2+1
		dw 2500h
		dd offset aEncrypt+1	; "ncrypt"
		dd offset _rc4_reset
		dd offset unk_3BF
		dd offset off_1C2C
		dd 0D0E01h, 7122600h, 91020000h, 71D2600h, 91020000h, 72A2704h
		db 2 dup(0)
		dd offset off_1C64
		dw 3527h
		db 7, 2	dup(0)
		dd offset off_1C82
		db 28h
		dd offset aGet_salt_size+6 ; "_salt_size"
		db 5, 3
		dd offset ___PRETTY_FUNCTION___14834 ; "rc4_reset"
		db 29h
		dd offset loc_362
		dd offset loc_368
		dd offset off_C8B+2
		db 27h
		dd offset byte_74D
		dd offset off_1C95
		dd 7052A00h
		db 2 dup(0)
		dd offset loc_39C
		dd offset loc_3BA
		dw 2A01h
		dd offset dword_CD0+1Eh
		db 2Bh
		dd offset loc_39C
		dd offset loc_3BA
		db 2Ch,	2Ah, 7
		dd 352C0000h, 2D000007h, 71Dh, 7122Dh, 73E2800h, 3050000h
		dd offset ___PRETTY_FUNCTION___14834 ; "rc4_reset"
		db 2Eh
		dd offset loc_3B8
		dd offset aRc4_get_opt+3 ; "4_get_opt"
		db 21h,	2, 74h
		dd 21300100h, 5047402h
		db 3
		dd offset ___PRETTY_FUNCTION___14834 ; "rc4_reset"
		db 21h,	2, 74h
		db 8, 5, 3
		dd offset aRc4_ctx	; "rc4_ctx"
		align 10h
		db 2 dup(0), 20h
		dd offset loc_362
		dd offset off_D7C+3
		dd offset dword_CD0+34h
		db 21h
		dd 3007402h, 60091h
		db 22h
		dd offset unk_3BF
		dd offset off_DB2+1
		align 2
		dw 12Fh
aPurple_rc4_cip	db 'purple_rc4_cipher_get_ops',0
		dw 0BD01h
		dd 0D4C01h
		db 0
		dd offset _purple_rc4_cipher_get_ops
		dd offset loc_3E3+5
		dd offset off_1CA9
		db 1, 4Ch, 0Dh
		db 2 dup(0), 22h
		dd offset loc_3E3+5
		dd offset off_DB2+1
		align 10h
		dd 1C20405h, 52300000h,	704F3443h, 0A7010073h, 1C2h
		db 5, 3
		dd offset _RC4Ops
		dw 1D10h
		db    6
		db 2 dup(0), 71h
		db  0Dh
		db 2 dup(0), 31h
		db    0
a2_iob		db '2_iob',0
		db 6
		db  9Ah	; ö
		dd offset dword_D60+6
		db 2 dup(1), 33h
		db    1
aPurple_ciphe_1	db 'purple_cipher_context_get_data',0
		dd 101C005h, 198h, 0DB301h, 4210D00h, 34000000h, 735F5F01h
		dd 6B636174h, 6B68635Fh, 6961665Fh, 101006Ch, 67013501h
		dd 6572665Fh, 37070065h, 0DE00101h, 980D0000h, 1, 5F670136h
		dd 6C6C616Dh, 30636Fh, 98013407h, 1000001h, 0DFEh, 0FD0Dh
		dd 1370000h
aPurple_ciphe_2	db 'purple_cipher_context_set_data',0
		db 5
		db 0B7h	; ∑
		db 3 dup(1)
		dd offset dword_E28+0Bh
		db  0Dh
		dd offset dword_420+1
		db 0Dh,	98h, 1
		db    0
		db 2 dup(0), 37h
		db    1
aPurple_ciphe_3	db 'purple_cipher_context_reset',0
		db 5, 20h, 1
		db    1
		db 1, 65h, 0Eh
		db    0
		align 2
		dw 210Dh
		db    4
		db 2 dup(0), 0Dh
		dd offset loc_198
		db    0
		db 33h,	1, 70h
aUrple_strequal	db 'urple_strequal',0
		db 8
		db  62h	; b
		db 3, 1, 4Fh
		db    1
		db 2 dup(0), 1
		dd offset aRc4_get_opt+3 ; "4_get_opt"
		db  0Dh
		dd offset loc_1A8
		db 0Dh,	0A8h, 1
		db    0
		db 2 dup(0), 38h
		db    1
aG_return_if_fa	db 'g_return_if_fail_warning',0
		dw 7409h
		dd 290D0101h, 0D000006h, 629h, 6290Dh
		db 3 dup(0)
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 1344h
dword_1344	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000048Ao
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 13490026h, 13070000h, 0B080301h, 3B0B3A0Bh, 13010Bh
		dd 0D0800h, 0B3A0803h, 13490B3Bh, 0A38h, 3001309h, 0C3C08h
		dd 1040A00h, 0B0B0803h,	0B3B0B3Ah, 1301h, 300280Bh, 0D1C08h
		dd 1150C00h, 13010C27h,	50D0000h, 134900h, 1150E00h, 13490C27h
		dd 1301h, 301130Fh, 3A050B08h, 10B3B0Bh, 10000013h, 13490101h
		dd 1301h, 49002111h, 0B2F13h, 12E1200h,	0B3A0E03h, 0C270B3Bh
		dd 0B201349h, 1301h, 3000513h, 3B0B3A0Eh, 13490Bh, 341400h
		dd 0B3A0803h, 13490B3Bh, 34150000h, 490E0300h, 1C0C3413h
		dd 1600000Eh, 1301010Bh, 34170000h, 3A0E0300h, 490B3B0Bh
		dd 18000013h, 10Bh, 3012E19h, 3B0B3A0Eh, 200C270Bh, 13010Bh
		dd 51A00h, 0B3A0803h, 13490B3Bh, 2E1B0000h, 3A080301h
		dd 270B3B0Bh, 1201110Ch, 97064001h, 13010C42h, 51C0000h
		dd 3A0E0300h, 490B3B0Bh, 0A0213h, 51D00h, 0B3A0803h, 13490B3Bh
		dd 0A02h, 300341Eh, 3B0B3A08h, 213490Bh, 1F000006h, 0E030034h
		dd 0B3B0B3Ah, 6021349h,	89200000h, 11010182h, 1133101h
		dd 21000013h, 1828Ah, 42910A02h, 2200000Ah, 18289h, 13310111h
		dd 2E230000h, 3A080301h, 270B3B0Bh, 1113490Ch, 40011201h
		dd 0C429706h, 1301h, 1828924h, 95011100h, 13310C42h, 2E250000h
		dd 11133101h, 40011201h, 0C429706h, 1301h, 31000526h, 0A0213h
		dd 342700h, 6021331h, 34280000h, 2133100h, 2900000Ah, 111010Bh
		dd 13010112h, 1D2A0000h, 11133101h, 58011201h, 10B590Bh
		dd 2B000013h, 111010Bh,	112h, 3100342Ch, 2D000013h, 13310005h
		dd 892E0000h, 11010182h, 133101h, 12E2F00h, 8030C3Fh, 0B3B0B3Ah
		dd 13490C27h, 1120111h,	42970640h, 13010Ch, 343000h, 0B3A0803h
		dd 13490B3Bh, 0A02h, 2131h, 343200h, 0B3A0803h,	13490B3Bh
		dd 0C3C0C3Fh, 2E330000h, 30C3F01h, 3B0B3A08h, 490C2705h
		dd 10C3C13h, 34000013h,	0C3F002Eh, 0C270803h, 0C3C0C34h
		dd 2E350000h, 30C3F01h,	3B0B3A08h, 3C0C270Bh, 13010Ch
		dd 12E3600h, 8030C3Fh, 0B3B0B3Ah, 13490C27h, 13010C3Ch
		dd 2E370000h, 30C3F01h,	3B0B3A08h, 3C0C2705h, 13010Ch
		dd 12E3800h, 8030C3Fh, 0B3B0B3Ah, 0C3C0C27h
		db 3 dup(0)
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 1630h
dword_1630	dd 0			; DATA XREF: .debug_info:00000C0Bo
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 4
		dd 10740002h, 4, 7, 14740002h, 7, 87h, 0D0740003h, 8700h
		dd 8800h, 74000200h, 8814h, 8900h, 74000200h, 8910h, 8A00h
		dd 74000200h, 8A0Ch, 8B00h, 74000200h, 8B08h, 8C00h, 74000200h
		dd 8C04h, 9100h, 74000300h, 0D0h, 0
		db 2 dup(0)
off_16CA	dd offset loc_24	; DATA XREF: .debug_info:00000C3Bo
					; .debug_info:00000C4Co
		dd offset loc_2A
		dw 1
		dd 2A50h, 8900h, 56000100h, 89h, 8Ch, 4C910008h, 1000A06h
		dd 8C9F1Ch, 910000h, 10000h, 56h, 0
		db 0
off_1705	dd offset loc_5D	; DATA XREF: .debug_info:00000C5Bo
		dd offset loc_60
		db 1, 0, 50h
		dd offset loc_60
		dd offset loc_72
		dd 710002h, 72h, 90h, 7F710002h, 90h, 91h, 47910002h, 2	dup(0)
off_173C	dd offset loc_24	; DATA XREF: .debug_info:00000C68o
		dd offset loc_3E
		dd 9F300002h, 71h, 90h,	520001h, 0
		db 3 dup(0)
off_175B	dd offset loc_24	; DATA XREF: .debug_info:00000C75o
		dd offset loc_3E
		db 2
		dd 5D9F3000h, 88000000h, 1000000h, 885300h, 8A0000h, 10000h
		dd 8C57h, 9100h, 53000100h, 2 dup(0)
off_1790	dd offset loc_24	; DATA XREF: .debug_info:00000C82o
		dd offset loc_3E
		dd 9F300002h, 2	dup(0)
off_17A4	dd offset _rc4_encrypt	; DATA XREF: .debug_info:00000CC2o
		dd offset loc_95
		dd 4740002h, 95h, 96h, 8740002h, 96h, 97h, 0C740002h, 97h
		dd 98h,	10740002h, 98h,	9Bh, 14740002h,	9Bh, 160h, 0D0740003h
		dd 16000h, 16100h, 74000200h, 16114h, 16200h, 74000200h
		dd 16210h, 16300h, 74000200h, 1630Ch, 16400h, 74000200h
		dd 16408h, 16500h, 74000200h, 16504h, 16A00h, 74000300h
		dd 0D0h, 0
		db 2 dup(0)
off_183E	dd offset loc_CF	; DATA XREF: .debug_info:00000D23o
		dd offset loc_141
		dw 1
		dd offset loc_4F+1
		dd 0
		db 0
off_1851	dd offset loc_FF	; DATA XREF: .debug_info:00000D32o
		dd offset loc_107
		db 1, 0, 53h
		dd offset loc_107
		dd offset loc_11A
		dd 700005h, 1A220071h, 2B000001h, 2000001h, 429100h, 0
		db 3 dup(0)
off_187F	dd offset loc_D6	; DATA XREF: .debug_info:00000D3Fo
		dd offset loc_F4
		db 1
		dd 0F45500h, 11A0000h, 10000h, 11A51h, 14500h, 55000100h
		dd 145h, 14Dh, 4D520001h, 64000001h, 1000001h, 1655500h
		dd 16A0000h, 10000h, 55h, 0
		db 0
off_18C9	dd offset loc_E0	; DATA XREF: .debug_info:00000D4Co
		dd offset loc_E4
		db 1, 0, 52h
		dd offset loc_E4
		dd offset loc_EA
		dd 81700003h, 0EA02h, 16A00h, 91000200h, 43h, 0
		db 0
off_18F5	dd offset loc_111	; DATA XREF: .debug_info:00000D59o
		dd offset loc_114
		db 0Ah,	0, 70h
		dd 22007100h, 24310194h, 1149Fh, 12100h, 53000100h, 2 dup(0)
off_191C	dd offset loc_E0	; DATA XREF: .debug_info:00000D6Ao
		dd offset loc_141
		dd 500001h, 0
		db 3 dup(0)
off_192F	dd offset loc_E0	; DATA XREF: .debug_info:00000D77o
		dd offset loc_EA
		db 2
		dd 259F3000h, 2B000001h, 1000001h, 5200h, 0
		db 2 dup(0)
off_194E	dd offset _rc4_uninit	; DATA XREF: .debug_info:off_DB2o
		dd offset loc_16D
		dw 2
		dd 16D0474h, 1700000h, 20000h, 1700874h, 1A70000h, 20000h
		dd 1A73074h, 1A80000h, 20000h, 1A80874h, 1AD0000h, 20000h
		dd 1AD0474h, 1B20000h, 20000h, 3074h, 0
		db 2 dup(0)
off_199E	dd offset loc_189	; DATA XREF: .debug_info:00000DD4o
		dd offset loc_190
		dw 1
		dd 19050h, 1AC00h, 52000100h, 1ADh, 1B1h, 0B1520001h, 0B2000001h
		dd 4000001h, 7DF87700h,	9Fh, 0
		db 0
off_19D5	dd offset _rc4_init	; DATA XREF: .debug_info:00000E17o
		dd offset loc_1B5
		db 2, 0, 74h
		dd 1B504h, 1B600h, 74000200h, 1B608h, 1B900h, 74000200h
		dd 1B90Ch, 1FB00h, 74000200h, 1FB30h, 1FC00h, 74000200h
		dd 1FC0Ch, 1FD00h, 74000200h, 1FD08h, 20200h, 74000200h
		dd 20204h, 20700h, 74000200h, 30h, 0
		db 0
off_1A3D	dd offset loc_1D8	; DATA XREF: .debug_info:00000E49o
		dd offset loc_1DF+4
		db 1, 0, 50h
		align 10h
off_1A50	dd offset _rc4_get_opt	; DATA XREF: .debug_info:00000EA8o
		dd offset loc_209
		dd 4740002h, 209h, 20Ah, 8740002h, 20Ah, 20Dh, 0C740002h
		dd 20Dh, 253h, 30740002h, 253h,	254h, 0C740002h, 254h
		dd 255h, 8740002h, 255h, 258h, 4740002h, 258h, 261h, 30740002h
		dd 2 dup(0)
off_1AB8	dd offset loc_22A	; DATA XREF: .debug_info:00000ED9o
		dd offset loc_235+4
		dd 39500001h, 55000002h, 1000002h, 2565600h, 2610000h
		dd 10000h, 56h,	0
		db 0
off_1AE1	dd offset _rc4_set_opt	; DATA XREF: .debug_info:00000F34o
		dd offset loc_265
		db 2, 0, 74h
		dd 26504h, 26600h, 74000200h, 26608h, 26700h, 74000200h
		dd 2670Ch, 26A00h, 74000200h, 26A10h, 2B400h, 74000200h
		dd 2B430h, 2B500h, 74000200h, 2B510h, 2B600h, 74000200h
		dd 2B60Ch, 2B700h, 74000200h, 2B708h, 2B800h, 74000200h
		dd 2B804h, 2BD00h, 74000200h, 30h, 0
		db 0
off_1B61	dd offset loc_28B	; DATA XREF: .debug_info:00000F75o
		dd offset loc_296+4
		db 1, 0, 50h
		dd offset loc_296+4
		dd offset locret_2B7
		dd 0B8570001h, 0BD000002h, 1000002h, 5700h, 0
		db 2 dup(0)
off_1B8A	dd offset _rc4_get_key_size ; DATA XREF: .debug_info:00000FC5o
		dd offset loc_2C3
		dw 2
		dd 2C30474h, 2F80000h, 20000h, 2F83074h, 2FC0000h, 20000h
		dd 2FC0474h, 3480000h, 20000h, 3074h, 0
		db 2 dup(0)
off_1BC2	dd offset loc_2DF	; DATA XREF: .debug_info:00000FDBo
		dd offset loc_2E9
		dw 1
		dd 31F50h, 33B00h, 50000100h, 2	dup(0)
off_1BE0	dd offset loc_2D7	; DATA XREF: .debug_info:00000FFCo
		dd offset loc_2E9
		dd 9F310002h, 2FCh, 31Fh, 9F300002h, 31Fh, 343h, 9F310002h
		dd 2 dup(0)
off_1C0C	dd offset loc_2E3	; DATA XREF: .debug_info:00001013o
		dd offset loc_2E9
		dd 9F310002h, 31Fh, 343h, 9F300002h, 2 dup(0)
off_1C2C	dd offset _rc4_reset	; DATA XREF: .debug_info:000010C4o
		dd offset loc_34B
		dd 4740002h, 34Bh, 39Bh, 30740002h, 39Bh, 39Ch,	4740002h
		dd 39Ch, 3BFh, 30740002h, 2 dup(0)
off_1C64	dd offset loc_362	; DATA XREF: .debug_info:000010E2o
		dd offset loc_38C
		dd 9C500001h, 0B7000003h, 1000003h, 5000h, 0
		db 2 dup(0)
off_1C82	dd offset loc_36C	; DATA XREF: .debug_info:000010EBo
		dd offset loc_38C
		dw 1
		dd offset loc_51+1
		dd 0
		db 0
off_1C95	dd offset loc_39C	; DATA XREF: .debug_info:0000110Co
		dd offset loc_3BA
		db 2, 0, 30h
		dd offset loc_9F
		dd 0
		db 0
off_1CA9	dd offset _purple_rc4_cipher_get_ops ; DATA XREF: .debug_info:000011BDo
		dd offset loc_3C3
		db 2, 0, 74h
		dd 3C304h, 3E200h, 74000200h, 3E220h, 3E300h, 74000200h
		dd 3E304h, 3E800h, 74000200h, 20h, 0
		db 0
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 1CE4h
		dd 1Ch
		db 2, 0
		dd offset off_484
		dw 4
		dd 0
		dd offset _rc4_set_key
		dd offset _RC4Ops
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 1D04h
off_1D04	dd offset loc_281	; DATA XREF: .debug_info:000004EAo
		db    2
		align 2
		dd offset loc_1AD+1
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aIphers		db 'iphers',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a__Libpurple	db '../libpurple',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include',0
		align 10h
aRc4_c		db 'rc4.c',0
		dw 1
		dd 64747300h, 2E666564h, 20068h, 696C6700h, 6E6F6362h
		dd 2E676966h, 30068h, 79746700h, 2E736570h, 40068h, 70696300h
		dd 2E726568h, 50068h, 64747300h, 682E6F69h, 600h, 6D656D67h
		dd 400682Eh, 74750000h,	682E6C69h, 500h, 73656D67h, 65676173h
		dd 682E73h, 4
		db 0, 5, 2
		dd offset _rc4_set_key
		db 3
		dd 0AC0100C9h, 87903B3h, 9E0A0390h, 402002Dh, 2004F02h
		dd 0BC080204h, 2040200h, 4020059h, 2007502h, 7A030204h
		dd 2A036E90h, 2302AC08h, 75BCC112h, 40200A1h, 200BC02h
		dd 830204h, 0AE020402h,	2040200h, 40200ADh, 2007502h, 3D0204h
		dd 3020402h, 0A03F278h,	839F8374h, 7F9803A1h, 0AF4ABA08h
		dd 48F4AED7h, 0C8BA5E03h, 8BBBBAEh, 0D503573Dh,	0AF90AC00h
		dd 6A3D08D8h, 34B3B08h,	0AFD6825Dh, 683D08D8h, 0BD74A208h
		dd 674C844Ch, 2E087903h, 2162402h, 0B3031523h, 0B03C587Fh
		dd 40200BCh, 2006902h, 923B0204h, 3A07775h, 0A03F276h
		dd 8303C808h, 0AE3C6601h, 1001A02h
		db 1
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 1F8Ch
aRc4_reset	db 'rc4_reset',0        ; DATA XREF: .debug_info:00000B8Ao
					; .debug_info:00000BCCo
aRc4_get_key_si	db 'rc4_get_key_size',0 ; DATA XREF: .debug_info:00000B1Bo
					; .debug_info:00000B4Bo
aContext_0	db 'context',0          ; DATA XREF: .debug_info:00000B2Co
					; .debug_info:00000B97o ...
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00000B42o
					; .debug_info:00000BC3o
aRc4_ctx_0	db 'rc4_ctx',0          ; DATA XREF: .debug_info:00000BAFo
					; .debug_info:00000DCAo ...
a_g_boolean_var	db '_g_boolean_var_',0  ; DATA XREF: .debug_info:00000B55o
					; .debug_info:00000B62o ...
aTemp_swap	db 'temp_swap',0        ; DATA XREF: .debug_info:00000C51o
					; .debug_info:00000D28o
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 1FE8h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch
		dd offset loc_3E3-23EBh
		dd offset unk_91
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 3Ch, 5Ch
		dd offset loc_3E3-2397h
		dd offset loc_D6
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0AC502h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 20h, 9Ch
		dd offset loc_3E3-22FFh
		dd offset loc_46
		dd 80E4100h, 0E430287h,	0E0A7730h, 0EC74108h, 0B4504h
		dd 2Ch,	0C0h
		dd offset loc_3E3-22DBh
		dd offset loc_51+2
		dd 80E4100h, 0E410286h,	4303830Ch, 4202300Eh, 410C0E0Ah
		dd 41080EC3h, 45040EC6h, 0Bh, 2Ch, 0F0h
		dd offset loc_3E3-22B7h
		dd offset loc_58+1
		dd 80E4100h, 0E410286h,	4303830Ch, 4602300Eh, 410C0E0Ah
		dd 41080EC3h, 43040EC6h, 0Bh, 34h, 120h
		dd offset loc_3E3-228Bh
		dd offset loc_58+1
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A4Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
		dd 158h
		dd offset loc_3E3-2267h
		dd offset loc_88
		dd 300E4300h, 40E0A75h,	0B44h, 18h, 174h
		dd offset loc_3E3-21FBh
		dd offset loc_76+1
		dd 300E4300h, 0E0A5002h, 0B4104h, 18h, 190h
		dd offset loc_3E3-219Fh
		dd offset loc_24+4
		dd 200E4300h, 40E0A5Fh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _rc4_set_key+Br
					; _rc4_set_key+7Cr ...
		extrn _purple_cipher_context_get_data:near ; CODE XREF:	_rc4_set_key+1Dp
					; _rc4_encrypt+36p ...
		extrn ___stack_chk_fail:near ; CODE XREF: _rc4_set_key:loc_8Cp
					; _rc4_encrypt:loc_165p ...
		extrn _g_free:near	; CODE XREF: _rc4_uninit:loc_1A8j
		extrn _g_malloc0:near	; CODE XREF: _rc4_init+1Fp
		extrn _purple_cipher_context_set_data:near ; CODE XREF:	_rc4_init:loc_1DFp
		extrn _purple_cipher_context_reset:near	; CODE XREF: _rc4_init+49j
		extrn _purple_strequal:near ; CODE XREF: _rc4_get_opt:loc_235p
					; _rc4_set_opt:loc_296p
		extrn _g_return_if_fail_warning:near ; CODE XREF: _rc4_get_key_size+53p
					; _rc4_get_key_size+77p ...


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	5DE232FD86380075192B440CC0C072BC
; Input	CRC32 :	2E22E041

; File Name   :	d:\pidgin-o\circbuffer.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _purple_circ_buffer_new
_purple_circ_buffer_new	proc near	; DATA XREF: .debug_info:000004B1o
					; .debug_info:00000781o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 18h
		call	_g_malloc0

loc_1F:					; DATA XREF: .debug_info:000007B0o
		test	ebx, ebx
		jnz	short loc_27
		mov	bx, 100h

loc_27:					; CODE XREF: _purple_circ_buffer_new+21j
		mov	[eax+4], ebx
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_3B
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_3B:					; CODE XREF: _purple_circ_buffer_new+34j
		call	___stack_chk_fail
_purple_circ_buffer_new	endp


; =============== S U B	R O U T	I N E =======================================


		public _purple_circ_buffer_destroy
_purple_circ_buffer_destroy proc near	; DATA XREF: .debug_info:00000785o
					; .debug_info:000007C4o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_41:					; DATA XREF: .debug_loc:0000100Fo
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_53:					; DATA XREF: .debug_info:00000823o
		test	ebx, ebx
		jz	short loc_7C

loc_57:					; DATA XREF: .debug_info:00000827o
					; .debug_loc:off_107Fo
		mov	eax, [ebx]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_61:					; DATA XREF: .debug_info:00000840o
		mov	eax, [esp+2Ch+var_10]

loc_65:					; DATA XREF: .debug_info:00000535o
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_A9

loc_6D:					; DATA XREF: .eh_frame:0000173Co
					; .eh_frame:000016B4o ...
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	_g_free
; ---------------------------------------------------------------------------
unk_7A		db  66h	; f		; DATA XREF: .debug_info:00000849o
					; .debug_loc:00001083o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_7C:					; CODE XREF: _purple_circ_buffer_destroy+15j
		mov	[esp+2Ch+var_24], offset aBufNull ; "buf != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___43285 ; "purple_circ_buffer_destroy"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_98:					; DATA XREF: .debug_info:00000853o
					; .debug_info:00000650o
		mov	eax, [esp+2Ch+var_10]

loc_9C:					; DATA XREF: .eh_frame:00001758o
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_A9
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_A9:					; CODE XREF: _purple_circ_buffer_destroy+2Bj
					; _purple_circ_buffer_destroy+62j
					; DATA XREF: ...
		call	___stack_chk_fail
_purple_circ_buffer_destroy endp

; ---------------------------------------------------------------------------
unk_AE		db  66h	; f		; DATA XREF: .debug_info:000007F7o
					; .debug_info:0000087Bo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _purple_circ_buffer_append
_purple_circ_buffer_append proc	near	; DATA XREF: .debug_info:00000958o
					; .debug_loc:off_109Fo

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_B1:					; DATA XREF: .debug_loc:000010A3o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_0]
		mov	eax, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_34], eax
		mov	ebp, [esp+4Ch+arg_8]
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], ecx
		xor	ecx, ecx

loc_D3:					; DATA XREF: .debug_info:000009BAo
		test	ebx, ebx
		jz	loc_200

loc_DB:					; DATA XREF: .debug_info:000009BEo
					; .debug_loc:off_11A0o
		mov	edx, [ebx+8]
		mov	esi, [ebx+0Ch]
		mov	eax, edx
		sub	eax, esi
		cmp	eax, ebp
		jb	short loc_150

loc_E9:					; CODE XREF: _purple_circ_buffer_append+102j
					; _purple_circ_buffer_append+10Dj
		mov	edx, [ebx+10h]

loc_EC:					; CODE XREF: _purple_circ_buffer_append+148j
					; _purple_circ_buffer_append+1C0j
		cmp	[ebx+14h], edx
		ja	short loc_124
		mov	eax, [ebx]
		sub	eax, edx
		add	eax, [ebx+8]
		cmp	eax, ebp
		ja	short loc_124

loc_FC:					; DATA XREF: .debug_loc:off_1182o
		test	eax, eax
		jnz	short loc_12A

loc_100:				; CODE XREF: _purple_circ_buffer_append+78j
		cmp	eax, ebp
		jb	short loc_138

loc_104:				; CODE XREF: _purple_circ_buffer_append+86j
		add	[ebx+10h], eax

loc_107:				; CODE XREF: _purple_circ_buffer_append+9Dj
		add	[ebx+0Ch], ebp
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard

loc_114:				; DATA XREF: .debug_loc:00001186o
		jnz	loc_275
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_124:				; CODE XREF: _purple_circ_buffer_append+3Fj
					; _purple_circ_buffer_append+4Aj
		mov	eax, ebp
		test	eax, eax
		jz	short loc_100

loc_12A:				; CODE XREF: _purple_circ_buffer_append+4Ej
		mov	edi, edx
		mov	esi, [esp+4Ch+var_34]
		mov	ecx, eax
		rep movsb
		cmp	eax, ebp
		jnb	short loc_104

loc_138:				; CODE XREF: _purple_circ_buffer_append+52j
		mov	edx, ebp
		sub	edx, eax
		mov	esi, [esp+4Ch+var_34]
		add	esi, eax

loc_142:				; DATA XREF: .debug_info:00000525o
					; .debug_info:00000545o ...
		mov	edi, [ebx]
		mov	ecx, edx
		rep movsb
		add	edx, [ebx]
		mov	[ebx+10h], edx
		jmp	short loc_107
; ---------------------------------------------------------------------------
		align 10h

loc_150:				; CODE XREF: _purple_circ_buffer_append+37j
		mov	edi, [ebx+4]
		mov	eax, edx
		lea	esi, [esi+0]

loc_158:				; CODE XREF: _purple_circ_buffer_append+B0j
					; DATA XREF: .debug_info:000009DBo ...
		add	eax, edi
		mov	ecx, eax
		sub	ecx, esi
		cmp	ebp, ecx
		ja	short loc_158
		mov	[ebx+8], eax
		mov	esi, [ebx+10h]
		test	esi, esi
		jz	loc_23C
		mov	ecx, [ebx]
		sub	esi, ecx
		mov	[esp+4Ch+var_38], esi

loc_178:				; DATA XREF: .debug_loc:off_11CCo
		mov	esi, [ebx+14h]

loc_17B:				; DATA XREF: .debug_loc:000011D0o
		sub	esi, ecx

loc_17D:				; CODE XREF: _purple_circ_buffer_append+198j
					; DATA XREF: .debug_loc:off_1203o
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ecx
		mov	[esp+4Ch+var_3C], edx
		call	_g_realloc

loc_18D:				; DATA XREF: .debug_info:00000A39o
		mov	[ebx], eax
		mov	edx, [ebx+10h]
		test	edx, edx

loc_194:				; DATA XREF: .debug_info:00000A61o
					; .debug_info:00000B3Co
		mov	edx, [esp+4Ch+var_3C]
		jz	loc_230
		mov	ecx, [esp+4Ch+var_38]
		add	ecx, eax
		mov	[ebx+10h], ecx
		add	eax, esi
		mov	[ebx+14h], eax

loc_1AC:				; CODE XREF: _purple_circ_buffer_append+186j
		cmp	[esp+4Ch+var_38], esi

loc_1B0:				; DATA XREF: .debug_line:000013DAo
		jb	short loc_1C3
		jnz	loc_E9
		mov	eax, [ebx+0Ch]
		test	eax, eax
		jz	loc_E9

loc_1C3:				; CODE XREF: _purple_circ_buffer_append:loc_1B0j
					; DATA XREF: .debug_ranges:off_13BCo
		mov	eax, [ebx+8]
		sub	eax, edx

loc_1C8:				; DATA XREF: .eh_frame:000016E4o
		mov	ecx, [esp+4Ch+var_38]
		mov	[esp+4Ch+var_30], ecx
		cmp	ecx, eax
		jbe	short loc_1D8
		mov	[esp+4Ch+var_30], eax

loc_1D8:				; CODE XREF: _purple_circ_buffer_append+122j
					; DATA XREF: .debug_loc:off_1221o
		mov	esi, [ebx]

loc_1DA:				; DATA XREF: .debug_loc:00001207o
		lea	eax, [esi+edx]
		mov	edi, eax
		mov	ecx, [esp+4Ch+var_30]
		rep movsb
		mov	ecx, [esp+4Ch+var_30]
		cmp	[esp+4Ch+var_38], ecx
		ja	short loc_24D
		add	edx, [esp+4Ch+var_38]

loc_1F3:				; DATA XREF: .debug_info:000006FDo
					; .debug_info:00000720o
		add	edx, [ebx]
		mov	[ebx+10h], edx
		jmp	loc_EC
; ---------------------------------------------------------------------------
unk_1FD		db  8Dh	; ç		; DATA XREF: .debug_loc:000011A4o
					; .debug_loc:00001225o
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_200:				; CODE XREF: _purple_circ_buffer_append+25j
					; DATA XREF: .debug_ranges:00001390o ...
		mov	ecx, [esp+4Ch+var_20]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_275
		mov	[esp+4Ch+arg_8], offset	aBufNull ; "buf	!= NULL"
		mov	[esp+4Ch+arg_4], offset	___PRETTY_FUNCTION___43308 ; "purple_circ_buffer_append"
		mov	[esp+4Ch+arg_0], 0
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	_g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_230:				; CODE XREF: _purple_circ_buffer_append+E8j
					; DATA XREF: .debug_info:00000A44o ...
		mov	[ebx+14h], eax
		mov	[ebx+10h], eax
		jmp	loc_1AC
; ---------------------------------------------------------------------------
		align 4

loc_23C:				; CODE XREF: _purple_circ_buffer_append+BAj
		xor	esi, esi
		mov	[esp+4Ch+var_38], 0
		mov	ecx, [ebx]
		jmp	loc_17D
; ---------------------------------------------------------------------------

loc_24D:				; CODE XREF: _purple_circ_buffer_append+13Dj
					; DATA XREF: .debug_ranges:000013C4o
		mov	esi, [esp+4Ch+var_38]
		sub	esi, ecx

loc_253:				; DATA XREF: .debug_line:off_13D4o
		mov	eax, [ebx]
		mov	[esp+4Ch+var_44], esi ;	size_t
		mov	edx, ecx
		add	edx, eax

loc_25D:				; DATA XREF: .debug_info:00000730o
					; .debug_info:00000741o
		mov	[esp+4Ch+var_48], edx ;	void *
		mov	[esp+4Ch+var_4C], eax ;	void *
		call	_memmove

loc_269:				; DATA XREF: .debug_info:00000A27o
		mov	edx, [ebx]
		add	edx, esi
		mov	[ebx+10h], edx
		jmp	loc_EC
; ---------------------------------------------------------------------------

loc_275:				; CODE XREF: _purple_circ_buffer_append:loc_114j
					; _purple_circ_buffer_append+15Aj
					; DATA XREF: ...
		call	___stack_chk_fail
_purple_circ_buffer_append endp

; ---------------------------------------------------------------------------
unk_27A		db  66h	; f		; DATA XREF: .debug_info:0000095Co
					; .debug_info:00000A4Eo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _purple_circ_buffer_get_max_read
_purple_circ_buffer_get_max_read proc near ; CODE XREF:	_purple_circ_buffer_mark_read+1Fp
					; DATA XREF: .debug_info:00000A95o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_27F:				; DATA XREF: .debug_loc:00001245o
		mov	edx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_28E:				; DATA XREF: .debug_info:00000AD9o
		test	edx, edx
		jz	short loc_2C0

loc_292:				; DATA XREF: .debug_info:00000ADDo
					; .debug_loc:off_128Co
		mov	ecx, [edx+0Ch]
		test	ecx, ecx
		jz	short loc_2BC
		mov	ecx, [edx+14h]
		mov	eax, [edx+10h]
		cmp	ecx, eax
		js	short loc_2E0
		mov	eax, [edx]
		sub	eax, ecx
		add	eax, [edx+8]

loc_2AA:				; CODE XREF: _purple_circ_buffer_get_max_read+42j
					; _purple_circ_buffer_get_max_read+62j	...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_2E4
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_2BC:				; CODE XREF: _purple_circ_buffer_get_max_read+1Bj
		xor	eax, eax
		jmp	short loc_2AA
; ---------------------------------------------------------------------------

loc_2C0:				; CODE XREF: _purple_circ_buffer_get_max_read+14j
		mov	[esp+2Ch+var_24], offset aBufNull ; "buf != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___43315 ; "purple_circ_buffer_get_max_read"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_2DC:				; DATA XREF: .debug_info:00000AF6o
		xor	eax, eax
		jmp	short loc_2AA
; ---------------------------------------------------------------------------

loc_2E0:				; CODE XREF: _purple_circ_buffer_get_max_read+25j
		sub	eax, ecx

loc_2E2:				; DATA XREF: .debug_loc:off_1279o
		jmp	short loc_2AA
; ---------------------------------------------------------------------------

loc_2E4:				; CODE XREF: _purple_circ_buffer_get_max_read+38j
					; DATA XREF: .debug_loc:0000127Do
		call	___stack_chk_fail
_purple_circ_buffer_get_max_read endp

; ---------------------------------------------------------------------------
unk_2E9		db  8Dh	; ç		; DATA XREF: .debug_info:00000A99o
					; .debug_info:00000B1Eo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_circ_buffer_mark_read
_purple_circ_buffer_mark_read proc near	; DATA XREF: .debug_info:00000B6Do
					; .debug_loc:off_12C4o

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_2ED:				; DATA XREF: .debug_loc:000012C8o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_304:				; DATA XREF: .debug_info:00000BABo
		test	ebx, ebx
		jz	short loc_364

loc_308:				; DATA XREF: .debug_info:00000BAFo
					; .debug_info:00000BC8o ...
		mov	[esp+2Ch+var_2C], ebx
		call	_purple_circ_buffer_get_max_read

loc_310:				; DATA XREF: .debug_info:00000BE4o
		cmp	eax, esi
		jb	short loc_334

loc_314:				; DATA XREF: .debug_info:00000BCCo
					; .debug_loc:off_134Co
		mov	eax, [ebx+14h]
		add	eax, esi
		mov	[ebx+14h], eax
		sub	[ebx+0Ch], esi
		mov	edx, [ebx]
		sub	eax, edx
		cmp	eax, [ebx+8]
		jnz	short loc_32B
		mov	[ebx+14h], edx

loc_32B:				; CODE XREF: _purple_circ_buffer_mark_read+3Aj
		mov	eax, 1
		jmp	short loc_352
; ---------------------------------------------------------------------------
unk_332		db  66h	; f		; DATA XREF: .debug_loc:00001350o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_334:				; CODE XREF: _purple_circ_buffer_mark_read+26j
		mov	[esp+2Ch+var_24], offset aPurple_circ_bu ; "purple_circ_buffer_get_max_read(buf) >="...
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___43322 ; "purple_circ_buffer_mark_read"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_350:				; DATA XREF: .debug_info:00000BF6o
		xor	eax, eax

loc_352:				; CODE XREF: _purple_circ_buffer_mark_read+44j
					; _purple_circ_buffer_mark_read+96j
					; DATA XREF: ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_384
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_364:				; CODE XREF: _purple_circ_buffer_mark_read+1Aj
		mov	[esp+2Ch+var_24], offset aBufNull ; "buf != NULL"

loc_36C:				; DATA XREF: .debug_info:000007B8o
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___43322 ; "purple_circ_buffer_mark_read"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_380:				; DATA XREF: .debug_info:00000C1Eo
		xor	eax, eax
		jmp	short loc_352
; ---------------------------------------------------------------------------

loc_384:				; CODE XREF: _purple_circ_buffer_mark_read+70j
		call	___stack_chk_fail
_purple_circ_buffer_mark_read endp

; ---------------------------------------------------------------------------
unk_389		db  90h	; ê		; DATA XREF: .debug_info:000004B5o
					; .debug_info:00000B71o ...
		db  90h	; ê
unk_38B		db  90h	; ê		; DATA XREF: .eh_frame:0000168Co
					; .eh_frame:000016B0o ...
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 394h
aBufNull	db 'buf != NULL',0      ; DATA XREF: _purple_circ_buffer_destroy:loc_7Co
					; _purple_circ_buffer_append+15Co ...
aPurple_circ_bu	db 'purple_circ_buffer_get_max_read(buf) >= len',0
					; DATA XREF: _purple_circ_buffer_mark_read:loc_334o
					; .debug_info:00000C18o
___PRETTY_FUNCTION___43285 db 'purple_circ_buffer_destroy',0
					; DATA XREF: _purple_circ_buffer_destroy+44o
					; .debug_info:0000081Eo ...
___PRETTY_FUNCTION___43308 db 'purple_circ_buffer_append',0
					; DATA XREF: _purple_circ_buffer_append+164o
					; .debug_info:000009B5o ...
		align 4
		dd 4 dup(0)
___PRETTY_FUNCTION___43315 db 'purple_circ_buffer_get_max_read',0
					; DATA XREF: _purple_circ_buffer_get_max_read+4Co
					; .debug_info:00000AD4o ...
___PRETTY_FUNCTION___43322 db 'purple_circ_buffer_mark_read',0
					; DATA XREF: _purple_circ_buffer_mark_read+50o
					; _purple_circ_buffer_mark_read:loc_36Co ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 454h
off_454		dd offset dword_910	; DATA XREF: .debug_aranges:00001372o
		db 2, 0
		dd offset dword_D68
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 72696301h, 66756263h, 2E726566h, 3A430063h, 6F775C5Ch
		dd 70736B72h, 5C656361h, 6469705Ch, 2D6E6967h, 65766564h
		dd 705C5C6Ch, 69676469h, 2E322D6Eh, 312E3031h, 6C5C5C31h
		dd 75706269h, 656C7072h
		db 0
		dd offset _purple_circ_buffer_new
		dd offset unk_389
		dd offset off_13D4
		db 2, 4, 6Fh
		db    0
		db 2 dup(0), 3
		db    1
		db 6, 63h, 68h
		db  61h	; a
		db 72h,	0, 3
		db    2
aShortUnsignedI	db 7,'short unsigned int',0 ; DATA XREF: .debug_info:00000935o
		db 4, 73h, 69h
aZe_t		db 'ze_t',0
		db 3, 0D5h, 9Bh
		db    0
		db 2 dup(0), 3
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 5
a_iobuf		db '_iobuf',0
		db 20h
		db    2
		db 81h,	42h, 1
		db    0
		align 2
		dw 5F06h
		db  70h	; p
		db 74h,	72h, 0
		db    2
		db 83h,	69h, 0
		db    0
		align 2
		dw 2302h
		db    0
		db 6, 5Fh, 63h
		db  6Eh	; n
		db 74h,	0, 2
		db  84h	; Ñ
		dd offset loc_142
		db 2, 23h, 4
		db    6
a_base		db '_base',0
		db 2
		db  85h	; Ö
		dd offset loc_65+4
		db 2, 23h, 8
		db    6
a_flag		db '_flag',0
		db 2
		db  86h	; Ü
		dd offset loc_142
		db 2, 23h, 0Ch
		db    6
a_file		db '_file',0
		db 2
		db  87h	; á
		dd offset loc_142
		db 2, 23h, 10h
		db    6
a_charbuf	db '_charbuf',0
		dw 8802h
		dd offset loc_142
		db    2
		db 23h,	14h, 6
a_bufsiz	db '_bufsiz',0
		db    2
		db 89h,	42h, 1
		db    0
		align 2
		dw 2302h
		db  18h
byte_581	db 6, 5Fh, 74h		; DATA XREF: .debug_info:000009C2o
aMpfname	db 'mpfname',0
		db    2
		db 8Ah,	69h, 0
		db    0
		align 2
		dw 2302h
		db  1Ch
		align 2
		dw 403h
		db    5
		db 69h,	6Eh, 74h
		db    0
		db 4, 46h, 49h
		db  4Ch	; L
		db 45h,	0, 2
		db  8Bh	; ã
		dd offset loc_A9+2
		db 3, 8, 5
aLongLongInt	db 'long long int',0
		dw 403h
		db    5
aLongInt	db 'long int',0
		dw 203h
		db    5
aShortInt	db 'short int',0
		db 3
		db    4
aLongUnsignedIn	db 7,'long unsigned int',0 ; DATA XREF: .debug_info:00000A19o
		db    3
		db 4, 7, 73h
aIzetype	db 'izetype',0
		db    3
		db 8, 4, 64h
aOuble		db 'ouble',0
		dw 0C03h
		db    4
aLongDouble	db 'long double',0      ; DATA XREF: .debug_info:00000A68o
		db 3, 1, 6
aSignedChar	db 'signed char',0      ; DATA XREF: .debug_info:000009AEo
					; .debug_info:00000A5Co ...
		db    3
		db 1, 8, 75h
aNsignedChar	db 'nsigned char',0
		db 3, 8, 7
aLongLongUnsign	db 'long long unsigned int',0
		db 4
aGsize		db 'gsize',0
		dw 5A04h
		dd offset loc_98+3
dword_654	dd 67040407h, 72616863h, 6F2D0500h, 4000000h, 746E6967h
		dd 42300500h, 4000001h,	6F6F6267h, 6E61656Ch, 0F310500h
		dd 3000002h, 6C660404h,	74616Fh, 6F706704h, 65746E69h
		dd 4C050072h, 200h, 6F636704h, 7074736Eh, 746E696Fh, 5007265h
		dd 2594Dh, 5F040200h, 8000002h,	2020402h, 4020000h, 77h
		dd 2720402h, 6F090000h,	5000000h
a_purplecircbuf	db '_PurpleCircBuffer',0 ; DATA XREF: .debug_info:00000B29o
		dw 618h
dword_6E0	dd 2F521h, 75620600h, 72656666h, 60240600h, 2000002h
					; DATA XREF: .debug_info:00000ACDo
		db 23h,	0, 0Ah
		dd offset aGrowsize	; "growsize"
		db 6
		db  28h	; (
		dd offset loc_1F3
		db 2, 23h, 4
		db    6
aBuflen		db 'buflen',0
		db    6
		db 2Bh,	0F3h, 1
		db    0
		align 2
		dw 2302h
		db    8
		db 6, 62h, 75h
aFused		db 'fused',0
		dw 2E06h
		dd offset loc_1F3
		db    2
		db 23h,	0Ch, 6
aInptr		db 'inptr',0
		dw 3206h
		dd offset loc_25D+3
		db    2
		db 23h,	10h, 6
aOutptr		db 'outptr',0
		db 6
		db  36h	; 6
		dd offset loc_25D+3
		db 2, 23h, 14h
		db    0
		db 4, 50h, 75h
aRplecircbuffer	db 'rpleCircBuffer',0
		db 6
		db  38h	; 8
		dd offset loc_275+2
		db 0Bh,	1, 70h
aUrple_circ_buf	db 'urple_circ_buffer_new',0 ; DATA XREF: .debug_info:00000BB3o
		dw 1F01h
		dd 37901h
		db 0
		dd offset _purple_circ_buffer_new
		dd offset _purple_circ_buffer_destroy
		dd offset dword_FA8
		db 1, 79h, 3
		db 2 dup(0), 0Ch
		dd offset aGrowsize	; "growsize"
		db 1
dword_798	dd 1F31Fh, 910200h, 6675620Dh, 79200100h ; DATA	XREF: .debug_info:00000BD0o
		db 3, 2	dup(0)
		dd offset dword_FF8
		db 0Eh
		dd offset loc_1F
		dd offset byte_850
		dd offset loc_36C+3
		dd 74020Fh, 10004801h
		dd offset _purple_circ_buffer_destroy
off_7C8		dd offset off_86B+3	; DATA XREF: .debug_info:00000BFEo
		db    0
		db 2, 4, 0F5h
		db    2
		db 2 dup(0), 11h
		db    1
aPurple_circ__0	db 'purple_circ_buffer_destroy',0
byte_7F0	db 1, 25h, 1		; DATA XREF: .debug_info:00000C26o
		dd offset _purple_circ_buffer_destroy
		dd offset unk_AE
		dd offset off_100B
		db 1
		dd offset ___PRETTY_FUNCTION___43315+1Ch ; "ead"
dword_804	dd 66756212h, 79250100h, 2000003h ; DATA XREF: .debug_info:00000B9Fo
					; .debug_info:00000C54o
		db 91h,	0, 13h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset ___PRETTY_FUNCTION___43322+0Ch ; "buffer_mark_read"
		db 1
		db 5, 3
		dd offset ___PRETTY_FUNCTION___43285 ; "purple_circ_buffer_destroy"
		db 14h
		dd offset loc_53
		dd offset loc_57
		dd offset ___PRETTY_FUNCTION___43308+4 ; "le_circ_buffer_append"
		db 15h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dd 1422601h
		db 2 dup(0)
		dd offset off_107F
		dw 1000h
		dd offset loc_61
		dd offset dword_884
		db 16h
		dd offset unk_7A
		db 1, 84h, 8
byte_850	db 2 dup(0), 0Eh	; DATA XREF: .debug_info:000007B4o
		dd offset loc_98
		dd offset off_89A+1
		dd offset ___PRETTY_FUNCTION___43315+12h ; "_get_max_read"
		db 0Fh
		dd 1007402h, 74020F30h
		db 4, 5, 3
off_86B		dd offset ___PRETTY_FUNCTION___43285 ; DATA XREF: .debug_info:off_7C8o
					; .debug_info:0000087Fo ...
					; "purple_circ_buffer_destroy"
		db 0Fh
		dd 5087402h
		db 3
		dd offset aBufNull	; "buf != NULL"
		align 2
		db 10h
		dd offset unk_AE
		dd offset off_86B+3
		align 4
dword_884	dd 6F17h, 44000h, 1941800h, 1A0000h, 43009h
					; DATA XREF: .debug_info:00000844o
		db 0, 19h
off_89A		dd offset aGrow_circ_buff ; DATA XREF: .debug_info:00000857o
					; .debug_info:00000AFAo ...
					; "grow_circ_buffer"
		dw 2C01h
dword_8A0	dd 4D00101h, 621A0000h,	1006675h, 3792Ch, 656C1A00h, 2C01006Eh
		dd 1F3h, 5F6E691Bh, 7366666Fh, 1007465h, 1F32Dh, 756F1B00h
		dd 666F5F74h, 74657366h, 0F32D0100h, 1B000001h,	72617473h
		dd 75625F74h, 6E656C66h, 0F32E0100h, 1C000001h
off_8F4		dd offset a__pretty_funct ; DATA XREF: .debug_info:00000A3Do
					; "__PRETTY_FUNCTION__"
		dd offset aShortUnsignedI+13h ;	""
		db 1
		dd offset aGrow_circ_buff ; "grow_circ_buffer"
		db 1Dh,	0BEh, 4
		db 2 dup(0), 1Eh
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 14230h
dword_910	dd 1B1F0000h, 66696873h, 6E5F74h, 1F34901h, 0
					; DATA XREF: .debug_info:off_454o
		db  17h
		dd offset loc_6D+2
		dd offset aShortUnsignedI+13h ;	""
		db 18h,	94h, 1
		db    0
		align 2
		dw 10h
		db    9
		dd offset aShortUnsignedI+3 ; "ort unsigned int"
		db 11h,	1, 70h
aUrple_circ_b_0	db 'urple_circ_buffer_append',0
		db 1, 5Bh, 1
		dd offset _purple_circ_buffer_append
		dd offset unk_27A
		dd offset off_109F
		dd 60301h, 75621200h, 5B010066h, 379h, 12009102h, 637273h
		dd 2445B01h, 91020000h,	656C1204h, 5B01006Eh, 1F3h, 0D089102h
		dd 5F6E656Ch, 726F7473h, 1006465h, 1F35Dh
		db 0
		dd offset off_1182
		db 13h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aSignedChar+3	; "ned char"
		dw 501h
		db 3
		dd offset ___PRETTY_FUNCTION___43308 ; "purple_circ_buffer_append"
		db 14h
		dd offset loc_D3
		dd offset loc_DB
		dd offset byte_581+1
		db 15h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 1425Fh
		db 0
		dd offset off_11A0
		align 2
		dw 4520h
		db 4, 2	dup(0)
		dd offset loc_158
		dd offset off_138C
		db 1
		dd 5EF63h, 45D2100h, 52210000h,	22000004h
		dd offset off_13A4
		dd 46823h
		db 0
		dd offset off_11CC
		db 23h,	79h, 4
		db 2 dup(0)
		dd offset off_1203
		dw 8B24h
		dd 24000004h, 49Fh
		db 25h
		dd offset off_13BC
		dd offset aLongUnsignedIn+0Fh ;	"int"
		db 23h,	0BFh, 4
		db 2 dup(0)
		dd offset off_1221
		db 26h
		dd offset loc_269
		dd offset dword_8A0+2Eh
		db 0Fh
		dd 2087402h, 76h
		db 10h
		dd offset loc_18D
		dd offset off_8F4
		db 2 dup(0), 16h
		dd offset loc_230
		dd 89B01h
		db 0, 10h
		dd offset unk_27A
		dd offset off_86B+3
		dw 1700h
		dd offset loc_6D+2
		dd offset aSignedChar+3	; "ned char"
		db  18h
		dd offset loc_194
		db 19h,	0, 9
		dd offset aLongDouble+2	; "ng double"
		db  0Bh
		db 1, 70h, 75h
aRple_circ_buff	db 'rple_circ_buffer_get_max_read',0
		dw 7B01h
		dd 1F301h
		db 0
		dd offset _purple_circ_buffer_get_max_read
		dd offset unk_2E9
		dd offset off_1241
		db 1, 0D3h, 6
		dd 62120000h, 1006675h,	6D37Bh,	910200h, 78616D0Dh, 6165725Fh
		dd 7C010064h, 1F3h
		dd offset off_1279
		db 13h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset dword_6E0+0Eh
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___43315 ; "purple_circ_buffer_get_max_read"
		db 14h
		dd offset loc_28E
		dd offset loc_292
		dd offset dword_654+4Dh
		db 15h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 7E01h
		dd offset loc_142
		dd offset off_128C
		db 0, 0Eh
		dd offset loc_2DC
		dd offset off_89A+1
		dd offset dword_654+75h
		dw 20Fh
		dd 30010074h, 474020Fh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___43315 ; "purple_circ_buffer_get_max_read"
		dw 20Fh
		dd 3050874h
		dd offset aBufNull	; "buf != NULL"
		db 0, 10h
		dd offset unk_2E9
		dd offset off_86B+3
		dw 200h
		db    4
		dd offset a_purplecircbuf+0Dh ;	"ffer"
		db 9, 0F5h, 2
		db    0
		align 2
		dw 6F17h
		db    0
		db 2 dup(0), 0EEh
		db    6
		db 2 dup(0), 18h
		dd offset loc_194
		db  1Fh
		align 2
		dw 0DE09h
		db    6
		db 2 dup(0), 0Bh
		db    1
aPurple_circ__1	db 'purple_circ_buffer_mark_read',0
		dw 8A01h
		dd 21B01h
		db 0
		dd offset _purple_circ_buffer_mark_read
		dd offset unk_389
		dd offset off_12C4
		db 1, 0FBh, 7
		dd 62120000h, 1006675h,	3798Ah,	910200h, 6E656C12h, 0F38A0100h
		dd 2000001h
		db 91h,	4, 13h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset dword_804+7
		db 1
		db 5, 3
		dd offset ___PRETTY_FUNCTION___43322 ; "purple_circ_buffer_mark_read"
		db 14h
		dd offset loc_304
		dd offset loc_308
		dd offset aUrple_circ_buf+0Fh ;	"er_new"
		db 15h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dd 1428B01h
		db 2 dup(0)
		dd offset off_132C
		dw 1400h
		dd offset loc_308
		dd offset loc_314
		dd offset dword_798+9
		db 15h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 8Ch, 42h
		db 1, 2	dup(0)
		dd offset off_134C
		db 26h
		dd offset loc_310
		dd offset aSignedChar+8	; "har"
		dd 74020Fh, 7302h
		db 0, 0Eh
		dd offset loc_350
		dd offset off_89A+1
		dd offset off_7C8+1
		dw 20Fh
		dd 30010074h, 474020Fh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___43322 ; "purple_circ_buffer_mark_read"
		dw 20Fh
		dd 3050874h
		dd offset aPurple_circ_bu ; "purple_circ_buffer_get_max_read(buf) >="...
		db 0, 0Eh
		dd offset loc_380
		dd offset off_89A+1
		dd offset byte_7F0+1
		dw 20Fh
		dd 30010074h, 474020Fh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___43322 ; "purple_circ_buffer_mark_read"
		dw 20Fh
		dd 3050874h
		dd offset aBufNull	; "buf != NULL"
		db 0, 10h
		dd offset unk_389
		dd offset off_86B+3
		dw 1700h
		dd offset loc_6D+2
		dd offset dword_804+7
		dd 19418h, 9001C00h, 7FBh, 14917h, 81B00h, 28002700h, 626F695Fh
		dd 109A0200h, 1000008h,	5F5F2801h, 635F626Dh, 6D5F7275h
		dd 7007861h, 1425Ch, 28010100h,	7463705Fh, 657079h, 2667307h
		dd 1010000h, 5F670129h,	6C6C616Dh, 30636Fh, 34013408h
		dd 1000002h, 86Eh, 1F32Ah, 12B0000h, 74735F5Fh,	5F6B6361h
		dd 5F6B6863h, 6C696166h, 1010100h, 5F67012Ch, 65657266h
		dd 1370800h, 89B01h, 2342A00h, 2C000000h, 725F6701h, 72757465h
		dd 66695F6Eh, 6961665Fh, 61775F6Ch, 6E696E72h, 74090067h
		dd 8CE0101h, 6C2A0000h,	2A000002h, 26Ch, 26C2Ah, 1290000h
		dd 6D6D656Dh, 65766Fh, 1270Ah, 1000002h, 8F4h, 2002Ah
		dd 2592A00h, 8D2A0000h,	0
		dd 5F67012Dh, 6C616572h, 636F6Ch, 34013508h, 1000002h
		dd 2342Ah, 1F32A00h, 0
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 0D68h
dword_D68	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000045Ao
		dd 0B0B000Fh, 1349h, 0B002403h,	30B3E0Bh, 4000008h, 8030016h
		dd 0B3B0B3Ah, 1349h, 3011305h, 3A0B0B08h, 10B3B0Bh, 6000013h
		dd 803000Dh, 0B3B0B3Ah,	0A381349h, 0F070000h, 0B0B00h
		dd 260800h, 26090000h, 134900h,	0D0A00h, 0B3A0E03h, 13490B3Bh
		dd 0A38h, 3F012E0Bh, 3A08030Ch,	270B3B0Bh, 1113490Ch, 40011201h
		dd 0C429706h, 1301h, 300050Ch, 3B0B3A0Eh, 213490Bh, 0D00000Ah
		dd 8030034h, 0B3B0B3Ah,	6021349h, 890E0000h, 11010182h
		dd 1133101h, 0F000013h,	1828Ah,	42910A02h, 1000000Ah, 18289h
		dd 13310111h, 2E110000h, 30C3F01h, 3B0B3A08h, 110C270Bh
		dd 40011201h, 0C429706h, 1301h,	3000512h, 3B0B3A08h, 213490Bh
		dd 1300000Ah, 0E030034h, 0C341349h, 0A02h, 11010B14h, 1011201h
		dd 15000013h, 0E030034h, 0B3B0B3Ah, 6021349h, 89160000h
		dd 11000182h, 0C429501h, 1331h,	49010117h, 130113h, 211800h
		dd 0B2F1349h, 2E190000h, 3A0E0301h, 270B3B0Bh, 10B200Ch
		dd 1A000013h, 8030005h,	0B3B0B3Ah, 1349h, 300341Bh, 3B0B3A08h
		dd 13490Bh, 341C00h, 13490E03h,	0E1C0C34h, 0B1D0000h, 130101h
		dd 341E00h, 0B3A0E03h, 13490B3Bh, 0B1F0000h, 20000001h
		dd 1331011Dh, 6550152h,	0B590B58h, 1301h, 31000521h, 22000013h
		dd 655010Bh, 34230000h,	2133100h, 24000006h, 13310034h
		dd 0B250000h, 1065501h,	26000013h, 1018289h, 13310111h
		dd 21270000h, 28000000h, 8030034h, 0B3B0B3Ah, 0C3F1349h
		dd 0C3Ch, 3F012E29h, 3A08030Ch,	270B3B0Bh, 3C13490Ch, 13010Ch
		dd 52A00h, 1349h, 3F002E2Bh, 2708030Ch,	3C0C340Ch, 2C00000Ch
		dd 0C3F012Eh, 0B3A0803h, 0C270B3Bh, 13010C3Ch, 2E2D0000h
		dd 30C3F01h, 3B0B3A08h,	490C270Bh, 0C3C13h
		db 2 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 0FA8h
dword_FA8	dd 0			; DATA XREF: .debug_info:00000789o
		dd 1, 4740002h,	1, 4, 8740002h,	4, 39h,	30740002h, 39h
		dd 3Ah,	8740002h, 3Ah, 3Bh, 4740002h, 3Bh, 40h,	30740002h
		dd 2 dup(0)
dword_FF8	dd 1Fh,	3Fh, 500001h, 0	; DATA XREF: .debug_info:000007ABo
		db 3 dup(0)
off_100B	dd offset _purple_circ_buffer_destroy ;	DATA XREF: .debug_info:000007FBo
		dd offset loc_41
		db 2
		dd 41047400h, 44000000h, 2000000h, 44087400h, 74000000h
		dd 2000000h, 74307400h,	75000000h, 2000000h, 75087400h
		dd 7C000000h, 2000000h,	7C047400h, 0A7000000h, 2000000h
		dd 0A7307400h, 0A8000000h, 2000000h, 0A8087400h, 0A9000000h
		dd 2000000h, 0A9047400h, 0AE000000h, 2000000h, 307400h
		dd 0
		db 3 dup(0)
off_107F	dd offset loc_57	; DATA XREF: .debug_info:0000083Ao
		dd offset unk_7A
		db 2
		dd 7A9F3100h, 0A9000000h, 2000000h, 9F3000h, 0
		db 3 dup(0)
off_109F	dd offset _purple_circ_buffer_append ; DATA XREF: .debug_info:00000960o
		dd offset loc_B1
		db 2
		dd 0B1047400h, 0B2000000h, 2000000h, 0B2087400h, 0B3000000h
		dd 2000000h, 0B30C7400h, 0B4000000h, 2000000h, 0B4107400h
		dd 0B7000000h, 2000000h, 0B7147400h, 1D000000h,	3000001h
		dd 0D07400h, 11Dh, 11Eh, 14740002h, 11Eh, 11Fh,	10740002h
		dd 11Fh, 120h, 0C740002h, 120h,	121h, 8740002h,	121h, 124h
		dd 4740002h, 124h, 227h, 0D0740003h, 22700h, 22800h, 74000200h
		dd 22814h, 22900h, 74000200h, 22910h, 22A00h, 74000200h
		dd 22A0Ch, 22B00h, 74000200h, 22B08h, 23000h, 74000200h
		dd 23004h, 27A00h, 74000300h, 0D0h, 0
		db 2 dup(0)
off_1182	dd offset loc_FC	; DATA XREF: .debug_info:000009A5o
		dd offset loc_114
		dw 1
		dd 12650h, 14F00h, 50000100h, 2	dup(0)
off_11A0	dd offset loc_DB	; DATA XREF: .debug_info:000009D1o
		dd offset unk_1FD
		dd 9F310002h, 1FDh, 230h, 9F300002h, 230h, 275h, 9F310002h
		dd 2 dup(0)
off_11CC	dd offset loc_178	; DATA XREF: .debug_info:000009FDo
		dd offset loc_17B
		dd 7B560001h, 0FD000001h, 2000001h, 30449100h, 3B000002h
		dd 2000002h, 4D449100h,	75000002h, 2000002h, 449100h, 0
		db 3 dup(0)
off_1203	dd offset loc_17D	; DATA XREF: .debug_info:00000A06o
		dd offset loc_1DA
		db 1
		dd 2305600h, 23B0000h, 10000h, 56h, 0
		db 0
off_1221	dd offset loc_1D8	; DATA XREF: .debug_info:00000A22o
		dd offset unk_1FD
		db 2, 0, 91h
		dd 24D4Ch, 27500h, 91000200h, 4Ch, 0
		db 0
off_1241	dd offset _purple_circ_buffer_get_max_read
					; DATA XREF: .debug_info:00000A9Do
		dd offset loc_27F
		db 2, 0, 74h
		dd 27F04h, 2B900h, 74000200h, 2B930h, 2BC00h, 74000200h
		dd 2BC04h, 2E900h, 74000200h, 30h, 0
		db 0
off_1279	dd offset loc_2E2	; DATA XREF: .debug_info:00000AC4o
		dd offset loc_2E4
		db 1, 0, 50h
		dd 2 dup(0)
off_128C	dd offset loc_292	; DATA XREF: .debug_info:00000AF0o
		dd offset loc_2AA
		dd 9F310002h, 2BAh, 2C0h, 9F310002h, 2C0h, 2E0h, 9F300002h
		dd 2E0h, 2E4h, 9F310002h, 2 dup(0)
off_12C4	dd offset _purple_circ_buffer_mark_read	; DATA XREF: .debug_info:00000B75o
		dd offset loc_2ED
		dd 4740002h, 2EDh, 2EEh, 8740002h, 2EEh, 2F1h, 0C740002h
		dd 2F1h, 361h, 30740002h, 361h,	362h, 0C740002h, 362h
		dd 363h, 8740002h, 363h, 364h, 4740002h, 364h, 389h, 30740002h
		dd 2 dup(0)
off_132C	dd offset loc_308	; DATA XREF: .debug_info:00000BC2o
		dd offset loc_352
		dd 9F310002h, 364h, 384h, 9F300002h, 2 dup(0)
off_134C	dd offset loc_314	; DATA XREF: .debug_info:00000BDFo
		dd offset unk_332
		dd 9F310002h, 332h, 352h, 9F300002h, 2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 136Ch
		dd 1Ch
		db 2, 0
		dd offset off_454
		dw 4
		dd 0
		dd offset _purple_circ_buffer_new
		dd offset unk_389
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 138Ch
off_138C	dd offset loc_158	; DATA XREF: .debug_info:000009DFo
		dd offset loc_200
		dd offset loc_230
		dd offset loc_275
		dd 2 dup(0)
off_13A4	dd offset loc_158	; DATA XREF: .debug_info:000009F4o
		dd offset loc_200
		dd offset loc_230
		dd offset loc_275
		dd 2 dup(0)
off_13BC	dd offset loc_1C3	; DATA XREF: .debug_info:00000A15o
		dd offset loc_200
		dd offset loc_24D
		dd offset loc_275
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 13D4h
off_13D4	dd offset loc_253+1	; DATA XREF: .debug_info:000004B9o
		db    2
		align 2
		dd offset loc_1B0+1
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/../../../../include',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
		dw 6300h
aIrcbuffer_c	db 'ircbuffer.c',0
		dd 73000000h, 6F696474h, 100682Eh, 74730000h, 66656464h
		dd 200682Eh, 6C670000h,	6F636269h, 6769666Eh, 300682Eh
		dd 74670000h, 73657079h, 400682Eh, 69630000h, 75626372h
		dd 72656666h, 682Eh, 74630000h,	2E657079h, 10068h, 656D6700h
		dd 682E6Dh, 67000004h, 7373656Dh, 73656761h, 400682Eh
		dd 74730000h, 676E6972h, 100682Eh, 0
		db 5, 2
		dd offset _purple_circ_buffer_new
		dw 1E03h
		dd 0BBAD8201h, 3040200h, 2008206h, 3E060304h, 0A006BA06h
		dd 9F4CAD82h, 87149F3h,	83103B0h, 0BE660874h, 59190885h
		dd 3F4E4DB0h, 870033Dh,	0A04B3390h, 4103F34Bh, 0AF2D59ACh
		dd 85A83ADh, 5D91E723h,	8130867h, 65A6CC4Bh, 3AC0A03h
		dd 124021Ah, 3746603h, 6E035860h, 82203BAh, 82D6712h, 0BA27033Fh
		dd 4CAF7476h, 3799F76h,	47200879h, 844DEB08h, 0BC4BADC8h
		dd 3E913E83h, 3907803h,	3C80809h, 3200876h, 2E4080Ah, 1010005h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 162Ch
a_g_boolean_var	db '_g_boolean_var_',0  ; DATA XREF: .debug_info:00000830o
					; .debug_info:00000907o ...
aGrowsize	db 'growsize',0         ; DATA XREF: .debug_info:000006F7o
					; .debug_info:00000793o
aGrow_circ_buff	db 'grow_circ_buffer',0 ; DATA XREF: .debug_info:off_89Ao
					; .debug_info:000008FDo
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00000813o
					; .debug_info:off_8F4o	...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 166Ch
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch
		dd offset unk_38B-1A17h
		dd offset _purple_circ_buffer_destroy
		dd 80E4100h, 0E430283h,	0E0A7530h, 0EC34108h, 0B4104h
		dd 2Ch,	40h
		dd offset unk_38B-19FBh
		dd offset loc_6D+1
		dd 80E4100h, 0E430283h,	0E0A7030h, 0EC34108h, 6B0B4704h
		dd 41080E0Ah, 41040EC3h, 0Bh, 54h, 70h
		dd offset unk_38B-19BBh
		dd offset loc_1C8+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A6602h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 30B4304h,	0E0A0103h, 0EC34114h, 0EC64110h
		dd 0EC7410Ch, 0EC54108h, 0B4504h, 18h, 0C8h
		dd offset unk_38B-1847h
		dd offset loc_6D
		dd 300E4300h, 40E0A7Ah,	0B43h, 2Ch, 0E4h
		dd offset unk_38B-17F3h
		dd offset loc_9C+1
		dd 80E4100h, 0E410286h,	4303830Ch, 7002300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _purple_circ_buffer_new+8r
					; _purple_circ_buffer_new+2Er ...
		extrn _g_malloc0:near	; CODE XREF: _purple_circ_buffer_new+1Ap
		extrn ___stack_chk_fail:near ; CODE XREF: _purple_circ_buffer_new:loc_3Bp
					; _purple_circ_buffer_destroy:loc_A9p ...
		extrn _g_free:near	; CODE XREF: _purple_circ_buffer_destroy+1Cp
					; _purple_circ_buffer_destroy+35j
		extrn _g_return_if_fail_warning:near
					; CODE XREF: _purple_circ_buffer_destroy+53p
					; _purple_circ_buffer_append+17Bj ...
		extrn _g_realloc:near	; CODE XREF: _purple_circ_buffer_append+D8p
; void *__cdecl	memmove(void *,	const void *, size_t)
		extrn _memmove:near	; CODE XREF: _purple_circ_buffer_append+1B4p


		end

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C13F486D505CB511DE29823425B076F9
; Input	CRC32 :	54ABE243

; File Name   :	d:\pidgin-o\des.o
; Format      :	COFF (X386MAGIC)

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_des_key_schedule proc near		; CODE XREF: _des3_set_key:loc_E33p
					; _des3_set_key+35p ...

var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	esi, edx
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], edx
		xor	edx, edx
		movzx	ecx, byte ptr [eax]
		shl	ecx, 18h
		movzx	edx, byte ptr [eax+1]
		shl	edx, 10h
		or	ecx, edx
		movzx	edx, byte ptr [eax+3]

loc_28:					; DATA XREF: .eh_frame:00007AB4o
					; .eh_frame:00007AD0o
		or	ecx, edx
		movzx	edx, byte ptr [eax+2]
		shl	edx, 8

loc_31:					; DATA XREF: .eh_frame:00007854o
		or	ecx, edx

loc_33:					; DATA XREF: .debug_loc:off_45F8o
		movzx	edx, byte ptr [eax+4]

loc_37:					; DATA XREF: .eh_frame:00007870o
		shl	edx, 18h
		movzx	ebx, byte ptr [eax+5]
		shl	ebx, 10h

loc_41:					; DATA XREF: .eh_frame:000079BCo
					; .eh_frame:000079E0o
		or	edx, ebx

loc_43:					; DATA XREF: .eh_frame:00007974o
					; .eh_frame:00007998o
		movzx	ebx, byte ptr [eax+7]
		or	edx, ebx
		movzx	eax, byte ptr [eax+6]
		shl	eax, 8

loc_50:					; DATA XREF: .debug_loc:00006324o
		or	edx, eax

loc_52:					; DATA XREF: .debug_loc:off_480Eo
		mov	eax, edx

loc_54:					; DATA XREF: .debug_loc:00006FDCo
		shr	eax, 4
		xor	eax, ecx
		and	eax, 0F0F0F0Fh

loc_5E:					; DATA XREF: .debug_loc:off_4A33o
		xor	ecx, eax
		shl	eax, 4

loc_63:					; DATA XREF: .debug_loc:00004A37o
		xor	eax, edx

loc_65:					; DATA XREF: .debug_loc:00004812o
					; .eh_frame:000078C4o
		mov	edx, eax
		xor	edx, ecx

loc_69:					; DATA XREF: .debug_info:0000320Co
					; .debug_info:000034F4o
		and	edx, 10101010h
		xor	ecx, edx
		xor	eax, edx
		mov	edx, ecx

loc_75:					; DATA XREF: .eh_frame:00007A84o
		shr	edx, 15h
		and	edx, 0Fh
		mov	edx, ds:_leftkey_swap[edx*4]
		shl	edx, 5
		mov	ebx, ecx
		shr	ebx, 18h
		and	ebx, 0Fh
		mov	edi, ecx
		and	edi, 0Fh
		mov	edi, ds:_leftkey_swap[edi*4]

loc_99:					; DATA XREF: .debug_loc:00006554o
		lea	ebp, ds:0[edi*8]
		or	ebp, ds:_leftkey_swap[ebx*4]
		mov	ebx, ecx
		shr	ebx, 1Dh
		mov	ebx, ds:_leftkey_swap[ebx*4]

loc_B3:					; DATA XREF: .debug_info:000025D1o
					; .debug_info:00003184o
		shl	ebx, 4
		or	ebp, ebx
		mov	ebx, ecx
		shr	ebx, 8

loc_BD:					; DATA XREF: .eh_frame:00007894o
		and	ebx, 0Fh
		mov	ebx, ds:_leftkey_swap[ebx*4]
		shl	ebx, 2
		or	ebp, ebx
		mov	ebx, ecx
		shr	ebx, 10h
		and	ebx, 0Fh
		mov	ebx, ds:_leftkey_swap[ebx*4]
		shl	ebx, 1
		or	ebp, ebx

loc_DF:					; DATA XREF: .debug_info:00002DF4o
		mov	ebx, ecx
		shr	ebx, 5
		and	ebx, 0Fh
		mov	ebx, ds:_leftkey_swap[ebx*4]
		shl	ebx, 7
		or	ebp, ebx
		shr	ecx, 0Dh

loc_F6:					; DATA XREF: .debug_loc:000045FCo
		and	ecx, 0Fh
		mov	ecx, ds:_leftkey_swap[ecx*4]

loc_100:				; DATA XREF: .rdata:0000226Co
		shl	ecx, 6
		or	ebp, ecx
		or	ebp, edx
		and	ebp, 0FFFFFFFh
		mov	edx, eax
		shr	edx, 14h
		and	edx, 0Fh

loc_115:				; DATA XREF: .eh_frame:000078F4o
					; .eh_frame:00007934o
		mov	edx, ds:_rightkey_swap[edx*4]
		shl	edx, 5
		mov	ecx, eax
		shr	ecx, 1Ch
		mov	edi, ds:_rightkey_swap[ecx*4]
		shl	edi, 4
		mov	ecx, eax
		shr	ecx, 19h
		and	ecx, 0Fh

loc_136:				; DATA XREF: .debug_line:00007262o
		or	edi, ds:_rightkey_swap[ecx*4]
		mov	ecx, eax
		shr	ecx, 1
		and	ecx, 0Fh

loc_144:				; DATA XREF: .debug_info:000025C0o
		mov	ecx, ds:_rightkey_swap[ecx*4]
		shl	ecx, 3
		or	edi, ecx
		mov	ecx, eax
		shr	ecx, 9
		and	ecx, 0Fh
		mov	ecx, ds:_rightkey_swap[ecx*4]
		shl	ecx, 2
		or	edi, ecx
		mov	ecx, eax
		shr	ecx, 11h
		and	ecx, 0Fh
		mov	ecx, ds:_rightkey_swap[ecx*4]
		shl	ecx, 1
		or	edi, ecx
		mov	ecx, eax
		shr	ecx, 4
		and	ecx, 0Fh
		mov	ecx, ds:_rightkey_swap[ecx*4]
		shl	ecx, 7
		or	edi, ecx
		shr	eax, 0Ch
		and	eax, 0Fh
		mov	eax, ds:_rightkey_swap[eax*4]
		shl	eax, 6
		or	edi, eax
		or	edi, edx
		and	edi, 0FFFFFFFh

loc_1A5:				; DATA XREF: .debug_loc:off_4D7Ao
					; .debug_info:000040CCo ...
		mov	[esp+3Ch+var_3C], 0

loc_1AC:				; CODE XREF: _des_key_schedule+417j
					; DATA XREF: .debug_loc:00004D7Eo
		mov	ebx, [esp+3Ch+var_3C]
		movzx	eax, ds:_encrypt_rotate_tab[ebx]

loc_1B6:				; DATA XREF: .debug_info:00004135o
		mov	edx, 1Ch
		sub	edx, eax
		mov	ebx, ebp
		mov	cl, dl
		shr	ebx, cl
		mov	cl, al
		shl	ebp, cl
		or	ebp, ebx

loc_1C9:				; DATA XREF: .debug_info:000026ADo
		and	ebp, 0FFFFFFFh
		mov	ebx, edi
		mov	cl, dl
		shr	ebx, cl
		mov	edx, ebx
		mov	cl, al
		shl	edi, cl
		or	edx, edi
		mov	edi, edx
		and	edi, 0FFFFFFFh
		mov	ebx, ebp
		shl	ebx, 0Ah
		mov	[esp+3Ch+var_38], ebx
		mov	eax, edi
		shr	eax, 0Eh
		mov	[esp+3Ch+var_34], eax
		mov	ecx, edi
		shr	ecx, 3
		mov	[esp+3Ch+var_30], ecx
		mov	eax, ebp

loc_202:				; DATA XREF: .rdata:00002340o
		shl	eax, 4
		and	eax, 24000000h
		mov	ecx, ebp
		shl	ecx, 1Ch
		and	ecx, 10000000h
		or	eax, ecx
		mov	ecx, edx
		and	ecx, 100h
		or	eax, ecx
		mov	ecx, ebp
		shl	ecx, 0Eh
		and	ecx, 8000000h
		or	eax, ecx
		mov	ecx, ebp
		shl	ecx, 12h
		and	ecx, 2080000h
		or	eax, ecx
		mov	ecx, ebp
		shl	ecx, 6
		and	ecx, 1000000h
		or	eax, ecx
		mov	ecx, ebp
		shl	ecx, 9
		and	ecx, 200000h
		or	eax, ecx
		mov	ecx, ebp
		shr	ecx, 1
		and	ecx, 100000h
		or	eax, ecx
		mov	ecx, ebx
		and	ecx, 40000h
		or	eax, ecx
		lea	ecx, ds:0[ebp*4]
		and	ecx, 20000h
		or	eax, ecx
		mov	ecx, ebp
		shr	ecx, 0Ah
		and	ecx, 10000h
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 0Dh

loc_28C:				; DATA XREF: .debug_info:000025D9o
		and	ecx, 2000h
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 4
		and	ecx, 1000h
		or	eax, ecx
		mov	ecx, edi
		shl	ecx, 6
		and	ecx, 800h
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 1

loc_2B2:				; DATA XREF: .debug_info:00003EADo
		and	ecx, 400h
		or	eax, ecx
		mov	ecx, [esp+3Ch+var_34]
		and	ecx, 200h
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 5
		and	ecx, 20h
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 0Ah
		and	ecx, 10h
		or	eax, ecx
		mov	ecx, [esp+3Ch+var_30]
		and	ecx, 8
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 12h
		and	ecx, 4
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 1Ah
		and	ecx, 2
		or	eax, ecx
		mov	ecx, edi
		shr	ecx, 18h
		and	ecx, 1
		or	eax, ecx
		mov	[esi], eax
		mov	ebx, ebp
		shl	ebx, 0Fh
		mov	eax, ebx
		and	eax, 20000000h
		mov	ecx, ebp
		shl	ecx, 11h

loc_314:				; DATA XREF: .eh_frame:00007A44o
		and	ecx, 10000000h
		or	eax, ecx
		and	edx, 200h
		or	eax, edx
		mov	edx, [esp+3Ch+var_38]
		and	edx, 8000000h
		or	eax, edx
		mov	edx, ebp
		shl	edx, 16h
		and	edx, 4000000h
		or	eax, edx
		mov	edx, ebp
		shr	edx, 2
		and	edx, 2000000h
		or	eax, edx
		lea	edx, [ebp+ebp+0]
		and	edx, 1000000h
		or	eax, edx
		mov	edx, ebp
		shl	edx, 10h
		and	edx, 200000h
		or	eax, edx
		mov	edx, ebp
		shl	edx, 0Bh
		and	edx, 100000h
		or	eax, edx
		lea	edx, ds:0[ebp*8]
		and	edx, 80000h
		or	eax, edx
		mov	edx, ebp
		shr	edx, 6
		and	edx, 40000h
		or	eax, edx
		and	ebx, 20000h
		or	eax, ebx
		mov	edx, ebp
		shr	edx, 4
		and	edx, 10000h
		or	eax, edx
		mov	edx, edi
		shr	edx, 2
		and	edx, 2000h
		or	eax, edx
		mov	edx, edi

loc_3B0:				; DATA XREF: .eh_frame:00007A04o
		shl	edx, 8
		and	edx, 1000h
		or	eax, edx
		mov	edx, [esp+3Ch+var_34]
		and	edx, 808h
		or	eax, edx
		mov	edx, edi
		shr	edx, 9
		and	edx, 400h
		or	eax, edx
		mov	edx, edi
		shl	edx, 7
		and	edx, 100h
		or	eax, edx
		mov	edx, edi
		shr	edx, 7
		and	edx, 20h
		or	eax, edx
		mov	edx, [esp+3Ch+var_30]
		and	edx, 11h
		or	eax, edx
		lea	edx, ds:0[edi*4]
		and	edx, 4
		or	eax, edx

loc_400:				; DATA XREF: .rdata:00001FDCo
		mov	edx, edi
		shr	edx, 15h
		and	edx, 2
		or	eax, edx
		mov	[esi+4], eax
		add	esi, 8
		inc	[esp+3Ch+var_3C]
		cmp	[esp+3Ch+var_3C], 10h
		jnz	loc_1AC
		mov	ebx, [esp+3Ch+var_20]
		xor	ebx, dword ptr ds:___stack_chk_guard
		jnz	short loc_431
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_431:				; CODE XREF: _des_key_schedule+427j
		call	___stack_chk_fail
_des_key_schedule endp

; ---------------------------------------------------------------------------
unk_436		db  66h	; f		; DATA XREF: .debug_info:00002CD1o
					; .debug_info:00002D46o ...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_des_ecb_crypt	proc near		; CODE XREF: _des_decrypt+83p
					; _des_decrypt+E6p ...

var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4

		push	ebp

loc_439:				; DATA XREF: .debug_loc:00004DB6o
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	[esp+3Ch+var_30], ecx
		mov	ecx, dword ptr ds:___stack_chk_guard
		mov	[esp+3Ch+var_20], ecx
		xor	ecx, ecx

loc_44F:				; DATA XREF: .debug_loc:00004E92o
					; .debug_info:000026ECo
		mov	ecx, [esp+3Ch+arg_0]
		test	ecx, ecx
		jz	short loc_45A
		sub	eax, 0FFFFFF80h

loc_45A:				; CODE XREF: _des_ecb_crypt+1Dj
					; DATA XREF: .debug_loc:00004E50o ...
		movzx	ecx, byte ptr [edx]
		shl	ecx, 18h
		movzx	ebx, byte ptr [edx+1]
		shl	ebx, 10h
		or	ecx, ebx
		movzx	ebx, byte ptr [edx+3]
		or	ecx, ebx
		movzx	ebx, byte ptr [edx+2]
		shl	ebx, 8
		or	ecx, ebx

loc_478:				; DATA XREF: .debug_loc:off_4EADo
		movzx	ebx, byte ptr [edx+4]
		shl	ebx, 18h
		movzx	esi, byte ptr [edx+5]
		shl	esi, 10h
		or	ebx, esi
		movzx	esi, byte ptr [edx+7]
		or	ebx, esi
		movzx	edx, byte ptr [edx+6]

loc_492:				; DATA XREF: .debug_loc:00004E71o
					; .debug_loc:00004E78o
		shl	edx, 8
		or	ebx, edx

loc_497:				; DATA XREF: .debug_loc:off_5222o
		mov	edx, ecx
		shr	edx, 4
		xor	edx, ebx
		and	edx, 0F0F0F0Fh

loc_4A4:				; DATA XREF: .debug_loc:off_553Co
		xor	ebx, edx
		shl	edx, 4

loc_4A9:				; DATA XREF: .debug_loc:00005540o
		xor	edx, ecx

loc_4AB:				; DATA XREF: .debug_loc:00004EB1o
					; .debug_loc:00004EB8o
		mov	esi, edx
		shr	esi, 10h
		xor	esi, ebx
		and	esi, 0FFFFh
		xor	ebx, esi
		shl	esi, 10h
		xor	esi, edx

loc_4BF:				; DATA XREF: .debug_loc:00004EBCo
		mov	edx, ebx
		shr	edx, 2
		xor	edx, esi
		and	edx, 33333333h
		xor	esi, edx
		shl	edx, 2
		xor	edx, ebx

loc_4D3:				; DATA XREF: .debug_loc:00005226o
		mov	edi, edx
		shr	edi, 8
		xor	edi, esi
		and	edi, 0FF00FFh

loc_4E0:				; DATA XREF: .debug_info:000028A9o
		xor	esi, edi
		shl	edi, 8
		xor	edi, edx
		mov	edx, esi
		shr	edx, 1
		xor	edx, edi

loc_4ED:				; DATA XREF: .debug_line:off_725Co
		and	edx, 55555555h
		xor	edi, edx
		mov	ebx, edi
		rol	ebx, 1
		xor	ebx, [eax]

loc_4FB:				; DATA XREF: .debug_loc:000060BFo
		mov	ecx, edi
		rol	ecx, 1Dh
		xor	ecx, [eax+4]
		shl	edx, 1
		xor	edx, esi
		mov	esi, ebx
		and	esi, 3Fh
		xor	edx, ds:_sbox8[esi*4]

loc_513:				; DATA XREF: .debug_info:00002F24o
					; .debug_info:000032E0o ...
		mov	esi, ecx
		and	esi, 3Fh
		xor	edx, ds:_sbox7[esi*4]
		mov	esi, ebx
		shr	esi, 8
		and	esi, 3Fh
		xor	edx, ds:_sbox6[esi*4]
		mov	esi, ebx
		shr	esi, 10h
		and	esi, 3Fh
		xor	edx, ds:_sbox4[esi*4]
		shr	ebx, 18h
		and	ebx, 3Fh
		xor	edx, ds:_sbox2[ebx*4]
		mov	ebx, ecx
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox5[ebx*4]
		mov	ebx, ecx
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox3[ebx*4]
		shr	ecx, 18h
		and	ecx, 3Fh
		xor	edx, ds:_sbox1[ecx*4]
		mov	esi, edx
		rol	esi, 1

loc_579:				; DATA XREF: .debug_info:000034DCo
		xor	esi, [eax+8]
		mov	ebx, edx

loc_57E:				; DATA XREF: .debug_info:00002754o
		rol	ebx, 1Dh
		xor	ebx, [eax+0Ch]
		mov	ecx, esi
		and	ecx, 3Fh
		mov	ebp, ebx
		and	ebp, 3Fh
		mov	ecx, ds:_sbox8[ecx*4]

loc_595:				; DATA XREF: .debug_info:000031D0o
					; .debug_info:000034C4o
		xor	ecx, ds:_sbox7[ebp*4]
		xor	ecx, edi
		mov	edi, esi
		shr	edi, 8
		and	edi, 3Fh

loc_5A6:				; DATA XREF: .debug_info:00002765o
					; .debug_info:00002854o
		xor	ecx, ds:_sbox6[edi*4]
		mov	edi, esi
		shr	edi, 10h
		and	edi, 3Fh
		xor	ecx, ds:_sbox4[edi*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ecx, ds:_sbox2[esi*4]
		mov	esi, ebx

loc_5CB:				; DATA XREF: .debug_info:000034E8o
		shr	esi, 8
		and	esi, 3Fh
		xor	ecx, ds:_sbox5[esi*4]
		mov	esi, ebx
		shr	esi, 10h
		and	esi, 3Fh
		xor	ecx, ds:_sbox3[esi*4]
		shr	ebx, 18h
		and	ebx, 3Fh
		xor	ecx, ds:_sbox1[ebx*4]
		mov	edi, ecx
		rol	edi, 1
		xor	edi, [eax+10h]

loc_5FB:				; DATA XREF: .debug_info:00002788o
		mov	ebx, ecx
		rol	ebx, 1Dh
		xor	ebx, [eax+14h]
		mov	esi, edi
		and	esi, 3Fh
		mov	ebp, ebx
		and	ebp, 3Fh

loc_60D:				; DATA XREF: .debug_info:000027ADo
		mov	esi, ds:_sbox8[esi*4]
		xor	esi, ds:_sbox7[ebp*4]
		xor	esi, edx
		mov	edx, edi
		shr	edx, 8
		and	edx, 3Fh

loc_625:				; DATA XREF: .debug_info:000027C5o
					; .debug_info:00002839o
		xor	esi, ds:_sbox6[edx*4]
		mov	edx, edi
		shr	edx, 10h
		and	edx, 3Fh
		xor	esi, ds:_sbox4[edx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	esi, ds:_sbox2[edi*4]
		mov	edx, ebx
		shr	edx, 8
		and	edx, 3Fh
		xor	esi, ds:_sbox5[edx*4]
		mov	edx, ebx
		shr	edx, 10h
		and	edx, 3Fh
		xor	esi, ds:_sbox3[edx*4]
		shr	ebx, 18h
		and	ebx, 3Fh

loc_66C:				; DATA XREF: .debug_info:00002820o
		xor	esi, ds:_sbox1[ebx*4]
		mov	edi, esi
		rol	edi, 1
		xor	edi, [eax+18h]
		mov	edx, esi
		rol	edx, 1Dh
		xor	edx, [eax+1Ch]
		mov	ebx, edi
		and	ebx, 3Fh
		mov	ebp, edx
		and	ebp, 3Fh
		mov	ebx, ds:_sbox8[ebx*4]
		xor	ebx, ds:_sbox7[ebp*4]
		xor	ebx, ecx
		mov	ecx, edi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox6[ecx*4]
		mov	ecx, edi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox4[ecx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ebx, ds:_sbox2[edi*4]
		mov	ecx, edx
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox5[ecx*4]
		mov	ecx, edx
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox3[ecx*4]
		shr	edx, 18h
		and	edx, 3Fh
		xor	ebx, ds:_sbox1[edx*4]
		mov	edi, ebx
		rol	edi, 1
		xor	edi, [eax+20h]
		mov	edx, ebx
		rol	edx, 1Dh
		xor	edx, [eax+24h]
		mov	ecx, edi
		and	ecx, 3Fh
		mov	ebp, edx
		and	ebp, 3Fh
		mov	ecx, ds:_sbox8[ecx*4]
		xor	ecx, ds:_sbox7[ebp*4]
		xor	ecx, esi
		mov	esi, edi
		shr	esi, 8
		and	esi, 3Fh
		xor	ecx, ds:_sbox6[esi*4]
		mov	esi, edi
		shr	esi, 10h
		and	esi, 3Fh
		xor	ecx, ds:_sbox4[esi*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ecx, ds:_sbox2[edi*4]
		mov	esi, edx
		shr	esi, 8
		and	esi, 3Fh
		xor	ecx, ds:_sbox5[esi*4]
		mov	esi, edx
		shr	esi, 10h
		and	esi, 3Fh
		xor	ecx, ds:_sbox3[esi*4]
		shr	edx, 18h
		and	edx, 3Fh
		xor	ecx, ds:_sbox1[edx*4]
		mov	edi, ecx
		rol	edi, 1
		xor	edi, [eax+28h]
		mov	esi, ecx
		rol	esi, 1Dh
		xor	esi, [eax+2Ch]
		mov	edx, edi
		and	edx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	edx, ds:_sbox8[edx*4]
		xor	edx, ds:_sbox7[ebp*4]
		xor	edx, ebx
		mov	ebx, edi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox6[ebx*4]
		mov	ebx, edi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox4[ebx*4]
		shr	edi, 18h
		and	edi, 3Fh

loc_7BE:				; DATA XREF: .debug_info:00002BAAo
		xor	edx, ds:_sbox2[edi*4]
		mov	ebx, esi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox5[ebx*4]
		mov	ebx, esi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox3[ebx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	edx, ds:_sbox1[esi*4]
		mov	edi, edx
		rol	edi, 1
		xor	edi, [eax+30h]
		mov	esi, edx
		rol	esi, 1Dh
		xor	esi, [eax+34h]

loc_7FF:				; DATA XREF: .rdata:00001BD0o
		mov	ebx, edi
		and	ebx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	ebx, ds:_sbox8[ebx*4]
		xor	ebx, ds:_sbox7[ebp*4]
		xor	ebx, ecx
		mov	ecx, edi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox6[ecx*4]
		mov	ecx, edi

loc_82A:				; DATA XREF: .debug_info:00002C2Eo
		shr	ecx, 10h
		and	ecx, 3Fh

loc_830:				; DATA XREF: .debug_info:00003DB0o
		xor	ebx, ds:_sbox4[ecx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ebx, ds:_sbox2[edi*4]
		mov	ecx, esi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox5[ecx*4]
		mov	ecx, esi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox3[ecx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ebx, ds:_sbox1[esi*4]
		mov	edi, ebx
		rol	edi, 1
		xor	edi, [eax+38h]

loc_876:				; DATA XREF: .debug_loc:0000534Ao
		mov	esi, ebx
		rol	esi, 1Dh
		xor	esi, [eax+3Ch]
		mov	ecx, edi
		and	ecx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	ecx, ds:_sbox8[ecx*4]
		xor	ecx, ds:_sbox7[ebp*4]
		xor	ecx, edx
		mov	edx, edi
		shr	edx, 8
		and	edx, 3Fh
		xor	ecx, ds:_sbox6[edx*4]

loc_8A7:				; DATA XREF: .debug_info:00002C7Fo
		mov	edx, edi
		shr	edx, 10h

loc_8AC:				; DATA XREF: .debug_info:00002F73o
					; .debug_info:00002F8Do ...
		and	edx, 3Fh
		xor	ecx, ds:_sbox4[edx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ecx, ds:_sbox2[edi*4]
		mov	edx, esi
		shr	edx, 8
		and	edx, 3Fh
		xor	ecx, ds:_sbox5[edx*4]
		mov	edx, esi
		shr	edx, 10h
		and	edx, 3Fh
		xor	ecx, ds:_sbox3[edx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ecx, ds:_sbox1[esi*4]
		mov	edi, ecx
		rol	edi, 1
		xor	edi, [eax+40h]
		mov	esi, ecx
		rol	esi, 1Dh
		xor	esi, [eax+44h]
		mov	edx, edi
		and	edx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	edx, ds:_sbox8[edx*4]
		xor	edx, ds:_sbox7[ebp*4]
		xor	edx, ebx
		mov	ebx, edi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox6[ebx*4]
		mov	ebx, edi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox4[ebx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	edx, ds:_sbox2[edi*4]
		mov	ebx, esi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox5[ebx*4]
		mov	ebx, esi

loc_953:				; DATA XREF: .debug_info:00003128o
					; .debug_info:0000315Eo ...
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox3[ebx*4]
		shr	esi, 18h
		and	esi, 3Fh

loc_966:				; DATA XREF: .eh_frame:00007814o
		xor	edx, ds:_sbox1[esi*4]
		mov	edi, edx
		rol	edi, 1
		xor	edi, [eax+48h]
		mov	esi, edx
		rol	esi, 1Dh
		xor	esi, [eax+4Ch]
		mov	ebx, edi
		and	ebx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	ebx, ds:_sbox8[ebx*4]
		xor	ebx, ds:_sbox7[ebp*4]
		xor	ebx, ecx
		mov	ecx, edi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox6[ecx*4]
		mov	ecx, edi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox4[ecx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ebx, ds:_sbox2[edi*4]
		mov	ecx, esi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox5[ecx*4]
		mov	ecx, esi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox3[ecx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ebx, ds:_sbox1[esi*4]
		mov	edi, ebx
		rol	edi, 1
		xor	edi, [eax+50h]
		mov	esi, ebx
		rol	esi, 1Dh
		xor	esi, [eax+54h]
		mov	ecx, edi
		and	ecx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh

loc_A05:				; DATA XREF: .debug_info:00002D84o
					; .debug_info:00002D90o
		mov	ecx, ds:_sbox8[ecx*4]
		xor	ecx, ds:_sbox7[ebp*4]
		xor	ecx, edx
		mov	edx, edi
		shr	edx, 8
		and	edx, 3Fh
		xor	ecx, ds:_sbox6[edx*4]
		mov	edx, edi
		shr	edx, 10h
		and	edx, 3Fh
		xor	ecx, ds:_sbox4[edx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ecx, ds:_sbox2[edi*4]
		mov	edx, esi
		shr	edx, 8
		and	edx, 3Fh
		xor	ecx, ds:_sbox5[edx*4]
		mov	edx, esi
		shr	edx, 10h
		and	edx, 3Fh
		xor	ecx, ds:_sbox3[edx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ecx, ds:_sbox1[esi*4]
		mov	edi, ecx
		rol	edi, 1

loc_A6F:				; DATA XREF: .debug_info:00002E6Eo
		xor	edi, [eax+58h]

loc_A72:				; DATA XREF: .debug_loc:000053FEo
		mov	esi, ecx
		rol	esi, 1Dh
		xor	esi, [eax+5Ch]
		mov	edx, edi
		and	edx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	edx, ds:_sbox8[edx*4]
		xor	edx, ds:_sbox7[ebp*4]
		xor	edx, ebx
		mov	ebx, edi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox6[ebx*4]
		mov	ebx, edi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox4[ebx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	edx, ds:_sbox2[edi*4]
		mov	ebx, esi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox5[ebx*4]
		mov	ebx, esi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox3[ebx*4]
		shr	esi, 18h
		and	esi, 3Fh

loc_AE3:				; DATA XREF: .debug_info:00002EE2o
		xor	edx, ds:_sbox1[esi*4]
		mov	edi, edx
		rol	edi, 1
		xor	edi, [eax+60h]
		mov	esi, edx
		rol	esi, 1Dh
		xor	esi, [eax+64h]
		mov	ebx, edi
		and	ebx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	ebx, ds:_sbox8[ebx*4]
		xor	ebx, ds:_sbox7[ebp*4]
		xor	ebx, ecx
		mov	ecx, edi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox6[ecx*4]
		mov	ecx, edi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox4[ecx*4]
		shr	edi, 18h
		and	edi, 3Fh
		xor	ebx, ds:_sbox2[edi*4]
		mov	ecx, esi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	ebx, ds:_sbox5[ecx*4]
		mov	ecx, esi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	ebx, ds:_sbox3[ecx*4]
		shr	esi, 18h
		and	esi, 3Fh

loc_B62:				; DATA XREF: .debug_info:00002F61o
		xor	ebx, ds:_sbox1[esi*4]
		mov	edi, ebx
		rol	edi, 1
		xor	edi, [eax+68h]
		mov	esi, ebx
		rol	esi, 1Dh
		xor	esi, [eax+6Ch]
		mov	ecx, edi

loc_B7A:				; DATA XREF: .debug_info:00002F77o
		and	ecx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	ecx, ds:_sbox8[ecx*4]
		xor	ecx, ds:_sbox7[ebp*4]
		xor	ecx, edx
		mov	edx, edi
		shr	edx, 8

loc_B97:				; DATA XREF: .debug_info:00002F91o
		and	edx, 3Fh
		xor	ecx, ds:_sbox6[edx*4]
		mov	edx, edi
		shr	edx, 10h
		and	edx, 3Fh
		xor	ecx, ds:_sbox4[edx*4]

loc_BB0:				; DATA XREF: .debug_info:00002FACo
		shr	edi, 18h
		and	edi, 3Fh

loc_BB6:				; DATA XREF: .debug_info:00002F18o
		xor	ecx, ds:_sbox2[edi*4]
		mov	edx, esi
		shr	edx, 8
		and	edx, 3Fh
		xor	ecx, ds:_sbox5[edx*4]
		mov	edx, esi
		shr	edx, 10h
		and	edx, 3Fh
		xor	ecx, ds:_sbox3[edx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	ecx, ds:_sbox1[esi*4]
		mov	edi, ecx
		rol	edi, 1
		xor	edi, [eax+70h]
		mov	esi, ecx
		rol	esi, 1Dh
		xor	esi, [eax+74h]
		mov	edx, edi
		and	edx, 3Fh
		mov	ebp, esi
		and	ebp, 3Fh
		mov	edx, ds:_sbox8[edx*4]
		xor	edx, ds:_sbox7[ebp*4]
		xor	edx, ebx
		mov	ebx, edi
		shr	ebx, 8
		and	ebx, 3Fh
		xor	edx, ds:_sbox6[ebx*4]
		mov	ebx, edi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox4[ebx*4]

loc_C2F:				; DATA XREF: .debug_info:0000302Fo
		shr	edi, 18h
		and	edi, 3Fh
		xor	edx, ds:_sbox2[edi*4]
		mov	ebx, esi
		shr	ebx, 8
		and	ebx, 3Fh

loc_C44:				; DATA XREF: .debug_info:00003045o
		xor	edx, ds:_sbox5[ebx*4]
		mov	ebx, esi
		shr	ebx, 10h
		and	ebx, 3Fh
		xor	edx, ds:_sbox3[ebx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	edx, ds:_sbox1[esi*4]
		mov	esi, edx
		rol	esi, 1
		xor	esi, [eax+78h]

loc_C6E:				; DATA XREF: .debug_loc:000054B2o
		mov	ebx, edx
		rol	ebx, 1Dh
		xor	ebx, [eax+7Ch]
		mov	eax, esi
		and	eax, 3Fh
		mov	edi, ebx
		and	edi, 3Fh
		mov	eax, ds:_sbox8[eax*4]
		xor	eax, ds:_sbox7[edi*4]
		xor	eax, ecx
		mov	ecx, esi
		shr	ecx, 8
		and	ecx, 3Fh
		xor	eax, ds:_sbox6[ecx*4]
		mov	ecx, esi
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	eax, ds:_sbox4[ecx*4]
		shr	esi, 18h
		and	esi, 3Fh
		xor	eax, ds:_sbox2[esi*4]
		mov	ecx, ebx
		shr	ecx, 8
		and	ecx, 3Fh
		xor	eax, ds:_sbox5[ecx*4]
		mov	ecx, ebx
		shr	ecx, 10h
		and	ecx, 3Fh
		xor	eax, ds:_sbox3[ecx*4]
		shr	ebx, 18h
		and	ebx, 3Fh
		xor	eax, ds:_sbox1[ebx*4]
		mov	ecx, eax
		shr	ecx, 1
		xor	ecx, edx
		and	ecx, 55555555h
		xor	edx, ecx
		shl	ecx, 1
		xor	ecx, eax
		mov	eax, edx
		shr	eax, 8
		xor	eax, ecx
		and	eax, 0FF00FFh
		xor	ecx, eax
		mov	ebx, eax
		shl	ebx, 8
		xor	ebx, edx
		mov	eax, ebx
		shr	eax, 2
		xor	eax, ecx

loc_D14:				; DATA XREF: .debug_info:00003117o
		and	eax, 33333333h
		xor	ecx, eax
		lea	edx, ds:0[eax*4]
		xor	edx, ebx
		mov	ebx, ecx
		shr	ebx, 10h
		xor	ebx, edx
		and	ebx, 0FFFFh
		xor	edx, ebx
		shl	ebx, 10h

loc_D36:				; DATA XREF: .debug_info:0000312Co
		xor	ebx, ecx
		mov	eax, ebx
		shr	eax, 4
		xor	eax, edx
		and	eax, 0F0F0F0Fh
		xor	edx, eax
		shl	eax, 4
		xor	eax, ebx
		mov	ecx, eax

loc_D4D:				; DATA XREF: .debug_info:0000314Co
		shr	ecx, 18h
		mov	ebx, [esp+3Ch+var_30]
		mov	[ebx], cl
		mov	ecx, eax
		shr	ecx, 10h
		mov	[ebx+1], cl
		mov	ecx, eax
		shr	ecx, 8
		mov	[ebx+2], cl
		mov	[ebx+3], al
		mov	eax, edx

loc_D6B:				; DATA XREF: .debug_info:00003162o
		shr	eax, 18h
		mov	[ebx+4], al
		mov	eax, edx
		shr	eax, 10h
		mov	[ebx+5], al
		mov	eax, edx
		shr	eax, 8
		mov	[ebx+6], al
		mov	[ebx+7], dl
		xor	eax, eax

loc_D86:				; DATA XREF: .debug_info:00003188o
		mov	edx, [esp+3Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_D9A
		add	esp, 2Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_D9A:				; CODE XREF: _des_ecb_crypt+958j
		call	___stack_chk_fail
_des_ecb_crypt	endp

; ---------------------------------------------------------------------------
unk_D9F		db  90h	; ê		; DATA XREF: .debug_info:00002D7Bo
					; .debug_info:00002E0Eo ...

; =============== S U B	R O U T	I N E =======================================


_des3_get_batch	proc near		; DATA XREF: .data:00001AA4o
					; .debug_info:00002E35o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_DA3:				; DATA XREF: .debug_loc:00006283o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_DBA:				; DATA XREF: .debug_info:00002E66o
					; .debug_loc:off_62B7o
		mov	eax, [eax]

loc_DBC:				; DATA XREF: .debug_loc:000062BBo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_DCC
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_DCC:				; CODE XREF: _des3_get_batch+26j
		call	___stack_chk_fail
_des3_get_batch	endp

; ---------------------------------------------------------------------------
unk_DD1		db  8Dh	; ç		; DATA XREF: .debug_info:00002E39o
					; .debug_info:00002E7Co
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_des3_set_batch	proc near		; DATA XREF: .data:00001AA0o
					; .debug_info:00002E99o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_DD5:				; DATA XREF: .debug_loc:000062CEo
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_DF3:				; DATA XREF: .debug_info:00002EDAo
					; .debug_loc:off_631Ao
		mov	[eax], ebx
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard

loc_DFF:				; DATA XREF: .debug_loc:0000631Eo
		jnz	short loc_E06
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_E06:				; CODE XREF: _des3_set_batch:loc_DFFj
		call	___stack_chk_fail
_des3_set_batch	endp

; ---------------------------------------------------------------------------
unk_E0B		db  90h	; ê		; DATA XREF: .debug_info:00002E9Do
					; .debug_info:00002EF0o

; =============== S U B	R O U T	I N E =======================================


_des3_set_key	proc near		; DATA XREF: .data:00001A98o
					; .debug_info:00002F0Bo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_E0D:				; DATA XREF: .debug_loc:00006331o
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_E2C:				; DATA XREF: .debug_info:00002F59o
		mov	ebx, eax

loc_E2E:				; DATA XREF: .debug_loc:off_6395o
		lea	edx, [eax+0Ch]
		mov	eax, esi

loc_E33:				; DATA XREF: .debug_loc:00006399o
					; .debug_loc:000063A0o
		call	_des_key_schedule

loc_E38:				; DATA XREF: .debug_info:00002F6Fo
		lea	edx, [ebx+10Ch]
		lea	eax, [esi+8]
		call	_des_key_schedule

loc_E46:				; DATA XREF: .debug_info:00002F89o
					; .debug_info:0000324Ao
		lea	edx, [ebx+20Ch]
		lea	eax, [esi+10h]
		call	_des_key_schedule

loc_E54:				; DATA XREF: .debug_info:00002FA4o
					; .debug_loc:off_63B3o
		mov	eax, ebx
		mov	edx, ebx
		xor	ecx, ecx

loc_E5A:				; DATA XREF: .debug_loc:000063A4o
					; .debug_loc:000063B7o
		xchg	ax, ax

loc_E5C:				; CODE XREF: _des3_set_key+A4j
		mov	ebx, [eax+84h]
		mov	[edx+8Ch], ebx

loc_E68:				; DATA XREF: .debug_info:0000325Fo
		mov	ebx, [eax+88h]
		mov	[edx+90h], ebx
		mov	ebx, [eax+184h]
		mov	[edx+18Ch], ebx

loc_E80:				; DATA XREF: .debug_info:0000327Fo
		mov	ebx, [eax+188h]
		mov	[edx+190h], ebx
		mov	ebx, [eax+284h]
		mov	[edx+28Ch], ebx
		mov	ebx, [eax+288h]

loc_E9E:				; DATA XREF: .debug_info:00003295o
		mov	[edx+290h], ebx
		add	ecx, 2
		sub	eax, 8
		add	edx, 8
		cmp	ecx, 20h ; ' '
		jnz	short loc_E5C
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_EC4
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_EC4:				; CODE XREF: _des3_set_key+B0j
		call	___stack_chk_fail
_des3_set_key	endp

; ---------------------------------------------------------------------------
unk_EC9		db  8Dh	; ç		; DATA XREF: .debug_info:00002F0Fo
					; .debug_info:00002FBFo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_des_set_key	proc near		; DATA XREF: .data:00001A38o
					; .debug_info:00002FD9o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_ECD:				; DATA XREF: .debug_loc:000063D6o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_EEC:				; DATA XREF: .debug_info:00003027o
		mov	esi, eax

loc_EEE:				; DATA XREF: .debug_loc:off_643Ao
		mov	edx, eax
		mov	eax, ebx

loc_EF2:				; DATA XREF: .debug_loc:0000643Eo
		call	_des_key_schedule

loc_EF7:				; DATA XREF: .debug_info:0000303Do
					; .debug_loc:off_646Eo
		mov	ebx, esi
		xor	ecx, ecx

loc_EFB:				; DATA XREF: .debug_loc:00006472o
		nop

loc_EFC:				; CODE XREF: _des_set_key+4Dj
		mov	eax, [ebx+78h]
		mov	[esi+ecx*4+80h], eax
		mov	eax, [ebx+7Ch]

loc_F09:				; DATA XREF: .debug_info:00003309o
		mov	[esi+ecx*4+84h], eax
		add	ecx, 2
		sub	ebx, 8
		cmp	ecx, 20h ; ' '
		jnz	short loc_EFC

loc_F1B:				; DATA XREF: .debug_info:000032D4o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_F2D
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_F2D:				; CODE XREF: _des_set_key+59j
		call	___stack_chk_fail
_des_set_key	endp

; ---------------------------------------------------------------------------
unk_F32		db  66h	; f		; DATA XREF: .debug_info:00002FDDo
					; .debug_info:00003057o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_des_decrypt	proc near		; DATA XREF: .data:00001A2Co
					; .debug_info:00003075o ...

var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_F35:				; DATA XREF: .debug_loc:00006491o
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_34], eax
		mov	edi, [esp+5Ch+arg_4]
		mov	edx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_40], edx
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_38], eax
		mov	edx, [esp+5Ch+arg_10]
		mov	[esp+5Ch+var_30], edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_F6A:				; DATA XREF: .debug_loc:off_6527o
					; .debug_loc:off_655Do
		mov	[esp+5Ch+var_28], 0
		mov	[esp+5Ch+var_24], 0

loc_F7A:				; DATA XREF: .debug_info:0000337Bo
		cmp	[esp+5Ch+var_40], 7
		jbe	loc_1040
		mov	ebx, 8
		xor	esi, esi
		mov	[esp+5Ch+var_3C], edi
		mov	edi, [esp+5Ch+var_34]
		jmp	short loc_F9A
; ---------------------------------------------------------------------------
unk_F96		db  66h	; f		; DATA XREF: .debug_loc:0000652Bo
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_F98:				; CODE XREF: _des_decrypt+91j
		mov	ebx, eax

loc_F9A:				; CODE XREF: _des_decrypt+60j
		mov	ebp, [esp+5Ch+var_38]
		add	ebp, esi
		add	esi, [esp+5Ch+var_3C]
		mov	[esp+5Ch+var_5C], edi
		call	_purple_cipher_context_get_data

loc_FAC:				; DATA XREF: .debug_info:0000310Fo
		mov	[esp+5Ch+var_5C], 1
		mov	ecx, ebp
		mov	edx, esi
		call	_des_ecb_crypt

loc_FBC:				; DATA XREF: .debug_info:00003124o
		lea	eax, [ebx+8]
		mov	esi, ebx
		cmp	[esp+5Ch+var_40], eax
		jnb	short loc_F98
		mov	edi, [esp+5Ch+var_3C]
		mov	ecx, ebx

loc_FCD:				; CODE XREF: _des_decrypt+110j
		mov	eax, [esp+5Ch+var_40]
		cmp	[esp+5Ch+var_40], ecx
		jbe	short loc_1038
		shl	eax, 1
		sub	eax, ecx
		mov	edx, [esp+5Ch+var_30]
		mov	[edx], eax

loc_FE1:				; DATA XREF: .debug_loc:off_657Do
		mov	eax, ecx
		lea	esi, [esp+5Ch+var_28]
		mov	edx, esi
		sub	edx, ebx
		mov	ebp, [esp+5Ch+var_40]

loc_FEF:				; DATA XREF: .debug_loc:00006561o
		nop

loc_FF0:				; CODE XREF: _des_decrypt+C7j
		mov	al, [edi+eax]
		mov	[edx+ebx], al
		inc	ebx

loc_FF7:				; DATA XREF: .debug_info:000033F6o
		mov	eax, ebx
		cmp	ebp, ebx
		ja	short loc_FF0

loc_FFD:				; DATA XREF: .rdata:00001E10o
		mov	ebx, [esp+5Ch+var_38]

loc_1001:				; DATA XREF: .debug_loc:00006581o
					; .debug_loc:00006588o
		add	ebx, ecx
		mov	eax, [esp+5Ch+var_34]

loc_1007:				; DATA XREF: .debug_loc:0000658Co
		mov	[esp+5Ch+var_5C], eax

loc_100A:				; DATA XREF: .debug_info:000033B8o
		call	_purple_cipher_context_get_data

loc_100F:				; DATA XREF: .debug_info:00003144o
		mov	[esp+5Ch+var_5C], 1
		mov	ecx, ebx
		mov	edx, esi
		call	_des_ecb_crypt

loc_101F:				; CODE XREF: _des_decrypt+10Aj
					; DATA XREF: .debug_info:0000315Ao
		xor	eax, eax
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1046
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_1038:				; CODE XREF: _des_decrypt+A1j
		mov	edx, [esp+5Ch+var_30]
		mov	[edx], eax
		jmp	short loc_101F
; ---------------------------------------------------------------------------

loc_1040:				; CODE XREF: _des_decrypt+4Bj
		xor	ecx, ecx
		xor	ebx, ebx
		jmp	short loc_FCD
; ---------------------------------------------------------------------------

loc_1046:				; CODE XREF: _des_decrypt+F7j
		call	___stack_chk_fail
_des_decrypt	endp

; ---------------------------------------------------------------------------
unk_104B	db  90h	; ê		; DATA XREF: .debug_info:00003079o
					; .debug_info:0000317Ao

; =============== S U B	R O U T	I N E =======================================


_des_encrypt	proc near		; DATA XREF: .data:00001A28o
					; .debug_info:000031A8o ...

var_5C		= dword	ptr -5Ch
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_104D:				; DATA XREF: .debug_loc:0000659Fo
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	eax, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_34], eax
		mov	edi, [esp+5Ch+arg_4]
		mov	edx, [esp+5Ch+arg_8]
		mov	[esp+5Ch+var_40], edx
		mov	eax, [esp+5Ch+arg_C]
		mov	[esp+5Ch+var_38], eax

loc_106F:				; DATA XREF: .debug_info:00003470o
		mov	edx, [esp+5Ch+arg_10]
		mov	[esp+5Ch+var_30], edx
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_1082:				; DATA XREF: .debug_loc:off_6635o
					; .debug_loc:off_666Bo
		mov	[esp+5Ch+var_28], 0
		mov	[esp+5Ch+var_24], 0
		cmp	[esp+5Ch+var_40], 7
		jbe	loc_1158
		mov	ebx, 8
		xor	esi, esi
		mov	[esp+5Ch+var_3C], edi
		mov	edi, [esp+5Ch+var_34]
		jmp	short loc_10B2
; ---------------------------------------------------------------------------
unk_10AE	db  66h	; f		; DATA XREF: .debug_loc:00006639o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_10B0:				; CODE XREF: _des_encrypt+91j
					; DATA XREF: .debug_info:000036B8o
		mov	ebx, eax

loc_10B2:				; CODE XREF: _des_encrypt+60j
		mov	ebp, [esp+5Ch+var_38]
		add	ebp, esi
		add	esi, [esp+5Ch+var_3C]
		mov	[esp+5Ch+var_5C], edi
		call	_purple_cipher_context_get_data

loc_10C4:				; DATA XREF: .debug_info:00003242o
		mov	[esp+5Ch+var_5C], 0
		mov	ecx, ebp
		mov	edx, esi
		call	_des_ecb_crypt

loc_10D4:				; DATA XREF: .debug_info:00003257o
		lea	eax, [ebx+8]
		mov	esi, ebx
		cmp	[esp+5Ch+var_40], eax
		jnb	short loc_10B0
		mov	edi, [esp+5Ch+var_3C]
		mov	ecx, ebx

loc_10E5:				; CODE XREF: _des_encrypt+110j
		mov	eax, [esp+5Ch+var_40]

loc_10E9:				; DATA XREF: .debug_info:000036D8o
		cmp	[esp+5Ch+var_40], ecx
		jbe	short loc_1150
		shl	eax, 1
		sub	eax, ecx
		mov	edx, [esp+5Ch+var_30]
		mov	[edx], eax

loc_10F9:				; DATA XREF: .debug_loc:off_668Bo
		mov	eax, ecx
		lea	esi, [esp+5Ch+var_28]
		mov	edx, esi
		sub	edx, ebx
		mov	ebp, [esp+5Ch+var_40]

loc_1107:				; DATA XREF: .debug_loc:0000666Fo
		nop

loc_1108:				; CODE XREF: _des_encrypt+C7j
		mov	al, [edi+eax]
		mov	[edx+ebx], al
		inc	ebx
		mov	eax, ebx
		cmp	ebp, ebx
		ja	short loc_1108
		mov	ebx, [esp+5Ch+var_38]

loc_1119:				; DATA XREF: .debug_loc:0000668Fo
		add	ebx, ecx
		mov	eax, [esp+5Ch+var_34]
		mov	[esp+5Ch+var_5C], eax
		call	_purple_cipher_context_get_data

loc_1127:				; DATA XREF: .debug_info:00003277o
		mov	[esp+5Ch+var_5C], 0
		mov	ecx, ebx
		mov	edx, esi
		call	_des_ecb_crypt

loc_1137:				; CODE XREF: _des_encrypt+10Aj
					; DATA XREF: .debug_info:0000328Do
		xor	eax, eax
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_115E

loc_1145:				; DATA XREF: .debug_info:00003808o
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_1150:				; CODE XREF: _des_encrypt+A1j
		mov	edx, [esp+5Ch+var_30]
		mov	[edx], eax
		jmp	short loc_1137
; ---------------------------------------------------------------------------

loc_1158:				; CODE XREF: _des_encrypt+4Bj
		xor	ecx, ecx
		xor	ebx, ebx
		jmp	short loc_10E5
; ---------------------------------------------------------------------------

loc_115E:				; CODE XREF: _des_encrypt+F7j
		call	___stack_chk_fail
_des_encrypt	endp

; ---------------------------------------------------------------------------
unk_1163	db  90h	; ê		; DATA XREF: .debug_info:000031ACo
					; .debug_info:000032ADo

; =============== S U B	R O U T	I N E =======================================


_des3_uninit	proc near		; DATA XREF: .data:00001A78o
					; .debug_info:000032C7o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_1165:				; DATA XREF: .debug_loc:000066ADo
		sub	esp, 28h

loc_1168:				; DATA XREF: .debug_info:00003828o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_117F:				; DATA XREF: .debug_info:00003301o
		mov	edx, eax

loc_1181:				; DATA XREF: .debug_loc:off_66F9o
		mov	ecx, 30Ch
		xor	eax, eax

loc_1188:				; DATA XREF: .debug_loc:000066FDo
					; .debug_loc:00006704o
		mov	edi, edx
		rep stosb
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_11A5
		mov	[esp+2Ch+arg_0], edx
		add	esp, 28h
		pop	edi

loc_11A0:				; DATA XREF: .debug_loc:00006708o
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_11A5:				; CODE XREF: _des3_uninit+32j
					; DATA XREF: .debug_info:00003317o
		call	___stack_chk_fail
_des3_uninit	endp

; ---------------------------------------------------------------------------
unk_11AA	db  66h	; f		; DATA XREF: .debug_info:000032CBo
					; .debug_info:00003321o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_des_uninit	proc near		; DATA XREF: .data:00001A18o
					; .debug_info:0000333Ao ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi

loc_11AD:				; DATA XREF: .debug_loc:00006734o
		sub	esp, 28h
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_11C7:				; DATA XREF: .debug_info:00003373o
		mov	edx, eax

loc_11C9:				; DATA XREF: .debug_loc:off_6780o
		mov	ecx, 100h
		xor	eax, eax

loc_11D0:				; DATA XREF: .debug_loc:00006784o
		mov	edi, edx
		rep stosb
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_11ED
		mov	[esp+2Ch+arg_0], edx
		add	esp, 28h
		pop	edi
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_11ED:				; CODE XREF: _des_uninit+32j
					; DATA XREF: .debug_info:00003389o
		call	___stack_chk_fail
_des_uninit	endp

; ---------------------------------------------------------------------------
unk_11F2	db  66h	; f		; DATA XREF: .debug_info:0000333Eo
					; .debug_info:00003393o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_des3_init	proc near		; DATA XREF: .data:00001A70o
					; .debug_info:000033ABo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_11F5:				; DATA XREF: .debug_loc:000067BBo
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 30Ch
		call	_g_malloc0

loc_1213:				; DATA XREF: .debug_info:000033EEo
					; .debug_loc:off_6807o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1230
		mov	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx

loc_122B:				; DATA XREF: .debug_loc:0000680Bo
		jmp	_purple_cipher_context_set_data
; ---------------------------------------------------------------------------

loc_1230:				; CODE XREF: _des3_init+29j
					; DATA XREF: .debug_info:00003404o
		call	___stack_chk_fail
_des3_init	endp

; ---------------------------------------------------------------------------
unk_1235	db  8Dh	; ç		; DATA XREF: .debug_info:000033AFo
					; .debug_info:0000340Eo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_des_init	proc near		; DATA XREF: .data:00001A10o
					; .debug_info:00003425o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_1239:				; DATA XREF: .debug_loc:00006829o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 100h
		call	_g_malloc0

loc_1257:				; DATA XREF: .debug_info:00003468o
					; .debug_loc:off_6875o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1274
		mov	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx

loc_126F:				; DATA XREF: .debug_loc:00006879o
		jmp	_purple_cipher_context_set_data
; ---------------------------------------------------------------------------

loc_1274:				; CODE XREF: _des_init+29j
					; DATA XREF: .debug_info:0000347Eo ...
		call	___stack_chk_fail
_des_init	endp

; ---------------------------------------------------------------------------
unk_1279	db  8Dh	; ç		; DATA XREF: .debug_info:00003429o
					; .debug_info:00003488o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_des3_decrypt	proc near		; DATA XREF: .data:00001A8Co
					; .debug_info:000035B7o ...

var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_127D:				; DATA XREF: .debug_loc:00006897o
		push	edi
		push	esi
		push	ebx
		sub	esp, 7Ch
		mov	eax, [esp+8Ch+arg_4]
		mov	[esp+8Ch+var_5C], eax
		mov	edx, [esp+8Ch+arg_8]
		mov	[esp+8Ch+var_60], edx
		mov	ecx, [esp+8Ch+arg_C]
		mov	[esp+8Ch+var_44], ecx
		mov	eax, [esp+8Ch+arg_10]
		mov	[esp+8Ch+var_40], eax
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+8Ch+var_20], edx
		xor	edx, edx
		mov	eax, [esp+8Ch+arg_0]
		mov	[esp+8Ch+var_8C], eax
		call	_purple_cipher_context_get_data

loc_12CA:				; DATA XREF: .debug_info:00003953o
		mov	[esp+8Ch+var_48], eax

loc_12CE:				; DATA XREF: .debug_loc:off_692Do
		mov	ecx, eax
		mov	eax, [eax]

loc_12D2:				; DATA XREF: .debug_loc:00006931o
					; .debug_loc:00006938o
		test	eax, eax
		jz	short loc_132C
		dec	eax
		jz	loc_13E4

loc_12DD:				; DATA XREF: .debug_info:00003609o
					; .debug_info:00003619o
		mov	[esp+8Ch+var_78], offset ___PRETTY_FUNCTION___7091 ; "des3_decrypt"
		mov	[esp+8Ch+var_7C], 2F7h
		mov	[esp+8Ch+var_80], offset aCiphersDes_c ; "ciphers/des.c"
		mov	[esp+8Ch+var_84], offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		mov	[esp+8Ch+var_88], 8

loc_1305:				; DATA XREF: .debug_info:000036FAo
		mov	[esp+8Ch+var_8C], 0

loc_130C:				; DATA XREF: .debug_loc:0000693Co
		call	_g_log

loc_1311:				; CODE XREF: _des3_decrypt+161j
					; _des3_decrypt+24Aj ...
		xor	eax, eax
		mov	edx, [esp+8Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_1627
		add	esp, 7Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
unk_132B	db  90h	; ê		; DATA XREF: .debug_loc:off_69A0o
					; .debug_loc:off_69C2o	...
; ---------------------------------------------------------------------------

loc_132C:				; CODE XREF: _des3_decrypt+58j
					; DATA XREF: .debug_info:0000368Do ...
		mov	[esp+8Ch+var_28], 0
		mov	[esp+8Ch+var_24], 0
		cmp	[esp+8Ch+var_60], 7
		jbe	loc_1615
		mov	edi, 8
		xor	edx, edx
		lea	eax, [ecx+20Ch]

loc_1354:				; DATA XREF: .debug_info:00003744o
		mov	[esp+8Ch+var_54], eax
		lea	esi, [esp+8Ch+var_28]
		add	ecx, 10Ch
		mov	[esp+8Ch+var_50], ecx
		mov	eax, [esp+8Ch+var_48]
		add	eax, 0Ch
		mov	[esp+8Ch+var_58], eax
		mov	ebp, [esp+8Ch+var_44]
		jmp	short loc_137A
; ---------------------------------------------------------------------------
unk_1377	db  90h	; ê		; DATA XREF: .debug_loc:000069C6o
					; .debug_loc:00006A66o
; ---------------------------------------------------------------------------

loc_1378:				; CODE XREF: _des3_decrypt+149j
		mov	edi, eax

loc_137A:				; CODE XREF: _des3_decrypt+F9j
		lea	ebx, [ebp+edx+0]
		add	edx, [esp+8Ch+var_5C]

loc_1382:				; DATA XREF: .debug_info:0000376Co
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	eax, [esp+8Ch+var_54]
		call	_des_ecb_crypt

loc_1394:				; DATA XREF: .debug_info:000036F2o
		mov	[esp+8Ch+var_8C], 0
		mov	ecx, esi
		mov	edx, ebx
		mov	eax, [esp+8Ch+var_50]
		call	_des_ecb_crypt

loc_13A8:				; DATA XREF: .debug_info:00003714o
					; .debug_info:00003797o
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, esi
		mov	eax, [esp+8Ch+var_58]
		call	_des_ecb_crypt

loc_13BC:				; DATA XREF: .debug_info:0000373Co
		lea	eax, [edi+8]
		mov	edx, edi
		cmp	[esp+8Ch+var_60], eax
		jnb	short loc_1378
		mov	ecx, edi

loc_13C9:				; CODE XREF: _des3_decrypt:loc_1619j
		cmp	[esp+8Ch+var_60], ecx
		ja	loc_1581

loc_13D3:				; DATA XREF: .debug_info:00003698o
		mov	ecx, [esp+8Ch+var_60]
		mov	edx, [esp+8Ch+var_40]
		mov	[edx], ecx
		jmp	loc_1311
; ---------------------------------------------------------------------------
unk_13E2	db  66h	; f		; DATA XREF: .debug_loc:000069A4o
					; .debug_loc:00006A22o	...
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_13E4:				; CODE XREF: _des3_decrypt+5Bj
					; DATA XREF: .debug_info:000037E6o ...
		mov	[esp+8Ch+var_30], 0
		mov	[esp+8Ch+var_2C], 0
		mov	ecx, [esp+8Ch+var_48]
		mov	eax, [ecx+4]
		mov	edx, [ecx+8]
		mov	[esp+8Ch+var_28], eax
		mov	[esp+8Ch+var_24], edx
		cmp	[esp+8Ch+var_60], 7
		jbe	loc_161E
		mov	edi, 8
		xor	ebp, ebp
		lea	eax, [ecx+20Ch]
		mov	[esp+8Ch+var_54], eax
		lea	esi, [esp+8Ch+var_28]
		lea	edx, [ecx+10Ch]
		mov	[esp+8Ch+var_50], edx
		add	ecx, 0Ch
		mov	[esp+8Ch+var_58], ecx
		lea	edx, [esp+8Ch+var_30]
		mov	[esp+8Ch+var_4C], edx

loc_143F:				; DATA XREF: .debug_loc:00006B83o
					; .debug_loc:00006BC4o
		nop

loc_1440:				; CODE XREF: _des3_decrypt+237j
		mov	ebx, [esp+8Ch+var_44]
		add	ebx, ebp
		add	ebp, [esp+8Ch+var_5C]
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, ebp
		mov	eax, [esp+8Ch+var_54]
		call	_des_ecb_crypt

loc_145E:				; DATA XREF: .debug_info:00003853o
		mov	[esp+8Ch+var_8C], 0
		mov	ecx, [esp+8Ch+var_4C]
		mov	edx, ebx

loc_146B:				; DATA XREF: .debug_info:0000385Bo
		mov	eax, [esp+8Ch+var_50]
		call	_des_ecb_crypt

loc_1474:				; DATA XREF: .debug_info:0000387Bo
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, [esp+8Ch+var_4C]
		mov	eax, [esp+8Ch+var_58]
		call	_des_ecb_crypt

loc_148A:				; DATA XREF: .debug_info:000038A5o
		xor	eax, eax

loc_148C:				; CODE XREF: _des3_decrypt+21Aj
		mov	cl, [esi+eax]
		xor	[ebx+eax], cl
		inc	eax
		cmp	eax, 8
		jnz	short loc_148C

loc_1498:				; DATA XREF: .debug_info:00003883o
		mov	eax, [ebp+0]
		mov	edx, [ebp+4]
		mov	[esp+8Ch+var_28], eax
		mov	[esp+8Ch+var_24], edx
		lea	eax, [edi+8]
		mov	ebp, edi
		cmp	[esp+8Ch+var_60], eax
		jb	short loc_14B8
		mov	edi, eax
		jmp	short loc_1440
; ---------------------------------------------------------------------------
		align 4

loc_14B8:				; CODE XREF: _des3_decrypt+233j
		mov	ebx, edi

loc_14BA:				; CODE XREF: _des3_decrypt+3A6j
		mov	edx, [esp+8Ch+var_60]
		mov	eax, [esp+8Ch+var_40]

loc_14C2:				; DATA XREF: .debug_info:000038ADo
		mov	[eax], edx
		cmp	edx, ebx
		jbe	loc_1311
		mov	eax, edx
		shl	eax, 1
		sub	eax, ebx
		mov	ecx, [esp+8Ch+var_40]
		mov	[ecx], eax

loc_14D8:				; DATA XREF: .debug_loc:off_6C1Ao
		mov	[esp+8Ch+var_30], 0
		mov	[esp+8Ch+var_2C], 0
		mov	eax, edi
		mov	edx, ebx

loc_14EC:				; DATA XREF: .debug_info:000038D7o
		lea	ecx, [esp+8Ch+var_30]
		mov	[esp+8Ch+var_4C], ecx
		sub	ecx, edi
		mov	esi, [esp+8Ch+var_5C]
		mov	ebp, [esp+8Ch+var_60]

loc_14FE:				; DATA XREF: .debug_loc:00006C1Eo
		xchg	ax, ax

loc_1500:				; CODE XREF: _des3_decrypt+28Fj
		mov	dl, [esi+edx]
		mov	[ecx+eax], dl
		inc	eax
		mov	edx, eax
		cmp	ebp, eax
		ja	short loc_1500
		add	ebx, [esp+8Ch+var_44]
		mov	eax, [esp+8Ch+var_48]
		add	eax, 20Ch

loc_151A:				; DATA XREF: .debug_info:00003904o
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, [esp+8Ch+var_4C]
		call	_des_ecb_crypt

loc_152C:				; DATA XREF: .debug_info:000038CFo
		mov	eax, [esp+8Ch+var_48]
		add	eax, 10Ch
		mov	[esp+8Ch+var_8C], 0
		mov	ecx, [esp+8Ch+var_4C]
		mov	edx, ebx
		call	_des_ecb_crypt

loc_1547:				; DATA XREF: .debug_info:000038FCo
		mov	eax, [esp+8Ch+var_48]
		add	eax, 0Ch
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, [esp+8Ch+var_4C]

loc_155B:				; DATA XREF: .debug_info:0000395Bo
		call	_des_ecb_crypt

loc_1560:				; DATA XREF: .debug_info:00003929o
		xor	eax, eax
		lea	esi, [esp+8Ch+var_28]

loc_1566:				; DATA XREF: .debug_info:000035C4o
		mov	ecx, [esp+8Ch+var_44]
		lea	edx, [ecx+edi]
		lea	esi, [esi+0]

loc_1570:				; CODE XREF: _des3_decrypt+2FEj
		mov	cl, [esi+eax]
		xor	[edx+eax], cl
		inc	eax
		cmp	eax, 8
		jnz	short loc_1570
		jmp	loc_1311
; ---------------------------------------------------------------------------

loc_1581:				; CODE XREF: _des3_decrypt+151j
					; DATA XREF: .debug_loc:00006ADBo ...
		mov	eax, [esp+8Ch+var_60]
		shl	eax, 1
		sub	eax, ecx
		mov	edx, [esp+8Ch+var_40]
		mov	[edx], eax

loc_158F:				; DATA XREF: .debug_loc:off_6AC4o
					; .debug_info:00003B8Co
		mov	[esp+8Ch+var_28], 0
		mov	[esp+8Ch+var_24], 0
		mov	eax, ecx
		lea	esi, [esp+8Ch+var_28]
		mov	edx, esi
		sub	edx, edi
		mov	ebx, [esp+8Ch+var_5C]
		mov	ebp, [esp+8Ch+var_60]
		lea	esi, [esi+0]

loc_15B4:				; CODE XREF: _des3_decrypt+343j
		mov	al, [ebx+eax]
		mov	[edx+edi], al
		inc	edi
		mov	eax, edi
		cmp	ebp, edi
		ja	short loc_15B4
		mov	ebx, [esp+8Ch+var_44]
		add	ebx, ecx
		mov	eax, [esp+8Ch+var_48]

loc_15CB:				; DATA XREF: .debug_info:00003BACo
		add	eax, 20Ch
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, esi
		call	_des_ecb_crypt

loc_15E0:				; DATA XREF: .debug_info:00003764o
		mov	eax, [esp+8Ch+var_48]
		add	eax, 10Ch
		mov	[esp+8Ch+var_8C], 0
		mov	ecx, esi
		mov	edx, ebx
		call	_des_ecb_crypt

loc_15F9:				; DATA XREF: .debug_info:0000378Fo
		mov	eax, [esp+8Ch+var_48]
		add	eax, 0Ch
		mov	[esp+8Ch+var_8C], 1
		mov	ecx, ebx
		mov	edx, esi
		call	_des_ecb_crypt

loc_1610:				; DATA XREF: .debug_info:000037BAo
					; .debug_ranges:00007128o ...
		jmp	loc_1311
; ---------------------------------------------------------------------------

loc_1615:				; CODE XREF: _des3_decrypt+C5j
					; DATA XREF: .debug_loc:00006AC8o ...
		xor	ecx, ecx
		xor	edi, edi

loc_1619:				; DATA XREF: .debug_info:00003C64o
		jmp	loc_13C9
; ---------------------------------------------------------------------------

loc_161E:				; CODE XREF: _des3_decrypt+18Fj
					; DATA XREF: .debug_ranges:00007130o ...
		xor	ebx, ebx
		xor	edi, edi
		jmp	loc_14BA
; ---------------------------------------------------------------------------

loc_1627:				; CODE XREF: _des3_decrypt+A1j
					; DATA XREF: .debug_ranges:00007168o ...
		call	___stack_chk_fail
_des3_decrypt	endp


; =============== S U B	R O U T	I N E =======================================


_des3_encrypt	proc near		; DATA XREF: .data:00001A88o
					; .debug_info:000035BBo ...

var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp

loc_162D:				; DATA XREF: .debug_loc:00006C47o
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	edi, [esp+6Ch+arg_4]
		mov	eax, [esp+6Ch+arg_8]
		mov	[esp+6Ch+var_48], eax
		mov	edx, [esp+6Ch+arg_C]
		mov	[esp+6Ch+var_34], edx
		mov	ecx, [esp+6Ch+arg_10]
		mov	[esp+6Ch+var_30], ecx
		mov	eax, dword ptr ds:___stack_chk_guard

loc_1657:				; DATA XREF: .debug_info:00003C84o
		mov	[esp+6Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+6Ch+arg_0]
		mov	[esp+6Ch+var_6C], eax
		call	_purple_cipher_context_get_data

loc_1669:				; DATA XREF: .debug_info:00003D90o
		mov	[esp+6Ch+var_38], eax

loc_166D:				; DATA XREF: .debug_loc:off_6CDDo
		mov	eax, [eax]

loc_166F:				; DATA XREF: .debug_loc:00006CE1o
					; .debug_loc:00006CE8o
		test	eax, eax
		jz	short loc_16C8
		dec	eax
		jz	loc_1790

loc_167A:				; DATA XREF: .debug_info:00003ADDo
					; .debug_info:00003AEDo
		mov	[esp+6Ch+var_58], offset ___PRETTY_FUNCTION___7041 ; "des3_encrypt"
		mov	[esp+6Ch+var_5C], 27Dh
		mov	[esp+6Ch+var_60], offset aCiphersDes_c ; "ciphers/des.c"
		mov	[esp+6Ch+var_64], offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		mov	[esp+6Ch+var_68], 8
		mov	[esp+6Ch+var_6C], 0
		call	_g_log

loc_16AE:				; CODE XREF: _des3_encrypt+15Cj
					; _des3_encrypt:loc_18D4j ...
		xor	eax, eax
		mov	ecx, [esp+6Ch+var_20]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	loc_193B
		add	esp, 5Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------

loc_16C8:				; CODE XREF: _des3_encrypt+45j
					; DATA XREF: .debug_info:00003B61o ...
		mov	[esp+6Ch+var_28], 0
		mov	[esp+6Ch+var_24], 0
		cmp	[esp+6Ch+var_48], 7
		jbe	loc_1929
		mov	ebp, 8
		xor	edx, edx
		mov	eax, [esp+6Ch+var_38]
		add	eax, 0Ch
		mov	[esp+6Ch+var_44], eax
		lea	ebx, [esp+6Ch+var_28]
		mov	eax, [esp+6Ch+var_38]
		add	eax, 10Ch
		mov	[esp+6Ch+var_3C], eax
		mov	eax, [esp+6Ch+var_38]
		add	eax, 20Ch
		mov	[esp+6Ch+var_40], eax
		mov	[esp+6Ch+var_4C], edi
		mov	edi, [esp+6Ch+var_34]

loc_171B:				; DATA XREF: .debug_loc:00006D9Eo
		jmp	short loc_1722
; ---------------------------------------------------------------------------
unk_171D	db  8Dh	; ç		; DATA XREF: .debug_loc:00006D2Co
					; .debug_loc:00006E0Do
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1720:				; CODE XREF: _des3_encrypt+140j
		mov	ebp, eax

loc_1722:				; CODE XREF: _des3_encrypt:loc_171Bj
		lea	esi, [edi+edx]
		add	edx, [esp+6Ch+var_4C]
		mov	[esp+6Ch+var_6C], 0
		mov	ecx, esi
		mov	eax, [esp+6Ch+var_44]
		call	_des_ecb_crypt

loc_173B:				; DATA XREF: .debug_info:00003BC6o
		mov	[esp+6Ch+var_6C], 1
		mov	ecx, ebx
		mov	edx, esi
		mov	eax, [esp+6Ch+var_3C]
		call	_des_ecb_crypt

loc_174F:				; DATA XREF: .debug_info:00003BE8o
					; .debug_info:00003AE8o
		mov	[esp+6Ch+var_6C], 0
		mov	ecx, esi
		mov	edx, ebx
		mov	eax, [esp+6Ch+var_40]
		call	_des_ecb_crypt

loc_1763:				; DATA XREF: .debug_info:00003C0Fo
		lea	eax, [ebp+8]
		mov	edx, ebp
		cmp	[esp+6Ch+var_48], eax
		jnb	short loc_1720
		mov	edi, [esp+6Ch+var_4C]
		mov	ecx, ebp

loc_1774:				; CODE XREF: _des3_encrypt:loc_192Dj
		cmp	[esp+6Ch+var_48], ecx
		ja	loc_18D9
		mov	ecx, [esp+6Ch+var_48]
		mov	edx, [esp+6Ch+var_30]
		mov	[edx], ecx
		jmp	loc_16AE
; ---------------------------------------------------------------------------
unk_178D	db  8Dh	; ç		; DATA XREF: .debug_loc:00006D00o
					; .debug_loc:00006D6Fo	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_1790:				; CODE XREF: _des3_encrypt+48j
					; DATA XREF: .debug_info:00003C39o ...
		mov	ecx, [esp+6Ch+var_38]
		mov	eax, [ecx+4]
		mov	edx, [ecx+8]
		mov	[esp+6Ch+var_28], eax
		mov	[esp+6Ch+var_24], edx
		cmp	[esp+6Ch+var_48], 7
		jbe	loc_1932
		mov	ebp, 8
		xor	esi, esi
		mov	eax, [esp+6Ch+var_38]
		add	eax, 0Ch
		mov	[esp+6Ch+var_44], eax
		lea	ebx, [esp+6Ch+var_28]
		mov	eax, [esp+6Ch+var_38]
		add	eax, 10Ch
		mov	[esp+6Ch+var_3C], eax
		mov	eax, [esp+6Ch+var_38]
		add	eax, 20Ch

loc_17D9:				; DATA XREF: .debug_info:00003BCEo
		mov	[esp+6Ch+var_40], eax

loc_17DD:				; DATA XREF: .debug_loc:00006F69o
		lea	esi, [esi+0]

loc_17E0:				; CODE XREF: _des3_encrypt+222j
					; DATA XREF: .debug_ranges:00007194o ...
		xor	eax, eax
		lea	edx, [edi+esi]

loc_17E5:				; DATA XREF: .debug_loc:00006F9Fo
		lea	esi, [esi+0]

loc_17E8:				; CODE XREF: _des3_encrypt+1C6j
					; DATA XREF: .debug_ranges:00007198o ...
		mov	cl, [edx+eax]
		xor	[ebx+eax], cl
		inc	eax
		cmp	eax, 8
		jnz	short loc_17E8
		add	esi, [esp+6Ch+var_34]
		mov	[esp+6Ch+var_6C], 0
		mov	ecx, esi

loc_1801:				; DATA XREF: .debug_info:00003BF0o
		mov	edx, ebx
		mov	eax, [esp+6Ch+var_44]
		call	_des_ecb_crypt

loc_180C:				; DATA XREF: .debug_info:00003C9Eo
		mov	[esp+6Ch+var_6C], 1
		mov	ecx, ebx
		mov	edx, esi
		mov	eax, [esp+6Ch+var_3C]
		call	_des_ecb_crypt

loc_1820:				; DATA XREF: .debug_info:00003CC6o
		mov	[esp+6Ch+var_6C], 0

loc_1827:				; DATA XREF: .debug_info:00003B6Co
		mov	ecx, esi
		mov	edx, ebx
		mov	eax, [esp+6Ch+var_40]
		call	_des_ecb_crypt

loc_1834:				; DATA XREF: .debug_info:00003CEDo
		mov	eax, [esi]
		mov	edx, [esi+4]
		mov	[esp+6Ch+var_28], eax
		mov	[esp+6Ch+var_24], edx
		lea	eax, [ebp+8]
		mov	esi, ebp
		cmp	[esp+6Ch+var_48], eax
		jb	short loc_1850
		mov	ebp, eax
		jmp	short loc_17E0
; ---------------------------------------------------------------------------

loc_1850:				; CODE XREF: _des3_encrypt+21Ej
		mov	ecx, ebp

loc_1852:				; CODE XREF: _des3_encrypt+30Aj
		cmp	[esp+6Ch+var_48], ecx
		jbe	loc_191A
		mov	eax, [esp+6Ch+var_48]
		shl	eax, 1
		sub	eax, ecx
		mov	edx, [esp+6Ch+var_30]
		mov	[edx], eax

loc_186A:				; DATA XREF: .debug_loc:off_6FD2o
		mov	edx, ecx
		lea	ebx, [esp+6Ch+var_28]
		mov	eax, ebx
		sub	eax, ebp
		mov	esi, [esp+6Ch+var_48]

loc_1878:				; CODE XREF: _des3_encrypt+257j
		mov	dl, [edi+edx]
		xor	[eax+ebp], dl
		inc	ebp
		mov	edx, ebp
		cmp	esi, ebp
		ja	short loc_1878

loc_1885:				; CODE XREF: _des3_encrypt+2E9j
					; DATA XREF: .debug_loc:00006E82o ...
		mov	esi, [esp+6Ch+var_34]
		add	esi, ecx
		mov	eax, [esp+6Ch+var_38]
		add	eax, 0Ch
		mov	[esp+6Ch+var_6C], 0
		mov	ecx, esi
		mov	edx, ebx
		call	_des_ecb_crypt

loc_18A2:				; DATA XREF: .debug_info:00003D15o
		mov	eax, [esp+6Ch+var_38]
		add	eax, 10Ch
		mov	[esp+6Ch+var_6C], 1
		mov	ecx, ebx
		mov	edx, esi

loc_18B6:				; DATA XREF: .debug_info:00003CA6o
		call	_des_ecb_crypt

loc_18BB:				; DATA XREF: .debug_info:00003D3Eo
		mov	eax, [esp+6Ch+var_38]
		add	eax, 20Ch
		mov	[esp+6Ch+var_6C], 0
		mov	ecx, esi
		mov	edx, ebx
		call	_des_ecb_crypt

loc_18D4:				; DATA XREF: .debug_info:00003D68o
					; .debug_ranges:000071E8o ...
		jmp	loc_16AE
; ---------------------------------------------------------------------------

loc_18D9:				; CODE XREF: _des3_encrypt+14Cj
					; DATA XREF: .debug_ranges:0000719Co ...
		mov	eax, [esp+6Ch+var_48]
		shl	eax, 1

loc_18DF:				; DATA XREF: .debug_info:00003CCEo
		sub	eax, ecx
		mov	edx, [esp+6Ch+var_30]
		mov	[edx], eax

loc_18E7:				; DATA XREF: .debug_loc:off_6E6Bo
		mov	[esp+6Ch+var_28], 0
		mov	[esp+6Ch+var_24], 0
		mov	eax, ecx
		lea	ebx, [esp+6Ch+var_28]
		mov	edx, ebx
		sub	edx, ebp
		mov	esi, [esp+6Ch+var_48]
		lea	esi, [esi+0]

loc_1908:				; CODE XREF: _des3_encrypt+2E7j
					; DATA XREF: .debug_info:00003CF5o
		mov	al, [edi+eax]
		mov	[edx+ebp], al
		inc	ebp
		mov	eax, ebp
		cmp	esi, ebp
		ja	short loc_1908
		jmp	loc_1885
; ---------------------------------------------------------------------------

loc_191A:				; CODE XREF: _des3_encrypt+22Aj
					; DATA XREF: .debug_loc:00006E6Fo ...
		mov	edx, [esp+6Ch+var_48]
		mov	eax, [esp+6Ch+var_30]
		mov	[eax], edx
		jmp	loc_16AE
; ---------------------------------------------------------------------------

loc_1929:				; CODE XREF: _des3_encrypt+B1j
					; DATA XREF: .debug_loc:00006F14o ...
		xor	ecx, ecx
		xor	ebp, ebp

loc_192D:				; DATA XREF: .debug_info:00003D1Do
		jmp	loc_1774
; ---------------------------------------------------------------------------

loc_1932:				; CODE XREF: _des3_encrypt+17Bj
					; DATA XREF: .debug_ranges:000071A8o ...
		xor	ecx, ecx
		xor	ebp, ebp
		jmp	loc_1852
; ---------------------------------------------------------------------------

loc_193B:				; CODE XREF: _des3_encrypt+8Ej
					; DATA XREF: .debug_ranges:000071F8o ...
		call	___stack_chk_fail
_des3_encrypt	endp


; =============== S U B	R O U T	I N E =======================================


_des3_set_iv	proc near		; DATA XREF: .data:00001A7Co
					; .debug_info:00003A8Fo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebx

loc_1941:				; DATA XREF: .debug_loc:00006FE9o
		sub	esp, 28h
		mov	eax, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_1958:				; DATA XREF: .debug_info:00003DF2o
					; .debug_info:00003D46o
		cmp	[esp+2Ch+arg_8], 8
		jz	short loc_198C

loc_195F:				; DATA XREF: .debug_info:00003DF6o
					; .debug_info:00003E0Do ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_19B0
		mov	[esp+2Ch+arg_8], offset	aLen8 ;	"len ==	8"
		mov	[esp+2Ch+arg_4], offset	___PRETTY_FUNCTION___7109 ; "des3_set_iv"
		mov	[esp+2Ch+arg_0], 0

loc_1983:				; DATA XREF: .debug_info:00003C44o
					; .debug_ranges:00007230o ...
		add	esp, 28h
		pop	ebx

loc_1987:				; DATA XREF: .debug_ranges:00007234o
					; .debug_ranges:0000724Co
		jmp	_g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_198C:				; CODE XREF: _des3_set_iv+1Dj
					; DATA XREF: .debug_info:00003E41o ...
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_1994:				; DATA XREF: .debug_info:00003E4Do
					; .debug_loc:off_7059o
		mov	edx, [ebx]
		mov	[eax+4], edx

loc_1999:				; DATA XREF: .debug_info:00003D98o
		mov	edx, [ebx+4]
		mov	[eax+8], edx
		mov	edx, [esp+2Ch+var_10]

loc_19A3:				; DATA XREF: .debug_info:00003A98o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_19B0
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_19B0:				; CODE XREF: _des3_set_iv+29j
					; _des3_set_iv+69j
					; DATA XREF: ...
		call	___stack_chk_fail
_des3_set_iv	endp

; ---------------------------------------------------------------------------
unk_19B5	db  8Dh	; ç		; DATA XREF: .debug_info:00003DB8o
					; .debug_info:00003E63o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_des_cipher_get_ops
_purple_des_cipher_get_ops proc	near	; DATA XREF: .debug_info:00003E90o
					; .debug_loc:off_708Co

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_19BB:				; DATA XREF: .debug_loc:00007090o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _DESOps
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_19DB
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_19DB:				; CODE XREF: _purple_des_cipher_get_ops+1Dj
		call	___stack_chk_fail
_purple_des_cipher_get_ops endp


; =============== S U B	R O U T	I N E =======================================


		public _purple_des3_cipher_get_ops
_purple_des3_cipher_get_ops proc near	; DATA XREF: .debug_info:00003E94o
					; .debug_info:00003EA2o ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_19E3:				; DATA XREF: .debug_loc:000070C8o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _DES3Ops
		mov	edx, [esp+1Ch+var_10]

loc_19F7:				; DATA XREF: .debug_info:00003DFAo
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_1A03
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_1A03:				; CODE XREF: _purple_des3_cipher_get_ops+1Dj
					; DATA XREF: .debug_info:0000246Eo ...
		call	___stack_chk_fail
_purple_des3_cipher_get_ops endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 1A08h
_DESOps		dd 2 dup(0)		; DATA XREF: _purple_des_cipher_get_ops+Eo
					; .debug_info:00004056o ...
		dd offset _des_init
		align 8
		dd offset _des_uninit
		dd 3 dup(0)
		dd offset _des_encrypt
		dd offset _des_decrypt
		dd 2 dup(0)
		dd offset _des_set_key
dword_1A3C	dd 0Bh dup(0)		; DATA XREF: .debug_info:00003E18o
_DES3Ops	dd 2 dup(0)		; DATA XREF: _purple_des3_cipher_get_ops+Eo
					; .debug_info:0000406Co
		dd offset _des3_init
		align 8
		dd offset _des3_uninit
		dd offset _des3_set_iv
		dd 2 dup(0)
		dd offset _des3_encrypt
		dd offset _des3_decrypt
		dd 2 dup(0)
		dd offset _des3_set_key
		align 10h
		dd offset _des3_set_batch
		dd offset _des3_get_batch
		dd 8 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 1ACCh
aCiphersDes_c	db 'ciphers/des.c',0    ; DATA XREF: _des3_decrypt+71o
					; _des3_encrypt+5Eo ...
		align 4
aFileSLineDSSho	db 'file %s: line %d (%s): should not be reached',0
					; DATA XREF: _des3_decrypt+79o
					; _des3_encrypt+66o ...
aLen8		db 'len == 8',0         ; DATA XREF: _des3_set_iv+2Bo
		align 4
		dd 6 dup(0)
_leftkey_swap	dd 0			; DATA XREF: _des_key_schedule+7Br
					; _des_key_schedule+92r ...
		dd 1, 100h, 101h, 10000h, 10001h, 10100h, 10101h, 1000000h
		dd 1000001h, 1000100h, 1000101h, 1010000h, 1010001h, 1010100h
		dd 1010101h
_rightkey_swap	dd 0			; DATA XREF: _des_key_schedule:loc_115r
					; _des_key_schedule+124r ...
		dd 1000000h, 10000h, 1010000h, 100h, 1000100h, 10100h
		dd 1010100h, 1,	1000001h, 10001h, 1010001h, 101h, 1000101h
		dd 10101h, 1010101h
_encrypt_rotate_tab db 1		; DATA XREF: _des_key_schedule+1AFr
					; .debug_info:0000403Co
		db 1, 2	dup(2)
dword_1BB0	dd 2020202h, 2020201h, 1020202h, 4 dup(0) ; DATA XREF: .debug_info:00003FECo
					; .debug_info:0000400Co
_sbox8		dd 8000820h		; DATA XREF: _des_ecb_crypt+D4r
					; _des_ecb_crypt+156r ...
		dd offset loc_7FF+1
		dd 20000h, 8020820h, 8000000h, 8000820h, 20h, 8000000h
		dd 20020h, 8020000h, 8020820h, 20800h, 8020800h, 20820h
		dd 800h, 20h, 8020000h,	8000020h, 8000800h, 820h, 20800h
		dd 20020h, 8020020h, 8020800h, 820h, 2 dup(0)
dword_1C38	dd 8020020h, 8000020h, 8000800h, 20820h, 20000h, 20820h
		dd 20000h, 8020800h, 800h, 20h,	8020020h, 800h,	20820h
		dd 8000800h, 20h, 8000020h, 8020000h, 8020020h,	8000000h
		dd 20000h, 8000820h, 0
		dd 8020820h, 20020h, 8000020h, 8020000h, 8000800h, 8000820h
		dd 0
dword_1CAC	dd 8020820h, 2 dup(20800h), 2 dup(820h), 20020h, 8000000h
					; DATA XREF: .debug_info:0000331Co
					; .debug_info:000040B0o
		dd 8020800h
_sbox6		dd 10000008h		; DATA XREF: _des_ecb_crypt+EFr
					; _des_ecb_crypt:loc_5A6r ...
dword_1CD0	dd 10200000h, 2000h, 10202008h,	10200000h, 8, 10202008h
		dd 200000h, 10002000h, 202008h,	200000h, 10000008h, 200008h
		dd 10002000h, 10000000h, 2008h,	0
dword_1D10	dd 200008h, 10002008h, 2000h, 202000h, 10002008h, 8, 2 dup(10200008h)
					; DATA XREF: .debug_info:0000364Fo
					; .debug_info:00003B23o ...
		dd 0
dword_1D34	dd 202008h, 10202000h, 2008h, 202000h, 10202000h, 10000000h
					; DATA XREF: .debug_info:00004130o
		dd 10002000h, 8, 10200008h, 202000h, 10202008h,	200000h
		dd 2008h, 10000008h, 200000h, 10002000h, 10000000h, 2008h
		dd 10000008h, 10202008h, 202000h, 10200000h, 202008h, 10202000h
		dd 0
		dd 10200008h, 8, 2000h,	10200000h, 202008h, 2000h, 200008h
		dd 10002008h, 0
		dd 10202000h, 10000000h, 200008h, 10002008h
_sbox4		dd 80401000h		; DATA XREF: _des_ecb_crypt+FEr
					; _des_ecb_crypt+17Dr ...
		dd 2 dup(80001040h), 40h, 401040h, 80400040h, 80400000h
		dd 80001000h, 0
		dd 2 dup(401000h), 80401040h, 80000040h, 0
a@@:
		unicode	0, <@@>,0
a@a		db '@Ä',0
		db 2 dup(0), 80h
		dd offset loc_FFD+3
		dd 400000h, 80401000h, 40h, 400000h, 80001000h,	1040h
		dd 80400040h, 80000000h, 1040h,	400040h, 1000h,	401040h
		dd 80401040h, 80000040h, 400040h, 80400000h, 401000h, 80401040h
		dd 80000040h, 2	dup(0)
		dd 401000h, 1040h, 400040h, 80400040h, 80000000h, 80401000h
		dd 2 dup(80001040h), 40h, 80401040h, 80000040h,	80000000h
		dd 1000h, 80400000h, 80001000h,	401040h, 80400040h, 80001000h
		dd 1040h, 400000h, 80401000h, 40h, 400000h, 1000h, 401040h
_sbox2		dd 40084010h		; DATA XREF: _des_ecb_crypt+10Br
					; _des_ecb_crypt+18Ar ...
		dd 40004000h, 4000h, 84010h, 80000h, 10h, 40080010h, 40004010h
		dd 40000010h, 40084010h, 40084000h, 40000000h, 40004000h
		dd 80000h, 10h,	40080010h, 84000h, 80010h, 40004010h, 0
		dd 40000000h, 4000h, 84010h, 40080000h,	80010h,	40000010h
		dd 0
		dd 84000h, 4010h, 40084000h, 40080000h,	4010h, 0
		dd 84010h, 40080010h, 80000h, 40004010h, 40080000h, 40084000h
		dd 4000h, 40080000h, 40004000h,	10h, 40084010h,	84010h
		dd 10h,	4000h, 40000000h, 4010h, 40084000h, 80000h, 40000010h
		dd 80010h, 40004010h, 40000010h, 80010h, 84000h, 0
		dd 40004000h, 4010h, 40000000h,	40080010h, 40084010h, 84000h
_sbox7		dd 100000h		; DATA XREF: _des_ecb_crypt+E0r
					; _des_ecb_crypt:loc_595r ...
		dd 2100001h, 2000401h, 0
		dd offset loc_400
		dd 2000401h, 100401h, 2100400h,	2100401h, 100000h, 0
		dd 2000001h, 1,	2000000h, 2100001h, 401h, 2000400h, 100401h
		dd 100001h, 2000400h, 2000001h,	2100000h, 2100400h, 100001h
		dd 2100000h, 400h, 401h, 2100401h, 100400h, 1, 2000000h
		dd 100400h, 2000000h, 100400h, 100000h,	2 dup(2000401h)
		dd 2 dup(2100001h), 1, 100001h,	2000000h, 2000400h, 100000h
		dd 2100400h, 401h, 100401h, 2100400h, 401h, 2000001h, 2100401h
		dd 2100000h, 100400h, 0
		dd 1, 2100401h,	0
		dd 100401h, 2100000h, 400h, 2000001h, 2000400h,	400h, 100001h
_sbox5		dd 80h			; DATA XREF: _des_ecb_crypt+11Ar
					; _des_ecb_crypt+199r ...
		dd 1040080h, 1040000h, 21000080h, 40000h, 80h, 20000000h
		dd 1040000h, 20040080h,	40000h,	1000080h, 20040080h, 21000080h
		dd 21040000h, 40080h, 20000000h, 1000000h, 2 dup(20040000h)
		dd 0
		dd 20000080h, 2	dup(21040080h),	1000080h, 21040000h, 20000080h
		dd 0
		dd 21000000h, 1040080h,	1000000h, 21000000h, 40080h, 40000h
		dd 21000080h, 80h, 1000000h, 20000000h,	1040000h, 21000080h
		dd 20040080h, 1000080h,	20000000h, 21040000h, 1040080h
		dd 20040080h, 80h, 1000000h, 21040000h,	21040080h, 40080h
		dd 21000000h, 21040080h, 1040000h, 0
		dd 20040000h, 21000000h, 40080h, 1000080h, 20000080h, 40000h
		dd 0
		dd 20040000h, 1040080h,	20000080h
_sbox3		dd 104h			; DATA XREF: _des_ecb_crypt+129r
					; _des_ecb_crypt+1A8r ...
		dd 4010100h, 0
		dd 4010004h, 4000100h, 0
		dd 10104h, 4000100h, 10004h, 2 dup(4000004h), 10000h, 4010104h
		dd 10004h, 4010000h, 104h, 4000000h, 4,	4010100h, 100h
		dd 10100h, 4010000h, 4010004h, 10104h, 4000104h, 10100h
		dd 10000h, 4000104h, 4,	4010104h, 100h,	4000000h, 4010100h
		dd 4000000h, 10004h, 104h, 10000h, 4010100h, 4000100h
		dd 0
		dd offset loc_100
		dd 10004h, 4010104h, 4000100h, 4000004h, 100h, 0
		dd 4010004h, 4000104h, 10000h, 4000000h, 4010104h, 4, 10104h
		dd 10100h, 4000004h, 4010000h, 4000104h, 104h, 4010000h
		dd 10104h, 4, 4010004h,	10100h
_sbox1		dd 808200h		; DATA XREF: _des_ecb_crypt+136r
					; _des_ecb_crypt+1B5r ...
		dd 0
		dd 8000h, 808202h, 808002h, 8202h, 2, 8000h, 200h, 808200h
		dd 808202h, 200h, 800202h, 808002h, 800000h, 2,	202h, 2	dup(800200h)
		dd 2 dup(8200h), 2 dup(808000h), 800202h, 8002h, 2 dup(800002h)
		dd 8002h, 0
		dd offset loc_202
		dd 8202h, 800000h, 8000h, 808202h, 2, 808000h, 808200h
		dd 2 dup(800000h), 200h, 808002h, 8000h, 8200h,	800002h
		dd 200h, 2, 800202h, 8202h, 808202h, 8002h, 808000h, 800202h
		dd 800002h, 202h, 8202h, 808200h, 202h,	2 dup(800200h)
		dd 0
		dd 8002h, 8200h, 0
		dd 808002h
___PRETTY_FUNCTION___7091 db 'des3_decrypt',0 ; DATA XREF: _des3_decrypt:loc_12DDo
					; .debug_info:00003600o ...
___PRETTY_FUNCTION___7041 db 'des3_encrypt',0 ; DATA XREF: _des3_encrypt:loc_167Ao
					; .debug_info:00003AD4o ...
___PRETTY_FUNCTION___7109 db 'des3_set_iv',0 ; DATA XREF: _des3_set_iv+33o
					; .debug_info:00003DEDo ...
		align 4
		dd 6 dup(0)
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 240Ch
off_240C	dd offset dword_1D34+40h ; DATA	XREF: .debug_aranges:00007102o
		db 2, 0
		dd offset dword_4184
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 70696301h, 73726568h, 7365642Fh, 4300632Eh, 775C5C3Ah
		dd 736B726Fh, 65636170h, 69705C5Ch, 6E696764h, 7665642Dh
		dd 5C5C6C65h, 67646970h, 322D6E69h, 2E30312Eh, 5C5C3131h
		dd 7062696Ch, 6C707275h
		db 65h,	0
		dd offset _des_key_schedule
		dd offset loc_1A03+5
		dd offset off_725C
		dw 402h
		db    5
		db 69h,	6Eh, 74h
		db    0
		db 3, 73h, 69h
aZe_t		db 'ze_t',0
		db 2, 0D5h, 7Fh
		db    0
		db 2 dup(0), 2
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 2
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 1, 6
aSignedChar	db 'signed char',0
		db    3
aGuint8		db 'guint8',0
		db    3
		db 20h,	0C2h, 0
		db    0
		align 2
		dw 102h
aUnsignedChar	db 8,'unsigned char',0
		db 2
		db    2
		db 5, 73h, 68h
aOrtInt		db 'ort int',0
		db    3
aGuint32	db 'guint32',0
		db 3, 27h, 7Fh
		db    0
		db 2 dup(0), 2
		db    8
		db 5, 6Ch, 6Fh
aNgLongInt	db 'ng long int',0
		db    2
aLongLongUnsign	db 8,7,'long long unsigned int',0
		dw 6703h
aSize		db 'size',0
		db 3, 5Ah, 7Fh
		dd 2000000h, 69730704h,	7974657Ah, 2006570h, 68630601h
		dd 2007261h, 6F640408h,	656C6275h, 2040400h, 6F6C0504h
		dd 6920676Eh, 300746Eh,	61686367h, 2D040072h, 133h, 6E696703h
		dd 30040074h, 6Ah, 6F626703h, 61656C6Fh, 3104006Eh, 160h
		dd 63756703h, 726168h, 0C23304h, 4020000h
aLongUnsignedIn	db 7,'long unsigned int',0
		db 2
		db    4
		db 4, 66h, 6Ch
		db  6Fh	; o
		db 61h,	74h, 0
		db    3
aGpointer	db 'gpointer',0
		dw 4C04h
		dd offset loc_144+1
		db    5
		db 4, 0BEh, 1
		db    0
		align 2
		dw 5306h
		db    1
		db 2 dup(0), 5
		db    4
		dd offset loc_B3+1
		db 7, 4, 5
		db  3Bh	; ;
		dd offset loc_28C+3
aG_log_flag_rec	db 8,'G_LOG_FLAG_RECURSION',0
		db 1
aG_log_flag_fat	db 8,'G_LOG_FLAG_FATAL',0
		dw 802h
aG_log_level_er	db 'G_LOG_LEVEL_ERROR',0
		dw 804h
aG_log_level_cr	db 'G_LOG_LEVEL_CRITICAL',0
aG_log_level_wa	db 8,8,'G_LOG_LEVEL_WARNING',0
		db 10h
aG_log_level_me	db 8,'G_LOG_LEVEL_MESSAGE',0
aG_log_level_in	db ' ',8,'G_LOG_LEVEL_INFO',0
		db '¿',0
aG_log_level_de	db 8,'G_LOG_LEVEL_DEBUG',0
		db 80h,	1, 8
aG_log_level_ma	db 'G_LOG_LEVEL_MASK',0
		db '|',0
		db 3
aGloglevelflags	db 'GLogLevelFlags',0
		db 5
		db  49h	; I
		dd offset loc_1C9
		db 2, 0Ch, 4
aLongDouble	db 'long double',0
		db    3
aPurplecipherop	db 'PurpleCipherOps',0
		db 6, 26h, 0CBh
		db    2
		db 2 dup(0), 9
a_purpleciphero	db '_PurpleCipherOps',0
		db 48h,	6, 4Dh
		dd offset loc_44F+1
aSet_option	db 0Ah
		db 'set_option',0
		db    6
		db 4Fh,	19h, 5
		db    0
		align 2
		dw 2302h
		db    0
aGet_option	db 0Ah
		db 'get_option',0
		db 6, 52h, 34h
		db    5
		db 2 dup(0), 2
		db  23h	; #
		db 4, 0Ah, 69h
		db  6Eh	; n
		db 69h,	74h, 0
		db    6
		db 55h,	4Bh, 5
		db    0
		align 2
		dw 2302h
aReset		db 8,0Ah
		db 'reset',0
		db    6
		db 58h,	4Bh, 5
		db    0
		align 2
		dw 2302h
		db  0Ch
aUninit		db 0Ah
		db 'uninit',0
		db 6, 5Bh, 5Dh
		db    5
		db 2 dup(0), 2
		db  23h	; #
		db 10h,	0Ah, 73h
aEt_iv		db 'et_iv',0
		dw 5E06h
		dd offset loc_57E+1
		db    2
		db 23h,	14h, 0Ah
aAppend		db 'append',0
		db 6
		db  61h	; a
		dd offset loc_5A6
		db 2, 23h, 18h
aDigest		db 0Ah
		db 'digest',0
		db    6
		db 64h,	0D1h, 5
		db    0
		align 2
		dw 2302h
		db  1Ch
aEncrypt	db 0Ah
		db 'encrypt',0
		dw 6706h
		dd offset loc_5FB
		db    2
aDecrypt	db '# ',0Ah
		db 'decrypt',0
		db    6
		db 6Ah,	0FBh, 5
		db    0
		align 2
		dw 2302h
aSet_salt	db '$',0Ah
		db 'set_salt',0
		db 6
		db  6Dh	; m
		dd offset loc_60D+5
		db 2, 23h, 28h
aGet_salt_size	db 0Ah
		db 'get_salt_size',0
		db 6
		db  70h	; p
		dd offset loc_625+3
		db 2, 23h, 2Ch
aSet_key	db 0Ah
		db 'set_key',0
		db 6, 73h, 3Fh
		db    6
		db 2 dup(0), 2
a0Get_key_size	db '#0',0Ah
		db 'get_key_size',0
		db    6
		db 76h,	28h, 6
		db    0
		align 2
		dw 2302h
a4Set_batch_mod	db '4',0Ah
		db 'set_batch_mode',0
		db 6, 79h, 56h
		dd 2000006h
a8Get_batch_mod	db '#8',0Ah
		db 'get_batch_mode',0
		dw 7C06h
		dd offset loc_66C
		db    2
aGet_block_size	db '#<',0Ah
		db 'get_block_size',0
		db 6
		db  7Fh	; 
		dd offset loc_625+3
		db 2, 23h, 40h
aSet_key_with_l	db 0Ah
		db 'set_key_with_len',0
		dw 8206h
		dd offset loc_5A6
		db    2
		db 23h,	44h, 0
		db    3
aPurplecipherco	db 'PurpleCipherContext',0
		db 6, 27h, 6Bh
		db    4
		db 2 dup(0), 0Bh
a_purplecipherc	db '_PurpleCipherContext',0
		db 1, 0Ch, 5Fh
aPurplecipherba	db 'PurpleCipherBatchMode',0
		dw 604h
		db  2Ch	; ,
		dd offset loc_4E0
aPurple_cipher_	db 8,'PURPLE_CIPHER_BATCH_MODE_ECB',0
		align 4
aPurple_ciphe_0	db 8,'PURPLE_CIPHER_BATCH_MODE_CBC',0
		dw 1
		db    3
aPurplecipher_0	db 'PurpleCipherBatchMode',0
		db 6
		dd 4822Fh, 13010D00h, 0E000005h, 513h, 1B80Eh, 1450E00h
		dd 5000000h, 45004h, 0FD040500h, 0F000004h, 14501h, 53400h
		dd 5130E00h, 0B80E0000h, 1, 51F0405h, 10D0000h,	54Bh, 5130Eh
		dd 1450E00h, 5000000h, 53A04h, 5D010D00h, 0E000005h, 513h
		dd 51040500h, 0D000005h, 57901h, 5130E00h, 790E0000h, 0E000005h
		dd 71h,	7C040500h, 5000001h, 56304h, 9B010D00h,	0E000005h
		dd 513h, 59B0Eh, 710E00h, 5000000h, 5A104h, 17C0600h, 4050000h
		dd 585h, 16C010Fh, 5CB0000h, 130E0000h,	0E000005h, 71h
		dd 5790Eh, 5CB0E00h, 5000000h, 7104h, 0AC040500h, 0F000005h
		dd 6A01h, 5FB00h, 5130E00h, 9B0E0000h, 0E000005h, 71h
		dd 5790Eh, 5CB0E00h, 5000000h, 5D704h, 12010D00h, 0E000006h
		dd 513h, 5790Eh, 4050000h, 601h, 71010Fh, 6280000h, 130E0000h
		dd 5, 6180405h,	10D0000h, 63Fh,	5130Eh,	59B0E00h, 5000000h
		dd 62E04h, 56010D00h, 0E000006h, 513h, 4E00Eh, 4050000h
		dd 645h, 4E0010Fh, 66C0000h, 130E0000h,	5, 65C0405h, 5F100000h
		dd 5F736564h, 787463h, 29010100h, 6BAh,	636E650Ah, 74707972h
		dd 6275735Fh, 7379656Bh, 0BA2B0100h, 2000006h, 640A0023h
		dd 79726365h, 735F7470h, 656B6275h, 1007379h, 6BA2Ch, 80230300h
		dd 0E0110001h, 0CA000000h, 12000006h, 127h, 5F13001Fh
		dd 33736564h, 7874635Fh, 1030C00h, 72F01E7h, 6D140000h
		dd 65646Fh, 0E001E901h,	2000004h, 69140023h, 0EA010076h
		dd 72F01h, 4230200h, 79656B14h,	0EC010031h, 67201h, 0C230200h
		dd 79656B14h, 0EE010032h, 67201h, 8C230300h, 656B1402h
		dd 1003379h, 67201F0h, 23030000h, 1100048Ch, 17Ch, 73Fh
		dd 12712h, 15000700h
		dd offset aDes3_decrypt	; "des3_decrypt"
		dd 102ED01h, 160h, 7A801h
		db 0, 16h
		dd offset aContext	; "context"
		dw 0ED01h
		dd 51302h
		db 0, 16h
		dd offset aData		; "data"
		dw 0ED01h
		dd 59B02h, 656C1700h, 0EE01006Eh, 7102h
		db 0, 16h
		dd offset aOutput	; "output"
		dw 0EE01h
		dd 57902h
		db 0, 16h
		dd offset aOutlen	; "outlen"
		dw 0EE01h
		dd 5CB02h, 74631800h, 0F0010078h, 7A802h
		db 0, 19h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset loc_7BE
		db 1
		dd offset aDes3_decrypt	; "des3_decrypt"
		align 4
		dd 6CA0405h, 33110000h,	0BE000001h, 12000007h, 127h, 0AE06000Ch
		dd 15000007h
		dd offset aDes3_encrypt	; "des3_encrypt"
		dd 1027301h, 160h, 82C01h
		db 0, 16h
		dd offset aContext	; "context"
		dw 7301h
		dd 51302h
		db 0, 16h
		dd offset aData		; "data"
		dw 7301h
		dd 59B02h, 656C1700h, 7401006Eh, 7102h
		db 0, 16h
		dd offset aOutput	; "output"
		dw 7401h
		dd 57902h
		db 0, 16h
		dd offset aOutlen	; "outlen"
		dw 7401h
		dd 5CB02h, 74631800h, 76010078h, 7A802h
		db 0, 19h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset loc_82A+2
		db 1
		dd offset aDes3_encrypt	; "des3_encrypt"
		align 4
		dd 7AE06h
		db 0, 1Ah
		dd offset aDes3_set_iv	; "des3_set_iv"
		dw 0E01h
		dd 97010103h, 16000008h
		dd offset aContext	; "context"
		dd 13030E01h, 17000005h, 1007669h, 579030Eh, 6C170000h
		dd 1006E65h, 71030Eh, 63180000h, 1007874h, 7A80310h
		db 2 dup(0), 19h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset loc_8A7
		db 1
		dd offset aDes3_set_iv	; "des3_set_iv"
		dd 675F181Bh, 6F6F625Fh, 6E61656Ch, 7261765Fh, 1201005Fh
		dd 6A03h, 11000000h, 133h, 8A7h, 12712h, 6000B00h, 897h
		dd 7365641Ch, 79656B5Fh, 6863735Fh, 6C756465h, 0FD010065h
		db 1
		dd offset _des_key_schedule
		dd offset unk_436
		dd offset dword_44FC
		db 1, 43h, 9
		dd 721D0000h, 656B7761h, 0FD010079h, 943h
		dd offset word_4596
		dd 6275731Dh, 79656Bh, 94EFD01h
		db 2 dup(0)
		dd offset byte_45B7
		dw 6C1Eh
		dd 746665h, 0E0FF01h
		db 2 dup(0)
		dd offset off_45F8
		dw 721Eh
aIght		db 'ight',0
		db 1, 0FFh, 0E0h
		db 3 dup(0)
		dd offset off_480E
		db 1Eh
aWork		db 'work',0
		db 1, 0FFh, 0E0h
		db 3 dup(0)
		dd offset off_4A33
		db 1Fh
aRound		db 'round',0
		dw 1
		dd offset byte_6A01
		db 0
		dd offset off_4D7A
		db 20h
		dd offset unk_436
		dd offset dword_1C38+2Ch
		dw 500h
		dd 94904h, 0B40600h, 4050000h, 0E0h, 73656421h,	6263655Fh
		dd 7972635Fh, 1007470h,	6A010165h
		db 3 dup(0)
		dd offset _des_ecb_crypt
		dd offset unk_D9F
		dd offset off_4DB2
		db 1
		dd offset loc_A05+6
aCtx		db '"ctx',0
		db 1, 65h, 1
		dd offset loc_A05+6
		dd offset off_4E4C
aFrom		db '"from',0
		dw 6501h
		dd 94301h
		db 0
		dd offset off_4E6D
		db 22h,	74h, 6Fh
		dd 1650100h, 1C3h
		dd offset off_4E8E
aMode		db '#mode',0
		dw 6501h
		dd offset byte_6A01
		dd 910200h, 66656C1Fh, 67010074h, 0E001h
		db 0
		dd offset off_4EAD
		db 1Fh,	72h, 69h
		dd 746867h, 0E0016701h
		db 3 dup(0)
		dd offset off_5222
		db 1Fh
aWork_0		db 'work',0
		db 1, 67h, 1
		dd offset loc_DF+1
		dd offset off_553C
		dd 79656B1Fh, 68010073h, 94E01h
		db 0
		dd offset off_60BB
		db 20h
		dd offset unk_D9F
		dd offset dword_1C38+2Ch
		dw 500h
		dd 67204h, 65642100h, 675F3373h, 625F7465h, 68637461h
		dd 3060100h, 4E001h
		db 0
		dd offset _des3_get_batch
		dd offset unk_DD1
		dd offset off_627F
		db 1, 79h, 0Ah
		db 2 dup(0), 24h
		dd offset aContext	; "context"
		db 1
		dd 5130306h, 91020000h,	74631F00h, 8010078h, 7A803h
		db 0
		dd offset off_62B7
		db 25h
		dd offset loc_DBA
		dd offset dword_1C38+42h
		dd offset loc_A6F
		dw 226h
		dd 91030074h, 20000600h
		dd offset unk_DD1
		dd offset dword_1C38+2Ch
		dd 65642700h, 735F3373h, 625F7465h, 68637461h, 2FE0100h
		db 1
		dd offset _des3_set_batch
		dd offset unk_E0B
		dd offset off_62CA
		db 1, 0EDh, 0Ah
		db 2 dup(0), 24h
		dd offset aContext	; "context"
		db 1
		dd 51302FEh, 91020000h,	6F6D2300h, 1006564h, 4E002FEh
		dd 91020000h, 74631F04h, 10078h, 7A803h
		db 0
		dd offset off_631A
		db 25h
		dd offset loc_DF3
		dd offset dword_1C38+42h
		dd offset loc_AE3
		dw 226h
		dd 91030074h, 20000600h
		dd offset unk_E0B
		dd offset dword_1C38+2Ch
		dd 65642700h, 735F3373h, 6B5F7465h, 1007965h
		db 0F9h, 2 dup(1)
		dd offset _des3_set_key
		dd offset unk_EC9
		dd offset off_632D
		db 1
		dd offset loc_BB6+6
		db 24h
		dd offset aContext	; "context"
		db 1, 0F9h, 1
		dd offset loc_513
		dd 23009102h, 79656Bh, 9B01F901h, 2000005h, 631F0491h
		dd 1007874h, 7A801FBh
		db 2 dup(0)
		dd offset off_6395
		dw 691Fh
		dd 1FC0100h, 6Ah
		dd offset off_63B3
		db 25h
		dd offset loc_E2C
		dd offset dword_1C38+42h
		dd offset loc_B62
		db 26h,	2, 74h
		dd 910300h
		db 6, 0, 25h
		dd offset loc_E38
		dd offset loc_8AC
		dd offset loc_B7A+2
		db 26h
		dd 76025001h, 52012600h, 0C7302h
		db 25h
		dd offset loc_E46
		dd offset loc_8AC
		dd offset loc_B97
		db 26h,	1, 50h
		dd 26087602h, 73035201h, 2500028Ch
		dd offset loc_E54
		dd offset loc_8AC
		dd offset loc_BB0+2
		dd 2500126h, 1261076h, 8C730352h
		db 4, 0, 20h
		dd offset unk_EC9
		dd offset dword_1C38+2Ch
		align 4
aDes_set_key	db 27h,'des_set_key',0
		db 1, 51h, 1
		db 1
		dd offset _des_set_key
		dd offset unk_F32
		dd offset off_63D2
		db 1, 54h, 0Ch
		db 2 dup(0), 24h
		dd offset aContext	; "context"
		db 1
		dd 5130151h, 91020000h,	656B2300h, 51010079h, 59B01h, 4910200h
		dd 7874631Fh, 1530100h,	0A0Bh
		dd offset off_643A
		dd 100691Fh, 6A0154h
		db 2 dup(0)
		dd offset off_646E
		db 25h
		dd offset loc_EEC
		dd offset dword_1C38+42h
		dd offset loc_C2F+1
		db 26h
		dd 3007402h, 60091h
		db 25h
		dd offset loc_EF7
		dd offset loc_8AC
		dd offset loc_C44+6
		db 26h,	1, 50h
		dd 26007302h, 76025201h
		db 2 dup(0), 20h
		dd offset unk_F32
		dd offset dword_1C38+2Ch
		align 10h
aDes_decrypt	db '!des_decrypt',0
		db 1, 9Eh, 1
		dd 16001h
		db 0
		dd offset _des_decrypt
		dd offset unk_104B
		dd offset off_648D
		db 1, 77h, 0Dh
		db 2 dup(0), 24h
		dd offset aContext	; "context"
		db 1
		dd 513019Eh, 91020000h
		db 0, 24h
		dd offset aData		; "data"
		dw 9E01h
		dd 59B01h, 4910200h, 6E656C23h,	19F0100h, 71h, 24089102h
		dd offset aOutput	; "output"
		dd 79019F01h, 2000005h
		db 91h,	0Ch, 24h
		dd offset aOutlen	; "outlen"
		db 1
		dd 5CB019Fh, 91020000h
		db 10h,	28h
		dd offset aOffset	; "offset"
		dw 0A101h
		dd offset byte_6A01
		db 0
		dd offset off_6527
		db 1Fh,	69h, 0
		dd 6A01A201h
		db 3 dup(0)
		dd offset off_655D
		db 1Fh
		dd 706D74h, 6A01A301h
		db 3 dup(0)
		dd offset off_657D
aBuf		db ')buf',0
		dd 7701A401h, 200000Dh
		db 91h,	54h, 25h
		dd offset loc_FAC
		dd offset dword_1C38+42h
		dd offset loc_D14+3
		db 26h
		dd 2007402h, 25000077h
		dd offset loc_FBC
		dd offset loc_953+1
		dd offset loc_D36+1
		dd 2520126h, 1260076h, 750251h,	740226h, 25003101h
		dd offset loc_100F
		dd offset dword_1C38+42h
		dd offset loc_D4D
		dd 740226h, 6489103h
		db 0, 25h
		dd offset loc_101F
		dd offset loc_953+1
		dd offset loc_D6B+2
		dw 126h
		dd 760252h, 2510126h, 2260073h,	31010074h
		db 0, 20h
		dd offset unk_104B
		dd offset dword_1C38+2Ch
		dw 1100h
		dd offset loc_B3+1
		dd offset loc_D86+1
		dd 12712h, 21000700h, 5F736564h, 72636E65h, 747079h, 1017F01h
		dd 160h
		dd offset _des_encrypt
		dd offset unk_1163
		dd offset off_659B
		dd 0EAA01h
		db 0, 24h
		dd offset aContext	; "context"
		dw 7F01h
		dd 51301h, 910200h
		db 24h
		dd offset aData		; "data"
		db 1, 7Fh, 1
		dd offset loc_595+6
		dd 23049102h, 6E656Ch, 71018001h, 2000000h
		db 91h,	8, 24h
		dd offset aOutput	; "output"
		db 1
		dd 5790180h, 91020000h
		db 0Ch,	24h
		dd offset aOutlen	; "outlen"
		dw 8001h
		dd 5CB01h, 10910200h
		db 28h
		dd offset aOffset	; "offset"
		db 1, 82h, 1
		dd offset loc_69+1
		dd offset off_6635
		dd 100691Fh, 6A0183h
		db 2 dup(0)
		dd offset off_666B
		dw 741Fh
		dd 100706Dh, 6A0184h
		db 2 dup(0)
		dd offset off_668B
aBuf_0		db ')buf',0
		db 1
		dd 0D770185h, 91020000h
		db 54h,	25h
		dd offset loc_10C4
		dd offset dword_1C38+42h
		dd offset loc_E46+4
		dw 226h
		dd 77020074h
		db 2 dup(0), 25h
		dd offset loc_10D4
		dd offset loc_953+1
		dd offset loc_E68+2
		db 26h
		dd 76025201h, 51012600h, 26007502h, 1007402h
		db 30h,	0, 25h
		dd offset loc_1127
		dd offset dword_1C38+42h
		dd offset loc_E80
		db 26h
		dd 3007402h, 64891h
		db 25h
		dd offset loc_1137
		dd offset loc_953+1
		dd offset loc_E9E+2
		db 26h,	1, 52h
		dd 26007602h, 73025101h, 74022600h, 300100h
		db 20h
		dd offset unk_1163
		dd offset dword_1C38+2Ch
		align 2
aDes3_uninit	db 27h,'des3_uninit',0
		db 1
		db 22h,	3, 1
		dd offset _des3_uninit
		dd offset unk_11AA
		dd offset off_66A9
		db 1
		dd offset loc_F1B+3
		db 24h
		dd offset aContext	; "context"
		db 1, 22h, 3
		dd offset loc_513
		dd 1F009102h, 33736564h, 6E6F635Fh, 74786574h, 3240100h
		dd 7A8h
		dd offset off_66F9
		db 25h
		dd offset loc_117F
		dd offset dword_1C38+42h
		dd offset loc_F09+1
		db 26h,	2, 74h
		dd 910300h
		db 6, 0, 2Ah
		dd offset loc_11A5
		db 1
		dd offset dword_1CAC+2
		db 20h
		dd offset unk_11AA
		dd offset dword_1C38+2Ch
		align 2
aDes_uninit	db 27h,'des_uninit',0
		dw 0C401h
		db 2 dup(1)
		dd offset _des_uninit
		dd offset unk_11F2
		dd offset off_6730
		dw 9001h
		dd 2400000Fh
		dd offset aContext	; "context"
		dd 1301C401h, 2000005h,	641F0091h, 635F7365h, 65746E6Fh
		dd 1007478h, 0A0B01C5h
		db 2 dup(0)
		dd offset off_6780
		db 25h
		dd offset loc_11C7
		dd offset dword_1C38+42h
		dd offset loc_F7A+2
		db 26h
		dd 3007402h, 60091h
		db 2Ah
		dd offset loc_11ED
		db 1, 0AEh, 1Ch
		db 2 dup(0), 20h
		dd offset unk_11F2
		dd offset dword_1C38+2Ch
		align 4
aDes3_init	db 27h,'des3_init',0
		db 1
		db 1Ah,	3, 1
		dd offset _des3_init
		dd offset unk_1235
		dd offset off_67B7
		db 1
		dd offset loc_100A+1
		db 24h
		dd offset aContext	; "context"
		db 1, 1Ah, 3
		dd offset loc_513
		dd 23009102h, 72747865h, 1A010061h, 1A803h, 4910200h, 74636D1Fh
		dd 1C010078h, 7A803h
		db 0
		dd offset off_6807
		db 25h
		dd offset loc_1213
		dd offset dword_1CAC+19h
		dd offset loc_FF7
		dw 226h
		dd 0A030074h, 2A00030Ch
		dd offset loc_1230
		dd 1CE301h
		db 0, 20h
		dd offset unk_1235
		dd offset dword_1C38+2Ch
		dw 2700h
aDes_init	db 'des_init',0
		db 1, 0BDh, 1
		db 1
		dd offset _des_init
		dd offset unk_1279
		dd offset off_6825
		db 1, 85h, 10h
		db 2 dup(0), 24h
		dd offset aContext	; "context"
		db 1
		dd 51301BDh, 91020000h,	78652300h, 617274h, 0A801BD01h
		dd 2000001h, 6D1F0491h,	787463h, 0B01BE01h
		db 0Ah,	2 dup(0)
		dd offset off_6875
		db 25h
		dd offset loc_1257
		dd offset dword_1CAC+19h
		dd offset loc_106F+2
		dd 740226h, 1000A03h
		db 0, 2Ah
		dd offset loc_1274
		dw 0E301h
		dd 2000001Ch
		dd offset unk_1279
		dd offset dword_1C38+2Ch
		db    0
aDes3_ecb_decry	db '+des3_ecb_decrypt',0
		db 1
		dd 60010284h, 1000001h,	110Fh, 78746317h, 2840100h, 7A8h
		db 16h
		dd offset aData		; "data"
		db 1, 84h, 2
		dd offset loc_595+6
		dd 6E656C17h, 2850100h,	71h
		db 16h
		dd offset aOutput	; "output"
		db 1, 85h, 2
		dd offset loc_579
		db 16h
		dd offset aOutlen	; "outlen"
		db 1, 85h, 2
		dd offset loc_5CB
		db 2Ch
		dd offset aOffset	; "offset"
		db 1, 87h, 2
		dd offset loc_69+1
		db  18h
		db 69h,	0, 1
		db  88h	; à
		dd offset word_6A02
		align 2
		dw 7418h
		db  6Dh	; m
		db 70h,	0, 1
		db  89h	; â
		dd offset word_6A02
		align 2
		dw 6218h
		db  75h	; u
		db 66h,	0, 1
		db  8Ah	; ä
		db 2, 77h, 0Dh
		db    0
		db 2 dup(0), 2Bh
aDes3_cbc_decry	db 'des3_cbc_decrypt',0
		db 1, 0B5h, 2
		dd 16001h, 11A60100h, 63170000h, 1007874h, 7A802B5h
		db 2 dup(0), 16h
		dd offset aData		; "data"
		db 1
		dd 59B02B5h, 6C170000h,	1006E65h, 7102B6h
		db 2 dup(0), 16h
		dd offset aOutput	; "output"
		db 1
		dd 57902B6h
		db 2 dup(0), 16h
		dd offset aOutlen	; "outlen"
		db 1
		dd 5CB02B6h
		db 2 dup(0), 2Ch
		dd offset aOffset	; "offset"
		db 1
		dd 6A02B8h, 69180000h, 2B90100h, 6Ah, 706D7418h, 2BA0100h
		dd 6Ah,	66756218h, 2BB0100h, 0D77h, 6E696C18h, 0BC01006Bh
		dd 0D7702h, 3F2D0000h
		db 7, 2	dup(0)
		dd offset _des3_decrypt
		dd offset _des3_encrypt
		dd offset off_6893
		db 1
		dd offset loc_1566
		dd 7512Eh, 910200h, 75D2Eh, 4910200h, 7692Eh, 8910200h
		dd 7752Eh, 0C910200h, 7812Eh, 10910200h, 78D2Fh
		db 0
		dd offset off_692D
		db 30h,	99h, 7
		dd 3050000h
		dd offset ___PRETTY_FUNCTION___7091 ; "des3_decrypt"
		dd 73F31h
		db 0
		dd offset loc_12DD
		dd offset loc_1311
		db 1, 0EDh, 2
		dd offset _des3_decrypt
		db 32h
		dd offset loc_12DD
		dd offset loc_1311
		db 33h,	8Dh, 7
		dd 81340000h, 34000007h, 775h, 76934h, 75D3400h, 51340000h
		dd 30000007h, 799h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___7091 ; "des3_decrypt"
		db 35h
		dd offset loc_1311
		dd offset dword_1D10+8
		db 26h
		dd 1007402h, 74022630h,	26380104h, 5087402h
		db 3
		dd offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		db 26h,	2, 74h
		db 0Ch,	5, 3
		dd offset aCiphersDes_c	; "ciphers/des.c"
		db 26h
		dd 3107402h, 2602F70Ah,	5147402h
		db 3
		dd offset ___PRETTY_FUNCTION___7091 ; "des3_decrypt"
		align 4
		dd 108536h
		db 0
		dd offset loc_132C
		dd offset off_711C
		db 1, 0F3h, 2
		dd offset loc_13D3+2
		dd 10D437h
		db 0
		dd offset off_69A0
		db 37h,	0C8h, 10h
		db 2 dup(0)
		dd offset off_69C2
		dw 0BC37h
		db 10h,	2 dup(0)
		dd offset off_69FC
		db 37h
		dd offset loc_10B0
		dd offset off_6A1E
		dd 10A437h
		db 0
		dd offset off_6A40
		db 38h
		dd offset off_713C
		dw 0E02Fh
		db 10h,	2 dup(0)
		dd offset off_6A62
		db 2Fh
		dd offset loc_10E9+3
		dd offset off_6A98
		dd 10F62Fh
		db 0
		dd offset off_6AC4
		db 30h,	2, 11h
		dd 91020000h
		db 54h,	25h
		dd offset loc_1394
		dd offset loc_953+1
		dd offset loc_1305+2
		dw 126h
		dd 0A8910450h, 126067Fh, 730251h, 740226h, 25003101h
		dd offset loc_13A8
		dd offset loc_953+1
		dd offset loc_132C+3
		dd 4500126h, 67FAC91h, 2520126h, 1260073h, 760251h, 740226h
		dd 25003001h
		dd offset loc_13BC
		dd offset loc_953+1
		dd offset loc_1354+3
		dd 4500126h, 67FA491h, 2520126h, 1260076h, 730251h, 740226h
		dd 25003101h
		dd offset loc_15E0
		dd offset loc_953+1
		dd offset loc_1382
		dd 7500126h, 67FB491h, 26048C23h, 76025201h, 51012600h
		dd 26007302h, 1007402h
		db 31h,	0, 25h
		dd offset loc_15F9
		dd offset loc_953+1
		dd offset loc_13A8+5
		db 26h
		dd 91075001h, 23067FB4h, 126028Ch, 730252h, 2510126h, 2260076h
		dd 30010074h
		db 0, 35h
		dd offset loc_1610
		dd offset loc_953+1
		dw 126h
		dd 0B4910650h, 0C23067Fh, 2520126h, 1260076h, 730251h
		dd 740226h, 3101h, 110F3600h
		db 2 dup(0)
		dd offset loc_13E4
		dd offset off_715C
		dw 0F501h
		dd 154602h, 115E3700h
		db 2 dup(0)
		dd offset off_6AD7
		dw 5237h
		db 11h,	2 dup(0)
		dd offset off_6AF9
		db 37h
		dd offset loc_1145+1
		dd offset off_6B1B
		dd 113A37h
		db 0
		dd offset off_6B3D
		db 37h,	2Eh, 11h
		db 2 dup(0)
		dd offset off_6B5F
		db 38h
		dd offset off_7174
		db 2Fh
		dd offset loc_1168+2
		dd offset off_6B7F
		dd 11762Fh
		db 0
		dd offset off_6BC0
		db 2Fh,	80h, 11h
		db 2 dup(0)
		dd offset off_6C1A
		dw 8C30h
		dd 2000011h, 98304C91h,	2000011h
		db 91h,	54h, 25h
		dd offset loc_145E
		dd offset loc_953+1
		dd offset loc_146B+3
		db 26h
		dd 91045001h, 26067FA8h, 75025201h, 51012600h, 26007302h
		dd 1007402h
		db 31h,	0, 25h
		dd offset loc_1474
		dd offset loc_953+1
		dd offset loc_1498
		db 26h
		dd 91045001h, 26067FACh, 73025201h, 51012600h, 7FB09104h
		dd 74022606h, 300100h
		db 25h
		dd offset loc_148A
		dd offset loc_953+1
		dd offset loc_14C2
		db 26h,	1, 50h
		dd 7FA49104h, 52012606h, 7FB09104h, 51012606h, 26007302h
		dd 1007402h
		db 31h,	0, 25h
		dd offset loc_152C
		dd offset loc_953+1
		dd offset loc_14EC+3
		db 26h
		dd 91075001h, 23067FB4h, 126048Ch, 0B0910452h, 126067Fh
		dd 730251h, 740226h, 25003101h
		dd offset loc_1547
		dd offset loc_953+1
		dd offset loc_151A+2
		dd 7500126h, 67FB491h, 26028C23h, 73025201h, 51012600h
		dd 7FB09104h, 74022606h, 300100h
		db 35h
		dd offset loc_1560
		dd offset loc_953+1
		db 26h,	1, 50h
		dd 7FB49106h, 260C2306h, 91045201h, 26067FB0h, 73025101h
		dd 74022600h, 310100h
		db 2 dup(0), 25h
		dd offset loc_12CA
		dd offset dword_1C38+42h
		dd offset loc_155B+1
		db 26h
		dd 3007402h, 60091h
		db 20h
		dd offset _des3_encrypt
		dd offset dword_1C38+2Ch
		align 2
aDes3_ecb_encry	db '+des3_ecb_encrypt',0
		dd 1020E01h, 160h, 15F001h, 74631700h, 0E010078h, 7A802h
		db 0, 16h
		dd offset aData		; "data"
		dw 0E01h
		dd 59B02h, 656C1700h, 0F01006Eh, 7102h
		db 0, 16h
		dd offset aOutput	; "output"
		dw 0F01h
		dd 57902h
		db 0, 16h
		dd offset aOutlen	; "outlen"
		dw 0F01h
		dd 5CB02h
		db 0, 2Ch
		dd offset aOffset	; "offset"
		dw 1101h
		dd offset word_6A02
		dd 691800h, 6A021201h, 18000000h, 706D74h, 6A021301h, 18000000h
		dd 667562h, 77021401h, 0Dh
aDes3_cbc_encry	db '+des3_cbc_encrypt',0
		dw 3E01h
		dd 1600102h, 7A010000h,	17000016h, 787463h, 0A8023E01h
		dd 16000007h
		dd offset aData		; "data"
		dd 9B023E01h, 17000005h, 6E656Ch, 71023F01h, 16000000h
		dd offset aOutput	; "output"
		dd 79023F01h, 16000005h
		dd offset aOutlen	; "outlen"
		dd 0CB023F01h, 2C000005h
		dd offset aOffset	; "offset"
		dd 6A024101h, 18000000h, 42010069h, 6A02h, 6D741800h, 43010070h
		dd 6A02h, 75621800h, 44010066h,	0D7702h, 0C32D0000h
		db 7, 2	dup(0)
		dd offset _des3_encrypt
		dd offset _des3_set_iv
		dd offset off_6C43
		db 1
		dd offset loc_19A3
		dd 7D52Eh, 910200h, 7E12Eh, 4910200h, 7ED2Eh, 8910200h
		dd 7F92Eh, 0C910200h, 8052Eh, 10910200h, 8112Fh
		db 0
		dd offset off_6CDD
		db 30h,	1Dh, 8
		dd 3050000h
		dd offset ___PRETTY_FUNCTION___7041 ; "des3_encrypt"
		dd 7C331h
		db 0
		dd offset loc_167A
		dd offset loc_16AE
		db 1, 73h, 2
		dd offset loc_174F+1
		db 32h
		dd offset loc_167A
		dd offset loc_16AE
		db 33h,	11h, 8
		dd 5340000h, 34000008h,	7F9h, 7ED34h, 7E13400h,	0D5340000h
		dd 30000007h, 81Dh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___7041 ; "des3_encrypt"
		db 35h
		dd offset loc_16AE
		dd offset dword_1D10+8
		db 26h
		dd 1007402h, 74022630h,	26380104h, 5087402h
		db 3
		dd offset aFileSLineDSSho ; "file %s: line %d (%s): should not be re"...
		db 26h,	2, 74h
		db 0Ch,	5, 3
		dd offset aCiphersDes_c	; "ciphers/des.c"
		db 26h
		dd 3107402h, 26027D0Ah,	5147402h
		db 3
		dd offset ___PRETTY_FUNCTION___7041 ; "des3_encrypt"
		align 4
		dd 156636h
		db 0
		dd offset loc_16C8
		dd offset off_718C
		db 1, 79h, 2
		dd offset loc_1827+1
		dd 15B537h
		db 0
		dd offset off_6CFC
		db 37h,	0A9h, 15h
		db 2 dup(0)
		dd offset off_6D28
		dw 9D37h
		db 15h,	2 dup(0)
		dd offset off_6D6B
		db 37h
		dd offset loc_158F+2
		dd offset off_6D9A
		dd 158537h
		db 0
		dd offset off_6DDD
		db 38h
		dd offset off_71B4
		dw 0C12Fh
		db 15h,	2 dup(0)
		dd offset off_6E09
		db 2Fh
		dd offset loc_15CB+2
		dd offset off_6E3F
		dd 15D72Fh
		db 0
		dd offset off_6E6B
		db 30h,	0E3h, 15h
		dd 91020000h
		db 54h,	25h
		dd offset loc_173B
		dd offset loc_953+1
		dd offset loc_17D9+2
		dw 126h
		dd 0B8910450h, 126067Fh, 760251h, 740226h, 25003001h
		dd offset loc_174F
		dd offset loc_953+1
		dd offset loc_1801+1
		dd 3500126h, 26064091h,	76025201h, 51012600h, 26007302h
		dd 1007402h
		db 31h,	0, 35h
		dd offset loc_1763
		dd offset loc_953+1
		db 26h
		dd 91045001h, 26067FBCh, 73025201h, 51012600h, 26007602h
		dd 1007402h, 30h, 15F036h
		db 0
		dd offset loc_1790
		dd offset off_71DC
		db 1, 7Bh, 2
		dd offset loc_1983
		dd 163F37h
		db 0
		dd offset off_6E7E
		db 37h,	33h, 16h
		db 2 dup(0)
		dd offset off_6EAA
		dw 2737h
		db 16h,	2 dup(0)
		dd offset off_6ED6
		db 37h
		dd offset loc_1619+2
		dd offset off_6F05
		dd 160F37h
		db 0
		dd offset off_6F2E
		db 38h
		dd offset off_7204
		dw 4B2Fh
		db 16h,	2 dup(0)
		dd offset off_6F65
		db 2Fh
		dd offset loc_1657
		dd offset off_6F9B
		dd 16612Fh
		db 0
		dd offset off_6FD2
		db 30h,	6Dh, 16h
		dd 91020000h
		db 54h,	25h
		dd offset loc_180C
		dd offset loc_953+1
		dd offset loc_18B6+3
		dw 126h
		dd 0B8910450h, 126067Fh, 730252h, 2510126h, 2260076h, 30010074h
		db 0, 25h
		dd offset loc_1820
		dd offset loc_953+1
		dd offset loc_18DF+1
		dw 126h
		dd 40910350h, 52012606h, 26007602h, 73025101h, 74022600h
		dd 310100h
		db 25h
		dd offset loc_1834
		dd offset loc_953+1
		dd offset loc_1908
		db 26h,	1, 50h
		dd 7FBC9104h, 52012606h, 26007302h, 76025101h, 74022600h
		dd 300100h
		db 25h
		dd offset loc_18A2
		dd offset loc_953+1
		dd offset loc_192D+4
		db 26h,	1, 50h
		dd 6449105h, 1260C23h, 730252h,	2510126h, 2260076h, 30010074h
		db 0, 25h
		dd offset loc_18BB
		dd offset loc_953+1
		dd offset loc_1958+3
		dw 126h
		dd 44910650h, 28C2306h,	2520126h, 1260076h, 730251h, 740226h
		dd 35003101h
		dd offset loc_18D4
		dd offset loc_953+1
		dd 6500126h, 23064491h,	126048Ch, 730252h, 2510126h, 2260076h
		dd 30010074h, 25000000h
		dd offset loc_1669
		dd offset dword_1C38+42h
		dd offset loc_1999
		dd 740226h, 6009103h
		db 0, 20h
		dd offset _des3_set_iv
		dd offset dword_1C38+2Ch
		dw 2D00h
		dd offset loc_830+1
		dd offset _des3_set_iv
		dd offset unk_19B5
		dd offset off_6FE5
		dd 1A6001h, 83F2E00h, 91020000h, 84B2E00h, 91020000h, 8562E04h
		dd 91020000h, 8622F08h
		db 2 dup(0)
		dd offset off_7059
		dw 6E30h
		dd 5000008h
		db 3
		dd offset ___PRETTY_FUNCTION___7109 ; "des3_set_iv"
		db 39h
		dd offset loc_1958
		dd offset loc_195F
		dd offset loc_19F7+5
		dw 7D2Fh
		db 8, 2	dup(0)
		dd offset off_706C
		align 4
		dd 83136h
		db 0
		dd offset loc_195F
		dd offset off_722C
		db 1, 0Eh, 3
		dd offset dword_1A3C+4
		db 38h
		dd offset off_7244
		db 33h,	62h, 8
		dd 56340000h, 34000008h, 84Bh, 83F34h, 86E3000h, 3050000h
		dd offset ___PRETTY_FUNCTION___7109 ; "des3_set_iv"
		db 2Ah
		dd offset loc_198C
		db 1, 39h, 1Dh
		dd 0
		db 25h
		dd offset loc_1994
		dd offset dword_1C38+42h
		dd offset dword_1A3C+1Ah
		db 26h,	2, 74h
		dd 910300h
		db 6, 0, 20h
		dd offset unk_19B5
		dd offset dword_1C38+2Ch
		align 4
		db  3Ah	; :
		db 1, 70h, 75h
aRple_des_ciphe	db 'rple_des_cipher_get_ops',0
		dd 1034601h, 1A9Fh
		dd offset _purple_des_cipher_get_ops
		dd offset _purple_des3_cipher_get_ops
		dd offset off_708C
		dd 1A9F01h
		db 0, 20h
		dd offset _purple_des3_cipher_get_ops
		dd offset dword_1C38+2Ch
		dw 500h
		db    4
		dd offset loc_2B2+2
		db 3Ah,	1, 70h
aUrple_des3_cip	db 'urple_des3_cipher_get_ops',0
		dw 4B01h
		dd 1A9F0103h
		db 2 dup(0)
		dd offset _purple_des3_cipher_get_ops
		dd offset loc_1A03+5
		dd offset off_70C4
		dw 0E501h
		dd 2000001Ah
		dd offset loc_1A03+5
		dd offset dword_1C38+2Ch
		dd 0E01100h, 1AF50000h,	27120000h, 3F000001h, 62733B00h
		dd 31786Fh, 1B083201h, 3050000h
		dd offset _sbox1
		dd 1AE506h, 62733B00h, 32786Fh,	1B203E01h, 3050000h
		dd offset _sbox2
		dd 1AE506h, 62733B00h, 33786Fh,	1B384A01h, 3050000h
		dd offset _sbox3
		dd 1AE506h, 62733B00h, 34786Fh,	1B505601h, 3050000h
		dd offset _sbox4
		dd 1AE506h, 62733B00h, 35786Fh,	1B686201h, 3050000h
		dd offset _sbox5
		dd 1AE506h, 62733B00h, 36786Fh,	1B806E01h, 3050000h
		dd offset _sbox6
		dd 1AE506h, 62733B00h, 37786Fh,	1B987A01h, 3050000h
		dd offset _sbox7
		dd 1AE506h, 62733B00h, 38786Fh,	1BB08601h, 3050000h
		dd offset _sbox8
		dd 1AE506h, 0E01100h, 1BC50000h, 27120000h, 0F000001h
		dd 656C3B00h, 656B7466h, 77735F79h, 1007061h, 1BDF97h
		db 0, 5, 3
		dd offset _leftkey_swap
		db 6
		dd offset dword_1BB0+5
aRightkey_swap	db ';rightkey_swap',0
		db 1
		dd 1BFF9Fh
		db 0, 5, 3
		dd offset _rightkey_swap
		db 6
		dd offset dword_1BB0+5
		dd 0B411h, 1C1400h, 1271200h, 0F0000h
aEncrypt_rotate	db ';encrypt_rotate_tab',0
		dd 1C34AE01h, 3050000h
		dd offset _encrypt_rotate_tab
		dd 1C0406h, 45442900h, 73704F53h, 1CE0100h, 2B4h
		db 5, 3
		dd offset _DESOps
aDes3ops	db ')DES3Ops',0
		db 1
		dd 2B4032Dh, 3050000h
		dd offset _DES3Ops
		dd 5F5F013Ch, 63617473h, 68635F6Bh, 61665F6Bh, 1006C69h
		dd 13D0101h
aPurple_ciphe_1	db 'purple_cipher_context_get_data',0
		db 6
		db 0C0h	; ¿
		db 2 dup(1), 0A8h
		db    1
		db 2 dup(0), 1
		dd offset dword_1CAC+2
		db  0Eh
		dd offset loc_513
		align 2
		dw 13Eh
aG_free		db 'g_free',0
		db 7
		db  37h	; 7
		db 2 dup(1), 0C5h
		db  1Ch
		db 2 dup(0), 0Eh
		dd offset loc_1A5+3
		db    0
		db 3Fh,	1, 67h
a_malloc0	db '_malloc0',0
		db 7, 34h, 1
		dd offset loc_1A5+3
		db    1
		dd offset dword_1CD0+13h
		db 0Eh,	1Ah, 1
		db    0
		db 2 dup(0), 40h
		db    1
aPurple_ciphe_2	db 'purple_cipher_context_set_data',0
		db    6
		db 0B7h, 2 dup(1)
		db    1
		dd offset dword_1D10+8
		db 0Eh,	13h, 5
		db    0
		align 2
		dw 0A80Eh
		db    1
		align 4
		db  3Eh	; >
		db 1, 67h, 5Fh
		db  6Ch	; l
		db 6Fh,	67h, 0
		db    5
		db 61h,	2 dup(1)
		dd offset dword_1D34+5
		db  0Eh
		dd offset loc_1B6+2
		db 0Eh,	8Fh, 2
		db    0
		align 2
		dw 0B80Eh
		db    1
		db 2 dup(0), 41h
		db    0
		db 3Eh,	1, 67h
a_return_if_fai	db '_return_if_fail_warning',0
		dd 1017405h, 1D6Ch, 1D6C0Eh, 1D6C0E00h,	6C0E0000h, 1Dh
		dd 1D720405h, 33060000h, 1
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 4184h
dword_4184	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:00002412o
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 13490026h, 4070000h,	3A0B0B01h, 10B3B0Bh, 8000013h
		dd 8030028h, 0D1Ch, 3011309h, 3A0B0B08h, 10B3B0Bh, 0A000013h
		dd 803000Dh, 0B3B0B3Ah,	0A381349h, 130B0000h, 3C080300h
		dd 0C00000Ch, 8030104h,	0B3A0B0Bh, 13010B3Bh, 150D0000h
		dd 10C2701h, 0E000013h,	13490005h, 150F0000h, 490C2701h
		dd 130113h, 1131000h, 50B0803h,	0B3B0B3Ah, 1301h, 49010111h
		dd 130113h, 211200h, 0B2F1349h,	13130000h, 0B080301h, 3B0B3A05h
		dd 130105h, 0D1400h, 0B3A0803h,	1349053Bh, 0A38h, 3012E15h
		dd 3B0B3A0Eh, 490C2705h, 10B2013h, 16000013h, 0E030005h
		dd 53B0B3Ah, 1349h, 3000517h, 3B0B3A08h, 134905h, 341800h
		dd 0B3A0803h, 1349053Bh, 34190000h, 490E0300h, 1C0C3413h
		dd 1A00000Eh, 0E03012Eh, 53B0B3Ah, 0B200C27h, 1301h, 10B1Bh
		dd 12E1C00h, 0B3A0803h,	0C270B3Bh, 1120111h, 42970640h
		dd 13010Ch, 51D00h, 0B3A0803h, 13490B3Bh, 602h,	300341Eh
		dd 3B0B3A08h, 213490Bh,	1F000006h, 8030034h, 53B0B3Ah
		dd 6021349h, 89200000h,	11000182h, 133101h, 12E2100h, 0B3A0803h
		dd 0C27053Bh, 1111349h,	6400112h, 10C4297h, 22000013h
		dd 8030005h, 53B0B3Ah, 6021349h, 5230000h, 3A080300h, 49053B0Bh
		dd 0A0213h, 52400h, 0B3A0E03h, 1349053Bh, 0A02h, 1828925h
		dd 31011101h, 130113h, 828A2600h, 0A020001h, 0A4291h, 12E2700h
		dd 0B3A0803h, 0C27053Bh, 1120111h, 42970640h, 13010Ch
		dd 342800h, 0B3A0E03h, 1349053Bh, 602h,	3003429h, 3B0B3A08h
		dd 2134905h, 2A00000Ah,	18289h,	42950111h, 13310Ch, 12E2B00h
		dd 0B3A0803h, 0C27053Bh, 0B201349h, 1301h, 300342Ch, 3B0B3A0Eh
		dd 134905h, 12E2D00h, 1111331h,	6400112h, 10C4297h, 2E000013h
		dd 13310005h, 0A02h, 3100342Fh,	60213h,	343000h, 0A021331h
		dd 1D310000h, 11133101h, 58011201h, 105590Bh, 32000013h
		dd 111010Bh, 112h, 31003433h, 34000013h, 13310005h, 89350000h
		dd 11010182h, 133101h, 11D3600h, 1521331h, 0B580655h, 13010559h
		dd 5370000h, 2133100h, 38000006h, 655010Bh, 0B390000h
		dd 12011101h, 130101h, 12E3A00h, 8030C3Fh, 53B0B3Ah, 13490C27h
		dd 1120111h, 42970640h,	13010Ch, 343B00h, 0B3A0803h, 13490B3Bh
		dd 0A02h, 3F002E3Ch, 2708030Ch,	3C0C340Ch, 3D00000Ch, 0C3F012Eh
		dd 0B3A0803h, 0C27053Bh, 0C3C1349h, 1301h, 3F012E3Eh, 3A08030Ch
		dd 270B3B0Bh, 10C3C0Ch,	3F000013h, 0C3F012Eh, 0B3A0803h
		dd 0C270B3Bh, 0C3C1349h, 1301h,	3F012E40h, 3A08030Ch, 27053B0Bh
		dd 10C3C0Ch, 41000013h,	18h
		db 0
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 44FCh
dword_44FC	dd 0			; DATA XREF: .debug_info:00002CD5o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 4
		dd 10740002h, 4, 7, 14740002h, 7, 42Ch,	0C0740003h, 42C00h
		dd 42D00h, 74000200h, 42D14h, 42E00h, 74000200h, 42E10h
		dd 42F00h, 74000200h, 42F0Ch, 43000h, 74000200h, 43008h
		dd 43100h, 74000200h, 43104h, 43600h, 74000300h, 0C0h
		dd 0
		db 2 dup(0)
word_4596	dw 0			; DATA XREF: .debug_info:00002CECo
		dd 4D0000h, 10000h, 4D50h, 43600h, 0F3000400h, 9F5001h
		dd 0
		db 3 dup(0)
byte_45B7	db 0			; DATA XREF: .debug_info:00002CFEo
		dd 15000000h, 1000000h,	155200h, 3030000h, 10000h, 30356h
		dd 41000h, 76000300h, 4109F04h,	42E0000h, 10000h, 43156h
		dd 43600h, 56000100h, 2	dup(0)
off_45F8	dd offset loc_33	; DATA XREF: .debug_info:00002D0Eo
		dd offset loc_F6
		dd 0F6510001h, 7000000h, 0D8000001h, 5001F301h,	0FF080194h
		dd 0F324481Ah, 1235001h, 0FF080194h, 2124401Ah,	235001F3h
		dd 8019402h, 24381AFFh,	5001F321h, 1940323h, 211AFF08h
		dd 945001F3h, 1AFF0801h, 1F32448h, 94012350h, 1AFF0801h
		dd 0F3212440h, 2235001h, 0FF080194h, 2124381Ah,	235001F3h
		dd 8019403h, 0F3211AFFh, 4235001h, 0FF080194h, 0F324481Ah
		dd 5235001h, 0FF080194h, 2124401Ah, 235001F3h, 8019406h
		dd 24381AFFh, 5001F321h, 1940723h, 211AFF08h, 0C272534h
		dd 0F0F0F0Fh, 5001F31Ah, 1940423h, 481AFF08h, 5001F324h
		dd 1940523h, 401AFF08h,	1F32124h, 94062350h, 1AFF0801h
		dd 0F3212438h, 7235001h, 0FF080194h, 1F3211Ah, 8019450h
		dd 24481AFFh, 235001F3h, 8019401h, 24401AFFh, 5001F321h
		dd 1940223h, 381AFF08h,	1F32124h, 94032350h, 1AFF0801h
		dd 1F32721h, 8019450h, 24481AFFh, 235001F3h, 8019401h
		dd 24401AFFh, 5001F321h, 1940223h, 381AFF08h, 1F32124h
		dd 94032350h, 1AFF0801h, 5001F321h, 1940423h, 481AFF08h
		dd 5001F324h, 1940523h,	401AFF08h, 1F32124h, 94062350h
		dd 1AFF0801h, 0F3212438h, 7235001h, 0FF080194h,	2534211Ah
		dd 0F0F0C27h, 0F31A0F0Fh, 1945001h, 481AFF08h, 5001F324h
		dd 1940123h, 401AFF08h,	1F32124h, 94022350h, 1AFF0801h
		dd 0F3212438h, 3235001h, 0FF080194h, 1F3211Ah, 94042350h
		dd 1AFF0801h, 1F32448h,	94052350h, 1AFF0801h, 0F3212440h
		dd 6235001h, 0FF080194h, 2124381Ah, 235001F3h, 8019407h
		dd 34211AFFh, 0F0C2725h, 1A0F0F0Fh, 27212434h, 1010100Ch
		dd 27211A10h, 1079Fh, 1C700h, 55000100h, 1CFh, 430h, 31550001h
		dd 36000004h, 1000004h,	5500h, 0
		db 2 dup(0)
off_480E	dd offset loc_52	; DATA XREF: .debug_info:00002D1Fo
		dd offset loc_65
		dw 1
		dd offset word_6552
		dd 18E00h, 50000100h, 18Eh, 19Fh, 1F301DCh, 94042350h
		dd 1AFF0801h, 1F32448h,	94052350h, 1AFF0801h, 0F3212440h
		dd 6235001h, 0FF080194h, 2124381Ah, 235001F3h, 8019407h
		dd 0F3211AFFh, 4235001h, 0FF080194h, 0F324481Ah, 5235001h
		dd 0FF080194h, 2124401Ah, 235001F3h, 8019406h, 24381AFFh
		dd 5001F321h, 1940723h,	211AFF08h, 945001F3h, 1AFF0801h
		dd 1F32448h, 94012350h,	1AFF0801h, 0F3212440h, 2235001h
		dd 0FF080194h, 2124381Ah, 235001F3h, 8019403h, 27211AFFh
		dd 945001F3h, 1AFF0801h, 1F32448h, 94012350h, 1AFF0801h
		dd 0F3212440h, 2235001h, 0FF080194h, 2124381Ah,	235001F3h
		dd 8019403h, 0F3211AFFh, 4235001h, 0FF080194h, 0F324481Ah
		dd 5235001h, 0FF080194h, 2124401Ah, 235001F3h, 8019406h
		dd 24381AFFh, 5001F321h, 1940723h, 211AFF08h, 0C272534h
		dd 0F0F0F0Fh, 5001F31Ah, 0FF080194h, 0F324481Ah, 1235001h
		dd 0FF080194h, 2124401Ah, 235001F3h, 8019402h, 24381AFFh
		dd 5001F321h, 1940323h,	211AFF08h, 235001F3h, 8019404h
		dd 24481AFFh, 235001F3h, 8019405h, 24401AFFh, 5001F321h
		dd 1940623h, 381AFF08h,	1F32124h, 94072350h, 1AFF0801h
		dd 27253421h, 0F0F0F0Ch, 24341A0Fh, 100C2721h, 1A101010h
		dd 5001F327h, 0FF080194h, 0F324481Ah, 1235001h,	0FF080194h
		dd 2124401Ah, 235001F3h, 8019402h, 24381AFFh, 5001F321h
		dd 1940323h, 211AFF08h,	235001F3h, 8019404h, 24481AFFh
		dd 235001F3h, 8019405h,	24401AFFh, 5001F321h, 1940623h
		dd 381AFF08h, 1F32124h,	94072350h, 1AFF0801h, 27253421h
		dd 0F0F0F0Ch, 24341A0Fh, 19F9F27h, 1DB0000h, 10000h, 1E557h
		dd 42F00h, 57000100h, 431h, 436h, 570001h, 0
		db 3 dup(0)
off_4A33	dd offset loc_5E	; DATA XREF: .debug_info:00002D2Fo
		dd offset loc_63
		db 1
		dd 635000h, 670000h, 3B0000h, 945001F3h, 1AFF0801h, 1F32448h
		dd 94012350h, 1AFF0801h, 0F3212440h, 2235001h, 0FF080194h
		dd 2124381Ah, 235001F3h, 8019403h, 72211AFFh, 27253400h
		dd 0F0F0F0Ch, 679F1A0Fh, 6F000000h, 62000000h, 5001F300h
		dd 0FF080194h, 0F324481Ah, 1235001h, 0FF080194h, 2124401Ah
		dd 235001F3h, 8019402h,	24381AFFh, 5001F321h, 1940323h
		dd 211AFF08h, 235001F3h, 8019404h, 24481AFFh, 235001F3h
		dd 8019405h, 24401AFFh,	5001F321h, 1940623h, 381AFF08h
		dd 732124h, 27253421h, 0F0F0F0Ch, 6F9F1A0Fh, 75000000h
		dd 1000000h, 755200h, 870000h, 1260000h, 235001F3h, 8019404h
		dd 24481AFFh, 235001F3h, 8019405h, 24401AFFh, 5001F321h
		dd 1940623h, 381AFF08h,	732124h, 5001F321h, 0FF080194h
		dd 0F324481Ah, 1235001h, 0FF080194h, 2124401Ah,	235001F3h
		dd 8019402h, 24381AFFh,	5001F321h, 1940323h, 211AFF08h
		dd 5001F327h, 0FF080194h, 0F324481Ah, 1235001h,	0FF080194h
		dd 2124401Ah, 235001F3h, 8019402h, 24381AFFh, 5001F321h
		dd 1940323h, 211AFF08h,	235001F3h, 8019404h, 24481AFFh
		dd 235001F3h, 8019405h,	24401AFFh, 5001F321h, 1940623h
		dd 381AFF08h, 732124h, 27253421h, 0F0F0F0Ch, 1F31A0Fh
		dd 8019450h, 24481AFFh,	235001F3h, 8019401h, 24401AFFh
		dd 5001F321h, 1940223h,	381AFF08h, 1F32124h, 94032350h
		dd 1AFF0801h, 5001F321h, 1940423h, 481AFF08h, 5001F324h
		dd 1940523h, 401AFF08h,	1F32124h, 94062350h, 1AFF0801h
		dd 73212438h, 25342100h, 0F0F0C27h, 341A0F0Fh, 0C272124h
		dd 10101010h, 879F1Ah, 4350000h, 13E0000h, 235001F3h, 8019404h
		dd 24481AFFh, 235001F3h, 8019405h, 24401AFFh, 5001F321h
		dd 1940623h, 381AFF08h,	1F32124h, 94072350h, 1AFF0801h
		dd 5001F321h, 0FF080194h, 0F324481Ah, 1235001h,	0FF080194h
		dd 2124401Ah, 235001F3h, 8019402h, 24381AFFh, 5001F321h
		dd 1940323h, 211AFF08h,	5001F327h, 0FF080194h, 0F324481Ah
		dd 1235001h, 0FF080194h, 2124401Ah, 235001F3h, 8019402h
		dd 24381AFFh, 5001F321h, 1940323h, 211AFF08h, 235001F3h
		dd 8019404h, 24481AFFh,	235001F3h, 8019405h, 24401AFFh
		dd 5001F321h, 1940623h,	381AFF08h, 1F32124h, 94072350h
		dd 1AFF0801h, 27253421h, 0F0F0F0Ch, 1F31A0Fh, 8019450h
		dd 24481AFFh, 235001F3h, 8019401h, 24401AFFh, 5001F321h
		dd 1940223h, 381AFF08h,	1F32124h, 94032350h, 1AFF0801h
		dd 5001F321h, 1940423h,	481AFF08h, 5001F324h, 1940523h
		dd 401AFF08h, 1F32124h,	94062350h, 1AFF0801h, 0F3212438h
		dd 7235001h, 0FF080194h, 2534211Ah, 0F0F0C27h, 341A0F0Fh
		dd 0C272124h, 10101010h, 9F1Ah,	0
		db 2 dup(0)
off_4D7A	dd offset loc_1A5	; DATA XREF: .debug_info:00002D41o
		dd offset loc_1AC
		dw 2
		dd 4139F30h, 42C0000h, 20000h, 42C0074h, 4310000h, 20000h
		dd 4314091h, 4360000h, 20000h, 74h, 0
		db 2 dup(0)
off_4DB2	dd offset _des_ecb_crypt ; DATA	XREF: .debug_info:00002D7Fo
		dd offset loc_439
		dw 2
		dd 4390474h, 43A0000h, 20000h, 43A0874h, 43B0000h, 20000h
		dd 43B0C74h, 43C0000h, 20000h, 43C1074h, 43F0000h, 20000h
		dd 43F1474h, 0D950000h,	30000h,	9500C074h, 9600000Dh, 200000Dh
		dd 96147400h, 9700000Dh, 200000Dh, 97107400h, 9800000Dh
		dd 200000Dh, 980C7400h,	9900000Dh, 200000Dh, 99087400h
		dd 9A00000Dh, 200000Dh,	9A047400h, 9F00000Dh, 300000Dh
		dd 0C07400h, 2 dup(0)
off_4E4C	dd offset _des_ecb_crypt ; DATA	XREF: .debug_info:00002D94o
		dd offset loc_45A
		dd 5A500001h, 9F000004h, 400000Dh, 5001F300h, 9Fh, 0
		db 0
off_4E6D	dd offset _des_ecb_crypt ; DATA	XREF: .debug_info:00002DA5o
		dd offset loc_492
		db 1, 0, 52h
		dd offset loc_492
		dd offset unk_D9F
		dd 1F30004h, 9F52h, 0
		db 2 dup(0)
off_4E8E	dd offset _des_ecb_crypt ; DATA	XREF: .debug_info:00002DB4o
		dd offset loc_44F
		dw 1
		dd 44F51h, 0D9F00h, 91000200h, 4Ch, 0
		db 0
off_4EAD	dd offset loc_478	; DATA XREF: .debug_info:00002DD5o
		dd offset loc_4AB
		db 1, 0, 51h
		dd offset loc_4AB
		dd offset loc_4BF
		dd 0BF520001h, 0F5000004h, 1000004h, 4F55600h, 4FB0000h
		dd 80000h, 24310072h, 9F270076h, 4FBh, 505h, 72004Ah, 762431h
		dd 8007327h, 24321A3Fh
		db 3
		dd offset _sbox8
		db 22h,	6, 27h
		dd 25380073h, 321A3F08h
		db 24h,	3
		dd offset _sbox6
		dw 622h
		dd 40007327h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox4
		db 22h
		dd 732706h, 3F082548h, 324321Ah
		dd offset _sbox2
		dd 9F270622h, 507h, 513h, 720045h, 3F080073h, 324321Ah
		dd offset _sbox8
		dd 73270622h, 8253800h,	24321A3Fh
		db 3
		dd offset _sbox6
		db 22h,	6, 27h
		dd 25400073h, 321A3F08h
		db 24h,	3
		dd offset _sbox4
		dw 622h
		dd 48007327h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox2
		db 22h
		dd 4A9F2706h, 0FB000005h, 1000005h, 5FB5200h, 61F0000h
		dd 450000h, 3F080077h, 324321Ah
		dd offset _sbox8
		dd 720622h, 38007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox6
		db 22h
		dd 772706h, 3F082540h, 324321Ah
		dd offset _sbox4
		dd 77270622h, 8254800h,	24321A3Fh
		db 3
		dd offset _sbox2
		db 22h,	6, 27h
		dd 6489Fh, 6F900h, 56000100h, 6F9h, 71Dh, 770045h, 321A3F08h
		db 24h,	3
		dd offset _sbox8
		dw 622h
dword_5000	dd 77270076h, 8253800h,	24321A3Fh ; DATA XREF: .debug_loc:000062C0o
		db 3
		dd offset _sbox6
		db 22h,	6, 27h
		dd 25400077h, 321A3F08h
		db 24h,	3
		dd offset _sbox4
		dw 622h
		dd 48007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox2
		db 22h
		dd 469F2706h, 0F7000007h, 1000007h, 7F75100h, 81B0000h
		dd 450000h, 3F080077h, 324321Ah
		dd offset _sbox8
		dd 710622h, 38007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox6
		db 22h
		dd 772706h, 3F082540h, 324321Ah
		dd offset _sbox4
		dd 77270622h, 8254800h,	24321A3Fh
		db 3
		dd offset _sbox2
		db 22h,	6, 27h
		dd 8449Fh, 8F500h, 53000100h, 8F5h, 919h, 770045h, 321A3F08h
		db 24h,	3
		dd offset _sbox8
		dw 622h
		dd 77270073h, 8253800h,	24321A3Fh
		db 3
		dd offset _sbox6
		db 22h,	6, 27h
		dd 25400077h, 321A3F08h
		db 24h,	3
		dd offset _sbox4
		dw 622h
		dd 48007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox2
		db 22h
		dd 429F2706h, 0F3000009h, 1000009h, 9F35200h, 0A170000h
		dd 450000h, 3F080077h, 324321Ah
		dd offset _sbox8
		dd 720622h, 38007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox6
		db 22h
		dd 772706h, 3F082540h, 324321Ah
		dd offset _sbox4
		dd 77270622h, 8254800h,	24321A3Fh
		db 3
		dd offset _sbox2
		db 22h,	6, 27h
		dd 0A409Fh, 0AF100h, 51000100h,	0AF1h, 0B15h, 770045h
		dd 321A3F08h
		db 24h,	3
		dd offset _sbox8
		dw 622h
		dd 77270071h, 8253800h,	24321A3Fh
		db 3
		dd offset _sbox6
		db 22h,	6, 27h
		dd 25400077h, 321A3F08h
		db 24h,	3
		dd offset _sbox4
		dw 622h
		dd 48007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox2
		db 22h
		dd 3E9F2706h, 0EF00000Bh, 100000Bh, 0BEF5300h, 0C130000h
		dd 450000h, 3F080077h, 324321Ah
		dd offset _sbox8
		dd 730622h, 38007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox6
		db 22h
		dd 772706h, 3F082540h, 324321Ah
		dd offset _sbox4
		dd 77270622h, 8254800h,	24321A3Fh
		db 3
		dd offset _sbox2
		db 22h,	6, 27h
		dd 0C3C9Fh, 0D0D00h, 52000100h,	0D0Dh, 0D24h, 24530001h
		dd 9000000Dh, 100000Dh,	5200h, 0
		db 2 dup(0)
off_5222	dd offset loc_497	; DATA XREF: .debug_info:00002DE7o
		dd offset loc_4D3
		dw 1
		dd 4D353h, 4E700h, 52000100h, 4E7h, 57Ch, 7C570001h, 0A0000005h
		dd 45000005h, 8007600h,	24321A3Fh
		db 3
		dd offset _sbox8
		db 22h,	6, 77h
		dd 762700h, 3F082538h, 324321Ah
		dd offset _sbox6
		dd 76270622h, 8254000h,	24321A3Fh
		db 3
		dd offset _sbox4
		db 22h,	6, 27h
		dd 25480076h, 321A3F08h
		db 24h,	3
		dd offset _sbox2
		dw 622h
		dd 5C99F27h, 67A0000h, 10000h, 67A51h, 69E00h, 77004500h
		dd 1A3F0800h
		db 32h,	24h, 3
		dd offset _sbox8
		db 22h
		dd 27007106h, 25380077h, 321A3F08h
		db 24h,	3
		dd offset _sbox6
		dw 622h
		dd 40007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox4
		db 22h
		dd 772706h, 3F082548h, 324321Ah
		dd offset _sbox2
		dd 9F270622h, 6C7h, 778h, 78530001h, 9C000007h,	45000007h
		dd 8007700h, 24321A3Fh
		db 3
		dd offset _sbox8
		db 22h,	6, 73h
		dd 772700h, 3F082538h, 324321Ah
		dd offset _sbox6
		dd 77270622h, 8254000h,	24321A3Fh
		db 3
		dd offset _sbox4
		db 22h,	6, 27h
		dd 25480077h, 321A3F08h
		db 24h,	3
		dd offset _sbox2
		dw 622h
aQ		db 27h,'ü≈',7,0
		align 2
		dd offset loc_876
		dw 1
		dd 87652h, 89A00h, 77004500h, 1A3F0800h
		db 32h,	24h, 3
		dd offset _sbox8
		db 22h
		dd 27007206h, 25380077h, 321A3F08h
		db 24h,	3
		dd offset _sbox6
		dw 622h
		dd 40007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox4
		db 22h
		dd 772706h, 3F082548h, 324321Ah
		dd offset _sbox2
		dd 9F270622h, 8C3h, 974h, 74510001h, 98000009h,	45000009h
		dd 8007700h, 24321A3Fh
		db 3
		dd offset _sbox8
		db 22h,	6, 71h
		dd 772700h, 3F082538h, 324321Ah
		dd offset _sbox6
		dd 77270622h, 8254000h,	24321A3Fh
		db 3
		dd offset _sbox4
		db 22h,	6, 27h
		dd 25480077h, 321A3F08h
		db 24h,	3
		dd offset _sbox2
		dw 622h
aQ_0		db 27h,'ü¡',9,0
		align 2
		dd offset loc_A72
		dw 1
		dd 0A7253h, 0A9600h, 77004500h,	1A3F0800h
		db 32h,	24h, 3
		dd offset _sbox8
		db 22h
		dd 27007306h, 25380077h, 321A3F08h
		db 24h,	3
		dd offset _sbox6
		dw 622h
		dd 40007727h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox4
		db 22h
		dd 772706h, 3F082548h, 324321Ah
		dd offset _sbox2
		dd 9F270622h, 0ABFh, 0B70h, 70520001h, 9400000Bh, 4500000Bh
		dd 8007700h, 24321A3Fh
		db 3
		dd offset _sbox8
		db 22h,	6, 72h
		dd 772700h, 3F082538h, 324321Ah
		dd offset _sbox6
		dd 77270622h, 8254000h,	24321A3Fh
		db 3
		dd offset _sbox4
		db 22h,	6, 27h
		dd 25480077h, 321A3F08h
		db 24h,	3
		dd offset _sbox2
		dw 622h
aQ_1		db 27h,'üΩ',0Bh,0
		align 2
		dd offset loc_C6E
		dw 1
		dd 0C6E51h, 0C9200h, 76004500h,	1A3F0800h
		db 32h,	24h, 3
		dd offset _sbox8
		db 22h
		dd 27007106h, 25380076h, 321A3F08h
		db 24h,	3
		dd offset _sbox6
		dw 622h
		dd 40007627h, 1A3F0825h
		db 32h,	24h, 3
		dd offset _sbox4
		db 22h
		dd 762706h, 3F082548h, 324321Ah
off_5500	dd offset _sbox2	; DATA XREF: .debug_loc:00006E74o
		dd 9F270622h, 0CBBh, 0CF8h, 0F8500001h,	3800000Ch, 100000Dh
		dd 0D385100h, 0D4B0000h, 10000h, 0D4B53h, 0D6B00h, 50000100h
		dd 2 dup(0)
off_553C	dd offset loc_4A4	; DATA XREF: .debug_info:00002DF8o
		dd offset loc_4A9
		dd 0A9520001h, 0AD000004h, 35000004h, 5201F300h, 1940423h
		dd 481AFF08h, 5201F324h, 1940523h, 401AFF08h, 1F32124h
		dd 94062352h, 1AFF0801h, 76212438h, 712100h, 0C272534h
		dd 0F0F0F0Fh, 4AD9F1Ah,	4B80000h, 3D0000h, 235201F3h, 8019404h
		dd 24481AFFh, 235201F3h, 8019405h, 24401AFFh, 5201F321h
		dd 1940623h, 381AFF08h,	1F32124h, 94072352h, 1AFF0801h
		dd 34007121h, 0F0C2725h, 1A0F0F0Fh, 4B89Fh, 4BD00h, 56000100h
		dd 4BDh, 4C1h, 1F30078h, 94042352h, 1AFF0801h, 1F32448h
		dd 94052352h, 1AFF0801h, 0F3212440h, 6235201h, 0FF080194h
		dd 2124381Ah, 235201F3h, 8019407h, 0F3211AFFh, 4235201h
		dd 0FF080194h, 0F324481Ah, 5235201h, 0FF080194h, 2124401Ah
		dd 235201F3h, 8019406h,	24381AFFh, 5201F321h, 1940723h
		dd 211AFF08h, 25340071h, 0F0F0C27h, 271A0F0Fh, 25400072h
		dd 0FFFF0A27h, 4C19F1Ah, 4CC0000h, 0B70000h, 235201F3h
		dd 8019404h, 24481AFFh,	235201F3h, 8019405h, 24401AFFh
		dd 5201F321h, 1940623h,	381AFF08h, 1F32124h, 94072352h
		dd 1AFF0801h, 5201F321h, 1940423h, 481AFF08h, 5201F324h
		dd 1940523h, 401AFF08h,	1F32124h, 94062352h, 1AFF0801h
		dd 0F3212438h, 7235201h, 0FF080194h, 71211Ah, 0C272534h
		dd 0F0F0F0Fh, 1F3271Ah,	94042352h, 1AFF0801h, 1F32448h
		dd 94052352h, 1AFF0801h, 0F3212440h, 6235201h, 0FF080194h
		dd 2124381Ah, 235201F3h, 8019407h, 71211AFFh, 27253400h
		dd 0F0F0F0Ch, 24341A0Fh, 40270071h, 0FF0A2725h,	0CC9F1AFFh
		dd 0D1000004h, 1000004h, 4D15200h, 4E00000h, 1060000h
		dd 235201F3h, 8019404h,	24481AFFh, 235201F3h, 8019405h
		dd 24401AFFh, 5201F321h, 1940623h, 381AFF08h, 1F32124h
		dd 94072352h, 1AFF0801h, 34007121h, 0F0C2725h, 1A0F0F0Fh
		dd 1F32434h, 94042352h,	1AFF0801h, 1F32448h, 94052352h
		dd 1AFF0801h, 0F3212440h, 6235201h, 0FF080194h,	2124381Ah
		dd 235201F3h, 8019407h,	0F3211AFFh, 4235201h, 0FF080194h
		dd 0F324481Ah, 5235201h, 0FF080194h, 2124401Ah,	235201F3h
		dd 8019406h, 24381AFFh,	5201F321h, 1940723h, 211AFF08h
		dd 25340071h, 0F0F0C27h, 271A0F0Fh, 235201F3h, 8019404h
		dd 24481AFFh, 235201F3h, 8019405h, 24401AFFh, 5201F321h
		dd 1940623h, 381AFF08h,	1F32124h, 94072352h, 1AFF0801h
		dd 34007121h, 0F0C2725h, 1A0F0F0Fh, 712434h, 27254027h
		dd 1AFFFF0Ah, 73272440h, 27253200h, 0C270071h, 33333333h
		dd 4E09F1Ah, 4E50000h, 10000h, 4E557h, 4E900h, 0F3020C00h
		dd 4235201h, 0FF080194h, 0F324481Ah, 5235201h, 0FF080194h
		dd 2124401Ah, 235201F3h, 8019406h, 24381AFFh, 5201F321h
		dd 1940723h, 211AFF08h,	25340071h, 0F0F0C27h, 341A0F0Fh
		dd 5201F324h, 1940423h,	481AFF08h, 5201F324h, 1940523h
		dd 401AFF08h, 1F32124h,	94062352h, 1AFF0801h, 0F3212438h
		dd 7235201h, 0FF080194h, 1F3211Ah, 94042352h, 1AFF0801h
		dd 1F32448h, 94052352h,	1AFF0801h, 0F3212440h, 6235201h
		dd 0FF080194h, 2124381Ah, 235201F3h, 8019407h, 71211AFFh
		dd 27253400h, 0F0F0F0Ch, 0F3271A0Fh, 4235201h, 0FF080194h
		dd 0F324481Ah, 5235201h, 0FF080194h, 2124401Ah,	235201F3h
		dd 8019406h, 24381AFFh,	5201F321h, 1940723h, 211AFF08h
		dd 25340071h, 0F0F0C27h, 341A0F0Fh, 27007124h, 0A272540h
		dd 401AFFFFh, 732724h, 71272532h, 330C2700h, 1A333333h
		dd 235201F3h, 8019404h,	24481AFFh, 235201F3h, 8019405h
		dd 24401AFFh, 5201F321h, 1940623h, 381AFF08h, 1F32124h
		dd 94072352h, 1AFF0801h, 34007121h, 0F0C2725h, 1A0F0F0Fh
		dd 0F3272434h, 4235201h, 0FF080194h, 0F324481Ah, 5235201h
		dd 0FF080194h, 2124401Ah, 235201F3h, 8019406h, 24381AFFh
		dd 5201F321h, 1940723h,	211AFF08h, 235201F3h, 8019404h
		dd 24481AFFh, 235201F3h, 8019405h, 24401AFFh, 5201F321h
		dd 1940623h, 381AFF08h,	1F32124h, 94072352h, 1AFF0801h
		dd 34007121h, 0F0C2725h, 1A0F0F0Fh, 5201F327h, 1940423h
		dd 481AFF08h, 5201F324h, 1940523h, 401AFF08h, 1F32124h
		dd 94062352h, 1AFF0801h, 0F3212438h, 7235201h, 0FF080194h
		dd 71211Ah, 0C272534h, 0F0F0F0Fh, 7124341Ah, 25402700h
		dd 0FFFF0A27h, 2724401Ah, 25380072h, 27007127h,	0FF00FF0Ch
		dd 0E99F1A00h, 0F3000004h, 14000004h, 5201F303h, 1940423h
		dd 481AFF08h, 5201F324h, 1940523h, 401AFF08h, 1F32124h
		dd 94062352h, 1AFF0801h, 0F3212438h, 7235201h, 0FF080194h
		dd 71211Ah, 0C272534h, 0F0F0F0Fh, 0F324341Ah, 4235201h
		dd 0FF080194h, 0F324481Ah, 5235201h, 0FF080194h, 2124401Ah
		dd 235201F3h, 8019406h,	24381AFFh, 5201F321h, 1940723h
		dd 211AFF08h, 235201F3h, 8019404h, 24481AFFh, 235201F3h
		dd 8019405h, 24401AFFh,	5201F321h, 1940623h, 381AFF08h
		dd 1F32124h, 94072352h,	1AFF0801h, 34007121h, 0F0C2725h
		dd 1A0F0F0Fh, 5201F327h, 1940423h, 481AFF08h, 5201F324h
		dd 1940523h, 401AFF08h,	1F32124h, 94062352h, 1AFF0801h
		dd 0F3212438h, 7235201h, 0FF080194h, 71211Ah, 0C272534h
		dd 0F0F0F0Fh, 7124341Ah, 25402700h, 0FFFF0A27h,	2724401Ah
		dd 25320073h, 27007127h, 3333330Ch, 1F31A33h, 94042352h
		dd 1AFF0801h, 1F32448h,	94052352h, 1AFF0801h, 0F3212440h
		dd 6235201h, 0FF080194h, 2124381Ah, 235201F3h, 8019407h
		dd 71211AFFh, 27253400h, 0F0F0F0Ch, 24341A0Fh, 5201F327h
		dd 1940423h, 481AFF08h,	5201F324h, 1940523h, 401AFF08h
		dd 1F32124h, 94062352h,	1AFF0801h, 0F3212438h, 7235201h
		dd 0FF080194h, 1F3211Ah, 94042352h, 1AFF0801h, 1F32448h
		dd 94052352h, 1AFF0801h, 0F3212440h, 6235201h, 0FF080194h
		dd 2124381Ah, 235201F3h, 8019407h, 71211AFFh, 27253400h
		dd 0F0F0F0Ch, 0F3271A0Fh, 4235201h, 0FF080194h,	0F324481Ah
		dd 5235201h, 0FF080194h, 2124401Ah, 235201F3h, 8019406h
		dd 24381AFFh, 5201F321h, 1940723h, 211AFF08h, 25340071h
		dd 0F0F0C27h, 341A0F0Fh, 27007124h, 0A272540h, 401AFFFFh
		dd 1F32724h, 94042352h,	1AFF0801h, 1F32448h, 94052352h
		dd 1AFF0801h, 0F3212440h, 6235201h, 0FF080194h,	2124381Ah
		dd 235201F3h, 8019407h,	71211AFFh, 27253400h, 0F0F0F0Ch
		dd 24341A0Fh, 235201F3h, 8019404h, 24481AFFh, 235201F3h
		dd 8019405h, 24401AFFh,	5201F321h, 1940623h, 381AFF08h
		dd 1F32124h, 94072352h,	1AFF0801h, 5201F321h, 1940423h
		dd 481AFF08h, 5201F324h, 1940523h, 401AFF08h, 1F32124h
		dd 94062352h, 1AFF0801h, 0F3212438h, 7235201h, 0FF080194h
		dd 71211Ah, 0C272534h, 0F0F0F0Fh, 1F3271Ah, 94042352h
		dd 1AFF0801h, 1F32448h,	94052352h, 1AFF0801h, 0F3212440h
		dd 6235201h, 0FF080194h, 2124381Ah, 235201F3h, 8019407h
		dd 71211AFFh, 27253400h, 0F0F0F0Ch
		dd 24341A0Fh, 40270071h, 0FF0A2725h, 24401AFFh,	32007327h
		dd 712725h, 33330C27h, 321A3333h, 27007324h, 71272538h
		dd 0FF0C2700h, 1A00FF00h, 4F39Fh, 4FB00h, 52000100h, 4FBh
		dd 503h, 3530001h, 6B000005h, 1000005h,	56B5100h, 57C0000h
		dd 110000h, 144D0077h, 1F172414h, 21252023h, 27060470h
		dd 57C9Fh, 58400h, 56000100h, 584h, 5EAh, 0EA530001h, 0FB000005h
		dd 11000005h, 4D007200h, 17241414h, 2520231Fh, 60C7021h
		dd 5FB9F27h, 6030000h, 10000h, 60357h, 66900h, 53000100h
		dd 669h, 67Ah, 710011h,	2414144Dh, 20231F17h, 14702125h
		dd 7A9F2706h, 82000006h, 1000006h, 6825700h, 6E80000h
		dd 10000h, 6E852h, 6F900h, 76001100h, 14144D00h, 231F1724h
		dd 70212520h, 9F27061Ch, 6F9h, 701h, 1570001h, 67000007h
		dd 1000007h, 7675200h, 7780000h, 110000h, 144D0073h, 1F172414h
		dd 21252023h, 27062470h, 7789Fh, 78000h, 57000100h, 780h
		dd 7E6h, 0E6560001h, 0F7000007h, 11000007h, 4D007100h
		dd 17241414h, 2520231Fh, 62C7021h, 7F79F27h, 7FF0000h
		dd 10000h, 7FF57h, 86500h, 56000100h, 865h, 876h, 720011h
		dd 2414144Dh, 20231F17h, 34702125h, 769F2706h, 7E000008h
		dd 1000008h, 87E5700h, 8E40000h, 10000h, 8E456h, 8F500h
		dd 73001100h, 14144D00h, 231F1724h, 70212520h, 9F27063Ch
		dd 8F5h, 8FDh, 0FD570001h, 63000008h, 1000009h,	9635600h
		dd 9740000h, 120000h, 144D0071h, 1F172414h, 21252023h
		dd 600C470h, 9749F27h, 97C0000h, 10000h, 97C57h, 9E200h
		dd 56000100h, 9E2h, 9F3h, 720012h, 2414144Dh, 20231F17h
		dd 0CC702125h, 9F270600h, 9F3h,	9FBh, 0FB570001h, 61000009h
		dd 100000Ah, 0A615600h,	0A720000h, 120000h, 144D0073h
		dd 1F172414h, 21252023h, 600D470h, 0A729F27h, 0A7A0000h
		dd 10000h, 0A7A57h, 0AE000h, 56000100h,	0AE0h, 0AF1h, 710012h
		dd 2414144Dh, 20231F17h, 0DC702125h, 9F270600h,	0AF1h
		dd 0AF9h, 0F9570001h, 5F00000Ah, 100000Bh, 0B5F5600h, 0B700000h
		dd 120000h, 144D0072h, 1F172414h, 21252023h, 600E470h
		dd 0B709F27h, 0B780000h, 10000h, 0B7857h, 0BDE00h, 56000100h
		dd 0BDEh, 0BEFh, 730012h, 2414144Dh, 20231F17h,	0EC702125h
		dd 9F270600h, 0BEFh, 0BF7h, 0F7570001h,	5D00000Bh, 100000Ch
		dd 0C5D5600h, 0C6E0000h, 120000h, 144D0071h, 1F172414h
		dd 21252023h, 600F470h,	0C6E9F27h, 0C760000h, 10000h, 0C7656h
		dd 0CDC00h, 53000100h, 0CF2h, 0CF6h, 4510001h, 0F00000Dh
		dd 100000Dh, 0D195000h,	0D310000h, 10000h, 0D3150h, 0D3600h
		dd 53000100h, 0D44h, 0D49h, 500001h, 0
		db 3 dup(0)
off_60BB	dd offset loc_45A	; DATA XREF: .debug_info:00002E09o
		dd offset loc_4FB
		db 1
		dd 4FB5000h, 5030000h, 30000h, 39F0470h, 7C000005h, 3000005h
		dd 9F087000h, 57Ch, 584h, 0C700003h, 5849Fh, 5FB00h, 70000300h
		dd 5FB9F10h, 6030000h, 30000h, 39F1470h, 7A000006h, 3000006h
		dd 9F187000h, 67Ah, 682h, 1C700003h, 6829Fh, 6F900h, 70000300h
		dd 6F99F20h, 7010000h, 30000h, 19F2470h, 78000007h, 3000007h
		dd 9F287000h, 778h, 780h, 2C700003h, 7809Fh, 7F700h, 70000300h
		dd 7F79F30h, 7FF0000h, 30000h, 0FF9F3470h, 76000007h, 3000008h
		dd 9F387000h, 876h, 87Eh, 3C700003h, 87E9Fh, 8F500h, 70000400h
		dd 0F59F00C0h, 0FD000008h, 4000008h, 0C47000h, 8FD9Fh
		dd 97400h, 70000400h, 749F00C8h, 7C000009h, 4000009h, 0CC7000h
		dd 97C9Fh, 9F300h, 70000400h, 0F39F00D0h, 0FB000009h, 4000009h
		dd 0D47000h, 9FB9Fh, 0A7200h, 70000400h, 729F00D8h, 7A00000Ah
		dd 400000Ah, 0DC7000h, 0A7A9Fh,	0AF100h, 70000400h, 0F19F00E0h
		dd 0F900000Ah, 400000Ah, 0E47000h, 0AF99Fh, 0B7000h, 70000400h
		dd 709F00E8h, 7800000Bh, 400000Bh, 0EC7000h, 0B789Fh, 0BEF00h
		dd 70000400h, 0EF9F00F0h, 0F700000Bh, 400000Bh,	0F47000h
		dd 0BF79Fh, 0C6E00h, 70000400h,	6E9F00F8h, 7600000Ch, 400000Ch
		dd 0FC7000h, 0C769Fh, 0C7800h, 70000400h, 9F0180h, 0
		db 3 dup(0)
off_627F	dd offset _des3_get_batch ; DATA XREF: .debug_info:00002E3Do
		dd offset loc_DA3
		db 2
		dd 0A3047400h, 0CB00000Dh, 200000Dh, 0CB307400h, 0CC00000Dh
		dd 200000Dh, 0CC047400h, 0D100000Dh, 200000Dh, 307400h
		dd 0
		db 3 dup(0)
off_62B7	dd offset loc_DBA	; DATA XREF: .debug_info:00002E61o
		dd offset loc_DBC
		db 1
		dd offset dword_5000
		dd 0
		db 2 dup(0)
off_62CA	dd offset _des3_set_batch ; DATA XREF: .debug_info:00002EA1o
		dd offset loc_DD5
		dw 2
		dd 0DD50474h, 0DD80000h, 20000h, 0DD80874h, 0E040000h
		dd 20000h, 0E043074h, 0E050000h, 20000h, 0E050874h, 0E060000h
		dd 20000h, 0E060474h, 0E0B0000h, 20000h, 3074h,	0
		db 2 dup(0)
off_631A	dd offset loc_DF3	; DATA XREF: .debug_info:00002ED5o
		dd offset loc_DFF
		dw 1
		dd offset loc_50
		dd 0
		db 0
off_632D	dd offset _des3_set_key	; DATA XREF: .debug_info:00002F13o
		dd offset loc_E0D
		db 2, 0, 74h
		dd 0E0D04h, 0E0E00h, 74000200h,	0E0E08h, 0E1100h, 74000200h
		dd 0E110Ch, 0EC100h, 74000200h,	0EC130h, 0EC200h, 74000200h
		dd 0EC20Ch, 0EC300h, 74000200h,	0EC308h, 0EC400h, 74000200h
		dd 0EC404h, 0EC900h, 74000200h,	30h, 0
		db 0
off_6395	dd offset loc_E2E	; DATA XREF: .debug_info:00002F46o
		dd offset loc_E33
		db 1, 0, 50h
		dd offset loc_E33
		dd offset loc_E5A
		dd 530001h, 0
		db 3 dup(0)
off_63B3	dd offset loc_E54	; DATA XREF: .debug_info:00002F54o
		dd offset loc_E5A
		db 2
		dd 0A79F3000h, 0C800000Eh, 100000Eh, 5100h, 0
		db 2 dup(0)
off_63D2	dd offset _des_set_key	; DATA XREF: .debug_info:00002FE1o
		dd offset loc_ECD
		dw 2
		dd 0ECD0474h, 0ECE0000h, 20000h, 0ECE0874h, 0ED10000h
		dd 20000h, 0ED10C74h, 0F2A0000h, 20000h, 0F2A3074h, 0F2B0000h
		dd 20000h, 0F2B0C74h, 0F2C0000h, 20000h, 0F2C0874h, 0F2D0000h
		dd 20000h, 0F2D0474h, 0F320000h, 20000h, 3074h,	0
		db 2 dup(0)
off_643A	dd offset loc_EEE	; DATA XREF: .debug_info:00003014o
		dd offset loc_EF2
		dw 1
		dd 0EF250h, 0EF600h, 52000100h,	0EF6h, 0F2Ch, 2D560001h
		dd 3200000Fh, 100000Fh,	5600h, 0
		db 2 dup(0)
off_646E	dd offset loc_EF7	; DATA XREF: .debug_info:00003022o
		dd offset loc_EFB
		dw 2
		dd 0F139F30h, 0F310000h, 10000h, 51h, 0
		db 0
off_648D	dd offset _des_decrypt	; DATA XREF: .debug_info:0000307Do
		dd offset loc_F35
		db 2, 0, 74h
		dd 0F3504h, 0F3600h, 74000200h,	0F3608h, 0F3700h, 74000200h
		dd 0F370Ch, 0F3800h, 74000200h,	0F3810h, 0F3B00h, 74000200h
		dd 0F3B14h, 103000h, 74000300h,	103000E0h, 10310000h, 20000h
		dd 10311474h, 10320000h, 20000h, 10321074h, 10330000h
		dd 20000h, 10330C74h, 10340000h, 20000h, 10340874h, 10380000h
		dd 20000h, 10380474h, 104B0000h, 30000h, 0E074h, 0
		db 3 dup(0)
off_6527	dd offset loc_F6A	; DATA XREF: .debug_info:000030DDo
		dd offset unk_F96
		db 2
		dd 969F3000h, 9A00000Fh, 100000Fh, 0FBC5300h, 0FCD0000h
		dd 10000h, 104053h, 104600h
		db 0, 2
word_6552	dw 3000h		; DATA XREF: .debug_loc:00004818o
		dd offset loc_99+6
		dd 0
		db 0
off_655D	dd offset loc_F6A	; DATA XREF: .debug_info:000030EBo
		dd offset loc_FEF
		db 2, 0, 30h
		dd 10359Fh, 104600h, 30000200h,	9Fh, 0
		db 0
off_657D	dd offset loc_FE1	; DATA XREF: .debug_info:000030FBo
		dd offset loc_1001
		db 1, 0, 53h
		dd offset loc_1001
		dd offset loc_1007
		dd 500001h, 0
		db 3 dup(0)
off_659B	dd offset _des_encrypt	; DATA XREF: .debug_info:000031B0o
		dd offset loc_104D
		db 2
		dd 4D047400h, 4E000010h, 2000010h, 4E087400h, 4F000010h
		dd 2000010h, 4F0C7400h,	50000010h, 2000010h, 50107400h
		dd 53000010h, 2000010h,	53147400h, 48000010h, 3000011h
		dd 0E07400h, 1148h, 1149h, 14740002h, 1149h, 114Ah, 10740002h
		dd 114Ah, 114Bh, 0C740002h, 114Bh, 114Ch, 8740002h, 114Ch
		dd 1150h, 4740002h, 1150h, 1163h, 0E0740003h, 2	dup(0)
		db 0
off_6635	dd offset loc_1082	; DATA XREF: .debug_info:00003210o
		dd offset unk_10AE
		db 2, 0, 30h
		dd 10AE9Fh, 10B200h, 53000100h,	10D4h, 10E5h, 58530001h
		dd 5E000011h, 2000011h,	9F3000h, 0
		db 3 dup(0)
off_666B	dd offset loc_1082	; DATA XREF: .debug_info:0000321Eo
		dd offset loc_1107
		db 2
		dd 4D9F3000h, 5E000011h, 2000011h, 9F3000h, 0
		db 3 dup(0)
off_668B	dd offset loc_10F9	; DATA XREF: .debug_info:0000322Eo
		dd offset loc_1119
		db 1
		dd 11195300h, 111F0000h, 10000h, 50h, 0
		db 0
off_66A9	dd offset _des3_uninit	; DATA XREF: .debug_info:000032CFo
		dd offset loc_1165
		db 2, 0, 74h
		dd 116504h, 116800h, 74000200h,	116808h, 119F00h, 74000200h
		dd 119F30h, 11A000h, 74000200h,	11A008h, 11A500h, 74000200h
		dd 11A504h, 11AA00h, 74000200h,	30h, 0
		db 0
off_66F9	dd offset loc_1181	; DATA XREF: .debug_info:000032FCo
		dd offset loc_1188
		db 1, 0, 50h
		dd offset loc_1188
		dd offset loc_11A0+4
		dd 0A5520001h, 0A9000011h, 1000011h, 11A95200h,	11AA0000h
		dd 40000h, 9F79F477h, 2	dup(0)
off_6730	dd offset _des_uninit	; DATA XREF: .debug_info:00003342o
		dd offset loc_11AD
		dd 4740002h, 11ADh, 11B0h, 8740002h, 11B0h, 11E7h, 30740002h
		dd 11E7h, 11E8h, 8740002h, 11E8h, 11EDh, 4740002h, 11EDh
		dd 11F2h, 30740002h, 2 dup(0)
off_6780	dd offset loc_11C9	; DATA XREF: .debug_info:0000336Eo
		dd offset loc_11D0
		dd 0D0500001h, 0EC000011h, 1000011h, 11ED5200h,	11F10000h
		dd 10000h, 11F152h, 11F200h, 77000400h,	9F7E80h, 0
		db 3 dup(0)
off_67B7	dd offset _des3_init	; DATA XREF: .debug_info:000033B3o
		dd offset loc_11F5
		db 2
		dd 0F5047400h, 0F8000011h, 2000011h, 0F8087400h, 2A000011h
		dd 2000012h, 2A307400h,	2B000012h, 2000012h, 2B087400h
		dd 30000012h, 2000012h,	30047400h, 35000012h, 2000012h
		dd 307400h, 0
		db 3 dup(0)
off_6807	dd offset loc_1213	; DATA XREF: .debug_info:000033E9o
		dd offset loc_122B+4
		db 1
		dd 12305000h, 12340000h, 10000h, 50h, 0
		db 0
off_6825	dd offset _des_init	; DATA XREF: .debug_info:0000342Do
		dd offset loc_1239
		db 2, 0, 74h
		dd 123904h, 123C00h, 74000200h,	123C08h, 126E00h, 74000200h
		dd 126E30h, 126F00h, 74000200h,	126F08h, 127400h, 74000200h
		dd 127404h, 127900h, 74000200h,	30h, 0
		db 0
off_6875	dd offset loc_1257	; DATA XREF: .debug_info:00003463o
		dd offset loc_126F+4
		db 1, 0, 50h
		dd offset loc_1274
		dd offset loc_1274+4
		dd 500001h, 0
		db 3 dup(0)
off_6893	dd offset _des3_decrypt	; DATA XREF: .debug_info:000035BFo
		dd offset loc_127D
		db 2
		dd 7D047400h, 7E000012h, 2000012h, 7E087400h, 7F000012h
		dd 2000012h, 7F0C7400h,	80000012h, 2000012h, 80107400h
		dd 83000012h, 2000012h,	83147400h, 26000012h, 3000013h
		dd 1907400h, 1326h, 1327h, 14740002h, 1327h, 1328h, 10740002h
		dd 1328h, 1329h, 0C740002h, 1329h, 132Ah, 8740002h, 132Ah
		dd 132Ch, 4740002h, 132Ch, 162Ch, 90740003h, 1,	0
		db 0
off_692D	dd offset loc_12CE	; DATA XREF: .debug_info:000035F5o
		dd offset loc_12D2
		db 1, 0, 50h
		dd offset loc_12D2
		dd offset loc_130C+4
		dd 10510001h, 2B000013h, 3000013h, 7FB49100h, 132Bh, 1362h
		dd 62510001h, 0E2000013h, 3000013h, 7FB49100h, 13E2h, 13F8h
		dd 0F8510001h, 15000013h, 3000016h, 7FB49100h, 1615h, 1617h
		dd 17510001h, 2C000016h, 3000016h, 7FB49100h, 2	dup(0)
off_69A0	dd offset unk_132B	; DATA XREF: .debug_info:000036A1o
		dd offset unk_13E2
		dd 0BC910003h, 15817Fh,	161E00h, 91000300h, 7FBCh, 0
		db 2 dup(0)
off_69C2	dd offset unk_132B	; DATA XREF: .debug_info:000036AAo
		dd offset unk_1377
		dw 3
		dd 777FB891h, 0C9000013h, 1000013h, 13C95500h, 13E20000h
		dd 30000h, 817FB891h, 1E000015h, 3000016h, 7FB89100h, 2	dup(0)
off_69FC	dd offset unk_132B	; DATA XREF: .debug_info:000036B3o
		db 0E2h
byte_6A01	db 13h			; DATA XREF: .debug_info:00002D3Co
					; .debug_info:00002DC0o ...
word_6A02	dw 0			; DATA XREF: .debug_info:000034FDo
					; .debug_info:00003509o ...
		dd 9C910003h, 15817Fh, 161E00h,	91000300h, 7F9Ch, 0
		db 2 dup(0)
off_6A1E	dd offset unk_132B	; DATA XREF: .debug_info:000036BCo
		dd offset unk_13E2
		dw 3
		dd 817FA091h, 1E000015h, 3000016h, 7FA09100h, 2	dup(0)
off_6A40	dd offset unk_132B	; DATA XREF: .debug_info:000036C5o
		dd offset unk_13E2
		dd 0B4910003h, 15817Fh,	161E00h, 91000300h, 7FB4h, 0
		db 2 dup(0)
off_6A62	dd offset unk_132B	; DATA XREF: .debug_info:000036D3o
		dd offset unk_1377
		dw 2
		dd 13779F30h, 137A0000h, 10000h, 13BC52h, 13C900h, 57000100h
		dd 1615h, 161Eh, 9F300002h, 2 dup(0)
off_6A98	dd offset unk_132B	; DATA XREF: .debug_info:000036DCo
		dd offset unk_13E2
		dd 9F300002h, 1581h, 15B1h, 9F300002h, 1615h, 161Eh, 9F300002h
		dd 2 dup(0)
off_6AC4	dd offset loc_158F	; DATA XREF: .debug_info:000036E5o
		dd offset loc_1615
		dd 570001h, 0
		db 3 dup(0)
off_6AD7	dd offset unk_13E2	; DATA XREF: .debug_info:000037FAo
		dd offset loc_1581
		db 3
		dd 7FBC9100h, 161Eh, 1627h, 0BC910003h,	7Fh, 0
		db 0
off_6AF9	dd offset unk_13E2	; DATA XREF: .debug_info:00003803o
		dd offset loc_1581
		db 3, 0, 91h
		dd 161E7FB8h, 16270000h, 30000h, 7FB891h, 0
		db 3 dup(0)
off_6B1B	dd offset unk_13E2	; DATA XREF: .debug_info:0000380Co
		dd offset loc_1581
		db 3
		dd 7F9C9100h, 161Eh, 1627h, 9C910003h, 7Fh, 0
		db 0
off_6B3D	dd offset unk_13E2	; DATA XREF: .debug_info:00003815o
		dd offset loc_1581
		db 3, 0, 91h
		dd 161E7FA0h, 16270000h, 30000h, 7FA091h, 0
		db 3 dup(0)
off_6B5F	dd offset unk_13E2	; DATA XREF: .debug_info:0000381Eo
		dd offset loc_1581
		db 3
		dd 7FB49100h, 161Eh, 1627h, 510001h, 0
		db 3 dup(0)
off_6B7F	dd offset unk_13E2	; DATA XREF: .debug_info:0000382Co
		dd offset loc_143F
		db 2
		dd 0A69F3000h, 0B3000014h, 1000014h, 14B35700h,	14B50000h
		dd 10000h, 14B555h, 14BA00h, 57000100h,	161Eh, 1627h, 9F300002h
		dd 2 dup(0)
off_6BC0	dd offset unk_13E2	; DATA XREF: .debug_info:00003835o
		dd offset loc_143F
		dd 9F300002h, 148Ah, 148Ch, 9F300002h, 1493h, 149Bh, 0E8500001h
		dd 0FE000014h, 2000014h, 609F3000h, 6D000015h, 2000015h
		dd 779F3000h, 81000015h, 1000015h, 161E5000h, 16270000h
		dd 20000h, 9F30h, 0
		db 2 dup(0)
off_6C1A	dd offset loc_14D8	; DATA XREF: .debug_info:0000383Eo
		dd offset loc_14FE
		dw 1
		dd 14FE57h, 151500h, 50000100h,	1515h, 1527h, 520001h
		dd 0
		db 3 dup(0)
off_6C43	dd offset _des3_encrypt	; DATA XREF: .debug_info:00003A93o
		dd offset loc_162D
		db 2
		dd 2D047400h, 2E000016h, 2000016h, 2E087400h, 2F000016h
		dd 2000016h, 2F0C7400h,	30000016h, 2000016h, 30107400h
		dd 33000016h, 2000016h,	33147400h, 0C3000016h, 3000016h
		dd 0F07400h, 16C3h, 16C4h, 14740002h, 16C4h, 16C5h, 10740002h
		dd 16C5h, 16C6h, 0C740002h, 16C6h, 16C7h, 8740002h, 16C7h
		dd 16C8h, 4740002h, 16C8h, 1940h, 0F0740003h, 2	dup(0)
		db 0
off_6CDD	dd offset loc_166D	; DATA XREF: .debug_info:00003AC9o
		dd offset loc_166F
		db 1, 0, 50h
		dd offset loc_166F
		dd offset _des3_set_iv
		dd 44910002h, 2	dup(0)
off_6CFC	dd offset loc_16C8	; DATA XREF: .debug_info:00003B75o
		dd offset unk_178D
		dd 4C910002h, 18D9h, 191Ah, 4C910002h, 1929h, 1932h, 4C910002h
		dd 2 dup(0)
off_6D28	dd offset loc_16C8	; DATA XREF: .debug_info:00003B7Eo
		dd offset unk_171D
		dd 48910002h, 171Dh, 1772h, 72570001h, 8D000017h, 2000017h
		dd 0D9489100h, 1A000018h, 2000019h, 29489100h, 32000019h
		dd 2000019h, 489100h, 0
		db 3 dup(0)
off_6D6B	dd offset loc_16C8	; DATA XREF: .debug_info:00003B87o
		dd offset unk_178D
		db 3
		dd 7FB49100h, 18D9h, 191Ah, 0B4910003h,	19297Fh, 193200h
		dd 91000300h, 7FB4h, 0
		db 2 dup(0)
off_6D9A	dd offset loc_16C8	; DATA XREF: .debug_info:00003B90o
		dd offset loc_171B
		dw 1
		dd 171B57h, 171D00h, 91000300h,	171D7FB0h, 178D0000h, 20000h
		dd 18D90491h, 191A0000h, 20000h, 19290491h, 19320000h
		dd 10000h, 57h,	0
		db 0
off_6DDD	dd offset loc_16C8	; DATA XREF: .debug_info:00003B99o
		dd offset unk_178D
		db 2, 0, 91h
		dd 18D944h, 191A00h, 91000200h,	192944h, 193200h, 91000200h
		dd 44h,	0
		db 0
off_6E09	dd offset loc_16C8	; DATA XREF: .debug_info:00003BA7o
		dd offset unk_171D
		db 2, 0, 30h
		dd 171D9Fh, 172200h, 52000100h,	1763h, 1774h, 29550001h
		dd 32000019h, 2000019h,	9F3000h, 0
		db 3 dup(0)
off_6E3F	dd offset loc_16C8	; DATA XREF: .debug_info:00003BB0o
		dd offset unk_178D
		db 2
		dd 0D99F3000h, 5000018h, 2000019h, 299F3000h, 32000019h
		dd 2000019h, 9F3000h, 0
		db 3 dup(0)
off_6E6B	dd offset loc_18E7	; DATA XREF: .debug_info:00003BB9o
		dd offset loc_191A
		db 1
		dd offset off_5500
		dd 0
		db 2 dup(0)
off_6E7E	dd offset unk_178D	; DATA XREF: .debug_info:00003C4Do
		dd offset loc_1885
		dw 2
		dd 191A4C91h, 19290000h, 20000h, 19324C91h, 193B0000h
		dd 20000h, 4C91h, 0
		db 2 dup(0)
off_6EAA	dd offset unk_178D	; DATA XREF: .debug_info:00003C56o
		dd offset loc_1885
		dw 2
		dd 191A4891h, 19290000h, 20000h, 19324891h, 193B0000h
		dd 20000h, 4891h, 0
		db 2 dup(0)
off_6ED6	dd offset unk_178D	; DATA XREF: .debug_info:00003C5Fo
		dd offset loc_1885
		dw 3
		dd 1A7FB491h, 29000019h, 3000019h, 7FB49100h, 1932h, 193Bh
		dd 0B4910003h, 7Fh, 0
		db 0
off_6F05	dd offset unk_178D	; DATA XREF: .debug_info:00003C68o
		dd offset loc_1885
		db 1, 0, 57h
		dd offset loc_191A
		dd offset loc_1929
		dd 32570001h, 3B000019h, 1000019h, 5700h, 0
		db 2 dup(0)
off_6F2E	dd offset unk_178D	; DATA XREF: .debug_info:00003C71o
		dd offset loc_1885
		dw 2
		dd 191A4491h, 19290000h, 20000h, 19324491h, 19340000h
		dd 10000h, 193451h, 193B00h, 91000200h,	44h, 0
		db 0
off_6F65	dd offset unk_178D	; DATA XREF: .debug_info:00003C7Fo
		dd offset loc_17DD
		db 2, 0, 30h
		dd 18419Fh, 184E00h, 55000100h,	184Eh, 1852h, 32560001h
		dd 3B000019h, 2000019h,	9F3000h, 0
		db 3 dup(0)
off_6F9B	dd offset unk_178D	; DATA XREF: .debug_info:00003C88o
		dd offset loc_17E5
		db 2
		dd 0EF9F3000h, 7000017h, 1000018h, 186A5000h, 18780000h
		dd 20000h, 19329F30h, 193B0000h, 20000h, 9F30h,	0
		db 2 dup(0)
off_6FD2	dd offset loc_186A	; DATA XREF: .debug_info:00003C91o
		dd offset loc_1885
		dw 1
		dd offset loc_54+1
		dd 0
		db 0
off_6FE5	dd offset _des3_set_iv	; DATA XREF: .debug_info:00003DBCo
		dd offset loc_1941
		db 2, 0, 74h
		dd 194104h, 194400h, 74000200h,	194408h, 198600h, 74000200h
		dd 198630h, 198700h, 74000200h,	198708h, 198C00h, 74000200h
		dd 198C04h, 19AE00h, 74000200h,	19AE30h, 19AF00h, 74000200h
		dd 19AF08h, 19B000h, 74000200h,	19B004h, 19B500h, 74000200h
		dd 30h,	0
		db 0
off_7059	dd offset loc_1994	; DATA XREF: .debug_info:00003DE2o
		dd offset loc_19B0
		db 1, 0, 50h
		dd 2 dup(0)
off_706C	dd offset loc_195F	; DATA XREF: .debug_info:00003E03o
		dd offset loc_198C
		dd 9F300002h, 198Ch, 19B0h, 9F310002h, 2 dup(0)
off_708C	dd offset _purple_des_cipher_get_ops ; DATA XREF: .debug_info:00003E98o
		dd offset loc_19BB
		dd 4740002h, 19BBh, 19DAh, 20740002h, 19DAh, 19DBh, 4740002h
		dd 19DBh, 19E0h, 20740002h, 2 dup(0)
off_70C4	dd offset _purple_des3_cipher_get_ops ;	DATA XREF: .debug_info:00003EDEo
		dd offset loc_19E3
		dd 4740002h, 19E3h, 1A02h, 20740002h, 1A02h, 1A03h, 4740002h
		dd 1A03h, 1A08h, 20740002h, 2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 70FCh
		dd 1Ch
		db 2, 0
		dd offset off_240C
		dw 4
		dd 0
		dd offset _des_key_schedule
		dd offset _DESOps
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 711Ch
off_711C	dd offset loc_132C	; DATA XREF: .debug_info:00003691o
		dd offset loc_13E4
		dd offset loc_1581
		dd offset loc_1610
		dd offset loc_1615
		dd offset loc_161E
		dd 2 dup(0)
off_713C	dd offset loc_132C	; DATA XREF: .debug_info:000036CAo
		dd offset loc_13E4
		dd offset loc_1581
		dd offset loc_1610
		dd offset loc_1615
		dd offset loc_161E
		dd 2 dup(0)
off_715C	dd offset loc_13E4	; DATA XREF: .debug_info:000037EAo
		dd offset loc_1581
		dd offset loc_161E
		dd offset loc_1627
		dd 2 dup(0)
off_7174	dd offset loc_13E4	; DATA XREF: .debug_info:00003823o
		dd offset loc_1581
		dd offset loc_161E
		dd offset loc_1627
		dd 2 dup(0)
off_718C	dd offset loc_16C8	; DATA XREF: .debug_info:00003B65o
		dd offset loc_1790
		dd offset loc_17E0
		dd offset loc_17E8
		dd offset loc_18D9
		dd offset loc_191A
		dd offset loc_1929
		dd offset loc_1932
		dd 2 dup(0)
off_71B4	dd offset loc_16C8	; DATA XREF: .debug_info:00003B9Eo
		dd offset loc_1790
		dd offset loc_17E0
		dd offset loc_17E8
		dd offset loc_18D9
		dd offset loc_191A
		dd offset loc_1929
		dd offset loc_1932
		dd 2 dup(0)
off_71DC	dd offset loc_1790	; DATA XREF: .debug_info:00003C3Do
		dd offset loc_17E0
		dd offset loc_17E8
		dd offset loc_18D4
		dd offset loc_191A
		dd offset loc_1929
		dd offset loc_1932
		dd offset loc_193B
		dd 2 dup(0)
off_7204	dd offset loc_1790	; DATA XREF: .debug_info:00003C76o
		dd offset loc_17E0
		dd offset loc_17E8
		dd offset loc_18D4
		dd offset loc_191A
		dd offset loc_1929
		dd offset loc_1932
		dd offset loc_193B
		dd 2 dup(0)
off_722C	dd offset loc_195F	; DATA XREF: .debug_info:00003E11o
		dd offset loc_1983
		dd offset loc_1987
		dd offset loc_198C
		dd 2 dup(0)
off_7244	dd offset loc_195F	; DATA XREF: .debug_info:00003E1Do
		dd offset loc_1983
		dd offset loc_1987
		dd offset loc_198C
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 725Ch
off_725C	dd offset loc_4ED+5	; DATA XREF: .debug_info:00002472o
		db    2
		align 2
		dd offset loc_136+2
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aIphers		db 'iphers',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a__Libpurple	db '../libpurple',0
		dw 6400h
aEs_c		db 'es.c',0
		db 1, 2	dup(0)
aStddef_h	db 'stddef.h',0
		db 2, 2	dup(0)
aGlibconfig_h	db 'glibconfig.h',0
		db 3, 2	dup(0)
aGtypes_h	db 'gtypes.h',0
		db 4, 2	dup(0)
aGmessages_h	db 'gmessages.h',0
		dd 63000004h, 65687069h, 682E72h, 67000005h, 2E6D656Dh
		dd 40068h, 5000000h
		db 2
		dd offset _des_key_schedule
		db 3, 0FDh, 1
		dd 2BE9001h, 2F08143Dh,	811E08DBh, 2DE29308h, 2F082108h
		dd 2B132602h, 0F0086B33h, 2D750881h, 2F082108h,	2B132602h
		dd 2006833h, 760204h, 2020402h,	2001323h, 9030204h, 2005808h
		dd 970204h, 94020402h, 2040200h, 906E03h, 9F020402h, 2040200h
		dd 0C80E03h, 3020402h, 2008273h, 0C90204h, 0C9020402h
		dd 2040200h, 40200C9h, 200C902h, 0BB0204h, 9F020402h, 2040200h
		dd 40200E5h, 200C902h, 0C90204h, 0C9020402h, 2040200h
		dd 40200C9h, 200BB02h, 0BB0204h, 2F020402h, 2040200h, 402009Fh
		dd 2009F02h, 910204h, 9F020402h, 2040200h, 402009Fh, 200BC02h
		dd 0BB0204h, 3020402h, 200C80Fh, 72030204h, 4020066h, 200BB02h
		dd 0C90204h, 0C9020402h, 2040200h, 40200BBh, 200C902h
		dd 0C90204h, 0E5020402h, 2040200h, 40200C9h, 2008302h
		dd 0C90204h, 0C9020402h, 2040200h, 40200C9h, 200BB02h
		dd 0C90204h, 2F020402h,	2040200h, 40200C9h, 2009F02h, 910204h
		dd 0BB020402h, 2040200h, 0C87FB703h, 2040200h, 33C1803h
		dd 1E03C833h, 0BEAC9E08h, 1040200h, 2008206h, 3E060304h
		dd 3040200h, 133D02h, 2030402h,	200145Eh, 0D40304h, 4C030402h
		dd 3040200h, 1301ED02h,	3040200h, 1301FE02h, 3040200h
		dd 1301FE02h, 3040200h,	1301FE02h, 3040200h, 1301FE02h
		dd 3040200h, 1301FE02h,	3040200h, 1301FE02h, 3040200h
		dd 1401FE02h, 3040200h,	136502h, 2030402h, 0D6061539h
		dd 38B0306h, 0BCAD3CD6h, 874032Fh, 0BCAD8274h, 7DF7032Fh
		dd 0AD906608h, 8D79FD9h, 4020022h, 2004C02h, 0BB0204h
		dd 0BB020402h, 2040200h, 40200BBh, 200BB02h, 0BB0204h
		dd 3020402h, 903BA79h, 7EC703D6h, 0AD909008h, 200AED9h
		dd 3E0204h, 9F020402h, 2040200h, 0C303B19Bh, 2820800h
		dd 0F3B0122Bh, 0FF08E508h, 12080903h, 70036749h, 901303F2h
		dd 26A1E67h, 72031822h,	79038208h, 19032A82h, 6647034Ah
		dd 0B0122B02h, 8E508F3h, 80903FFh, 3674912h, 1303F270h
		dd 6A1E6790h, 3182202h,	3820872h, 32A8279h, 88034A19h
		dd 0AF4A6603h, 48F4AED7h, 0BA7D9B03h, 0AED7AF4Ah, 0D10348F4h
		dd 0AE82BA02h, 493D08BBh, 0C87D9F03h, 8BBAE82h,	0AF03493Dh
		dd 3302C802h, 3008BB12h, 34027784h, 7F8F0316h, 2F39E08h
		dd 9408143Eh, 76034008h, 11033C08h, 20039DC8h, 8F41208h
		dd 133A0221h, 5C08CC08h, 652F5C08h, 0D6710368h,	3C081203h
		dd 3BC839Fh, 3AC0819h, 1E67BA6Ah, 8DA086Ah, 0F38608A2h
		dd 7FB70365h, 0CE03D8ACh, 3580800h, 67E47FB4h, 0DA086A1Eh
		dd 0C7038608h, 3660800h, 2A587F98h, 3743703h, 0C3032E7Ah
		dd 0FA037400h, 2602587Eh, 68F4AD12h, 16340277h,	87F9303h
		dd 4A02F390h, 8860813h,	8770340h, 810033Ch, 21039D12h
		dd 21082008h, 3E026203h, 82200301h, 78086965h, 40084008h
		dd 3C87003h, 9F120814h,	3C081803h, 67826C03h, 0BE086A1Eh
		dd 11038608h, 0AB038208h, 3D8587Fh, 580800CBh, 0AC7FB703h
		dd 30031E67h, 7FBC03ACh, 35032AE4h, 0C0032974h,	8E037400h
		dd 0BDBA5801h, 45172B02h, 3AD845Ah, 3C82082Fh, 3C9308AEh
		dd 1A02AEh
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 7754h
aDes3_decrypt	db 'des3_decrypt',0     ; DATA XREF: .debug_info:00002B4Co
					; .debug_info:00002BAFo
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00002BA6o
					; .debug_info:00002C2Ao ...
aContext	db 'context',0          ; DATA XREF: .debug_info:00002B5Eo
					; .debug_info:00002BE2o ...
aOffset		db 'offset',0           ; DATA XREF: .debug_info:000030D2o
					; .debug_info:00003205o ...
aOutlen		db 'outlen',0           ; DATA XREF: .debug_info:00002B8Eo
					; .debug_info:00002C12o ...
aOutput		db 'output',0           ; DATA XREF: .debug_info:00002B82o
					; .debug_info:00002C06o ...
aData		db 'data',0             ; DATA XREF: .debug_info:00002B6Ao
					; .debug_info:00002BEEo ...
aDes3_encrypt	db 'des3_encrypt',0     ; DATA XREF: .debug_info:00002BD0o
					; .debug_info:00002C33o
aDes3_set_iv	db 'des3_set_iv',0      ; DATA XREF: .debug_info:00002C3Eo
					; .debug_info:00002C84o
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 77B0h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch
		dd offset loc_1A03-91D3h
		dd offset unk_436
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0A042503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B41040Eh, 3Ch, 5Ch
		dd offset loc_1A03-8DDBh
		dd offset loc_966+1
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 400E4305h, 0A095603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B41040Eh, 18h, 9Ch
		dd offset loc_1A03-84B3h
		dd offset loc_31
		dd 300E4300h, 40E0A68h,	0B41h, 20h, 0B8h
		dd offset loc_1A03-849Bh
		dd offset loc_37
		dd 80E4100h, 0E430283h,	0E0A6C30h, 0EC34108h, 0B4104h
		dd 2Ch,	0DCh
		dd offset loc_1A03-8487h
		dd offset loc_BD
		dd 80E4100h, 0E410286h,	4303830Ch, 0B002300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 10Ch
		dd offset loc_1A03-83F7h
		dd offset loc_65+1
		dd 80E4100h, 0E410286h,	4303830Ch, 5902300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 13Ch
		dd offset loc_1A03-83BFh
		dd offset loc_115+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0AF502h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 3Ch, 17Ch
		dd offset loc_1A03-82E7h
		dd offset loc_115+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0AF502h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 20h, 1BCh
		dd offset loc_1A03-820Fh
		dd offset loc_43+3
		dd 80E4100h, 0E430287h,	0E0A7730h, 0EC74108h, 0B4504h
		dd 20h,	1E0h
		dd offset loc_1A03-81EBh
		dd offset loc_43+3
		dd 80E4100h, 0E430287h,	0E0A7730h, 0EC74108h, 0B4504h
		dd 20h,	204h
		dd offset loc_1A03-81C7h
		dd offset loc_41
		dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4504h
		dd 20h,	228h
		dd offset loc_1A03-81A7h
		dd offset loc_41
		dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4504h
		dd 3Ch,	24Ch
		dd offset loc_1A03-8187h
		dd offset loc_3B0
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 900E4305h, 0AA30201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B42040Eh, 3Ch, 28Ch
		dd offset loc_1A03-7E17h
		dd offset loc_314
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 700E4305h, 0E0A9002h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4104h, 2Ch, 2CCh
		dd offset loc_1A03-7B43h
		dd offset loc_75
		dd 80E4100h, 0E430283h,	0A420230h, 0C341080Eh, 0B45040Eh
		dd 80E0A62h, 40EC341h, 0B41h, 18h, 2FCh
		dd offset loc_1A03-7AFBh
		dd offset loc_28
		dd 200E4300h, 40E0A5Fh,	0B41h, 18h, 318h
		dd offset loc_1A03-7AEFh
		dd offset loc_28
		dd 200E4300h, 40E0A5Fh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _des_key_schedule+9r
					; _des_key_schedule+421r ...
		extrn ___stack_chk_fail:near ; CODE XREF: _des_key_schedule:loc_431p
					; _des_ecb_crypt:loc_D9Ap ...
		extrn _purple_cipher_context_get_data:near ; CODE XREF:	_des3_get_batch+15p
					; _des3_set_batch+1Ap ...
		extrn _g_free:near	; CODE XREF: _des3_uninit:loc_11A0j
					; _des_uninit+3Cj
		extrn _g_malloc0:near	; CODE XREF: _des3_init+1Ap
					; _des_init+1Ap
		extrn _purple_cipher_context_set_data:near ; CODE XREF:	_des3_init:loc_122Bj
					; _des_init:loc_126Fj
		extrn _g_log:near	; CODE XREF: _des3_decrypt:loc_130Cp
					; _des3_encrypt+7Dp
		extrn _g_return_if_fail_warning:near ; CODE XREF: _des3_set_iv:loc_1987j


		end

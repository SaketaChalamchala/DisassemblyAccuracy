;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	BDAFB3B4868F9AA69F71A349F47DEB79
; Input	CRC32 :	D94E21E0

; File Name   :	d:\pidgin-o\gtkeventloop.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_pidgin_input_add proc near		; DATA XREF: .data:00000188o
					; .debug_info:00000238o ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edx, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_30], edx
		mov	esi, [esp+5Ch+arg_4]
		mov	ebp, [esp+5Ch+arg_8]
		mov	edi, [esp+5Ch+arg_C]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax

loc_26:					; DATA XREF: .eh_frame:00001DD0o
		mov	[esp+5Ch+var_5C], 0Ch
		call	_g_malloc0

loc_32:					; DATA XREF: .debug_info:0000138Do
		mov	ebx, eax

loc_34:					; DATA XREF: .debug_loc:off_1922o
					; .debug_loc:off_197Fo
		mov	eax, _use_glib_io_channel_38694

loc_39:					; DATA XREF: .debug_loc:00001926o
		cmp	eax, 0FFFFFFFFh
		jz	loc_C4

loc_42:					; CODE XREF: _pidgin_input_add+DDj
		mov	[ebx], ebp
		mov	[ebx+8], edi
		mov	edi, esi
		and	edi, 1
		neg	edi
		and	edi, 19h

loc_51:					; DATA XREF: .debug_loc:00001983o
		and	esi, 2
		jz	short loc_59
		or	edi, 3Ch

loc_59:					; CODE XREF: _pidgin_input_add+54j
		mov	edx, [esp+5Ch+var_30]
		mov	[esp+5Ch+var_5C], edx
		test	eax, eax
		jz	short loc_B8

loc_64:					; DATA XREF: .debug_info:00000334o
					; .debug_info:00000FBDo ...
		call	_g_io_channel_unix_new

loc_69:					; DATA XREF: .debug_info:000013A1o
		mov	esi, eax

loc_6B:					; CODE XREF: _pidgin_input_add+BFj
					; DATA XREF: .debug_loc:off_194Bo ...
		mov	[esp+5Ch+var_48], offset _g_free
		mov	[esp+5Ch+var_4C], ebx
		mov	[esp+5Ch+var_50], offset _pidgin_io_invoke
		mov	[esp+5Ch+var_54], edi
		mov	[esp+5Ch+var_58], 0
		mov	[esp+5Ch+var_5C], esi

loc_8E:					; DATA XREF: .debug_loc:0000194Fo
		call	_g_io_add_watch_full

loc_93:					; DATA XREF: .debug_info:off_13B7o
		mov	[ebx+4], eax
		mov	[esp+5Ch+var_5C], esi
		call	_g_io_channel_unref

loc_9E:					; DATA XREF: .debug_info:000013EEo
		mov	eax, [ebx+4]
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_E2
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_B8:					; CODE XREF: _pidgin_input_add+62j
		call	_wpurple_g_io_channel_win32_new_socket

loc_BD:					; DATA XREF: .debug_info:00001403o
		mov	esi, eax
		jmp	short loc_6B
; ---------------------------------------------------------------------------
		align 4

loc_C4:					; CODE XREF: _pidgin_input_add+3Cj
		mov	[esp+5Ch+var_5C], offset aPidgin_glib_io ; "PIDGIN_GLIB_IO_CHANNEL"
		call	_g_getenv_utf8

loc_D0:					; DATA XREF: .debug_info:0000140Co
					; .debug_info:00000D34o
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	_use_glib_io_channel_38694, eax
		jmp	loc_42
; ---------------------------------------------------------------------------

loc_E2:					; CODE XREF: _pidgin_input_add+ABj
		call	___stack_chk_fail
_pidgin_input_add endp

; ---------------------------------------------------------------------------
unk_E7		db  90h	; ê		; DATA XREF: .debug_info:000012F0o
					; .debug_info:00001424o ...

; =============== S U B	R O U T	I N E =======================================


_pidgin_io_invoke proc near		; DATA XREF: _pidgin_input_add+77o
					; .debug_info:000013DDo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi

loc_E9:					; DATA XREF: .debug_loc:000019C4o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	ecx, [esp+2Ch+arg_0]
		mov	eax, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_8]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx

loc_106:				; DATA XREF: .debug_loc:off_1A40o
					; .debug_loc:off_1A6Ao
		xor	edx, edx
		test	al, 19h

loc_10A:				; DATA XREF: .debug_info:00000CF0o
		setnz	dl

loc_10D:				; DATA XREF: .debug_loc:00001A6Eo
		test	al, 3Ch
		jz	short loc_148
		mov	esi, edx
		or	esi, 2

loc_116:				; CODE XREF: _pidgin_io_invoke+69j
		mov	edi, [ebx]
		mov	[esp+2Ch+var_2C], ecx
		call	_g_io_channel_unix_get_fd

loc_120:				; DATA XREF: .debug_info:000014B6o
					; .debug_info:00000328o
		mov	[esp+2Ch+var_24], esi
		mov	[esp+2Ch+var_28], eax
		mov	eax, [ebx+8]
		mov	[esp+2Ch+var_2C], eax
		call	edi

loc_130:				; CODE XREF: _pidgin_io_invoke+62j
					; DATA XREF: .debug_info:000014CCo
		mov	eax, 1
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_153
		add	esp, 20h
		pop	ebx

loc_145:				; DATA XREF: .debug_loc:00001A44o
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_148:				; CODE XREF: _pidgin_io_invoke+27j
		test	edx, edx
		jz	short loc_130

loc_14C:				; DATA XREF: .debug_info:00000344o
					; .debug_info:00000844o
		mov	esi, 1
		jmp	short loc_116
; ---------------------------------------------------------------------------

loc_153:				; CODE XREF: _pidgin_io_invoke+57j
		call	___stack_chk_fail
_pidgin_io_invoke endp


; =============== S U B	R O U T	I N E =======================================


		public _pidgin_eventloop_get_ui_ops
_pidgin_eventloop_get_ui_ops proc near	; DATA XREF: .debug_info:00001450o
					; .debug_info:000014E0o ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_15B:				; DATA XREF: .debug_loc:00001A98o
					; .debug_info:00000CACo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _eventloop_ops
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_17B
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_17B:				; CODE XREF: _pidgin_eventloop_get_ui_ops+1Dj
					; DATA XREF: .debug_info:0000023Co ...
		call	___stack_chk_fail
_pidgin_eventloop_get_ui_ops endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 180h
_eventloop_ops	dd offset _g_timeout_add ; DATA	XREF: _pidgin_eventloop_get_ui_ops+Eo
					; .debug_info:00001546o ...
		dd offset _g_source_remove
		dd offset _pidgin_input_add
		dd offset _g_source_remove
		dd 0
off_194		dd offset _g_timeout_add_seconds ; DATA	XREF: .debug_info:000005D5o
					; .debug_info:000009DCo ...
		dd 3 dup(0)
_use_glib_io_channel_38694 dd 0FFFFFFFFh ; DATA	XREF: _pidgin_input_add:loc_34r
					; _pidgin_input_add+D8w ...
		align 20h
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 1C4h
aPidgin_glib_io	db 'PIDGIN_GLIB_IO_CHANNEL',0 ; DATA XREF: _pidgin_input_add:loc_C4o
					; .debug_info:0000141Eo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 1DCh
off_1DC		dd offset off_14B1+3	; DATA XREF: .debug_aranges:00001AD2o
byte_1E0	db 2, 0			; DATA XREF: .debug_info:0000072Do
		dd offset dword_1694
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 6B746701h, 6E657665h, 6F6F6C74h, 632E70h
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\pidgin',0
					; DATA XREF: .debug_line:off_1AECo
		dd offset _pidgin_input_add
		dd offset loc_17B+5
		dd offset off_1AEC
		db    2
byte_245	db 4, 5, 69h		; DATA XREF: .debug_info:00000F3Co
					; .debug_info:00000F58o ...
		db  6Eh	; n
		db 74h,	0, 2
		db    4
aUnsignedInt	db 7,'unsigned int',0   ; DATA XREF: .debug_info:00000CE9o
					; .debug_info:00000D19o ...
		db 2
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 1, 6
aSignedChar	db 'signed char',0
		db    2
		db 1, 8, 75h
aNsignedChar	db 'nsigned char',0
		db 2 dup(2), 5
aShortInt	db 'short int',0
		dw 6703h
aUint32		db 'uint32',0
		db 2
		db  27h	; '
		dd offset loc_6B+4
		db 3, 67h, 69h
aNt64		db 'nt64',0
		db 2, 2Eh, 0DFh
		db    0
		db 2 dup(0), 2
		db    8
		db 5, 6Ch, 6Fh
aNgLongInt	db 'ng long int',0
		db    2
aLongLongUnsign	db 8,7,'long long unsigned int',0 ; DATA XREF: .debug_info:0000070Do
		dw 6703h
aSize		db 'size',0
		db 2, 5Ah, 6Fh
		db    0
		db 2 dup(0), 2
		db    4
aSizetype	db 7,'sizetype',0
		db 2
		db    1
		db 6, 63h, 68h
		db  61h	; a
		db 72h,	0, 2
		db    8
		db 4, 64h, 6Fh
aUble		db 'uble',0
		db 2 dup(4), 2
		db    4
		db 5, 6Ch, 6Fh
aNgInt		db 'ng int',0
		db 3
aGchar		db 'gchar',0
		dw 2D03h
		dd offset loc_120+3
		db    3
aGint		db 'gint',0
		dw 3003h
		dd offset loc_64+4
		db    3
aGboolean	db 'gboolean',0
		dw 3103h
		dd offset loc_14C+4
		db    2
		db 4, 7, 6Ch
aOngUnsignedInt	db 'ong unsigned int',0
		db 3, 67h, 75h
dword_360	dd 746E69h, 6F3603h, 4020000h, 6F6C6604h, 3007461h, 696F7067h
		dd 7265746Eh, 354C0300h, 3000001h, 73654447h, 796F7274h
		dd 69746F4Eh, 3007966h,	1BD56h,	0C3040500h, 6000001h, 1CF01h
		dd 1970700h, 5000000h, 1D504h, 1430800h, 4050000h, 143h
		dd 1970405h, 47030000h,	72617551h, 2604006Bh, 0C2h, 72454703h
		dd 726F72h, 2022005h, 5F090000h, 72724547h, 0C00726Fh
		dd 2452205h, 640A0000h,	69616D6Fh, 2405006Eh, 1E6h, 0A002302h
		dd 65646F63h, 50250500h, 2000001h, 6D0A0423h, 61737365h
		dd 5006567h, 1DA26h, 8230200h, 4B040500h, 0B000002h, 53040501h
		dd 5000002h, 1F404h, 49470300h,	766E6F43h, 67350600h, 5000002h
		dd 26D04h, 475F0C00h, 6E6F4349h, 5010076h, 27D04h, 5C010D00h
		dd 8D000001h, 7000002h,	197h, 53470300h, 7473694Ch, 9B260700h
		dd 9000002h, 4C53475Fh,	747369h, 0CA280708h, 0A000002h
		dd 61746164h, 972A0700h, 2000001h, 6E0A0023h, 747865h
		dd 2CA2B07h, 23020000h,	4050004h, 28Dh,	614D4703h, 6F436E69h
		dd 7865746Eh, 20080074h, 2E4h, 4D475F0Ch, 436E6961h, 65746E6Fh
		dd 1007478h, 6F534703h,	65637275h, 3220800h, 9000003h
		dd 6F53475Fh, 65637275h, 2A083400h, 401h, 6C61630Ah, 6361626Ch
		dd 61645F6Bh, 8006174h,	1972Dh,	230200h, 6C61630Ah, 6361626Ch
		dd 75665F6Bh, 73636Eh, 5232E08h, 23020000h, 6F730A04h
		dd 65637275h, 6E75665Fh, 8007363h, 52930h, 8230200h
		db 0Eh
		dd offset aRef_count	; "ref_count"
		db 8, 31h, 81h
dword_540	dd 2000001h, 630A0C23h,	65746E6Fh, 8007478h, 52F33h, 10230200h
		dd 6972700Ah, 7469726Fh, 35080079h, 150h, 0A142302h, 67616C66h
		dd 36080073h, 181h, 0A182302h, 72756F73h, 695F6563h, 37080064h
		dd 181h, 0A1C2302h, 6C6C6F70h, 7364665Fh, 0CA390800h, 2000002h
		dd 700A2023h, 766572h, 5353B08h, 23020000h, 656E0A24h
		dd 8007478h, 5353Ch, 28230200h
		db 0Eh
		dd offset aReserved1	; "reserved1"
		db 8, 3Eh, 97h
		dd 2000001h
byte_5CC	db 23h,	2Ch, 0Eh	; DATA XREF: .debug_info:0000069Co
		dd offset aReserved2	; "reserved2"
		db 8
		db  3Fh	; ?
		dd offset off_194+3
		db 2, 23h, 30h
		db    0
		db 3, 47h, 53h
aOurcecallbackf	db 'ourceCallbackFuncs',0 ; DATA XREF: .debug_info:00000C81o
		db 8
		db  23h	; #
		dd offset dword_360+0BDh
a_gsourcecallba	db 9,'_GSourceCallbackFuncs',0
		db  0Ch
		db 8, 42h, 68h
		db    4
		db 2 dup(0), 0Ah
		db  72h	; r
		db 65h,	66h, 0
		db    8
		db 44h,	0BDh, 1
		db    0
		align 2
		dw 2302h
		db    0
aUnref		db 0Ah
		db 'unref',0
		db    8
		db 45h,	0BDh, 1
		db    0
		align 2
		dw 2302h
		db    4
aGet		db 0Ah
		db 'get',0
		dw 4608h
		dd offset dword_540+1Ch
		db    2
		db 23h,	8, 0
		db    3
aGsourcefuncs	db 'GSourceFuncs',0
		dw 2408h
		dd offset dword_360+11Ch
a_gsourcefuncs	db 9,'_GSourceFuncs',0
		db 18h
		db    8
		db 4Eh,	10h, 5
		db    0
		align 2
aPrepare	db 0Ah
		db 'prepare',0
		db 8
		db  50h	; P
		dd offset dword_540+58h
		db 2, 23h, 0
aCheck		db 0Ah
		db 'check',0
		db 8
		db  52h	; R
		dd offset dword_540+6Eh
		db 2, 23h, 4
aDispatch	db 0Ah
		db 'dispatch',0
		dw 5308h
		dd offset byte_5CC+2
		db    2
aFinalize	db '#',8,0Ah
		db 'finalize',0
		db 8, 56h, 0E0h
		db    5
		db 2 dup(0), 2
		db  23h	; #
		db 0Ch,	0Ah, 63h
aLosure_callbac	db 'losure_callback',0
		db    8
		db 59h,	10h, 5
		db    0
		align 2
		dw 2302h
		db  10h
aClosure_marsha	db 0Ah
		db 'closure_marshal',0
		dw 5A08h
		dd offset dword_540+22h
		db    2
		db 23h,	14h, 0
		db    3
aGsourcefunc	db 'GSourceFunc',0
		db 8, 26h, 77h
		db    2
		db 2 dup(0), 5
		db    4
		dd offset dword_360+0A1h
		db 5, 4, 68h
		db    4
		db 2 dup(0), 5
		db    4
		dd offset aLongLongUnsign+3 ; "ong long	unsigned int"
		db 5, 4, 0F4h
		db    2
		db 2 dup(0), 6
		db    1
		dd offset dword_540+16h
		db 7, 97h, 1
		db    0
		align 2
		dw 3507h
		db    5
		db 2 dup(0), 7
		dd offset dword_540+16h
		db    7
		dd offset byte_1E0
		align 2
		dw 405h
		dd offset dword_360+1B0h
		db    5
		db 4, 3Bh, 5
		db    0
		align 2
		dw 4703h
aSourcedummymar	db 'SourceDummyMarshal',0
		db 8
		dd 2454Ch, 5C010D00h, 92000001h, 7000005h, 535h, 59207h
		dd 4050000h, 150h, 57D0405h, 10D0000h, 15Ch, 5AEh, 53507h
		dd 4050000h, 59Eh, 15C010Dh, 5CE0000h, 35070000h, 7000005h
		dd 510h, 19707h, 4050000h, 5B4h, 5E00106h, 35070000h, 5
		dd 5D40405h, 47030000h,	69727453h, 900676Eh, 5F528h, 475F0900h
		dd 69727453h, 0C00676Eh, 63B2B09h, 730A0000h, 9007274h
		dd 1DA2Dh, 230200h, 6E656C0Ah, 0A2E0900h, 2000001h, 610A0423h
		dd 636F6C6Ch, 64657461h, 6E656C5Fh, 0A2F0900h, 2000001h
		dd 3000823h, 434F4947h,	6E6E6168h, 0A006C65h, 64D2Bh, 475F0900h
		dd 68434F49h, 656E6E61h, 0A40006Ch, 8086Ch
		db 0, 0Eh
		dd offset aRef_count	; "ref_count"
		dw 6F0Ah
		dd offset loc_14C+4
		db    2
		db 23h,	0, 0Ah
aFuncs		db 'funcs',0
aPa		db 0Ah
		db 'pù',0Ah,0
		align 4
		db    2
		db 23h,	4, 0Ah
aEncoding	db 'encoding',0
		db 0Ah,	72h, 0DAh
		db    1
		db 2 dup(0), 2
aRead_cd	db '#',8,0Ah
		db 'read_cd',0
		db 0Ah
		db  73h	; s
		dd offset aUnsignedInt+0Ch ; "t"
		db 2, 23h, 0Ch
aWrite_cd	db 0Ah
		db 'write_cd',0
		dw 740Ah
		dd offset aUnsignedInt+0Ch ; "t"
		db    2
		db 23h,	10h, 0Ah
aLine_term	db 'line_term',0
		dw 750Ah
		dd offset aPidgin_glib_io+16h ;	""
		db    2
		db 23h,	14h, 0Ah
aLine_term_len	db 'line_term_len',0
		dw 760Ah
		dd offset _eventloop_ops+1
		db    2
		db 23h,	18h, 0Ah
aBuf_size	db 'buf_size',0
		db 0Ah,	78h, 0Ah
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 1Ch,	0Ah, 72h
aEad_buf	db 'ead_buf',0
aYg		db 0Ah
		db 'y£',0Ah,0
		align 2
		dw 2302h
aEncoded_read_b	db ' ',0Ah
		db 'encoded_read_buf',0
aZg		db 0Ah
		db 'z£',0Ah,0
		db    0
		db 2, 23h, 24h
aWrite_buf	db 0Ah
		db 'write_buf',0
aG		db 0Ah
		db '{£',0Ah,0
		db    0
		db 2, 23h, 28h
aPartial_write_	db 0Ah
		db 'partial_write_buf',0
aI		db 0Ah			; DATA XREF: .debug_info:00000CCCo
					; .debug_info:00000CFCo
		db '|©',0Ah,0
dword_92C	dd 2C230200h, 6573750Fh, 6675625Fh, 726566h, 181800Ah
		dd 1040000h, 3423021Fh,	5F6F640Fh, 6F636E65h, 0A006564h
		dd 18181h, 1E010400h, 0F342302h, 736F6C63h, 6E6F5F65h
		dd 726E755Fh, 0A006665h, 18182h, 1D010400h, 0F342302h
		dd 725F7369h, 61646165h, 656C62h, 181830Ah, 1040000h, 3423021Ch
		dd 5F73690Fh, 74697277h, 6C626165h, 840A0065h, 181h, 21B0104h
		dd 690F3423h, 65735F73h, 62616B65h, 0A00656Ch, 18185h
		dd 1A010400h, 0E342302h
		dd offset aReserved1	; "reserved1"
		dd 197870Ah, 23020000h
		db 38h,	0Eh
		dd offset aReserved2	; "reserved2"
		dw 880Ah
		dd offset off_194+3
dword_9E0	dd 3C2302h, 4F494703h, 636E7546h, 2C0A0073h, 818h, 49475F09h
		dd 6E75464Fh, 20007363h, 8CF8E0Ah, 690A0000h, 65725F6Fh
		dd 0A006461h, 0B1890h, 230200h,	5F6F690Ah, 74697277h, 950A0065h
		dd 0B42h, 0A042302h, 735F6F69h,	6B6565h, 0B679A0Ah, 23020000h
		dd 6F690A08h, 6F6C635Fh, 0A006573h, 0B829Eh, 0C230200h
		dd 5F6F690Ah, 61657263h, 775F6574h, 68637461h, 9DA00A00h
		dd 200000Bh, 690A1023h,	72665F6Fh, 0A006565h, 0BAFA2h
		dd 14230200h, 5F6F690Ah, 5F746573h, 67616C66h, 0A30A0073h
		dd 0BCFh, 0A182302h, 675F6F69h,	665F7465h, 7367616Ch, 0E5A60A00h
		dd 200000Bh, 10001C23h,	27480A04h, 11000009h
aG_io_status_er	db 'G_IO_STATUS_ERROR',0 ; DATA XREF: .debug_info:00000C8Ao
					; .debug_info:000015C5o
		dw 1100h
aG_io_status_no	db 'G_IO_STATUS_NORMAL',0
		db 1
		db  11h
aG_io_status_eo	db 'G_IO_STATUS_EOF',0  ; DATA XREF: .debug_info:00000CB0o
					; .debug_info:00000CB5o ...
		db 2, 11h, 47h
a_io_status_aga	db '_IO_STATUS_AGAIN',0
		db 3, 0, 3
aGiostatus	db 'GIOStatus',0
aM		db 0Ah			; DATA XREF: .debug_info:00000CD0o
					; .debug_info:00000CE4o ...
		db 'Mœ',8,0
		align 4
dword_B14	dd 500A0410h, 968h, 535F4711h, 5F4B4545h, 525543h, 5F471100h
					; DATA XREF: .debug_info:00000D20o
		dd 4B454553h, 5445535Fh, 47110100h, 4545535Fh, 4E455F4Bh
		dd 20044h, 65534703h, 79546B65h, 0A006570h, 93854h, 0A041000h
		dd 9C457h, 5F471100h, 495F4F49h, 1101004Eh, 4F495F47h
		dd 54554F5Fh, 47110400h, 5F4F495Fh, 495250h, 5F471102h
		dd 455F4F49h, 8005252h,	495F4711h, 55485F4Fh, 11100050h
		dd 4F495F47h, 41564E5Fh, 20004Ch, 4F494703h, 646E6F43h
		dd 6F697469h, 5E0A006Eh, 979h, 610A0410h, 0A8Dh, 495F4711h
		dd 4C465F4Fh, 415F4741h, 4E455050h, 11010044h
aG_io_flag_nonb	db 'G_IO_FLAG_NONBLOCK',0
		db 2
		db  11h
aG_io_flag_is_r	db 'G_IO_FLAG_IS_READABLE',0
		db 4
		db  11h
aG_io_flag_is_w	db 'G_IO_FLAG_IS_WRITEABLE',0
		db    8
		db 11h,	47h, 5Fh
aIo_flag_is_see	db 'IO_FLAG_IS_SEEKABLE',0
		db  10h
		db 11h,	47h, 5Fh
aIo_flag_mask	db 'IO_FLAG_MASK',0
		db 1Fh,	11h, 47h
a_io_flag_get_m	db '_IO_FLAG_GET_MASK',0 ; DATA XREF: .debug_info:00001294o
		dw 111Fh
aG_io_flag_set_	db 'G_IO_FLAG_SET_MASK',0
		db 3
		db    0
		db 3, 47h, 49h
aOflags		db 'OFlags',0
aJ		db 0Ah
		db 'jÿ',9,0
		db    0
		db 5, 4, 8
		db    8
		db 2 dup(0), 5
		db    4
		dd offset aOurcecallbackf+6 ; "allbackFuncs"
		db 12h,	43h, 1
		db    0
		align 2
		dd offset aG_io_status_er+5 ; "STATUS_ERROR"
		dw 1713h
		db    1
		db 2 dup(0), 5
		db    0
		db 3, 47h, 49h
aOfunc		db 'OFunc',0
		db 0Ah
		db 'ã»',0Ah,0
		align 4
		db    5
		db 4, 0CEh, 0Ah
		db    0
		align 2
		dw 10Dh
		dd offset loc_15B+1
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db    7
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db 7, 0C4h, 9
		db    0
		align 2
		dw 9707h
		db    1
		align 4
		db    5
		db 4, 3Bh, 6
		db    0
		align 2
		dw 10Dh
		dd offset aI		; "\n|©\n"
		dd offset aM+4		; ""
		db    7
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db 7, 0DAh, 1
		db    0
		align 2
		dw 0A07h
		db    1
		db 2 dup(0), 7
		dd offset aM+4		; ""
		db    7
		dd offset aUnsignedInt	; "\aunsigned int"
		align 2
		dw 405h
		dd offset loc_10A
		db    5
		db 4, 0EEh, 0Ah
		db    0
		align 2
		dw 10Dh
		dd offset aI		; "\n|©\n"
		dd offset dword_B14+2Eh
		db    7
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db 7, 0CFh, 1
		db    0
		align 2
		dw 0A07h
		db    1
		db 2 dup(0), 7
		dd offset aM+4		; ""
		db    7
		dd offset aUnsignedInt	; "\aunsigned int"
		align 2
		dw 405h
		dd offset dword_B14+0Ah
		db  0Dh
		db 1, 27h, 9
		db    0
		align 2
		dd offset dword_B14+53h
		dw 0E807h
		db  0Ah
		db 2 dup(0), 7
		dd offset loc_D0+1
		db    7
		dd offset dword_92C+3Ch
		db 7, 4Dh, 2
		db    0
		db 2 dup(0), 5
		db    4
		dd offset dword_B14+34h
		db 0Dh,	1, 27h
		db    9
		db 2 dup(0), 82h
		db  0Bh
		db 2 dup(0), 7
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db    7
		dd offset aUnsignedInt	; "\aunsigned int"
		align 2
		dw 405h
		dd offset dword_B14+59h
		db  0Dh
		db 1, 35h, 5
		db    0
		align 2
		dd offset dword_B14+89h
		dw 0E807h
		db  0Ah
		db 2 dup(0), 7
		dd offset dword_92C+98h
		db    0
		db 5, 4, 88h
		db  0Bh
		db 2 dup(0), 6
		db    1
		dd offset dword_B14+9Bh
		db 7, 0E8h, 0Ah
		db    0
		db 2 dup(0), 5
		db    4
		dd offset dword_B14+8Fh
		db 0Dh,	1, 27h
		db    9
		db 2 dup(0), 0CFh
		db  0Bh
		db 2 dup(0), 7
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
unk_DA0		db    7			; DATA XREF: .debug_info:00000F98o
		dd offset dword_9E0+0ADh
		db 7, 4Dh, 2
		db    0
		db 2 dup(0), 5
		db    4
		dd offset dword_B14+0A1h
		db 0Dh,	1, 8Dh
		db  0Ah
		db 2 dup(0), 0E5h
		db  0Bh
byte_DB9	db 2 dup(0), 7		; DATA XREF: .debug_info:00000F82o
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db    0
		db 5, 4, 0D5h
		db  0Bh
		db 2 dup(0), 2
		db  0Ch
		db 4, 6Ch, 6Fh
aNgDouble	db 'ng double',0        ; DATA XREF: .debug_info:00000FA2o
		dw 410h
		db  0Bh
		db 27h,	2Ch, 0Ch
		db    0
		align 2
		dw 5011h
aUrple_input_re	db 'URPLE_INPUT_READ',0
		db 1, 11h, 50h
aUrple_input_wr	db 'URPLE_INPUT_WRITE',0 ; DATA XREF: .debug_info:00000ED1o
					; .debug_info:00000FB8o ...
		dw 2
		db    3
aPurpleinputcon	db 'PurpleInputCondition',0 ; DATA XREF: .debug_info:00000FDDo
		dw 2B0Bh
		dd offset aG_io_flag_is_r+15h ;	""
		db    3
aPurpleinputfun	db 'PurpleInputFunction',0
		db 0Bh,	32h, 63h
		dd 500000Ch, 0C6904h, 7F010600h, 700000Ch, 197h, 15007h
		dd 0C2C0700h, 3000000h
aPurpleeventloo	db 'PurpleEventLoopUiOps',0
		db 0Bh,	35h, 9Bh
		db  0Ch
		db 2 dup(0), 9
a_purpleeventlo	db '_PurpleEventLoopUiOps',0
aA		db '$',0Bh,'<†',0Dh,0
		db    0
aTimeout_add	db 0Ah
		db 'timeout_add',0
aU		db 0Bh,'U∫',0Dh,0
		align 4
		db    2
		db 23h,	0, 0Ah
aTimeout_remove	db 'timeout_remove',0
a_		db 0Bh,'_–',0Dh,0
		db    0
		db 2, 23h, 4
aInput_add	db 0Ah
		db 'input_add',0
		db 0Bh
		db  70h	; p
		dd offset aUrple_input_wr+1 ; "RPLE_INPUT_WRITE"
		db 2, 23h, 8
aInput_remove	db 0Ah
		db 'input_remove',0
aY		db 0Bh,'y–',0Dh,0
		align 4
		db    2
		db 23h,	0Ch, 0Ah
aInput_get_erro	db 'input_get_error',0
		db  0Bh
		db 86h,	16h, 0Eh
		db    0
		align 2
		dw 2302h
		db  10h
aTimeout_add_se	db 0Ah
		db 'timeout_add_seconds',0
aC		db 0Bh,'ñ∫',0Dh,0
		align 4
		db    2
		db 23h,	14h, 0Ah
a_purple_reserv	db '_purple_reserved2',0
		dw 990Bh
		dd offset byte_245
		db    2
		db 23h,	18h, 0Ah
a_purple_rese_0	db '_purple_reserved3',0
		dw 9A0Bh
		dd offset byte_245
		db    2
		db 23h,	1Ch, 0Ah
a_purple_rese_1	db '_purple_reserved4',0
		dw 9B0Bh
		dd offset byte_245
		db    2
		db 23h,	20h, 0
		db  0Dh
		db 1, 81h, 1
		db    0
		align 2
		dd offset byte_DB9+1
		dw 8107h
		db    1
		db 2 dup(0), 7
		dd offset dword_360+1B0h
		db    7
		dd offset off_194+3
		align 2
		dw 405h
		dd offset unk_DA0
		db  0Dh
		db 1, 5Ch, 1
		db    0
		align 2
		dd offset aNgDouble+4	; "ouble"
		dw 8107h
		db    1
		align 4
		db    5
		db 4, 0C0h, 0Dh
		db    0
		align 2
		dw 10Dh
		dd offset _eventloop_ops+1
		dd offset aUrple_input_wr+1 ; "RPLE_INPUT_WRITE"
		db    7
		dd offset loc_64+4
		db 7, 2Ch, 0Ch
		db    0
		align 2
		dw 4807h
		db  0Ch
		db 2 dup(0), 7
		dd offset off_194+3
		db    0
		db 5, 4, 0D6h
		db  0Dh
		db 2 dup(0), 0Dh
		db    1
		dd offset loc_64+4
		dd offset aPurpleinputcon+7 ; "nputCondition"
		db 7, 68h, 0
		db    0
		align 2
		dw 1007h
		db  0Eh
		align 4
		db    5
		db 4, 68h, 0
		db    0
		align 2
		dw 405h
		dd offset aUrple_input_wr+7 ; "NPUT_WRITE"
		db  14h
aVarenum	db 'VARENUM',0
		db 4, 0Fh, 73h
		dd offset aT_decimal	; "T_DECIMAL"
		dd 5F545611h, 54504D45h, 11000059h, 4E5F5456h, 4C4C55h
		dd 54561101h, 32495Fh, 54561102h, 34495Fh, 54561103h, 34525Fh
		dd 54561104h, 38525Fh, 54561105h, 59435Fh, 54561106h, 5441445Fh
		dd 11070045h, 425F5456h, 525453h, 54561108h, 5349445Fh
		dd 43544150h, 11090048h, 455F5456h, 524F5252h, 56110A00h
		dd 4F425F54h, 0B004C4Fh, 5F545611h, 49524156h, 544E41h
		dd 5456110Ch, 4B4E555Fh, 4E574F4Eh, 56110D00h
aT_decimal	db 'T_DECIMAL',0        ; DATA XREF: .debug_info:00001004o
		dw 110Eh
aVt_i1		db 'VT_I1',0
		dw 1110h
aVt_ui1		db 'VT_UI1',0
		db 11h
		db  11h
aVt_ui2		db 'VT_UI2',0
		db  12h
		db 11h,	56h, 54h
a_ui4		db '_UI4',0
		db 13h,	11h, 56h
aT_i8		db 'T_I8',0
		db 14h,	11h, 56h
aT_ui8		db 'T_UI8',0
		dw 1115h
aVt_int		db 'VT_INT',0
		db 16h
		db  11h
aVt_uint	db 'VT_UINT',0
		db 17h,	11h, 56h
aT_void		db 'T_VOID',0
		db 18h
		db  11h
aVt_hresult	db 'VT_HRESULT',0
		db  19h
		db 11h,	56h, 54h
a_ptr		db '_PTR',0
		db 1Ah,	11h, 56h
aT_safearray	db 'T_SAFEARRAY',0
		db  1Bh
		db 11h,	56h, 54h
a_carray	db '_CARRAY',0
		db  1Ch
		db 11h,	56h, 54h
a_userdefined	db '_USERDEFINED',0
		db 1Dh,	11h, 56h
aT_lpstr	db 'T_LPSTR',0
		db  1Eh
		db 11h,	56h, 54h
a_lpwstr	db '_LPWSTR',0
		db  1Fh
		db 11h,	56h, 54h
a_record	db '_RECORD',0
		db  24h	; $
		db 11h,	56h, 54h
a_int_ptr	db '_INT_PTR',0
		db 25h,	11h, 56h
aT_uint_ptr	db 'T_UINT_PTR',0
		db 26h
		db  11h
aVt_filetime	db 'VT_FILETIME',0
		db '¿',0
		db 11h
aVt_blob	db 'VT_BLOB',0
		db '¡',0
		dw 5611h
aT_stream	db 'T_STREAM',0
		db '¬',0
		db 11h
aVt_storage	db 'VT_STORAGE',0
		db '√',0
		db 11h,	56h, 54h
a_streamed_obje	db '_STREAMED_OBJECT',0
		db 'ƒ',0
		db 11h
aVt_stored_obje	db 'VT_STORED_OBJECT',0 ; DATA XREF: .debug_info:00001395o
		db '≈',0
		db 11h
aVt_blob_object	db 'VT_BLOB_OBJECT',0   ; DATA XREF: .debug_info:000013A9o
		db '∆',0
		db 11h,	56h, 54h
dword_11E8	dd 46435Fh, 561100C7h, 4C435F54h, 444953h, 561100C8h, 53425F54h
		dd 425F5254h, 424F4Ch, 56111FFFh, 45565F54h, 524F5443h
		dd 11208000h, 415F5456h, 59415252h, 0C08000h, 5F545611h
		dd 45525942h, 80800046h, 54561101h, 5345525Fh, 45565245h
		dd 80800044h, 54561102h, 4C4C495Fh, 4C414745h, 3FFFF00h
		dd 5F545611h, 454C4C49h, 4D4C4147h, 454B5341h, 1FFF0044h
		dd 5F545611h, 45505954h, 4B53414Dh, 1FFF00h
a_pidginioclosu	db 9,'_PidginIOClosure',0
		dw 10Ch
		dd 10E025h
		db 0, 0Eh
		dd offset aFunction	; "function"
		dw 2601h
		dd offset a_io_flag_get_m+8 ; "_GET_MASK"
		dd 0A002302h, 75736572h, 100746Ch, 18127h, 4230200h, 7461640Ah
		dd 28010061h, 197h, 82302h, 64695003h, 496E6967h, 6F6C434Fh
		dd 65727573h, 982A0100h, 15000010h, 67646970h, 695F6E69h
		dd 7475706Eh, 6464615Fh, 14F0100h, 181h
off_12EC	dd offset _pidgin_input_add ; DATA XREF: .debug_info:000014BEo
		dd offset unk_E7
		dd offset dword_1888
		dd 125101h, 64661600h, 504F0100h, 2000001h
		db 91h,	0, 17h
		dd offset aCondition	; "condition"
		db 1
		dd 0C2C4Fh, 4910200h
		db 17h
		dd offset aFunction	; "function"
		db 1, 4Fh, 48h
		dd 200000Ch, 64160891h,	617461h, 1975001h, 91020000h, 6C63180Ch
		dd 7275736Fh, 52010065h, 1251h
		dd offset off_1922
		dd 61686318h, 6C656E6Eh, 0E8530100h
		db 0Ah,	2 dup(0)
		dd offset off_194B
		db 18h
aCond		db 'cond',0
		db 1, 54h, 0C4h
		db 9, 2	dup(0)
		dd offset off_197F
		db 19h
aUse_glib_io_ch	db 'use_glib_io_channel',0 ; DATA XREF: .debug_info:00001391o
		dd 685601h, 3050000h
		dd offset _use_glib_io_channel_38694
byte_138C	db 1Ah			; DATA XREF: .debug_info:000013A5o
		dd offset loc_32
		dd offset aUse_glib_io_ch+2 ; "e_glib_io_channel"
		dd offset aVt_stored_obje+4 ; "TORED_OBJECT"
		db 1Bh,	2, 74h
		dd 3C0100h
		db 1Ah
		dd offset loc_69
		dd offset byte_138C
		dd offset aVt_blob_object+6 ; "B_OBJECT"
		db 1Bh,	2, 74h
		dd 4C910300h
		db 6, 0, 1Ah
off_13B7	dd offset loc_93	; DATA XREF: .debug_info:000013BBo
					; .debug_info:00001589o
		dd offset off_13B7
		dd offset dword_11E8+29h
		db 1Bh
		dd 2007402h, 21B0076h, 30010474h, 874021Bh, 1B007702h
		dd 50C7402h
		db 3
		dd offset _pidgin_io_invoke
		db 1Bh,	2, 74h
		dd 730210h, 1474021Ch
		db 0, 1Ah
		dd offset loc_9E
		dd offset dword_13F8
		dw 1226h
dword_13F8	dd 21B0000h, 76020074h	; DATA XREF: .debug_info:000013F2o
					; .debug_info:000015B1o
		db 2 dup(0), 1Dh
		dd offset loc_BD
		dd offset byte_141B
		db 1Ah
		dd offset loc_D0
		dd offset off_1454+1
		dd offset dword_11E8+5Fh
		db 1Bh,	2, 74h
byte_141B	db 0			; DATA XREF: .debug_info:00001407o
					; .debug_info:000015EDo
		db 5, 3
		dd offset aPidgin_glib_io ; "PIDGIN_GLIB_IO_CHANNEL"
		dw 1D00h
		dd offset unk_E7
		dd offset byte_1477
		dd 0E0040500h, 15000010h, 67646970h, 695F6E69h,	6E695F6Fh
		dd 656B6F76h, 12C0100h,	15Ch
		dd offset _pidgin_io_invoke
		dd offset _pidgin_eventloop_get_ui_ops
off_1454	dd offset off_19C0	; DATA XREF: .debug_info:00001410o
		dd 130D01h, 6F731600h, 65637275h, 0E82C0100h, 200000Ah
		db 91h,	0, 17h
		dd offset aCondition	; "condition"
		db 1
		db 2Ch,	0C4h, 9
byte_1477	db 0			; DATA XREF: .debug_info:00001428o
					; .debug_info:000014E4o ...
dword_1478	dd 4910200h, 74616416h,	2C010061h, 197h, 18089102h, 736F6C63h
		dd 657275h, 12512E01h
		db 2 dup(0)
		dd offset off_1A40
		dw 7018h
aUrple_cond	db 'urple_cond',0
		db 1
		dd 0C2C2Fh
		db 0
off_14B1	dd offset off_1A6A	; DATA XREF: .debug_info:off_1DCo
		db 1Ah
		dd offset loc_120
		dd offset dword_1478+15h
		dd offset off_12EC+3
		dw 21Bh
		dd 91030074h, 1E000600h
		dd offset loc_130
		dd 3007702h, 1B000013h,	2087402h, 1D000076h
		dd offset _pidgin_eventloop_get_ui_ops
		dd offset byte_1477
		db    0
		db 1Fh,	1, 70h
aIdgin_eventloo	db 'idgin_eventloop_get_ui_ops',0
		db 1
		dd 134D018Ah
		db 2 dup(0)
		dd offset _pidgin_eventloop_get_ui_ops
		dd offset loc_17B+5
		dd offset off_1A94
		dw 4D01h
		dd 1D000013h
		dd offset loc_17B+5
		dd offset byte_1477
		dd 7F040500h, 1900000Ch, 6E657665h, 6F6F6C74h, 706F5F70h
		dd 78010073h, 0C7Fh
		db 5, 3
		dd offset _eventloop_ops
		dw 120h
aG_malloc0	db 'g_malloc0',0
		dw 340Ch
		db    1
		dd offset off_194+3
		db 1, 8Ch, 13h
		db    0
		align 2
		dw 0A07h
		db    1
		align 4
		db  21h	; !
		db 1, 67h, 5Fh
aIo_channel_uni	db 'io_channel_unix_new',0
		db  0Ah
		db 2Ah,	2 dup(1)
		dd offset aG_io_status_eo+0Bh ;	"_EOF"
		db    1
		dd offset off_13B7
		db 7, 68h, 0
		db    0
		db 2 dup(0), 20h
		db    1
aG_io_add_watch	db 'g_io_add_watch_full',0
		db 0Ah,	0BFh, 1
		dd offset _eventloop_ops+1
		db    1
		dd offset dword_13F8
		db 7, 0E8h, 0Ah
		db    0
		align 2
		dw 5007h
		db    1
		db 2 dup(0), 7
		dd offset dword_92C+98h
		db    7
		dd offset aG_io_status_er+5 ; "STATUS_ERROR"
		db 7, 97h, 1
		db    0
		align 2
		dw 0A707h
		db    1
		align 4
		db  22h	; "
		db 1, 67h, 5Fh
aIo_channel_unr	db 'io_channel_unref',0
		db 0Ah,	0ABh, 1
		db    1
		dd offset byte_141B
		db 7, 0E8h, 0Ah
		db    0
		db 2 dup(0), 20h
		db    1
aWpurple_g_io_c	db 'wpurple_g_io_channel_win32_new_socket',0
		db 0Dh
		db  3Dh	; =
		db 1, 0E8h, 0Ah
		db    0
		align 2
		dw 5501h
		db  14h
		db 2 dup(0), 7
		dd offset loc_64+4
		db    0
		db 20h,	1, 67h
a_getenv_utf8	db '_getenv_utf8',0
		db 0Eh,	0F9h, 1
		dd offset aPidgin_glib_io+0Bh ;	"_IO_CHANNEL"
		db    1
		dd offset byte_1477
		db 7, 0CFh, 1
		db    0
		db 2 dup(0), 23h
		db    1
a__stack_chk_fa	db '__stack_chk_fail',0
		dw 101h
		db    1
		db 24h,	1, 67h
a_io_channel_un	db '_io_channel_unix_get_fd',0
		dd 1012B0Ah, 150h, 0AE80701h, 0
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 1694h
dword_1694	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:000001E2o
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 0C270115h, 1301h, 49000507h,	8000013h, 13490026h, 13090000h
		dd 0B080301h, 3B0B3A0Bh, 13010Bh, 0D0A00h, 0B3A0803h, 13490B3Bh
		dd 0A38h, 2700150Bh, 0C00000Ch,	8030013h, 0C3Ch, 2701150Dh
		dd 113490Ch, 0E000013h,	0E03000Dh, 0B3B0B3Ah, 0A381349h
		dd 0D0F0000h, 3A080300h, 490B3B0Bh, 0D0B0B13h, 380B0C0Bh
		dd 1000000Ah, 0B0B0104h, 0B3B0B3Ah, 1301h, 3002811h, 0D1C08h
		dd 1011200h, 13011349h,	21130000h, 2F134900h, 1400000Bh
		dd 8030104h, 0B3A0B0Bh,	13010B3Bh, 2E150000h, 3A080301h
		dd 270B3B0Bh, 1113490Ch, 40011201h, 0C429706h, 1301h, 3000516h
		dd 3B0B3A08h, 213490Bh,	1700000Ah, 0E030005h, 0B3B0B3Ah
		dd 0A021349h, 34180000h, 3A080300h, 490B3B0Bh, 60213h
		dd 341900h, 0B3A0803h, 13490B3Bh, 0A02h, 182891Ah, 31011101h
		dd 130113h, 828A1B00h, 0A020001h, 0A4291h, 828A1C00h, 0A020001h
		dd 891D0000h, 11000182h, 133101h, 82891E00h, 1110101h
		dd 10A4293h, 1F000013h,	0C3F012Eh, 0B3A0803h, 0C270B3Bh
		dd 1111349h, 6400112h, 10C4297h, 20000013h, 0C3F012Eh
		dd 0B3A0803h, 0C270B3Bh, 0C3C1349h, 1301h, 3F012E21h, 3A08030Ch
		dd 27053B0Bh, 3C13490Ch, 13010Ch, 12E2200h, 8030C3Fh, 0B3B0B3Ah
		dd 0C3C0C27h, 1301h, 3F002E23h,	2708030Ch, 3C0C340Ch, 2400000Ch
		dd 0C3F012Eh, 0B3A0803h, 0C27053Bh, 0C3C1349h
		db 3 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 1888h
dword_1888	dd 0			; DATA XREF: .debug_info:000012F4o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 4
		dd 10740002h, 4, 7, 14740002h, 7, 0B0h,	0E0740003h, 0B000h
		dd 0B100h, 74000200h, 0B114h, 0B200h, 74000200h, 0B210h
		dd 0B300h, 74000200h, 0B30Ch, 0B400h, 74000200h, 0B408h
		dd 0B800h, 74000200h, 0B804h, 0E700h, 74000300h, 0E0h
		dd 0
		db 2 dup(0)
off_1922	dd offset loc_34	; DATA XREF: .debug_info:00001344o
		dd offset loc_39
		dw 1
		dd 3950h, 0B100h, 53000100h, 0B5h, 0E7h, 530001h, 0
		db 3 dup(0)
off_194B	dd offset loc_6B	; DATA XREF: .debug_info:00001357o
		dd offset loc_8E+4
		db 1
		dd 925000h, 0B20000h, 10000h, 0BF56h, 0C100h, 50000100h
		dd 0E2h, 0E7h, 560001h,	0
		db 3 dup(0)
off_197F	dd offset loc_34	; DATA XREF: .debug_info:00001367o
		dd offset loc_51
		db 2
		dd 519F3000h, 0B3000000h, 1000000h, 0B55700h, 0C10000h
		dd 10000h, 0C157h, 0E200h, 30000200h, 0E29Fh, 0E700h, 57000100h
		dd 2 dup(0)
off_19C0	dd offset _pidgin_io_invoke ; DATA XREF: .debug_info:off_1454o
		dd offset loc_E9
		dd 4740002h, 0E9h, 0EAh, 8740002h, 0EAh, 0EBh, 0C740002h
		dd 0EBh, 0EEh, 10740002h, 0EEh,	144h, 30740002h, 144h
		dd 145h, 10740002h, 145h, 146h,	0C740002h, 146h, 147h
		dd 8740002h, 147h, 148h, 4740002h, 148h, 158h, 30740002h
		dd 2 dup(0)
off_1A40	dd offset loc_106	; DATA XREF: .debug_info:0000149Ao
		dd offset loc_145
		dd 45530001h, 48000001h, 2000001h, 48089100h, 58000001h
		dd 1000001h, 5300h, 0
		db 2 dup(0)
off_1A6A	dd offset loc_106	; DATA XREF: .debug_info:off_14B1o
		dd offset loc_10D
		dw 2
		dd 10D9F30h, 1160000h, 10000h, 14852h, 15300h, 52000100h
		dd 2 dup(0)
off_1A94	dd offset _pidgin_eventloop_get_ui_ops ; DATA XREF: .debug_info:00001516o
		dd offset loc_15B
		dd 4740002h, 15Bh, 17Ah, 20740002h, 17Ah, 17Bh,	4740002h
		dd 17Bh, 180h, 20740002h, 2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 1ACCh
		dd 1Ch
		db 2, 0
		dd offset off_1DC
		dw 4
		dd 0
		dd offset _pidgin_input_add
		dd offset _eventloop_ops
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 1AECh
off_1AEC	dd offset aCWorkspacePidg+0Ch ;	DATA XREF: .debug_info:00000240o
					; "e\\\\pidgin-devel\\\\pidgin-2.10.11\\\\"...
		dd 1C00002h, 1010000h, 0D0EFBh,	1010101h, 1000000h, 2E010000h
		dd 2E2E2F2Eh, 6E69772Fh, 642D3233h, 672F7665h, 325F6B74h
		dd 322D305Fh, 2F34312Eh, 2F62696Ch, 62696C67h, 302E322Dh
		dd 636E692Fh, 6564756Ch, 2F2E2E00h, 772F2E2Eh, 32336E69h
		dd 7665642Dh, 6B74672Fh, 305F325Fh, 312E322Dh, 6E692F34h
		dd 64756C63h, 6C672F65h, 322D6269h, 672F302Eh, 62696Ch
		dd 6C2F2E2Eh, 75706269h, 656C7072h, 2F2E2E00h, 7062696Ch
		dd 6C707275h, 69772F65h, 32336Eh, 772F3A63h, 736B726Fh
		dd 65636170h, 6469702Fh, 2D6E6967h, 65766564h, 69772F6Ch
		dd 2D32336Eh, 2F766564h, 676E696Dh, 2E342D77h, 2F322E37h
		dd 2F6E6962h, 6C2F2E2Eh, 672F6269h, 6D2F6363h, 77676E69h
		dd 342F3233h, 322E372Eh, 2F2E2E2Fh, 2E2F2E2Eh, 2E2E2F2Eh
		dd 636E692Fh, 6564756Ch, 74670000h, 6576656Bh, 6F6C746Eh
		dd 632E706Fh, 0
aGlibconfig_h	db 'glibconfig.h',0
		db 1, 2	dup(0)
aGtypes_h	db 'gtypes.h',0
		db 2, 2	dup(0)
aGquark_h	db 'gquark.h',0
		db 2, 2	dup(0)
aGerror_h	db 'gerror.h',0
		db 2, 2	dup(0)
aGconvert_h	db 'gconvert.h',0
		db 2
		dd 73670000h, 7473696Ch, 200682Eh, 6D670000h, 2E6E6961h
		dd 20068h, 74736700h, 676E6972h, 200682Eh, 69670000h, 6168636Fh
		dd 6C656E6Eh, 200682Eh,	76650000h, 6C746E65h, 2E706F6Fh
		dd 30068h, 656D6700h, 682E6Dh, 77000002h, 32336E69h, 2E706564h
		dd 40068h, 74756700h, 2E736C69h, 20068h, 79747700h, 2E736570h
		dd 50068h, 5000000h
		db 2
		dd offset _pidgin_input_add
		db 3, 0D0h, 0
		dd 0AD9E0801h, 3E2FDADCh, 40595959h, 3764E73h, 12B0209h
		dd 70033D83h, 73036608h, 81D03BAh, 7FB703C8h, 0BE200866h
		dd 15034B76h, 3940858h,	3740870h, 3E03AC10h, 2AE3C58h
		dd 101001Ah
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 1D00h
aFunction	db 'function',0         ; DATA XREF: .debug_info:0000128Eo
					; .debug_info:00001319o
aReserved1	db 'reserved1',0        ; DATA XREF: .debug_info:000005C1o
					; .debug_info:000009C8o
aReserved2	db 'reserved2',0        ; DATA XREF: .debug_info:000005CFo
					; .debug_info:000009D6o
aCondition	db 'condition',0        ; DATA XREF: .debug_info:0000130Bo
					; .debug_info:0000146Fo
aRef_count	db 'ref_count',0        ; DATA XREF: .debug_info:00000539o
					; .debug_info:0000083Eo
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 1D34h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch
		dd offset loc_17B-1ECFh
		dd offset unk_E7
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0E0AA902h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 34h, 5Ch
		dd offset loc_17B-1E27h
		dd offset loc_6B+5
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A56h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
		dd 94h
		dd offset loc_17B-1DEFh
		dd offset loc_26+2
		dd 200E4300h, 40E0A5Fh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _pidgin_input_add+1Br
					; _pidgin_input_add+A5r ...
		extrn _g_free:near	; DATA XREF: _pidgin_input_add:loc_6Bo
		extrn _g_malloc0:near	; CODE XREF: _pidgin_input_add+2Dp
		extrn _g_io_channel_unix_new:near ; CODE XREF: _pidgin_input_add:loc_64p
		extrn _g_io_add_watch_full:near	; CODE XREF: _pidgin_input_add:loc_8Ep
		extrn _g_io_channel_unref:near ; CODE XREF: _pidgin_input_add+99p
		extrn _wpurple_g_io_channel_win32_new_socket:near
					; CODE XREF: _pidgin_input_add:loc_B8p
		extrn _g_getenv_utf8:near ; CODE XREF: _pidgin_input_add+CBp
		extrn ___stack_chk_fail:near ; CODE XREF: _pidgin_input_add:loc_E2p
					; _pidgin_io_invoke:loc_153p ...
		extrn _g_io_channel_unix_get_fd:near ; CODE XREF: _pidgin_io_invoke+33p
		extrn _g_timeout_add:near ; DATA XREF: .data:_eventloop_opso
		extrn _g_source_remove:near ; DATA XREF: .data:00000184o
					; .data:0000018Co
		extrn _g_timeout_add_seconds:near ; DATA XREF: .data:off_194o


		end

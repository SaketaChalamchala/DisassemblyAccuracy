;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	278B78B90DECDC84418D4DCE3B0E7B6A
; Input	CRC32 :	108076FD

; File Name   :	d:\pidgin-o\posix.uname.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _jabber_win32_uname
_jabber_win32_uname proc near		; DATA XREF: .debug_info:000003AFo
					; .debug_info:00000956o ...

lpVersionInformation= dword ptr	-0DCh
nSize		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_CC		= dword	ptr -0CCh
SystemInfo	= _SYSTEM_INFO ptr -0C8h
VersionInformation= _OSVERSIONINFOA ptr	-0A4h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	edi
		push	esi
		push	ebx
		sub	esp, 0D0h
		mov	ebx, [esp+0DCh+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+0DCh+var_10], eax
		xor	eax, eax
		mov	ecx, 64h ; 'd'
		mov	edi, ebx
		rep stosb
		mov	[esp+0DCh+VersionInformation.dwOSVersionInfoSize], 94h ; 'î'
		lea	eax, [esp+0DCh+VersionInformation]
		mov	[esp+0DCh+lpVersionInformation], eax ; lpVersionInformation
		call	_GetVersionExA@4

loc_3B:					; DATA XREF: .debug_info:000009C9o
		push	eax
		lea	eax, [esp+0DCh+SystemInfo]
		mov	[esp+0DCh+lpVersionInformation], eax ; lpSystemInfo
		call	_GetSystemInfo@4

loc_48:					; DATA XREF: .debug_info:000009DFo
		push	edx
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aWin32_ ; "WIN32_"
		mov	[esp+0DCh+lpVersionInformation], ebx
		call	_g_strlcpy

loc_61:					; DATA XREF: .debug_info:000009F5o
		mov	eax, [esp+0DCh+VersionInformation.dwPlatformId]
		cmp	eax, 1
		jz	loc_1C8
		mov	[esp+0DCh+var_D4], 14h
		cmp	eax, 2
		jz	loc_1AC
		mov	[esp+0DCh+nSize], offset aWin??	; "Win??"
		mov	[esp+0DCh+lpVersionInformation], ebx
		call	_g_strlcat

loc_8F:					; DATA XREF: .debug_info:off_A1Ao
					; .debug_loc:off_106Ao
		mov	esi, 3

loc_94:					; CODE XREF: _jabber_win32_uname+1C1j
					; _jabber_win32_uname+1F2j ...
		mov	[esp+0DCh+var_D4], 3
		mov	[esp+0DCh+nSize], offset aI ; "%i"
		lea	eax, [ebx+3Ch]
		mov	[esp+0DCh+lpVersionInformation], eax ; char *
		call	_sprintf

loc_AF:					; DATA XREF: .debug_info:00000A3Fo
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aI ; "%i"
		lea	eax, [ebx+28h]
		mov	[esp+0DCh+lpVersionInformation], eax ; char *
		call	_sprintf

loc_CA:					; DATA XREF: .debug_info:00000A64o
		mov	eax, dword ptr [esp+0DCh+SystemInfo.anonymous_0]
		cmp	ax, 1
		jz	loc_1F8
		jnb	short loc_128
		cmp	esi, 1
		jg	loc_274
		mov	eax, [esp+0DCh+SystemInfo.dwProcessorType]
		cmp	eax, 1E6h

loc_EC:					; DATA XREF: .debug_info:000003E9o
					; .debug_info:0000040Do
		jz	loc_2C0
		cmp	eax, 24Ah
		jz	loc_2C0

loc_FD:					; DATA XREF: .debug_info:0000042Co
					; .debug_info:00000431o
		cmp	eax, 182h
		jz	loc_2C0

loc_108:				; DATA XREF: .debug_info:00000428o
					; .debug_info:00000639o ...
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aI386 ; "i386"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax
		call	_g_strlcpy

loc_123:				; DATA XREF: .debug_info:00000619o
					; .debug_info:00000A89o
		jmp	short loc_153
; ---------------------------------------------------------------------------
		align 4

loc_128:				; CODE XREF: _jabber_win32_uname+D8j
		mov	[esp+0DCh+var_D4], 14h
		cmp	ax, 2
		jz	loc_218
		cmp	ax, 3
		jz	short loc_194
		mov	[esp+0DCh+nSize], offset aUnknown ; "unknown"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax
		call	_g_strlcpy

loc_153:				; CODE XREF: _jabber_win32_uname:loc_123j
					; _jabber_win32_uname:loc_1A7j	...
		mov	[esp+0DCh+var_CC], 13h

loc_15B:				; DATA XREF: .debug_loc:off_1048o
		lea	eax, [esp+0DCh+var_CC]
		mov	[esp+0DCh+nSize], eax ;	nSize

loc_163:				; DATA XREF: .debug_line:00001102o
		add	ebx, 14h
		mov	[esp+0DCh+lpVersionInformation], ebx ; lpBuffer
		call	_GetComputerNameA@8

loc_16E:				; DATA XREF: .debug_info:00000AD5o
		sub	esp, 8
		mov	eax, 1
		mov	edx, [esp+0DCh+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_2DC
		add	esp, 0D0h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
unk_193		db  90h	; ê		; DATA XREF: .debug_loc:0000104Co
; ---------------------------------------------------------------------------

loc_194:				; CODE XREF: _jabber_win32_uname+13Ej
		mov	[esp+0DCh+nSize], offset aPpc ;	"ppc"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax
		call	_g_strlcpy

loc_1A7:				; DATA XREF: .debug_info:00000AF2o
		jmp	short loc_153
; ---------------------------------------------------------------------------
		align 4

loc_1AC:				; CODE XREF: _jabber_win32_uname+79j
		mov	[esp+0DCh+nSize], offset aWinnt	; "WinNT"
		mov	[esp+0DCh+lpVersionInformation], ebx
		call	_g_strlcat

loc_1BC:				; DATA XREF: .debug_info:00000B12o
		mov	esi, 2
		jmp	loc_94
; ---------------------------------------------------------------------------
		align 4

loc_1C8:				; CODE XREF: _jabber_win32_uname+68j
		mov	eax, [esp+0DCh+VersionInformation.dwMinorVersion]
		test	eax, eax
		jz	short loc_230

loc_1D0:				; DATA XREF: .debug_info:0000047Co
		cmp	eax, 0Ah
		jz	short loc_250

loc_1D5:				; DATA XREF: .debug_info:00000601o
					; .debug_info:00000D34o ...
		mov	[esp+0DCh+var_D4], 14h

loc_1DD:				; DATA XREF: .debug_info:00000C5Co
		mov	[esp+0DCh+nSize], offset aWin??	; "Win??"
		mov	[esp+0DCh+lpVersionInformation], ebx
		call	_g_strlcat

loc_1ED:				; DATA XREF: .debug_info:00000B31o
		mov	esi, 3
		jmp	loc_94
; ---------------------------------------------------------------------------
		align 4

loc_1F8:				; CODE XREF: _jabber_win32_uname+D2j
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aMips ; "mips"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax
		call	_g_strlcpy

loc_213:				; DATA XREF: .debug_info:00000B56o
		jmp	loc_153
; ---------------------------------------------------------------------------

loc_218:				; CODE XREF: _jabber_win32_uname+134j
		mov	[esp+0DCh+nSize], offset aAlpha	; "alpha"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax
		call	_g_strlcpy

loc_22B:				; DATA XREF: .debug_info:00000B7Co
		jmp	loc_153
; ---------------------------------------------------------------------------

loc_230:				; CODE XREF: _jabber_win32_uname+1CEj
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aWin95	; "Win95"
		mov	[esp+0DCh+lpVersionInformation], ebx
		call	_g_strlcat

loc_248:				; DATA XREF: .debug_info:00000B9Co
		xor	esi, esi

loc_24A:				; DATA XREF: .debug_info:00000CE5o
					; .debug_info:00000CF9o ...
		jmp	loc_94
; ---------------------------------------------------------------------------
		align 10h

loc_250:				; CODE XREF: _jabber_win32_uname+1D3j
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aWin98	; "Win98"
		mov	[esp+0DCh+lpVersionInformation], ebx

loc_263:				; DATA XREF: .debug_info:000005D0o
		call	_g_strlcat

loc_268:				; DATA XREF: .debug_info:00000BC1o
		mov	esi, 1
		jmp	loc_94
; ---------------------------------------------------------------------------
		align 4

loc_274:				; CODE XREF: _jabber_win32_uname+DDj
		cmp	esi, 2
		jz	short loc_29C
		mov	[esp+0DCh+var_D4], 14h
		mov	[esp+0DCh+nSize], offset aUnknown ; "unknown"
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax

loc_28F:				; DATA XREF: .debug_info:00000CF4o
					; .debug_info:00000D1Co
		call	_g_strlcpy

loc_294:				; DATA XREF: .debug_info:00000BE6o
		jmp	loc_153
; ---------------------------------------------------------------------------
		align 4

loc_29C:				; CODE XREF: _jabber_win32_uname+277j
		movzx	eax, [esp+0DCh+SystemInfo.wProcessorLevel]
		mov	[esp+0DCh+var_D4], eax
		mov	[esp+0DCh+nSize], offset aID86 ; "i%d86"
		lea	eax, [ebx+50h]

loc_2B0:				; DATA XREF: .debug_info:0000062Do
		mov	[esp+0DCh+lpVersionInformation], eax ; char *
		call	_sprintf

loc_2B8:				; DATA XREF: .debug_info:00000C0Co
		jmp	loc_153
; ---------------------------------------------------------------------------
		db 8Dh
; ---------------------------------------------------------------------------
		jbe	short $+2	; DATA XREF: .debug_info:0000060Do

loc_2C0:				; CODE XREF: _jabber_win32_uname:loc_ECj
					; _jabber_win32_uname+F7j ...
		mov	[esp+0DCh+var_D4], eax
		mov	[esp+0DCh+nSize], offset aILd ;	"i%ld"

loc_2CC:				; DATA XREF: .debug_info:00000C98o
		lea	eax, [ebx+50h]
		mov	[esp+0DCh+lpVersionInformation], eax ; char *
		call	_sprintf

loc_2D7:				; DATA XREF: .debug_info:00000C2Co
		jmp	loc_153
; ---------------------------------------------------------------------------

loc_2DC:				; CODE XREF: _jabber_win32_uname+183j
		call	___stack_chk_fail
_jabber_win32_uname endp

; ---------------------------------------------------------------------------
unk_2E1		db  90h	; ê		; DATA XREF: .debug_info:000003B3o
					; .debug_info:0000095Ao ...
		db  90h	; ê
unk_2E3		db  90h	; ê		; DATA XREF: .eh_frame:000012FCo
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 2ECh
aWin32_		db 'WIN32_',0           ; DATA XREF: _jabber_win32_uname+51o
					; .debug_info:off_A0Eo
aWinnt		db 'WinNT',0            ; DATA XREF: _jabber_win32_uname:loc_1ACo
					; .debug_info:00000B2Bo
aWin95		db 'Win95',0            ; DATA XREF: _jabber_win32_uname+238o
					; .debug_info:0000064Co ...
aWin98		db 'Win98',0            ; DATA XREF: _jabber_win32_uname+258o
					; .debug_info:00000BDAo
aWin??		db 'Win??',0            ; DATA XREF: _jabber_win32_uname+7Fo
					; _jabber_win32_uname:loc_1DDo	...
; char aI[]
aI		db '%i',0               ; DATA XREF: _jabber_win32_uname+9Co
					; _jabber_win32_uname+B7o ...
aPpc		db 'ppc',0              ; DATA XREF: _jabber_win32_uname:loc_194o
					; .debug_info:00000B0Co
aAlpha		db 'alpha',0            ; DATA XREF: _jabber_win32_uname:loc_218o
					; .debug_info:00000659o ...
aMips		db 'mips',0             ; DATA XREF: _jabber_win32_uname+200o
					; .debug_info:00000B70o
; char aILd[]
aILd		db 'i%ld',0             ; DATA XREF: _jabber_win32_uname+2C4o
					; .debug_info:00000C46o
aI386		db 'i386',0             ; DATA XREF: _jabber_win32_uname+110o
					; .debug_info:00000AA3o
; char aID86[]
aID86		db 'i%d86',0            ; DATA XREF: _jabber_win32_uname+2A5o
					; .debug_info:00000C26o
aUnknown	db 'unknown',0          ; DATA XREF: _jabber_win32_uname+140o
					; _jabber_win32_uname+281o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 338h
off_338		dd offset byte_A6D	; DATA XREF: .debug_aranges:000010E2o
		db 2, 0
		dd offset dword_DAC
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		db    1
aWin32Posix_una	db 'win32/posix.uname.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple\\protocols'
		db '\\jabber',0
		dd offset _jabber_win32_uname
		dd offset unk_2E1
		dd offset off_10FC
		db 2
aUtsname	db 'utsname',0
		db  64h	; d
		db 2, 8, 0EFh
		db    0
		db 2 dup(0), 3
aSysname	db 'sysname',0
		db    2
		db 0Ah,	0EFh, 0
		db    0
		align 2
		dw 2302h
		db    0
		db 3, 6Eh, 6Fh
aDename		db 'dename',0
		db 2
		db  0Bh
		dd offset loc_EC+3
		db 2, 23h, 14h
		db    3
aRelease	db 'release',0
		db 2, 0Ch, 0EFh
		db    0
		db 2 dup(0), 2
		db  23h	; #
byte_401	db 28h,	3, 76h		; DATA XREF: .debug_info:00000755o
aErsion		db 'ersion',0
		db 2
		db  0Dh
		dd offset loc_EC+3
		db 2, 23h, 3Ch
		db    3
aMachine	db 'machine',0
		db 2, 0Eh, 0EFh
		db    0
		db 2 dup(0), 2
		db  23h	; #
		db 50h,	0, 4
		dd offset loc_108+3
		dd offset loc_FD+2
		db    5
		dd offset loc_FD+2
		db 13h,	0, 6
		db    4
aSizetype	db 7,'sizetype',0
		db 6
		db    1
		db 6, 63h, 68h
		db  61h	; a
		db 72h,	0, 6
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 6
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 5Fh, 69h
aObuf		db 'obuf',0             ; DATA XREF: .debug_info:off_774o
		db 20h,	3, 81h
		dd offset loc_1D0
		dd 74705F03h, 83030072h, 1D0h, 3002302h, 746E635Fh, 0D6840300h
		dd 2000001h, 5F030423h,	65736162h, 0D0850300h, 2000001h
		dd 5F030823h, 67616C66h, 0D6860300h, 2000001h, 5F030C23h
		dd 656C6966h, 0D6870300h, 2000001h, 5F031023h, 72616863h
		dd 667562h, 1D68803h, 23020000h, 625F0314h, 69736675h
		dd 8903007Ah, 1D6h, 3182302h, 706D745Fh, 6D616E66h, 8A030065h
		dd 1D0h, 1C2302h, 10B0407h, 4060000h, 746E6905h, 49460800h
		dd 300454Ch, 1398Bh, 5080600h, 676E6F6Ch, 6E6F6C20h, 6E692067h
		dd 4060074h, 6E6F6C05h,	6E692067h, 2060074h, 6F687305h
		dd 69207472h, 600746Eh,	69730601h, 64656E67h, 61686320h
		dd 1060072h, 736E7508h,	656E6769h, 68632064h, 6007261h
aLongLongUnsign	db 8,7,'long long unsigned int',0
aGsize		db 8,'gsize',0
		db    4
		db 5Ah,	13h, 1
		db    0
		align 2
		dw 806h
		db    4
aDouble		db 'double',0
		db    9
		db 4, 8, 67h
aChar		db 'char',0
		db 5, 2Dh, 0Bh
		db    1
		db 2 dup(0), 6
		db    4
aLongUnsignedIn	db 7,'long unsigned int',0
		db    6
		db 2 dup(4), 66h
aLoat		db 'loat',0
		db 7, 4, 97h
		db    2
		db 2 dup(0), 0Ah
		dd offset loc_263+3
		db    7
		db 4, 66h, 2
		db    0
		align 2
		dw 0C06h
		db    4
aLongDouble	db 'long double',0      ; DATA XREF: .debug_info:00000CD1o
aDword		db 8,'DWORD',0
		db    6
		db 0E5h, 73h, 2
		db    0
		align 2
aWinbool	db 8,'WINBOOL',0
		db 6
		db 0E6h	; Ê
		dd offset loc_1D5+1
aBool		db 8,'BOOL',0
		db 6
		db 0EAh	; Í
		dd offset loc_2BE
aWord		db 8,'WORD',0
		db 6
		db 0F1h	; Ò
		dd offset loc_123
aPdword		db 8,'PDWORD',0
		db 6, 0F8h, 0F3h
		db    2
		db 2 dup(0), 7
		db    4
		dd offset loc_2B0+1
aChar_0		db 8,'CHAR',0
		db 7
		db  4Dh	; M
		dd offset loc_108+3
aPvoid		db 8,'PVOID',0
		db    7
		db 56h,	64h, 2
		db    0
		align 2
		dw 407h
		dd offset aWin95	; "Win95"
aLpstr		db 8,'LPSTR',0
		db 7
		db  6Ch	; l
		dd offset aAlpha	; "alpha"
a_osversioninfo	db 0Bh,'_OSVERSIONINFOA',0
		dw 794h
		db 0EAh	; Í
		db 0Ah,	0DBh, 3
		db    0
		align 2
		dw 640Ch
aWosversioninfo	db 'wOSVersionInfoSize',0
		db 7
dword_68C	dd 2B10AEBh, 23020000h,	77640C00h, 6F6A614Dh, 72655672h
		dd 6E6F6973h, 0AEC0700h, 2B1h, 0C042302h, 694D7764h, 56726F6Eh
		dd 69737265h, 7006E6Fh,	2B10AEDh, 23020000h, 77640C08h
		dd 6C697542h, 6D754E64h, 726562h, 0B10AEE07h, 2000002h
		dd 640C0C23h, 616C5077h, 726F6674h, 64496Dh, 0B10AEF07h
		dd 2000002h, 730C1023h,	4453437Ah, 73726556h, 6E6F69h
		dd 0DB0AF007h, 2000003h, 4001423h, 2F9h, 3EBh, 0FF05h
		dd 0D007F00h, 4556534Fh, 4F495352h, 464E494Eh, 700414Fh
		dd 3250AF1h, 4070000h, 325h
aLposversioninf	db 0Dh,'LPOSVERSIONINFOA',0
		dw 0F107h
		db  0Ah
		dd offset byte_401+1
aOsversioninfo	db 0Dh,'OSVERSIONINFO',0
		db    7
		db 4Fh,	0Fh, 0EBh
		db    3
		db 2 dup(0), 0Eh
		db    4
		db 8, 0FBh, 3
off_774		dd offset aObuf+4	; DATA XREF: .debug_info:00000A91o
					; ""
		db  0Ch
aWprocessorarch	db 'wProcessorArchitecture',0
dword_790	dd 0D903FC08h, 2000002h, 770C0023h, 65736552h, 64657672h
					; DATA XREF: .debug_info:00000AB7o
		dd 3FD0800h, 2D9h, 22302h, 0F908040Fh, 49703h, 77641000h
		dd 496D654Fh, 0FA080064h, 2B103h, 4371100h, 0B000000h
		dd 5359535Fh, 5F4D4554h, 4F464E49h, 0F8082400h,	5D203h
		dd 4781200h, 23020000h,	77640C00h, 65676150h, 657A6953h
		dd 4000800h, 2B1h, 0C042302h
aLpminimumappli	db 'lpMinimumApplicationAddress',0
		db    8
		db 1, 4, 5
		db    3
		db 2 dup(0), 2
		db  23h	; #
		db 8, 0Ch, 6Ch
aPmaximumapplic	db 'pMaximumApplicationAddress',0
		db 8
		db    2
		db 4, 5, 3
		db    0
		align 2
		dw 2302h
		db  0Ch
		db 0Ch,	64h, 77h
aActiveprocesso	db 'ActiveProcessorMask',0 ; DATA XREF: .debug_info:00000B84o
		db    8
		db 3, 4, 0B1h
		db    2
		db 2 dup(0), 2
		db  23h	; #
		db 10h,	0Ch, 64h
aWnumberofproce	db 'wNumberOfProcessors',0
unk_888		db    8			; DATA XREF: .debug_info:00000BA4o
		db 2 dup(4), 0B1h
		db    2
		db 2 dup(0), 2
		db  23h	; #
		db 14h,	0Ch, 64h
aWprocessortype	db 'wProcessorType',0
		db 8
		db    5
		db 4, 0B1h, 2
		db    0
		align 2
		dw 2302h
		db  18h
byte_8AD	db 0Ch,	64h, 77h	; DATA XREF: .debug_info:00000BC9o
aAllocationgran	db 'AllocationGranularity',0
		dw 608h
dword_8C8	dd 2B104h, 1C230200h, 7250770Ch, 7365636Fh, 4C726F73h
					; DATA XREF: .debug_info:00000BEEo
		dd 6C657665h, 4070800h,	2D9h, 0C202302h
aWprocessorrevi	db 'wProcessorRevision',0 ; DATA XREF: .debug_info:00000C14o
		db 8
dword_900	dd 2D90408h, 23020000h,	530D0022h, 45545359h, 4E495F4Dh
		dd 8004F46h, 4970409h, 4C0D0000h, 53595350h, 5F4D4554h
		dd 4F464E49h, 4090800h,	5FCh, 4970407h,	1130000h
aJabber_win32_u	db 'jabber_win32_uname',0 ; DATA XREF: .debug_info:000009CDo
		db 1
		dd 1D6012Bh
		db 2 dup(0)
		dd offset _jabber_win32_uname
		dd offset unk_2E1
		dd offset dword_F78
		dw 1D01h
dword_964	dd 14000009h, 737475h, 91D2B01h, 91020000h, 4C731500h
					; DATA XREF: .debug_info:000009E3o
					; .debug_info:00000C9Do
		dd 74676E65h, 2D010068h, 2B1h
		dd offset off_1048
dword_988	dd 5F534F16h, 73726576h, 6E6F69h, 4212E01h, 91030000h
		dd 53167ED8h, 65747379h, 6E495F6Dh, 1006F66h, 5D22Fh, 0B4910300h
		dd 694D157Eh, 4F77676Eh, 33010053h, 1D6h
off_9C4		dd offset off_106A	; DATA XREF: .debug_info:00000A1Eo
					; .debug_info:00000B16o ...
		db 17h
		dd offset loc_3B
		dd offset aJabber_win32_u ; "jabber_win32_uname"
		dd offset dword_68C+1Ah
		db 18h,	2, 74h
		dd 0D8910300h
		db 7Eh,	0, 17h
		dd offset loc_48
		dd offset dword_964+0Bh
		dd offset dword_68C+30h
		db 18h
dword_9EC	dd 3007402h, 7EB491h	; DATA XREF: .debug_info:00000A43o
					; .debug_info:00000A68o ...
		db 17h
		dd offset loc_61
		dd offset dword_988+16h
		dd offset dword_68C+55h
		db 18h,	2, 74h
		dd 730200h, 4740218h
		db 5, 3
off_A0E		dd offset aWin32_	; DATA XREF: .debug_info:00000D39o
					; "WIN32_"
		dw 218h
		dd 44010874h
		db 0, 17h
off_A1A		dd offset loc_8F	; DATA XREF: .debug_info:00000AD9o
		dd offset off_9C4+2
		dd offset dword_68C+7Ah
		dw 218h
		dd 73020074h, 74021800h
		db 4, 5, 3
		dd offset aWin??	; "Win??"
		db 18h
		dd 1087402h
		db 44h,	0, 17h
		dd offset loc_AF
		dd offset dword_9EC+2
		dd offset dword_68C+9Fh
		db 18h
		dd 2007402h, 2183C73h, 3050474h
off_A58		dd offset aI		; DATA XREF: .debug_info:00000C50o
					; "%i"
		dd 8740218h, 17003301h
		dd offset loc_CA
		dd offset dword_9EC+2
		db 50h
byte_A6D	db 7, 2	dup(0)		; DATA XREF: .debug_info:off_338o
		dd 740218h, 18287302h, 5047402h
		db 3
		dd offset aI		; "%i"
		db 18h,	2, 74h
		dd 440108h
		db 17h
		dd offset loc_123
		dd offset dword_988+16h
		dd offset off_774+2
		db 18h,	2, 74h
		dd 0D0730300h, 74021800h
		db 4, 5, 3
		dd offset aI386		; "i386"
		db 18h
		dd 1087402h
		db 44h,	0, 17h
		dd offset loc_153
		dd offset dword_988+16h
		dd offset dword_790+0Ch
		db 18h
		dd 3007402h, 1800D073h,	5047402h
		db 3
		dd offset aUnknown	; "unknown"
		db 18h,	2, 74h
		dd 440108h
		db 17h
		dd offset loc_16E
		dd offset off_A1A+2
		dd offset dword_790+29h
		db 18h,	2, 74h
		dd 730200h, 4740218h, 7EB09103h
		db 0, 17h
		dd offset loc_1A7
		dd offset dword_988+16h
		dd offset dword_790+49h
		dw 218h
		dd 73030074h, 21800D0h,	3050474h
		dd offset aPpc		; "ppc"
		db 0, 17h
		dd offset loc_1BC
		dd offset off_9C4+2
		dd offset dword_790+68h
		dw 218h
		dd 73020074h, 74021800h
		db 4, 5, 3
		dd offset aWinnt	; "WinNT"
		align 10h
		db 17h
		dd offset loc_1ED
		dd offset off_9C4+2
		dd offset aLpminimumappli+19h ;	"ss"
		db 18h,	2, 74h
		dd 730200h, 4740218h
		db 5, 3
		dd offset aWin??	; "Win??"
		dw 218h
		dd 44010874h
		db 0, 17h
		dd offset loc_213
		dd offset dword_988+16h
		dd offset aPmaximumapplic+17h ;	"ess"
		dw 218h
		dd 73030074h, 21800D0h,	3050474h
		dd offset aMips		; "mips"
		dd 8740218h, 17004401h
		dd offset loc_22B
		dd offset dword_988+16h
		dd offset aActiveprocesso+0Fh ;	"Mask"
		dd 740218h, 0D07303h, 4740218h
		db 5, 3
		dd offset aAlpha	; "alpha"
		dw 1700h
		dd offset loc_248
		dd offset off_9C4+2
		dd offset unk_888
		dd 740218h, 18007302h, 5047402h
		db 3
		dd offset aWin95	; "Win95"
		db 18h,	2, 74h
		dd 440108h
		db 17h
		dd offset loc_268
		dd offset off_9C4+2
		dd offset byte_8AD
		db 18h,	2, 74h
		dd 730200h, 4740218h
		db 5, 3
		dd offset aWin98	; "Win98"
		dw 218h
		dd 44010874h
		db 0, 17h
		dd offset loc_294
		dd offset dword_988+16h
		dd offset dword_8C8+0Bh
		dw 218h
		dd 73030074h, 21800D0h,	3050474h
		dd offset aUnknown	; "unknown"
		dd 8740218h, 17004401h
		dd offset loc_2B8
		dd offset dword_9EC+2
		dd offset aWprocessorrevi+7 ; "sorRevision"
		dd 740218h, 0D07303h, 4740218h
		db 5, 3
		dd offset aID86		; "i%d86"
		dw 1700h
		dd offset loc_2D7
		dd offset dword_9EC+2
		dd offset dword_900+13h
		dd 740218h, 0D07303h, 4740218h
		db 5, 3
		dd offset aILd		; "i%ld"
		dw 1900h
		dd offset unk_2E1
		dd offset off_A58+2
		db    0
		db 7, 4, 83h
		db    0
		db 2 dup(0), 4
		dd offset loc_1DD
		dd offset dword_900+2Eh
		db  1Ah
		align 2
a_iob		db 1Bh,'_iob',0
		db    3
		db 9Ah,	23h, 9
		db    0
		align 2
		dw 101h
		db  1Ch
		db 1, 47h, 65h
aTversionexa	db 'tVersionExA',0
		db    8
		db 0E4h, 6, 47h
aEtversionexa@4	db 'etVersionExA@4',0
		db 1
		dd offset loc_2CC+1
		db    1
		dd offset dword_964+0Bh
		db 1Dh,	8, 4
		db    0
		db 2 dup(0), 1Eh
		db    1
aGetsysteminfo	db 'GetSystemInfo',0
		db 8
		db 0BCh	; º
		db 6, 47h, 65h
aTsysteminfo@4	db 'tSystemInfo@4',0
		dw 101h
		dd offset dword_988+16h
		db  1Dh
		dd offset aLongDouble+9	; "le"
		align 2
		dw 11Fh
aG_strlcpy	db 'g_strlcpy',0
		dw 6C09h
		db    1
		dd offset loc_24A+3
		db 1, 0C6h, 9
		db    0
		align 2
		dw 9C1Dh
		db    2
		db 2 dup(0), 1Dh
		dd offset loc_28F+2
		db  1Dh
		dd offset loc_24A+3
		align 2
		dw 11Fh
aG_strlcat	db 'g_strlcat',0
		dw 6F09h
		db    1
		dd offset loc_24A+3
		db 1, 0EEh, 9
		db    0
		align 2
		dw 9C1Dh
		db    2
		db 2 dup(0), 1Dh
		dd offset loc_28F+2
		db  1Dh
		dd offset loc_24A+3
		align 2
		dw 120h
aSprintf	db 'sprintf',0
		db    3
		db 27h,	2 dup(1)
		dd offset loc_1D5+1
		db    1
		dd offset off_A0E+3
		db 1Dh,	0D0h, 1
		db    0
		align 2
		dw 111Dh
		db  0Ah
		db 2 dup(0), 21h
		db    0
		db 7, 4, 17h
		db  0Ah
		db 2 dup(0), 0Ah
		dd offset loc_108+3
		db  1Ch
		db 1, 47h, 65h
aTcomputernamea	db 'tComputerNameA',0
		db 8
		db  1Eh
		db 6, 47h, 65h
aTcomputernam_0	db 'tComputerNameA@8',0
		db 1, 0CDh, 2
		dd 5A010000h, 1D00000Ah, 318h, 2E51Dh, 1220000h, 74735F5Fh
		dd 5F6B6361h, 5F6B6863h, 6C696166h, 1010100h
		db 0
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 0DACh
dword_DAC	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000033Eo
		dd 8030113h, 0B3A0B0Bh,	13010B3Bh, 0D030000h, 3A080300h
		dd 490B3B0Bh, 0A3813h, 1010400h, 13011349h, 21050000h
		dd 2F134900h, 600000Bh,	0B0B0024h, 8030B3Eh, 0F070000h
		dd 490B0B00h, 8000013h,	8030016h, 0B3B0B3Ah, 1349h, 0B000F09h
		dd 0A00000Bh, 13490026h, 130B0000h, 0B080301h, 3B0B3A0Bh
		dd 130105h, 0D0C00h, 0B3A0803h,	1349053Bh, 0A38h, 300160Dh
		dd 3B0B3A08h, 134905h, 1130E00h, 0B3A0B0Bh, 1301053Bh
		dd 170F0000h, 3A0B0B01h, 1053B0Bh, 10000013h, 803000Dh
		dd 53B0B3Ah, 1349h, 49000D11h, 12000013h, 1349000Dh, 0A38h
		dd 3F012E13h, 3A08030Ch, 270B3B0Bh, 1113490Ch, 40011201h
		dd 0C429706h, 1301h, 3000514h, 3B0B3A08h, 213490Bh, 1500000Ah
		dd 8030034h, 0B3B0B3Ah,	6021349h, 34160000h, 3A080300h
		dd 490B3B0Bh, 0A0213h, 82891700h, 1110101h, 13011331h
		dd 8A180000h, 2000182h,	0A42910Ah, 89190000h, 11000182h
		dd 133101h, 211A00h, 341B0000h,	3A080300h, 490B3B0Bh, 3C0C3F13h
		dd 1C00000Ch, 0C3F012Eh, 0B3A0803h, 4087053Bh, 490C2708h
		dd 10C3C13h, 1D000013h,	13490005h, 2E1E0000h, 30C3F01h
		dd 3B0B3A08h, 8408705h,	0C3C0C27h, 1301h, 3F012E1Fh, 3A08030Ch
		dd 270B3B0Bh, 3C13490Ch, 13010Ch, 12E2000h, 8030C3Fh, 53B0B3Ah
		dd 13490C27h, 13010C3Ch, 18210000h, 22000000h, 0C3F002Eh
		dd 0C270803h, 0C3C0C34h
		db 3 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 0F78h
dword_F78	dd 0			; DATA XREF: .debug_info:0000095Eo
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 9
		dd 10740002h, 9, 3Bh, 0E0740003h, 3B01h, 3C00h,	74000300h
		dd 3C01DCh, 480000h, 30000h, 4801E074h,	49000000h, 3000000h
		dd 1DC7400h, 49h, 16Eh,	0E0740003h, 16E01h, 17100h, 74000300h
		dd 17101D8h, 18F0000h, 30000h, 8F01E074h, 90000001h, 2000001h
		dd 90107400h, 91000001h, 2000001h, 910C7400h, 92000001h
		dd 2000001h, 92087400h,	94000001h, 2000001h, 94047400h
		dd 0E1000001h, 3000002h, 1E07400h, 2 dup(0)
off_1048	dd offset loc_15B	; DATA XREF: .debug_info:00000984o
		dd offset unk_193
		dd 0B0910003h, 2DC7Eh, 2E100h, 91000300h, 7EB0h, 0
		db 2 dup(0)
off_106A	dd offset loc_8F	; DATA XREF: .debug_info:off_9C4o
		dd offset loc_94
		dw 2
		dd 949F33h, 1910000h, 10000h, 19356h, 1A900h, 56000100h
		dd 1BCh, 1C6h, 9F320002h, 1EDh,	1F7h, 9F330002h, 1F7h
		dd 230h, 48560001h, 4F000002h, 2000002h, 689F3000h, 72000002h
		dd 2000002h, 729F3100h,	0E1000002h, 1000002h, 5600h, 0
		db 2 dup(0)
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 10DCh
		dd 1Ch
		db 2, 0
		dd offset off_338
		dw 4
		dd 0
		dd offset _jabber_win32_uname
		dd offset unk_2E1
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 10FCh
off_10FC	dd offset loc_1D5+7	; DATA XREF: .debug_info:000003B7o
		db    2
		align 2
		dd offset loc_163
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 7701h
aIn32		db 'in32',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include',0
a________Win32D	db '../../../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a________Win3_0	db '../../../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
		align 10h
aPosix_uname_c	db 'posix.uname.c',0
		dw 1
		dd 73747500h, 656D616Eh, 100682Eh, 74730000h, 2E6F6964h
		dd 20068h, 696C6700h, 6E6F6362h, 2E676966h, 30068h, 79746700h
		dd 2E736570h, 40068h, 6E697700h, 2E666564h, 20068h, 6E697700h
		dd 682E746Eh, 200h, 626E6977h, 2E657361h, 20068h, 74736700h
		dd 6E756672h, 682E7363h, 400h, 2050000h
		dd offset _jabber_win32_uname
		dd 0F2012B03h, 91D60903h, 8CAC984h, 37FCB75h, 5DF39018h
		dd 0A1089F08h, 94F20E03h, 81A2502h, 586B039Fh, 3827A03h
		dd 3208F227h, 35A0883h,	1230255h, 5D032F08h, 7659F358h
		dd 8C80B03h, 17035975h,	549F0866h, 61032F08h, 2F750858h
		dd 59750868h, 3742003h,	9F085814h, 3AD087Eh, 67088277h
		dd 2581603h, 1010005h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 12DCh
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 4Ch, 1Ch
		dd offset unk_2E3-15DFh
		dd offset unk_2E1
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 1E00E46h
		dd 1DC0E72h, 1E00E41h, 1DC0E4Ch, 1E00E41h, 0E012503h, 0E4301D8h
		dd 0A5E01E0h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _jabber_win32_uname+10r
					; _jabber_win32_uname+17Dr
; BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA	lpVersionInformation)
		extrn _GetVersionExA@4:near ; CODE XREF: _jabber_win32_uname+36p
; void __stdcall GetSystemInfo(LPSYSTEM_INFO lpSystemInfo)
		extrn _GetSystemInfo@4:near ; CODE XREF: _jabber_win32_uname+43p
		extrn _g_strlcpy:near	; CODE XREF: _jabber_win32_uname+5Cp
					; _jabber_win32_uname+11Ep ...
		extrn _g_strlcat:near	; CODE XREF: _jabber_win32_uname+8Ap
					; _jabber_win32_uname+1B7p ...
; int sprintf(char *, const char *, ...)
		extrn _sprintf:near	; CODE XREF: _jabber_win32_uname+AAp
					; _jabber_win32_uname+C5p ...
; BOOL __stdcall GetComputerNameA(LPSTR	lpBuffer, LPDWORD nSize)
		extrn _GetComputerNameA@8:near ; CODE XREF: _jabber_win32_uname+169p
		extrn ___stack_chk_fail:near ; CODE XREF: _jabber_win32_uname:loc_2DCp


		end

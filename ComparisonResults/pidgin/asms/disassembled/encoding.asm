;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	E47F332A7C17BBF916CB3CC3956682CB
; Input	CRC32 :	12037A93

; File Name   :	d:\pidgin-o\encoding.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


; int __cdecl gg_encoding_convert(char *, int, int, size_t, int)
		public _gg_encoding_convert
_gg_encoding_convert proc near		; DATA XREF: .debug_info:00000682o
					; .debug_info:000009DFo ...

var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h
arg_10		= dword	ptr  14h

		push	ebp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	edi, [esp+5Ch+arg_0]
		mov	[esp+5Ch+var_40], edi
		mov	esi, [esp+5Ch+arg_4]
		mov	ebx, [esp+5Ch+arg_8]
		mov	ebp, [esp+5Ch+arg_C]
		mov	edx, [esp+5Ch+arg_10]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+5Ch+var_20], eax
		xor	eax, eax
		test	edi, edi
		jz	loc_18F
		cmp	ebx, esi
		jz	loc_200

loc_3A:					; CODE XREF: _gg_encoding_convert+203j
		cmp	ebp, 0FFFFFFFFh
		jz	loc_258

loc_43:					; CODE XREF: _gg_encoding_convert+267j
		cmp	ebx, esi
		jz	loc_248
		test	ebx, ebx
		jz	loc_188
		dec	ebx
		jnz	loc_18F
		test	esi, esi
		jnz	loc_18F

loc_62:					; DATA XREF: .debug_info:00000A60o
					; .debug_loc:off_112Eo	...
		mov	edi, [esp+5Ch+var_40]
		movsx	bx, byte ptr [edi]
		test	bl, bl
		jz	loc_297
		test	ebp, ebp
		jle	loc_297
		mov	eax, edi
		add	edi, ebp

loc_7E:					; DATA XREF: .debug_info:00000AE5o
					; .debug_ranges:00001634o ...
		movzx	ecx, bl

loc_81:					; DATA XREF: .debug_loc:00001132o
					; .debug_loc:000011CEo
		lea	esi, [esi+0]

loc_84:					; CODE XREF: _gg_encoding_convert:loc_98j
					; DATA XREF: .debug_ranges:00001638o ...
		test	cl, cl

loc_86:					; DATA XREF: .debug_info:000007E0o
		js	loc_164

loc_8C:					; CODE XREF: _gg_encoding_convert+170j
		inc	esi

loc_8D:					; CODE XREF: _gg_encoding_convert+180j
					; _gg_encoding_convert+1FBj
					; DATA XREF: ...
		movzx	ecx, byte ptr [eax+1]
		test	cl, cl
		jz	short loc_9A
		inc	eax
		cmp	eax, edi

loc_98:					; DATA XREF: .debug_info:000007D0o
		jnz	short loc_84

loc_9A:					; CODE XREF: _gg_encoding_convert+93j
					; _gg_encoding_convert+299j
		cmp	edx, 0FFFFFFFFh
		jz	short loc_A7
		cmp	esi, edx
		jg	loc_26C

loc_A7:					; CODE XREF: _gg_encoding_convert+9Dj
					; _gg_encoding_convert+26Ej
		lea	eax, [esi+1]
		mov	[esp+5Ch+var_5C], eax ;	size_t

loc_AD:					; DATA XREF: .debug_info:00000875o
		call	_malloc

loc_B2:					; DATA XREF: .debug_info:00000ACEo
		mov	ecx, eax

loc_B4:					; DATA XREF: .debug_loc:off_122Co
		test	eax, eax
		jz	loc_19C

loc_BC:					; DATA XREF: .debug_loc:off_1166o
		test	bl, bl
		jz	loc_43E
		test	ebp, ebp
		jle	loc_43E
		test	esi, esi
		jle	loc_43E
		mov	edx, [esp+5Ch+var_40]
		inc	edx
		add	ebp, [esp+5Ch+var_40]
		mov	[esp+5Ch+var_40], ebp
		xor	eax, eax

loc_E3:					; DATA XREF: .debug_loc:00001230o
		mov	[esp+5Ch+var_3C], ecx
		jmp	short loc_108
; ---------------------------------------------------------------------------
unk_E9		db  8Dh	; ç		; DATA XREF: .debug_loc:0000116Ao
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_EC:					; CODE XREF: _gg_encoding_convert+10Aj
					; _gg_encoding_convert+11Bj
					; DATA XREF: ...
		mov	ebp, [esp+5Ch+var_3C]
		mov	[ebp+eax+0], bl
		inc	eax

loc_F5:					; CODE XREF: _gg_encoding_convert+1F3j
					; DATA XREF: .debug_ranges:000016DCo
		movsx	bx, byte ptr [edx]
		test	bl, bl
		jz	short loc_158

loc_FD:					; CODE XREF: _gg_encoding_convert+155j
		cmp	edx, [esp+5Ch+var_40]
		jz	short loc_158
		inc	edx
		cmp	esi, eax
		jle	short loc_158

loc_108:				; CODE XREF: _gg_encoding_convert+E7j
					; DATA XREF: .debug_ranges:000016E0o
		test	bl, bl
		jns	short loc_EC
		movzx	ebx, bl
		mov	bx, ds:(_table_cp1250-100h)[ebx+ebx]

loc_117:				; DATA XREF: .debug_loc:off_1296o
		cmp	bx, 7Fh	; ''
		jbe	short loc_EC
		cmp	bx, 7FFh
		ja	loc_1B8
		lea	edi, [eax+1]
		cmp	esi, edi

loc_12D:				; DATA XREF: .debug_line:0000179Eo
		jl	short loc_158
		mov	ebp, ebx
		shr	bp, 6
		mov	ecx, ebp
		or	ecx, 0FFFFFFC0h
		mov	ebp, [esp+5Ch+var_3C]
		mov	[ebp+eax+0], cl

loc_142:				; DATA XREF: .debug_ranges:00001674o
					; .debug_ranges:000016E4o
		and	ebx, 3Fh

loc_145:				; DATA XREF: .debug_loc:0000129Ao
					; .debug_ranges:00001678o ...
		or	ebx, 0FFFFFF80h
		mov	[ebp+edi+0], bl

loc_14C:				; DATA XREF: .debug_info:000006D5o
					; .debug_info:000006E1o ...
		add	eax, 2

loc_14F:				; DATA XREF: .debug_ranges:000016ECo
		movsx	bx, byte ptr [edx]

loc_153:				; DATA XREF: .debug_info:000006F0o
					; .debug_info:00000710o ...
		test	bl, bl
		jnz	short loc_FD
		nop

loc_158:				; CODE XREF: _gg_encoding_convert+FBj
					; _gg_encoding_convert+101j ...
		mov	ecx, [esp+5Ch+var_3C]

loc_15C:				; CODE XREF: _gg_encoding_convert+440j
		mov	byte ptr [ecx+eax], 0

loc_160:				; DATA XREF: .debug_ranges:0000163Co
					; .debug_ranges:0000167Co
		jmp	short loc_19C
; ---------------------------------------------------------------------------
		align 4

loc_164:				; CODE XREF: _gg_encoding_convert:loc_86j
					; DATA XREF: .debug_ranges:00001640o ...
		mov	cx, ds:(_table_cp1250-100h)[ecx+ecx]

loc_16C:				; DATA XREF: .debug_loc:off_1278o
		cmp	cx, 7Fh	; ''
		jbe	loc_8C
		cmp	cx, 7FFh
		ja	short loc_1F8
		add	esi, 2
		jmp	loc_8D
; ---------------------------------------------------------------------------
unk_185		db  8Dh	; ç		; DATA XREF: .debug_loc:0000127Co
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_188:				; CODE XREF: _gg_encoding_convert+4Dj
					; DATA XREF: .debug_ranges:00001644o ...
		dec	esi
		jz	loc_29E

loc_18F:				; CODE XREF: _gg_encoding_convert+2Cj
					; _gg_encoding_convert+54j ...
		call	__errno

loc_194:				; DATA XREF: .debug_info:00000BC8o
		mov	dword ptr [eax], 16h
		xor	ecx, ecx

loc_19C:				; CODE XREF: _gg_encoding_convert+B6j
					; _gg_encoding_convert:loc_160j ...
		mov	eax, ecx
		mov	ebp, [esp+5Ch+var_20]
		xor	ebp, dword ptr ds:___stack_chk_guard
		jnz	loc_4F3
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_1B8:				; CODE XREF: _gg_encoding_convert+122j
					; DATA XREF: .debug_ranges:00001648o ...
		lea	ebp, [eax+2]
		cmp	esi, ebp
		jl	short loc_158

loc_1BF:				; DATA XREF: .debug_info:00000904o
		mov	edi, ebx
		shr	di, 0Ch
		mov	ecx, edi
		or	ecx, 0FFFFFFE0h
		mov	edi, [esp+5Ch+var_3C]
		mov	[edi+eax], cl
		mov	edi, ebx
		shr	di, 6

loc_1D7:				; DATA XREF: .debug_ranges:0000168Co
					; .debug_ranges:000016F4o
		and	edi, 3Fh

loc_1DA:				; DATA XREF: .debug_ranges:00001690o
					; .debug_ranges:000016F8o
		mov	ecx, edi
		or	ecx, 0FFFFFF80h
		mov	edi, [esp+5Ch+var_3C]
		mov	[edi+eax+1], cl

loc_1E7:				; DATA XREF: .debug_ranges:00001694o
					; .debug_ranges:000016FCo
		and	ebx, 3Fh

loc_1EA:				; DATA XREF: .debug_ranges:00001698o
					; .debug_ranges:00001700o
		or	ebx, 0FFFFFF80h
		mov	[edi+ebp], bl
		add	eax, 3
		jmp	loc_F5
; ---------------------------------------------------------------------------

loc_1F8:				; CODE XREF: _gg_encoding_convert+17Bj
					; DATA XREF: .debug_ranges:000016C8o ...
		add	esi, 3
		jmp	loc_8D
; ---------------------------------------------------------------------------

loc_200:				; CODE XREF: _gg_encoding_convert+34j
					; DATA XREF: .debug_ranges:0000164Co ...
		cmp	edx, 0FFFFFFFFh
		jnz	loc_3A
		cmp	ebp, 0FFFFFFFFh
		jz	short loc_273

loc_20E:				; CODE XREF: _gg_encoding_convert+24Bj
					; _gg_encoding_convert+24Fj ...
		lea	eax, [ebp+1]
		mov	[esp+5Ch+var_5C], eax ;	size_t
		call	_malloc

loc_219:				; DATA XREF: .debug_info:00000B9Ao
		mov	ecx, eax

loc_21B:				; DATA XREF: .debug_loc:off_111Bo
		test	eax, eax
		jz	loc_19C
		mov	[esp+5Ch+var_54], ebp ;	size_t
		mov	edi, [esp+5Ch+var_40]
		mov	[esp+5Ch+var_58], edi ;	char *
		mov	[esp+5Ch+var_5C], eax ;	char *
		mov	[esp+5Ch+var_44], eax

loc_236:				; DATA XREF: .debug_loc:0000111Fo
		call	_strncpy

loc_23B:				; DATA XREF: .debug_info:00000BAFo
					; .debug_line:off_1798o
		mov	ecx, [esp+5Ch+var_44]
		mov	byte ptr [ecx+ebp], 0
		jmp	loc_19C
; ---------------------------------------------------------------------------

loc_248:				; CODE XREF: _gg_encoding_convert+45j
					; DATA XREF: .debug_loc:000015F6o
		cmp	edx, 0FFFFFFFFh
		jz	short loc_20E
		cmp	ebp, edx
		jle	short loc_20E
		mov	ebp, edx
		jmp	short loc_20E
; ---------------------------------------------------------------------------
		align 4

loc_258:				; CODE XREF: _gg_encoding_convert+3Dj
					; DATA XREF: .debug_info:00000B82o
		xor	eax, eax
		mov	ecx, ebp
		mov	edi, [esp+5Ch+var_40]

loc_260:				; DATA XREF: .debug_info:00000870o
		repne scasb
		not	ecx
		lea	ebp, [ecx-1]
		jmp	loc_43
; ---------------------------------------------------------------------------

loc_26C:				; CODE XREF: _gg_encoding_convert+A1j
		mov	esi, edx
		jmp	loc_A7
; ---------------------------------------------------------------------------

loc_273:				; CODE XREF: _gg_encoding_convert+20Cj
		mov	edx, [esp+5Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	loc_4F3
		mov	edi, [esp+5Ch+var_40]
		mov	[esp+5Ch+arg_0], edi ; char *
		add	esp, 4Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	_strdup
; ---------------------------------------------------------------------------

loc_297:				; CODE XREF: _gg_encoding_convert+6Cj
					; _gg_encoding_convert+74j
					; DATA XREF: ...
		xor	esi, esi
		jmp	loc_9A
; ---------------------------------------------------------------------------

loc_29E:				; CODE XREF: _gg_encoding_convert+189j
					; DATA XREF: .debug_loc:off_131Fo ...
		mov	edi, [esp+5Ch+var_40]
		mov	bl, [edi]
		test	bl, bl
		jz	loc_4DF
		test	ebp, ebp
		jle	loc_4DF
		mov	eax, edi
		mov	esi, edi
		add	esi, ebp

loc_2BA:				; DATA XREF: .debug_ranges:0000171Co
					; .debug_ranges:00001754o
		mov	cl, bl
		mov	[esp+5Ch+var_3C], 0
		xor	edi, edi
		jmp	short loc_2CD
; ---------------------------------------------------------------------------

loc_2C8:				; CODE XREF: _gg_encoding_convert+2DEj
					; DATA XREF: .debug_loc:00001323o ...
		inc	eax

loc_2C9:				; DATA XREF: .debug_ranges:00001720o
					; .debug_ranges:00001758o
		cmp	eax, esi
		jz	short loc_2E0

loc_2CD:				; CODE XREF: _gg_encoding_convert+2C6j
					; DATA XREF: .debug_info:00000B24o
		and	ecx, 0C0h
		add	ecx, 0FFFFFF80h
		jz	short loc_2D9
		inc	edi

loc_2D9:				; CODE XREF: _gg_encoding_convert+2D6j
		mov	cl, [eax+1]
		test	cl, cl
		jnz	short loc_2C8

loc_2E0:				; CODE XREF: _gg_encoding_convert+2CBj
		mov	[esp+5Ch+var_3C], edi

loc_2E4:				; CODE XREF: _gg_encoding_convert+4E7j
		cmp	edx, 0FFFFFFFFh
		jz	short loc_2F3
		cmp	[esp+5Ch+var_3C], edx
		jle	short loc_2F3
		mov	[esp+5Ch+var_3C], edx

loc_2F3:				; CODE XREF: _gg_encoding_convert+2E7j
					; _gg_encoding_convert+2EDj
		mov	eax, [esp+5Ch+var_3C]
		inc	eax
		mov	[esp+5Ch+var_5C], eax ;	size_t
		call	_malloc

loc_300:				; DATA XREF: .debug_info:00000B68o
		mov	ecx, eax

loc_302:				; DATA XREF: .debug_loc:off_12B4o
		test	eax, eax
		jz	loc_19C

loc_30A:				; DATA XREF: .debug_loc:off_134Bo
					; .debug_loc:off_1436o	...
		test	bl, bl
		jz	loc_4EC
		test	ebp, ebp
		jle	loc_4EC

loc_31A:				; DATA XREF: .debug_info:00000A5Co
		mov	eax, [esp+5Ch+var_3C]

loc_31E:				; DATA XREF: .debug_loc:000012B8o
		test	eax, eax
		jle	loc_4EC
		mov	eax, [esp+5Ch+var_40]
		inc	eax
		add	ebp, [esp+5Ch+var_40]
		mov	[esp+5Ch+var_38], ebp
		mov	[esp+5Ch+var_30], 0
		mov	[esp+5Ch+var_34], 0
		xor	edx, edx
		xor	edi, edi
		mov	ebp, ecx
		mov	esi, [esp+5Ch+var_40]
		jmp	short loc_383
; ---------------------------------------------------------------------------
unk_34F		db  90h	; ê		; DATA XREF: .debug_loc:0000134Fo
					; .debug_loc:0000143Ao	...
; ---------------------------------------------------------------------------

loc_350:				; CODE XREF: _gg_encoding_convert+386j
		test	edi, edi
		jz	short loc_35A
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx

loc_35A:				; CODE XREF: _gg_encoding_convert+352j
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx
		xor	edi, edi

loc_362:				; CODE XREF: _gg_encoding_convert+3EBj
					; _gg_encoding_convert+412j ...
		mov	esi, eax
		mov	bl, [eax]
		test	bl, bl

loc_368:				; DATA XREF: .debug_info:00000A84o
		jz	loc_4F8
		cmp	eax, [esp+5Ch+var_38]
		jz	loc_46C
		inc	eax
		cmp	[esp+5Ch+var_3C], edx
		jle	loc_46C

loc_383:				; CODE XREF: _gg_encoding_convert+34Dj
		cmp	bl, 0F4h ; 'Ù'
		ja	short loc_350
		movsx	ecx, bl
		mov	[esp+5Ch+var_48], ecx
		and	ecx, 0F8h
		cmp	ecx, 0F0h ; ''
		jz	short loc_3F0
		mov	ecx, [esp+5Ch+var_48]

loc_3A1:				; DATA XREF: .debug_info:00000AC4o
		and	ecx, 0F0h
		cmp	ecx, 0E0h ; '‡'
		jz	short loc_417
		mov	ecx, [esp+5Ch+var_48]
		and	ecx, 0E0h
		cmp	ecx, 0C0h ; '¿'
		jz	loc_445
		mov	ecx, [esp+5Ch+var_48]
		and	ecx, 0C0h
		add	ecx, 0FFFFFF80h
		jz	loc_477
		test	edi, edi
		jz	short loc_3E2
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx

loc_3E2:				; CODE XREF: _gg_encoding_convert+3DAj
		mov	bl, [esi]
		mov	[ebp+edx+0], bl
		inc	edx
		xor	edi, edi
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_3F0:				; CODE XREF: _gg_encoding_convert+39Bj
		test	edi, edi
		jz	short loc_3FA
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx

loc_3FA:				; CODE XREF: _gg_encoding_convert+3F2j
					; DATA XREF: .debug_ranges:0000175Co
		mov	cl, [esi]

loc_3FC:				; DATA XREF: .debug_ranges:00001760o
		mov	ebx, ecx
		and	ebx, 7
		mov	[esp+5Ch+var_34], ebx
		mov	[esp+5Ch+var_30], 10000h
		mov	edi, 3
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_417:				; CODE XREF: _gg_encoding_convert+3ADj
		test	edi, edi
		jz	short loc_421
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx

loc_421:				; CODE XREF: _gg_encoding_convert+419j
					; DATA XREF: .debug_ranges:00001764o
		mov	cl, [esi]

loc_423:				; DATA XREF: .debug_ranges:00001768o
		mov	ebx, ecx
		and	ebx, 0Fh
		mov	[esp+5Ch+var_34], ebx
		mov	[esp+5Ch+var_30], 800h
		mov	edi, 2
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_43E:				; CODE XREF: _gg_encoding_convert+BEj
					; _gg_encoding_convert+C6j ...
		xor	eax, eax
		jmp	loc_15C
; ---------------------------------------------------------------------------

loc_445:				; CODE XREF: _gg_encoding_convert+3BFj
					; DATA XREF: .debug_ranges:0000165Co ...
		test	edi, edi
		jz	short loc_44F
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx

loc_44F:				; CODE XREF: _gg_encoding_convert+447j
					; DATA XREF: .debug_ranges:00001774o
		mov	cl, [esi]

loc_451:				; DATA XREF: .debug_ranges:00001778o
		mov	ebx, ecx
		and	ebx, 1Fh
		mov	[esp+5Ch+var_34], ebx
		mov	[esp+5Ch+var_30], 80h ;	'Ä'
		mov	edi, 1
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_46C:				; CODE XREF: _gg_encoding_convert+372j
					; _gg_encoding_convert+37Dj
		mov	ecx, ebp

loc_46E:				; CODE XREF: _gg_encoding_convert+4EEj
					; _gg_encoding_convert+4FCj ...
		mov	byte ptr [ecx+edx], 0

loc_472:				; DATA XREF: .debug_ranges:0000172Co
					; .debug_ranges:0000177Co
		jmp	loc_19C
; ---------------------------------------------------------------------------

loc_477:				; CODE XREF: _gg_encoding_convert+3D2j
					; DATA XREF: .debug_ranges:00001730o ...
		test	edi, edi
		jz	loc_362
		mov	ecx, [esp+5Ch+var_34]
		shl	ecx, 6
		mov	esi, ebx
		and	esi, 3Fh
		or	esi, ecx
		mov	[esp+5Ch+var_34], esi
		dec	edi
		jnz	loc_362

loc_498:				; DATA XREF: .debug_info:00000B48o
					; .debug_loc:off_15B3o
		mov	ecx, [esp+5Ch+var_30]
		cmp	esi, ecx
		jb	short loc_4C6
		xor	ecx, ecx
		jmp	short loc_4AD
; ---------------------------------------------------------------------------

loc_4A4:				; CODE XREF: _gg_encoding_convert+4B7j
		inc	ecx

loc_4A5:				; DATA XREF: .debug_loc:off_15DFo
					; .debug_info:00000AACo
		cmp	ecx, 80h ; 'Ä'
		jz	short loc_4C6

loc_4AD:				; CODE XREF: _gg_encoding_convert+4A2j
					; DATA XREF: .debug_loc:000015E3o
		movzx	ebx, ds:_table_cp1250[ecx+ecx]
		cmp	esi, ebx
		jnz	short loc_4A4

loc_4B9:				; DATA XREF: .debug_info:00000ABFo
		add	ecx, 0FFFFFF80h
		mov	[ebp+edx+0], cl
		inc	edx

loc_4C1:				; DATA XREF: .debug_loc:000015B7o
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_4C6:				; CODE XREF: _gg_encoding_convert+49Ej
					; _gg_encoding_convert+4ABj
		cmp	[esp+5Ch+var_34], 0FEFFh
		jz	loc_362
		mov	byte ptr [ebp+edx+0], 3Fh ; '?'
		inc	edx
		jmp	loc_362
; ---------------------------------------------------------------------------

loc_4DF:				; CODE XREF: _gg_encoding_convert+2A6j
					; _gg_encoding_convert+2AEj
					; DATA XREF: ...
		mov	[esp+5Ch+var_3C], 0
		jmp	loc_2E4
; ---------------------------------------------------------------------------

loc_4EC:				; CODE XREF: _gg_encoding_convert+30Cj
					; _gg_encoding_convert+314j ...
		xor	edx, edx
		jmp	loc_46E
; ---------------------------------------------------------------------------

loc_4F3:				; CODE XREF: _gg_encoding_convert+1A8j
					; _gg_encoding_convert+27Dj
					; DATA XREF: ...
		call	___stack_chk_fail
; ---------------------------------------------------------------------------

loc_4F8:				; CODE XREF: _gg_encoding_convert:loc_368j
					; DATA XREF: .debug_info:00000BDBo
		mov	ecx, ebp

loc_4FA:				; DATA XREF: .debug_ranges:00001738o
					; .debug_ranges:00001788o
		test	edi, edi
		jz	loc_46E
		mov	byte ptr [ecx+edx], 3Fh	; '?'
		inc	edx

loc_507:				; DATA XREF: .debug_info:off_686o
					; .debug_info:000009E3o ...
		jmp	loc_46E
_gg_encoding_convert endp

_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
byte_50C	label byte		; DATA XREF: .debug_aranges:00001624o
					; .debug_ranges:0000173Co ...
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment '32byte' can not be represented in assembly
_rdata		segment	para public 'DATA' use32
		assume cs:_rdata
		;org 514h
_table_cp1250	dw 20ACh		; DATA XREF: _gg_encoding_convert+10Fr
					; _gg_encoding_convert:loc_164r ...
		dw 3Fh
dword_518	dd 3F201Ah, 2026201Eh, 20212020h, 2030003Fh, 20390160h
		dd 164015Ah, 179017Dh, 2018003Fh, 201C2019h, 2022201Dh
		dd 20142013h, 2122003Fh, 203A0161h, 165015Bh, 17A017Eh
		dd 2C700A0h, 14102D8h, 10400A4h, 0A700A6h, 0A900A8h, 0AB015Eh
		dd 0AD00ACh, 17B00AEh, 0B100B0h, 14202DBh, 0B500B4h, 0B700B6h
		dd 10500B8h, 0BB015Fh, 2DD013Dh, 17C013Eh, 0C10154h, 10200C2h
		dd 13900C4h, 0C70106h, 0C9010Ch, 0CB0118h, 0CD011Ah, 10E00CEh
		dd 1430110h, 0D30147h, 15000D4h, 0D700D6h, 16E0158h, 17000DAh
		dd 0DD00DCh, 0DF0162h, 0E10155h, 10300E2h, 13A00E4h, 0E70107h
		dd 0E9010Dh, 0EB0119h, 0ED011Bh, 10F00EEh, 1440111h, 0F30148h
		dd 15100F4h, 0F700F6h, 16F0159h, 17100FAh, 0FD00FCh, 2D90163h
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 614h
off_614		dd offset byte_699	; DATA XREF: .debug_aranges:00001616o
byte_618	db 2, 0			; DATA XREF: .debug_info:00000AD2o
					; .debug_info:00000B6Co ...
		dd offset dword_CB4
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
dword_62C	dd 62696C01h, 636E652Fh, 6E69646Fh, 632E67h, 5C5C3A43h
					; DATA XREF: .debug_info:00000BB3o
		dd 6B726F77h, 63617073h, 705C5C65h, 69676469h, 65642D6Eh
		dd 5C6C6576h, 6469705Ch, 2D6E6967h, 30312E32h, 5C31312Eh
		dd 62696C5Ch, 70727570h, 5C5C656Ch, 746F7270h, 6C6F636Fh
		dd 675C5C73h
		db 67h,	0
		dd offset _gg_encoding_convert
off_686		dd offset loc_507+5	; DATA XREF: .debug_info:00000BDFo
		dd offset off_1798
		dw 7302h
aIze_t		db 'ize_t',0
		dw 0D503h
		db 88h
byte_699	db 3 dup(0)		; DATA XREF: .debug_info:off_614o
		db    3
		db 4, 7, 75h
aNsignedInt	db 'nsigned int',0
		db    3
		db 2, 7, 73h
aHortUnsignedIn	db 'hort unsigned int',0
		dw 103h
		db    6
aChar		db 'char',0
		dw 5F04h
aIobuf		db 'iobuf',0
		dw 220h
		db  81h	; Å
		dd offset loc_14C+1
		db 5, 5Fh, 70h
		db  74h	; t
		db 72h,	0, 2
		db  83h	; É
		dd offset loc_14C+1
		db 2, 23h, 0
		db    5
a_cnt		db '_cnt',0
		dw 8402h
		dd offset loc_153
		db    2
		db 23h,	4, 5
a_base		db '_base',0
		dw 8502h
		dd offset loc_14C+1
		db    2
		db 23h,	8, 5
a_flag		db '_flag',0
		dw 8602h
		dd offset loc_153
		db    2
		db 23h,	0Ch, 5
a_file		db '_file',0
		dw 8702h
		dd offset loc_153
		db    2
		db 23h,	10h, 5
a_charbuf	db '_charbuf',0
		db 2, 88h, 53h
		db    1
		db 2 dup(0), 2
		db  23h	; #
		db 14h,	5, 5Fh
aBufsiz		db 'bufsiz',0
		db 2
		db  89h	; â
		dd offset loc_153
		db 2, 23h, 18h
		db    5
a_tmpfname	db '_tmpfname',0
		db 2
		db  8Ah	; ä
		dd offset loc_14C+1
		db 2, 23h, 1Ch
		db    0
		db 6, 4, 0AEh
		db    0
		db 2 dup(0), 3
		db    4
		db 5, 69h, 6Eh
		db  74h	; t
		align 2
		dw 4602h
		db  49h	; I
		db 4Ch,	45h, 0
		db    2
		db 8Bh,	0B6h, 0
		db    0
		align 2
		dw 803h
		db    5
aLongLongInt	db 'long long int',0
		db 3
		db    4
		db 5, 6Ch, 6Fh
aNgInt		db 'ng int',0
		db 3
		db    2
		db 5, 73h, 68h
aOrtInt		db 'ort int',0
		db    3
		db 1, 6, 73h
aIgnedChar	db 'igned char',0
		db 3
		db    1
aUnsignedChar	db 8,'unsigned char',0
		db    2
aUint16_t	db 'uint16_t',0
		dw 1E04h
		dd offset loc_98
		db    2
aUint32_t	db 'uint32_t',0
		dw 2004h
		dd offset loc_86+2
		db    3
aLongLongUnsign	db 8,7,'long long unsigned int',0
		dw 403h
aSizetype	db 7,'sizetype',0
		dw 407h
		db    5
		db 0E0h, 3Dh, 2
		db    0
		align 2
aGg_encoding_cp	db 8,'GG_ENCODING_CP1250',0
		dw 800h
aGg_encoding_ut	db 'GG_ENCODING_UTF8',0
		db 1, 8, 47h
aG_encoding_inv	db 'G_ENCODING_INVALID',0
		db 7Fh
		db    0
		db 2, 2	dup(67h)
a_encoding_t	db '_encoding_t',0
		db    5
		db 0E4h, 0F6h, 1
		db    0
		align 2
		dw 409h
		db    6
		db 4, 53h, 1
		db    0
		align 2
		dw 406h
		dd offset loc_260
		db  0Ah
		dd offset loc_AD+1
aGg_encoding_co	db 0Bh,'gg_encoding_convert_utf8_cp1250',0
		dw 8401h
		dd 14D01h, 31B0100h, 730C0000h,	1006372h, 25A84h
		db 0, 0Dh
		dd offset aSrc_length	; "src_length"
		dw 8401h
		dd offset loc_153
		db 0Dh
		dd offset aDst_length	; "dst_length"
		db 1, 84h, 53h
		dd 0E000001h
		dd offset aResult	; "result"
		db    1
		db 86h,	4Dh, 1
		db    0
		align 2
		dw 690Fh
		db    0
		db 1, 87h, 53h
		db    1
		db 2 dup(0), 0Fh
		db  6Ah	; j
		align 2
		dw 8701h
		dd offset loc_153
		db  0Fh
		db 6Ch,	65h, 6Eh
		db    0
		db 1, 87h, 53h
		db    1
		db 2 dup(0), 0Fh
aUc_left	db 'uc_left',0
		db    1
		db 87h,	53h, 1
		db    0
		align 2
		dw 750Fh
		db  63h	; c
		align 2
		dw 8801h
		dd offset loc_1BF+1
		db  0Fh
aUc_min		db 'uc_min',0
		db    1
		db 88h,	0C0h, 1
		db    0
		align 2
		dw 0F10h
aValid		db 'valid',0
		dw 0B701h
		dd offset loc_153
		db  0Fh
		db 6Bh,	0, 1
		db 0B8h	; ∏
		dd offset loc_153
		db 2 dup(0), 0Bh
aGg_encoding__0	db 'gg_encoding_convert_cp1250_utf8',0
		dd 4D014101h, 1000001h,	3AEh, 6372730Ch, 5A410100h, 0D000002h
		dd offset aSrc_length	; "src_length"
		dd 1534101h
		db 2 dup(0), 0Dh
		dd offset aDst_length	; "dst_length"
		db 1
		dd 15341h, 690F00h, 1534301h, 6A0F0000h, 53430100h, 0F000001h
		dd 6E656Ch, 1534301h
		db 2 dup(0), 0Eh
		dd offset aResult	; "result"
		db 1
		dd 14D44h, 3A11100h, 750F0000h,	47010063h, 1B0h, 750F1000h
		dd 5F010063h, 1B0h, 1120000h
aGg_encoding__1	db 'gg_encoding_convert',0
		dd 4D01E401h
		db 1, 2	dup(0)
		dd offset _gg_encoding_convert
		dd offset loc_507+5
		dd offset dword_EE8
		db 1
		dd offset dword_518+0B8h
		dd 63727313h, 5AE40100h
		db 2, 2	dup(0)
		dd offset byte_FCB
		db 13h
aSrc_encoding	db 'src_encoding',0
		db 1, 0E4h, 3Dh
		db 2, 2	dup(0)
		dd offset byte_1003
		db 13h
aDst_encoding	db 'dst_encoding',0
		db 1, 0E5h, 3Dh
		db 2, 2	dup(0)
		dd offset byte_102F
		db 14h
		dd offset aSrc_length	; "src_length"
		dd 153E501h
		db 2 dup(0)
		dd offset byte_108B
		db 15h
		dd offset aDst_length	; "dst_length"
		db 1
		dd 153E5h, 10910200h
		db 16h
		dd offset aResult	; "result"
		db 1, 0E7h, 4Dh
		db 1, 2	dup(0)
		dd offset off_111B
		db 17h
		dd offset loc_31A+1
		dd offset loc_62
		dd offset off_1630
		dd 0CC010C01h, 18000004h, 35Eh,	35318h,	3481800h
		db 2 dup(0), 19h
		dd offset off_1668
		db 1Ah
		dd offset loc_368+1
		dd offset off_112E
		dd 3721Ah
		db 0
		dd offset off_1166
		db 1Ah,	7Bh, 3
		db 2 dup(0)
		dd offset off_11CA
		dw 861Ah
		db 3, 2	dup(0)
		dd offset off_122C
		db 1Bh
		dd offset off_16B8
		dd offset loc_4A5+1
		dd 3961Ah
		db 0
		dd offset off_1278
		align 2
		db 1Bh
		dd offset off_16D8
		dd offset loc_4B9
		db 1Ah
		dd offset loc_3A1+1
		dd offset off_1296
		db 0, 1Ch
		dd offset loc_B2
		dd offset byte_618
		dw 21Dh
		dd 76020074h, 1, 26517h
		db 0
		dd offset loc_7E
		dd offset off_1710
		db 1, 9, 1
		dd offset dword_518+51h
		dd 2A818h, 29D1800h, 92180000h,	19000002h
		dd offset off_1748
		dd 2B31Ah
		db 0
		dd offset off_12B4
		db 1Ah,	0BEh, 2
		db 2 dup(0)
		dd offset off_131F
		dw 0C71Ah
		db 2, 2	dup(0)
		dd offset off_134B
		db 1Ah
		dd offset loc_2CD+3
		dd offset off_13D0
		dd 2DB1Ah
		db 0
		dd offset off_1436
		db 1Ah,	0EAh, 2
		db 2 dup(0)
		dd offset off_14CB
		dw 0F41Ah
		db 2, 2	dup(0)
		dd offset off_1546
		db 1Eh
		dd offset loc_498
		dd offset loc_4DF
		dd offset dword_518+3Bh
		dd 3031Ah
		db 0
		dd offset off_15B3
		db 1Ah,	10h, 3
		db 2 dup(0)
		dd offset off_15DF
		dw 1C00h
		dd offset loc_300
		dd offset byte_618
		dd 74021Dh, 6409105h, 123h
		db 0, 1Eh
		dd offset loc_20E
		dd offset loc_258
		dd offset dword_518+9Bh
		dw 6C1Fh
		dd 1006E65h, 153F6h
		db 0
		dd offset off_15F2
		db 20h
		dd offset loc_219
		dd offset byte_618
		dd offset dword_518+82h
		dw 21Dh
		dd 75020074h
		db 1, 0, 1Ch
		dd offset loc_23B
		dd offset dword_62C+8
		db 1Dh
		dd 2047402h, 21D0077h, 75020874h, 21000000h
		dd offset loc_194
		dd offset dword_62C+2Eh
		db 22h
		dd offset loc_297
		db 1, 6Bh, 6
		db 2 dup(0), 21h
		dd offset loc_4F8
		dd offset off_686
		align 4
		dd 1B023h, 5E000h, 1EA2400h, 7F0000h, 62617425h, 635F656Ch
		dd 35323170h, 24010030h, 5FAh
		db 5, 3
		dd offset _table_cp1250
		dw 0D00Ah
		dd 23000005h, 15Ah, 60Ah, 5F270026h, 626F69h, 5FF9A02h
		dd 1010000h, 616D0128h,	636F6C6Ch, 1640600h, 25201h, 6340100h
		dd 7A290000h, 0
		dd 7473012Ah, 70636E72h, 34070079h, 14D01h, 65A0100h, 4D290000h
		dd 29000001h, 25Ah, 7A29h, 12B0000h, 7272655Fh,	8006F6Eh
		dd 254015Bh, 2A010000h,	72747301h, 707564h, 4D015C07h
		dd 1000001h, 686h, 25A29h, 12C0000h, 74735F5Fh,	5F6B6361h
		dd 5F6B6863h, 6C696166h, 1010100h
		db 0
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 0CB4h
dword_CB4	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000061Ao
		dd 8030016h, 0B3B0B3Ah,	1349h, 0B002403h, 30B3E0Bh, 4000008h
		dd 8030113h, 0B3A0B0Bh,	13010B3Bh, 0D050000h, 3A080300h
		dd 490B3B0Bh, 0A3813h, 0F0600h,	13490B0Bh, 4070000h, 3A0B0B01h
		dd 10B3B0Bh, 8000013h, 8030028h, 0D1Ch,	0B000F09h, 0A00000Bh
		dd 13490026h, 2E0B0000h, 3A080301h, 270B3B0Bh, 2013490Ch
		dd 13010Bh, 50C00h, 0B3A0803h, 13490B3Bh, 50D0000h, 3A0E0300h
		dd 490B3B0Bh, 0E000013h, 0E030034h, 0B3B0B3Ah, 1349h, 300340Fh
		dd 3B0B3A08h, 13490Bh, 10B1000h, 0B110000h, 130101h, 12E1200h
		dd 8030C3Fh, 0B3B0B3Ah,	13490C27h, 1120111h, 42970640h
		dd 13010Ch, 51300h, 0B3A0803h, 13490B3Bh, 602h,	3000514h
		dd 3B0B3A0Eh, 213490Bh,	15000006h, 0E030005h, 0B3B0B3Ah
		dd 0A021349h, 34160000h, 3A0E0300h, 490B3B0Bh, 60213h
		dd 11D1700h, 1521331h, 0B580655h, 13010559h, 5180000h
		dd 133100h, 10B1900h, 655h, 3100341Ah, 60213h, 10B1B00h
		dd 13010655h, 891C0000h, 11010182h, 133101h, 828A1D00h
		dd 0A020001h, 0A4291h, 10B1E00h, 1120111h, 1301h, 300341Fh
		dd 3B0B3A08h, 213490Bh,	20000006h, 1018289h, 13310111h
		dd 1301h, 1828921h, 31011100h, 22000013h, 18289h, 42950111h
		dd 13310Ch, 1012300h, 13011349h, 21240000h, 2F134900h
		dd 2500000Bh, 8030034h,	0B3B0B3Ah, 0A021349h, 21260000h
		dd 27000000h, 8030034h,	0B3B0B3Ah, 0C3F1349h, 0C3Ch, 3F012E28h
		dd 3A08030Ch, 27053B0Bh, 3C13490Ch, 13010Ch, 52900h, 1349h
		dd 3F012E2Ah, 3A08030Ch, 270B3B0Bh, 3C13490Ch, 13010Ch
		dd 2E2B00h, 8030C3Fh, 0B3B0B3Ah, 13490C27h, 0C3Ch, 3F002E2Ch
		dd 2708030Ch, 3C0C340Ch, 0Ch
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 0EE8h
dword_EE8	dd 0			; DATA XREF: .debug_info:000009E7o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 3, 0C740002h, 3, 4
		dd 10740002h, 4, 7, 14740002h, 7, 1B1h,	0E0740003h, 1B100h
		dd 1B200h, 74000200h, 1B214h, 1B300h, 74000200h, 1B310h
		dd 1B400h, 74000200h, 1B40Ch, 1B500h, 74000200h, 1B508h
		dd 1B800h, 74000200h, 1B804h, 28E00h, 74000300h, 28E00E0h
		dd 28F0000h, 20000h, 28F1474h, 2900000h, 20000h, 2901074h
		dd 2910000h, 20000h, 2910C74h, 2920000h, 20000h, 2920874h
		dd 2970000h, 20000h, 2970474h, 50C0000h, 30000h, 0E074h
		dd 0
		db 3 dup(0)
byte_FCB	db 0			; DATA XREF: .debug_info:000009FBo
		dd 43000000h, 2000000h,	9100h, 0E000002h, 2000002h, 55009100h
		dd 62000002h, 2000002h,	73009100h, 97000002h, 2000002h
		dd 9100h, 0
		db 3 dup(0)
byte_1003	db 0			; DATA XREF: .debug_info:00000A13o
		dd 89000000h, 2000001h,	0B6049100h, 9E000001h, 2000002h
		dd 3E049100h, 45000004h, 2000004h, 49100h, 0
		db 3 dup(0)
byte_102F	db 0			; DATA XREF: .debug_info:00000A2Bo
		dd 54000000h, 2000000h,	85089100h, 8F000001h, 2000001h
		dd 89100h, 6C000002h, 2000002h,	73089100h, 97000002h, 2000002h
		dd 9E089100h, 3E000002h, 2000004h, 45089100h, 0F3000004h
		dd 2000004h, 0F8089100h, 0C000004h, 2000005h, 89100h, 0
		db 3 dup(0)
byte_108B	db 0			; DATA XREF: .debug_info:00000A3Ao
		dd 43000000h, 2000000h,	430C9100h, 0DD000000h, 1000000h
		dd 1625500h, 18F0000h, 10000h, 1F855h, 20000h, 55000100h
		dd 200h, 20Eh, 0C910002h, 248h,	253h, 55550001h, 67000002h
		dd 2000002h, 670C9100h,	73000002h, 1000002h, 2735500h
		dd 2970000h, 20000h, 2970C91h, 32F0000h, 10000h, 43E55h
		dd 44500h, 55000100h, 4DFh, 4F3h, 550001h, 0
		db 3 dup(0)
off_111B	dd offset loc_21B	; DATA XREF: .debug_info:00000A57o
		dd offset loc_236+4
		db 1
		dd 5000h, 0
		db 2 dup(0)
off_112E	dd offset loc_62	; DATA XREF: .debug_info:00000A88o
		dd offset loc_81
		dw 2
		dd 0BC9F30h, 0E90000h, 20000h, 2979F30h, 29E0000h, 20000h
		dd 43E9F30h, 4450000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_1166	dd offset loc_BC	; DATA XREF: .debug_info:00000A91o
		dd offset unk_E9
		dw 2
		dd 0F59F30h, 1080000h, 10000h, 14250h, 14F00h, 57000100h
		dd 14Fh, 157h, 0D1500001h, 0E7000001h, 3000001h, 9F017000h
		dd 1E7h, 1F3h, 0F3550001h, 0F8000001h, 1000001h, 43E5000h
		dd 4450000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_11CA	dd offset loc_62	; DATA XREF: .debug_info:00000A9Ao
		dd offset loc_81
		dw 2
		dd 8D9F30h, 9A0000h, 10000h, 0A756h, 16200h, 56000100h
		dd 180h, 185h, 0B6560001h, 0F8000001h, 1000001h, 1FB5600h
		dd 2000000h, 10000h, 29756h, 29E00h, 30000200h,	43E9Fh
		dd 44500h, 56000100h, 2	dup(0)
off_122C	dd offset loc_B4	; DATA XREF: .debug_info:00000AA3o
		dd offset loc_E3
		dd 0E3500001h, 0E9000000h, 1000000h, 0E95100h, 15C0000h
		dd 20000h, 1B64091h, 1F80000h, 20000h, 43E4091h, 4400000h
		dd 10000h, 44050h, 44500h, 51000100h, 2	dup(0)
off_1278	dd offset loc_16C	; DATA XREF: .debug_info:00000AB5o
		dd offset unk_185
		dd 0F8510001h, 1, 1000002h, 5100h, 0
		db 2 dup(0)
off_1296	dd offset loc_117	; DATA XREF: .debug_info:00000AC8o
		dd offset loc_145
		dw 1
		dd 1B653h, 1EA00h, 53000100h, 2	dup(0)
off_12B4	dd offset loc_302	; DATA XREF: .debug_info:00000B0Do
		dd offset loc_31E
		dd 1E500001h, 4F000003h, 1000003h, 34F5100h, 43E0000h
		dd 10000h, 44555h, 46E00h, 55000100h, 46Eh, 477h, 77510001h
		dd 0DF000004h, 1000004h, 4EC5500h, 4F30000h, 10000h, 4F851h
		dd 50200h, 55000100h, 502h, 50Ch, 510001h, 0
		db 3 dup(0)
off_131F	dd offset loc_29E	; DATA XREF: .debug_info:00000B16o
		dd offset loc_2C8
		db 2
		dd 0A9F3000h, 4F000003h, 2000003h, 0DF9F3000h, 0F3000004h
		dd 2000004h, 9F3000h, 0
		db 3 dup(0)
off_134B	dd offset loc_30A	; DATA XREF: .debug_info:00000B1Fo
		dd offset unk_34F
		db 2
		dd 5A9F3000h, 83000003h, 1000003h, 3E25200h, 3F00000h
		dd 10000h, 3FA52h, 41700h, 52000100h, 421h, 43Eh, 4F520001h
		dd 6E000004h, 1000004h,	4C15200h, 4DF0000h, 10000h, 4EC52h
		dd 4F300h, 30000200h, 4F89Fh, 50600h, 52000100h, 506h
		dd 507h, 1720003h, 5079Fh, 50C00h, 52000100h, 2	dup(0)
off_13D0	dd offset loc_29E	; DATA XREF: .debug_info:00000B28o
		dd offset loc_2C8
		dd 9F300002h, 2C8h, 2CDh, 0D9570001h, 0E4000002h, 1000002h
		dd 2F35700h, 43E0000h, 20000h, 4454091h, 4DF0000h, 20000h
		dd 4DF4091h, 4EC0000h, 20000h, 4EC9F30h, 4F30000h, 20000h
		dd 4F84091h, 50C0000h, 20000h, 4091h, 0
		db 2 dup(0)
off_1436	dd offset loc_30A	; DATA XREF: .debug_info:00000B31o
		dd offset unk_34F
		dw 2
		dd 3609F30h, 3620000h, 20000h, 3629F30h, 3830000h, 10000h
		dd 3E257h, 3F000h, 30000200h, 4059Fh, 41700h, 33000200h
		dd 42C9Fh, 43E00h, 32000200h, 45A9Fh, 46C00h, 31000200h
		dd 46C9Fh, 46E00h, 57000100h, 491h, 492h, 7F770003h, 4929Fh
		dd 4DF00h, 57000100h, 4ECh, 4F3h, 9F300002h, 4F8h, 50Ch
		dd 570001h, 0
		db 3 dup(0)
off_14CB	dd offset loc_30A	; DATA XREF: .debug_info:00000B3Ao
		dd offset unk_34F
		db 2
		dd 629F3000h, 83000003h, 2000003h, 5489100h, 17000004h
		dd 1000004h, 42C5300h, 43E0000h, 10000h, 45A53h, 46C00h
		dd 53000100h, 46Ch, 46Eh, 48910002h, 486h, 491h, 91510001h
		dd 0DF000004h, 1000004h, 4EC5600h, 4F30000h, 20000h, 4F89F30h
		dd 50C0000h, 20000h, 4891h, 0
		db 2 dup(0)
off_1546	dd offset loc_30A	; DATA XREF: .debug_info:00000B43o
		dd offset unk_34F
		dw 2
		dd 3629F30h, 3830000h, 20000h, 4054C91h, 4170000h, 40000h
		dd 9F243C40h, 42Ch, 43Eh, 0A0004h, 45A9F08h, 46C0000h
		dd 30000h, 6C9F8008h, 6E000004h, 2000004h, 0EC4C9100h
		dd 0F3000004h, 2000004h, 0F89F3000h, 0C000004h,	2000005h
		dd 4C9100h, 0
		db 3 dup(0)
off_15B3	dd offset loc_498	; DATA XREF: .debug_info:00000B59o
		dd offset loc_4C1
		db 2
		dd 0C19F3000h, 0C6000004h, 2000004h, 0C69F3100h, 0DF000004h
		dd 2000004h, 9F3000h, 0
		db 3 dup(0)
off_15DF	dd offset loc_4A5	; DATA XREF: .debug_info:00000B62o
		dd offset loc_4AD
		db 1
		dd 5100h, 0
		db 2 dup(0)
off_15F2	dd offset loc_20E	; DATA XREF: .debug_info:00000B95o
		dd offset loc_248
		dw 1
		dd 25355h, 25500h, 55000100h, 2	dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 1610h
		dd 1Ch
		db 2, 0
		dd offset off_614
		dw 4
		dd 0
		dd offset _gg_encoding_convert
		dd offset byte_50C
		align 10h
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 1630h
off_1630	dd offset loc_62	; DATA XREF: .debug_info:00000A64o
		dd offset loc_7E
		dd offset loc_84
		dd offset loc_160
		dd offset loc_164
		dd offset loc_188
		dd offset loc_1B8
		dd offset loc_200
		dd offset loc_297
		dd offset loc_29E
		dd offset loc_43E
		dd offset loc_445
		dd 2 dup(0)
off_1668	dd offset loc_62	; DATA XREF: .debug_info:00000A7Fo
		dd offset loc_7E
		dd offset loc_84
		dd offset loc_142
		dd offset loc_145
		dd offset loc_160
		dd offset loc_164
		dd offset loc_188
		dd offset loc_1B8
		dd offset loc_1D7
		dd offset loc_1DA
		dd offset loc_1E7
		dd offset loc_1EA
		dd offset loc_200
		dd offset loc_297
		dd offset loc_29E
		dd offset loc_43E
		dd offset loc_445
		dd 2 dup(0)
off_16B8	dd offset loc_84	; DATA XREF: .debug_info:00000AA8o
		dd offset loc_8D
		dd offset loc_164
		dd offset loc_188
		dd offset loc_1F8
		dd offset loc_200
		dd 2 dup(0)
off_16D8	dd offset loc_EC	; DATA XREF: .debug_info:00000ABBo
		dd offset loc_F5
		dd offset loc_108
		dd offset loc_142
		dd offset loc_145
		dd offset loc_14F
		dd offset loc_1B8
		dd offset loc_1D7
		dd offset loc_1DA
		dd offset loc_1E7
		dd offset loc_1EA
		dd offset loc_1F8
		align 10h
off_1710	dd offset loc_7E	; DATA XREF: .debug_info:00000AE9o
		dd offset loc_84
		dd offset loc_29E
		dd offset loc_2BA
		dd offset loc_2C9
		dd offset loc_43E
		dd offset loc_445
		dd offset loc_472
		dd offset loc_477
		dd offset loc_4F3
		dd offset loc_4FA
		dd offset byte_50C
		dd 2 dup(0)
off_1748	dd offset loc_7E	; DATA XREF: .debug_info:00000B04o
		dd offset loc_84
		dd offset loc_29E
		dd offset loc_2BA
		dd offset loc_2C9
		dd offset loc_3FA
		dd offset loc_3FC
		dd offset loc_421
		dd offset loc_423
		dd offset loc_43E
		dd offset loc_445
		dd offset loc_44F
		dd offset loc_451
		dd offset loc_472
		dd offset loc_477
		dd offset loc_4F3
		dd offset loc_4FA
		dd offset byte_50C
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 1798h
off_1798	dd offset loc_23B+3	; DATA XREF: .debug_info:0000068Ao
		db    2
		align 2
		dd offset loc_12D+1
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6C01h
		db  69h	; i
		db 62h,	0, 63h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/../../../../include',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
		align 2
aEncoding_c	db 'encoding.c',0
		db 1, 2	dup(0)
aStdio_h	db 'stdio.h',0
		dd 73000002h, 65646474h, 682E66h, 73000003h, 6E696474h
		dd 682E74h, 6C000002h, 61676269h, 682E7564h, 100h, 6C647473h
		dd 682E6269h, 200h, 69727473h, 682E676Eh, 200h,	6E727265h
		dd 682E6Fh, 2
		db 0, 5, 2
		dd offset _gg_encoding_convert
		db 3
		dd 80101E5h, 8588AFD6h,	82130393h, 4020085h, 6740601h
		dd 827EBB03h, 8019E03h,	7EE50390h, 77038882h, 0C8100320h
		dd 385CACBh, 74080186h,	87F8303h, 90770374h, 0AE4D3108h
		dd 876AD68h, 0C872032Fh, 3C81803h, 34A0196h, 844A7EC0h
		dd 20075A0h, 0B7030104h, 0AD7AAC01h, 7EDE032Fh,	876AC08h
		dd 3590821h, 120861h, 3010402h,	382019Ch, 85CAD60Eh, 3847508h
		dd 35B5873h, 9B08AC78h,	74082003h, 3746003h, 3587ED6h
		dd 37400C4h, 740800DAh,	87FA603h, 1EAD4B2Eh, 85E6E7B1h
		dd 800CD03h, 7FB503ACh,	4B012A02h, 7A036768h, 5EF3082Eh
		dd 26085008h, 19035E08h, 694B2E08h, 4BD65203h, 0A181AE67h
		dd 81AE674Bh, 9E7FB603h, 7400CD03h, 81AE674Bh, 3BA2603h
		dd 0A8034A35h, 7583587Fh, 91BB78AFh, 3D7CFBBh, 0D03AC45h
		dd 0F903C8h, 74410374h,	0A0283h
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 19DCh
aDst_length	db 'dst_length',0       ; DATA XREF: .debug_info:000008BDo
					; .debug_info:00000973o ...
aResult		db 'result',0           ; DATA XREF: .debug_info:000008C8o
					; .debug_info:0000099Bo ...
aSrc_length	db 'src_length',0       ; DATA XREF: .debug_info:000008B2o
					; .debug_info:00000968o ...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 19FCh
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch
		dd offset loc_507-1F23h
		dd offset byte_50C
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 600E4305h, 0A01AA03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
		dd 0C541080Eh, 0B43040Eh, 0E0AD602h, 0EC34114h,	0EC64110h
		dd 0EC7410Ch, 0EC54108h, 0B4504h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _gg_encoding_convert+1Fr
					; _gg_encoding_convert+1A2r ...
; void *__cdecl	malloc(size_t)
		extrn _malloc:near	; CODE XREF: _gg_encoding_convert:loc_ADp
					; _gg_encoding_convert+214p ...
		extrn __errno:near	; CODE XREF: _gg_encoding_convert:loc_18Fp
; char *__cdecl	strncpy(char *,	const char *, size_t)
		extrn _strncpy:near	; CODE XREF: _gg_encoding_convert:loc_236p
; char *__cdecl	strdup(const char *)
		extrn _strdup:near	; CODE XREF: _gg_encoding_convert+292j
		extrn ___stack_chk_fail:near ; CODE XREF: _gg_encoding_convert:loc_4F3p


		end

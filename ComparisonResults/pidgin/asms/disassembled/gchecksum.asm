;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D3AA87B29F46410BD869A375CF4D3A2A
; Input	CRC32 :	1C1E0431

; File Name   :	d:\pidgin-o\gchecksum.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_md5_get_block_size proc near		; DATA XREF: .data:000005BCo
					; .debug_info:00000790o ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	al, 40h	; '@'
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_20
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_20:					; CODE XREF: _md5_get_block_size+1Aj
		call	___stack_chk_fail
_md5_get_block_size endp

; ---------------------------------------------------------------------------
unk_25		db  8Dh	; ç		; DATA XREF: .debug_info:00000F13o
					; .debug_info:00000F2Fo ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha1_get_block_size proc near		; DATA XREF: .data:0000061Co
					; .debug_info:00000F54o ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_2B:					; DATA XREF: .debug_loc:00001EDCo
					; .eh_frame:00002DF4o ...
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	al, 40h	; '@'
		mov	edx, [esp+1Ch+var_10]

loc_3C:					; DATA XREF: .eh_frame:00002C58o
					; .eh_frame:00002E2Co ...
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_48

loc_44:					; DATA XREF: .eh_frame:00002D14o
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_48:					; CODE XREF: _sha1_get_block_size+1Aj
					; DATA XREF: .eh_frame:00002CBCo ...
		call	___stack_chk_fail
_sha1_get_block_size endp

; ---------------------------------------------------------------------------
unk_4D		db  8Dh	; ç		; DATA XREF: .debug_info:00000F58o
					; .debug_info:00000F74o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha256_get_block_size proc near	; DATA XREF: .data:0000067Co
					; .debug_info:00000F9Bo ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_53:					; DATA XREF: .debug_loc:00001F14o
					; .eh_frame:00002DBCo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	al, 40h	; '@'
		mov	edx, [esp+1Ch+var_10]

loc_64:					; DATA XREF: .eh_frame:00002D9Co
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_70
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_70:					; CODE XREF: _sha256_get_block_size+1Aj
					; DATA XREF: .debug_info:00000899o ...
		call	___stack_chk_fail
_sha256_get_block_size endp

; ---------------------------------------------------------------------------
byte_75		db 8Dh,	76h		; DATA XREF: .debug_info:00000F9Fo
					; .debug_info:00000FBBo
		db    0			; DATA XREF: .debug_info:00000F50o

; =============== S U B	R O U T	I N E =======================================


_sha1_init	proc near		; DATA XREF: .data:000005E4o
					; .debug_info:00001015o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_79:					; DATA XREF: .debug_loc:00001F4Co
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard

loc_85:					; DATA XREF: .debug_info:000007ADo
					; .debug_info:00000854o
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_8B:					; DATA XREF: .debug_info:00001047o
					; .debug_loc:off_1F98o	...
		mov	[esp+2Ch+var_2C], 1
		call	_g_checksum_new

loc_97:					; DATA XREF: .debug_info:0000106Fo
					; .debug_loc:off_1FC2o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_B4
		mov	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+arg_0], ebx

loc_AB:					; DATA XREF: .debug_ranges:00002850o
					; .debug_ranges:00002868o
		add	esp, 28h
		pop	ebx

loc_AF:					; DATA XREF: .debug_loc:00001F9Co
					; .debug_ranges:00002854o ...
		jmp	_purple_cipher_context_set_data
; ---------------------------------------------------------------------------

loc_B4:					; CODE XREF: _sha1_init+29j
					; DATA XREF: .debug_info:00001083o
		call	___stack_chk_fail
_sha1_init	endp

; ---------------------------------------------------------------------------
unk_B9		db  8Dh	; ç		; DATA XREF: .debug_info:00001019o
					; .debug_info:0000108Do ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_purple_g_checksum_digest proc near	; CODE XREF: _sha256_digest+3Fj
					; _sha1_digest+3Fj ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebp

loc_BD:					; DATA XREF: .debug_loc:00001FE4o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, eax

loc_C5:					; DATA XREF: .eh_frame:00002D40o
		mov	[esp+4Ch+var_30], ecx
		mov	edi, [esp+4Ch+arg_0]

loc_CD:					; DATA XREF: .eh_frame:00002C7Co
		mov	esi, [esp+4Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax

loc_DC:					; DATA XREF: .debug_loc:0000207Eo
		mov	[esp+4Ch+var_4C], edx

loc_DF:					; DATA XREF: .debug_loc:000020B5o
					; .debug_loc:000020BCo	...
		call	_g_checksum_type_get_length

loc_E4:					; DATA XREF: .debug_info:00001196o
		mov	ebp, eax

loc_E6:					; DATA XREF: .debug_loc:off_20F1o
		mov	[esp+4Ch+var_4C], ebx

loc_E9:					; DATA XREF: .debug_loc:000020F5o
					; .debug_loc:000020FCo
		call	_purple_cipher_context_get_data

loc_EE:					; DATA XREF: .debug_info:000010F8o
					; .debug_info:000011ACo
		cmp	ebp, [esp+4Ch+var_30]
		ja	short loc_144
		mov	edx, eax

loc_F6:					; DATA XREF: .debug_info:000010FCo
					; .debug_info:0000110Fo ...
		test	eax, eax
		jz	short loc_164

loc_FA:					; DATA XREF: .debug_info:00001113o
					; .debug_loc:off_2146o
		lea	eax, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], edi
		mov	[esp+4Ch+var_4C], edx
		call	_g_checksum_get_digest

loc_10E:				; DATA XREF: .debug_info:000011C1o
					; .debug_info:00001A75o
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebx
		call	_purple_cipher_context_reset

loc_11E:				; DATA XREF: .debug_info:000011DDo
		test	esi, esi
		jz	short loc_128
		mov	eax, [esp+4Ch+var_30]
		mov	[esi], eax

loc_128:				; CODE XREF: _purple_g_checksum_digest+64j
					; DATA XREF: .debug_info:00000EE9o
		mov	eax, 1

loc_12D:				; CODE XREF: _purple_g_checksum_digest+A6j
					; _purple_g_checksum_digest+C6j
					; DATA XREF: ...
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard

loc_137:				; DATA XREF: .debug_info:0000088Do
					; .debug_info:00000EE0o ...
		jnz	short loc_184
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp

locret_140:				; DATA XREF: .debug_loc:00002100o
		retn
; ---------------------------------------------------------------------------
		db 8Dh,	76h
		db    0			; DATA XREF: .debug_line:00002912o
; ---------------------------------------------------------------------------

loc_144:				; CODE XREF: _purple_g_checksum_digest+36j
					; DATA XREF: .debug_info:000008E5o
		mov	[esp+4Ch+var_44], offset aLenRequired_le ; "len	>= required_length"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"

loc_154:				; DATA XREF: .debug_info:000008F0o
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_160:				; DATA XREF: .debug_info:000011F8o
		xor	eax, eax
		jmp	short loc_12D
; ---------------------------------------------------------------------------

loc_164:				; CODE XREF: _purple_g_checksum_digest+3Cj
					; DATA XREF: .debug_info:0000112Ao ...
		mov	[esp+4Ch+var_44], offset aChecksumNull ; "checksum != NULL"

loc_16C:				; DATA XREF: .debug_info:000012C4o
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_180:				; DATA XREF: .debug_info:00001170o
		xor	eax, eax
		jmp	short loc_12D
; ---------------------------------------------------------------------------

loc_184:				; CODE XREF: _purple_g_checksum_digest:loc_137j
					; DATA XREF: .debug_info:0000112Eo ...
		call	___stack_chk_fail
_purple_g_checksum_digest endp

; ---------------------------------------------------------------------------
unk_189		db  8Dh	; ç		; DATA XREF: .debug_info:000010A1o
					; .debug_info:00001220o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha256_digest	proc near		; DATA XREF: .data:00000658o
					; .debug_info:0000123Fo ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi

loc_18D:				; DATA XREF: .debug_loc:0000216Ao
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_C]
		mov	esi, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], esi
		xor	esi, esi

loc_1AD:				; DATA XREF: .debug_info:00001754o
					; .debug_info:00001848o ...
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_1D0
		mov	[esp+1Ch+arg_4], ebx
		mov	[esp+1Ch+arg_0], edx
		mov	edx, 2
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	_purple_g_checksum_digest
; ---------------------------------------------------------------------------

loc_1D0:				; CODE XREF: _sha256_digest+2Bj
					; DATA XREF: .debug_info:00001289o
		call	___stack_chk_fail
_sha256_digest	endp

; ---------------------------------------------------------------------------
unk_1D5		db  8Dh	; ç		; DATA XREF: .debug_info:00001243o
					; .debug_info:000012ABo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha1_digest	proc near		; DATA XREF: .data:000005F8o
					; .debug_info:000012C8o ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi

loc_1D9:				; DATA XREF: .debug_loc:000021D2o
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]
		mov	edx, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_C]
		mov	esi, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], esi
		xor	esi, esi
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_21C
		mov	[esp+1Ch+arg_4], ebx
		mov	[esp+1Ch+arg_0], edx
		mov	edx, 1
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	_purple_g_checksum_digest
; ---------------------------------------------------------------------------

loc_21C:				; CODE XREF: _sha1_digest+2Bj
					; DATA XREF: .debug_info:00001312o ...
		call	___stack_chk_fail
_sha1_digest	endp

; ---------------------------------------------------------------------------
unk_221		db  8Dh	; ç		; DATA XREF: .debug_info:000012CCo
					; .debug_info:00001334o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_md5_digest	proc near		; DATA XREF: .data:00000598o
					; .debug_info:00001350o ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	esi

loc_225:				; DATA XREF: .debug_loc:0000223Ao
		push	ebx
		sub	esp, 14h
		mov	eax, [esp+1Ch+arg_0]
		mov	ecx, [esp+1Ch+arg_4]

loc_231:				; DATA XREF: .debug_info:0000095Co
		mov	edx, [esp+1Ch+arg_8]
		mov	ebx, [esp+1Ch+arg_C]
		mov	esi, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], esi
		xor	esi, esi
		mov	esi, [esp+1Ch+var_10]
		xor	esi, dword ptr ds:___stack_chk_guard
		jnz	short loc_265
		mov	[esp+1Ch+arg_4], ebx

loc_255:				; DATA XREF: .debug_info:000018E5o
					; .debug_info:00001988o
		mov	[esp+1Ch+arg_0], edx
		xor	edx, edx
		add	esp, 14h
		pop	ebx
		pop	esi
		jmp	_purple_g_checksum_digest
; ---------------------------------------------------------------------------

loc_265:				; CODE XREF: _md5_digest+2Bj
					; DATA XREF: .debug_info:0000139Ao
		call	___stack_chk_fail
_md5_digest	endp

; ---------------------------------------------------------------------------
unk_26A		db  66h	; f		; DATA XREF: .debug_info:00001354o
					; .debug_info:off_13BCo
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_purple_g_checksum_append proc near	; DATA XREF: .data:00000594o
					; .data:000005F4o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi

loc_26D:				; DATA XREF: .debug_info:00000995o
					; .debug_loc:000022A2o
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_4]
		mov	ebx, [esp+2Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_291:				; DATA XREF: .debug_info:00001464o
		mov	edi, eax

loc_293:				; DATA XREF: .debug_info:0000140Ao
					; .debug_loc:off_241Ao
		test	eax, eax
		jnz	short loc_2BC
		jmp	short loc_2FF
; ---------------------------------------------------------------------------
unk_299		db  8Dh	; ç		; DATA XREF: .debug_loc:0000239Ao
					; .debug_loc:000023DCo	...
		db  76h	; v
		db    0
; ---------------------------------------------------------------------------

loc_29C:				; CODE XREF: _purple_g_checksum_append+56j
					; DATA XREF: .debug_info:0000140Eo
		mov	[esp+2Ch+var_24], 7FFFFFFFh
		mov	[esp+2Ch+var_28], esi
		mov	[esp+2Ch+var_2C], edi
		call	_g_checksum_update

loc_2B0:				; DATA XREF: .debug_info:0000147Ao
		sub	ebx, 7FFFFFFFh
		add	esi, 7FFFFFFFh

loc_2BC:				; CODE XREF: _purple_g_checksum_append+29j
		cmp	ebx, 7FFFFFFEh
		ja	short loc_29C
		test	ebx, ebx
		jnz	short loc_2DC
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_32E
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_2DC:				; CODE XREF: _purple_g_checksum_append+5Aj
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_32E
		mov	[esp+2Ch+arg_8], ebx
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], edi
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		jmp	_g_checksum_update
; ---------------------------------------------------------------------------

loc_2FF:				; CODE XREF: _purple_g_checksum_append+2Bj
					; DATA XREF: .debug_info:00001425o ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_32E
		mov	[esp+2Ch+arg_8], offset	aChecksumNull ;	"checksum != NULL"
		mov	[esp+2Ch+arg_4], offset	___PRETTY_FUNCTION___6919 ; "purple_g_checksum_append"
		mov	[esp+2Ch+arg_0], 0

loc_323:				; DATA XREF: .debug_ranges:00002880o
					; .debug_ranges:00002898o
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi

loc_329:				; DATA XREF: .debug_ranges:00002884o
					; .debug_ranges:0000289Co
		jmp	_g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_32E:				; CODE XREF: _purple_g_checksum_append+66j
					; _purple_g_checksum_append+7Aj ...
		call	___stack_chk_fail
_purple_g_checksum_append endp

; ---------------------------------------------------------------------------
unk_333		db  90h	; ê		; DATA XREF: .debug_info:000013CEo
					; .debug_info:000014AAo

; =============== S U B	R O U T	I N E =======================================


_purple_g_checksum_uninit proc near	; DATA XREF: .data:0000058Co
					; .data:000005ECo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch

loc_337:				; DATA XREF: .debug_loc:00002488o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_34E:				; DATA XREF: .debug_info:000014E6o
					; .debug_info:00001554o ...
		test	eax, eax
		jz	short loc_36C

loc_352:				; DATA XREF: .debug_info:000014EAo
					; .debug_loc:off_24F2o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_398
		mov	[esp+2Ch+arg_0], eax
		add	esp, 2Ch

loc_365:				; DATA XREF: .debug_loc:000024D8o
		jmp	_g_checksum_free
; ---------------------------------------------------------------------------

loc_36A:				; DATA XREF: .debug_info:0000156Ao
					; .debug_loc:000024F6o
		xchg	ax, ax

loc_36C:				; CODE XREF: _purple_g_checksum_uninit+1Cj
					; DATA XREF: .debug_info:00001501o ...
		mov	[esp+2Ch+var_24], offset aChecksumNull ; "checksum != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___6910 ; "purple_g_checksum_uninit"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_388:				; DATA XREF: .debug_info:00001505o
					; .debug_info:00001514o ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_398
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_398:				; CODE XREF: _purple_g_checksum_uninit+28j
					; _purple_g_checksum_uninit+5Ej
		call	___stack_chk_fail
_purple_g_checksum_uninit endp

; ---------------------------------------------------------------------------
unk_39D		db  8Dh	; ç		; DATA XREF: .debug_info:000014BCo
					; .debug_info:00001574o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_purple_g_checksum_reset_isra_3	proc near ; CODE XREF: _sha256_reset+22j
					; _sha1_reset+22j ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h

		sub	esp, 2Ch

loc_3A3:				; DATA XREF: .debug_loc:00002516o
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], edx
		xor	edx, edx
		mov	[esp+2Ch+var_2C], eax

loc_3B2:				; DATA XREF: .debug_loc:0000254Eo
		call	_purple_cipher_context_get_data

loc_3B7:				; DATA XREF: .debug_info:000015BDo
					; .debug_info:00001630o ...
		test	eax, eax
		jz	short loc_3D4

loc_3BB:				; DATA XREF: .debug_info:000015C1o
					; .debug_loc:off_2589o
		mov	[esp+2Ch+var_2C], eax

loc_3BE:				; DATA XREF: .debug_loc:0000256Fo
		call	_g_checksum_reset

loc_3C3:				; CODE XREF: _purple_g_checksum_reset_isra_3:loc_3F0j
					; DATA XREF: .debug_info:00001646o ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_3F2
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------
		align 4

loc_3D4:				; CODE XREF: _purple_g_checksum_reset_isra_3+19j
					; DATA XREF: .debug_info:000015D8o ...
		mov	[esp+2Ch+var_24], offset aChecksumNull ; "checksum != NULL"
		mov	[esp+2Ch+var_28], offset ___PRETTY_FUNCTION___6903 ; "purple_g_checksum_reset"
		mov	[esp+2Ch+var_2C], 0
		call	_g_return_if_fail_warning

loc_3F0:				; DATA XREF: .debug_info:0000160Ao
		jmp	short loc_3C3
; ---------------------------------------------------------------------------

loc_3F2:				; CODE XREF: _purple_g_checksum_reset_isra_3+2Dj
					; DATA XREF: .debug_info:000015DCo ...
		call	___stack_chk_fail
_purple_g_checksum_reset_isra_3	endp

; ---------------------------------------------------------------------------
unk_3F7		db  90h	; ê		; DATA XREF: .debug_info:00001586o
					; .debug_info:0000164Fo

; =============== S U B	R O U T	I N E =======================================


_sha256_reset	proc near		; DATA XREF: .data:00000648o
					; .debug_info:00001669o ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_3FB:				; DATA XREF: .debug_loc:000025ADo
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_41C
		add	esp, 1Ch
		jmp	short _purple_g_checksum_reset_isra_3
; ---------------------------------------------------------------------------

loc_41C:				; CODE XREF: _sha256_reset+1Dj
					; DATA XREF: .debug_info:00001697o
		call	___stack_chk_fail
_sha256_reset	endp

; ---------------------------------------------------------------------------
unk_421		db  8Dh	; ç		; DATA XREF: .debug_info:0000166Do
					; .debug_info:000016B4o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha1_reset	proc near		; DATA XREF: .data:000005E8o
					; .debug_info:000016CCo ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_427:				; DATA XREF: .debug_loc:000025E5o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_44B
		add	esp, 1Ch
		jmp	_purple_g_checksum_reset_isra_3
; ---------------------------------------------------------------------------

loc_44B:				; CODE XREF: _sha1_reset+1Dj
					; DATA XREF: .debug_info:000016FAo
		call	___stack_chk_fail
_sha1_reset	endp


; =============== S U B	R O U T	I N E =======================================


_md5_reset	proc near		; DATA XREF: .data:00000588o
					; .debug_info:000016D0o ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_453:				; DATA XREF: .debug_loc:0000261Do
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_477
		add	esp, 1Ch
		jmp	_purple_g_checksum_reset_isra_3
; ---------------------------------------------------------------------------

loc_477:				; CODE XREF: _md5_reset+1Dj
					; DATA XREF: .debug_info:0000175Co
		call	___stack_chk_fail
_md5_reset	endp


; =============== S U B	R O U T	I N E =======================================


_md5_init	proc near		; DATA XREF: .data:00000584o
					; .debug_info:00001732o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_47D:				; DATA XREF: .debug_loc:00002655o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_48F:				; DATA XREF: .debug_info:000017C1o
					; .debug_loc:off_26A1o	...
		mov	[esp+2Ch+var_2C], 0
		call	_g_checksum_new

loc_49B:				; DATA XREF: .debug_info:000017E9o
					; .debug_loc:off_26CBo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4B8
		mov	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+arg_0], ebx

loc_4AF:				; DATA XREF: .debug_ranges:000028B0o
					; .debug_ranges:000028C8o
		add	esp, 28h

loc_4B2:				; DATA XREF: .debug_info:00000E64o
					; .debug_info:00000EA8o ...
		pop	ebx

loc_4B3:				; DATA XREF: .debug_loc:000026A5o
					; .debug_loc:000026ACo	...
		jmp	_purple_cipher_context_set_data
; ---------------------------------------------------------------------------

loc_4B8:				; CODE XREF: _md5_init+29j
					; DATA XREF: .debug_info:000017FDo ...
		call	___stack_chk_fail
_md5_init	endp

; ---------------------------------------------------------------------------
unk_4BD		db  8Dh	; ç		; DATA XREF: .debug_info:00001793o
					; .debug_info:00001807o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_sha256_init	proc near		; DATA XREF: .data:00000644o
					; .debug_info:00001822o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	ebx

loc_4C1:				; DATA XREF: .debug_loc:000026EDo
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_4D3:				; DATA XREF: .debug_info:00001854o
					; .debug_loc:off_2739o	...
		mov	[esp+2Ch+var_2C], 2
		call	_g_checksum_new

loc_4DF:				; DATA XREF: .debug_info:0000187Co
					; .debug_loc:off_2763o
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4FC
		mov	[esp+2Ch+arg_4], eax
		mov	[esp+2Ch+arg_0], ebx

loc_4F3:				; DATA XREF: .debug_ranges:000028E0o
					; .debug_ranges:000028F8o
		add	esp, 28h
		pop	ebx

loc_4F7:				; DATA XREF: .debug_loc:0000273Do
					; .debug_loc:00002744o	...
		jmp	_purple_cipher_context_set_data
; ---------------------------------------------------------------------------

loc_4FC:				; CODE XREF: _sha256_init+29j
					; DATA XREF: .debug_info:00001890o ...
		call	___stack_chk_fail
_sha256_init	endp

; ---------------------------------------------------------------------------
unk_501		db  8Dh	; ç		; DATA XREF: .debug_info:00001826o
					; .debug_info:0000189Ao ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _purple_md5_cipher_get_ops
_purple_md5_cipher_get_ops proc	near	; DATA XREF: .debug_info:000018C8o
					; .debug_loc:off_2781o

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_507:				; DATA XREF: .debug_loc:00002785o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _MD5Ops

loc_517:				; DATA XREF: .debug_info:000012FCo
					; .debug_info:00001384o
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_527
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_527:				; CODE XREF: _purple_md5_cipher_get_ops+1Dj
		call	___stack_chk_fail
_purple_md5_cipher_get_ops endp


; =============== S U B	R O U T	I N E =======================================


		public _purple_sha1_cipher_get_ops
_purple_sha1_cipher_get_ops proc near	; DATA XREF: .debug_info:000018CCo
					; .debug_info:000018DAo ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_52F:				; DATA XREF: .debug_loc:000027BDo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _SHA1Ops
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_54F
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_54F:				; CODE XREF: _purple_sha1_cipher_get_ops+1Dj
		call	___stack_chk_fail
_purple_sha1_cipher_get_ops endp


; =============== S U B	R O U T	I N E =======================================


		public _purple_sha256_cipher_get_ops
_purple_sha256_cipher_get_ops proc near	; DATA XREF: .debug_info:00001911o
					; .debug_info:0000191Fo ...

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_557:				; DATA XREF: .debug_loc:000027F5o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _SHA256Ops
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_577
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_577:				; CODE XREF: _purple_sha256_cipher_get_ops+1Dj
					; DATA XREF: .debug_info:00000794o ...
		call	___stack_chk_fail
_purple_sha256_cipher_get_ops endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 57Ch
_MD5Ops		dd 2 dup(0)		; DATA XREF: _purple_md5_cipher_get_ops+Eo
					; .debug_info:00001979o ...
		dd offset _md5_init
		dd offset _md5_reset
		dd offset _purple_g_checksum_uninit
		dd 0
		dd offset _purple_g_checksum_append
		dd offset _md5_digest
		dd 8 dup(0)
		dd offset _md5_get_block_size
		dd 7 dup(0)
_SHA1Ops	dd 2 dup(0)		; DATA XREF: _purple_sha1_cipher_get_ops+Eo
					; .debug_info:0000198Eo
		dd offset _sha1_init
		dd offset _sha1_reset
		dd offset _purple_g_checksum_uninit
		dd 0
		dd offset _purple_g_checksum_append
		dd offset _sha1_digest
		dd 8 dup(0)
		dd offset _sha1_get_block_size
dword_620	dd 7 dup(0)		; DATA XREF: .debug_info:000010B8o
_SHA256Ops	dd 2 dup(0)		; DATA XREF: _purple_sha256_cipher_get_ops+Eo
					; .debug_info:000019A5o
		dd offset _sha256_init
		dd offset _sha256_reset
		dd offset _purple_g_checksum_uninit
		dd 0
		dd offset _purple_g_checksum_append
		dd offset _sha256_digest
		dd 8 dup(0)
		dd offset _sha256_get_block_size
		dd 7 dup(0)
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
byte_69C	label byte		; DATA XREF: .debug_info:0000111Co
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 6A0h
aLenRequired_le	db 'len >= required_length',0
					; DATA XREF: _purple_g_checksum_digest:loc_144o
					; .debug_info:0000121Ao ...
aChecksumNull	db 'checksum != NULL',0 ; DATA XREF: _purple_g_checksum_digest:loc_164o
					; _purple_g_checksum_append+9Fo ...
___PRETTY_FUNCTION___6934 db 'purple_g_checksum_digest',0
					; DATA XREF: _purple_g_checksum_digest+90o
					; _purple_g_checksum_digest:loc_16Co ...
___PRETTY_FUNCTION___6919 db 'purple_g_checksum_append',0
					; DATA XREF: _purple_g_checksum_append+A7o
					; .debug_info:00001405o ...
___PRETTY_FUNCTION___6910 db 'purple_g_checksum_uninit',0
					; DATA XREF: _purple_g_checksum_uninit+40o
					; .debug_info:000014E1o ...
___PRETTY_FUNCTION___6903 db 'purple_g_checksum_reset',0
					; DATA XREF: _purple_g_checksum_reset_isra_3+3Co
					; .debug_info:000015B8o ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 72Ch
off_72C		dd offset off_1453+1	; DATA XREF: .debug_aranges:00002832o
		db 2, 0
		dd offset dword_1B84
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		db    1
aCiphersGchecks	db 'ciphers/gchecksum.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple',0
					; DATA XREF: .debug_info:00000E78o
					; .debug_info:000015D4o
		dd offset _md5_get_block_size
		dd offset loc_577+5
		dd offset off_290C
		db    2
		db 4, 5, 69h
		db  6Eh	; n
		db 74h,	0, 3
aSize_t		db 'size_t',0
		db 2
		db 0D5h	; ’
		dd offset loc_85
byte_7B1	db 2, 4, 7		; DATA XREF: .debug_info:00000EF0o
aUnsignedInt	db 'unsigned int',0
byte_7C1	db 2 dup(2), 7		; DATA XREF: .debug_info:00000EC8o
					; .debug_info:00000EE4o
aShortUnsignedI	db 'short unsigned int',0
		db 2
dword_7D8	dd 69730601h, 64656E67h, 61686320h, 67030072h, 746E6975h
		dd 20030038h, 0C8h, 75080102h, 6769736Eh, 2064656Eh, 72616863h
		dd 5020200h, 726F6873h,	6E692074h, 8020074h, 6E6F6C05h
		dd 6F6C2067h, 6920676Eh, 200746Eh
aLongLongUnsign	db 8,7,'long long unsigned int',0
		db 3, 67h, 73h
aSize		db 'size',0
		db 3, 59h, 70h
		db    0
		db 2 dup(0), 3
aGsize		db 'gsize',0
		dw 5A03h
		dd offset loc_85
		db    2
		db 4, 7, 73h
aIzetype	db 'izetype',0
		db    2
		db 1, 6, 63h
		db  68h	; h
		db 61h,	72h, 0
		db    2
		db 8, 4, 64h
aOuble		db 'ouble',0
		dw 404h
		db    2
		db 4, 5, 6Ch
aOngInt		db 'ong int',0
		db    3
aGchar		db 'gchar',0
		db 4
		db  2Dh	; -
		dd offset loc_137+1
		db 3, 67h, 69h
		db  6Eh	; n
		db 74h,	0, 4
unk_898		db  30h	; 0		; DATA XREF: .debug_info:00000FA8o
		dd offset loc_70
		db 3, 67h, 62h
aOolean		db 'oolean',0
		db 4
		db  31h	; 1
		dd offset loc_164+1
		db 3, 67h, 75h
aChar		db 'char',0
		db 4, 33h, 0C8h
unk_8B8		db    0			; DATA XREF: .debug_info:00001058o
		db 2 dup(0), 2
		db    4
aLongUnsignedIn	db 7,'long unsigned int',0 ; DATA XREF: .debug_info:000017CCo
		db    2
		db 2 dup(4), 66h
aLoat		db 'loat',0
		db 3, 67h, 70h
aOinter		db 'ointer',0
		db 4
		db  4Ch	; L
		dd offset loc_144+6
		db 5, 4, 0C3h
		db    1
		db 2 dup(0), 6
		dd offset loc_154+4
		db    5
		db 4, 0BAh, 0
		db    0
		align 2
		dw 407h
		db    5
		db 2Eh,	0Eh, 2
		db    0
		align 2
aG_checksum_md5	db 8,'G_CHECKSUM_MD5',0
		dw 800h
aG_checksum_sha	db 'G_CHECKSUM_SHA1',0
		db    1
aG_checksum_s_0	db 8,'G_CHECKSUM_SHA256',0
		db    2
		align 2
		dw 4703h
aChecksumtype	db 'ChecksumType',0
		db 5, 32h, 0CEh
		db    1
		db 2 dup(0), 3
aGchecksum	db 'GChecksum',0        ; DATA XREF: .debug_info:00001077o
		dw 3D05h
		dd offset loc_231+3
a_gchecksum	db 9,'_GChecksum',0
		db    1
		db 5, 4, 1Fh
		db    1
		db 2 dup(0), 2
		db  0Ch
		db 4, 6Ch, 6Fh
aNgDouble	db 'ng double',0
		dw 5003h
aUrplecipherops	db 'urpleCipherOps',0
		db 6
		db  26h	; &
		dd offset loc_26D
a_purpleciphero	db 0Ah
		db '_PurpleCipherOps',0
		db 48h
dword_9AC	dd 3EF4D06h, 730B0000h,	6F5F7465h, 6F697470h, 4F06006Eh
		dd 4B8h, 0B002302h, 5F746567h, 6974706Fh, 6006E6Fh, 4D352h
		dd 4230200h, 696E690Bh,	55060074h, 4EAh, 0B082302h, 65736572h
		dd 58060074h, 4EAh, 0B0C2302h, 6E696E75h, 6007469h, 4FC5Bh
		dd 10230200h, 7465730Bh, 76695Fh, 51E5E06h, 23020000h
		dd 70610B14h, 646E6570h, 45610600h, 2000005h
		db 23h,	18h, 0Ch
		dd offset aDigest	; "digest"
		db 6
dword_A34	dd 57064h, 1C230200h, 636E650Bh, 74707972h, 9A670600h
		dd 2000005h, 640B2023h,	79726365h, 6007470h, 59A6Ah, 24230200h
		dd 7465730Bh, 6C61735Fh, 6D060074h, 5B1h, 0B282302h, 5F746567h
		dd 746C6173h, 7A69735Fh, 70060065h, 5C7h, 0B2C2302h, 5F746573h
		dd 79656Bh, 5DE7306h, 23020000h, 65670B30h, 656B5F74h
		dd 69735F79h, 600657Ah,	5C776h,	34230200h, 7465730Bh, 7461625Fh
		dd 6D5F6863h, 65646Fh, 5F57906h, 23020000h, 65670B38h
		dd 61625F74h, 5F686374h, 65646F6Dh, 0B7C0600h, 2000006h
		dd 670B3C23h, 625F7465h, 6B636F6Ch, 7A69735Fh, 7F060065h
		dd 5C7h, 0B402302h, 5F746573h, 5F79656Bh, 68746977h, 6E656C5Fh
		dd 45820600h, 2000005h,	3004423h, 70727550h, 6943656Ch
		dd 72656870h, 746E6F43h, 747865h, 40A2706h, 5F090000h
		dd 70727550h, 6943656Ch, 72656870h, 746E6F43h, 747865h
		dd 505F0D01h, 6C707275h, 70694365h, 42726568h, 68637461h
		dd 65646F4Dh, 2C060400h, 47Fh, 52555008h, 5F454C50h, 48504943h
		dd 425F5245h, 48435441h, 444F4D5Fh, 43455F45h, 8000042h
		dd 50525550h, 435F454Ch, 45485049h, 41425F52h, 5F484354h
		dd 45444F4Dh, 4342435Fh, 3000100h, 70727550h, 6943656Ch
		dd 72656870h, 63746142h, 646F4D68h, 2F060065h, 421h, 4B2010Eh
		dd 0B20F0000h, 0F000004h, 1BDh,	14A0Fh,	4050000h, 3EFh
		dd 49C0405h, 1100000h, 14Ah, 4D3h, 4B20Fh, 1BD0F00h, 5000000h
		dd 4BE04h, 0EA010E00h, 0F000004h, 4B2h,	14A0Fh,	4050000h
		dd 4D9h, 4FC010Eh, 0B20F0000h, 4, 4F00405h, 10E0000h, 518h
		dd 4B20Fh, 5180F00h, 770F0000h,	0
dword_C44	dd 1810405h, 4050000h, 502h, 53A010Eh, 0B20F0000h, 0F000004h
		dd 53Ah, 770Fh,	4050000h, 540h,	18106h,	24040500h, 10000005h
		dd 17101h, 56A00h, 4B20F00h, 770F0000h,	0F000000h, 518h
		dd 56A0Fh, 4050000h, 77h, 54B0405h, 1100000h, 70h, 59Ah
		dd 4B20Fh, 53A0F00h, 770F0000h,	0F000000h, 518h, 56A0Fh
		dd 4050000h, 576h, 5B1010Eh, 0B20F0000h, 0F000004h, 518h
		dd 0A0040500h, 10000005h, 7701h, 5C700h, 4B20F00h, 5000000h
		dd 5B704h, 0DE010E00h, 0F000005h, 4B2h,	53A0Fh,	4050000h
		dd 5CDh, 5F5010Eh, 0B20F0000h, 0F000004h, 47Fh,	0E4040500h
		dd 10000005h, 47F01h, 60B00h, 4B20F00h,	5000000h, 5FB04h
		db 0, 11h
		dd offset aPurple_g_check ; "purple_g_checksum_digest"
		dw 3E01h
		dd 17101h, 6A90100h
byte_D4C	db 2 dup(0), 12h	; DATA XREF: .debug_info:0000146Co
		dd offset aContext	; "context"
		db 1
		dd 4B23Eh, 79741300h, 1006570h,	20E3Eh,	656C1300h, 3F01006Eh
		dd 11Fh
		db 12h
off_D71		dd offset aDigest	; DATA XREF: .debug_info:00001482o
					; "digest"
		db 1, 3Fh, 18h
		dd 12000005h
		dd offset aOut_len	; "out_len"
		dd 2413F01h
		db 2 dup(0), 14h
		dd offset aChecksum	; "checksum"
		db 1
		dd 6A941h, 65721500h, 72697571h, 6C5F6465h, 74676E65h
		dd 42010068h, 6AFh
		db 16h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aChecksumNull+0Dh ; "ULL"
		db 1
		dd offset aPurple_g_check ; "purple_g_checksum_digest"
		dw 9B17h
		dd 14000006h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dd 704601h, 18000000h
		db 14h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 47h, 70h
dword_DD0	dd 0			; DATA XREF: .debug_info:000014EEo
		dd 23040500h, 6000002h,	111h, 13819h, 6C400h, 12C1A00h
		dd 180000h, 6B406h
		db 0, 1Bh
		dd offset aPurple_g_che_0 ; "purple_g_checksum_append"
		dw 2B01h
		dd 71F0101h
		db 2 dup(0), 12h
		dd offset aContext	; "context"
		db 1
		dd 4B22Bh, 61641300h, 1006174h,	53A2Bh,	656C1300h, 2C01006Eh
		dd 11Fh
		db 14h
		dd offset aChecksum	; "checksum"
		db 1, 2Eh, 0A9h
		dd 16000006h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset ___PRETTY_FUNCTION___6903+0Ch	; "cksum_reset"
		db 1
		dd offset aPurple_g_che_0 ; "purple_g_checksum_append"
byte_E3D	db 18h,	14h		; DATA XREF: .debug_info:0000155Co
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 7031h, 6000000h, 6B4h
		db 1Bh
off_E51		dd offset aPurple_g_che_1 ; DATA XREF: .debug_info:0000169Co
					; "purple_g_checksum_uninit"
		db 1, 20h, 1
		dd 76301h
		db 0, 12h
		dd offset aContext	; "context"
		dw 2001h
		dd offset loc_4B2
		db 14h
		dd offset aChecksum	; "checksum"
		db 1, 22h, 0A9h
		dd 16000006h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset aCWorkspacePidg+0Ah ;	"ace\\\\pidgin-devel\\\\pidgin-2.10.11\\"...
		db 1
		dd offset aPurple_g_che_1 ; "purple_g_checksum_uninit"
		db 18h,	14h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		dd 7025h, 6000000h, 6B4h
		db 1Bh
		dd offset aPurple_g_che_2 ; "purple_g_checksum_reset"
		db 1, 0Fh, 1
		dd 7B301h
		db 0, 12h
		dd offset aContext	; "context"
word_EA6	dw 0F01h		; DATA XREF: .debug_info:000015C5o
		dd offset loc_4B2
		dd 70797413h, 0F010065h, 20Eh
		db 14h
		dd offset aChecksum	; "checksum"
		db 1, 11h, 0A9h
		dd 16000006h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset byte_7C1+2
		db 1
		dd offset aPurple_g_che_2 ; "purple_g_checksum_reset"
		db 18h,	14h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1
		db  14h
		dd offset loc_70
		db 2 dup(0), 19h
		dd offset loc_137+1
		dd offset byte_7C1+2
		db  1Ah
		dd offset loc_128+4
		db 17h,	0, 6
		dd offset byte_7B1+2
		db  1Ch
aMd5_get_block_	db 'md5_get_block_size',0
		dd 77018B01h
		db 3 dup(0)
		dd offset _md5_get_block_size
		dd offset unk_25
off_F17		dd offset dword_1EA0	; DATA XREF: .debug_info:00001638o
		db 1
		dd offset dword_7D8+34h
		db 1Dh
		dd offset aContext	; "context"
		db 1, 8Bh, 0B2h
		dd 2000004h
		db 91h,	0, 1Eh
		dd offset unk_25
		dd offset off_127B+2
		align 4
		db  1Ch
aSha1_get_block	db 'sha1_get_block_size',0
		db 1, 8Ch, 1
		dd offset unk_77
		dd offset _sha1_get_block_size
		dd offset unk_4D
		dd offset off_1ED8
		dd 85101h
		db 0, 1Dh
		dd offset aContext	; "context"
		dw 8C01h
		dd offset loc_4B2
		dd 1E009102h
		dd offset unk_4D
		dd offset off_127B+2
		db    0
		db 1Ch,	73h, 68h
aA256_get_block	db 'a256_get_block_size',0 ; DATA XREF: .debug_info:000016A0o
		dd 77018D01h
		db 3 dup(0)
		dd offset _sha256_get_block_size
		dd offset byte_75
		dd offset off_1F10
		db 1
		dd offset unk_898
		db 1Dh
		dd offset aContext	; "context"
		db 1, 8Dh, 0B2h
		dd 2000004h
		db 91h,	0, 1Eh
		dd offset byte_75
		dd offset off_127B+2
		align 4
		db  1Fh
aPurple_g_che_3	db 'purple_g_checksum_init',0
		dd 1010601h, 8DBh
		db 12h
		dd offset aContext	; "context"
		db 1, 6, 0B2h
		dd 13000004h, 65707974h, 0E060100h, 14000002h
		dd offset aChecksum	; "checksum"
		dd 6A90801h, 20000000h,	31616873h, 696E695Fh, 8C010074h
		db 1
		dd offset _sha1_init
		dd offset unk_B9
		dd offset off_1F48
		db 1, 6Ch, 9
		db 2 dup(0), 1Dh
		dd offset aContext	; "context"
		db 1
		dd 4B28Ch, 910200h
		db 1Dh
		dd offset aExtra	; "extra"
		db 1, 8Ch, 0ADh
		dd 2000001h, 98210491h
		db 8, 2	dup(0)
		dd offset loc_8B
		dd offset off_284C
		db 1
aM		db 'å"√',8,0
		align 2
		dw 2301h
		dd offset unk_8B8
		dd offset off_1F98
		db 24h
		dd offset off_2864
		db 25h,	0CFh, 8
		db 2 dup(0)
		dd offset off_1FC2
		db 26h
		dd offset loc_97
		dd offset byte_1293
		dd offset aGchecksum+6	; "sum"
		db 27h
		dd 1007402h
		db 31h,	0, 28h
		dd offset loc_B4
		db 1
		dd offset aHa1_digest	; "ha1_digest"
		db 1Eh
		dd offset unk_B9
		dd offset off_127B+2
		align 4
		dd 61129h
		db 0
		dd offset _purple_g_checksum_digest
		dd offset unk_189
		dd offset off_1FE0
		db 1, 0FDh, 0Ah
		dd 22230000h
		db 6, 2	dup(0)
		dd offset off_207A
		db 23h
		dd offset dword_620+0Dh
		dd offset off_20B1
		dd 63923h
		db 0
		dd offset off_20D2
		db 2Ah,	44h, 6
dword_10CC	dd 91020000h, 64F2A00h,	91020000h, 65A2B04h, 0F3040000h
					; DATA XREF: .debug_info:000017F1o
		dd 259F5201h, 665h
		dd offset off_20F1
		dd 67C2Bh
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"
		db 2Ch
		dd offset loc_EE
		dd offset loc_F6
		dd offset dword_9AC+36h
		dd 68F25h
		db 0
		dd offset off_211A
		align 2
		db 2Ch
		dd offset loc_F6
		dd offset loc_FA
		dd offset dword_9AC+4Dh
		db 25h
		dd offset byte_69C
		dd offset off_2146
		dd 6112D00h
		db 2 dup(0)
		dd offset loc_164
		dd offset loc_184
		dw 3E01h
		dd offset dword_A34+35h
		db 2Eh
		dd offset loc_164
		dd offset loc_184
		db 2Fh,	5Ah, 6
dword_1144	dd 652F0000h, 30000006h, 64Fh, 64430h, 6393000h, 2D300000h
		dd 30000006h, 622h, 67C2Bh
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"
		db 31h
		dd offset loc_180
		dd offset off_12E8+3
		dd 740227h, 2273001h, 3050474h
		dd offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"
		dd 8740227h
		db 5, 3
		dd offset aChecksumNull	; "checksum != NULL"
		align 4
		db 0, 26h
		dd offset loc_E4
		dd offset byte_1329
		dd offset dword_A34+4Bh
		dw 227h
		dd 0F3030074h, 26005201h
		dd offset loc_EE
		dd offset off_1358
off_11B4	dd offset dword_A34+60h	; DATA XREF: .debug_info:000018C4o
		dd 740227h, 7302h
		db 26h
		dd offset loc_10E
		dd offset off_138C
		dd offset dword_A34+7Ch
		db 27h,	2, 74h
		dd 770204h, 8740227h, 4C9102h
		db 26h
		dd offset loc_11E
		dd offset off_13BC
		dd offset dword_A34+97h
		db 27h,	2, 74h
		dd 730200h, 4740227h, 26003001h
		dd offset loc_160
		dd offset off_12E8+3
		dd offset dword_A34+0BFh
		dd 740227h, 2273001h, 3050474h
		dd offset ___PRETTY_FUNCTION___6934 ; "purple_g_checksum_digest"
		dd 8740227h
		db 5, 3
		dd offset aLenRequired_le ; "len >= required_length"
		dw 1E00h
		dd offset unk_189
		dd offset off_127B+2
		dd 68731C00h, 36353261h, 6769645Fh, 747365h, 71018D01h
		db 1, 2	dup(0)
		dd offset _sha256_digest
		dd offset unk_1D5
		dd offset off_2166
		db 1
		dd offset dword_A34+154h
		db 1Dh
		dd offset aContext	; "context"
		db 1, 8Dh, 0B2h
		dd 2000004h
		db 91h,	0, 1Dh
		dd offset aIn_len	; "in_len"
		db 1
		dd 11F8Dh, 4910200h
		db 1Dh
		dd offset aDigest	; "digest"
		db 1, 8Dh, 18h
		dd 2000005h
		db 91h,	8, 1Dh
off_127B	dd offset aOut_len	; DATA XREF: .debug_info:00000F33o
					; .debug_info:00000F78o ...
					; "out_len"
		db 1
		dd 56A8Dh, 0C910200h
		db 32h
		dd offset loc_1D0
		db 1, 11h, 6
		db 2 dup(0), 7Eh
byte_1293	db 0Bh			; DATA XREF: .debug_info:00001073o
					; .debug_info:000017EDo ...
		dd 1270000h, 910350h, 52012706h, 1273201h, 4910351h
		db 6, 0, 1Eh
		dd offset unk_1D5
		dd offset off_127B+2
		align 4
		db 1Ch,	73h
aHa1_digest	db 'ha1_digest',0       ; DATA XREF: .debug_info:00001088o
		db 1, 8Ch, 1
		dd offset loc_16C+5
		dd offset _sha1_digest
		dd offset unk_221
		dd offset off_21CE
		dd 0C1101h
		db 0, 1Dh
		dd offset aContext	; "context"
		dw 8C01h
		dd offset loc_4B2
		dd 1D009102h
off_12E8	dd offset aIn_len	; DATA XREF: .debug_info:00001174o
					; .debug_info:000011FCo ...
					; "in_len"
		dd 11F8C01h, 91020000h
		db 4, 1Dh
		dd offset aDigest	; "digest"
		dw 8C01h
		dd offset loc_517+1
		dd 1D089102h
		dd offset aOut_len	; "out_len"
		dd 56A8C01h, 91020000h
		db 0Ch,	32h
		dd offset loc_21C
		dw 1101h
dword_1318	dd 7000006h, 2700000Ch,	91035001h, 1270600h
					; DATA XREF: .debug_info:00001A40o
					; .debug_info:00001A45o ...
		db 52h
byte_1329	db 1, 31h, 27h		; DATA XREF: .debug_info:0000119Ao
		dd 91035101h, 1E000604h
		dd offset unk_221
		dd offset off_127B+2
		dd 646D1C00h, 69645F35h, 74736567h, 18B0100h, 171h
		dd offset _md5_digest
		dd offset unk_26A
off_1358	dd offset off_2236	; DATA XREF: .debug_info:000011B0o
					; .debug_info:00001468o ...
		dd 0C9901h
		db 0, 1Dh
		dd offset aContext	; "context"
		dw 8B01h
		dd offset loc_4B2
		dd 1D009102h
		dd offset aIn_len	; "in_len"
		dd 11F8B01h, 91020000h
		db 4, 1Dh
		dd offset aDigest	; "digest"
		dw 8B01h
		dd offset loc_517+1
		dd 1D089102h
off_138C	dd offset aOut_len	; DATA XREF: .debug_info:000011C5o
					; "out_len"
		dd 56A8B01h, 91020000h
		db 0Ch,	32h
		dd offset loc_265
		dw 1101h
		dd 8F000006h, 2700000Ch, 91035001h, 1270600h, 27300152h
		dd 91035101h, 1E000604h
off_13BC	dd offset unk_26A	; DATA XREF: .debug_info:000011E1o
					; .debug_info:00001AD4o
		dd offset off_127B+2
		dd 6C92900h
		db 2 dup(0)
		dd offset _purple_g_checksum_append
		dd offset unk_333
		dd offset off_229E
		dw 8701h
		dd 2A00000Dh, 6D6h, 23009102h, 6E1h
		dd offset off_2396
dword_13EC	dd 6ED23h		; DATA XREF: .debug_info:0000147Eo
		db 0
		dd offset off_23D8
		db 25h,	0F8h, 6
		db 2 dup(0)
		dd offset off_241A
		dw 32Bh
		dd 5000007h
		db 3
		dd offset ___PRETTY_FUNCTION___6919 ; "purple_g_checksum_append"
		db 2Ch
		dd offset loc_293
		dd offset loc_29C
		dd offset dword_C44+0B0h
		dw 1225h
		db 7, 2	dup(0)
		dd offset off_2470
		align 10h
		dd 6C933h
		db 0
		dd offset loc_2FF
		dd offset off_287C
		db 1, 2Bh, 37h
		dd 2400000Dh
		dd offset off_2894
dword_1438	dd 6F82Fh, 6ED3000h, 0E1300000h, 30000006h, 6D6h, 7032Bh
					; DATA XREF: .debug_info:0000164Ao
		db 0, 5, 3
off_1453	dd offset ___PRETTY_FUNCTION___6919 ; DATA XREF: .debug_info:off_72Co
					; "purple_g_checksum_append"
		db 28h
		dd offset loc_32E
		dd 12EB01h, 26000000h
		dd offset loc_291
		dd offset off_1358
		dd offset byte_D4C+1
		dd 740227h, 6009103h
		db 0, 26h
		dd offset loc_2B0
		dd offset dword_13EC+2
		dd offset off_D71+2
		dw 227h
		dd 77020074h, 74022700h, 760204h, 8740227h, 0FFFF0C05h
		dd 28007FFFh
		dd offset loc_2FF
		dd 13EE01h
		db 0, 1Eh
		dd offset unk_333
		dd offset off_127B+2
		dw 2900h
		dd offset ___PRETTY_FUNCTION___6903+11h	; "_reset"
		dd offset _purple_g_checksum_uninit
		dd offset unk_39D
		dd offset off_2484
		dd 0E5101h, 7312A00h, 91020000h, 73C2500h
		db 2 dup(0)
		dd offset off_24D4
		dw 472Bh
		dd 5000007h
		db 3
		dd offset ___PRETTY_FUNCTION___6910 ; "purple_g_checksum_uninit"
		db 2Ch
		dd offset loc_34E
		dd offset loc_352
		dd offset dword_DD0
		dw 5625h
		db 7, 2	dup(0)
		dd offset off_24F2
		align 4
		dd 7242Dh
		db 0
		dd offset loc_36C
		dd offset loc_388
		db 1, 20h, 27h
		dd 2E00000Eh
		dd offset loc_36C
		dd offset loc_388
		dd 73C2Fh, 7313000h, 472B0000h,	5000007h
		db 3
		dd offset ___PRETTY_FUNCTION___6910 ; "purple_g_checksum_uninit"
		db 31h
		dd offset loc_388
		dd offset off_12E8+3
		dw 227h
		dd 30010074h, 4740227h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___6910 ; "purple_g_checksum_uninit"
		dw 227h
		dd 3050874h
		dd offset aChecksumNull	; "checksum != NULL"
		dd 26000000h
		dd offset loc_34E
		dd offset off_1358
		dd offset byte_E3D
		dd 740227h, 6009103h
		db 0, 28h
		dd offset loc_36A
		dw 1A01h
		dd 1E000014h
		dd offset unk_39D
		dd offset off_127B+2
		dd 7682900h
		db 2 dup(0)
		dd offset _purple_g_checksum_reset_isra_3
		dd offset unk_3F7
		dd offset off_2512
		dw 2C01h
		dd 2300000Fh, 775h
		dd offset off_254A
		dd 7802Ah, 80FA0600h, 9F000007h, 78C25h
		db 0
		dd offset off_256B
		db 2Bh,	97h, 7
		dd 3050000h
		dd offset ___PRETTY_FUNCTION___6903 ; "purple_g_checksum_reset"
		db 2Ch
		dd offset loc_3B7
		dd offset loc_3BB
		dd offset word_EA6+1
		db 25h,	0A6h, 7
		db 2 dup(0)
		dd offset off_2589
		dw 2D00h
		dd offset aCWorkspacePidg+0Fh ;	"pidgin-devel\\\\pidgin-2.10.11\\\\libpu"...
		dd offset loc_3D4
		dd offset loc_3F2
		dd 0F030F01h
		db 2 dup(0), 2Eh
		dd offset loc_3D4
		dd offset loc_3F2
		db 30h
		dd offset aCWorkspacePidg+27h ;	"0.11\\\\libpurple"
		dd 78C2Fh, 7753000h, 972B0000h,	5000007h
		db 3
		dd offset ___PRETTY_FUNCTION___6903 ; "purple_g_checksum_reset"
		db 31h
		dd offset loc_3F0
		dd offset off_12E8+3
		dw 227h
		dd 30010074h, 4740227h
		db 5, 3
		dd offset ___PRETTY_FUNCTION___6903 ; "purple_g_checksum_reset"
		dw 227h
		dd 3050874h
		dd offset aChecksumNull	; "checksum != NULL"
		dd 26000000h
		dd offset loc_3B7
		dd offset off_1358
		dd offset off_F17+2
		dd 740227h, 5001F303h
		db 0, 1Eh
		dd offset loc_3C3
		dd offset dword_1438+2
		db 1Eh
		dd offset unk_3F7
		dd offset off_127B+2
		align 4
aSha256_reset	db ' sha256_reset',0
		dw 8D01h
		db 1
		dd offset _sha256_reset
		dd offset unk_421
		dd offset off_25A9
		db 1, 91h, 0Fh
		db 2 dup(0), 1Dh
		dd offset aContext	; "context"
		db 1
		dd 4B28Dh, 910200h
		db 1Dh
		dd offset aExtra	; "extra"
		db 1, 8Dh, 0ADh
		dd 2000001h
		db 91h,	4, 32h
		dd offset loc_41C
		db 1
		dd offset off_E51
		dd offset aA256_get_block+7 ; "t_block_size"
		dd 3500127h, 34060091h,	780h, 1E003201h
		dd offset unk_421
		dd offset off_127B+2
		dd 68732000h, 725F3161h, 74657365h, 18C0100h
		dd offset _sha1_reset
		dd offset _md5_reset
		dd offset off_25E1
		dd 0FF401h
		db 0, 1Dh
		dd offset aContext	; "context"
		dw 8C01h
		dd offset loc_4B2
		dd 1D009102h
		dd offset aExtra	; "extra"
		dd 1AD8C01h, 91020000h
		db 4, 32h
		dd offset loc_44B
		dw 5101h
		dd 0EA00000Eh, 2700000Fh, 91035001h, 80340600h,	1000007h
		db 31h,	0, 1Eh
		dd offset _md5_reset
		dd offset off_127B+2
		align 10h
aMd5_reset	db ' md5_reset',0
		db 1
		db 8Bh,	1
		dd offset _md5_reset
		dd offset _md5_init
		dd offset off_2619
		dw 5601h
		dd 1D000010h
		dd offset aContext	; "context"
		dd 4B28B01h, 91020000h
		db 0, 1Dh
		dd offset aExtra	; "extra"
		dw 8B01h
		dd offset loc_1AD
		dd 32049102h
		dd offset loc_477
		dd 0E5101h, 104C00h, 50012700h,	6009103h, 78034h, 300100h
		db 1Eh
		dd offset _md5_init
		dd offset off_127B+2
		align 2
aMd5_init	db ' md5_init',0
		db 1, 8Bh, 1
		dd offset _md5_init
		dd offset unk_4BD
		dd offset off_2651
		db 1
		dd offset dword_10CC+1Ah
		db 1Dh
		dd offset aContext	; "context"
		db 1, 8Bh, 0B2h
		dd 2000004h
		db 91h,	0, 1Dh
		dd offset aExtra	; "extra"
		db 1
		dd 1AD8Bh, 4910200h, 89821h
		db 0
		dd offset loc_48F
		dd offset off_28AC
		db 1, 8Bh, 22h
		dd offset aLongUnsignedIn+6 ; "unsigned	int"
		dd 8B82300h
		db 2 dup(0)
		dd offset off_26A1
		db 24h
		dd offset off_28C4
		db 25h
		dd offset aLongUnsignedIn+12h ;	""
		dd offset off_26CB
		db 26h
		dd offset loc_49B
		dd offset byte_1293
		dd offset dword_10CC+4
		db 27h,	2, 74h
		dd 300100h
		db 28h
		dd offset loc_4B8
		db 1, 0B6h, 12h
		db 2 dup(0), 1Eh
		dd offset unk_4BD
		dd offset off_127B+2
		align 10h
		dd 73200000h, 35326168h, 6E695F36h, 1007469h
		db 8Dh,	1
		dd offset _sha256_init
		dd offset unk_501
		dd offset off_26E9
		dw 7901h
		dd 1D000011h
		dd offset aContext	; "context"
		dd 4B28D01h, 91020000h
		db 0, 1Dh
		dd offset aExtra	; "extra"
		dw 8D01h
		dd offset loc_1AD
		dd 21049102h, 898h
		dd offset loc_4D3
		dd offset off_28DC
		dd 0C3228D01h, 2000008h, 8B823h
		db 0
		dd offset off_2739
		db 24h
		dd offset off_28F4
		dw 0CF25h
		db 8, 2	dup(0)
		dd offset off_2763
		db 26h
		dd offset loc_4DF
		dd offset byte_1293
		dd offset dword_1144+1Fh
		dd 740227h, 28003201h
		dd offset loc_4FC
		dd 12B601h
		db 0, 1Eh
		dd offset unk_501
		dd offset off_127B+2
		align 4
		db    0
		db 35h,	1, 70h
aUrple_md5_ciph	db 'urple_md5_cipher_get_ops',0
		db 1, 8Bh, 1
		dd offset off_11B4+3
		dd offset _purple_md5_cipher_get_ops
		dd offset _purple_sha1_cipher_get_ops
		dd offset off_2781
		dd 11B701h
		db 0, 1Eh
		dd offset _purple_sha1_cipher_get_ops
		dd offset off_127B+2
		dw 500h
		db    4
		dd offset loc_255+1
		db 35h,	1, 70h
aUrple_sha1_cip	db 'urple_sha1_cipher_get_ops',0
		dw 8C01h
		dd 11B701h
		db 0
		dd offset _purple_sha1_cipher_get_ops
		dd offset _purple_sha256_cipher_get_ops
		dd offset off_27B9
		db 1, 0FCh, 11h
		db 2 dup(0), 1Eh
		dd offset _purple_sha256_cipher_get_ops
		dd offset off_127B+2
		align 4
		db  35h	; 5
		db 1, 70h, 75h
aRple_sha256_ci	db 'rple_sha256_cipher_get_ops',0
		db 1
		dd 11B7018Dh
		db 2 dup(0)
		dd offset _purple_sha256_cipher_get_ops
		dd offset loc_577+5
		dd offset off_27F1
		dw 3D01h
		dd 1E000012h
		dd offset loc_577+5
		dd offset off_127B+2
		dd 444D3600h, 73704F35h, 568B0100h, 5000002h
		db 3
		dd offset _MD5Ops
a6sha1ops	db '6SHA1Ops',0
		dw 8C01h
		dd offset loc_255+1
		db 5, 3
		dd offset _SHA1Ops
a6sha256ops	db '6SHA256Ops',0
		db 1, 8Dh, 56h
		dd 5000002h
		db 3
		dd offset _SHA256Ops
		db 37h,	1, 5Fh
a_stack_chk_fai	db '_stack_chk_fail',0
		dd 38010101h, 635F6701h, 6B636568h, 5F6D7573h, 77656Eh
		dd 0A9014105h, 1000006h, 12B6h,	20E0Fh,	1390000h
aPurple_cipher_	db 'purple_cipher_context_set_data',0
		db 6
		db 0B7h	; ∑
		db 3 dup(1)
		dd offset off_12E8+3
		db  0Fh
		dd offset loc_4B2
		db 0Fh,	0ADh, 1
		db    0
		db 2 dup(0), 3Ah
		db    1
aG_return_if_fa	db 'g_return_if_fail_warning',0
		dw 7407h
		db    1
		db 1, 1Eh, 13h
		db    0
		align 2
		dw 1E0Fh
		db  13h
		db 2 dup(0), 0Fh
		dd offset dword_1318+6
		db  0Fh
		dd offset dword_1318+6
		align 2
		dw 405h
		dd offset dword_1318+0Ch
		db    6
		dd offset loc_137+1
		db 38h,	1, 67h
a_checksum_type	db '_checksum_type_get_length',0
		dw 3F05h
		db    1
		dd offset loc_10E+3
		db 1, 58h, 13h
		db    0
		align 2
		dw 0E0Fh
		db    2
		align 4
		db  3Bh	; ;
		db 1, 70h, 75h
aRple_cipher_co	db 'rple_cipher_context_get_data',0
		db 6, 0C0h, 1
		db    1
		dd offset loc_1AD
		db 1, 8Ch, 13h
		db    0
		align 2
		dw 0B20Fh
		db    4
		align 4
		db  3Ah	; :
		db 1, 67h, 5Fh
aChecksum_get_d	db 'checksum_get_digest',0
		db    5
		db 49h,	2 dup(1)
		dd offset off_13BC
		db  0Fh
		dd offset aLenRequired_le+9 ; "quired_length"
		db 0Fh,	0C8h, 1
		db    0
		align 2
		dw 410Fh
		db    2
		align 4
		db  39h	; 9
		db 1, 70h, 75h
aRple_cipher__0	db 'rple_cipher_context_reset',0
		dw 2006h
		dd 0EE010101h, 0F000013h, 4B2h,	1AD0Fh,	13A0000h
aG_checksum_upd	db 'g_checksum_update',0
		dw 4505h
		dd 141A0101h, 0A90F0000h, 0F000006h, 53Ah, 1110Fh, 13A0000h
		dd 68635F67h, 736B6365h, 665F6D75h, 656572h, 1014405h
		dd 143Ah, 6A90Fh, 13C0000h, 68635F67h, 736B6365h, 725F6D75h
		dd 74657365h, 1420500h,	6A90F01h, 0
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 1B84h
dword_1B84	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:00000732o
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 13490026h, 4070000h,	3A0B0B01h, 10B3B0Bh, 8000013h
		dd 8030028h, 0D1Ch, 3001309h, 0C3C08h, 1130A00h, 0B0B0803h
		dd 0B3B0B3Ah, 1301h, 3000D0Bh, 3B0B3A08h, 3813490Bh, 0C00000Ah
		dd 0E03000Dh, 0B3B0B3Ah, 0A381349h, 40D0000h, 0B080301h
		dd 3B0B3A0Bh, 13010Bh, 1150E00h, 13010C27h, 50F0000h, 134900h
		dd 1151000h, 13490C27h,	1301h, 3012E11h, 3B0B3A0Eh, 490C270Bh
		dd 10B2013h, 12000013h,	0E030005h, 0B3B0B3Ah, 1349h, 3000513h
		dd 3B0B3A08h, 13490Bh, 341400h,	0B3A0E03h, 13490B3Bh, 34150000h
		dd 3A080300h, 490B3B0Bh, 16000013h, 0E030034h, 0C341349h
		dd 0E1Ch, 1010B17h, 18000013h, 10Bh, 49010119h,	130113h
		dd 211A00h, 0B2F1349h, 2E1B0000h, 3A0E0301h, 270B3B0Bh
		dd 10B200Ch, 1C000013h,	803012Eh, 0B3B0B3Ah, 13490C27h
		dd 1120111h, 42970640h,	13010Ch, 51D00h, 0B3A0E03h, 13490B3Bh
		dd 0A02h, 182891Eh, 31011100h, 1F000013h, 803012Eh, 0B3B0B3Ah
		dd 0B200C27h, 1301h, 3012E20h, 3B0B3A08h, 110C270Bh, 40011201h
		dd 0C429706h, 1301h, 31011D21h,	55015213h, 590B5806h, 2200000Bh
		dd 13310005h, 0B1Ch, 31000523h,	60213h,	10B2400h, 655h
		dd 31003425h, 60213h, 82892600h, 1110101h, 13011331h, 8A270000h
		dd 2000182h, 0A42910Ah,	89280000h, 11000182h, 0C429501h
		dd 1331h, 31012E29h, 12011113h,	97064001h, 13010C42h, 52A0000h
		dd 2133100h, 2B00000Ah,	13310034h, 0A02h, 11010B2Ch, 1011201h
		dd 2D000013h, 1331011Dh, 1120111h, 0B590B58h, 1301h, 11010B2Eh
		dd 11201h, 342F00h, 1331h, 31000530h, 31000013h, 1018289h
		dd 13310111h, 89320000h, 11010182h, 0C429501h, 13011331h
		dd 1D330000h, 52133101h, 58065501h, 10B590Bh, 34000013h
		dd 1828Ah, 42911331h, 3500000Ah, 0C3F012Eh, 0B3A0803h
		dd 0C270B3Bh, 1111349h,	6400112h, 10C4297h, 36000013h
		dd 8030034h, 0B3B0B3Ah,	0A021349h, 2E370000h, 30C3F00h
		dd 340C2708h, 0C3C0Ch, 12E3800h, 8030C3Fh, 0B3B0B3Ah, 13490C27h
		dd 13010C3Ch, 2E390000h, 30C3F01h, 3B0B3A08h, 3C0C2705h
		dd 13010Ch, 12E3A00h, 8030C3Fh,	0B3B0B3Ah, 0C3C0C27h, 1301h
		dd 3F012E3Bh, 3A08030Ch, 27053B0Bh, 3C13490Ch, 13010Ch
		dd 12E3C00h, 8030C3Fh, 0B3B0B3Ah, 0C3C0C27h
		db 3 dup(0)
		align 10h
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 1EA0h
dword_1EA0	dd 0			; DATA XREF: .debug_info:off_F17o
		dd 3, 4740002h,	3, 1Fh,	20740002h, 1Fh,	20h, 4740002h
		dd 20h,	25h, 20740002h,	2 dup(0)
off_1ED8	dd offset _sha1_get_block_size ; DATA XREF: .debug_info:00000F5Co
		dd offset loc_2B
		dd 4740002h, 2Bh, 47h, 20740002h, 47h, 48h, 4740002h, 48h
		dd 4Dh,	20740002h, 2 dup(0)
off_1F10	dd offset _sha256_get_block_size ; DATA	XREF: .debug_info:00000FA3o
		dd offset loc_53
		dd 4740002h, 53h, 6Fh, 20740002h, 6Fh, 70h, 4740002h, 70h
		dd 75h,	20740002h, 2 dup(0)
off_1F48	dd offset _sha1_init	; DATA XREF: .debug_info:0000101Do
		dd offset loc_79
		dd 4740002h, 79h, 7Ch, 8740002h, 7Ch, 0AEh, 30740002h
		dd 0AEh, 0AFh, 8740002h, 0AFh, 0B4h, 4740002h, 0B4h, 0B9h
		dd 30740002h, 2	dup(0)
off_1F98	dd offset loc_8B	; DATA XREF: .debug_info:0000105Co
		dd offset loc_AF
		dd 0AF530001h, 0B4000000h, 2000000h, 0B4009100h, 0B9000000h
		dd 1000000h, 5300h, 0
		db 2 dup(0)
off_1FC2	dd offset loc_97	; DATA XREF: .debug_info:0000106Ao
		dd offset loc_AF+4
		dw 1
		dd 0B450h, 0B800h, 50000100h, 2	dup(0)
off_1FE0	dd offset _purple_g_checksum_digest ; DATA XREF: .debug_info:000010A5o
		dd offset loc_BD
		dd 4740002h, 0BDh, 0BEh, 8740002h, 0BEh, 0BFh, 0C740002h
		dd 0BFh, 0C0h, 10740002h, 0C0h,	0C3h, 14740002h, 0C3h
		dd 13Ch, 0D0740003h, 13C00h, 13D00h, 74000200h,	13D14h
		dd 13E00h, 74000200h, 13E10h, 13F00h, 74000200h, 13F0Ch
		dd 14000h, 74000200h, 14008h, 14400h, 74000200h, 14404h
		dd 18900h, 74000300h, 0D0h, 0
		db 2 dup(0)
off_207A	dd offset _purple_g_checksum_digest ; DATA XREF: .debug_info:000010B3o
		dd offset loc_DC
		dw 1
		dd 0DC50h, 13D00h, 53000100h, 13Dh, 141h, 1F30004h, 1419F50h
		dd 1890000h, 10000h, 53h, 0
		db 0
off_20B1	dd offset _purple_g_checksum_digest ; DATA XREF: .debug_info:000010BCo
		dd offset loc_DF+4
		db 1, 0, 52h
		dd offset loc_DF+4
		dd offset unk_189
		dd 1F30004h, 9F52h, 0
		db 2 dup(0)
off_20D2	dd offset _purple_g_checksum_digest ; DATA XREF: .debug_info:000010C5o
		dd offset loc_DF+4
		dw 1
		dd 0E351h, 18900h, 91000200h, 4Ch, 0
		db 0
off_20F1	dd offset loc_E6	; DATA XREF: .debug_info:000010E8o
		dd offset loc_E9+4
		db 1, 0, 50h
		dd offset loc_E9+4
		dd offset locret_140
		dd 41550001h, 89000001h, 1000001h, 5500h, 0
		db 2 dup(0)
off_211A	dd offset loc_F6	; DATA XREF: .debug_info:00001109o
		dd offset loc_12D
		dw 2
		dd 1419F31h, 1640000h, 20000h, 1649F30h, 1840000h, 20000h
		dd 9F31h, 0
		db 2 dup(0)
off_2146	dd offset loc_FA	; DATA XREF: .debug_info:00001120o
		dd offset loc_12D
		dw 2
		dd 1649F31h, 1840000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_2166	dd offset _sha256_digest ; DATA	XREF: .debug_info:00001247o
		dd offset loc_18D
		dw 2
		dd 18D0474h, 18E0000h, 20000h, 18E0874h, 1910000h, 20000h
		dd 1910C74h, 1C90000h, 20000h, 1C92074h, 1CA0000h, 20000h
		dd 1CA0C74h, 1CB0000h, 20000h, 1CB0874h, 1D00000h, 20000h
		dd 1D00474h, 1D50000h, 20000h, 2074h, 0
		db 2 dup(0)
off_21CE	dd offset _sha1_digest	; DATA XREF: .debug_info:000012D0o
		dd offset loc_1D9
		dw 2
		dd 1D90474h, 1DA0000h, 20000h, 1DA0874h, 1DD0000h, 20000h
		dd 1DD0C74h, 2150000h, 20000h, 2152074h, 2160000h, 20000h
		dd 2160C74h, 2170000h, 20000h, 2170874h, 21C0000h, 20000h
		dd 21C0474h, 2210000h, 20000h, 2074h, 0
		db 2 dup(0)
off_2236	dd offset _md5_digest	; DATA XREF: .debug_info:off_1358o
		dd offset loc_225
		dw 2
		dd 2250474h, 2260000h, 20000h, 2260874h, 2290000h, 20000h
		dd 2290C74h, 25E0000h, 20000h, 25E2074h, 25F0000h, 20000h
		dd 25F0C74h, 2600000h, 20000h, 2600874h, 2650000h, 20000h
		dd 2650474h, 26A0000h, 20000h, 2074h, 0
		db 2 dup(0)
off_229E	dd offset _purple_g_checksum_append ; DATA XREF: .debug_info:000013D2o
		dd offset loc_26D
		dw 2
		dd 26D0474h, 26E0000h, 20000h, 26E0874h, 26F0000h, 20000h
		dd 26F0C74h, 2720000h, 20000h, 2721074h, 2D70000h, 20000h
		dd 2D73074h, 2D80000h, 20000h, 2D81074h, 2D90000h, 20000h
		dd 2D90C74h, 2DA0000h, 20000h, 2DA0874h, 2DC0000h, 20000h
		dd 2DC0474h, 2F70000h, 20000h, 2F73074h, 2F80000h, 20000h
		dd 2F81074h, 2F90000h, 20000h, 2F90C74h, 2FA0000h, 20000h
		dd 2FA0874h, 2FF0000h, 20000h, 2FF0474h, 3260000h, 20000h
		dd 3263074h, 3270000h, 20000h, 3271074h, 3280000h, 20000h
		dd 3280C74h, 3290000h, 20000h, 3290874h, 32E0000h, 20000h
		dd 32E0474h, 3330000h, 20000h, 3074h, 0
		db 2 dup(0)
off_2396	dd offset _purple_g_checksum_append ; DATA XREF: .debug_info:000013E8o
		dd offset unk_299
		dw 2
		dd 2990491h, 2D90000h, 10000h, 2DB56h, 2F900h, 56000100h
		dd 2F9h, 2FEh, 4910002h, 2FFh, 32Eh, 4910002h, 2 dup(0)
off_23D8	dd offset _purple_g_checksum_append ; DATA XREF: .debug_info:000013F1o
		dd offset unk_299
		dd 8910002h, 299h, 2D8h, 0DB530001h, 0F8000002h, 1000002h
		dd 2F85300h, 2FE0000h, 20000h, 2FF0891h, 32E0000h, 20000h
		dd 891h, 0
		db 2 dup(0)
off_241A	dd offset loc_293	; DATA XREF: .debug_info:000013FAo
		dd offset unk_299
		dw 1
		dd 29950h, 2DA00h, 57000100h, 2DBh, 2FAh, 0FA570001h, 0FE000002h
		dd 2000002h, 0FF009100h, 9000002h, 1000003h, 3095000h
		dd 3290000h, 10000h, 32E57h, 33300h, 57000100h,	2 dup(0)
off_2470	dd offset loc_2FF	; DATA XREF: .debug_info:0000141Bo
		dd offset loc_32E
		dd 9F300002h, 2	dup(0)
off_2484	dd offset _purple_g_checksum_uninit ; DATA XREF: .debug_info:000014C0o
		dd offset loc_337
		dd 4740002h, 337h, 365h, 30740002h, 365h, 36Ch,	4740002h
		dd 36Ch, 397h, 30740002h, 397h,	398h, 4740002h,	398h, 39Dh
		dd 30740002h, 2	dup(0)
off_24D4	dd offset loc_34E	; DATA XREF: .debug_info:000014D6o
		dd offset loc_365+4
		dd 6A500001h, 87000003h, 1000003h, 5000h, 0
		db 2 dup(0)
off_24F2	dd offset loc_352	; DATA XREF: .debug_info:000014F7o
		dd offset loc_36A
		dw 2
		dd 36A9F31h, 3980000h, 20000h, 9F30h, 0
		db 2 dup(0)
off_2512	dd offset _purple_g_checksum_reset_isra_3 ; DATA XREF: .debug_info:0000158Ao
		dd offset loc_3A3
		dw 2
		dd 3A30474h, 3D20000h, 20000h, 3D23074h, 3D40000h, 20000h
		dd 3D40474h, 3F70000h, 20000h, 3074h, 0
		db 2 dup(0)
off_254A	dd offset _purple_g_checksum_reset_isra_3 ; DATA XREF: .debug_info:00001598o
		dd offset loc_3B2+4
		dw 1
		dd 3B650h, 3F700h, 0F3000400h, 9F5001h,	0
		db 3 dup(0)
off_256B	dd offset loc_3B7	; DATA XREF: .debug_info:000015ADo
		dd offset loc_3BE+4
		db 1
		dd 3D35000h, 3EF0000h, 10000h, 50h, 0
		db 0
off_2589	dd offset loc_3BB	; DATA XREF: .debug_info:000015CEo
		dd offset loc_3C3
		db 2, 0, 31h
		dd 3D39Fh, 3F200h, 30000200h, 9Fh, 0
		db 0
off_25A9	dd offset _sha256_reset	; DATA XREF: .debug_info:00001671o
		dd offset loc_3FB
		db 2, 0, 74h
		dd 3FB04h, 41A00h, 74000200h, 41A20h, 41C00h, 74000200h
		dd 41C04h, 42100h, 74000200h, 20h, 0
		db 0
off_25E1	dd offset _sha1_reset	; DATA XREF: .debug_info:000016D4o
		dd offset loc_427
		db 2, 0, 74h
		dd 42704h, 44600h, 74000200h, 44620h, 44B00h, 74000200h
		dd 44B04h, 45000h, 74000200h, 20h, 0
		db 0
off_2619	dd offset _md5_reset	; DATA XREF: .debug_info:00001736o
		dd offset loc_453
		db 2, 0, 74h
		dd 45304h, 47200h, 74000200h, 47220h, 47700h, 74000200h
		dd 47704h, 47C00h, 74000200h, 20h, 0
		db 0
off_2651	dd offset _md5_init	; DATA XREF: .debug_info:00001797o
		dd offset loc_47D
		db 2, 0, 74h
		dd 47D04h, 48000h, 74000200h, 48008h, 4B200h, 74000200h
		dd 4B230h, 4B300h, 74000200h, 4B308h, 4B800h, 74000200h
		dd 4B804h, 4BD00h, 74000200h, 30h, 0
		db 0
off_26A1	dd offset loc_48F	; DATA XREF: .debug_info:000017D6o
		dd offset loc_4B3
		db 1, 0, 53h
		dd offset loc_4B3
		dd offset loc_4B8
		dd 910002h, 4B8h, 4BDh,	530001h, 0
		db 3 dup(0)
off_26CB	dd offset loc_49B	; DATA XREF: .debug_info:000017E4o
		dd offset loc_4B3+4
		db 1
		dd 4B85000h, 4BC0000h, 10000h, 50h, 0
		db 0
off_26E9	dd offset _sha256_init	; DATA XREF: .debug_info:0000182Ao
		dd offset loc_4C1
		db 2, 0, 74h
		dd 4C104h, 4C400h, 74000200h, 4C408h, 4F600h, 74000200h
		dd 4F630h, 4F700h, 74000200h, 4F708h, 4FC00h, 74000200h
		dd 4FC04h, 50100h, 74000200h, 30h, 0
		db 0
off_2739	dd offset loc_4D3	; DATA XREF: .debug_info:00001869o
		dd offset loc_4F7
		db 1, 0, 53h
		dd offset loc_4F7
		dd offset loc_4FC
		dd 910002h, 4FCh, 501h,	530001h, 0
		db 3 dup(0)
off_2763	dd offset loc_4DF	; DATA XREF: .debug_info:00001877o
		dd offset loc_4F7+4
		db 1
		dd 4FC5000h, 5000000h, 10000h, 50h, 0
		db 0
off_2781	dd offset _purple_md5_cipher_get_ops ; DATA XREF: .debug_info:000018D0o
		dd offset loc_507
		db 2, 0, 74h
		dd 50704h, 52600h, 74000200h, 52620h, 52700h, 74000200h
		dd 52704h, 52C00h, 74000200h, 20h, 0
		db 0
off_27B9	dd offset _purple_sha1_cipher_get_ops ;	DATA XREF: .debug_info:00001915o
		dd offset loc_52F
		db 2, 0, 74h
		dd 52F04h, 54E00h, 74000200h, 54E20h, 54F00h, 74000200h
		dd 54F04h, 55400h, 74000200h, 20h, 0
		db 0
off_27F1	dd offset _purple_sha256_cipher_get_ops	; DATA XREF: .debug_info:00001956o
		dd offset loc_557
		db 2, 0, 74h
		dd 55704h, 57600h, 74000200h, 57620h, 57700h, 74000200h
		dd 57704h, 57C00h, 74000200h, 20h, 0
		db 0
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 282Ch
		dd 1Ch
		db 2, 0
		dd offset off_72C
		dw 4
		dd 0
		dd offset _md5_get_block_size
		dd offset _MD5Ops
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 284Ch
off_284C	dd offset loc_8B	; DATA XREF: .debug_info:0000104Bo
		dd offset loc_AB
		dd offset loc_AF
		dd offset unk_B9
		dd 2 dup(0)
off_2864	dd offset loc_8B	; DATA XREF: .debug_info:00001061o
		dd offset loc_AB
		dd offset loc_AF
		dd offset unk_B9
		dd 2 dup(0)
off_287C	dd offset loc_2FF	; DATA XREF: .debug_info:00001429o
		dd offset loc_323
		dd offset loc_329
		dd offset loc_32E
		dd 2 dup(0)
off_2894	dd offset loc_2FF	; DATA XREF: .debug_info:00001434o
		dd offset loc_323
		dd offset loc_329
		dd offset loc_32E
		dd 2 dup(0)
off_28AC	dd offset loc_48F	; DATA XREF: .debug_info:000017C5o
		dd offset loc_4AF
		dd offset loc_4B3
		dd offset unk_4BD
		dd 2 dup(0)
off_28C4	dd offset loc_48F	; DATA XREF: .debug_info:000017DBo
		dd offset loc_4AF
		dd offset loc_4B3
		dd offset unk_4BD
		dd 2 dup(0)
off_28DC	dd offset loc_4D3	; DATA XREF: .debug_info:00001858o
		dd offset loc_4F3
		dd offset loc_4F7
		dd offset unk_501
		dd 2 dup(0)
off_28F4	dd offset loc_4D3	; DATA XREF: .debug_info:0000186Eo
		dd offset loc_4F3
		dd offset loc_4F7
		dd offset unk_501
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 290Ch
off_290C	dd offset loc_21C	; DATA XREF: .debug_info:00000798o
		db    2
		align 2
		dd offset unk_143
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aIphers		db 'iphers',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a__Libpurple	db '../libpurple',0
		dw 6700h
aChecksum_c	db 'checksum.c',0
		db 1
		dd 74730000h, 66656464h, 200682Eh, 6C670000h, 6F636269h
		dd 6769666Eh, 300682Eh,	74670000h, 73657079h, 400682Eh
		dd 63670000h, 6B636568h, 2E6D7573h, 40068h, 70696300h
		dd 2E726568h, 50068h, 656D6700h, 67617373h, 682E7365h
		dd 400h, 2050000h
		dd offset _md5_get_block_size
		dd 1018A03h, 2 dup(1325023Ch), 1125023Ch, 7EFE0382h, 8103BBACh
		dd 33C0801h, 34A7EFFh, 4A08C835h, 8384A0AEh, 0F43E084Ch
		dd 359684Bh, 8660875h, 80A03E5h, 823C03E4h, 37024A08h
		dd 24A0811h, 4A081137h,	27FA203h, 0AFD60133h, 3D0893D7h
		dd 4C886367h, 75083B08h, 58770365h, 24020A03h, 66760301h
		dd 3580A03h, 0AF3C6666h, 3BF34CBBh, 3AF0872h, 3C740867h
		dd 884D83BEh, 12087703h, 0C8080903h, 6600F003h,	2 dup(11250274h)
		dd 12250274h, 7EFF0382h, 8003BBACh, 33C0801h, 34A7F80h
		dd 82C80182h, 0AC7EFD03h, 18203BBh, 0FE033C08h,	80034A7Eh
		dd 23CC801h, 2 dup(23C1325h), 1010025h
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 2B2Ch
aDigest		db 'digest',0           ; DATA XREF: .debug_info:00000A2Fo
					; .debug_info:off_D71o	...
aPurple_g_che_2	db 'purple_g_checksum_reset',0 ; DATA XREF: .debug_info:00000E95o
					; .debug_info:00000ECDo
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00000DA9o
					; .debug_info:00000E30o ...
aExtra		db 'extra',0            ; DATA XREF: .debug_info:00001035o
					; .debug_info:00001689o ...
aPurple_g_che_0	db 'purple_g_checksum_append',0 ; DATA XREF: .debug_info:00000DF6o
					; .debug_info:00000E39o
aChecksum	db 'checksum',0         ; DATA XREF: .debug_info:00000D87o
					; .debug_info:00000E25o ...
aPurple_g_check	db 'purple_g_checksum_digest',0 ; DATA XREF: .debug_info:00000D3Eo
					; .debug_info:00000DB2o
aPurple_g_che_1	db 'purple_g_checksum_uninit',0 ; DATA XREF: .debug_info:off_E51o
					; .debug_info:00000E7Do
a_g_boolean_var	db '_g_boolean_var_',0  ; DATA XREF: .debug_info:00000DBCo
					; .debug_info:00000DC9o ...
aIn_len		db 'in_len',0           ; DATA XREF: .debug_info:0000125Fo
					; .debug_info:off_12E8o ...
aOut_len	db 'out_len',0          ; DATA XREF: .debug_info:00000D7Co
					; .debug_info:off_127Bo ...
aContext	db 'context',0          ; DATA XREF: .debug_info:00000D4Fo
					; .debug_info:00000E03o ...
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 2BE0h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch
		dd offset loc_577-3177h
		dd offset unk_25
		dd 200E4300h, 40E0A5Ch,	0B41h, 18h, 38h
		dd offset loc_577-316Bh
		dd offset unk_25
		dd 200E4300h, 40E0A5Ch,	0B41h, 18h, 54h
		dd offset loc_577-315Fh
		dd offset unk_25
		dd 200E4300h, 40E0A5Ch,	0B41h, 20h, 70h
		dd offset loc_577-3153h
		dd offset loc_3C+5
		dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4504h
		dd 3Ch,	94h
		dd offset loc_577-3133h
		dd offset loc_CD
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0A7902h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 28h, 0D4h
		dd offset loc_577-30A3h
		dd offset loc_48+1
		dd 80E4100h, 0E410286h,	4303830Ch, 0A78200Eh, 0C3410C0Eh
		dd 0C641080Eh, 0B45040Eh, 28h, 100h
		dd offset loc_577-3083h
		dd offset loc_48+1
		dd 80E4100h, 0E410286h,	4303830Ch, 0A78200Eh, 0C3410C0Eh
		dd 0C641080Eh, 0B45040Eh, 28h, 12Ch
		dd offset loc_577-3063h
		dd offset loc_44+2
		dd 80E4100h, 0E410286h,	4303830Ch, 0A75200Eh, 0C3410C0Eh
		dd 0C641080Eh, 0B45040Eh, 58h, 158h
		dd offset loc_577-3047h
		dd offset loc_C5+2
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A65h, 0C0EC341h, 80EC641h, 40EC741h, 0A5B0B42h
		dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 100E0A67h
		dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 1Ch, 1B4h
		dd offset loc_577-2FDBh
		dd offset loc_64+5
		dd 300E4300h, 40E0A6Eh,	0A6B0B47h, 0B41040Eh, 18h, 1D4h
		dd offset loc_577-2F8Fh
		dd offset loc_53+4
		dd 300E4300h, 40E0A6Fh,	0B42h, 18h, 1F0h
		dd offset loc_577-2F53h
		dd offset _sha1_get_block_size+1
		dd 200E4300h, 40E0A5Fh,	0B42h, 18h, 20Ch
		dd offset loc_577-2F43h
		dd offset loc_2B+1
		dd 200E4300h, 40E0A5Fh,	0B45h, 18h, 228h
		dd offset loc_577-2F33h
		dd offset loc_2B+1
		dd 200E4300h, 40E0A5Fh,	0B45h, 20h, 244h
		dd offset loc_577-2F23h
		dd offset loc_3C+5
		dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4504h
		dd 20h,	268h
		dd offset loc_577-2F03h
		dd offset loc_3C+5
		dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4504h
		dd 18h,	28Ch
		dd offset loc_577-2EE3h
		dd offset _sha1_get_block_size
		dd 200E4300h, 40E0A5Fh,	0B41h, 18h, 2A8h
		dd offset loc_577-2ED7h
		dd offset _sha1_get_block_size
		dd 200E4300h, 40E0A5Fh,	0B41h, 18h, 2C4h
		dd offset loc_577-2ECBh
		dd offset _sha1_get_block_size
		dd 200E4300h, 40E0A5Fh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _md5_get_block_size+3r
					; _md5_get_block_size+14r ...
		extrn ___stack_chk_fail:near ; CODE XREF: _md5_get_block_size:loc_20p
					; _sha1_get_block_size:loc_48p	...
		extrn _g_checksum_new:near ; CODE XREF:	_sha1_init+1Ap
					; _md5_init+1Ap ...
		extrn _purple_cipher_context_set_data:near ; CODE XREF:	_sha1_init:loc_AFj
					; _md5_init:loc_4B3j ...
		extrn _g_checksum_type_get_length:near
					; CODE XREF: _purple_g_checksum_digest:loc_DFp
		extrn _purple_cipher_context_get_data:near
					; CODE XREF: _purple_g_checksum_digest:loc_E9p
					; _purple_g_checksum_append+20p ...
		extrn _g_checksum_get_digest:near ; CODE XREF: _purple_g_checksum_digest+4Dp
		extrn _purple_cipher_context_reset:near
					; CODE XREF: _purple_g_checksum_digest+5Dp
		extrn _g_return_if_fail_warning:near
					; CODE XREF: _purple_g_checksum_digest+9Fp
					; _purple_g_checksum_digest+BFp ...
		extrn _g_checksum_update:near ;	CODE XREF: _purple_g_checksum_append+3Fp
					; _purple_g_checksum_append+8Ej
		extrn _g_checksum_free:near ; CODE XREF: _purple_g_checksum_uninit:loc_365j
		extrn _g_checksum_reset:near
					; CODE XREF: _purple_g_checksum_reset_isra_3:loc_3BEp


		end

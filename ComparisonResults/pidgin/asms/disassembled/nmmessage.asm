;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	C2BC07C83304E304F329EF80E6988C69
; Input	CRC32 :	ABE7C8F0

; File Name   :	d:\pidgin-o\nmmessage.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _nm_create_message
_nm_create_message proc	near		; DATA XREF: .debug_info:00000213o
					; .debug_info:0000049Do ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	esi
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 0Ch
		call	_g_malloc0

loc_20:					; DATA XREF: .debug_info:000004CDo
		mov	ebx, eax

loc_22:					; DATA XREF: .debug_loc:off_934o
		test	esi, esi
		jz	short loc_31
		mov	[esp+2Ch+var_2C], esi

loc_29:					; DATA XREF: .debug_loc:00000938o
		call	_g_strdup

loc_2E:					; DATA XREF: .debug_info:000004E1o
					; .eh_frame:00000D0Co
		mov	[ebx+4], eax

loc_31:					; CODE XREF: _nm_create_message+24j
					; DATA XREF: .eh_frame:00000DA0o ...
		mov	dword ptr [ebx+8], 1
		mov	eax, ebx
		mov	edx, [esp+2Ch+var_10]

loc_3E:					; DATA XREF: .eh_frame:00000D74o
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4C
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_4C:					; CODE XREF: _nm_create_message+44j
		call	___stack_chk_fail
_nm_create_message endp

; ---------------------------------------------------------------------------
unk_51		db  8Dh	; ç		; DATA XREF: .debug_info:000004A1o
					; .debug_info:000004F6o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_message_add_ref
_nm_message_add_ref proc near		; DATA XREF: .debug_info:0000051Do
					; .debug_loc:off_968o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_57:					; DATA XREF: .debug_loc:0000096Co
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax

loc_69:					; DATA XREF: .eh_frame:00000D28o
		jz	short loc_6E
		inc	dword ptr [eax+8]

loc_6E:					; CODE XREF: _nm_message_add_ref:loc_69j
		mov	eax, [esp+1Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_7E
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_7E:					; CODE XREF: _nm_message_add_ref+24j
		call	___stack_chk_fail
_nm_message_add_ref endp

; ---------------------------------------------------------------------------
unk_83		db  90h	; ê		; DATA XREF: .debug_info:00000521o
					; .debug_info:0000053Do

; =============== S U B	R O U T	I N E =======================================


		public _nm_release_message
_nm_release_message proc near		; DATA XREF: .debug_info:0000055Eo
					; .debug_loc:off_9A0o

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_85:					; DATA XREF: .debug_loc:000009A4o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]

loc_8C:					; DATA XREF: .debug_info:0000022Co
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	ebx, ebx
		jz	short loc_D8
		dec	dword ptr [ebx+8]
		jnz	short loc_D8
		mov	eax, [ebx+4]
		test	eax, eax
		jz	short loc_AF
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_AF:					; CODE XREF: _nm_release_message+21j
					; DATA XREF: .debug_info:off_57Eo
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_BD
		mov	[esp+2Ch+var_2C], eax
		call	_nm_release_conference

loc_BD:					; CODE XREF: _nm_release_message+2Fj
					; DATA XREF: .debug_info:00000587o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_E9
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 28h
		pop	ebx
		jmp	_g_free
; ---------------------------------------------------------------------------
unk_D6		db  66h	; f		; DATA XREF: .debug_info:00000590o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_D8:					; CODE XREF: _nm_release_message+15j
					; _nm_release_message+1Aj
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_E9
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_E9:					; CODE XREF: _nm_release_message+43j
					; _nm_release_message+5Ej
					; DATA XREF: ...
		call	___stack_chk_fail
_nm_release_message endp

; ---------------------------------------------------------------------------
unk_EE		db  66h	; f		; DATA XREF: .debug_info:00000562o
					; .debug_info:0000059Ao
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


		public _nm_message_get_text
_nm_message_get_text proc near		; DATA XREF: .debug_info:000005C0o
					; .debug_loc:off_A14o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_F3:					; DATA XREF: .debug_loc:00000A18o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx

loc_103:				; DATA XREF: .debug_info:00000305o
		test	eax, eax
		jz	short loc_11A
		mov	eax, [eax+4]

loc_10A:				; CODE XREF: _nm_message_get_text+2Cj
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_11E
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_11A:				; CODE XREF: _nm_message_get_text+15j
		xor	eax, eax
		jmp	short loc_10A
; ---------------------------------------------------------------------------

loc_11E:				; CODE XREF: _nm_message_get_text+24j
		call	___stack_chk_fail
_nm_message_get_text endp

; ---------------------------------------------------------------------------
unk_123		db  90h	; ê		; DATA XREF: .debug_info:000005C4o
					; .debug_info:000005E0o

; =============== S U B	R O U T	I N E =======================================


		public _nm_message_set_conference
_nm_message_set_conference proc	near	; DATA XREF: .debug_info:00000608o
					; .debug_loc:off_A4Co

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_125:				; DATA XREF: .debug_loc:00000A50o
		push	ebx
		sub	esp, 24h
		mov	esi, [esp+2Ch+arg_0]
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		test	esi, esi
		jz	short loc_14E
		test	ebx, ebx
		jz	short loc_14E
		mov	[esp+2Ch+var_2C], ebx
		call	_nm_conference_add_ref

loc_14C:				; DATA XREF: .debug_info:00000637o
		mov	[esi], ebx

loc_14E:				; CODE XREF: _nm_message_set_conference+1Aj
					; _nm_message_set_conference+1Ej
		mov	eax, [esp+2Ch+var_10]

loc_152:				; DATA XREF: .debug_info:00000274o
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_160
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------

loc_160:				; CODE XREF: _nm_message_set_conference+34j
		call	___stack_chk_fail
_nm_message_set_conference endp

; ---------------------------------------------------------------------------
unk_165		db  8Dh	; ç		; DATA XREF: .debug_info:0000060Co
					; .debug_info:0000064Co
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


		public _nm_message_get_conference
_nm_message_get_conference proc	near	; DATA XREF: .debug_info:00000678o
					; .debug_loc:off_AB4o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_16B:				; DATA XREF: .debug_loc:00000AB8o
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], edx
		xor	edx, edx
		test	eax, eax
		jz	short loc_191
		mov	eax, [eax]

loc_181:				; CODE XREF: _nm_message_get_conference+2Bj
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_195
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_191:				; CODE XREF: _nm_message_get_conference+15j
		xor	eax, eax
		jmp	short loc_181
; ---------------------------------------------------------------------------

loc_195:				; CODE XREF: _nm_message_get_conference+23j
		call	___stack_chk_fail
_nm_message_get_conference endp

; ---------------------------------------------------------------------------
unk_19A		db  90h	; ê		; DATA XREF: .debug_info:00000217o
					; .debug_info:0000067Co ...
unk_19B		db  90h	; ê		; DATA XREF: .eh_frame:00000CD8o
					; .eh_frame:00000D08o ...
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 1A4h
off_1A4		dd offset off_5C0+3	; DATA XREF: .debug_aranges:00000AF2o
					; .debug_line:off_B0Co
		db 2, 0
		dd offset dword_76C
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
		dd 6D6D6E01h, 61737365h, 632E6567h, 5C3A4300h, 726F775Ch
		dd 6170736Bh, 5C5C6563h, 67646970h, 642D6E69h, 6C657665h
		dd 69705C5Ch, 6E696764h, 312E322Dh, 31312E30h, 696C5C5Ch
		dd 72757062h, 5C656C70h, 6F72705Ch, 6F636F74h, 5C5C736Ch
		dd 65766F6Eh
		db 2 dup(6Ch), 0
		dd offset _nm_create_message
		dd offset unk_19A
		dd offset off_B0C
		db 2
aNmmessage	db 'NMMessage',0        ; DATA XREF: .debug_info:00000260o
		dw 1802h
		dd offset loc_8C
		db    3
a_nmmessage	db '_NMMessage',0
		db  0Ch
		db 1, 17h, 0D8h
		db    0
		db 2 dup(0), 4
aConference	db 'conference',0
		db 1
		db  19h
		dd offset aSignedChar+8	; "har"
		db 2, 23h, 0
		db    4
aText		db 'text',0
		dw 1A01h
		dd offset aNmmessage+4	; "ssage"
		db    2
		db 23h,	2 dup(4)
aRef_count	db 'ref_count',0
		dw 1B01h
		dd offset loc_152+4
		db    2
		db 23h,	8, 0
		db    2
aNmconference	db 'NMConference',0
		dw 1803h
		dd offset loc_E9+3
		db    5
a_nmconference	db '_NMConference',0
		db 1
		db    6
		db 4, 5, 69h
		db  6Eh	; n
		db 74h,	0, 6
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 6
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
byte_2CD	db 6, 1, 6		; DATA XREF: .debug_info:000005BCo
aSignedChar	db 'signed char',0      ; DATA XREF: .debug_info:00000251o
					; .debug_info:00000674o
		db    6
		db 1, 8, 75h
aNsignedChar	db 'nsigned char',0
		db 6, 2, 5
aShortInt	db 'short int',0
		dw 6702h
aUint32		db 'uint32',0
		db 4
		db  27h	; '
		dd offset loc_103
		db 6, 8, 5
aLongLongInt	db 'long long int',0
		dw 806h
aLongLongUnsign	db 7,'long long unsigned int',0
dword_334	dd 69736702h, 400657Ah,	1035Ah,	7040600h, 657A6973h, 65707974h
					; DATA XREF: .debug_info:000004D5o
		dd 6010600h, 72616863h,	4080600h, 62756F64h, 700656Ch
		dd 5040604h, 676E6F6Ch,	746E6920h, 63670200h, 726168h
		dd 1A92D05h, 4060000h
aLongUnsignedIn	db 7,'long unsigned int',0
		db 6
		dd 6C660404h, 74616Fh, 6F706702h, 65746E69h, 4C050072h
		dd 1BBh, 20A0408h, 0C9090000h, 8000001h, 1C904h, 40C0600h
		dd 676E6F6Ch, 756F6420h, 656C62h, 1A90408h, 5F030000h
		dd 75626F69h, 6200066h,	2C181h,	705F0400h, 6007274h, 22483h
		dd 230200h, 6E635F04h, 84060074h, 0FCh,	4042302h, 7361625Fh
		dd 85060065h, 224h, 4082302h, 616C665Fh, 86060067h, 0FCh
		dd 40C2302h, 6C69665Fh,	87060065h, 0FCh, 4102302h, 6168635Fh
		dd 66756272h, 0FC880600h, 2000000h, 5F041423h, 73667562h
		dd 6007A69h, 0FC89h, 18230200h,	6D745F04h, 616E6670h, 600656Dh
		dd 2248Ah, 1C230200h, 49460200h, 600454Ch, 22A8Bh, 0D3040800h
		dd 9000002h, 1A9h, 0D80408h, 10A0000h
aNm_create_mess	db 'nm_create_message',0
		dw 2201h
		dd 35B01h
		db 0
		dd offset _nm_create_message
		dd offset unk_51
off_4A5		dd offset dword_8CC	; DATA XREF: .debug_info:0000063Fo
		db 1, 5Bh, 3
		dd 740B0000h, 747865h, 2CD2201h, 91020000h, 736D0C00h
		dd 24010067h, 35Bh
		dd offset off_934
		db 0Dh
		dd offset loc_20
		dd offset aD_ref+2	; "ref"
		dd offset dword_334+8
		db 0Eh,	2, 74h
		dd 3C0100h
		db 0Dh
		dd offset loc_2E
		dd offset dword_534
		dd offset dword_334+1Dh
		db 0Eh,	2, 74h
		dd 760200h
		db 0, 0Fh
		dd offset unk_51
		dd offset aE_message	; "e_message"
		dw 800h
		dd 7B04h, 6E011000h, 656D5F6Dh,	67617373h, 64615F65h
aD_ref		db 'd_ref',0            ; DATA XREF: .debug_info:000004D1o
		dw 2E01h
		db 1
		dd offset _nm_message_add_ref
		dd offset unk_83
		dd offset off_968
		db 1, 0A2h, 3
		dd 6D0B0000h, 1006773h
dword_534	dd 35B2Eh, 910200h	; DATA XREF: .debug_info:000004E5o
		db 0Fh
		dd offset unk_83
		dd offset aE_message	; "e_message"
		align 2
		dw 110h
		dd 725F6D6Eh, 61656C65h
		db 73h
aE_message	db 'e_message',0        ; DATA XREF: .debug_info:000004FAo
					; .debug_info:00000541o ...
		db 1
		db 35h,	1
		dd offset _nm_release_message
		dd offset unk_EE
off_566		dd offset off_9A0	; DATA XREF: .debug_info:00000582o
		dw 0FF01h
		dd 0B000003h, 67736Dh, 35B3501h, 91020000h
		db 0, 0Fh
off_57E		dd offset loc_AF	; DATA XREF: .debug_info:0000058Bo
		dd offset off_566+1
		db 0Fh
		dd offset loc_BD
		dd offset off_57E
		db 11h
		dd offset unk_D6
		dd 56701h
		db 0, 0Fh
		dd offset unk_EE
		dd offset aE_message	; "e_message"
		dw 0A00h
unk_5A4		db    1			; DATA XREF: .debug_info:0000063Bo
aNm_message_get	db 'nm_message_get_text',0
		db 1, 43h, 1
		dd offset byte_2CD
off_5C0		dd offset _nm_message_get_text ; DATA XREF: .debug_info:off_1A4o
		dd offset unk_123
		dd offset off_A14
		dd 44501h, 736D0B00h, 43010067h, 35Bh, 0F009102h
		dd offset unk_123
		dd offset aE_message	; "e_message"
		db    0
		db 10h,	1, 6Eh
aM_message_set_	db 'm_message_set_conference',0
		db 1, 4Ch, 1
		dd offset _nm_message_set_conference
		dd offset unk_165
		dd offset off_A4C
		dd 4B101h, 736D0B00h, 4C010067h, 35Bh, 0B009102h, 666E6F63h
		dd 0D84C0100h, 2000002h
		db 91h,	4, 0Dh
		dd offset loc_14C
		dd offset unk_5A4
		dd offset off_4A5+2
		db 0Eh
		dd 2007402h, 0F000073h
		dd offset unk_165
		dd offset aE_message	; "e_message"
		db    0
		db 0Ah,	1, 6Eh
aM_message_get_	db 'm_message_get_conference',0
		db 1, 5Ah, 1
		dd offset aSignedChar+8	; "har"
		dd offset _nm_message_get_conference
		dd offset unk_19A
		dd offset off_AB4
		dd 4FD01h, 736D0B00h, 5A010067h, 35Bh, 0F009102h
		dd offset unk_19A
		dd offset aE_message	; "e_message"
		dd 2C11200h, 5080000h, 130000h,	6F695F14h, 9A060062h, 4FDh
		dd 1150101h, 616D5F67h,	636F6C6Ch, 34070030h, 1F401h, 5340100h
		dd 90160000h, 1, 5F670115h, 64727473h, 8007075h, 20F01BDh
		dd 51010000h, 16000005h, 204h, 5F011700h, 6174735Fh, 635F6B63h
		dd 665F6B68h, 6C6961h, 18010101h, 665F6701h, 656572h, 1013707h
		dd 57Eh, 1F416h, 1180000h
aNm_release_con	db 'nm_release_conference',0
		dw 4303h
		db    1
		db 1, 0A4h, 5
		db    0
		align 2
		dw 0D816h
		db    2
		align 4
		db  19h
		db 1, 6Eh, 6Dh
a_conference_ad	db '_conference_add_ref',0
		dd 1013903h, 2D816h
		db 3 dup(0)
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 76Ch
dword_76C	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:000001AAo
		dd 8030016h, 0B3B0B3Ah,	1349h, 3011303h, 3A0B0B08h, 10B3B0Bh
		dd 4000013h, 803000Dh, 0B3B0B3Ah, 0A381349h, 13050000h
		dd 3C080300h, 600000Ch,	0B0B0024h, 8030B3Eh, 0F070000h
		dd 0B0B00h, 0F0800h, 13490B0Bh,	26090000h, 134900h, 12E0A00h
		dd 8030C3Fh, 0B3B0B3Ah,	13490C27h, 1120111h, 42970640h
		dd 13010Ch, 50B00h, 0B3A0803h, 13490B3Bh, 0A02h, 300340Ch
		dd 3B0B3A08h, 213490Bh,	0D000006h, 1018289h, 13310111h
		dd 1301h, 1828A0Eh, 910A0200h, 0A42h, 182890Fh,	31011100h
		dd 10000013h, 0C3F012Eh, 0B3A0803h, 0C270B3Bh, 1120111h
		dd 42970640h, 13010Ch, 82891100h, 1110001h, 310C4295h
		dd 12000013h, 13490101h, 1301h,	2113h, 341400h,	0B3A0803h
		dd 13490B3Bh, 0C3C0C3Fh, 2E150000h, 30C3F01h, 3B0B3A08h
		dd 490C270Bh, 10C3C13h,	16000013h, 13490005h, 2E170000h
		dd 30C3F00h, 340C2708h,	0C3C0Ch, 12E1800h, 8030C3Fh, 0B3B0B3Ah
		dd 0C3C0C27h, 1301h, 3F012E19h,	3A08030Ch, 270B3B0Bh, 0C3C0Ch
		db 2 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 8CCh
dword_8CC	dd 0			; DATA XREF: .debug_info:off_4A5o
		dd 1, 4740002h,	1, 2, 8740002h,	2, 5, 0C740002h, 5, 49h
		dd 30740002h, 49h, 4Ah,	0C740002h, 4Ah,	4Bh, 8740002h
		dd 4Bh,	4Ch, 4740002h, 4Ch, 51h, 30740002h, 2 dup(0)
off_934		dd offset loc_22	; DATA XREF: .debug_info:000004C8o
		dd offset loc_29+4
		dd 2D500001h, 46000000h, 1000000h, 465300h, 500000h, 10000h
		dd 5050h, 5100h, 53000100h, 2 dup(0)
off_968		dd offset _nm_message_add_ref ;	DATA XREF: .debug_info:00000525o
		dd offset loc_57
		dd 4740002h, 57h, 7Dh, 20740002h, 7Dh, 7Eh, 4740002h, 7Eh
		dd 83h,	20740002h, 2 dup(0)
off_9A0		dd offset _nm_release_message ;	DATA XREF: .debug_info:off_566o
		dd offset loc_85
		dd 4740002h, 85h, 88h, 8740002h, 88h, 0D0h, 30740002h
		dd 0D0h, 0D1h, 8740002h, 0D1h, 0D8h, 4740002h, 0D8h, 0E7h
		dd 30740002h, 0E7h, 0E8h, 8740002h, 0E8h, 0E9h,	4740002h
		dd 0E9h, 0EEh, 30740002h, 2 dup(0)
off_A14		dd offset _nm_message_get_text ; DATA XREF: .debug_info:000005C8o
		dd offset loc_F3
		dd 4740002h, 0F3h, 119h, 20740002h, 119h, 11Ah,	4740002h
		dd 11Ah, 123h, 20740002h, 2 dup(0)
off_A4C		dd offset _nm_message_set_conference ; DATA XREF: .debug_info:00000610o
		dd offset loc_125
		dd 4740002h, 125h, 126h, 8740002h, 126h, 129h, 0C740002h
		dd 129h, 15Dh, 30740002h, 15Dh,	15Eh, 0C740002h, 15Eh
		dd 15Fh, 8740002h, 15Fh, 160h, 4740002h, 160h, 165h, 30740002h
		dd 2 dup(0)
off_AB4		dd offset _nm_message_get_conference ; DATA XREF: .debug_info:00000680o
		dd offset loc_16B
		dd 4740002h, 16Bh, 190h, 20740002h, 190h, 191h,	4740002h
		dd 191h, 19Ah, 20740002h, 2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 0AECh
		dd 1Ch
		db 2, 0
		dd offset off_1A4
		dw 4
		dd 0
		dd offset _nm_create_message
		dd offset unk_19A
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 0B0Ch
off_B0C		dd offset off_1A4+2	; DATA XREF: .debug_info:0000021Bo
		dd 1550002h, 1010000h, 0D0EFBh,	1010101h, 1000000h, 2E010000h
		dd 2E2E2F2Eh, 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh
		dd 6B74672Fh, 305F325Fh, 312E322Dh, 696C2F34h, 6C672F62h
		dd 322D6269h, 692F302Eh, 756C636Eh, 2E006564h, 2E2E2F2Eh
		dd 2F2E2E2Fh, 772F2E2Eh, 32336E69h, 7665642Dh, 6B74672Fh
		dd 305F325Fh, 312E322Dh, 6E692F34h, 64756C63h, 6C672F65h
		dd 322D6269h, 672F302Eh, 62696Ch, 772F3A63h, 736B726Fh
		dd 65636170h, 6469702Fh, 2D6E6967h, 65766564h, 69772F6Ch
		dd 2D32336Eh, 2F766564h, 676E696Dh, 2E342D77h, 2F322E37h
		dd 2F6E6962h, 6C2F2E2Eh, 672F6269h, 6D2F6363h, 77676E69h
		dd 342F3233h, 322E372Eh, 2F2E2E2Fh, 2E2F2E2Eh, 2E2E2F2Eh
		dd 636E692Fh, 6564756Ch, 6D6E0000h, 7373656Dh, 2E656761h
		dd 63h,	6D6D6E00h, 61737365h, 682E6567h, 0
aNmconference_h	db 'nmconference.h',0
		align 4
		dd 6C670000h, 6F636269h, 6769666Eh, 100682Eh, 74670000h
		dd 73657079h, 200682Eh,	74730000h, 2E6F6964h, 30068h, 656D6700h
		dd 682E6Dh, 67000002h, 66727473h, 73636E75h, 200682Eh
		dd 0
		db 5, 2
		dd offset _nm_create_message
		dw 2203h
		dd 0D8AD9001h, 876AE4Bh, 4BBB74B0h, 825C083Dh, 40200ADh
		dd 64A0601h, 67847559h,	7648F484h, 0BB747808h, 4DEF3D4Dh
		dd 0ADC86Ah, 6010402h, 8450064Ah, 7494082Fh, 0EF2F4DBBh
		dd 5024Dh
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 0CB8h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch
		dd offset unk_19B-0E73h
		dd offset unk_51
		dd 80E4100h, 0E410286h,	4303830Ch, 4402300Eh, 410C0E0Ah
		dd 41080EC3h, 41040EC6h, 0Bh, 18h, 4Ch
		dd offset unk_19B-0E4Fh
		dd offset loc_2E+1
		dd 200E4300h, 40E0A66h,	0B41h, 2Ch, 68h
		dd offset unk_19B-0E3Bh
		dd offset loc_69+1
		dd 80E4100h, 0E430283h,	0A480230h, 0C341080Eh, 0B47040Eh
		dd 80E0A4Fh, 40EC341h, 0B41h, 18h, 98h
		dd offset unk_19B-0DFFh
		dd offset loc_31+2
		dd 200E4300h, 40E0A66h,	0B41h, 28h, 0B4h
		dd offset unk_19B-0DE7h
		dd offset loc_3E+3
		dd 80E4100h, 0E410286h,	4303830Ch, 0A74300Eh, 0C3410C0Eh
		dd 0C641080Eh, 0B41040Eh, 18h, 0E0h
		dd offset unk_19B-0DCFh
		dd offset loc_31+1
		dd 200E4300h, 40E0A65h,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _nm_create_message+9r
					; _nm_create_message:loc_3Er ...
		extrn _g_malloc0:near	; CODE XREF: _nm_create_message+1Bp
		extrn _g_strdup:near	; CODE XREF: _nm_create_message:loc_29p
		extrn ___stack_chk_fail:near ; CODE XREF: _nm_create_message:loc_4Cp
					; _nm_message_add_ref:loc_7Ep ...
		extrn _g_free:near	; CODE XREF: _nm_release_message+26p
					; _nm_release_message+4Dj
		extrn _nm_release_conference:near ; CODE XREF: _nm_release_message+34p
		extrn _nm_conference_add_ref:near
					; CODE XREF: _nm_message_set_conference+23p


		end

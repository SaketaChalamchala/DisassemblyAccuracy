;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	DCE1CE7AD228E1D1FED796B63234F6BC
; Input	CRC32 :	AC280B96

; File Name   :	d:\pidgin-o\endian.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _gg_fix64
_gg_fix64	proc near		; DATA XREF: .debug_info:000000F0o
					; .debug_info:000002AAo ...

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		sub	esp, 1Ch
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+arg_4]
		mov	ecx, [esp+1Ch+var_10]
		xor	ecx, dword ptr ds:___stack_chk_guard
		jnz	short loc_26
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_26:					; CODE XREF: _gg_fix64+20j
					; DATA XREF: .eh_frame:000005FCo ...
		call	___stack_chk_fail
_gg_fix64	endp

; ---------------------------------------------------------------------------
unk_2B		db  90h	; ê		; DATA XREF: .debug_info:000002AEo
					; .debug_info:off_2C8o	...

; =============== S U B	R O U T	I N E =======================================


		public _gg_fix32
_gg_fix32	proc near		; DATA XREF: .debug_info:000002E3o
					; .debug_loc:off_464o

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_2F:					; DATA XREF: .debug_loc:00000468o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4E
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_4E:					; CODE XREF: _gg_fix32+1Cj
		call	___stack_chk_fail
_gg_fix32	endp

; ---------------------------------------------------------------------------
unk_53		db  90h	; ê		; DATA XREF: .debug_info:000002E7o
					; .debug_info:00000301o

; =============== S U B	R O U T	I N E =======================================


		public _gg_fix16
_gg_fix16	proc near		; DATA XREF: .debug_info:0000031Co
					; .debug_loc:off_49Co

var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 1Ch

loc_57:					; DATA XREF: .debug_loc:000004A0o
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+1Ch+arg_0]
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_76
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_76:					; CODE XREF: _gg_fix16+1Cj
					; DATA XREF: .debug_info:00000181o ...
		call	___stack_chk_fail
_gg_fix16	endp

; ---------------------------------------------------------------------------
unk_7B		db  90h	; ê		; DATA XREF: .debug_info:000000F4o
					; .debug_info:00000320o ...
_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32

_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 84h
off_84		dd offset off_2EB	; DATA XREF: .debug_aranges:000004DAo
		db 2, 0
		dd offset dword_374
word_8E		dw 104h			; DATA XREF: .debug_info:00000230o
aGnuC4_7_2	db 'GNU C 4.7.2',0      ; DATA XREF: .debug_line:000004FAo
		db    1
aLibEndian_c	db 'lib/endian.c',0
aCWorkspacePidg	db 'C:\\workspace\\pidgin-devel\\pidgin-2.10.11\\libpurple\\protocols'
		db '\\gg',0
		dd offset _gg_fix64
		dd offset unk_7B
		dd offset off_4F4
		db    2
		db 4, 5, 69h
		db  6Eh	; n
		db 74h,	0, 2
		db    4
aUnsignedInt	db 7,'unsigned int',0
		db 2
		db    2
aShortUnsignedI	db 7,'short unsigned int',0
		db 2, 4, 5
aLongInt	db 'long int',0
		db 2, 8, 5
aLongLongInt	db 'long long int',0
		dw 202h
		db    5
aShortInt	db 'short int',0
		db 2
		db    1
		db 6, 63h, 68h
		db  61h	; a
		db 72h,	0, 3
a_iobuf		db '_iobuf',0
		db 20h
		db    2
		db 81h,	6Eh, 1
		db    0
		align 2
		dw 5F04h
		db  70h	; p
byte_16D	db 74h,	72h, 0		; DATA XREF: .debug_info:00000191o
		db    2
		db 83h,	6Eh, 1
unk_174		db    0			; DATA XREF: .debug_info:00000344o
		align 2
		dw 2302h
		db    0
		db 4, 5Fh, 63h
		db  6Eh	; n
		db 74h,	0, 2
		db  84h	; Ñ
		dd offset loc_76+2
		db 2, 23h, 4
		db    4
a_base		db '_base',0
		db 2
		db  85h	; Ö
		dd offset byte_16D+1
		db 2, 23h, 8
		db    4
a_flag		db '_flag',0
		db 2
unk_1A0		db  86h	; Ü		; DATA XREF: .debug_info:00000318o
		dd offset loc_76+2
		db 2, 23h, 0Ch
		db    4
a_file		db '_file',0
		db 2
		db  87h	; á
		dd offset loc_76+2
		db 2, 23h, 10h
		db    4
a_charbuf	db '_charbuf',0
		dw 8802h
		dd offset loc_76+2
		db    2
		db 23h,	14h, 4
a_bufsiz	db '_bufsiz',0          ; DATA XREF: .debug_info:00000250o
		db    2
		db 89h,	78h, 0
		db    0
		align 2
		dw 2302h
		db  18h
		db 4, 5Fh, 74h
aMpfname	db 'mpfname',0
		db    2
		db 8Ah,	6Eh, 1
		db    0
		align 2
		dw 2302h
		db  1Ch
		align 2
		dw 405h
		dd offset aCWorkspacePidg+25h ;	".10.11\\\\libpurple\\\\protocols\\\\gg"
		db    6
aFile		db 'FILE',0
		dw 8B02h
		dd offset aCWorkspacePidg+2Dh ;	"libpurple\\\\protocols\\\\gg"
		db    2
		db 1, 6, 73h
aIgnedChar	db 'igned char',0
		db 2
		db    1
aUnsignedChar	db 8,'unsigned char',0
		db    6
aUint16_t	db 'uint16_t',0
		dw 1E03h
		dd offset word_8E+1
		db    6
aUint32_t	db 'uint32_t',0
		dw 2003h
		dd offset unk_7F
		db    6
aUint64_t	db 'uint64_t',0
		dw 2203h
		dd offset a_bufsiz+4	; "siz"
		db    2
aLongLongUnsign	db 8,7,'long long unsigned int',0
		dw 402h
aSizetype	db 7,'sizetype',0
		dw 402h
aLongUnsignedIn	db 7,'long unsigned int',0 ; DATA XREF: .debug_info:000002F0o
		db 2
		dd 6C660404h, 74616Fh, 67670107h, 7869665Fh, 1003436h
		dd 1C0012Eh
		db 2 dup(0)
		dd offset _gg_fix64
		dd offset unk_2B
		dd offset dword_42C
		dw 4D01h
		dd 8000002h, 2E010078h,	1C0h, 9009102h
off_2C8		dd offset unk_2B	; DATA XREF: .debug_info:00000348o
		dd offset dword_2D8
		dd 67010700h, 69665F67h
dword_2D8	dd 323378h, 0B0014B01h	; DATA XREF: .debug_info:000002CCo
					; .debug_info:00000305o ...
		db 1, 2	dup(0)
		dd offset _gg_fix32
		dd offset unk_53
off_2EB		dd offset off_464	; DATA XREF: .debug_info:off_84o
		db 1
		dd offset aLongUnsignedIn+0Ah ;	"gned int"
		dd 1007808h, 1B04Bh, 910200h
		db 9
		dd offset unk_53
		dd offset dword_2D8
		align 2
		dw 107h
aGg_fix16	db 'gg_fix16',0
		db 1, 64h, 1
		dd offset unk_1A0
		dd offset _gg_fix16
		dd offset unk_7B
		dd offset off_49C
		dd 2BF01h, 780800h, 1A06401h, 91020000h
		db 0, 9
		dd offset unk_7B
		dd offset dword_2D8
		dw 0A00h
		dd offset unk_174
		dd offset off_2C8+2
		dd 5F0C000Bh, 626F69h, 2BF9A02h, 1010000h, 5F5F010Dh, 63617473h
		dd 68635F6Bh, 61665F6Bh, 1006C69h
		db 2 dup(1), 0
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 374h
dword_374	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:0000008Ao
		dd 0B0B0024h, 8030B3Eh,	13030000h, 0B080301h, 3B0B3A0Bh
		dd 13010Bh, 0D0400h, 0B3A0803h,	13490B3Bh, 0A38h, 0B000F05h
		dd 13490Bh, 160600h, 0B3A0803h,	13490B3Bh, 2E070000h, 30C3F01h
		dd 3B0B3A08h, 490C270Bh, 12011113h, 97064001h, 13010C42h
		dd 5080000h, 3A080300h,	490B3B0Bh, 0A0213h, 82890900h
		dd 1110001h, 1331h, 4901010Ah, 130113h,	210B00h, 340C0000h
		dd 3A080300h, 490B3B0Bh, 3C0C3F13h, 0D00000Ch, 0C3F002Eh
		dd 0C270803h, 0C3C0C34h
		db 3 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 42Ch
dword_42C	dd 0			; DATA XREF: .debug_info:000002B2o
		dd 3, 4740002h,	3, 25h,	20740002h, 25h,	26h, 4740002h
		dd 26h,	2Bh, 20740002h,	2 dup(0)
off_464		dd offset _gg_fix32	; DATA XREF: .debug_info:off_2EBo
		dd offset loc_2F
		dd 4740002h, 2Fh, 4Dh, 20740002h, 4Dh, 4Eh, 4740002h, 4Eh
		dd 53h,	20740002h, 2 dup(0)
off_49C		dd offset _gg_fix16	; DATA XREF: .debug_info:00000324o
		dd offset loc_57
		dd 4740002h, 57h, 75h, 20740002h, 75h, 76h, 4740002h, 76h
		dd 7Bh,	20740002h, 2 dup(0)
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 4D4h
		dd 1Ch
		db 2, 0
		dd offset off_84
		dw 4
		dd 0
		dd offset _gg_fix64
		dd offset unk_7B
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 4F4h
off_4F4		dd offset aCWorkspacePidg+18h ;	DATA XREF: .debug_info:000000F8o
					; "vel\\\\pidgin-2.10.11\\\\libpurple\\\\p"...
		db    2
		align 2
		dd offset aGnuC4_7_2+0Bh ; ""
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6C01h
		db  69h	; i
		db 62h,	0, 63h
aWorkspacePidgi	db ':/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/min'
		db 'gw32/4.7.2/../../../../include',0
		dd 646E6500h, 2E6E6169h, 10063h, 64747300h, 682E6F69h
		dd 200h, 69647473h, 682E746Eh, 200h, 2050000h
		dd offset _gg_fix64
		dd 3C012E03h, 3AC0E03h,	3CC8080Fh, 3AC0A03h, 3C90080Fh
		dd 1902B4h
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 5BCh
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch
		dd offset unk_7B-657h
		dd offset unk_2B
		dd 200E4300h, 40E0A62h,	0B41h, 18h, 38h
		dd offset unk_7B-647h
		dd offset loc_26+1
		dd 200E4300h, 40E0A5Eh,	0B41h, 18h, 54h
		dd offset unk_7B-63Bh
		dd offset loc_26+1
		dd 200E4300h, 40E0A5Eh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _gg_fix64+3r
					; _gg_fix64+1Ar ...
		extrn ___stack_chk_fail:near ; CODE XREF: _gg_fix64:loc_26p
					; _gg_fix32:loc_4Ep ...


		end

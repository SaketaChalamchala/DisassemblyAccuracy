;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-3677-7074-51			    |
; |		Michalis Polychronakis,	Stony Brook University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7330B3DE90F66B032FE3202455658E31
; Input	CRC32 :	DAAA996B

; File Name   :	d:\pidgin-o\hmac.o
; Format      :	COFF (X386MAGIC)

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


_hmac_get_block_size proc near		; DATA XREF: .data:00000640o
					; .debug_info:00000717o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		sub	esp, 2Ch
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_1A:					; DATA XREF: .debug_info:00000E1Co
		mov	eax, [eax+8]
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard

loc_27:					; DATA XREF: .eh_frame:000029DCo
		jnz	short loc_2D
		add	esp, 2Ch
		retn
; ---------------------------------------------------------------------------

loc_2D:					; CODE XREF: _hmac_get_block_size:loc_27j
		call	___stack_chk_fail
_hmac_get_block_size endp

; ---------------------------------------------------------------------------
unk_32		db  66h	; f		; DATA XREF: .debug_info:00000DF1o
					; .debug_info:00000E32o ...
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_hmac_uninit	proc near		; DATA XREF: .data:00000610o
					; .debug_info:00000E4Bo ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_35:					; DATA XREF: .debug_loc:00001D43o
		sub	esp, 28h
		mov	ebx, [esp+2Ch+arg_0]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax

loc_47:					; DATA XREF: .eh_frame:0000281Co
					; .eh_frame:000028C0o
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], ebx

loc_52:					; DATA XREF: .eh_frame:00002908o
					; .eh_frame:00002938o
		call	_purple_cipher_context_reset

loc_57:					; DATA XREF: .debug_info:00000E7Ao
		mov	[esp+2Ch+var_2C], ebx
		call	_purple_cipher_context_get_data

loc_5F:					; DATA XREF: .debug_info:00000E95o
					; .debug_loc:off_1D8Fo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_78

loc_6B:					; DATA XREF: .debug_info:00000DB0o
					; .debug_info:off_FA0o	...
		mov	[esp+2Ch+arg_0], eax
		add	esp, 28h

loc_72:					; DATA XREF: .eh_frame:000028E4o
		pop	ebx

loc_73:					; DATA XREF: .debug_loc:00001D93o
		jmp	_g_free
; ---------------------------------------------------------------------------

loc_78:					; CODE XREF: _hmac_uninit+35j
					; DATA XREF: .debug_info:00000EAAo
		call	___stack_chk_fail
_hmac_uninit	endp

; ---------------------------------------------------------------------------
unk_7D		db  8Dh	; ç		; DATA XREF: .debug_info:00000E4Fo
					; .debug_info:00000EB4o
		db  76h	; v
unk_7F		db    0			; DATA XREF: .eh_frame:000029A0o

; =============== S U B	R O U T	I N E =======================================


_hmac_digest	proc near		; DATA XREF: .data:0000061Co
					; .debug_info:00000ED1o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch
arg_C		= dword	ptr  10h

		push	ebp

loc_81:					; DATA XREF: .debug_loc:00001DB1o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	edx, [esp+4Ch+arg_4]
		mov	[esp+4Ch+var_34], edx
		mov	edx, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_30], edx

loc_97:					; DATA XREF: .eh_frame:00002968o
		mov	ebp, [esp+4Ch+arg_C]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+4Ch+arg_0]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_get_data

loc_B2:					; DATA XREF: .debug_info:00000FAAo
		mov	edi, eax

loc_B4:					; DATA XREF: .debug_loc:off_1E47o
		mov	ebx, [eax]

loc_B6:					; DATA XREF: .debug_info:00000F8Do
					; .debug_loc:off_1E86o
		test	ebx, ebx
		jz	loc_174

loc_BE:					; DATA XREF: .debug_info:00000F91o
					; .debug_loc:off_1F00o
		mov	[esp+4Ch+var_4C], 64h ;	'd'

loc_C5:					; DATA XREF: .debug_loc:00001E4Bo
		call	_g_malloc

loc_CA:					; DATA XREF: .debug_info:00000FC0o
		mov	esi, eax

loc_CC:					; DATA XREF: .debug_loc:off_1EA4o
		lea	eax, [esp+4Ch+var_24]

loc_D0:					; DATA XREF: .debug_loc:00001EA8o
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], esi
		mov	[esp+4Ch+var_48], 64h ;	'd'
		mov	[esp+4Ch+var_4C], ebx
		call	_purple_cipher_context_digest

loc_E8:					; DATA XREF: .debug_info:00000FD5o
					; .debug_loc:off_1EEDo
		mov	[esp+4Ch+var_48], 0
		mov	[esp+4Ch+var_4C], ebx
		mov	[esp+4Ch+var_38], eax

loc_F7:					; DATA XREF: .debug_loc:00001EF1o
		call	_purple_cipher_context_reset

loc_FC:					; DATA XREF: .debug_info:00000FFFo
		mov	edx, [edi+8]
		mov	[esp+4Ch+var_44], edx
		mov	edx, [edi+0Ch]
		mov	[esp+4Ch+var_48], edx
		mov	[esp+4Ch+var_4C], ebx
		call	_purple_cipher_context_append

loc_112:				; DATA XREF: .debug_info:0000101Ao
					; .debug_loc:off_1ECDo
		mov	edx, [esp+4Ch+var_24]

loc_116:				; DATA XREF: .debug_info:00000DBDo
					; .debug_info:000012FCo ...
		mov	[esp+4Ch+var_44], edx
		mov	[esp+4Ch+var_48], esi
		mov	[esp+4Ch+var_4C], ebx
		call	_purple_cipher_context_append

loc_126:				; DATA XREF: .debug_info:0000102Fo
		mov	[esp+4Ch+var_4C], esi
		call	_g_free

loc_12E:				; DATA XREF: .debug_info:off_104Bo
		mov	eax, [esp+4Ch+var_38]
		test	eax, eax
		jnz	short loc_14C

loc_136:				; CODE XREF: _hmac_digest+F0j
					; _hmac_digest+112j
					; DATA XREF: ...
		mov	edx, [esp+4Ch+var_20]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_194
		add	esp, 3Ch
		pop	ebx

loc_146:				; DATA XREF: .debug_loc:00001E8Ao
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_14C:				; CODE XREF: _hmac_digest+B4j
		mov	[esp+4Ch+var_40], ebp

loc_150:				; DATA XREF: .debug_info:00000F74o
		mov	edx, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_44], edx
		mov	edx, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_48], edx
		mov	[esp+4Ch+var_4C], ebx
		call	_purple_cipher_context_digest

loc_168:				; DATA XREF: .debug_info:00001060o
		test	eax, eax
		setnz	al
		movzx	eax, al
		jmp	short loc_136
; ---------------------------------------------------------------------------
unk_172		db  66h	; f		; DATA XREF: .debug_loc:00001ED1o
		db  90h	; ê
; ---------------------------------------------------------------------------

loc_174:				; CODE XREF: _hmac_digest+38j
		mov	[esp+4Ch+var_44], offset aHashNull ; "hash != NULL"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___14864 ; "hmac_digest"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_190:				; DATA XREF: .debug_info:0000108Co
		xor	eax, eax
		jmp	short loc_136
; ---------------------------------------------------------------------------

loc_194:				; CODE XREF: _hmac_digest+C0j
		call	___stack_chk_fail
_hmac_digest	endp

; ---------------------------------------------------------------------------
unk_199		db  8Dh	; ç		; DATA XREF: .debug_info:off_ED5o
					; .debug_info:off_10B4o ...
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_hmac_set_key_with_len proc near	; CODE XREF: _hmac_set_key+2Ep
					; DATA XREF: .data:00000644o ...

var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	ebp

loc_19D:				; DATA XREF: .debug_loc:00001F30o
		push	edi
		push	esi
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [esp+4Ch+arg_4]
		mov	eax, [esp+4Ch+arg_8]
		mov	[esp+4Ch+var_30], eax
		mov	eax, dword ptr ds:___stack_chk_guard

loc_1B4:				; DATA XREF: .eh_frame:00002880o
		mov	[esp+4Ch+var_20], eax
		xor	eax, eax
		mov	eax, [esp+4Ch+arg_0]

loc_1BE:				; DATA XREF: .debug_line:000024FAo
		mov	[esp+4Ch+var_4C], eax

loc_1C1:				; DATA XREF: .debug_info:0000197Do
		call	_purple_cipher_context_get_data

loc_1C6:				; DATA XREF: .debug_info:00001199o
		mov	esi, eax

loc_1C8:				; DATA XREF: .debug_info:0000117Co
					; .debug_loc:off_1FE6o
		mov	ecx, [eax]
		test	ecx, ecx

loc_1CC:				; DATA XREF: .debug_info:00001995o
		jz	loc_32C

loc_1D2:				; DATA XREF: .debug_info:00001180o
					; .debug_loc:off_20E2o
		mov	eax, [eax+0Ch]

loc_1D5:				; DATA XREF: .debug_loc:00001FEAo
		mov	[esp+4Ch+var_4C], eax
		call	_g_free

loc_1DD:				; DATA XREF: .debug_info:000011AFo
		mov	eax, [esi+8]
		mov	[esp+4Ch+var_34], eax

loc_1E4:				; DATA XREF: .debug_loc:off_2025o
					; .debug_info:00001708o
		mov	[esp+4Ch+var_4C], eax

loc_1E7:				; DATA XREF: .debug_loc:00002029o
					; .debug_loc:00002030o
		call	_g_malloc

loc_1EC:				; DATA XREF: .debug_info:000011B8o
		mov	ebp, eax

loc_1EE:				; DATA XREF: .debug_loc:off_206Fo
		mov	eax, [esp+4Ch+var_34]

loc_1F2:				; DATA XREF: .debug_loc:00002073o
		mov	[esp+4Ch+var_4C], eax
		call	_g_malloc

loc_1FA:				; DATA XREF: .debug_info:000011CEo
		mov	[esi+0Ch], eax
		mov	eax, [esp+4Ch+var_30]
		cmp	[esp+4Ch+var_34], eax
		jb	loc_2A4
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ebx
		call	_g_memdup

loc_217:				; DATA XREF: .debug_info:000011E4o
		mov	ebx, eax

loc_219:				; DATA XREF: .debug_loc:off_2098o
		mov	eax, [esp+4Ch+var_34]

loc_21D:				; DATA XREF: .debug_loc:0000209Co
		cmp	eax, [esp+4Ch+var_30]
		ja	loc_306

loc_227:				; CODE XREF: _hmac_set_key_with_len+164j
					; _hmac_set_key_with_len+18Aj
					; DATA XREF: ...
		xor	eax, eax
		mov	edx, [esp+4Ch+var_34]
		test	edx, edx
		jle	short loc_251

loc_231:				; DATA XREF: .debug_loc:00002054o
		lea	esi, [esi+0]

loc_234:				; CODE XREF: _hmac_set_key_with_len+B3j
		mov	dl, [ebx+eax]
		xor	edx, 36h
		mov	[ebp+eax+0], dl
		mov	ecx, [esi+0Ch]
		mov	dl, [ebx+eax]
		xor	edx, 5Ch
		mov	[ecx+eax], dl
		inc	eax
		cmp	eax, [esp+4Ch+var_34]
		jnz	short loc_234

loc_251:				; CODE XREF: _hmac_set_key_with_len+93j
		mov	[esp+4Ch+var_4C], ebx
		call	_g_free

loc_259:				; DATA XREF: .debug_info:000011F9o
		mov	[esp+4Ch+var_48], 0
		mov	eax, [esi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_reset

loc_26B:				; DATA XREF: .debug_info:0000120Eo
		mov	eax, [esp+4Ch+var_34]
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], ebp
		mov	eax, [esi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_append

loc_281:				; DATA XREF: .debug_info:off_1222o
		mov	[esp+4Ch+var_4C], ebp
		call	_g_free

loc_289:				; CODE XREF: _hmac_set_key_with_len:loc_348j
					; DATA XREF: .debug_info:0000123Fo ...
		mov	eax, [esp+4Ch+var_20]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	loc_34D

loc_299:				; DATA XREF: .debug_line:off_24F4o
		add	esp, 3Ch
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
; ---------------------------------------------------------------------------
		align 4

loc_2A4:				; CODE XREF: _hmac_set_key_with_len+69j
		mov	[esp+4Ch+var_48], 0
		mov	eax, [esi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_reset

loc_2B6:				; DATA XREF: .debug_info:00001254o
		mov	eax, [esp+4Ch+var_30]

loc_2BA:				; DATA XREF: .debug_loc:00001FCAo
		mov	[esp+4Ch+var_44], eax
		mov	[esp+4Ch+var_48], ebx
		mov	eax, [esi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_append

loc_2CC:				; DATA XREF: .debug_info:00001268o
		mov	[esp+4Ch+var_4C], 64h ;	'd'
		call	_g_malloc

loc_2D8:				; DATA XREF: .debug_info:0000127Do
		mov	ebx, eax
		lea	eax, [esp+4Ch+var_30]
		mov	[esp+4Ch+var_40], eax
		mov	[esp+4Ch+var_44], ebx
		mov	[esp+4Ch+var_48], 64h ;	'd'
		mov	eax, [esi]
		mov	[esp+4Ch+var_4C], eax
		call	_purple_cipher_context_digest

loc_2F8:				; DATA XREF: .debug_info:00001292o
		mov	eax, [esp+4Ch+var_34]
		cmp	eax, [esp+4Ch+var_30]
		jbe	loc_227

loc_306:				; CODE XREF: _hmac_set_key_with_len+85j
		mov	[esp+4Ch+var_48], eax
		mov	[esp+4Ch+var_4C], ebx
		call	_g_realloc

loc_312:				; DATA XREF: .debug_info:000012B5o
		mov	ebx, eax
		mov	edx, [esp+4Ch+var_30]
		mov	ecx, [esp+4Ch+var_34]
		sub	ecx, edx
		add	edx, eax
		xor	eax, eax
		mov	edi, edx
		rep stosb
		jmp	loc_227
; ---------------------------------------------------------------------------
		align 4

loc_32C:				; CODE XREF: _hmac_set_key_with_len:loc_1CCj
		mov	[esp+4Ch+var_44], offset aHctxHashNull ; "hctx->hash !=	NULL"
		mov	[esp+4Ch+var_48], offset ___PRETTY_FUNCTION___14881 ; "hmac_set_key_with_len"
		mov	[esp+4Ch+var_4C], 0
		call	_g_return_if_fail_warning

loc_348:				; DATA XREF: .debug_info:000012CAo
		jmp	loc_289
; ---------------------------------------------------------------------------

loc_34D:				; CODE XREF: _hmac_set_key_with_len+F7j
		call	___stack_chk_fail
_hmac_set_key_with_len endp

; ---------------------------------------------------------------------------
unk_352		db  66h	; f		; DATA XREF: .debug_info:000010E0o
					; .debug_info:000012F2o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_hmac_set_key	proc near		; DATA XREF: .data:00000630o
					; .debug_info:00001321o ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	edi

loc_355:				; DATA XREF: .debug_loc:00002112o
		sub	esp, 28h
		mov	edx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	ecx, 0FFFFFFFFh
		mov	edi, edx
		repne scasb

loc_370:				; DATA XREF: .debug_loc:00002162o
		not	ecx
		dec	ecx
		mov	[esp+2Ch+var_24], ecx
		mov	[esp+2Ch+var_28], edx
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_hmac_set_key_with_len

loc_387:				; DATA XREF: .debug_info:00001350o
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_398
		add	esp, 28h
		pop	edi
		retn
; ---------------------------------------------------------------------------

loc_398:				; CODE XREF: _hmac_set_key+3Dj
		call	___stack_chk_fail
_hmac_set_key	endp

; ---------------------------------------------------------------------------
unk_39D		db  8Dh	; ç		; DATA XREF: .debug_info:off_1325o
					; .debug_info:0000136Eo
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_hmac_reset	proc near		; DATA XREF: .data:0000060Co
					; .debug_info:00001386o ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4

		push	ebx

loc_3A1:				; DATA XREF: .debug_loc:00002176o
		sub	esp, 28h
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_3BB:				; DATA XREF: .debug_info:000013C5o
		mov	ebx, eax

loc_3BD:				; DATA XREF: .debug_loc:off_21C2o
		mov	eax, [eax+4]

loc_3C0:				; DATA XREF: .debug_loc:000021C6o
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_3C8:				; DATA XREF: .debug_info:000013DBo
		mov	dword ptr [ebx+4], 0
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_3DD
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_destroy

loc_3DD:				; CODE XREF: _hmac_reset+33j
					; DATA XREF: .debug_info:000013E4o
		mov	dword ptr [ebx], 0
		mov	dword ptr [ebx+8], 0
		mov	eax, [ebx+0Ch]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_3F5:				; DATA XREF: .debug_info:000013EDo
		mov	dword ptr [ebx+0Ch], 0
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_40D
		add	esp, 28h
		pop	ebx
		retn
; ---------------------------------------------------------------------------

loc_40D:				; CODE XREF: _hmac_reset+66j
		call	___stack_chk_fail
_hmac_reset	endp

; ---------------------------------------------------------------------------
unk_412		db  66h	; f		; DATA XREF: .debug_info:0000138Ao
					; .debug_info:000013F6o
		db  90h	; ê

; =============== S U B	R O U T	I N E =======================================


_hmac_init	proc near		; DATA XREF: .data:00000608o
					; .debug_info:0000140Do ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_415:				; DATA XREF: .debug_loc:000021EFo
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_0]
		mov	esi, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	[esp+2Ch+var_2C], 10h
		call	_g_malloc0

loc_438:				; DATA XREF: .debug_info:0000144Co
					; .debug_loc:off_2253o
		mov	[esp+2Ch+var_28], eax
		mov	[esp+2Ch+var_2C], ebx

loc_43F:				; DATA XREF: .debug_loc:00002257o
		call	_purple_cipher_context_set_data

loc_444:				; DATA XREF: .debug_info:00000D74o
					; .debug_info:00000F38o ...
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_462
		mov	[esp+2Ch+arg_4], esi
		mov	[esp+2Ch+arg_0], ebx
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_purple_cipher_context_reset
; ---------------------------------------------------------------------------

loc_462:				; CODE XREF: _hmac_init+3Aj
					; DATA XREF: .debug_info:00001475o
		call	___stack_chk_fail
_hmac_init	endp

; ---------------------------------------------------------------------------
unk_467		db  90h	; ê		; DATA XREF: .debug_info:00001411o
					; .debug_info:0000147Fo

; =============== S U B	R O U T	I N E =======================================


_hmac_get_opt	proc near		; DATA XREF: .data:00000604o
					; .debug_info:0000149Do ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8

		push	esi

loc_469:				; DATA XREF: .debug_loc:0000226Ao
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_488:				; DATA XREF: .debug_info:000014DBo
		mov	esi, eax

loc_48A:				; DATA XREF: .debug_loc:off_22CEo
					; .debug_loc:00002168o
		mov	[esp+2Ch+var_28], offset aHash ; "hash"
		mov	[esp+2Ch+var_2C], ebx

loc_495:				; DATA XREF: .debug_loc:000022D2o
		call	_purple_strequal

loc_49A:				; DATA XREF: .debug_info:000014F1o
		test	eax, eax
		jz	short loc_4B4
		mov	eax, [esi+4]

loc_4A1:				; CODE XREF: _hmac_get_opt+4Ej
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_4B8
		add	esp, 24h
		pop	ebx
		pop	esi
		retn
; ---------------------------------------------------------------------------
		align 4

loc_4B4:				; CODE XREF: _hmac_get_opt+34j
		xor	eax, eax
		jmp	short loc_4A1
; ---------------------------------------------------------------------------

loc_4B8:				; CODE XREF: _hmac_get_opt+43j
		call	___stack_chk_fail
_hmac_get_opt	endp

; ---------------------------------------------------------------------------
unk_4BD		db  8Dh	; ç		; DATA XREF: .debug_info:000014A1o
					; .debug_info:00001510o
		db  76h	; v
		db    0

; =============== S U B	R O U T	I N E =======================================


_hmac_set_opt	proc near		; DATA XREF: .data:_HMACOpso
					; .debug_info:0000152Ao ...

var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	edi

loc_4C1:				; DATA XREF: .debug_loc:000022FBo
		push	esi
		push	ebx
		sub	esp, 20h
		mov	esi, [esp+2Ch+arg_4]
		mov	edi, [esp+2Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_4E5:				; DATA XREF: .debug_info:00001578o
		mov	ebx, eax

loc_4E7:				; DATA XREF: .debug_loc:off_2377o
		mov	[esp+2Ch+var_28], offset aHash ; "hash"
		mov	[esp+2Ch+var_2C], esi

loc_4F2:				; DATA XREF: .debug_loc:0000237Bo
		call	_purple_strequal

loc_4F7:				; DATA XREF: .debug_info:0000158Eo
		test	eax, eax
		jnz	short loc_510

loc_4FB:				; CODE XREF: _hmac_set_opt+91j
		mov	eax, [esp+2Ch+var_10]
		xor	eax, dword ptr ds:___stack_chk_guard
		jnz	short loc_553
		add	esp, 20h
		pop	ebx
		pop	esi
		pop	edi
		retn
; ---------------------------------------------------------------------------
		align 10h

loc_510:				; CODE XREF: _hmac_set_opt+39j
		mov	eax, [ebx+4]
		mov	[esp+2Ch+var_2C], eax
		call	_g_free

loc_51B:				; DATA XREF: .debug_info:000015ADo
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_529
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_destroy

loc_529:				; CODE XREF: _hmac_set_opt+5Fj
					; DATA XREF: .debug_info:000015B6o
		mov	[esp+2Ch+var_2C], edi
		call	_g_strdup

loc_531:				; DATA XREF: .debug_info:000015BFo
		mov	[ebx+4], eax
		mov	[esp+2Ch+var_28], 0
		mov	[esp+2Ch+var_2C], edi
		call	_purple_cipher_context_new_by_name

loc_544:				; DATA XREF: .debug_info:000015D4o
		mov	[ebx], eax
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_block_size

loc_54E:				; DATA XREF: .debug_info:000015EFo
		mov	[ebx+8], eax
		jmp	short loc_4FB
; ---------------------------------------------------------------------------

loc_553:				; CODE XREF: _hmac_set_opt+45j
		call	___stack_chk_fail
_hmac_set_opt	endp


; =============== S U B	R O U T	I N E =======================================


_hmac_append	proc near		; DATA XREF: .data:00000618o
					; .debug_info:0000152Eo ...

var_2C		= dword	ptr -2Ch
var_10		= dword	ptr -10h
arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		push	esi

loc_559:				; DATA XREF: .debug_loc:000023A4o
		push	ebx
		sub	esp, 24h
		mov	ebx, [esp+2Ch+arg_4]
		mov	esi, [esp+2Ch+arg_8]
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+2Ch+var_10], eax
		xor	eax, eax
		mov	eax, [esp+2Ch+arg_0]
		mov	[esp+2Ch+var_2C], eax
		call	_purple_cipher_context_get_data

loc_57C:				; DATA XREF: .debug_info:00001644o
					; .debug_info:0000169Eo ...
		mov	eax, [eax]

loc_57E:				; DATA XREF: .debug_loc:0000243Co
		test	eax, eax
		jz	short loc_5A4

loc_582:				; DATA XREF: .debug_info:00001648o
					; .debug_loc:off_244Bo
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_5D2
		mov	[esp+2Ch+arg_8], esi
		mov	[esp+2Ch+arg_4], ebx
		mov	[esp+2Ch+arg_0], eax
		add	esp, 24h
		pop	ebx
		pop	esi
		jmp	_purple_cipher_context_append
; ---------------------------------------------------------------------------

loc_5A4:				; CODE XREF: _hmac_append+28j
					; DATA XREF: .debug_info:0000165Fo ...
		mov	edx, [esp+2Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_5D2
		mov	[esp+2Ch+arg_8], offset	aHctxHashNull ;	"hctx->hash != NULL"
		mov	[esp+2Ch+arg_4], offset	___PRETTY_FUNCTION___14850 ; "hmac_append"
		mov	[esp+2Ch+arg_0], 0

loc_5C8:				; DATA XREF: .debug_ranges:000024C8o
					; .debug_ranges:000024E0o
		add	esp, 24h
		pop	ebx
		pop	esi

loc_5CD:				; DATA XREF: .debug_ranges:000024CCo
					; .debug_ranges:000024E4o
		jmp	_g_return_if_fail_warning
; ---------------------------------------------------------------------------

loc_5D2:				; CODE XREF: _hmac_append+34j
					; _hmac_append+56j
					; DATA XREF: ...
		call	___stack_chk_fail
_hmac_append	endp

; ---------------------------------------------------------------------------
unk_5D7		db  90h	; ê		; DATA XREF: .debug_info:0000160Ao
					; .debug_info:000016BEo

; =============== S U B	R O U T	I N E =======================================


		public _purple_hmac_cipher_get_ops
_purple_hmac_cipher_get_ops proc near	; DATA XREF: .debug_info:000016EBo
					; .debug_loc:off_246Bo

var_10		= dword	ptr -10h

		sub	esp, 1Ch

loc_5DB:				; DATA XREF: .debug_loc:0000246Fo
		mov	eax, dword ptr ds:___stack_chk_guard
		mov	[esp+1Ch+var_10], eax
		xor	eax, eax
		mov	eax, offset _HMACOps
		mov	edx, [esp+1Ch+var_10]
		xor	edx, dword ptr ds:___stack_chk_guard
		jnz	short loc_5FB
		add	esp, 1Ch
		retn
; ---------------------------------------------------------------------------

loc_5FB:				; CODE XREF: _purple_hmac_cipher_get_ops+1Dj
					; DATA XREF: .debug_info:0000071Bo ...
		call	___stack_chk_fail
_purple_hmac_cipher_get_ops endp

_text		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
; Segment alignment '32byte' can not be represented in assembly
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 600h
_HMACOps	dd offset _hmac_set_opt	; DATA XREF: _purple_hmac_cipher_get_ops+Eo
					; .debug_info:0000171Do ...
		dd offset _hmac_get_opt
		dd offset _hmac_init
		dd offset _hmac_reset
		dd offset _hmac_uninit
		align 8
		dd offset _hmac_append
		dd offset _hmac_digest
		dd 4 dup(0)
		dd offset _hmac_set_key
		dd 3 dup(0)
		dd offset _hmac_get_block_size
		dd offset _hmac_set_key_with_len
		dd 3 dup(0)
		db 3 dup(0)
		db    0			; DATA XREF: .debug_info:00000DB8o
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 664h
aHashNull	db 'hash != NULL',0     ; DATA XREF: _hmac_digest:loc_174o
					; .debug_info:000010AEo
aHctxHashNull	db 'hctx->hash != NULL',0 ; DATA XREF: _hmac_set_key_with_len:loc_32Co
					; _hmac_append+58o ...
aHash		db 'hash',0             ; DATA XREF: _hmac_get_opt:loc_48Ao
					; _hmac_set_opt:loc_4E7o ...
___PRETTY_FUNCTION___14881 db 'hmac_set_key_with_len',0
					; DATA XREF: _hmac_set_key_with_len+198o
					; .debug_info:00001177o ...
___PRETTY_FUNCTION___14864 db 'hmac_digest',0 ; DATA XREF: _hmac_digest+FCo
					; .debug_info:00000F88o ...
___PRETTY_FUNCTION___14850 db 'hmac_append',0 ; DATA XREF: _hmac_append+60o
					; .debug_info:0000163Fo ...
		align 4
_rdata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_info	segment	byte public 'DATA' use32
		assume cs:_debug_info
		;org 6B8h
off_6B8		dd offset byte_135B	; DATA XREF: .debug_aranges:000024AAo
		db 2, 0
		dd offset dword_1A18
		dw 104h
aGnuC4_7_2	db 'GNU C 4.7.2',0
dword_6D0	dd 70696301h, 73726568h, 616D682Fh, 632E63h, 5C5C3A43h
		dd 6B726F77h, 63617073h, 705C5C65h, 69676469h, 65642D6Eh
		dd 5C6C6576h, 6469705Ch, 2D6E6967h, 30312E32h, 5C31312Eh
		dd 62696C5Ch, 70727570h
byte_714	db 6Ch,	65h, 0		; DATA XREF: .debug_info:00000D9Fo
					; .debug_info:00000DC1o
		dd offset _hmac_get_block_size
		dd offset loc_5FB+5
		dd offset off_24F4
		db 2
dword_724	dd 6E690504h, 73030074h, 5F657A69h, 0D5020074h,	80h, 75070402h
		dd 6769736Eh, 2064656Eh, 746E69h, 73070202h, 74726F68h
		dd 736E7520h, 656E6769h, 6E692064h, 1020074h, 67697306h
		dd 2064656Eh, 72616863h, 8010200h, 69736E75h, 64656E67h
		dd 61686320h, 2020072h,	6F687305h, 69207472h, 200746Eh
		dd 6F6C0508h, 6C20676Eh, 20676E6Fh, 746E69h, 6C070802h
		dd 20676E6Fh, 676E6F6Ch, 736E7520h, 656E6769h, 6E692064h
		dd 67030074h, 657A6973h, 805A0300h, 2000000h, 69730704h
		dd 7974657Ah, 2006570h,	68630601h, 2007261h, 6F640408h
		dd 656C6275h, 2040400h,	6F6C0504h, 6920676Eh, 300746Eh
		dd 61686367h, 2D040072h, 117h, 6E696703h, 30040074h, 6Bh
		dd 6F626703h, 61656C6Fh, 3104006Eh, 144h, 63756703h, 726168h
		dd 0B53304h, 4020000h, 6E6F6C07h, 6E752067h, 6E676973h
		dd 69206465h, 300746Eh,	6E697567h, 36040074h, 80h, 66040402h
		dd 74616F6Ch, 70670300h, 746E696Fh, 4007265h, 1294Ch, 63670300h
		dd 74736E6Fh, 6E696F70h, 726574h, 1BE4D04h, 4050000h, 1C4h
		dd 0CB040506h, 7000001h, 137h, 1370405h, 0C020000h, 6E6F6C04h
		dd 6F642067h, 656C6275h, 75500300h, 656C7072h, 68706943h
		dd 704F7265h, 26050073h, 1FCh, 75505F08h, 656C7072h, 68706943h
		dd 704F7265h, 5480073h,	3814Dh,	65730900h, 706F5F74h, 6E6F6974h
		dd 4A4F0500h, 2000004h,	67090023h, 6F5F7465h, 6F697470h
		dd 5205006Eh, 465h, 9042302h, 74696E69h, 7C550500h, 2000004h
		dd 72090823h, 74657365h, 7C580500h, 2000004h, 75090C23h
		dd 696E696Eh, 5B050074h, 48Eh, 9102302h, 5F746573h, 5007669h
		dd 4B05Eh, 14230200h, 70706109h, 646E65h, 4D76105h, 23020000h
		dd 69640918h, 74736567h, 2640500h, 2000005h, 65091C23h
		dd 7972636Eh, 5007470h,	52C67h,	20230200h, 63656409h, 74707972h
		dd 2C6A0500h, 2000005h,	73092423h, 735F7465h, 746C61h
		dd 5436D05h, 23020000h,	65670928h, 61735F74h, 735F746Ch
		dd 657A69h, 5597005h, 23020000h, 6573092Ch, 656B5F74h
		dd 73050079h, 570h, 9302302h, 5F746567h, 5F79656Bh, 657A6973h
		dd 59760500h, 2000005h,	73093423h, 625F7465h, 68637461h
		dd 646F6D5Fh, 79050065h, 587h, 9382302h, 5F746567h, 63746162h
		dd 6F6D5F68h, 5006564h,	59D7Ch,	3C230200h, 74656709h, 6F6C625Fh
		dd 735F6B63h, 657A69h, 5597F05h, 23020000h, 65730940h
		dd 656B5F74h, 69775F79h, 6C5F6874h, 5006E65h, 4D782h, 44230200h
		dd 75500300h, 656C7072h, 68706943h, 6F437265h, 7865746Eh
		dd 27050074h, 39Ch, 75505F0Ah, 656C7072h, 68706943h, 6F437265h
		dd 7865746Eh, 0B010074h, 7275505Fh, 43656C70h, 65687069h
		dd 74614272h, 6F4D6863h, 4006564h, 4112C05h, 500C0000h
		dd 4C505255h, 49435F45h, 52454850h, 5441425Fh, 4D5F4843h
		dd 5F45444Fh, 424345h, 55500C00h, 454C5052h, 5049435Fh
		dd 5F524548h, 43544142h, 4F4D5F48h, 435F4544h, 1004342h
		dd 75500300h, 656C7072h, 68706943h, 61427265h, 4D686374h
		dd 65646Fh, 3B32F05h, 10D0000h,	444h, 4440Eh, 1C50E00h
		dd 290E0000h, 1, 3810405h, 4050000h, 42Eh, 129010Fh, 4650000h
		dd 440E0000h, 0E000004h, 1C5h, 50040500h, 0D000004h, 47C01h
		dd 4440E00h, 290E0000h,	1, 46B0405h, 10D0000h, 48Eh, 4440Eh
		dd 4050000h, 482h, 4AA010Dh, 440E0000h,	0E000004h, 4AAh
		dd 720Eh, 4050000h, 160h, 4940405h, 10D0000h, 4CCh, 4440Eh
		dd 4CC0E00h, 720E0000h,	0
dword_B84	dd 4D20405h, 60070000h,	5000001h, 4B604h, 50010F00h, 0FC000001h
					; DATA XREF: .debug_info:0000122Ao
		dd 0E000004h, 444h, 720Eh, 4AA0E00h, 0FC0E0000h, 4, 720405h
		dd 4050000h, 4DDh, 6B010Fh, 52C0000h, 440E0000h, 0E000004h
		dd 4CCh, 720Eh,	4AA0E00h, 0FC0E0000h, 4, 5080405h, 10D0000h
		dd 543h, 4440Eh, 4AA0E00h, 5000000h, 53204h, 72010F00h
		dd 59000000h, 0E000005h, 444h, 49040500h, 0D000005h, 57001h
		dd 4440E00h, 0CC0E0000h, 4, 55F0405h, 10D0000h,	587h, 4440Eh
		dd 4110E00h, 5000000h, 57604h, 11010F00h, 9D000004h, 0E000005h
		dd 444h, 8D040500h, 8000005h, 626F695Fh, 20006675h, 63A8106h
		dd 5F090000h, 727470h, 63A8306h, 23020000h, 635F0900h
		dd 600746Eh, 6B84h, 4230200h, 61625F09h, 6006573h, 63A85h
		dd 8230200h, 6C665F09h,	6006761h, 6B86h, 0C230200h, 69665F09h
		dd 600656Ch, 6B87h, 10230200h, 68635F09h, 75627261h, 88060066h
		dd 6Bh,	9142302h, 6675625Fh, 7A6973h, 6B8906h, 23020000h
		dd 745F0918h, 6E66706Dh, 656D61h, 63A8A06h, 23020000h
		dd 405001Ch, 117h, 4C494603h, 8B060045h, 5A3h, 6520405h
		dd 17070000h, 8000001h,	43414D48h, 6E6F435Fh, 74786574h
		dd 1A011000h, 6A8h, 73616809h, 1B010068h, 444h,	9002302h
		dd 656D616Eh, 3A1C0100h, 2000006h
		db 23h,	4, 10h
		dd offset aBlocksize	; "blocksize"
		db 1
		dd 6B1Dh, 8230200h, 61706F09h, 1E010064h, 4AAh,	0C2302h
		db 11h
		dd offset aHmac_append	; "hmac_append"
		db 1, 5Bh, 1
		dd 6FE01h
		db 0, 12h
		dd offset aContext	; "context"
		dw 5B01h
		dd offset loc_444
		dd 74616413h, 5B010061h, 4CCh, 6E656C13h, 725B0100h, 14000000h
		dd offset aHctx		; "hctx"
		dd 6FE5D01h
		db 2 dup(0), 15h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset byte_714
		db 1
off_DA4		dd offset aHmac_append	; DATA XREF: .debug_info:00001454o
					; "hmac_append"
		db 16h,	14h
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 5F01h
		dd offset loc_6B
		db    0
		align 2
		dw 405h
		dd offset unk_657
unk_DBC		db  17h			; DATA XREF: .debug_info:00001468o
		dd offset loc_116+1
		dd offset byte_714
		db 18h,	0Bh, 1
		db    0
		align 2
		dw 0Bh
		db    7
		dd offset dword_6D0+34h
		db 19h,	68h, 6Dh
aAc_get_block_s	db 'ac_get_block_size',0
		dw 0BA01h
		dd 7201h
		db 0
		dd offset _hmac_get_block_size
		dd offset unk_32
		dd offset dword_1CF4
		db 1, 83h, 7
		db 2 dup(0), 1Ah
		dd offset aContext	; "context"
		db 1
		dd 444BAh, 910200h
		db 1Bh
		dd offset aHctx		; "hctx"
		db 1, 0BCh, 0FEh
		db 6, 2	dup(0)
		dd offset dword_1D2C
		db 1Ch
		dd offset loc_1A
		dd offset word_1082
		dd offset dword_724+55h
		dd 74021Dh, 6009103h
		db 0, 1Eh
		dd offset unk_32
off_E36		dd offset off_10B4+2	; DATA XREF: .debug_info:000014E3o
		dw 1F00h
aHmac_uninit	db 'hmac_uninit',0
		db 1, 7Fh, 1
		dd offset _hmac_uninit
		dd offset unk_7D
		dd offset off_1D3F
byte_E57	db 1			; DATA XREF: .debug_info:000014F9o
		dd offset dword_724+0E1h
		db 1Ah
		dd offset aContext	; "context"
		db 1, 7Fh, 44h
		dd 2000004h
		db 91h,	0, 1Bh
		dd offset aHctx		; "hctx"
		db 1
		dd 6FE81h
		db 0
		dd offset off_1D8F
		db 1Ch
		dd offset loc_57
		dd offset aKey_with_len	; "key_with_len"
		dd offset dword_724+0B8h
		dw 21Dh
		dd 73020074h, 74021D00h, 300104h
		db 1Ch
		dd offset loc_5F
		dd offset word_1082
		dd offset dword_724+0CDh
		db 1Dh,	2, 74h
		dd 730200h
		db 0, 20h
		dd offset loc_78
		dw 0FE01h
		dd 1E000010h
		dd offset unk_7D
		dd offset off_10B4+2
		dd 6D681900h, 645F6361h, 73656769h, 65010074h, 15001h
		db 0
		dd offset _hmac_digest
off_ED5		dd offset unk_199	; DATA XREF: .debug_info:00001580o
		dd offset off_1DAD
		db 1, 5, 0Ah
		db 2 dup(0), 1Ah
		dd offset aContext	; "context"
		db 1
dword_EE8	dd 44465h, 910200h, 5F6E6921h, 6E656Ch,	726501h, 91020000h
					; DATA XREF: .debug_info:00001596o
		dd 756F2104h, 65010074h, 4AAh, 21089102h, 5F74756Fh, 6E656Ch
		dd 4FC6501h, 91020000h
		db 0Ch,	1Bh
		dd offset aHctx		; "hctx"
		dw 6701h
		dd offset dword_6D0+2Eh
		dd offset off_1E47
aHash_0		db '"hash',0
word_F36	dw 6801h		; DATA XREF: .debug_info:000015DCo
		dd offset loc_444
		dd offset off_1E86
aInner_hash	db '"inner_hash',0
		dd 4AA6901h
		db 2 dup(0)
		dd offset off_1EA4
aHash_len	db '"hash_len',0
		dd 726A01h
		db 2 dup(0)
		dd offset off_1ECD
aResult		db '"result',0
		dw 6B01h
		dd offset loc_150
		dd offset off_1EED
		db 23h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		dd offset dword_724+2E1h
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___14864 ; "hmac_digest"
		db 24h
		dd offset loc_B6
		dd offset loc_BE
		dd offset dword_724+1CDh
		db 1Bh
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		dw 6D01h
off_FA0		dd offset loc_6B	; DATA XREF: .debug_info:0000164Co
		dd offset off_1F00
		db 0, 1Ch
		dd offset loc_B2
		dd offset word_1082
		dd offset dword_724+1E3h
		dw 21Dh
		dd 91030074h, 1C000600h
		dd offset loc_CA
		dd offset byte_1115
		dd offset dword_724+1F8h
		dd 74021Dh, 640802h
		db 1Ch
		dd offset loc_E8
		dd offset off_1132
		dd offset dword_724+222h
		db 1Dh,	2, 74h
dword_FE4	dd 730200h, 474021Dh, 1D640802h, 2087402h, 21D0076h, 91020C74h
		db 58h,	0, 1Ch
		dd offset loc_FC
		dd offset aKey_with_len	; "key_with_len"
		dd offset dword_724+23Dh
		db 1Dh
		dd 2007402h, 21D0073h, 30010474h
		db 0, 1Ch
		dd offset loc_112
		dd offset byte_1173
		dd offset dword_724+252h
		dw 21Dh
		dd 73020074h
		db 2 dup(0), 1Ch
		dd offset loc_126
		dd offset byte_1173
		dd offset dword_724+26Eh
		db 1Dh
		dd 2007402h, 21D0073h, 76020474h
		db 2 dup(0), 1Ch
off_104B	dd offset loc_12E	; DATA XREF: .debug_info:000016F8o
		dd offset word_10FE
		dd offset dword_724+283h
		db 1Dh
		dd 2007402h, 1C000076h
		dd offset loc_168
		dd offset off_1132
		dd offset dword_724+2AFh
		dd 74021Dh, 1D007302h, 3047402h, 1D064891h, 3087402h
		db 91h,	4Ch
word_1082	dw 1D06h		; DATA XREF: .debug_info:00000E20o
					; .debug_info:00000E99o ...
		dd 20C7402h, 1C000075h
		dd offset loc_190
		dd offset byte_11AB
		dd offset dword_724+2D7h
		dd 74021Dh, 21D3001h, 3050474h
		dd offset ___PRETTY_FUNCTION___14864 ; "hmac_digest"
		dd 874021Dh
		db 5, 3
		dd offset aHashNull	; "hash	!= NULL"
		dw 1E00h
off_10B4	dd offset unk_199	; DATA XREF: .debug_info:off_E36o
					; .debug_info:00000EB8o ...
		dd offset off_10B4+2
		dd 7040700h, 681F0000h,	5F63616Dh, 5F746573h
aKey_with_len	db 'key_with_len',0     ; DATA XREF: .debug_info:00000E7Eo
					; .debug_info:00001003o ...
		db 1, 8Bh, 1
		dd offset _hmac_set_key_with_len
		dd offset unk_352
		dd offset off_1F2C
		dd 0C4301h
		db 0, 1Ah
		dd offset aContext	; "context"
		dw 8B01h
		dd offset loc_444
		dd 21009102h
		db 6Bh,	65h
word_10FE	dw 79h			; DATA XREF: .debug_info:0000104Fo
					; .debug_info:000011B3o ...
		dd 4CC8B01h, 91020000h,	656B2504h, 656C5F79h, 8B01006Eh
		db 72h
byte_1115	db 3 dup(0)		; DATA XREF: .debug_info:00000FC4o
					; .debug_info:000011BCo ...
		dd offset off_1FC6
		db 1Bh
		dd offset aHctx		; "hctx"
		db 1, 8Dh, 0FEh
		db 6, 2	dup(0)
		dd offset off_1FE6
		db 1Bh
		dd offset aBlocksize	; "blocksize"
		db 1, 8Eh
off_1132	dd offset loc_6B	; DATA XREF: .debug_info:00000FD9o
					; .debug_info:00001064o ...
		dd offset off_2025
		dw 6922h
		dd 6B8E0100h
		db 3 dup(0)
		dd offset off_2050
aIpad		db '"ipad',0
		db 1, 8Fh, 0AAh
		db 4, 2	dup(0)
		dd offset off_206F
aFull_key	db '"full_key',0
		db 1, 90h, 0AAh
		db 4, 2	dup(0)
		dd offset off_2098
		db 23h
		dd offset a__pretty_funct ; "__PRETTY_FUNCTION__"
		db 53h,	0Ch, 0
byte_1173	db 0			; DATA XREF: .debug_info:0000101Eo
					; .debug_info:00001033o ...
		db 1, 5, 3
		dd offset ___PRETTY_FUNCTION___14881 ; "hmac_set_key_with_len"
		db 24h
		dd offset loc_1C8
		dd offset loc_1D2
		dd offset dword_724+3BCh
		db 1Bh
		dd offset a_g_boolean_var ; "_g_boolean_var_"
		db 1, 92h, 6Bh
		db 3 dup(0)
		dd offset off_20E2
		align 4
		db 1Ch
		dd offset loc_1C6
		dd offset word_1082
		dd offset dword_724+3D2h
		db 1Dh,	2, 74h
		db 0, 3, 91h
byte_11AB	db 0			; DATA XREF: .debug_info:00001090o
					; .debug_info:off_12CEo
		db 6, 0, 1Eh
		dd offset loc_1DD
		dd offset word_10FE
		db 1Ch
		dd offset loc_1EC
		dd offset byte_1115
		dd offset dword_724+3F1h
		dd 74021Dh, 6489103h
		db 0, 1Ch
		dd offset loc_1FA
		dd offset byte_1115
		dd offset dword_724+407h
		dw 21Dh
dword_11DC	dd 91030074h, 1C000648h	; DATA XREF: .debug_info:000011E8o
		dd offset loc_217
		dd offset dword_11DC+2
		dd offset dword_724+41Ch
		dd 74021Dh, 7302h
		db 1Ch
		dd offset loc_259
		dd offset word_10FE
		dd offset dword_724+431h
		db 1Dh,	2, 74h
		dd 730200h
		db 0, 1Ch
		dd offset loc_26B
		dd offset aKey_with_len	; "key_with_len"
		dd offset dword_724+445h
		dw 21Dh
		dd 30010474h
		db 0, 1Ch
off_1222	dd offset loc_281	; DATA XREF: .debug_info:000013E8o
					; .debug_info:000015BAo
		dd offset byte_1173
		dd offset dword_B84+2
		dw 21Dh
		dd 75020474h, 74021D00h, 48910308h
		db 6, 0, 1Ch
		dd offset loc_289
		dd offset word_10FE
		dd offset dword_B84+17h
		db 1Dh
dword_124C	dd 2007402h, 1C000075h	; DATA XREF: .debug_info:00001450o
		dd offset loc_2B6
		dd offset aKey_with_len	; "key_with_len"
		dd offset dword_B84+2Bh
		dd 474021Dh, 1C003001h
		dd offset loc_2CC
		dd offset byte_1173
off_1270	dd offset dword_B84+40h	; DATA XREF: .debug_info:00001464o
		dd 474021Dh, 7302h
		db 1Ch
		dd offset loc_2D8
		dd offset byte_1115
		dd offset dword_B84+55h
		db 1Dh,	2, 74h
		dd 64080200h
		db 0, 1Ch
		dd offset loc_2F8
		dd offset off_1132
		dd offset dword_B84+78h
		dw 21Dh
dword_12A0	dd 8020474h, 74021D64h,	730208h, 0C74021Dh, 4C9102h
					; DATA XREF: .debug_info:000014F5o
					; .debug_info:00001592o
		db 1Ch
		dd offset loc_312
		align 2
		dw 12h
		dd 0C1100h, 74021D00h, 730200h
		db 0, 1Ch
		dd offset loc_348
off_12CE	dd offset byte_11AB	; DATA XREF: .debug_info:000015C3o
					; .debug_info:00001978o
		dd offset dword_B84+0B5h
		dw 21Dh
		dd 30010074h, 474021Dh
		db 5, 3
		dd offset ___PRETTY_FUNCTION___14881 ; "hmac_set_key_with_len"
		dw 21Dh
		dd 3050874h
off_12EC	dd offset aHctxHashNull	; DATA XREF: .debug_info:000015D8o
					; "hctx->hash != NULL"
		db 0, 1Eh
		dd offset unk_352
		dd offset off_10B4+2
		dw 1700h
		dd offset loc_116+1
		dd offset dword_B84+0CFh
		dd 10B18h, 7001500h, 0C43h, 616D681Fh, 65735F63h, 656B5F74h
		dd 0B4010079h
		db 1
		dd offset _hmac_set_key
off_1325	dd offset unk_39D	; DATA XREF: .debug_info:000015F3o
					; .debug_info:000019D1o
		dd offset off_210E
		db 1, 0BFh, 0Ch
		db 2 dup(0), 1Ah
		dd offset aContext	; "context"
		db 1
		dd 444B4h, 910200h, 79656B25h, 0CCB40100h
		db 4, 2	dup(0)
		dd offset off_215E
		db 1Ch
		dd offset loc_387
		dd offset dword_724+2E6h
		db 0B5h, 0Ch, 0
byte_135B	db 0			; DATA XREF: .debug_info:off_6B8o
		dd 74021Dh, 6009103h, 474021Dh,	6049103h
		db 0, 1Eh
		dd offset unk_39D
		dd offset off_10B4+2
		dw 1F00h
aHmac_reset	db 'hmac_reset',0
		db 1
		db 2Bh,	1
		dd offset _hmac_reset
		dd offset unk_412
		dd offset off_2172
		dw 4701h
		dd 1A00000Dh
		dd offset aContext	; "context"
		dd 4442B01h, 91020000h,	78652100h, 617274h, 1992B01h, 91020000h
		db 4, 1Bh
		dd offset aHctx		; "hctx"
		dw 2D01h
		dd offset dword_6D0+2Eh
		dd offset off_21C2
		db 1Ch
		dd offset loc_3BB
		dd offset word_1082
		dd offset dword_B84+19Eh
		db 1Dh,	2, 74h
		dd 910300h
		db 6, 0, 1Eh
		dd offset loc_3C8
		dd offset word_10FE
		db 1Eh
		dd offset loc_3DD
		dd offset off_1222+1
		db 1Eh
		dd offset loc_3F5
		dd offset word_10FE
		db 1Eh
		dd offset unk_412
		dd offset off_10B4+2
		dw 1F00h
aHmac_init	db 'hmac_init',0
		dw 2201h
		db 1
		dd offset _hmac_init
		dd offset unk_467
		dd offset off_21EB
		db 1, 0D0h, 0Dh
		db 2 dup(0), 1Ah
		dd offset aContext	; "context"
		db 1
		dd 44422h, 910200h, 74786521h, 1006172h, 19922h, 4910200h
		db 1Bh
		dd offset aHctx		; "hctx"
		db 1, 24h, 0FEh
		db 6, 2	dup(0)
		dd offset off_2253
		db 1Ch
		dd offset loc_438
		dd offset dword_124C+6
		dd offset off_DA4+3
		dd 74021Dh, 1C004001h
		dd offset loc_444
		dd offset off_1270
		dd offset unk_DBC
		dd 74021Dh, 7302h
		db 20h
		dd offset loc_462
		db 1, 0CCh, 10h
		db 2 dup(0), 1Eh
		dd offset unk_467
		dd offset off_10B4+2
		align 4
		dd 616D6819h, 65675F63h, 706F5F74h, 4D010074h, 12901h
		db 0
		dd offset _hmac_get_opt
		dd offset unk_4BD
		dd offset off_2266
		db 1, 61h, 0Eh
		db 2 dup(0), 1Ah
		dd offset aContext	; "context"
		db 1
		dd 4444Dh, 910200h, 6D616E21h, 4D010065h, 1C5h,	1B049102h
		dd offset aHctx		; "hctx"
		dd 6FE4F01h
		db 2 dup(0)
		dd offset off_22CE
		db 1Ch
		dd offset loc_488
		dd offset word_1082
		dd offset off_E36+2
		db 1Dh
		dd 3007402h, 60091h
		db 1Ch
		dd offset loc_49A
		dd offset dword_12A0+5
		dd offset byte_E57
		db 1Dh,	2, 74h
		dd 730200h, 474021Dh
		db 5, 3
		dd offset aHash		; "hash"
		dw 1E00h
		dd offset unk_4BD
		dd offset off_10B4+2
		dd 6D681F00h, 735F6361h, 6F5F7465h, 1007470h
		db 3Ch,	1
		dd offset _hmac_set_opt
		dd offset _hmac_append
		dd offset off_22F7
		dw 4901h
		dd 1A00000Fh
		dd offset aContext	; "context"
		dd 4443C01h, 91020000h,	616E2100h, 100656Dh, 1C53Ch, 4910200h
		dd 6C617621h, 1006575h,	1293Ch,	8910200h
		db 1Bh
		dd offset aHctx		; "hctx"
		db 1, 3Eh, 0FEh
		db 6, 2	dup(0)
		dd offset off_2377
		db 1Ch
		dd offset loc_4E5
		dd offset word_1082
		dd offset off_ED5
		dd 74021Dh, 6009103h
		db 0, 1Ch
		dd offset loc_4F7
		dd offset dword_12A0+5
		dd offset dword_EE8+0Ch
		dw 21Dh
		dd 76020074h, 74021D00h
		db 4, 5, 3
		dd offset aHash		; "hash"
		align 4
		db 1Eh
		dd offset loc_51B
		dd offset word_10FE
		db 1Eh
		dd offset loc_529
		dd offset off_1222+1
		db 1Ch
		dd offset loc_531
		dd offset off_12CE+1
		dd offset dword_EE8+33h
		db 1Dh
		dd 2007402h, 1C000077h
		dd offset loc_544
		dd offset off_12EC
		dd offset word_F36
		dd 74021Dh, 1D007702h, 1047402h
		db 30h,	0, 1Eh
		dd offset loc_54E
		dd offset off_1325+3
		db 1Eh
		dd offset _hmac_append
		dd offset off_10B4+2
		dd 6A82600h
		db 2 dup(0)
		dd offset _hmac_append
		dd offset unk_5D7
		dd offset off_23A0
		dw 0F01h
		dd 27000010h, 6B5h, 27009102h, 6C0h, 27049102h,	6CCh, 28089102h
		dd 6D7h
		dd offset off_2438
		dd 6E229h
		db 0, 5, 3
		dd offset ___PRETTY_FUNCTION___14850 ; "hmac_append"
		db 24h
		dd offset loc_57C
		dd offset loc_582
		dd offset off_FA0+2
		dd 6F128h
		db 0
		dd offset off_244B
		align 2
		dw 0A82Ah
		db 6, 2	dup(0)
		dd offset loc_5A4
		dd offset off_24C4
		db 1
		dd 0FE55Bh
		db 0, 2Bh
		dd offset off_24DC
		dw 0D72Ch
		dd 2D000006h, 6CCh, 6C02Dh, 6B52D00h, 0E2290000h, 5000006h
		db 3
		dd offset ___PRETTY_FUNCTION___14850 ; "hmac_append"
		db 20h
		dd offset loc_5D2
		dw 0AB01h
		dd 11h
		db 0, 1Ch
		dd offset loc_57C
		dd offset word_1082
		dd offset dword_FE4+17h
		dw 21Dh
		dd 91030074h, 20000600h
		dd offset loc_5A4
		dd 117301h
		db 0, 1Eh
		dd offset unk_5D7
		dd offset off_10B4+2
		dw 2E00h
		db    1
aPurple_hmac_ci	db 'purple_hmac_cipher_get_ops',0
		dd 4E01D701h
		db 10h,	2 dup(0)
		dd offset _purple_hmac_cipher_get_ops
		dd offset loc_5FB+5
		dd offset off_246B
		db 1
		dd offset off_104B+3
		db 1Eh
		dd offset loc_5FB+5
		dd offset off_10B4+2
		align 2
		dw 405h
		dd offset loc_1E4+1
aHmacops	db '/HMACOps',0
		db 1, 0C1h, 0E5h
		dd 5000001h
		db 3
		dd offset _HMACOps
		db 17h,	40h, 6
		dd 10740000h, 300000h, 6F695F31h, 9A060062h, 1069h, 1320101h
		dd 70727570h, 635F656Ch, 65687069h, 6F635F72h, 7865746Eh
		dd 65675F74h, 61645F74h, 5006174h, 990101C0h, 1000001h
		dd 10B6h, 4440Eh, 1330000h, 74735F5Fh, 5F6B6361h, 5F6B6863h
		dd 6C696166h, 1010100h,	75700134h, 656C7072h, 7069635Fh
		dd 5F726568h, 746E6F63h, 5F747865h, 65736572h, 20050074h
		dd 0FE010101h, 0E000010h, 444h,	1990Eh,	1350000h, 72665F67h
		dd 7006565h, 15010137h,	0E000011h, 199h, 67013600h, 6C616D5Fh
		dd 636F6Ch, 99013307h, 1000001h, 1132h,	0FE0Eh,	1320000h
		dd 70727570h, 635F656Ch, 65687069h, 6F635F72h, 7865746Eh
		dd 69645F74h, 74736567h, 1440500h, 15001h, 11730100h, 440E0000h
		dd 0E000004h, 72h, 4AA0Eh, 4FC0E00h, 34000000h,	72757001h
		dd 5F656C70h, 68706963h, 635F7265h, 65746E6Fh, 615F7478h
		dd 6E657070h, 3A050064h, 0AB010101h, 0E000011h,	444h, 4CC0Eh
		dd 720E00h, 35000000h, 725F6701h, 72757465h, 66695F6Eh
		dd 6961665Fh, 61775F6Ch, 6E696E72h, 74080067h, 11DE0101h
		dd 4C0E0000h, 0E000006h, 64Ch, 64C0Eh, 1360000h, 656D5F67h
		dd 7075646Dh, 1DC0900h,	199h, 120001h, 1A90E00h, 830E0000h
		dd 1, 5F670136h, 6C616572h, 636F6Ch, 99013507h,	1000001h
		dd 1223h, 1990Eh, 0FE0E00h, 34000000h, 72757001h, 5F656C70h
		dd 68706963h, 635F7265h, 65746E6Fh, 645F7478h, 72747365h
		dd 500796Fh, 1010127h, 1252h, 4440Eh, 1360000h,	616D5F67h
		dd 636F6C6Ch, 34070030h, 19901h, 12700100h, 0FE0E0000h
		dd 0
		db  34h	; 4
		db 1, 70h, 75h
aRple_cipher_co	db 'rple_cipher_context_set_data',0
		db 5, 0B7h, 1
		db    1
		db 1, 0A5h, 12h
		db    0
		align 2
		dw 440Eh
		db    4
		db 2 dup(0), 0Eh
		dd offset unk_199
		db    0
		db 32h,	1, 70h
aUrple_strequal	db 'urple_strequal',0
		db 0Ah
		db  62h	; b
		db 3, 1, 50h
		db    1
		db 2 dup(0), 1
		dd offset off_12CE+1
		db  0Eh
		dd offset loc_1C1+4
		db 0Eh,	0C5h, 1
		db    0
		db 2 dup(0), 36h
		db    1
aG_strdup	db 'g_strdup',0
		dw 0BD09h
		db    1
		dd offset loc_1CC+4
		db 1, 0ECh, 12h
		db    0
		align 2
		dw 0C50Eh
		db    1
		align 4
		db  32h	; 2
		db 1, 70h, 75h
aRple_cipher__0	db 'rple_cipher_context_new_by_name',0
		db    5
		db 17h,	2 dup(1)
		dd offset loc_444
		db    1
		dd offset off_1325+3
		db 0Eh,	0C5h, 1
		db    0
		align 2
		dw 290Eh
		db    1
		align 10h
		db  37h	; 7
		db 1, 70h, 75h
aRple_cipher__1	db 'rple_cipher_context_get_block_size',0
		db 5
		dd 720101A5h, 1000000h,	4440Eh
		db 3 dup(0)
		align 4
_debug_info	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_abbrev	segment	byte public 'DATA' use32
		assume cs:_debug_abbrev
		;org 1A18h
dword_1A18	dd 25011101h, 30B1308h,	11081B08h, 10011201h, 2000006h
					; DATA XREF: .debug_info:000006BEo
		dd 0B0B0024h, 8030B3Eh,	16030000h, 3A080300h, 490B3B0Bh
		dd 4000013h, 0B0B000Fh,	0F050000h, 490B0B00h, 6000013h
		dd 26h,	49002607h, 8000013h, 8030113h, 0B3A0B0Bh, 13010B3Bh
		dd 0D090000h, 3A080300h, 490B3B0Bh, 0A3813h, 130A00h, 0C3C0803h
		dd 40B0000h, 0B080301h,	3B0B3A0Bh, 13010Bh, 280C00h, 0D1C0803h
		dd 150D0000h, 10C2701h,	0E000013h, 13490005h, 150F0000h
		dd 490C2701h, 130113h, 0D1000h,	0B3A0E03h, 13490B3Bh, 0A38h
		dd 3012E11h, 3B0B3A0Eh,	200C270Bh, 13010Bh, 51200h, 0B3A0E03h
		dd 13490B3Bh, 5130000h,	3A080300h, 490B3B0Bh, 14000013h
		dd 0E030034h, 0B3B0B3Ah, 1349h,	3003415h, 3413490Eh, 0E1C0Ch
		dd 10B1600h, 1170000h, 1134901h, 18000013h, 13490021h
		dd 0B2Fh, 3012E19h, 3B0B3A08h, 490C270Bh, 12011113h, 97064001h
		dd 13010C42h, 51A0000h,	3A0E0300h, 490B3B0Bh, 0A0213h
		dd 341B00h, 0B3A0E03h, 13490B3Bh, 602h,	182891Ch, 31011101h
		dd 130113h, 828A1D00h, 0A020001h, 0A4291h, 82891E00h, 1110001h
		dd 1331h, 3012E1Fh, 3B0B3A08h, 110C270Bh, 40011201h, 0C429706h
		dd 1301h, 1828920h, 95011100h, 13310C42h, 5210000h, 3A080300h
		dd 490B3B0Bh, 0A0213h, 342200h,	0B3A0803h, 13490B3Bh, 602h
		dd 3003423h, 3413490Eh,	0A020Ch, 10B2400h, 1120111h, 1301h
		dd 3000525h, 3B0B3A08h,	213490Bh, 26000006h, 1331012Eh
		dd 1120111h, 42970640h,	13010Ch, 52700h, 0A021331h, 34280000h
		dd 2133100h, 29000006h,	13310034h, 0A02h, 31011D2Ah, 55015213h
		dd 590B5806h, 13010Bh, 10B2B00h, 655h, 3100342Ch, 2D000013h
		dd 13310005h, 2E2E0000h, 30C3F01h, 3B0B3A08h, 490C270Bh
		dd 12011113h, 97064001h, 13010C42h, 342F0000h, 3A080300h
		dd 490B3B0Bh, 0A0213h, 213000h,	34310000h, 3A080300h, 490B3B0Bh
		dd 3C0C3F13h, 3200000Ch, 0C3F012Eh, 0B3A0803h, 0C27053Bh
		dd 0C3C1349h, 1301h, 3F002E33h,	2708030Ch, 3C0C340Ch, 3400000Ch
		dd 0C3F012Eh, 0B3A0803h, 0C27053Bh, 13010C3Ch, 2E350000h
		dd 30C3F01h, 3B0B3A08h,	3C0C270Bh, 13010Ch, 12E3600h, 8030C3Fh
		dd 0B3B0B3Ah, 13490C27h, 13010C3Ch, 2E370000h, 30C3F01h
		dd 3B0B3A08h, 490C2705h, 0C3C13h
		db 2 dup(0)
		align 4
_debug_abbrev	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_loc	segment	byte public 'DATA' use32
		assume cs:_debug_loc
		;org 1CF4h
dword_1CF4	dd 0			; DATA XREF: .debug_info:00000DF5o
		dd 3, 4740002h,	3, 2Ch,	30740002h, 2Ch,	2Dh, 4740002h
		dd 2Dh,	32h, 30740002h,	2 dup(0)
dword_1D2C	dd 1Ah,	1Dh, 500001h, 0	; DATA XREF: .debug_info:00000E17o
		db 3 dup(0)
off_1D3F	dd offset _hmac_uninit	; DATA XREF: .debug_info:00000E53o
		dd offset loc_35
		db 2
		dd 35047400h, 38000000h, 2000000h, 38087400h, 72000000h
		dd 2000000h, 72307400h,	73000000h, 2000000h, 73087400h
		dd 78000000h, 2000000h,	78047400h, 7D000000h, 2000000h
		dd 307400h, 0
		db 3 dup(0)
off_1D8F	dd offset loc_5F	; DATA XREF: .debug_info:00000E75o
		dd offset loc_73+4
		db 1
		dd 785000h, 7C0000h, 10000h, 50h, 0
		db 0
off_1DAD	dd offset _hmac_digest	; DATA XREF: .debug_info:00000ED9o
		dd offset loc_81
		db 2, 0, 74h
		dd 8104h, 8200h, 74000200h, 8208h, 8300h, 74000200h, 830Ch
		dd 8400h, 74000200h, 8410h, 8700h, 74000200h, 8714h, 14500h
		dd 74000300h, 14500D0h,	1460000h, 20000h, 1461474h, 1470000h
		dd 20000h, 1471074h, 1480000h, 20000h, 1480C74h, 1490000h
		dd 20000h, 1490874h, 14C0000h, 20000h, 14C0474h, 1990000h
		dd 30000h, 0D074h, 0
		db 3 dup(0)
off_1E47	dd offset loc_B4	; DATA XREF: .debug_info:00000F2Co
		dd offset loc_C5+4
		db 1
		dd 0C95000h, 1480000h, 10000h, 14A57h, 17200h, 57000100h
		dd 172h, 18Fh, 8F500001h, 99000001h, 1000001h, 5700h, 0
		db 2 dup(0)
off_1E86	dd offset loc_B6	; DATA XREF: .debug_info:00000F3Co
		dd offset loc_146
		dw 1
		dd 14A53h, 19900h, 53000100h, 2	dup(0)
off_1EA4	dd offset loc_CC	; DATA XREF: .debug_info:00000F52o
		dd offset loc_D0
		dd 0D0500001h, 36000000h, 1000001h, 14A5600h, 1720000h
		dd 10000h, 56h,	0
		db 0
off_1ECD	dd offset loc_112	; DATA XREF: .debug_info:00000F66o
		dd offset unk_172
		db 2, 0, 91h
		dd 19458h, 19900h, 91000200h, 58h, 0
		db 0
off_1EED	dd offset loc_E8	; DATA XREF: .debug_info:00000F78o
		dd offset loc_F7+4
		db 1, 0, 50h
		align 10h
off_1F00	dd offset loc_BE	; DATA XREF: .debug_info:00000FA4o
		dd offset loc_136
		dd 9F310002h, 14Ah, 172h, 9F310002h, 172h, 194h, 9F300002h
		dd 2 dup(0)
off_1F2C	dd offset _hmac_set_key_with_len ; DATA	XREF: .debug_info:000010E4o
		dd offset loc_19D
		dd 4740002h, 19Dh, 19Eh, 8740002h, 19Eh, 19Fh, 0C740002h
		dd 19Fh, 1A0h, 10740002h, 1A0h,	1A3h, 14740002h, 1A3h
		dd 29Ch, 0D0740003h, 29C00h, 29D00h, 74000200h,	29D14h
		dd 29E00h, 74000200h, 29E10h, 29F00h, 74000200h, 29F0Ch
		dd 2A000h, 74000200h, 2A008h, 2A400h, 74000200h, 2A404h
		dd 35200h, 74000300h, 0D0h, 0
		db 2 dup(0)
off_1FC6	dd offset _hmac_set_key_with_len ; DATA	XREF: .debug_info:00001118o
		dd offset loc_2BA
		dw 2
		dd 2BA0891h, 3520000h, 20000h, 4C91h, 0
		db 2 dup(0)
off_1FE6	dd offset loc_1C8	; DATA XREF: .debug_info:00001127o
		dd offset loc_1D5
		dw 1
		dd 1D550h, 29E00h, 56000100h, 2A1h, 32Bh, 2B560001h, 47000003h
		dd 1000003h, 3475000h, 3520000h, 10000h, 56h, 0
		db 0
off_2025	dd offset loc_1E4	; DATA XREF: .debug_info:00001136o
		dd offset loc_1E7+4
		db 1, 0, 50h
		dd offset loc_1E7+4
		dd offset loc_289
		dd 48910002h, 2A1h, 32Bh, 48910002h, 2 dup(0)
off_2050	dd offset loc_227	; DATA XREF: .debug_info:00001143o
		dd offset loc_231
		dd 9F300002h, 24Bh, 251h, 500001h, 0
		db 3 dup(0)
off_206F	dd offset loc_1EE	; DATA XREF: .debug_info:00001153o
		dd offset loc_1F2
		db 1
		dd 1F25000h, 2890000h, 10000h, 2A155h, 32B00h, 55000100h
		dd 2 dup(0)
off_2098	dd offset loc_219	; DATA XREF: .debug_info:00001167o
		dd offset loc_21D
		dd 1D500001h, 89000002h, 1000002h, 2DA5300h, 2DE0000h
		dd 10000h, 2DE50h, 31400h, 53000100h, 314h, 322h, 22500001h
		dd 2B000003h, 1000003h,	5300h, 0
		db 2 dup(0)
off_20E2	dd offset loc_1D2	; DATA XREF: .debug_info:00001193o
		dd offset loc_289
		dw 2
		dd 2A19F31h, 32B0000h, 20000h, 32B9F31h, 34D0000h, 20000h
		dd 9F30h, 0
		db 2 dup(0)
off_210E	dd offset _hmac_set_key	; DATA XREF: .debug_info:00001329o
		dd offset loc_355
		dw 2
		dd 3550474h, 3580000h, 20000h, 3580874h, 3960000h, 20000h
		dd 3963074h, 3970000h, 20000h, 3970874h, 3980000h, 20000h
		dd 3980474h, 39D0000h, 20000h, 3074h, 0
		db 2 dup(0)
off_215E	dd offset _hmac_set_key	; DATA XREF: .debug_info:0000134Bo
		dd offset loc_370
		dw 2
		dd offset loc_48A+7
		dd 0
		db 2 dup(0)
off_2172	dd offset _hmac_reset	; DATA XREF: .debug_info:0000138Eo
		dd offset loc_3A1
		dw 2
		dd 3A10474h, 3A40000h, 20000h, 3A40874h, 40B0000h, 20000h
		dd 40B3074h, 40C0000h, 20000h, 40C0874h, 40D0000h, 20000h
		dd 40D0474h, 4120000h, 20000h, 3074h, 0
		db 2 dup(0)
off_21C2	dd offset loc_3BD	; DATA XREF: .debug_info:000013C0o
		dd offset loc_3C0
		dw 1
		dd 3C050h, 40C00h, 53000100h, 40Dh, 412h, 530001h, 0
		db 3 dup(0)
off_21EB	dd offset _hmac_init	; DATA XREF: .debug_info:00001415o
		dd offset loc_415
		db 2
		dd 15047400h, 16000004h, 2000004h, 16087400h, 19000004h
		dd 2000004h, 190C7400h,	5B000004h, 2000004h, 5B307400h
		dd 5C000004h, 2000004h,	5C0C7400h, 5D000004h, 2000004h
		dd 5D087400h, 62000004h, 2000004h, 62047400h, 67000004h
		dd 2000004h, 307400h, 0
		db 3 dup(0)
off_2253	dd offset loc_438	; DATA XREF: .debug_info:00001447o
		dd offset loc_43F+4
		db 1
		dd 5000h, 0
		db 2 dup(0)
off_2266	dd offset _hmac_get_opt	; DATA XREF: .debug_info:000014A5o
		dd offset loc_469
		dw 2
		dd 4690474h, 46A0000h, 20000h, 46A0874h, 46D0000h, 20000h
		dd 46D0C74h, 4B00000h, 20000h, 4B03074h, 4B10000h, 20000h
		dd 4B10C74h, 4B20000h, 20000h, 4B20874h, 4B40000h, 20000h
		dd 4B40474h, 4BD0000h, 20000h, 3074h, 0
		db 2 dup(0)
off_22CE	dd offset loc_48A	; DATA XREF: .debug_info:000014D6o
		dd offset loc_495+4
		dw 1
		dd 49950h, 4B200h, 56000100h, 4B3h, 4BDh, 560001h, 0
		db 3 dup(0)
off_22F7	dd offset _hmac_set_opt	; DATA XREF: .debug_info:00001532o
		dd offset loc_4C1
		db 2
		dd 0C1047400h, 0C2000004h, 2000004h, 0C2087400h, 0C3000004h
		dd 2000004h, 0C30C7400h, 0C6000004h, 2000004h, 0C6107400h
		dd 0A000004h, 2000005h,	0A307400h, 0B000005h, 2000005h
		dd 0B107400h, 0C000005h, 2000005h, 0C0C7400h, 0D000005h
		dd 2000005h, 0D087400h,	10000005h, 2000005h, 10047400h
		dd 58000005h, 2000005h,	307400h, 0
		db 3 dup(0)
off_2377	dd offset loc_4E7	; DATA XREF: .debug_info:00001573o
		dd offset loc_4F2+4
		db 1
		dd 4F65000h, 50B0000h, 10000h, 50E53h, 55800h, 53000100h
		dd 2 dup(0)
off_23A0	dd offset _hmac_append	; DATA XREF: .debug_info:0000160Eo
		dd offset loc_559
		dd 4740002h, 559h, 55Ah, 8740002h, 55Ah, 55Dh, 0C740002h
		dd 55Dh, 59Dh, 30740002h, 59Dh,	59Eh, 0C740002h, 59Eh
		dd 59Fh, 8740002h, 59Fh, 5A4h, 4740002h, 5A4h, 5CBh, 30740002h
		dd 5CBh, 5CCh, 0C740002h, 5CCh,	5CDh, 8740002h,	5CDh, 5D2h
		dd 4740002h, 5D2h, 5D7h, 30740002h, 2 dup(0)
off_2438	dd offset loc_57C	; DATA XREF: .debug_info:00001634o
		dd offset loc_57E
		dd 500001h, 0
		db 3 dup(0)
off_244B	dd offset loc_582	; DATA XREF: .debug_info:00001655o
		dd offset loc_5A4
		db 2
		dd 0A49F3100h, 0D2000005h, 2000005h, 9F3000h, 0
		db 3 dup(0)
off_246B	dd offset _purple_hmac_cipher_get_ops ;	DATA XREF: .debug_info:000016F3o
		dd offset loc_5DB
		db 2
		dd 0DB047400h, 0FA000005h, 2000005h, 0FA207400h, 0FB000005h
		dd 2000005h, 0FB047400h, 5, 2000006h, 207400h, 0
		db 3 dup(0)
		align 4
_debug_loc	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_aranges	segment	byte public 'DATA' use32
		assume cs:_debug_aranges
		;org 24A4h
		dd 1Ch
		db 2, 0
		dd offset off_6B8
		dw 4
		dd 0
		dd offset _hmac_get_block_size
		dd offset _HMACOps
		dd 2 dup(0)
_debug_aranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_ranges	segment	byte public 'DATA' use32
		assume cs:_debug_ranges
		;org 24C4h
off_24C4	dd offset loc_5A4	; DATA XREF: .debug_info:00001663o
		dd offset loc_5C8
		dd offset loc_5CD
		dd offset loc_5D2
		dd 2 dup(0)
off_24DC	dd offset loc_5A4	; DATA XREF: .debug_info:0000166Eo
		dd offset loc_5C8
		dd offset loc_5CD
		dd offset loc_5D2
		dd 2 dup(0)
_debug_ranges	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_line	segment	byte public 'DATA' use32
		assume cs:_debug_line
		;org 24F4h
off_24F4	dd offset loc_299+1	; DATA XREF: .debug_info:0000071Fo
		db    2
		align 2
		dd offset loc_1BE
		dw 101h
		db 0FBh	; ˚
		db 0Eh,	0Dh, 0
		db    1
		db 3 dup(1)
		db    0
		db 2 dup(0), 1
		db    0
		align 2
		dw 6301h
aIphers		db 'iphers',0
aCWorkspacePidg	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/include',0
a____Win32DevGt	db '../../win32-dev/gtk_2_0-2.14/lib/glib-2.0/include',0
a____Win32Dev_0	db '../../win32-dev/gtk_2_0-2.14/include/glib-2.0/glib',0
a__Libpurple	db '../libpurple',0
aCWorkspacePi_0	db 'c:/workspace/pidgin-devel/win32-dev/mingw-4.7.2/bin/../lib/gcc/mi'
		db 'ngw32/4.7.2/../../../../include',0
		align 10h
aHmac_c		db 'hmac.c',0
		db 1
		dd 74730000h, 66656464h, 200682Eh, 6C670000h, 6F636269h
		dd 6769666Eh, 300682Eh,	74670000h, 73657079h, 400682Eh
		dd 69630000h, 72656870h, 500682Eh, 74730000h, 2E6F6964h
		dd 60068h, 656D6700h, 682E6Dh, 67000004h, 7373656Dh, 73656761h
		dd 400682Eh, 73670000h,	75667274h, 2E73636Eh, 40068h, 69747500h
		dd 682E6Ch, 5
		db 0, 5, 2
		dd offset _hmac_get_block_size
		db 3
		dd 3C0101BAh, 33DBCADh,	82660841h, 0F384F4AFh, 0C85F0349h
		dd 0D7AD9E08h, 8D78433h, 83E08AEh, 843E0859h, 4020085h
		dd 550801h, 3010402h, 6C80874h,	0F03069Eh, 1003E408h, 0AD2E0882h
		dd 75AEA0DBh, 0D8DCE69Fh, 40200DBh, 200C902h, 9F0204h
		dd 0B8020402h, 21088479h, 3835908h, 89E086Ah, 0D7590821h
		dd 0D7D7CC08h, 74086E03h, 0F2081F03h, 8AD8278h,	7EF503E5h
		dd 0AF4A8208h, 6775ADD8h, 0AD756783h, 86A0375h,	0BBAEC874h
		dd 573D08BBh, 90AC2703h, 3D08D8AFh, 4B2D0840h, 0D6826503h
		dd 4408D8AFh, 4A087903h, 0AD8367ADh, 3CA2108h, 0ADC85812h
		dd 750868BCh, 24025657h, 35A5515h, 3C6600F6h, 1A02AEh
		db 2 dup(1)
		align 4
_debug_line	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_debug_str	segment	byte public 'DATA' use32
		assume cs:_debug_str
		;org 2794h
aHctx		db 'hctx',0             ; DATA XREF: .debug_info:00000D90o
					; .debug_info:00000E0Do ...
aBlocksize	db 'blocksize',0        ; DATA XREF: .debug_info:00000D43o
					; .debug_info:0000112Co
a__pretty_funct	db '__PRETTY_FUNCTION__',0 ; DATA XREF: .debug_info:00000D9Bo
					; .debug_info:00000F7Do ...
aHmac_append	db 'hmac_append',0      ; DATA XREF: .debug_info:00000D61o
					; .debug_info:off_DA4o
a_g_boolean_var	db '_g_boolean_var_',0  ; DATA XREF: .debug_info:00000DAAo
					; .debug_info:00000F9Ao ...
aContext	db 'context',0          ; DATA XREF: .debug_info:00000D6Eo
					; .debug_info:00000DFFo ...
		align 4
_debug_str	ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'DATA' use32
		assume cs:_eh_frame
		;org 27DCh
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch
		dd offset loc_5FB-2DF7h
		dd offset unk_32
		dd 300E4300h, 40E0A69h,	0B41h, 20h, 38h
		dd offset loc_5FB-2DDFh
		dd offset loc_47+2
		dd 80E4100h, 0E430283h,	0E0A7A30h, 0EC34108h, 0B4504h
		dd 3Ch,	5Ch
		dd offset loc_5FB-2DB7h
		dd offset loc_116+3
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0ABE02h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4304h, 3Ch, 9Ch
		dd offset loc_5FB-2CDBh
		dd offset loc_1B4+2
		dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
		dd 500E4305h, 0E0AF902h, 0EC34114h, 0EC64110h, 0EC7410Ch
		dd 0EC54108h, 0B4404h, 20h, 0DCh
		dd offset loc_5FB-2B63h
		dd offset loc_47+2
		dd 80E4100h, 0E430287h,	0E0A7E30h, 0EC74108h, 0B4104h
		dd 20h,	100h
		dd offset loc_5FB-2B3Bh
		dd offset loc_72
		dd 80E4100h, 0E430283h,	0A670230h, 0C341080Eh, 0B41040Eh
		dd 2Ch,	124h
		dd offset loc_5FB-2AEBh
		dd offset loc_52+1
		dd 80E4100h, 0E410286h,	4303830Ch, 4202300Eh, 410C0E0Ah
		dd 41080EC3h, 45040EC6h, 0Bh, 2Ch, 154h
		dd offset loc_5FB-2AC7h
		dd offset loc_52+3
		dd 80E4100h, 0E410286h,	4303830Ch, 4302300Eh, 410C0E0Ah
		dd 41080EC3h, 42040EC6h, 0Bh, 34h, 184h
		dd offset loc_5FB-2A9Fh
		dd offset loc_97+1
		dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
		dd 100E0A44h, 0C0EC341h, 80EC641h, 40EC741h, 0B43h, 38h
		dd 1BCh
		dd offset loc_5FB-2A3Fh
		dd offset unk_7F
		dd 80E4100h, 0E410286h,	4303830Ch, 4002300Eh, 410C0E0Ah
		dd 41080EC3h, 45040EC6h, 0E0A670Bh, 0EC3410Ch, 0EC64108h
		dd 0B4504h, 18h, 1F8h
		dd offset loc_5FB-29FBh
		dd offset loc_27+1
		dd 200E4300h, 40E0A5Fh,	0B41h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; UNDEF
		extrn ___stack_chk_guard:near ;	DATA XREF: _hmac_get_block_size+3r
					; _hmac_get_block_size+21r ...
		extrn _purple_cipher_context_get_data:near
					; CODE XREF: _hmac_get_block_size+15p
					; _hmac_uninit+26p ...
		extrn ___stack_chk_fail:near ; CODE XREF: _hmac_get_block_size:loc_2Dp
					; _hmac_uninit:loc_78p	...
		extrn _purple_cipher_context_reset:near	; CODE XREF: _hmac_uninit:loc_52p
					; _hmac_digest:loc_F7p	...
		extrn _g_free:near	; CODE XREF: _hmac_uninit:loc_73j
					; _hmac_digest+A9p ...
		extrn _g_malloc:near	; CODE XREF: _hmac_digest:loc_C5p
					; _hmac_set_key_with_len:loc_1E7p ...
		extrn _purple_cipher_context_digest:near ; CODE	XREF: _hmac_digest+63p
					; _hmac_digest+E3p ...
		extrn _purple_cipher_context_append:near ; CODE	XREF: _hmac_digest+8Dp
					; _hmac_digest+A1p ...
		extrn _g_return_if_fail_warning:near ; CODE XREF: _hmac_digest+10Bp
					; _hmac_set_key_with_len+1A7p ...
		extrn _g_memdup:near	; CODE XREF: _hmac_set_key_with_len+76p
		extrn _g_realloc:near	; CODE XREF: _hmac_set_key_with_len+171p
		extrn _purple_cipher_context_destroy:near ; CODE XREF: _hmac_reset+38p
					; _hmac_set_opt+64p
		extrn _g_malloc0:near	; CODE XREF: _hmac_init+1Fp
		extrn _purple_cipher_context_set_data:near ; CODE XREF:	_hmac_init:loc_43Fp
		extrn _purple_strequal:near ; CODE XREF: _hmac_get_opt:loc_495p
					; _hmac_set_opt:loc_4F2p
		extrn _g_strdup:near	; CODE XREF: _hmac_set_opt+6Cp
		extrn _purple_cipher_context_new_by_name:near ;	CODE XREF: _hmac_set_opt+7Fp
		extrn _purple_cipher_context_get_block_size:near
					; CODE XREF: _hmac_set_opt+89p


		end

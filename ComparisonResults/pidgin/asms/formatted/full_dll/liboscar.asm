include	uni.inc	
assume cs:_text

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
push	ebx
sub	esp, 18h
mov	edx, ds:Memory
test	edx, edx
jz	short loc_68881042
mov	ebx, ds:dword_688C1004
sub	ebx, 4
cmp	edx, ebx
ja	short loc_68881030
mov	eax, [ebx]
test	eax, eax
jz	short loc_68881014
call	eax
mov	edx, ds:Memory
sub	ebx, 4
cmp	edx, ebx
jbe	short loc_6888101B
mov	[esp+1Ch+Memory], edx 
call	free
mov	ds:Memory, 0
mov	[esp+1Ch+Memory], 0 
call	fflush
add	esp, 18h
pop	ebx
retn
align 10h
public DllEntryPoint
sub	esp, 2Ch
mov	[esp+2Ch+var_C], ebx
mov	ebx, [esp+2Ch+fdwReason]
mov	[esp+2Ch+var_8], esi
mov	esi, [esp+2Ch+hinstDLL]
mov	[esp+2Ch+var_4], edi
mov	edi, [esp+2Ch+lpReserved]
cmp	ebx, 1
jz	short loc_688810C4
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+Size],	esi
call	sub_688AC7A0
sub	esp, 0Ch
test	ebx, ebx
jnz	short loc_688810B2
mov	edx, ds:Memory
test	edx, edx
jz	loc_68881130
mov	[esp+2Ch+var_10], eax
call	sub_68881000
mov	eax, [esp+2Ch+var_10]
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn	0Ch
mov	[esp+2Ch+Size],	80h 
call	malloc
test	eax, eax
mov	ds:Memory, eax
jz	short loc_68881137
mov	dword ptr [eax], 0
mov	ds:dword_688C1004, eax
mov	eax, ds:off_688B63D4
test	eax, eax
jz	short loc_68881101
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+Size],	esi
call	eax 
sub	esp, 0Ch
call	sub_688AC920
call	sub_688ACB80
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+Size],	esi
call	sub_688AC7A0
sub	esp, 0Ch
test	eax, eax
jz	loc_688810A5
jmp	short loc_688810B2
align 10h
xor	eax, eax
jmp	loc_688810B2
mov	esi, esi
lea	edi, [edi+0]
call	_errno
mov	dword ptr [eax], 0Ch
xor	eax, eax
jmp	loc_688810B2
align 10h
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], offset dword_688C1004
mov	[esp+1Ch+var_18], offset Memory
mov	[esp+1Ch+var_1C], eax
call	__dllonexit
cmp	eax, 1
sbb	eax, eax
add	esp, 1Ch
retn
align 10h
sub	esp, 1Ch
mov	eax, [esp+20h]
mov	dword ptr [esp+8], offset dword_688C1004
mov	dword ptr [esp+4], offset Memory
mov	[esp], eax
call	__dllonexit
add	esp, 1Ch
retn
align 10h
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_6888123C
mov	[esp+18h+lpProcName], offset ProcName 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short loc_688811FF
mov	[esp+18h+lpProcName], offset dword_688C1008
mov	[esp+18h+lpModuleName],	offset dword_688BA0A4
call	eax
mov	ecx, dword_688AD208
test	ecx, ecx
jz	short locret_6888123A
mov	[esp+18h+lpModuleName],	offset aLibgcj13_dll 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_68881244
mov	[esp+18h+lpProcName], offset a_jv_registercl 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_6888123A
mov	[esp+18h+lpModuleName],	offset dword_688AD208
call	eax
			
leave
retn
mov	eax, 0
jmp	short loc_688811EA
align 4
mov	eax, 0
jmp	short loc_6888122D
align 4
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	ecx
test	eax, eax
jz	short loc_68881288
mov	[esp+18h+lpProcName], offset a__deregister_f 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_68881283
mov	[esp+18h+lpModuleName],	offset dword_688BA0A4
call	eax
leave
retn
align 4
mov	eax, 0
jmp	short loc_68881276
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ecx, [ebx+4]
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_34], ecx
call	purple_connection_get_account
mov	[esp+7Ch+var_78], offset a_cancel_0 
mov	[esp+7Ch+var_7C], offset aPidgin 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset a_ok_0	
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aNoReasonGive_0 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	esi, eax
mov	[esp+7Ch+var_78], offset aAuthorizatio_1 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_48], ecx
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_4C], edx
mov	[esp+7Ch+var_50], offset oscar_free_name_data
mov	[esp+7Ch+var_54], ebp
mov	[esp+7Ch+var_58], offset loc_6888139C
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 1
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
call	purple_request_input
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68881396
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	edi, eax
test	esi, esi
jz	short loc_688813FC
mov	[esp+0Ch], esi
mov	dword ptr [esp+8], 0
mov	eax, [ebx+4]
mov	[esp+4], eax
mov	[esp], edi
call	aim_ssi_sendauthreply
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68881414
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	oscar_free_name_data
align 4
mov	dword ptr [esp+4], offset aNoReasonGive_0 
mov	dword ptr [esp], offset	aPidgin	
call	libintl_dgettext
mov	esi, eax
jmp	short loc_688813C5
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 1
mov	edx, [ebx+4]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_sendauthreply
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68881471
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	oscar_free_name_data
call	__stack_chk_fail
align 4
public oscar_auth_sendrequest
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_account
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	purple_find_buddy
mov	esi, eax
test	eax, eax
jz	short loc_68881530
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_get_group
test	eax, eax
jz	short loc_68881530
mov	[esp+5Ch+var_5C], eax
call	purple_group_get_name
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aSsiAddingBuddy 
mov	[esp+5Ch+var_5C], offset aOscar	
call	purple_debug_info
test	ebp, ebp
jz	loc_688815E4
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_sendauthrequest
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_68881548
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688815FF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_alias_only
mov	[esp+5Ch+var_40], 1
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 0
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_addbuddy
cmp	byte ptr [ebx],	2Bh
jnz	short loc_68881530
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_name
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aAvailable 
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_name
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aMobile 
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
jmp	loc_68881530
align 4
mov	[esp+5Ch+var_58], offset aPleaseAuthoriz 
mov	[esp+5Ch+var_5C], offset aPidgin 
call	libintl_dgettext
mov	ebp, eax
jmp	loc_688814FA
call	__stack_chk_fail
public oscar_auth_sendrequest_menu
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_68881654
mov	[esp+2Ch+var_24], offset aPurple_blist_n 
mov	[esp+2Ch+var_28], offset aOscar_auth_sen 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68881684
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_name
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	oscar_auth_sendrequest
jmp	short loc_68881641
call	__stack_chk_fail
align 4
public oscar_auth_recvrequest
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], ebp
mov	[esp+6Ch+var_34], edx
mov	[esp+6Ch+var_30], ecx
call	purple_connection_get_account
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Ch
call	g_malloc
mov	ebx, eax
mov	[eax], ebp
mov	[eax+4], edi
mov	ecx, [esp+6Ch+var_30]
mov	[eax+8], ecx
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], esi
call	purple_find_buddy
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_50], offset sub_68881290
mov	[esp+6Ch+var_54], offset sub_6888141C
test	eax, eax
setnz	al
movzx	eax, al
mov	[esp+6Ch+var_58], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], edx
mov	eax, [ebx+8]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
mov	eax, [ebx+4]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	purple_account_request_authorization
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68881740
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public sub_68881748
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_6888178C
mov	[esp+2Ch+var_2C], esi
call	g_malloc
mov	[ebx], eax
mov	[ebx+4], esi
mov	dword ptr [ebx+8], 0
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881793
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, 0FFFFFFFFh
jmp	short loc_6888177A
call	__stack_chk_fail
public sub_68881798
			
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_688817D7
mov	[eax], ecx
mov	[eax+4], edx
mov	dword ptr [eax+8], 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688817DE
add	esp, 18h
pop	ebx
retn
mov	eax, 0FFFFFFFFh
jmp	short loc_688817C6
call	__stack_chk_fail
align 4
public sub_688817E4
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881811
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
align 4
public sub_68881818
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+4]
sub	eax, [edx+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881840
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public sub_68881848
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888186D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public sub_68881874
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
cmp	[edx+4], eax
jb	short loc_688818A4
mov	[edx+8], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688818C7
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aOffBsLen 
mov	[esp+2Ch+var_28], offset aByte_stream_se 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_68881893
call	__stack_chk_fail
public sub_688818CC
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	sub_68881874
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688818FE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public sub_68881904
			
push	esi
push	ebx
sub	esp, 24h
mov	ecx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [ecx+8]
mov	esi, eax
add	esi, edx
js	short loc_68881968
mov	ebx, [ecx+4]
sub	ebx, edx
cmp	eax, ebx
jbe	short loc_68881960
mov	[esp+2Ch+var_24], offset aGsizeNByte_str 
mov	[esp+2Ch+var_28], offset aByte_stream_ad 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881988
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[ecx+8], esi
jmp	short loc_6888194D
align 4
mov	[esp+2Ch+var_24], offset aByte_stream_cu 
mov	[esp+2Ch+var_28], offset aByte_stream_ad 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_6888194D
call	__stack_chk_fail
align 10h
public sub_68881990
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
cmp	[eax+4], edx
jz	short loc_688819C8
lea	ecx, [edx+1]
mov	[eax+8], ecx
mov	eax, [eax]
mov	al, [eax+edx]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688819E8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream_by 
mov	[esp+2Ch+var_28], offset aByte_stream_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_688819B6
call	__stack_chk_fail
align 10h
public sub_688819F0
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
mov	ecx, [eax+4]
sub	ecx, edx
cmp	ecx, 1
jbe	short loc_68881A38
lea	ecx, [edx+2]
mov	[eax+8], ecx
mov	ecx, [eax]
movzx	eax, byte ptr [ecx+edx]
shl	eax, 8
movzx	edx, byte ptr [ecx+edx+1]
add	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881A58
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__0 
mov	[esp+2Ch+var_28], offset aByte_stream__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881A26
call	__stack_chk_fail
align 10h
public sub_68881A60
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
mov	ecx, [eax+4]
sub	ecx, edx
cmp	ecx, 3
jbe	short loc_68881ABC
lea	ecx, [edx+4]
mov	[eax+8], ecx
mov	ecx, [eax]
movzx	eax, byte ptr [ecx+edx]
shl	eax, 18h
movzx	ebx, byte ptr [ecx+edx+3]
add	ebx, eax
movzx	eax, byte ptr [ecx+edx+1]
shl	eax, 10h
add	eax, ebx
movzx	edx, byte ptr [ecx+edx+2]
shl	edx, 8
add	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881ADC
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_24], offset aByte_stream__2 
mov	[esp+2Ch+var_28], offset aByte_stream__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881AAB
call	__stack_chk_fail
align 4
public sub_68881AE4
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
cmp	[eax+4], edx
jz	short loc_68881B1C
lea	ecx, [edx+1]
mov	[eax+8], ecx
mov	eax, [eax]
mov	al, [eax+edx]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881B3C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream_by 
mov	[esp+2Ch+var_28], offset aByte_stream__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881B0A
call	__stack_chk_fail
align 4
public sub_68881B44
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
mov	ecx, [eax+4]
sub	ecx, edx
cmp	ecx, 1
jbe	short loc_68881B8C
lea	ecx, [edx+2]
mov	[eax+8], ecx
mov	ecx, [eax]
movzx	eax, byte ptr [ecx+edx+1]
shl	eax, 8
movzx	edx, byte ptr [ecx+edx]
add	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881BAC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__0 
mov	[esp+2Ch+var_28], offset aByte_stream__5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881B7A
call	__stack_chk_fail
align 4
public sub_68881BB4
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
mov	ecx, [eax+4]
sub	ecx, edx
cmp	ecx, 3
jbe	short loc_68881C14
lea	ecx, [edx+4]
mov	[eax+8], ecx
mov	ecx, [eax]
movzx	ebx, byte ptr [ecx+edx+1]
shl	ebx, 8
movzx	eax, byte ptr [ecx+edx+2]
shl	eax, 10h
add	eax, ebx
movzx	esi, byte ptr [ecx+edx]
add	eax, esi
movzx	edx, byte ptr [ecx+edx+3]
shl	edx, 18h
add	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881C34
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__2 
mov	[esp+2Ch+var_28], offset aByte_stream__6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881C00
call	__stack_chk_fail
align 4
public sub_68881C3C
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edx, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	esi, [edx+8]
mov	ecx, [edx+4]
sub	ecx, esi
cmp	eax, ecx
ja	short loc_68881C84
add	esi, [edx]
mov	edi, ebx
mov	ecx, eax
rep movsb
add	[edx+8], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881CA4
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aByte_stream__7 
mov	[esp+2Ch+var_28], offset aByte_stream__8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881C71
call	__stack_chk_fail
align 4
public sub_68881CAC
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+4]
sub	eax, [ebx+8]
cmp	ebp, eax
ja	short loc_68881CFC
mov	[esp+3Ch+var_3C], ebp
call	g_malloc
mov	esi, [ebx]
add	esi, [ebx+8]
mov	edi, eax
mov	ecx, ebp
rep movsb
add	[ebx+8], ebp
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881D1C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aByte_stream__7 
mov	[esp+3Ch+var_38], offset aByte_stream__9 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881CE6
call	__stack_chk_fail
align 4
public sub_68881D24
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+4]
sub	eax, [ebx+8]
cmp	ebp, eax
ja	short loc_68881D7C
lea	eax, [ebp+1]
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	esi, [ebx]
add	esi, [ebx+8]
mov	edi, eax
mov	ecx, ebp
rep movsb
add	[ebx+8], ebp
mov	byte ptr [eax+ebp], 0
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881D9C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aByte_stream__7 
mov	[esp+3Ch+var_38], offset aByte_stream_10 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881D65
call	__stack_chk_fail
align 4
public sub_68881DA4
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
cmp	[eax+4], edx
jz	short loc_68881DE4
mov	ebx, [eax]
mov	[ebx+edx], cl
inc	dword ptr [eax+8]
mov	eax, 1
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_68881E04
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream_by 
mov	[esp+2Ch+var_28], offset aByte_stream_pu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881DD1
call	__stack_chk_fail
align 4
public sub_68881E0C
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ecx, [eax+8]
mov	edx, [eax+4]
sub	edx, ecx
cmp	edx, 1
jbe	short loc_68881E64
mov	esi, [eax]
mov	edx, ebx
shr	dx, 8
mov	[esi+ecx], dl
mov	ecx, [eax]
mov	edx, [eax+8]
mov	[ecx+edx+1], bl
add	dword ptr [eax+8], 2
mov	eax, 2
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881E84
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__0 
mov	[esp+2Ch+var_28], offset aByte_stream_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881E4F
call	__stack_chk_fail
align 4
public sub_68881E8C
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ebx, [eax+8]
mov	edx, [eax+4]
sub	edx, ebx
cmp	edx, 3
jbe	short loc_68881EFC
mov	esi, [eax]
mov	edx, ecx
shr	edx, 18h
mov	[esi+ebx], dl
mov	ebx, [eax]
mov	esi, [eax+8]
mov	edx, ecx
shr	edx, 10h
mov	[ebx+esi+1], dl
mov	ebx, [eax]
mov	esi, [eax+8]
mov	edx, ecx
shr	edx, 8
mov	[ebx+esi+2], dl
mov	ebx, [eax]
mov	edx, [eax+8]
mov	[ebx+edx+3], cl
add	dword ptr [eax+8], 4
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68881F1C
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aByte_stream__2 
mov	[esp+2Ch+var_28], offset aByte_stream_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881EEA
call	__stack_chk_fail
align 4
public sub_68881F24
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
cmp	[eax+4], edx
jz	short loc_68881F64
mov	ebx, [eax]
mov	[ebx+edx], cl
inc	dword ptr [eax+8]
mov	eax, 1
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_68881F84
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream_by 
mov	[esp+2Ch+var_28], offset aByte_stream_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881F51
call	__stack_chk_fail
align 4
public sub_68881F8C
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ecx, [eax+8]
mov	edx, [eax+4]
sub	edx, ecx
cmp	edx, 1
jbe	short loc_68881FE0
mov	edx, [eax]
mov	[edx+ecx], bl
mov	ecx, [eax]
mov	edx, [eax+8]
shr	bx, 8
mov	[ecx+edx+1], bl
add	dword ptr [eax+8], 2
mov	eax, 2
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882000
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aByte_stream__0 
mov	[esp+2Ch+var_28], offset aByte_stream_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68881FCC
call	__stack_chk_fail
align 4
public sub_68882008
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ebx, [eax+8]
mov	edx, [eax+4]
sub	edx, ebx
cmp	edx, 3
jbe	short loc_68882078
mov	edx, [eax]
mov	[edx+ebx], cl
mov	ebx, [eax]
mov	esi, [eax+8]
mov	edx, ecx
shr	edx, 8
mov	[ebx+esi+1], dl
mov	ebx, [eax]
mov	esi, [eax+8]
mov	edx, ecx
shr	edx, 10h
mov	[ebx+esi+2], dl
mov	ebx, [eax]
mov	edx, [eax+8]
shr	ecx, 18h
mov	[ebx+edx+3], cl
add	dword ptr [eax+8], 4
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882098
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__2 
mov	[esp+2Ch+var_28], offset aByte_stream_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_68882064
call	__stack_chk_fail
align 10h
public sub_688820A0
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+8]
mov	ecx, [eax+4]
sub	ecx, edx
cmp	ebx, ecx
ja	short loc_688820EC
add	edx, [eax]
mov	edi, edx
mov	ecx, ebx
rep movsb
add	[eax+8], ebx
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888210C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aByte_stream__7 
mov	[esp+2Ch+var_28], offset aByte_stream_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_688820D7
call	__stack_chk_fail
align 4
public sub_68882114
			
push	edi
sub	esp, 28h
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	sub_688820A0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882158
add	esp, 28h
pop	edi
retn
call	__stack_chk_fail
align 10h
public sub_68882160
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], ecx
xor	ecx, ecx
mov	esi, [eax+8]
mov	ecx, [eax+4]
sub	ecx, esi
cmp	ebx, ecx
ja	short loc_688821AC
mov	ebp, [edx+8]
mov	ecx, [edx+4]
sub	ecx, ebp
cmp	ebx, ecx
ja	short loc_688821E0
add	ebp, [edx]
add	esi, [eax]
mov	edi, ebp
mov	ecx, ebx
rep movsb
add	[edx+8], ebx
add	[eax+8], ebx
mov	eax, ebx
jmp	short loc_688821CA
align 4
mov	[esp+3Ch+var_34], offset aByte_stream_17 
mov	[esp+3Ch+var_38], offset aByte_stream_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882200
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_34], offset aByte_stream__7 
mov	[esp+3Ch+var_38], offset aByte_stream_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_688821CA
call	__stack_chk_fail
align 4
public sub_68882208
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	eax, [eax+68h]
mov	[esp+2Ch+Str], eax
call	purple_connection_get_account
mov	[esp+2Ch+Str], eax
call	purple_account_get_username
mov	[esp+2Ch+Str], eax 
call	atoi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882257
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	sub_68882008
call	__stack_chk_fail
public sub_6888225C
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_8]
movzx	eax, word ptr [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_68881E0C
test	esi, esi
jz	short loc_68882291
mov	eax, [esi+4]
test	eax, eax
jnz	short loc_688822C4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	sub_68881DA4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68882311
mov	[esp+2Ch+arg_4], 0
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_68881DA4
align 4
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_2C], ebx
call	sub_68881DA4
movzx	eax, byte ptr [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_68881DA4
mov	[esp+2Ch+var_2C], esi
call	sub_688818CC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68882311
mov	eax, [esi+4]
mov	[esp+2Ch+arg_8], eax
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_68882160
			
call	__stack_chk_fail
align 4
public sub_68882318
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_8]
movzx	edx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_6888234B
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
mov	edi, ecx
dec	edi
jnz	short loc_68882374
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	sub_6888225C
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688823DA
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
add	ecx, 3
mov	[esp+4Ch+var_48], ecx
lea	esi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], edx
call	sub_68881748
and	edi, 0FFFFh
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	sub_68882114
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	[esp+4Ch+var_44], esi
mov	edx, [esp+4Ch+var_30]
movzx	edx, dx
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	sub_6888225C
mov	[esp+4Ch+var_4C], esi
call	sub_688817E4
jmp	short loc_6888235F
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aStatuscode 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_6888246C
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_data_unescaped
test	eax, eax
jz	short loc_6888246C
mov	edi, offset a200 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jnz	short loc_6888246C
			
xor	ebx, ebx
			
mov	[esp+4Ch+var_48], offset aReceivedUnexpe 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_30], eax
call	g_free
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688824BD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
test	ebx, ebx
jz	short loc_68882426
mov	[esp+4Ch+var_48], offset aStatustext 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_68882426
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_68882428
cmp	byte ptr [eax],	0
jz	short loc_68882428
mov	[esp+4Ch+var_48], offset aReceivedUnex_0 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
jmp	short loc_68882448
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	edi, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], offset aHmac 
call	purple_cipher_context_new_by_name
mov	ebx, eax
mov	[esp+4Ch+var_44], offset aSha256 
mov	[esp+4Ch+var_48], offset aHash 
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_set_option
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_set_key
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_append
mov	[esp+4Ch+var_40], 0
lea	esi, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], 20h
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_destroy
mov	[esp+4Ch+var_48], 20h
mov	[esp+4Ch+var_4C], esi
call	purple_base64_encode
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888257C
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	edi, [esp+7Ch+arg_C]
mov	esi, [esp+7Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_24], 0
mov	ebp, [ebx+68h]
mov	dword ptr [ebx], 0
test	esi, esi
jz	short loc_68882634
xor	eax, eax
mov	edx, [ebx+44h]
test	edx, edx
setnz	al
mov	ebx, ds:off_688AEB0C[eax*4]
mov	[esp+7Ch+Str2],	offset aErrorRequestin 
mov	[esp+7Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	ebx
mov	[esp+7Ch+Str], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	0
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+7Ch+Str], ebx
call	g_free
			
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_68882BC5
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	edi, edi
jnz	short loc_68882654
mov	[esp+7Ch+Str2],	offset aTheServerRetur 
mov	[esp+7Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	esi, eax
jmp	loc_688825C7
align 4
mov	[esp+7Ch+Str], ebp
mov	[esp+7Ch+var_50], edx
call	purple_connection_get_protocol_data
mov	[esp+7Ch+var_40], eax
mov	[esp+7Ch+Str], ebp
call	purple_connection_get_account
mov	[esp+7Ch+var_74], offset Str2 
mov	[esp+7Ch+Str2],	offset aEncryption 
mov	[esp+7Ch+Str], eax
call	purple_account_get_string
mov	[esp+7Ch+Str1],	eax
mov	[esp+7Ch+Str2],	edi
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], edx
call	xmlnode_from_str
mov	[esp+7Ch+var_48], eax
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_68882A93
mov	[esp+7Ch+Str2],	offset aStatuscode 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
mov	[esp+7Ch+var_50], edx
call	xmlnode_get_child
mov	esi, eax
mov	[esp+7Ch+Str2],	offset aData 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_child
mov	[esp+7Ch+var_44], eax
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_68882830
mov	[esp+7Ch+Str2],	offset aHost 
mov	[esp+7Ch+Str], eax
call	xmlnode_get_child
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+Str2],	offset aPort 
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_child
mov	[esp+7Ch+var_34], eax
mov	[esp+7Ch+Str2],	offset aCookie 
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_child
mov	[esp+7Ch+var_30], eax
mov	edx, [esp+7Ch+var_50]
test	esi, esi
jz	loc_68882850
mov	[esp+7Ch+Str], esi
mov	[esp+7Ch+var_50], edx
call	xmlnode_get_data_unescaped
mov	esi, eax
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_68882850
mov	[esp+7Ch+Str], eax 
call	atoi
mov	edi, eax
cmp	eax, 0C8h
mov	edx, [esp+7Ch+var_50]
jz	loc_68882932
mov	[esp+7Ch+Str2],	offset aStatusdetailco 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_688828B8
mov	[esp+7Ch+Str], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_688828B8
mov	[esp+7Ch+Str], eax 
call	atoi
mov	[esp+7Ch+Str], ebx
mov	[esp+7Ch+var_4C], eax
call	g_free
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	offset aStartoscarsess 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_error
cmp	edi, 191h
mov	eax, [esp+7Ch+var_4C]
jz	loc_688828E5
cmp	edi, 25Fh
jnz	loc_688828F0
			
mov	[esp+7Ch+Str2],	offset aYouHaveBeenCon 
mov	[esp+7Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	10h
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+7Ch+Str], esi
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_free
jmp	loc_6888261A
mov	[esp+7Ch+var_30], 0
mov	[esp+7Ch+var_34], 0
mov	[esp+7Ch+var_3C], 0
jmp	loc_6888272E
align 10h
			
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aStartoscarse_0 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	eax, [esp+7Ch+var_40]
mov	edx, [eax+44h]
xor	eax, eax
test	edx, edx
setnz	al
mov	edx, ds:off_688AEB0C[eax*4]
mov	eax, [esp+7Ch+var_48]
call	sub_688823E0
mov	ebx, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	0
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+7Ch+Str], ebx
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_free
jmp	loc_6888261A
align 4
			
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	offset aStartoscarsess 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_error
cmp	edi, 191h
jnz	loc_688827E3
jmp	loc_688827EF
cmp	eax, 3F6h
jnz	loc_688827EF
mov	eax, [esp+7Ch+var_40]
mov	eax, [eax+44h]
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, ds:off_688AEB0C[eax*4]
mov	eax, [esp+7Ch+var_48]
call	sub_688823E0
mov	ebx, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	10h
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+7Ch+Str], ebx
call	g_free
jmp	loc_68882817
mov	[esp+7Ch+Str], esi
mov	[esp+7Ch+var_50], edx
call	g_free
mov	eax, [esp+7Ch+var_44]
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_68882ADA
mov	edi, [esp+7Ch+var_3C]
test	edi, edi
jz	loc_68882ADA
mov	esi, [esp+7Ch+var_34]
test	esi, esi
jz	loc_68882ADA
mov	ecx, [esp+7Ch+var_30]
test	ecx, ecx
jz	loc_68882ADA
mov	edi, offset aNo_encryption 
mov	ecx, 0Eh
mov	esi, [esp+7Ch+Str1]
repe cmpsb
jz	loc_68882ACD
mov	[esp+7Ch+Str2],	offset aTlscertname 
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
mov	[esp+7Ch+var_50], edx
call	xmlnode_get_child
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jz	loc_68882AEB
mov	[esp+7Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	[esp+7Ch+var_44], eax
mov	edx, [esp+7Ch+var_50]
			
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+Str], eax
mov	[esp+7Ch+var_50], edx
call	xmlnode_get_data_unescaped
mov	esi, eax
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	edi, eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	ecx, eax
test	esi, esi
mov	edx, [esp+7Ch+var_50]
jz	short loc_68882A0D
cmp	byte ptr [esi],	0
jz	short loc_68882A0D
test	edi, edi
jz	short loc_68882A0D
cmp	byte ptr [edi],	0
jz	short loc_68882A0D
test	eax, eax
jz	short loc_68882A0D
cmp	byte ptr [eax],	0
jnz	loc_68882B34
			
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aStartoscarse_1 
mov	[esp+7Ch+Str], offset aOscar_0 
mov	[esp+7Ch+var_4C], ecx
call	purple_debug_error
mov	eax, [esp+7Ch+var_40]
mov	eax, [eax+44h]
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, ds:off_688AEB0C[eax*4]
mov	eax, [esp+7Ch+var_48]
call	sub_688823E0
mov	ebx, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	0
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+7Ch+Str], ebx
call	g_free
mov	[esp+7Ch+Str], esi
call	g_free
mov	[esp+7Ch+Str], edi
call	g_free
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str], ecx
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_free
jmp	loc_6888261A
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aStartoscarse_2 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	eax, [esp+7Ch+var_40]
mov	eax, [eax+44h]
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, ds:off_688AEB0C[eax*4]
xor	eax, eax
call	sub_688823E0
jmp	loc_688825FC
mov	[esp+7Ch+var_44], 0
jmp	loc_688829BC
			
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aStartoscarse_1 
jmp	loc_6888285C
mov	[esp+7Ch+Str2],	offset Str2 
mov	eax, [esp+7Ch+Str1]
mov	[esp+7Ch+Str], eax 
mov	[esp+7Ch+var_50], edx
call	strcmp
test	eax, eax
mov	edx, [esp+7Ch+var_50]
jnz	loc_68882BCA
mov	[esp+7Ch+Str2],	offset aWeHavenTReceiv 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_warning
mov	[esp+7Ch+var_44], 0
mov	edx, [esp+7Ch+var_50]
jmp	loc_688829BC
mov	[esp+7Ch+Str], edi 
mov	[esp+7Ch+var_4C], eax
call	atoi
mov	[esp+7Ch+var_48], eax
mov	[esp+7Ch+Str], edi
call	g_free
lea	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str2],	eax
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str], ecx
call	purple_base64_decode
mov	edx, eax
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_64], eax
movzx	eax, word ptr [esp+7Ch+var_24]
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], edx
movzx	eax, word ptr [esp+7Ch+var_48]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	ebx
mov	[esp+7Ch+Str], ebp
mov	[esp+7Ch+var_50], edx
call	oscar_connect_to_bos
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], edx
call	g_free
mov	[esp+7Ch+Str], esi
call	g_free
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str], ecx
call	g_free
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	g_free
jmp	loc_6888261A
call	__stack_chk_fail
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aStartoscarse_3 
mov	[esp+7Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	[esp+7Ch+Str2],	offset aYouRequiredEnc 
mov	[esp+7Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	4
mov	[esp+7Ch+Str], ebp
call	purple_connection_error_reason
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	xmlnode_free
jmp	loc_6888261A
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_4]
mov	edx, [esp+8Ch+arg_8]
mov	edi, [esp+8Ch+arg_C]
mov	esi, [esp+8Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+68h]
mov	dword ptr [ebx], 0
test	esi, esi
jz	short loc_68882CC8
xor	eax, eax
mov	ebx, [ebx+44h]
test	ebx, ebx
setnz	al
mov	ebx, ds:off_688AEAA8[eax*4]
mov	[esp+8Ch+EndPtr], offset aErrorRequestin 
mov	[esp+8Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+8Ch+Radix], esi
mov	[esp+8Ch+EndPtr], ebx
mov	[esp+8Ch+Str], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 0
mov	[esp+8Ch+Str], ebp
call	purple_connection_error_reason
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68883018
mov	[esp+8Ch+arg_0], ebx
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
test	edi, edi
jnz	short loc_68882CE8
mov	[esp+8Ch+EndPtr], offset aTheServerRetur 
mov	[esp+8Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	esi, eax
jmp	loc_68882C57
align 4
mov	[esp+8Ch+Str], ebp
mov	[esp+8Ch+var_50], edx
call	purple_connection_get_protocol_data
mov	[esp+8Ch+var_3C], eax
mov	[esp+8Ch+EndPtr], edi
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], edx
call	xmlnode_from_str
mov	[esp+8Ch+var_4C], eax
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_68883118
mov	[esp+8Ch+EndPtr], offset aStatuscode 
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_50], edx
call	xmlnode_get_child
mov	esi, eax
mov	[esp+8Ch+EndPtr], offset aData 
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	[esp+8Ch+var_48], eax
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_68883020
mov	[esp+8Ch+EndPtr], offset aSessionsecret	
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	[esp+8Ch+var_38], eax
mov	[esp+8Ch+EndPtr], offset aHosttime 
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	[esp+8Ch+var_30], eax
mov	[esp+8Ch+EndPtr], offset aToken	
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	[esp+8Ch+var_40], eax
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_68883045
mov	[esp+8Ch+EndPtr], offset aA 
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	[esp+8Ch+var_34], eax
mov	edx, [esp+8Ch+var_50]
			
test	esi, esi
jz	loc_6888307B
mov	[esp+8Ch+Str], esi
mov	[esp+8Ch+var_50], edx
call	xmlnode_get_data_unescaped
mov	[esp+8Ch+var_44], eax
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_6888307B
mov	edi, offset a200 
mov	ecx, 4
mov	esi, eax
repe cmpsb
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax 
jz	loc_68882F00
call	atoi
mov	ebx, eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_free
mov	[esp+8Ch+EndPtr], offset aStatusdetailco 
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_68883052
mov	[esp+8Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	esi, eax
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_68883052
mov	[esp+8Ch+Str], eax 
call	atoi
mov	edi, eax
mov	[esp+8Ch+Str], esi
call	g_free
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], edi
mov	[esp+8Ch+Radix], ebx
mov	[esp+8Ch+EndPtr], offset aClientloginRes 
mov	[esp+8Ch+Str], offset aOscar_0 
call	purple_debug_error
cmp	ebx, 14Ah
jz	loc_688830D3
cmp	ebx, 191h
jnz	short loc_68882E9C
cmp	edi, 0BCBh
jz	loc_688833CD
			
mov	eax, [esp+8Ch+var_3C]
mov	edx, [eax+44h]
xor	eax, eax
test	edx, edx
setnz	al
mov	edx, ds:off_688AEAA8[eax*4]
mov	eax, [esp+8Ch+var_4C]
call	sub_688823E0
mov	ebx, eax
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 10h
mov	[esp+8Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+8Ch+Str], ebx
call	g_free
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68883018
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+arg_0], eax
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_free
align 10h
mov	[esp+8Ch+var_50], edx
call	g_free
mov	eax, [esp+8Ch+var_48]
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	loc_688830C5
mov	eax, [esp+8Ch+var_38]
test	eax, eax
jz	loc_688830C5
mov	eax, [esp+8Ch+var_40]
test	eax, eax
jz	loc_688830C5
mov	eax, [esp+8Ch+var_34]
test	eax, eax
jz	loc_688830C5
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_50], edx
call	xmlnode_get_data_unescaped
mov	[esp+8Ch+var_48], eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	esi, eax
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_data_unescaped
mov	edi, eax
mov	eax, [esp+8Ch+var_48]
test	eax, eax
mov	edx, [esp+8Ch+var_50]
jz	short loc_68882F98
mov	eax, [esp+8Ch+var_48]
cmp	byte ptr [eax],	0
jz	short loc_68882F98
test	esi, esi
jz	short loc_68882F98
cmp	byte ptr [esi],	0
jz	short loc_68882F98
test	edi, edi
jz	short loc_68882F98
cmp	byte ptr [edi],	0
jnz	loc_68883151
			
mov	[esp+8Ch+Radix], edx
mov	[esp+8Ch+EndPtr], offset aClientloginR_0 
mov	[esp+8Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	eax, [esp+8Ch+var_3C]
mov	ecx, [eax+44h]
xor	eax, eax
test	ecx, ecx
setnz	al
mov	edx, ds:off_688AEAA8[eax*4]
mov	eax, [esp+8Ch+var_4C]
call	sub_688823E0
mov	ebx, eax
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 0
mov	[esp+8Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+8Ch+Str], ebx
call	g_free
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	g_free
mov	[esp+8Ch+Str], esi
call	g_free
mov	[esp+8Ch+Str], edi
call	g_free
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_68882EE8
			
call	__stack_chk_fail
align 10h
mov	[esp+8Ch+var_34], 0
mov	[esp+8Ch+var_40], 0
mov	[esp+8Ch+var_30], 0
mov	[esp+8Ch+var_38], 0
jmp	loc_68882DBE
mov	[esp+8Ch+var_34], 0
jmp	loc_68882DBE
			
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+Radix], ebx
mov	[esp+8Ch+EndPtr], offset aClientloginRes 
mov	[esp+8Ch+Str], offset aOscar_0 
call	purple_debug_error
jmp	loc_68882E9C
			
mov	[esp+8Ch+Radix], edx
mov	[esp+8Ch+EndPtr], offset aClientloginR_1 
mov	[esp+8Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	eax, [esp+8Ch+var_3C]
mov	eax, [eax+44h]
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, ds:off_688AEAA8[eax*4]
mov	eax, [esp+8Ch+var_4C]
call	sub_688823E0
mov	ebx, eax
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 0
jmp	loc_68882EC8
			
mov	[esp+8Ch+Radix], edx
mov	[esp+8Ch+EndPtr], offset aClientloginR_0 
jmp	short loc_68883087
cmp	edi, 0BC3h
jz	loc_688833FA
cmp	edi, 0BC7h
jnz	loc_68882E9C
mov	[esp+8Ch+EndPtr], offset aServerRequeste 
mov	[esp+8Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 2
mov	[esp+8Ch+Str], ebp
call	purple_connection_error_reason
jmp	loc_68882ED8
mov	[esp+8Ch+Radix], edx
mov	[esp+8Ch+EndPtr], offset aClientloginCou 
mov	[esp+8Ch+Str], offset aOscar_0 
call	purple_debug_error
mov	eax, [esp+8Ch+var_3C]
mov	ecx, [eax+44h]
xor	eax, eax
test	ecx, ecx
setnz	al
mov	edx, ds:off_688AEAA8[eax*4]
xor	eax, eax
call	sub_688823E0
jmp	loc_68882C8C
mov	[esp+8Ch+Radix], 0Ah 
mov	[esp+8Ch+EndPtr], 0 
mov	[esp+8Ch+Str], edi 
call	strtol
mov	[esp+8Ch+var_40], eax
mov	[esp+8Ch+Str], edi
call	g_free
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	xmlnode_free
mov	[esp+8Ch+Str], ebp
call	purple_connection_get_password
mov	edi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	[esp+8Ch+Str], ebp
call	purple_connection_get_password
mov	edx, [ebx+44h]
test	edx, edx
jz	short loc_688831B2
cmp	edi, 8
jle	short loc_688831B2
mov	edi, 8
			
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], edi
mov	[esp+8Ch+Str], offset a_S 
call	g_strdup_printf
mov	edi, eax
mov	edx, esi
call	sub_688824C4
mov	[esp+8Ch+var_4C], eax
mov	[esp+8Ch+Str], edi
call	g_free
mov	[esp+8Ch+Str], esi
call	g_free
mov	eax, [ebx+68h]
mov	[esp+8Ch+Str], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Radix], offset	Str2 
mov	[esp+8Ch+EndPtr], offset aEncryption 
mov	[esp+8Ch+Str], eax
call	purple_account_get_string
mov	edi, offset aNo_encryption 
mov	ecx, 0Eh
mov	esi, eax
repe cmpsb
setnz	dl
movzx	edx, dl
mov	esi, edx
mov	eax, [ebx+44h]
test	eax, eax
jnz	loc_688833B9
mov	eax, offset aPrplAimClientk 
mov	[esp+8Ch+EndPtr], offset aMa15d7jtxbmvgR 
mov	[esp+8Ch+Str], eax
call	oscar_get_ui_info_string
mov	ebp, eax
mov	eax, [ebx+44h]
test	eax, eax
jnz	loc_688833C3
mov	eax, offset aPrplAimDisti_0 
mov	[esp+8Ch+EndPtr], 611h
mov	[esp+8Ch+Str], eax
call	oscar_get_ui_info_int
mov	edi, eax
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	purple_url_encode
mov	[esp+8Ch+var_78], esi
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], ebp
mov	[esp+8Ch+Radix], edi
mov	[esp+8Ch+EndPtr], eax
mov	[esp+8Ch+Str], offset aASDistidDFXmlK 
call	g_strdup_printf
mov	esi, eax
xor	eax, eax
mov	ecx, [ebx+44h]
test	ecx, ecx
setnz	al
mov	eax, ds:off_688AEB0C[eax*4]
mov	[esp+8Ch+Str], eax
call	purple_url_encode
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	ebp, eax
mov	[esp+8Ch+Str], esi
call	purple_url_encode
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+Radix], ebp
mov	[esp+8Ch+EndPtr], offset aGet 
mov	[esp+8Ch+Str], offset aSSS_0 
call	g_strdup_printf
mov	edi, eax
mov	[esp+8Ch+Str], ebp
call	g_free
mov	edx, edi
mov	eax, [esp+8Ch+var_4C]
call	sub_688824C4
mov	ebp, eax
mov	[esp+8Ch+Str], edi
call	g_free
mov	[esp+8Ch+var_80], ebp
mov	[esp+8Ch+Radix], esi
xor	eax, eax
mov	edi, [ebx+44h]
test	edi, edi
setnz	al
mov	eax, ds:off_688AEB0C[eax*4]
mov	[esp+8Ch+EndPtr], eax
mov	[esp+8Ch+Str], offset aS?SSig_sha256S 
call	g_strdup_printf
mov	edi, eax
mov	[esp+8Ch+Str], esi
call	g_free
mov	[esp+8Ch+Str], ebp
call	g_free
mov	[esp+8Ch+var_68], ebx
mov	[esp+8Ch+var_6C], offset sub_68882584
mov	[esp+8Ch+var_70], 0FFFFFFFFh
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+Radix], 1
mov	[esp+8Ch+EndPtr], edi
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	purple_util_fetch_url_request_len_with_account
mov	[ebx], eax
mov	[esp+8Ch+Str], edi
call	g_free
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	g_free
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68883018
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+arg_0], eax
jmp	loc_68882CB9
mov	eax, offset aPrplIcqClientk 
jmp	loc_68883230
mov	eax, offset aPrplIcqDisti_0 
jmp	loc_68883252
mov	[esp+8Ch+EndPtr], offset aAolDoesNotAllo 
mov	[esp+8Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+8Ch+Radix], eax
mov	[esp+8Ch+EndPtr], 10h
mov	[esp+8Ch+Str], ebp
call	purple_connection_error_reason
jmp	loc_68882ED8
mov	[esp+8Ch+Str], ebp
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+8Ch+Str], eax
call	purple_account_get_remember_password
test	eax, eax
jnz	short loc_68883420
mov	[esp+8Ch+EndPtr], 0
mov	[esp+8Ch+Str], ebx
call	purple_account_set_password
mov	[esp+8Ch+EndPtr], offset aIncorrectPassw 
jmp	loc_688830F3
align 10h
public send_client_login
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	ebp, [esi+68h]
mov	[esp+6Ch+var_6C], ebp
call	purple_connection_get_password
mov	edx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	eax, [esi+44h]
test	eax, eax
jz	short loc_68883479
cmp	ecx, 8
jg	loc_68883608
			
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], edx
call	g_strndup
mov	edi, eax
mov	[esp+6Ch+var_6C], offset byte_688AE990
call	g_string_new
mov	ebx, eax
mov	eax, [esi+44h]
test	eax, eax
jnz	loc_68883614
mov	eax, offset aPrplAimClientk 
mov	[esp+6Ch+var_68], offset aMa15d7jtxbmvgR 
mov	[esp+6Ch+var_6C], eax
call	oscar_get_ui_info_string
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aDevidS 
mov	[esp+6Ch+var_6C], ebx
call	g_string_append_printf
mov	[esp+6Ch+var_68], offset aFXml 
mov	[esp+6Ch+var_6C], ebx
call	g_string_append_printf
mov	[esp+6Ch+var_6C], edi
call	purple_url_encode
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aPwdS 
mov	[esp+6Ch+var_6C], ebx
call	g_string_append_printf
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	purple_url_encode
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSS 
mov	[esp+6Ch+var_6C], ebx
call	g_string_append_printf
mov	[esp+6Ch+var_6C], edi
call	g_free
mov	[esp+6Ch+var_6C], offset aPostAuthClient 
call	g_string_new
mov	edi, eax
mov	[esp+6Ch+var_68], offset aContentTypeApp 
mov	[esp+6Ch+var_6C], eax
call	g_string_append_printf
mov	eax, [ebx+4]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aContentLengthU 
mov	[esp+6Ch+var_6C], edi
call	g_string_append_printf
mov	eax, [ebx+4]
mov	[esp+6Ch+var_64], eax
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_string_append_len
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	g_string_free
mov	edx, [edi]
xor	eax, eax
mov	ecx, [esi+44h]
test	ecx, ecx
setnz	al
mov	ebx, ds:off_688AEAA8[eax*4]
mov	[esp+6Ch+var_6C], ebp
mov	[esp+6Ch+var_34], edx
call	purple_connection_get_account
mov	[esp+6Ch+var_48], esi
mov	[esp+6Ch+var_4C], offset sub_68882C1C
mov	[esp+6Ch+var_50], 0FFFFFFFFh
mov	[esp+6Ch+var_54], 0
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], eax
call	purple_util_fetch_url_request_len_with_account
mov	[esi], eax
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_6888361E
mov	[esp+6Ch+arg_4], 1
mov	[esp+6Ch+arg_0], edi
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
mov	ecx, 8
jmp	loc_68883479
align 4
mov	eax, offset aPrplIcqClientk 
jmp	loc_688834A5
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ecx, ecx
jz	loc_68883720
mov	esi, ecx
xor	edi, edi
jmp	loc_688836FF
align 10h
sub	eax, esi
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], esi
call	g_strndup
mov	edi, eax
test	eax, eax
jz	loc_68883758
mov	ebp, eax
mov	[esp+5Ch+Val], offset aUtf8 
mov	[esp+5Ch+Str], ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_688836B2
mov	[esp+5Ch+var_54], 0
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Val], edx
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_utf8_validate
test	eax, eax
jnz	loc_6888376C
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], offset aUtf8_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Val], edx
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_convert
mov	ebp, eax
test	ebx, ebx
jz	short loc_68883750
mov	[esp+5Ch+Str], edi
call	g_free
test	ebp, ebp
jnz	short loc_68883738
lea	esi, [ebx+1]
mov	[esp+5Ch+Val], 2Ch 
mov	[esp+5Ch+Str], esi 
call	strchr
mov	ebx, eax
test	eax, eax
jnz	loc_68883660
mov	ebp, esi
jmp	loc_6888367A
mov	[esp+5Ch+Val], offset aEncodingsIsNul 
mov	[esp+5Ch+Str], offset aOscar_1 
call	purple_debug_error
xor	ebp, ebp
xchg	ax, ax
			
mov	eax, ebp
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688837BF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
test	eax, eax
jnz	short loc_68883738
jmp	short loc_6888376C
align 4
mov	[esp+5Ch+Val], offset aErrorAllocatin 
mov	[esp+5Ch+Str], offset aOscar_1 
call	purple_debug_error
			
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jnz	short loc_68883778
xor	ebp, ebp
jmp	short loc_68883738
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_40], edx
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], offset a? 
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], offset aUtf8_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Val], edx
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_convert_with_fallback
mov	ebp, eax
jmp	loc_68883738
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	ebx, ecx
mov	ebp, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_24], 0
test	ecx, ecx
jz	loc_6888389C
cmp	byte ptr [ecx],	0
jz	loc_6888389C
mov	edi, edx
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], offset aUtf8_0 
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_68883874
mov	[esp+4Ch+var_48], ebp 
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax 
mov	ecx, ebx	
mov	edx, edi
mov	eax, esi
call	sub_68883624
mov	edx, [esp+4Ch+var_24]
test	edx, edx
jz	short loc_6888385E
mov	edx, [edx+8]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aConversionFrom 
mov	[esp+4Ch+var_4C], offset aOscar_1 
mov	[esp+4Ch+var_30], eax
call	purple_debug_warning
mov	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], edx
call	g_error_free
mov	eax, [esp+4Ch+var_30]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688838B8
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	g_utf8_validate
test	eax, eax
jz	short loc_688838A0
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	g_strndup
jmp	short loc_6888385E
align 4
			
xor	eax, eax
jmp	short loc_6888385E
mov	[esp+4Ch+var_48], offset aStringIsNotVal 
mov	[esp+4Ch+var_4C], offset aOscar_1 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_6888385E
call	__stack_chk_fail
align 10h
public oscar_encoding_to_utf8
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_68883A80
mov	[esp+4Ch+Val], offset aTextAolrtfChar 
mov	[esp+4Ch+Str], ebx
call	g_str_has_prefix
test	eax, eax
jz	loc_688839AC
			
mov	[esp+4Ch+Val], 22h 
mov	[esp+4Ch+Str], ebx 
call	strchr
mov	ebp, eax
mov	[esp+4Ch+Val], 22h 
mov	[esp+4Ch+Str], ebx 
call	strrchr
test	ebp, ebp
jz	short loc_6888392C
test	eax, eax
jz	short loc_6888392C
cmp	ebp, eax
jb	short loc_68883998
			
mov	[esp+4Ch+Str], ebx
call	g_strdup
mov	ebx, eax
test	ebx, ebx
jz	short loc_68883943
cmp	byte ptr [ebx],	0
jnz	loc_688839E4
			
mov	[esp+4Ch+Val], offset aEmptyEncodingA 
mov	[esp+4Ch+Str], offset aOscar_1 
call	purple_debug_info
			
test	esi, esi
jz	short loc_68883964
cmp	byte ptr [edi],	0
jnz	loc_68883A40
			
mov	[esp+4Ch+Val], esi
mov	[esp+4Ch+Str], edi
call	g_strndup
			
mov	[esp+4Ch+Str], ebx
mov	[esp+4Ch+var_30], eax
call	g_free
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68883AD9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
dec	eax
sub	eax, ebp
mov	[esp+4Ch+Val], eax
inc	ebp
mov	[esp+4Ch+Str], ebp
call	g_strndup
mov	ebx, eax
jmp	short loc_68883936
mov	[esp+4Ch+Val], offset aTextXAolrtfCha 
mov	[esp+4Ch+Str], ebx
call	g_str_has_prefix
test	eax, eax
jnz	loc_688838FE
mov	[esp+4Ch+Val], offset aTextPlainChars 
mov	[esp+4Ch+Str], ebx
call	g_str_has_prefix
test	eax, eax
jnz	loc_688838FE
jmp	loc_6888392C
align 4
mov	[esp+4Ch+Val], offset Str 
mov	[esp+4Ch+Str], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_68883A24
mov	ecx, offset Str	
			
mov	[esp+4Ch+Val], 0 
mov	[esp+4Ch+Str], 0 
mov	edx, esi
mov	eax, edi
call	sub_68883624
test	eax, eax
jnz	loc_68883970
jmp	loc_68883957
align 4
mov	[esp+4Ch+Val], offset aIso88591Window 
mov	[esp+4Ch+Str], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_68883A88
mov	ecx, offset aWindows1252 
jmp	short loc_688839FD
align 10h
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Val], esi
mov	[esp+4Ch+Str], edi
call	g_utf8_validate
test	eax, eax
jnz	loc_68883964
mov	[esp+4Ch+Val], offset aThereWasAnErro 
mov	[esp+4Ch+Str], offset aPidgin_1	
call	libintl_dgettext
mov	[esp+4Ch+Str], eax
call	g_strdup
jmp	loc_68883970
align 10h
xor	ebx, ebx
jmp	loc_68883943
align 4
mov	[esp+4Ch+Val], offset aUsAscii 
mov	[esp+4Ch+Str], ebx
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_68883A38
mov	[esp+4Ch+Val], offset aUnicode20 
mov	[esp+4Ch+Str], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_68883ABA
mov	ecx, offset aUtf16be 
jmp	loc_688839FD
mov	[esp+4Ch+Val], offset aUtf8 
mov	[esp+4Ch+Str], ebx
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_68883957
mov	ecx, ebx
jmp	loc_688839FD
call	__stack_chk_fail
align 10h
public oscar_utf8_try_convert
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_68883BBC
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	g_utf8_validate
test	eax, eax
jnz	short loc_68883BA0
mov	edx, [esi+44h]
test	edx, edx
jnz	short loc_68883B48
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_68883BC0
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_utf8_try_convert
align 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aEncoding 
mov	[esp+2Ch+var_2C], edi
call	purple_account_get_string
test	eax, eax
jz	short loc_68883B28
cmp	byte ptr [eax],	0
jz	short loc_68883B28
mov	[esp+2Ch+var_28], 0 
mov	[esp+2Ch+var_2C], 0 
mov	ecx, eax	
mov	edx, 0FFFFFFFFh
mov	eax, ebx
call	sub_68883624
test	eax, eax
jz	short loc_68883B28
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68883BC0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68883BC0
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_strdup
align 4
xor	eax, eax
jmp	short loc_68883B8A
			
call	__stack_chk_fail
align 4
public oscar_decode_im
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], eax
mov	esi, [esp+5Ch+arg_C]
mov	ebx, [esp+5Ch+arg_10]
mov	edi, [esp+5Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	loc_68883D10
test	esi, esi
jz	loc_68883D10
cmp	di, 2
jz	loc_68883CB4
cmp	di, 3
jz	loc_68883CC0
test	di, di
jz	loc_68883CE8
cmp	di, 0Dh
jz	loc_68883D14
call	oscar_get_locale_charset
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Source], offset aEncoding 
mov	[esp+5Ch+Dest],	ebp
call	purple_account_get_string
mov	ebp, eax
mov	ecx, offset aUtf8_0 
			
mov	[esp+5Ch+var_44], offset word_688AED6E
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], ecx
mov	[esp+5Ch+var_50], ebx
movzx	edx, di
mov	[esp+5Ch+Count], edx
mov	[esp+5Ch+Source], offset aParsingImChars 
mov	[esp+5Ch+Dest],	offset aOscar_1	
mov	[esp+5Ch+Str], ecx
call	purple_debug_info
mov	[esp+5Ch+Dest],	0 
mov	ecx, [esp+5Ch+Str] 
mov	edx, ebx
mov	eax, esi
call	sub_688837C4
test	eax, eax
jz	loc_68883DC4
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68883E6D
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, offset aUtf8_0 
mov	ecx, offset aUtf16be 
jmp	short loc_68883C4A
test	eax, eax
jz	short loc_68883CD8
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Dest],	eax
call	oscar_util_valid_name_icq
test	eax, eax
jnz	loc_68883D9C
mov	ebp, offset aUtf8_0 
mov	ecx, offset aIso88591_0	
jmp	loc_68883C4A
align 4
call	oscar_get_locale_charset
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Source], offset aEncoding 
mov	[esp+5Ch+Dest],	ebp
call	purple_account_get_string
mov	ebp, eax
mov	ecx, offset aAscii 
jmp	loc_68883C4A
align 10h
			
xor	eax, eax
jmp	short loc_68883C99
call	oscar_get_locale_charset
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Source], offset aEncoding 
mov	[esp+5Ch+Dest],	ebp
call	purple_account_get_string
mov	ebp, eax
test	eax, eax
jz	loc_68883E72
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], offset aIso88591_0 
mov	[esp+5Ch+var_4C], offset aUtf8_0 
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+Count], 0Dh
mov	[esp+5Ch+Source], offset aParsingImChars 
mov	[esp+5Ch+Dest],	offset aOscar_1	
call	purple_debug_info
mov	[esp+5Ch+Dest],	0 
mov	ecx, offset aUtf8_0 
mov	edx, ebx
mov	eax, esi
call	sub_688837C4
test	eax, eax
jnz	loc_68883C99
mov	[esp+5Ch+Dest],	0
mov	ecx, offset aIso88591_0	
jmp	loc_68883C88
align 4
call	oscar_get_locale_charset
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Source], offset aEncoding 
mov	[esp+5Ch+Dest],	ebp
call	purple_account_get_string
mov	ecx, eax
mov	ebp, offset aUtf8_0 
jmp	loc_68883C4A
align 4
mov	[esp+5Ch+Dest],	1 
mov	ecx, ebp	
mov	edx, ebx
mov	eax, esi
call	sub_688837C4
test	eax, eax
jnz	loc_68883C99
lea	eax, [ebx+1]
mov	[esp+5Ch+Dest],	eax
call	g_malloc
mov	ebp, eax
mov	[esp+5Ch+Count], ebx 
mov	[esp+5Ch+Source], esi 
mov	[esp+5Ch+Dest],	eax 
call	strncpy
mov	byte ptr [ebp+ebx+0], 0
mov	[esp+5Ch+Dest],	ebp
call	purple_utf8_salvage
mov	ebx, eax
mov	[esp+5Ch+Source], offset aThereWasAnEr_0 
mov	[esp+5Ch+Dest],	offset aPidgin_1 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Count], edx
mov	[esp+5Ch+Source], edx
mov	[esp+5Ch+Dest],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Source], ebx
mov	[esp+5Ch+Dest],	offset aSS_0 
call	g_strdup_printf
mov	[esp+5Ch+Dest],	esi
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+Dest],	ebp
call	g_free
mov	[esp+5Ch+Dest],	ebx
call	g_free
mov	eax, [esp+5Ch+Str]
jmp	loc_68883C99
call	__stack_chk_fail
mov	ebp, offset aIso88591_0	
mov	ecx, offset aUtf8_0 
jmp	loc_68883C4A
align 4
public oscar_encode_im
			
push	esi
push	ebx
sub	esp, 34h
mov	edx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	ecx, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
cmp	byte ptr [edx],	0
jz	short loc_68883EBC
jl	loc_68883F30
mov	eax, edx
jmp	short loc_68883EB6
align 4
jl	short loc_68883F30
inc	eax
cmp	byte ptr [eax],	0
jnz	short loc_68883EB4
xor	eax, eax
test	ebx, ebx
jz	short loc_68883EC5
mov	[ebx], ax
test	ecx, ecx
jz	short loc_68883ED5
test	ax, ax
jnz	short loc_68883F24
mov	ebx, offset aUsAscii 
mov	[ecx], ebx
			
test	ax, ax
jz	short loc_68883F38
mov	eax, offset aUtf16be 
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], esi
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset aUtf8_0 
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edx
call	g_convert
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68883F3F
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	ebx, offset aUnicode20 
mov	[ecx], ebx
jmp	short loc_68883ED5
align 10h
			
mov	eax, 2
jmp	short loc_68883EBE
align 4
mov	eax, offset aAscii 
jmp	short loc_68883EDF
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edx, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_3C], edx
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_38], edx
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_34], edx
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_4C], edx
mov	ebx, [esp+7Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ax, [edx+2]
cmp	ax, 3
jz	short loc_68883FC0
cmp	ax, 5
jz	short loc_68883FC0
cmp	ax, 7
jz	loc_68884188
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688841F7
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	[esp+7Ch+var_2E], ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	esi, eax
mov	[esp+7Ch+var_30], 0
mov	[esp+7Ch+var_48], 0
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_40], 0
test	ax, ax
jnz	short loc_68884028
jmp	loc_68884090
dec	bp
jnz	short loc_68884024
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	g_free
movzx	eax, di
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_40], eax
nop
			
dec	si
jz	short loc_68884090
			
mov	[esp+7Ch+var_7C], ebx
call	sub_68881818
test	eax, eax
jz	short loc_68884090
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	ebp, eax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	edi, eax
cmp	bp, 4
jz	loc_68884138
jbe	short loc_68884000
cmp	bp, 8
jz	loc_6888415C
cmp	bp, 11h
jnz	short loc_68884024
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	g_free
test	di, di
jnz	loc_68884170
mov	[esp+7Ch+var_7C], offset aSuppressed 
call	g_strdup
mov	[esp+7Ch+var_48], eax
dec	si
jnz	short loc_68884028
lea	esi, [esi+0]
			
mov	edx, [esp+7Ch+var_4C]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	aim_callhandler
test	eax, eax
jz	short loc_68884109
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_5C], edx
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_60], edx
mov	edx, [esp+7Ch+var_44]
mov	[esp+7Ch+var_64], edx
movzx	ebp, [esp+7Ch+var_30]
mov	[esp+7Ch+var_68], ebp
movzx	edx, [esp+7Ch+var_2E]
mov	[esp+7Ch+var_6C], edx
mov	edx, [esp+7Ch+var_4C]
cmp	word ptr [edx+2], 5
setz	dl
movzx	edx, dl
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_74], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_78], edx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, 1
jmp	loc_68883FA5
align 4
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_7C], eax
call	g_free
movzx	eax, di
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_44], eax
jmp	loc_68884024
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	[esp+7Ch+var_30], ax
jmp	loc_68884024
align 10h
movzx	eax, di
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_48], eax
jmp	loc_68884024
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	ebx, ax
mov	edx, [esp+7Ch+var_4C]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	aim_callhandler
test	eax, eax
jz	loc_68883FA3
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688841F7
mov	[esp+7Ch+arg_C], ebx
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+arg_8], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+arg_4], edx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+arg_0], edx
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
call	__stack_chk_fail
public aim_admin_getinfo
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
movzx	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 4
lea	ebx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881748
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 2
mov	[esp+4Ch+var_48], 7
mov	[esp+4Ch+var_4C], esi
call	aim_cachesnac
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 2
mov	[esp+4Ch+var_44], 7
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	flap_connection_send_snac
mov	[esp+4Ch+var_4C], ebx
call	sub_688817E4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688842BB
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public aim_admin_setnick
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
add	ecx, 3
mov	[esp+6Ch+var_68], ecx
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_40], edx
call	sub_68881748
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], 1
lea	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_add_str
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], ebx
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], 7
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688843AC
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_admin_changepasswd
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_40], eax
mov	esi, [esp+6Ch+arg_8]
mov	ecx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_44], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, [esp+6Ch+var_44]
repne scasb
mov	edx, ecx
not	edx
mov	ecx, ebp
mov	edi, esi
repne scasb
not	ecx
lea	eax, [edx+ecx+6]
mov	[esp+6Ch+var_68], eax
lea	ebp, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebp
call	sub_68881748
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], 2
lea	esi, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_add_str
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 12h
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_add_str
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+var_6C], ebx
call	aim_cachesnac
mov	[esp+6Ch+var_58], ebp
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], 7
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], ebx
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebp
call	sub_688817E4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688844CF
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public aim_admin_setemail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
add	ecx, 3
mov	[esp+6Ch+var_68], ecx
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_40], edx
call	sub_68881748
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], 11h
lea	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_add_str
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], ebx
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], 7
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688845C0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_admin_reqconfirm
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 6
mov	[esp+2Ch+var_24], 7
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888460A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public admin_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	7
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 10h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset Source	
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68883F44
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68884675
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+0C0h]
test	ebx, ebx
jz	short loc_688846E2
xchg	ax, ax
mov	eax, [ebx+18h]
mov	[esi+0C0h], eax
mov	eax, [ebx]
mov	[esp+2Ch+Dest],	eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+Dest],	eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+Dest],	eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+Dest],	eax
call	g_free
mov	[esp+2Ch+Dest],	ebx
call	g_free
mov	ebx, [esi+0C0h]
test	ebx, ebx
jnz	short loc_6888469C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688846F4
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_38], edx
mov	ebx, [esp+6Ch+arg_10]
mov	ebp, [esp+6Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
cmp	word ptr [ebx+2], 7
jz	short loc_68884758
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688849C3
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+Buf2],	8
mov	[esp+6Ch+Buf1],	ebp
call	sub_68881CAC
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+Buf2],	10h
mov	[esp+6Ch+Buf1],	ebp
call	sub_68881CAC
mov	esi, eax
mov	edx, [esp+6Ch+var_40]
mov	edi, [edx+0C0h]
test	edi, edi
jnz	short loc_6888479F
jmp	loc_6888497C
align 4
mov	edi, [edi+18h]
test	edi, edi
jz	loc_6888497C
mov	[esp+6Ch+Size],	10h 
mov	eax, [edi]
mov	[esp+6Ch+Buf2],	eax 
mov	[esp+6Ch+Buf1],	esi 
call	memcmp
test	eax, eax
jnz	short loc_68884794
mov	eax, [edi+4]
mov	[esp+6Ch+Buf1],	eax
call	g_free
mov	eax, [edi]
mov	[esp+6Ch+Buf1],	eax
call	g_free
mov	eax, [edi+8]
mov	[esp+6Ch+Buf1],	eax
call	g_free
mov	eax, [edi+10h]
mov	[esp+6Ch+Buf1],	eax
call	g_free
mov	eax, [esp+6Ch+var_34]
mov	[edi+4], eax
mov	[edi], esi
mov	[esp+6Ch+Buf1],	ebp
call	sub_688819F0
movzx	eax, ax
mov	[esp+6Ch+Buf2],	eax
mov	[esp+6Ch+Buf1],	ebp
call	aim_tlvlist_readnum
mov	esi, eax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	80h
mov	[esp+6Ch+Buf1],	eax
call	aim_tlv_get16
movzx	ecx, ax
test	ecx, ecx
jz	loc_688849A4
movzx	ebp, word ptr [edi+0Ch]
xor	edx, edx
cmp	ecx, ebp
setnle	dl
mov	[esp+6Ch+var_30], edx
mov	[edi+0Ch], ax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	7
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_getstr
mov	[edi+8], eax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	81h
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_get8
mov	[edi+0Eh], al
test	al, al
jnz	short loc_68884884
mov	word ptr [edi+0Ch], 0
mov	[esp+6Ch+var_30], 0
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	82h
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_getstr
mov	[edi+10h], eax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	84h
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_get16
mov	[edi+14h], ax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	5
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_getstr
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Buf2],	0Dh
mov	[esp+6Ch+Buf1],	esi
call	aim_tlv_getstr
mov	ebp, eax
movzx	eax, word ptr [ebx+2]
mov	[esp+6Ch+Size],	eax
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+Buf2],	eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Buf1],	edx
call	aim_callhandler
test	eax, eax
jz	loc_688849BF
test	ebp, ebp
jz	loc_688849B8
lea	ecx, [ebp+2]
mov	[esp+6Ch+var_54], ecx
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_58], edx
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], edi
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Size],	edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+Buf2],	edx
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Buf1],	edx
call	eax
mov	[esp+6Ch+Buf1],	esi
mov	[esp+6Ch+var_44], eax
call	aim_tlvlist_free
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Buf1],	edx
call	g_free
mov	[esp+6Ch+Buf1],	ebp
call	g_free
mov	eax, [esp+6Ch+var_44]
jmp	loc_6888473D
align 4
			
mov	[esp+6Ch+Buf1],	1Ch
call	g_malloc0
mov	edi, eax
mov	edx, [esp+6Ch+var_40]
mov	eax, [edx+0C0h]
mov	[edi+18h], eax
mov	[edx+0C0h], edi
jmp	loc_688847E4
align 4
inc	word ptr [edi+0Ch]
mov	[esp+6Ch+var_30], 1
jmp	loc_6888483C
align 4
xor	ecx, ecx
jmp	loc_6888491F
xor	eax, eax
jmp	short loc_68884950
call	__stack_chk_fail
public aim_email_sendcookies
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_68884B94
mov	[esp+3Ch+var_38], 18h
mov	[esp+3Ch+var_3C], esi
call	flap_connection_findbygroup
mov	edi, eax
test	eax, eax
jz	loc_68884B94
mov	[esp+3Ch+var_38], 22h
lea	ebx, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_3C], ebx
call	sub_68881748
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 5D5Eh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 1708h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 55AAh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 11D3h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 0B143h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 60h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 0B0FBh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 1ECBh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 0B380h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 9AD8h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 0DBAh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 11D5h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 9F8Ah
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 60h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 0B0EEh
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_38], 631h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 6
mov	[esp+3Ch+var_38], 18h
mov	[esp+3Ch+var_3C], esi
call	aim_cachesnac
mov	[esp+3Ch+var_28], ebx
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 6
mov	[esp+3Ch+var_34], 18h
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	flap_connection_send_snac
mov	[esp+3Ch+var_3C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68884B9B
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68884B81
call	__stack_chk_fail
public aim_email_activate
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_68884CAC
mov	[esp+3Ch+var_38], 18h
mov	[esp+3Ch+var_3C], esi
call	flap_connection_findbygroup
mov	edi, eax
test	eax, eax
jz	loc_68884CAC
mov	[esp+3Ch+var_38], 11h
lea	ebx, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_3C], ebx
call	sub_68881748
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], ebx
call	sub_68881DA4
mov	[esp+3Ch+var_38], 4000000h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	[esp+3Ch+var_38], 4000000h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	[esp+3Ch+var_38], 4000000h
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 16h
mov	[esp+3Ch+var_38], 18h
mov	[esp+3Ch+var_3C], esi
call	aim_cachesnac
mov	[esp+3Ch+var_28], ebx
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 6
mov	[esp+3Ch+var_34], 18h
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	flap_connection_send_snac
mov	[esp+3Ch+var_3C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68884CB3
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68884C99
call	__stack_chk_fail
public email_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	18h
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 10h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aAlert	
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_688846FC
mov	dword ptr [ebx+20h], offset loc_6888467C
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68884D24
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0BCh]
test	eax, eax
jz	loc_68884E20
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+34h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+3Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0BCh]
mov	eax, [eax+40h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68884E31
mov	eax, [ebx+0BCh]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68884E31
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_34], edx
mov	esi, [esp+5Ch+arg_10]
mov	ebx, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ax, [esi+2]
cmp	ax, 3
jz	short loc_68884EE4
cmp	ax, 7
jz	loc_688852E0
cmp	ax, 0Ah
jz	short loc_68884E9C
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888538E
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], 0Ah
movzx	eax, word ptr [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim_callhandler
test	eax, eax
jz	short loc_68884E80
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888538E
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+arg_8], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+arg_4], edx
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	[esp+5Ch+var_5C], 44h
call	g_malloc0
mov	ebp, eax
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68884F42
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+0], eax
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_set_display_name
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68884F7A
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_get16
mov	[ebp+4], ax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68884FB1
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+8], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 5
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68884FE8
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 5
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+14h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 6
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888502E
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 6
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888502E
mov	dx, [eax+2]
mov	[ebp+18h], dx
mov	eax, [eax+4]
mov	[ebp+1Ch], eax
			
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 11h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68885065
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 11h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+10h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888509D
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_get16
mov	[ebp+0Ch], ax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 40h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688850D4
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 40h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_get32
mov	[ebp+38h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 41h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888510B
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 41h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+3Ch], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 42h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68885142
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 42h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+40h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 43h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68885179
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 43h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+34h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 44h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688851B0
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 44h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_get32
mov	[ebp+28h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 45h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688851E7
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 45h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+2Ch], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 46h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888521E
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 46h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+30h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 47h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68885255
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 47h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+24h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 54h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888528C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 54h
mov	[esp+5Ch+var_5C], ebx
call	aim_tlv_getstr
mov	[ebp+20h], eax
mov	[edi+0BCh], ebp
movzx	eax, word ptr [esi+2]
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim_callhandler
test	eax, eax
jz	loc_68885380
mov	[esp+5Ch+var_50], ebp
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], edi
call	eax
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_3C], eax
call	aim_tlvlist_free
mov	eax, [esp+5Ch+var_3C]
jmp	loc_68884E82
align 10h
mov	[esp+5Ch+var_5C], ebx
call	sub_688819F0
movzx	eax, ax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881D24
mov	ebp, eax
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 26h
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
xor	edx, edx
test	eax, eax
setnz	dl
mov	[esp+5Ch+var_30], edx
movzx	eax, word ptr [esi+2]
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim_callhandler
test	eax, eax
jz	short loc_68885387
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], ebp
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], edi
call	eax
mov	[esp+5Ch+var_5C], ebp
mov	[esp+5Ch+var_3C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_free
mov	eax, [esp+5Ch+var_3C]
jmp	loc_68884E82
align 10h
xor	eax, eax
jmp	loc_688852CA
mov	eax, 1
jmp	short loc_68885362
			
call	__stack_chk_fail
align 4
public aim_send_login
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_68], edx
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_58], edx
mov	ebp, [esp+9Ch+arg_8]
mov	eax, [esp+9Ch+arg_C]
mov	[esp+9Ch+var_6C], eax
mov	edx, [esp+9Ch+arg_10]
mov	[esp+9Ch+var_50], edx
mov	esi, [esp+9Ch+arg_14]
mov	eax, [esp+9Ch+arg_18]
mov	[esp+9Ch+var_64], eax
mov	edx, [esp+9Ch+arg_1C]
mov	[esp+9Ch+var_54], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+var_44], 0
test	esi, esi
jz	loc_688857B8
test	ebp, ebp
jz	loc_688857B8
mov	ecx, [esp+9Ch+var_6C]
test	ecx, ecx
jz	loc_688857B8
mov	[esp+9Ch+var_94], 480h
mov	[esp+9Ch+var_98], 2
mov	edx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_9C], edx
call	flap_frame_new
mov	[esp+9Ch+var_60], eax
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], 2
mov	[esp+9Ch+var_98], 17h
mov	edx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_9C], edx
call	aim_cachesnac
mov	edx, [esp+9Ch+var_60]
add	edx, 4
mov	[esp+9Ch+var_5C], edx
mov	[esp+9Ch+var_90], eax
mov	[esp+9Ch+var_94], 2
mov	[esp+9Ch+var_98], 17h
mov	[esp+9Ch+var_9C], edx
call	aim_putsnac
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], 1
lea	ebx, [esp+9Ch+var_44]
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_str
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+9Ch+var_6C]
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	[esp+9Ch+var_9C], ebp
call	oscar_util_valid_name_icq
test	eax, eax
jz	loc_68885768
cmp	edi, 8
jbe	loc_68885768
mov	edi, 8
			
mov	[esp+9Ch+var_9C], offset aMd5_1	
call	purple_ciphers_find_cipher
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], eax
call	purple_cipher_context_new
mov	ebp, eax
mov	[esp+9Ch+var_94], edi
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_append
mov	[esp+9Ch+var_90], 0
lea	edx, [esp+9Ch+var_30]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], 10h
mov	[esp+9Ch+var_9C], ebp
mov	[esp+9Ch+var_74], edx
call	purple_cipher_context_digest
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_destroy
mov	[esp+9Ch+var_98], 0
mov	ecx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_9C], ecx
call	purple_cipher_context_new
mov	ebp, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+9Ch+var_64]
repne scasb
not	ecx
dec	ecx
mov	[esp+9Ch+var_94], ecx
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_append
mov	[esp+9Ch+var_94], 10h
mov	edx, [esp+9Ch+var_74]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_append
mov	[esp+9Ch+var_94], 1Ah
mov	[esp+9Ch+var_98], offset aAolInstantMess 
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_append
mov	[esp+9Ch+var_90], 0
lea	edi, [esp+9Ch+var_40]
mov	[esp+9Ch+var_94], edi
mov	[esp+9Ch+var_98], 10h
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_digest
mov	[esp+9Ch+var_9C], ebp
call	purple_cipher_context_destroy
mov	edx, [esi+10h]
mov	eax, [esp+9Ch+var_68]
mov	eax, [eax+44h]
test	eax, eax
jnz	loc_68885784
mov	eax, offset aPrplAimDistid 
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	oscar_get_ui_info_int
mov	ebp, eax
mov	[esp+9Ch+var_90], edi
mov	[esp+9Ch+var_94], 10h
mov	[esp+9Ch+var_98], 25h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_98], 4Ch
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_noval
mov	eax, [esi]
test	eax, eax
jz	loc_68885790
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 3
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_str
movzx	eax, word ptr [esi+4]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 16h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+6]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 17h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+8]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 18h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+0Ah]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 19h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+0Ch]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 1Ah
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], 14h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_32
mov	eax, [esi+18h]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 0Fh
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_str
mov	eax, [esi+14h]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 0Eh
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_str
cmp	[esp+9Ch+var_54], 1
sbb	eax, eax
and	eax, 2
inc	eax
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 4Ah
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_8
mov	[esp+9Ch+var_98], ebx
mov	edx, [esp+9Ch+var_5C]
mov	[esp+9Ch+var_9C], edx
call	aim_tlvlist_write
mov	eax, [esp+9Ch+var_44]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_free
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_58]
mov	[esp+9Ch+var_9C], edx
call	flap_connection_send
xor	eax, eax
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688857BF
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	edx, [esp+9Ch+var_50]
test	edx, edx
jz	loc_688854E0
cmp	edi, 8
jbe	loc_688854E0
jmp	loc_688854DB
align 4
mov	eax, offset aPrplIcqDistid 
jmp	loc_688855EB
align 10h
call	oscar_get_clientstring
mov	edi, eax
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 3
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_str
mov	[esp+9Ch+var_9C], edi
call	g_free
jmp	loc_68885643
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888574E
call	__stack_chk_fail
public aim_request_login
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_24], 0
test	ebx, ebx
jz	loc_688858F0
test	esi, esi
jz	loc_688858F0
test	edx, edx
jz	loc_688858F0
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
add	ecx, 15h
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], edx
call	flap_frame_new
mov	ebp, eax
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+var_58], 17h
mov	[esp+5Ch+var_5C], ebx
call	aim_cachesnac
lea	edi, [ebp+4]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+var_58], 17h
mov	[esp+5Ch+var_5C], edi
call	aim_putsnac
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], 1
lea	ebx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_add_str
mov	[esp+5Ch+var_58], 4Bh
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_add_noval
mov	[esp+5Ch+var_58], 5Ah
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_add_noval
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	aim_tlvlist_write
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_free
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688858F7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688858DB
call	__stack_chk_fail
public aim_auth_securid_send
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_68885A00
mov	[esp+5Ch+var_58], 17h
mov	[esp+5Ch+var_5C], ebx
call	flap_connection_getbytype_all
mov	ebp, eax
test	eax, eax
jz	loc_68885A00
test	esi, esi
jz	loc_68885A00
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	edx, [ecx-1]
mov	[esp+5Ch+var_30], edx
add	ecx, 0Bh
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebx
call	flap_frame_new
mov	edi, eax
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+var_58], 17h
mov	[esp+5Ch+var_5C], ebx
call	aim_cachesnac
lea	ebx, [edi+4]
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+var_58], 17h
mov	[esp+5Ch+var_5C], ebx
call	aim_putsnac
movzx	eax, word ptr [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_send
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68885A07
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688859EB
call	__stack_chk_fail
public auth_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	17h
mov	word ptr [ebx+2], 0
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aAuth 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68884E38
mov	dword ptr [ebx+20h], offset sub_68884D2C
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68885A6C
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edi, [esp+7Ch+arg_0]
mov	ebp, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_C]
mov	esi, [esp+7Ch+arg_10]
mov	ebx, [esp+7Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ax, [esi+2]
cmp	ax, 3
jz	loc_68885BD4
cmp	ax, 5
jz	short loc_68885AD8
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68885C47
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_44], edx
call	sub_68881990
movzx	eax, al
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	[esp+7Ch+var_7C], ebx
call	sub_68881990
mov	[esp+7Ch+var_2D], al
mov	[esp+7Ch+var_7C], ebx
call	sub_68881990
movzx	eax, al
mov	[esp+7Ch+var_34], eax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881CAC
mov	[esp+7Ch+var_38], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	ecx, ax
mov	[esp+7Ch+var_78], ecx
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_40], ecx
call	sub_68881CAC
mov	ebx, eax
movzx	eax, word ptr [esi+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [esi]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	aim_callhandler
test	eax, eax
mov	edx, [esp+7Ch+var_44]
mov	ecx, [esp+7Ch+var_40]
jz	loc_68885C40
mov	[esp+7Ch+var_5C], ecx
mov	[esp+7Ch+var_60], ebx
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_64], ecx
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_68], ecx
movzx	ecx, [esp+7Ch+var_2D]
mov	[esp+7Ch+var_6C], ecx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_70], ecx
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], edi
call	eax
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
mov	[esp+7Ch+var_40], eax
call	g_free
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], ecx
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	g_free
mov	eax, [esp+7Ch+var_40]
jmp	loc_68885ABF
align 4
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_44], edx
call	sub_688819F0
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	[esp+7Ch+var_7C], ebx
call	sub_68881990
movzx	eax, word ptr [esi+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [esi]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	aim_callhandler
test	eax, eax
mov	edx, [esp+7Ch+var_44]
jz	loc_68885ABD
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_68885C47
mov	[esp+7Ch+arg_8], edx
mov	[esp+7Ch+arg_4], ebp
mov	[esp+7Ch+arg_0], edi
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
xor	eax, eax
jmp	loc_68885BA4
			
call	__stack_chk_fail
public aim_bart_upload
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
movzx	edi, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_68885D58
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_68885D58
test	ebp, ebp
jz	loc_68885D58
test	di, di
jz	loc_68885D58
lea	eax, [edi+4]
mov	[esp+5Ch+var_58], eax
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], edx
call	sub_68881748
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_688820A0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], 10h
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68885D5F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68885D43
call	__stack_chk_fail
public aim_bart_request
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_3C], eax
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_38], edx
mov	bl, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_2D], bl
mov	ebp, [esp+6Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_68885F18
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], esi
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_68885F18
mov	ecx, [esp+6Ch+var_3C]
test	ecx, ecx
jz	loc_68885F18
mov	ebx, [esp+6Ch+var_3C]
cmp	byte ptr [ebx],	0
jz	loc_68885F18
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jz	loc_68885F18
test	bp, bp
jz	loc_68885F18
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
movzx	ebx, bp
mov	[esp+6Ch+var_34], ebx
lea	eax, [ebx+ecx+5]
mov	[esp+6Ch+var_68], eax
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_40], edx
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_3C]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68882114
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, [esp+6Ch+var_2D]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
and	ebp, 0FFh
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], 10h
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68885F1F
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68885F04
call	__stack_chk_fail
public bart_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	10h
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 10h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aBart 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68885A74
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68885F89
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_C]
mov	ebp, [esp+5Ch+arg_10]
mov	eax, [esp+5Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
cmp	word ptr [ebp+2], 3
jz	short loc_68885FD8
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688860DC
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_read
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688860C0
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_get16
mov	[esp+5Ch+var_30], ax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 2
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688860CC
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 2
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_get16
mov	[esp+5Ch+var_2E], ax
movzx	eax, word ptr [ebp+2]
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	aim_callhandler
test	eax, eax
jz	short loc_688860D8
movzx	edx, [esp+5Ch+var_2E]
mov	[esp+5Ch+var_4C], edx
movzx	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
mov	[esp+5Ch+var_38], eax
call	aim_tlvlist_free
mov	eax, [esp+5Ch+var_38]
jmp	loc_68885FC0
align 10h
mov	[esp+5Ch+var_30], 0
jmp	loc_68886025
mov	[esp+5Ch+var_2E], 0
jmp	short loc_6888606A
align 4
xor	eax, eax
jmp	short loc_688860A5
call	__stack_chk_fail
align 4
public aim_bos_reqrights
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], 9
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n_snacid
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68886126
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public bos_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	9
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aBos 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68885F90
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68886191
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0DCh
mov	esi, [esp+0ECh+arg_0]
mov	edi, [esp+0ECh+arg_4]
mov	ebp, [esp+0ECh+arg_C]
mov	ebx, [esp+0ECh+arg_10]
mov	ecx, [esp+0ECh+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+0ECh+var_20], eax
xor	eax, eax
mov	ax, [ebx+2]
cmp	ax, 3
jz	loc_68886274
sub	eax, 0Bh
cmp	ax, 1
jbe	short loc_6888620C
xor	edi, edi
			
mov	eax, edi
mov	edx, [esp+0ECh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688863E3
add	esp, 0DCh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
lea	edx, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_E4], edx
mov	[esp+0ECh+var_E8], ecx
mov	[esp+0ECh+var_EC], esi
call	aim_info_extract
movzx	eax, word ptr [ebx+2]
mov	[esp+0ECh+var_E4], eax
movzx	eax, word ptr [ebx]
mov	[esp+0ECh+var_E8], eax
mov	[esp+0ECh+var_EC], esi
call	aim_callhandler
test	eax, eax
jz	loc_688863BC
lea	edx, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_E0], edx
mov	[esp+0ECh+var_E4], ebp
mov	[esp+0ECh+var_E8], edi
mov	[esp+0ECh+var_EC], esi
call	eax
mov	edi, eax
cmp	word ptr [ebx+2], 0Bh
jz	loc_68886358
			
lea	eax, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_EC], eax
call	aim_info_free
jmp	loc_688861EC
align 4
mov	[esp+0ECh+var_EC], ecx
call	aim_tlvlist_read
mov	[esp+0ECh+var_C4], eax
mov	[esp+0ECh+var_E4], 1
mov	[esp+0ECh+var_E8], 1
mov	[esp+0ECh+var_EC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688863D0
mov	[esp+0ECh+var_E4], 1
mov	[esp+0ECh+var_E8], 1
mov	eax, [esp+0ECh+var_C4]
mov	[esp+0ECh+var_EC], eax
call	aim_tlv_get16
mov	[esp+0ECh+var_C0], ax
mov	[esp+0ECh+var_E4], 1
mov	[esp+0ECh+var_E8], 2
mov	eax, [esp+0ECh+var_C4]
mov	[esp+0ECh+var_EC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688863C4
mov	[esp+0ECh+var_E4], 1
mov	[esp+0ECh+var_E8], 2
mov	eax, [esp+0ECh+var_C4]
mov	[esp+0ECh+var_EC], eax
call	aim_tlv_get16
mov	[esp+0ECh+var_BE], ax
movzx	eax, word ptr [ebx+2]
mov	[esp+0ECh+var_E4], eax
movzx	eax, word ptr [ebx]
mov	[esp+0ECh+var_E8], eax
mov	[esp+0ECh+var_EC], esi
call	aim_callhandler
test	eax, eax
jz	loc_688863DC
movzx	ecx, [esp+0ECh+var_BE]
mov	[esp+0ECh+var_DC], ecx
movzx	ecx, [esp+0ECh+var_C0]
mov	[esp+0ECh+var_E0], ecx
mov	[esp+0ECh+var_E4], ebp
mov	[esp+0ECh+var_E8], edi
mov	[esp+0ECh+var_EC], esi
call	eax
mov	edi, eax
mov	eax, [esp+0ECh+var_C4]
mov	[esp+0ECh+var_EC], eax
call	aim_tlvlist_free
jmp	loc_688861EC
align 4
test	[esp+0ECh+var_99], 40h
jz	loc_68886261
mov	eax, [esi+68h]
mov	[esp+0ECh+var_EC], eax
call	purple_connection_get_account
mov	edx, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_E8], edx
mov	[esp+0ECh+var_EC], eax
call	purple_find_buddy
test	eax, eax
jz	loc_68886261
mov	[esp+0ECh+var_EC], eax
call	purple_buddy_get_presence
mov	[esp+0ECh+var_E8], 9
mov	[esp+0ECh+var_EC], eax
call	purple_presence_is_status_primitive_active
test	eax, eax
jz	loc_68886261
mov	eax, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_E8], eax
mov	[esp+0ECh+var_EC], esi
call	icq_im_xstatus_request
jmp	loc_68886261
align 4
xor	edi, edi
jmp	loc_68886256
align 4
mov	[esp+0ECh+var_BE], 0
jmp	loc_68886306
mov	[esp+0ECh+var_C0], 0
jmp	loc_688862C1
xor	edi, edi
jmp	loc_68886346
call	__stack_chk_fail
public aim_buddylist_reqrights
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], 3
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n_snacid
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888642A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public buddylist_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	3
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aBuddy	
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68886198
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68886495
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public flap_connection_destroy_chat
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [eax+80h]
test	ebx, ebx
jz	short loc_688864C4
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688864DD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public aim_chat_readroominfo
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68886538
test	esi, esi
jz	short loc_68886538
mov	[esp+2Ch+var_2C], ebx
call	sub_688819F0
mov	[esi], ax
mov	[esp+2Ch+var_2C], ebx
call	sub_68881990
mov	[esi+8], al
movzx	eax, al
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_68881CAC
mov	[esi+4], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_688819F0
mov	[esi+0Ah], ax
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888654C
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 10Ch
mov	edx, [esp+11Ch+arg_0]
mov	[esp+11Ch+var_F0], edx
mov	edx, [esp+11Ch+arg_4]
mov	[esp+11Ch+var_EC], edx
mov	edx, [esp+11Ch+arg_C]
mov	[esp+11Ch+var_E8], edx
mov	ebp, [esp+11Ch+arg_10]
mov	ebx, [esp+11Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+11Ch+var_20], eax
xor	eax, eax
mov	ax, [ebp+2]
cmp	ax, 2
jz	loc_68886684
lea	edx, [eax-3]
cmp	dx, 1
jbe	loc_688866CC
cmp	ax, 6
jz	short loc_688865DC
xor	eax, eax
			
mov	edx, [esp+11Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68886A35
add	esp, 10Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
lea	eax, [esp+11Ch+var_C4]
mov	[esp+11Ch+var_F8], eax
mov	ecx, 98h
xor	eax, eax
mov	edi, [esp+11Ch+var_F8]
rep stosb
lea	edi, [esp+11Ch+var_28]
lea	esi, [esp+11Ch+var_20]
nop
mov	[esp+11Ch+var_11C], ebx
call	sub_68881990
mov	[edi], al
inc	edi
cmp	edi, esi
jnz	short loc_68886600
mov	[esp+11Ch+var_114], 1 
lea	edx, [esp+11Ch+var_28]
mov	[esp+11Ch+var_118], edx	
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx	
call	aim_uncachecookie
test	eax, eax
jz	short loc_6888664D
mov	edx, [eax+0Ch]
mov	[esp+11Ch+var_11C], edx
mov	[esp+11Ch+var_FC], eax
call	g_free
mov	eax, [esp+11Ch+var_FC]
mov	[esp+11Ch+var_11C], eax
call	g_free
mov	[esp+11Ch+var_11C], ebx
call	sub_688819F0
cmp	ax, 3
jz	loc_68886790
movzx	eax, ax
mov	[esp+11Ch+var_114], eax
mov	[esp+11Ch+var_118], offset aFaimChat_incom 
mov	[esp+11Ch+var_11C], offset aOscar_2 
call	purple_debug_misc
xor	eax, eax
jmp	loc_688865BE
align 4
lea	eax, [esp+11Ch+var_DC]
mov	[esp+11Ch+var_118], eax
mov	[esp+11Ch+var_11C], ebx
call	aim_chat_readroominfo
mov	[esp+11Ch+var_11C], ebx
call	sub_68881990
cmp	al, 2
jz	loc_68886964
movzx	eax, al
mov	[esp+11Ch+var_114], eax
mov	[esp+11Ch+var_118], offset aFaimChat_roomu 
mov	[esp+11Ch+var_11C], offset aOscar_2 
call	purple_debug_misc
mov	eax, 1
jmp	loc_688865BE
align 4
mov	esi, 98h
mov	[esp+11Ch+var_F4], 0
xor	edi, edi
mov	[esp+11Ch+var_E4], ebp
mov	ebp, [esp+11Ch+var_F0]
jmp	short loc_68886717
align 4
inc	[esp+11Ch+var_F4]
mov	[esp+11Ch+var_118], esi
mov	[esp+11Ch+var_11C], edi
call	g_realloc
mov	edi, eax
lea	eax, [eax+esi-98h]
mov	[esp+11Ch+var_114], eax
mov	[esp+11Ch+var_118], ebx
mov	[esp+11Ch+var_11C], ebp
call	aim_info_extract
add	esi, 98h
mov	[esp+11Ch+var_11C], ebx
call	sub_68881818
test	eax, eax
jnz	short loc_688866E8
mov	ebp, [esp+11Ch+var_E4]
movzx	eax, word ptr [ebp+2]
mov	[esp+11Ch+var_114], eax
movzx	eax, word ptr [ebp+0]
mov	[esp+11Ch+var_118], eax
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	aim_callhandler
test	eax, eax
jz	loc_68886A15
mov	[esp+11Ch+var_10C], edi
mov	edx, [esp+11Ch+var_F4]
mov	[esp+11Ch+var_110], edx
mov	edx, [esp+11Ch+var_E8]
mov	[esp+11Ch+var_114], edx
mov	edx, [esp+11Ch+var_EC]
mov	[esp+11Ch+var_118], edx
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	eax
mov	[esp+11Ch+var_11C], edi
mov	[esp+11Ch+var_FC], eax
call	aim_info_free
mov	[esp+11Ch+var_11C], edi
call	g_free
mov	eax, [esp+11Ch+var_FC]
jmp	loc_688865BE
align 10h
mov	[esp+11Ch+var_11C], ebx
call	aim_tlvlist_read
mov	esi, eax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 3
mov	[esp+11Ch+var_11C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688867E9
movzx	edx, word ptr [eax+2]
mov	[esp+11Ch+var_114], edx
mov	eax, [eax+4]
mov	[esp+11Ch+var_118], eax
lea	ebx, [esp+11Ch+var_D0]
mov	[esp+11Ch+var_11C], ebx
call	sub_68881798
lea	eax, [esp+11Ch+var_C4]
mov	[esp+11Ch+var_114], eax
mov	[esp+11Ch+var_118], ebx
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	aim_info_extract
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 5
mov	[esp+11Ch+var_11C], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68886942
movzx	edx, word ptr [eax+2]
mov	[esp+11Ch+var_114], edx
mov	eax, [eax+4]
mov	[esp+11Ch+var_118], eax
lea	ebx, [esp+11Ch+var_D0]
mov	[esp+11Ch+var_11C], ebx
call	sub_68881798
mov	[esp+11Ch+var_11C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 1
mov	[esp+11Ch+var_11C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68886A1C
movzx	edx, word ptr [eax+2]
mov	[esp+11Ch+var_E0], edx
mov	[esp+11Ch+var_11C], eax
call	aim_tlv_getvalue_as_string
mov	[esp+11Ch+var_E4], eax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 2
mov	[esp+11Ch+var_11C], ebx
call	aim_tlv_getstr
mov	[esp+11Ch+var_F4], eax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 3
mov	[esp+11Ch+var_11C], ebx
call	aim_tlv_getstr
mov	edi, eax
mov	[esp+11Ch+var_11C], ebx
call	aim_tlvlist_free
movzx	eax, word ptr [ebp+2]
mov	[esp+11Ch+var_114], eax
movzx	eax, word ptr [ebp+0]
mov	[esp+11Ch+var_118], eax
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	aim_callhandler
test	eax, eax
jz	loc_68886A0E
mov	[esp+11Ch+var_100], edi
mov	edx, [esp+11Ch+var_F4]
mov	[esp+11Ch+var_104], edx
mov	edx, [esp+11Ch+var_E4]
mov	[esp+11Ch+var_108], edx
mov	edx, [esp+11Ch+var_E0]
mov	[esp+11Ch+var_10C], edx
lea	edx, [esp+11Ch+var_C4]
mov	[esp+11Ch+var_110], edx
mov	edx, [esp+11Ch+var_E8]
mov	[esp+11Ch+var_114], edx
mov	edx, [esp+11Ch+var_EC]
mov	[esp+11Ch+var_118], edx
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	eax
lea	edx, [esp+11Ch+var_C4]
mov	[esp+11Ch+var_11C], edx
mov	[esp+11Ch+var_FC], eax
call	aim_info_free
mov	edx, [esp+11Ch+var_E4]
mov	[esp+11Ch+var_11C], edx
call	g_free
mov	edx, [esp+11Ch+var_F4]
mov	[esp+11Ch+var_11C], edx
call	g_free
mov	[esp+11Ch+var_11C], edi
call	g_free
mov	[esp+11Ch+var_11C], esi
call	aim_tlvlist_free
mov	eax, [esp+11Ch+var_FC]
jmp	loc_688865BE
xor	edi, edi
mov	[esp+11Ch+var_F4], 0
mov	[esp+11Ch+var_E0], 0
mov	[esp+11Ch+var_E4], 0
jmp	loc_688868A0
align 4
mov	[esp+11Ch+var_11C], ebx
call	sub_688819F0
mov	[esp+11Ch+var_11C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 0D1h
mov	[esp+11Ch+var_11C], eax
call	aim_tlv_get16
movzx	esi, ax
mov	[esp+11Ch+var_114], 1
mov	[esp+11Ch+var_118], 0DAh
mov	[esp+11Ch+var_11C], ebx
call	aim_tlv_get16
movzx	edi, ax
movzx	eax, word ptr [ebp+2]
mov	[esp+11Ch+var_114], eax
movzx	eax, word ptr [ebp+0]
mov	[esp+11Ch+var_118], eax
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	aim_callhandler
test	eax, eax
jz	short loc_68886A31
mov	[esp+11Ch+var_10C], edi
mov	[esp+11Ch+var_110], esi
mov	edx, [esp+11Ch+var_E8]
mov	[esp+11Ch+var_114], edx
mov	edx, [esp+11Ch+var_EC]
mov	[esp+11Ch+var_118], edx
mov	edx, [esp+11Ch+var_F0]
mov	[esp+11Ch+var_11C], edx
call	eax
mov	edx, [esp+11Ch+var_D8]
mov	[esp+11Ch+var_11C], edx
mov	[esp+11Ch+var_FC], eax
call	g_free
mov	[esp+11Ch+var_11C], ebx
call	aim_tlvlist_free
mov	eax, [esp+11Ch+var_FC]
jmp	loc_688865BE
xor	eax, eax
jmp	loc_68886901
xor	eax, eax
jmp	loc_68886770
mov	[esp+11Ch+var_E0], 0
mov	[esp+11Ch+var_E4], 0
jmp	loc_68886862
xor	eax, eax
jmp	short loc_688869ED
call	__stack_chk_fail
align 4
public aim_chat_send_im
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	esi, [esp+7Ch+arg_0]
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_54], edx
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_50], edx
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_4C], edx
mov	edx, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_48], edx
mov	edx, [esp+7Ch+arg_18]
mov	[esp+7Ch+var_44], edx
mov	edi, [esp+7Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_3C], 0
mov	[esp+7Ch+var_38], 0
test	esi, esi
jz	loc_68886C83
mov	ebp, [esp+7Ch+var_54]
test	ebp, ebp
jz	loc_68886C83
mov	ebx, [esp+7Ch+var_50]
test	ebx, ebx
jz	loc_68886C83
mov	ecx, [esp+7Ch+var_4C]
test	ecx, ecx
jle	loc_68886C83
mov	[esp+7Ch+var_78], 476h
lea	ebp, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], ebp
call	sub_68881748
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 5
mov	[esp+7Ch+var_78], 0Eh
mov	[esp+7Ch+var_7C], esi
call	aim_cachesnac
mov	[esp+7Ch+var_40], eax
lea	ebx, [esp+7Ch+var_28]
lea	edx, [esp+7Ch+var_20]
mov	[esp+7Ch+var_58], edx
nop
call	rand
mov	[ebx], al
inc	ebx
cmp	ebx, [esp+7Ch+var_58]
jnz	short loc_68886B24
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 1
lea	eax, [esp+7Ch+var_28]
mov	[esp+7Ch+var_7C], eax
call	aim_mkcookie
mov	dword ptr [eax+0Ch], 0
mov	[esp+7Ch+var_78], eax 
mov	[esp+7Ch+var_7C], esi 
call	aim_cachecookie
mov	[esp+7Ch+var_74], 8
lea	edx, [esp+7Ch+var_28]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebp
call	sub_688820A0
mov	[esp+7Ch+var_78], 3
mov	[esp+7Ch+var_7C], ebp
call	sub_68881E0C
mov	[esp+7Ch+var_78], 1
lea	ebx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_add_noval
test	edi, 1
jz	loc_68886C9C
and	edi, 2
jnz	loc_68886CB5
			
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_70], edx
movzx	eax, word ptr [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 1
lea	edi, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], edi
call	aim_tlvlist_add_raw
mov	edx, [esp+7Ch+var_48]
test	edx, edx
jz	short loc_68886BF7
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], 2
mov	[esp+7Ch+var_7C], edi
call	aim_tlvlist_add_str
mov	eax, [esp+7Ch+var_44]
test	eax, eax
jz	short loc_68886C17
mov	edx, [esp+7Ch+var_44]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], 3
mov	[esp+7Ch+var_7C], edi
call	aim_tlvlist_add_str
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], 5
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_add_frozentlvlist
mov	[esp+7Ch+var_78], ebx
mov	[esp+7Ch+var_7C], ebp
call	aim_tlvlist_write
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_68], ebp
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 5
mov	[esp+7Ch+var_74], 0Eh
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], esi
call	flap_connection_send_snac
mov	[esp+7Ch+var_7C], ebp
call	sub_688817E4
			
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68886CCA
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_78], 6
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_add_noval
and	edi, 2
jz	loc_68886BB2
mov	[esp+7Ch+var_78], 7
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_add_noval
jmp	loc_68886BB2
call	__stack_chk_fail
align 10h
public chat_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	0Eh
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 10h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aChat 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68886554
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68886D35
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 9Ch
mov	ebp, [esp+0ACh+arg_0]
mov	edx, [esp+0ACh+arg_4]
mov	[esp+0ACh+var_5C], edx
mov	ecx, [esp+0ACh+arg_C]
mov	[esp+0ACh+var_58], ecx
mov	ebx, [esp+0ACh+arg_10]
mov	esi, [esp+0ACh+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+0ACh+var_20], eax
xor	eax, eax
mov	ax, [ebx+2]
cmp	ax, 1
jz	loc_68886E74
cmp	ax, 9
jz	short loc_68886DB4
xor	eax, eax
			
mov	ecx, [esp+0ACh+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_688878B2
add	esp, 9Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebx+8]
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], ebp
call	aim_remsnac
mov	[esp+0ACh+var_54], eax
test	eax, eax
jz	loc_6888750A
mov	edx, [esp+0ACh+var_54]
movzx	eax, word ptr [edx+4]
cmp	ax, 0Dh
jnz	loc_68886EC4
mov	edx, [esp+0ACh+var_54]
movzx	eax, word ptr [edx+6]
cmp	ax, 2
jz	loc_6888700A
cmp	ax, 3
jz	loc_688873F6
cmp	ax, 4
jz	loc_688874D4
cmp	ax, 5
jz	loc_688874EF
cmp	ax, 6
jz	loc_68886EFE
cmp	ax, 7
jz	loc_6888752C
cmp	ax, 8
jz	loc_68887411
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aChatnav_parse_ 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
			
mov	ecx, [esp+0ACh+var_54]
mov	edx, [ecx+0Ch]
mov	[esp+0ACh+var_AC], edx
mov	[esp+0ACh+var_60], eax
call	g_free
mov	edx, [esp+0ACh+var_54]
mov	[esp+0ACh+var_AC], edx
call	g_free
mov	eax, [esp+0ACh+var_60]
jmp	loc_68886D95
align 4
mov	eax, [ebx+8]
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], ebp
call	aim_remsnac
mov	edi, eax
test	eax, eax
jz	loc_688877F6
movzx	eax, word ptr [eax+4]
cmp	ax, 0Dh
jnz	loc_68886FD8
cmp	word ptr [edi+6], 8
jz	short loc_68886F19
xor	eax, eax
mov	edx, [edi+0Ch]
mov	[esp+0ACh+var_AC], edx
mov	[esp+0ACh+var_60], eax
call	g_free
mov	[esp+0ACh+var_AC], edi
call	g_free
mov	eax, [esp+0ACh+var_60]
jmp	loc_68886D95
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aFaimChatnav_pa 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
mov	ecx, [esp+0ACh+var_54]
mov	eax, [ecx+0Ch]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	eax, [esp+0ACh+var_54]
mov	[esp+0ACh+var_AC], eax
call	g_free
xor	eax, eax
jmp	loc_68886D95
mov	[esp+0ACh+var_A8], offset aChatnav_pars_0 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886E49
mov	[esp+0ACh+var_AC], esi
call	sub_688819F0
movzx	ebx, ax
mov	[esp+0ACh+var_AC], esi
call	aim_tlvlist_read
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 8
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_get16
mov	esi, eax
movzx	eax, ax
mov	[esp+0ACh+var_A0], eax
mov	[esp+0ACh+var_A4], ebx
mov	[esp+0ACh+var_A8], offset aCouldNotJoinRo 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_warning
cmp	si, 33h
jz	loc_68887818
mov	[esp+0ACh+var_A8], offset aUnknownError	
mov	[esp+0ACh+var_AC], offset aPidgin_2 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+0ACh+var_A8], offset aCouldNotJoinCh 
mov	[esp+0ACh+var_AC], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+0ACh+var_94], 0
mov	[esp+0ACh+var_98], 0
mov	[esp+0ACh+var_9C], ebx
mov	[esp+0ACh+var_A0], eax
mov	[esp+0ACh+var_A4], 0
mov	[esp+0ACh+var_A8], 0
mov	eax, [ebp+68h]
mov	[esp+0ACh+var_AC], eax
call	purple_notify_message
mov	eax, 1
jmp	loc_68886EA4
align 4
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aChatnavErrorRe 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_warning
mov	eax, [edi+0Ch]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	[esp+0ACh+var_AC], edi
call	g_free
xor	eax, eax
jmp	loc_68886D95
mov	[esp+0ACh+var_AC], esi
call	aim_tlvlist_read
mov	[esp+0ACh+var_4C], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 2
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888754E
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 2
mov	eax, [esp+0ACh+var_4C]
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_get8
mov	byte ptr [esp+0ACh+var_40], al
mov	edi, 18h
xor	esi, esi
mov	[esp+0ACh+var_50], 0
mov	[esp+0ACh+var_48], ebp
xor	ebp, ebp
mov	[esp+0ACh+var_44], ebx
jmp	loc_688871BE
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D3h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_getstr
mov	[esi+4], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D5h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688870C3
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D5h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_get8
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D6h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887310
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D6h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_getstr
mov	[esi+8], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D7h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887304
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D7h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_getstr
mov	[esi+0Ch], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D8h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688872F8
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D8h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_getstr
mov	[esi+10h], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D9h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688872EC
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D9h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_getstr
mov	[esi+14h], eax
mov	[esp+0ACh+var_AC], ebx
call	aim_tlvlist_free
add	edi, 18h
mov	esi, [esp+0ACh+var_50]
lea	edx, [esi+1]
mov	[esp+0ACh+var_50], edx
mov	[esp+0ACh+var_A4], edx
mov	[esp+0ACh+var_A8], 3
mov	eax, [esp+0ACh+var_4C]
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888731C
movzx	edx, word ptr [eax+2]
mov	[esp+0ACh+var_A4], edx
mov	eax, [eax+4]
mov	[esp+0ACh+var_A8], eax
lea	edx, [esp+0ACh+var_2C]
mov	[esp+0ACh+var_AC], edx
call	sub_68881798
mov	[esp+0ACh+var_A8], edi
mov	[esp+0ACh+var_AC], ebp
call	g_realloc
mov	ebp, eax
lea	esi, [eax+edi-18h]
lea	ecx, [esp+0ACh+var_2C]
mov	[esp+0ACh+var_AC], ecx
call	sub_688819F0
mov	[esi], ax
lea	eax, [esp+0ACh+var_2C]
mov	[esp+0ACh+var_AC], eax
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 2
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68887287
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 2
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_get16
movzx	eax, ax
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aFaimClassPermi 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0C9h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688872BF
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0C9h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_get16
mov	[esi+2], ax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D3h
mov	[esp+0ACh+var_AC], ebx
call	aim_tlv_gettlv
test	eax, eax
jnz	loc_68887074
mov	dword ptr [esi+4], 0
jmp	loc_6888708F
align 4
mov	dword ptr [esi+14h], 0
jmp	loc_688871AF
mov	dword ptr [esi+10h], 0
jmp	loc_68887174
mov	dword ptr [esi+0Ch], 0
jmp	loc_68887139
mov	dword ptr [esi+8], 0
jmp	loc_688870FE
mov	[esp+0ACh+var_50], ebp
mov	ebp, [esp+0ACh+var_48]
mov	ebx, [esp+0ACh+var_44]
movzx	eax, word ptr [ebx+2]
mov	[esp+0ACh+var_A4], eax
movzx	eax, word ptr [ebx]
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], ebp
call	aim_callhandler
test	eax, eax
jz	loc_68887547
mov	edx, [esp+0ACh+var_50]
mov	[esp+0ACh+var_94], edx
mov	[esp+0ACh+var_98], esi
movzx	edx, byte ptr [esp+0ACh+var_40]
mov	[esp+0ACh+var_9C], edx
mov	ecx, [esp+0ACh+var_54]
movzx	edx, word ptr [ecx+6]
mov	[esp+0ACh+var_A0], edx
mov	edx, [esp+0ACh+var_58]
mov	[esp+0ACh+var_A4], edx
mov	ecx, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_A8], ecx
mov	[esp+0ACh+var_AC], ebp
call	eax
dec	esi
js	short loc_688873D1
lea	edx, [esi+esi*2]
mov	ecx, [esp+0ACh+var_50]
lea	ebx, [ecx+edx*8+4]
mov	edi, eax
lea	esi, [esi+0]
mov	eax, [ebx]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+0ACh+var_AC], eax
call	g_free
mov	edx, [ebx+10h]
mov	[esp+0ACh+var_AC], edx
call	g_free
dec	esi
sub	ebx, 18h
cmp	esi, 0FFFFFFFFh
jnz	short loc_68887390
mov	eax, edi
mov	edx, [esp+0ACh+var_50]
mov	[esp+0ACh+var_AC], edx
mov	[esp+0ACh+var_60], eax
call	g_free
mov	ecx, [esp+0ACh+var_4C]
mov	[esp+0ACh+var_AC], ecx
call	aim_tlvlist_free
mov	eax, [esp+0ACh+var_60]
jmp	loc_68886E49
mov	[esp+0ACh+var_A8], offset aChatnav_pars_1 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886E49
mov	[esp+0ACh+var_AC], esi
call	aim_tlvlist_read
mov	edi, eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 4
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887833
movzx	edx, word ptr [eax+2]
mov	[esp+0ACh+var_A4], edx
mov	eax, [eax+4]
mov	[esp+0ACh+var_A8], eax
lea	esi, [esp+0ACh+var_2C]
mov	[esp+0ACh+var_AC], esi
call	sub_68881798
mov	[esp+0ACh+var_AC], esi
call	sub_688819F0
mov	word ptr [esp+0ACh+var_4C], ax
mov	[esp+0ACh+var_AC], esi
call	sub_68881990
movzx	eax, al
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], esi
call	sub_68881D24
mov	[esp+0ACh+var_50], eax
mov	[esp+0ACh+var_AC], esi
call	sub_688819F0
mov	word ptr [esp+0ACh+var_48], ax
mov	[esp+0ACh+var_AC], esi
call	sub_68881990
cmp	al, 2
jz	loc_68887558
movzx	eax, al
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aUnknownDetaill 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
mov	[esp+0ACh+var_AC], edi
call	aim_tlvlist_free
mov	eax, [esp+0ACh+var_50]
mov	[esp+0ACh+var_AC], eax
call	g_free
xor	eax, eax
jmp	loc_68886E49
mov	[esp+0ACh+var_A8], offset aChatnav_pars_2 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886E49
mov	[esp+0ACh+var_A8], offset aChatnav_pars_3 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886E49
mov	eax, [ebx+8]
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aFaimChatnav__0 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886D95
mov	[esp+0ACh+var_A8], offset aChatnav_pars_4 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
xor	eax, eax
jmp	loc_68886E49
xor	eax, eax
jmp	loc_6888737D
mov	byte ptr [esp+0ACh+var_40], 0
jmp	loc_68887056
mov	[esp+0ACh+var_AC], esi
call	sub_688819F0
mov	[esp+0ACh+var_3A], ax
mov	[esp+0ACh+var_AC], esi
call	aim_tlvlist_read
mov	esi, eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 6Ah
mov	[esp+0ACh+var_AC], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688878A5
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 6Ah
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_getstr
mov	[esp+0ACh+var_44], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0C9h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887899
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0C9h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_get16
mov	[esp+0ACh+var_34], ax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0CAh
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888788C
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0CAh
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_get32
mov	[esp+0ACh+var_38], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D1h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887880
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D1h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_get16
mov	[esp+0ACh+var_32], ax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D2h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887874
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D2h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_get16
mov	[esp+0ACh+var_30], ax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D3h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68887867
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D3h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_getstr
mov	[esp+0ACh+var_40], eax
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D5h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888785D
mov	[esp+0ACh+var_A4], 1
mov	[esp+0ACh+var_A8], 0D5h
mov	[esp+0ACh+var_AC], esi
call	aim_tlv_get8
mov	[esp+0ACh+var_2D], al
movzx	eax, word ptr [ebx+2]
mov	[esp+0ACh+var_A4], eax
movzx	eax, word ptr [ebx]
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], ebp
call	aim_callhandler
test	eax, eax
jz	loc_68887856
mov	edx, [esp+0ACh+var_50]
mov	[esp+0ACh+var_74], edx
mov	ecx, [esp+0ACh+var_40]
mov	[esp+0ACh+var_78], ecx
movzx	edx, [esp+0ACh+var_3A]
mov	[esp+0ACh+var_7C], edx
movzx	edx, [esp+0ACh+var_2D]
mov	[esp+0ACh+var_80], edx
movzx	edx, [esp+0ACh+var_30]
mov	[esp+0ACh+var_84], edx
movzx	edx, [esp+0ACh+var_32]
mov	[esp+0ACh+var_88], edx
mov	edx, [esp+0ACh+var_38]
mov	[esp+0ACh+var_8C], edx
movzx	edx, [esp+0ACh+var_34]
mov	[esp+0ACh+var_90], edx
movzx	edx, word ptr [esp+0ACh+var_4C]
mov	[esp+0ACh+var_94], edx
movzx	edx, word ptr [esp+0ACh+var_48]
mov	[esp+0ACh+var_98], edx
mov	ecx, [esp+0ACh+var_44]
mov	[esp+0ACh+var_9C], ecx
mov	ecx, [esp+0ACh+var_54]
movzx	edx, word ptr [ecx+6]
mov	[esp+0ACh+var_A0], edx
mov	edx, [esp+0ACh+var_58]
mov	[esp+0ACh+var_A4], edx
mov	ecx, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_A8], ecx
mov	[esp+0ACh+var_AC], ebp
call	eax
mov	edx, [esp+0ACh+var_50]
mov	[esp+0ACh+var_AC], edx
mov	[esp+0ACh+var_60], eax
call	g_free
mov	ecx, [esp+0ACh+var_40]
mov	[esp+0ACh+var_AC], ecx
call	g_free
mov	edx, [esp+0ACh+var_44]
mov	[esp+0ACh+var_AC], edx
call	g_free
mov	[esp+0ACh+var_AC], esi
call	aim_tlvlist_free
mov	[esp+0ACh+var_AC], edi
call	aim_tlvlist_free
mov	eax, [esp+0ACh+var_60]
jmp	loc_68886E49
mov	eax, [ebx+8]
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aChatnavError_0 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_warning
xor	eax, eax
jmp	loc_68886D95
mov	[esp+0ACh+var_A8], offset aInvalidChatRoo 
mov	[esp+0ACh+var_AC], offset aPidgin_2 
call	libintl_dgettext
mov	ebx, eax
jmp	loc_68886F85
mov	[esp+0ACh+var_A8], offset aNoBigblockInTo 
mov	[esp+0ACh+var_AC], offset aOscar_3 
call	purple_debug_misc
mov	[esp+0ACh+var_AC], edi
call	aim_tlvlist_free
xor	eax, eax
jmp	loc_68886E49
xor	eax, eax
jmp	loc_688877B5
mov	[esp+0ACh+var_2D], 0
jmp	loc_68887716
mov	[esp+0ACh+var_40], 0
jmp	loc_688876DA
mov	[esp+0ACh+var_30], 0
jmp	loc_6888769E
mov	[esp+0ACh+var_32], 0
jmp	loc_68887661
mov	[esp+0ACh+var_38], 0
jmp	loc_68887624
mov	[esp+0ACh+var_34], 0
jmp	loc_688875E8
mov	[esp+0ACh+var_44], 0
jmp	loc_688875AB
call	__stack_chk_fail
align 4
public aim_chatnav_reqrights
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], 0Dh
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n_snacid
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688878FA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public aim_chatnav_createroom
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	ebp, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+arg_8]
movzx	esi, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
mov	[esp+6Ch+var_68], 476h
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_40], ecx
call	sub_68881748
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 8
mov	[esp+6Ch+var_68], 0Dh
mov	[esp+6Ch+var_6C], edi
call	aim_cachesnac
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_44], eax
call	sub_68881E0C
mov	[esp+6Ch+var_68], 6
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	[esp+6Ch+var_68], offset aCreate 
mov	[esp+6Ch+var_6C], ebx
call	sub_68882114
mov	[esp+6Ch+var_68], 0FFFFh
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], 0D3h
lea	esi, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_add_str
mov	[esp+6Ch+var_64], offset aUsAscii_0 
mov	[esp+6Ch+var_68], 0D6h
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_add_str
mov	[esp+6Ch+var_64], offset aEn 
mov	[esp+6Ch+var_68], 0D7h
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_add_str
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_count
and	eax, 0FFFFh
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], ebx
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], ebx
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], 8
mov	[esp+6Ch+var_64], 0Dh
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], edi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68887A8A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public chatnav_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	0Dh
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 10h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aChatnav 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68886D3C
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68887AF5
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+0D4h]
test	ebx, ebx
jz	short loc_68887B42
lea	esi, [esi+0]
mov	edi, [ebx+10h]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, edi
test	edi, edi
jnz	short loc_68887B1C
mov	ebx, [esi+0D8h]
test	ebx, ebx
jz	short loc_68887B72
mov	edi, [ebx+10h]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, edi
test	edi, edi
jnz	short loc_68887B4C
mov	edx, [esi+0DCh]
test	edx, edx
jz	short loc_68887B8D
mov	ebx, [edx+0Ch]
mov	[esp+2Ch+var_2C], edx
call	g_free
mov	edx, ebx
test	ebx, ebx
jnz	short loc_68887B7C
mov	word ptr [esi+0D0h], 0
mov	dword ptr [esi+0D4h], 0
mov	dword ptr [esi+0D8h], 0
mov	dword ptr [esi+0DCh], 0
mov	dword ptr [esi+0E0h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68887BD1
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68887BFF
add	esp, 1Ch
jmp	sub_68887AFC
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_68887C72
test	ebx, ebx
jz	short loc_68887C72
cmp	ecx, ebx
jnz	short loc_68887C2A
jmp	short loc_68887C6B
align 4
mov	ecx, eax
mov	eax, [ecx+10h]
test	eax, eax
jz	short loc_68887C3B
cmp	ebx, eax
jnz	short loc_68887C28
mov	eax, [ebx+10h]
mov	[ecx+10h], eax
			
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68887C79
add	esp, 28h
pop	ebx
retn
mov	edx, [ebx+10h]
mov	[eax], edx
jmp	short loc_68887C3B
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68887C5A
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ebx
xor	ebx, ebx
mov	edi, [ecx]
test	edi, edi
jz	short loc_68887D04
movzx	esi, word ptr [ecx+8]
xor	ebx, ebx
xchg	ax, ax
cmp	si, ds:word_688AF6E0[ebx*8]
jz	short loc_68887CF8
inc	ebx
cmp	ebx, 0Fh
jnz	short loc_68887CA0
mov	ebx, offset aUnknown 
mov	[esp+3Ch+var_20], edi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], esi
movzx	ebx, word ptr [ecx+6]
mov	[esp+3Ch+var_2C], ebx
movzx	ecx, word ptr [ecx+4]
mov	[esp+3Ch+var_30], ecx
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aSGid0x04hxBid0 
mov	[esp+3Ch+var_3C], eax
call	g_string_append_printf
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68887D0B
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	ebx, ds:off_688AF6E4[ebx*8]
jmp	short loc_68887CB5
align 4
mov	edi, offset aNull 
jmp	short loc_68887C98
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], eax
mov	edi, ecx
mov	ebp, edx
mov	esi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], 14h
mov	[esp+5Ch+var_40], edx
mov	[esp+5Ch+var_3C], ecx
call	g_malloc
mov	ebx, eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebx], eax
mov	ecx, [esp+5Ch+var_3C]
mov	[ebx+4], cx
mov	edx, [esp+5Ch+var_40]
mov	[ebx+6], dx
cmp	si, 1
jz	loc_68887E80
test	di, di
jz	loc_68887E10
inc	bp
jz	loc_68887EE4
lea	esi, [esi+0]
			
mov	[ebx+8], si
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	aim_tlvlist_copy
mov	[ebx+0Ch], eax
mov	eax, [esp+5Ch+var_38]
mov	ecx, [eax]
test	ecx, ecx
jz	loc_68887ED0
mov	esi, [ebx+4]
cmp	si, [ecx+4]
jb	loc_68887E70
jz	loc_68887E60
mov	eax, [ecx+10h]
test	eax, eax
jnz	short loc_68887DD2
jmp	short loc_68887DED
align 10h
mov	eax, edx
cmp	si, [eax+4]
ja	short loc_68887DE4
jnz	short loc_68887DED
mov	dx, [eax+6]
cmp	[ebx+6], dx
jbe	short loc_68887DED
mov	edx, [eax+10h]
mov	ecx, eax
test	edx, edx
jnz	short loc_68887DD0
			
mov	eax, [ecx+10h]
mov	[ebx+10h], eax
mov	[ecx+10h], ebx
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68887F1F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
inc	bp
jnz	loc_68887D90
mov	eax, [esp+5Ch+var_38]
mov	ecx, [eax]
mov	word ptr [ebx+6], 0
test	ecx, ecx
jz	loc_68887D90
xor	edx, edx
xchg	ax, ax
cmp	dx, [ecx+6]
jz	short loc_68887E57
cmp	dx, [ecx+4]
jz	short loc_68887E57
mov	eax, ecx
jmp	short loc_68887E46
cmp	dx, [eax+4]
jz	short loc_68887E57
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68887D90
cmp	dx, [eax+6]
jnz	short loc_68887E40
			
inc	edx
mov	[ebx+6], dx
jmp	short loc_68887E30
align 10h
mov	dx, [ecx+6]
cmp	[ebx+6], dx
jnb	loc_68887DC4
xchg	ax, ax
mov	[ebx+10h], ecx
mov	eax, [esp+5Ch+var_38]
mov	[eax], ebx
jmp	loc_68887DF6
align 10h
inc	di
jnz	loc_68887D90
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_68887D90
mov	eax, [esp+5Ch+var_38]
mov	ecx, [eax]
mov	word ptr [ebx+4], 0
test	ecx, ecx
jz	loc_68887D90
xor	edx, edx
mov	eax, ecx
jmp	short loc_68887EBB
align 10h
			
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68887D90
cmp	word ptr [eax+8], 1
jnz	short loc_68887EB0
cmp	dx, [eax+4]
jnz	short loc_68887EB0
inc	edx
mov	[ebx+4], dx
jmp	short loc_68887EAA
align 10h
mov	dword ptr [ebx+10h], 0
mov	eax, [esp+5Ch+var_38]
mov	[eax], ebx
jmp	loc_68887DF6
align 4
mov	eax, [esp+5Ch+var_38]
mov	edi, [eax]
mov	word ptr [ebx+6], 0
test	edi, edi
jz	loc_68887D90
xor	ecx, ecx
xchg	ax, ax
mov	edx, [ebx+4]
cmp	[edi+4], edx
jz	short loc_68887F18
mov	eax, edi
xchg	ax, ax
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68887D90
cmp	[eax+4], edx
jnz	short loc_68887F08
inc	ecx
mov	[ebx+6], cx
jmp	short loc_68887EFC
call	__stack_chk_fail
public aim_ssi_itemlist_find
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jnz	short loc_68887F4F
jmp	short loc_68887F6C
align 4
			
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_68887F5B
cmp	[eax+4], dx
jnz	short loc_68887F48
cmp	[eax+6], cx
jnz	short loc_68887F48
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68887F70
add	esp, 18h
pop	ebx
retn
xor	eax, eax
jmp	short loc_68887F5B
call	__stack_chk_fail
align 4
public aim_ssi_itemlist_finditem
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	esi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebx, [esp+4Ch+var_34]
test	ebx, ebx
jz	loc_68888080
mov	edi, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	loc_68888084
test	esi, esi
jnz	short loc_68887FD3
jmp	loc_68888070
align 4
			
mov	edi, [edi+10h]
test	edi, edi
jz	loc_68888080
cmp	[edi+8], bp
jnz	short loc_68887FC8
mov	eax, [edi]
test	eax, eax
jz	short loc_68887FC8
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_68887FC8
mov	ebx, [esp+4Ch+var_34]
jmp	short loc_68887FFF
align 4
			
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_68887FC8
cmp	word ptr [ebx+8], 1
jnz	short loc_68887FF8
mov	edx, [edi+4]
cmp	[ebx+4], dx
jnz	short loc_68887FF8
mov	eax, [ebx]
test	eax, eax
jz	short loc_68887FF8
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_68887FF8
lea	esi, [esi+0]
			
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688880CD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	word ptr [edi+6], 0
jnz	short loc_68888069
mov	eax, [edi]
test	eax, eax
jz	short loc_68888069
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jz	short loc_6888802C
			
mov	edi, [edi+10h]
test	edi, edi
jz	short loc_68888080
			
cmp	[edi+8], bp
jz	short loc_68888048
mov	edi, [edi+10h]
test	edi, edi
jnz	short loc_68888070
lea	esi, [esi+0]
			
xor	edi, edi
jmp	short loc_6888802C
test	esi, esi
jnz	short loc_68888093
jmp	short loc_688880C5
align 4
			
mov	edi, [edi+10h]
test	edi, edi
jz	short loc_68888080
cmp	[edi+8], bp
jnz	short loc_6888808C
mov	eax, [edi]
test	eax, eax
jz	short loc_6888808C
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_6888808C
jmp	loc_6888802C
mov	edx, [edi]
test	edx, edx
jz	loc_6888802C
mov	edi, [edi+10h]
test	edi, edi
jz	short loc_68888080
cmp	[edi+8], bp
jnz	short loc_688880BE
jmp	short loc_688880B4
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], esi
call	aim_ssi_itemlist_finditem
mov	ebx, eax
test	eax, eax
jz	loc_688881C8
mov	eax, [eax+4]
test	ax, ax
jnz	loc_688881DC
test	esi, esi
jz	loc_688881C8
mov	edx, esi
xor	ecx, ecx
jmp	short loc_6888812F
align 4
			
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_68888148
			
cmp	word ptr [edx+8], 1
jnz	short loc_68888128
cmp	word ptr [edx+4], 0
jz	short loc_68888128
add	ecx, 2
mov	edx, [edx+10h]
test	edx, edx
jnz	short loc_6888812F
nop
			
test	ecx, ecx
jle	short loc_688881C8
mov	[esp+2Ch+var_2C], ecx
call	g_malloc
mov	edi, eax
mov	ecx, [ebx+4]
test	cx, cx
jz	loc_68888208
test	esi, esi
jz	loc_68888240
mov	edx, esi
xor	eax, eax
jmp	short loc_6888817A
			
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_688881A0
mov	ecx, [ebx+4]
cmp	[edx+4], cx
jnz	short loc_68888170
cmp	word ptr [edx+8], 0
jnz	short loc_68888170
movzx	ecx, byte ptr [edx+7]
mov	[edi+eax], cl
mov	cl, [edx+6]
mov	[edi+eax+1], cl
add	eax, 2
mov	edx, [edx+10h]
test	edx, edx
jnz	short loc_68888177
nop
			
and	eax, 0FFFFh
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0C8h
add	ebx, 0Ch
mov	[esp+2Ch+var_2C], ebx
call	aim_tlvlist_replace_raw
mov	[esp+2Ch+var_2C], edi
call	g_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68888247
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
test	esi, esi
jz	short loc_688881C8
mov	edx, esi
xor	ecx, ecx
jmp	short loc_688881F3
align 4
			
mov	edx, [edx+10h]
test	edx, edx
jz	loc_68888148
cmp	ax, [edx+4]
jnz	short loc_688881E8
cmp	word ptr [edx+8], 0
jnz	short loc_688881E8
add	ecx, 2
jmp	short loc_688881E8
align 4
test	esi, esi
jz	short loc_68888240
mov	edx, esi
xor	eax, eax
jmp	short loc_6888821B
align 4
			
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_688881A0
cmp	word ptr [edx+8], 1
jnz	short loc_68888214
mov	ecx, [edx+4]
test	cx, cx
jz	short loc_68888214
shr	cx, 8
mov	[edi+eax], cl
mov	cl, [edx+4]
mov	[edi+eax+1], cl
add	eax, 2
jmp	short loc_68888214
align 10h
			
xor	eax, eax
jmp	loc_688881A5
call	__stack_chk_fail
public aim_ssi_itemlist_exists
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_68888294
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], edx
call	aim_ssi_itemlist_finditem
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68888298
add	esp, 2Ch
retn
align 4
xor	eax, eax
jmp	short loc_68888283
call	__stack_chk_fail
align 10h
public aim_ssi_itemlist_findparentname
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_688882F0
test	eax, eax
jz	short loc_688882F0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_ssi_itemlist_exists
test	eax, eax
jz	short loc_688882F0
mov	eax, [eax+4]
jmp	short loc_688882DF
align 4
			
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_688882F0
cmp	ax, [ebx+4]
jnz	short loc_688882D8
cmp	word ptr [ebx+6], 0
jnz	short loc_688882D8
mov	eax, [ebx]
jmp	short loc_688882F2
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68888303
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public aim_ssi_getpermdeny
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_68888378
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 0CAh
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68888378
mov	eax, [eax+4]
test	eax, eax
jz	short loc_68888378
movzx	eax, byte ptr [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888837C
add	esp, 2Ch
retn
align 4
			
xor	eax, eax
jmp	short loc_68888367
call	__stack_chk_fail
align 4
public aim_ssi_getpresence
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 5
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_688883E0
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 0C9h
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688883E0
cmp	word ptr [eax+2], 0
jnz	short loc_688883F8
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888841B
add	esp, 2Ch
retn
align 4
mov	edx, [eax+4]
movzx	eax, byte ptr [edx]
shl	eax, 18h
movzx	ecx, byte ptr [edx+3]
add	ecx, eax
movzx	eax, byte ptr [edx+1]
shl	eax, 10h
add	eax, ecx
movzx	edx, byte ptr [edx+2]
shl	edx, 8
add	eax, edx
jmp	short loc_688883E5
call	__stack_chk_fail
public aim_ssi_getalias
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_688884A0
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 131h
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688884A0
movzx	edx, word ptr [eax+2]
test	dx, dx
jz	short loc_688884A0
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_688884B2
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+4]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_strndup
align 10h
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688884B2
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_getcomment
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_68888538
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 13Ch
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_68888538
movzx	edx, word ptr [eax+2]
test	dx, dx
jz	short loc_68888538
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_6888854A
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+4]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_strndup
align 4
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888854A
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public aim_ssi_waitingforauth
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_688885BC
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 66h
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688885C0
add	esp, 2Ch
retn
align 4
xor	eax, eax
jmp	short loc_688885A9
call	__stack_chk_fail
align 4
public aim_ssi_reqrights
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68888624
mov	[esp+2Ch+var_28], 13h
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_68888624
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], 13h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n_snacid
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888862B
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68888611
call	__stack_chk_fail
public aim_ssi_reqdata
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68888698
mov	[esp+2Ch+var_28], 13h
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
mov	esi, eax
test	eax, eax
jz	short loc_68888698
mov	eax, ebx
call	sub_68887AFC
mov	[esp+2Ch+var_20], 4
mov	[esp+2Ch+var_24], 13h
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n_snacid
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888869F
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68888683
call	__stack_chk_fail
public aim_ssi_enable
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68888700
mov	[esp+2Ch+var_28], 13h
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_68888700
mov	[esp+2Ch+var_20], 7
mov	[esp+2Ch+var_24], 13h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68888707
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688886ED
call	__stack_chk_fail
public aim_ssi_modbegin
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68888768
mov	[esp+2Ch+var_28], 13h
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_68888768
mov	[esp+2Ch+var_20], 11h
mov	[esp+2Ch+var_24], 13h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888876F
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68888755
call	__stack_chk_fail
public aim_ssi_modend
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688887D0
mov	[esp+2Ch+var_28], 13h
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_688887D0
mov	[esp+2Ch+var_20], 12h
mov	[esp+2Ch+var_24], 13h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688887D7
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688887BD
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], offset byte_688AF2EF
call	g_string_new
test	ebp, ebp
jz	loc_68888DB8
mov	esi, [ebp+0E4h]
test	esi, esi
jnz	loc_68888A26
mov	edi, eax
mov	ebx, [ebp+0DCh]
test	ebx, ebx
jz	loc_68888B0F
			
mov	eax, [edi+4]
test	eax, eax
jnz	loc_68888A48
			
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	g_string_free
mov	eax, [ebp+0DCh]
test	eax, eax
jz	loc_68888AE8
mov	eax, [ebp+0E8h]
test	eax, eax
jz	loc_68888AD1
mov	dword ptr [ebp+0E4h], 1
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_findbygroup
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_68888DB8
mov	esi, [ebp+0DCh]
test	esi, esi
jz	loc_68888DB8
mov	edx, [esi+8]
test	edx, edx
jz	loc_68888DB8
xor	ebx, ebx
jmp	short loc_6888889F
mov	edx, [esi+8]
add	ebx, 0Ah
mov	edi, [edx]
test	edi, edi
jz	short loc_688888B7
mov	ecx, 0FFFFFFFFh
xor	eax, eax
repne scasb
not	ecx
lea	ebx, [ebx+ecx-1]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_688888C8
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_size
add	ebx, eax
mov	esi, [esi+0Ch]
test	esi, esi
jnz	short loc_6888889C
mov	[esp+5Ch+var_58], ebx
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881748
mov	ebx, [ebp+0DCh]
test	ebx, ebx
jnz	short loc_6888892D
jmp	loc_68888DC2
align 10h
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_size
and	eax, 0FFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+8]
mov	edi, [eax+0Ch]
test	edi, edi
jz	short loc_68888922
add	eax, 0Ch
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	aim_tlvlist_write
mov	ebx, [ebx+0Ch]
test	ebx, ebx
jz	loc_688889BC
mov	eax, [ebx+8]
mov	edi, [eax]
test	edi, edi
jz	loc_68888A40
mov	ecx, 0FFFFFFFFh
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFFFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+8]
mov	edx, [eax]
test	edx, edx
jz	short loc_68888970
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	sub_68882114
mov	eax, [ebx+8]
movzx	eax, word ptr [eax+4]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+8]
movzx	eax, word ptr [eax+6]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+8]
movzx	eax, word ptr [eax+8]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+8]
mov	eax, [eax+0Ch]
test	eax, eax
jnz	loc_688888F0
xor	eax, eax
jmp	loc_688888FD
align 4
mov	eax, [ebp+0DCh]
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
movzx	eax, word ptr [eax]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], ebp
call	aim_cachesnac
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], eax
mov	eax, [ebp+0DCh]
movzx	eax, word ptr [eax]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 13h
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
			
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68888DF6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	ecx, ecx
jmp	loc_6888894C
align 4
mov	eax, [edi]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aS_3 
mov	[esp+5Ch+var_5C], offset aOscar_4 
call	purple_debug_info
call	purple_debug_is_verbose
test	eax, eax
jz	loc_6888882D
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	g_string_truncate
mov	ebx, [ebp+0D8h]
test	ebx, ebx
jz	short loc_68888AA1
lea	esi, [esi+0]
mov	ecx, ebx
mov	edx, offset asc_688AF34C 
mov	eax, edi
call	sub_68887C80
mov	ebx, [ebx+10h]
test	ebx, ebx
jnz	short loc_68888A8C
mov	ebx, [edi]
mov	eax, [ebp+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_50], ebx
mov	eax, [eax]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aDumpingItemLis 
mov	[esp+5Ch+var_5C], offset aOscar_4 
call	purple_debug_misc
jmp	loc_6888882D
mov	[esp+5Ch+var_5C], ebp
call	aim_ssi_modbegin
mov	dword ptr [ebp+0E8h], 1
jmp	loc_68888859
mov	eax, [ebp+0E8h]
test	eax, eax
jz	loc_68888A26
mov	[esp+5Ch+var_5C], ebp
call	aim_ssi_modend
mov	dword ptr [ebp+0E8h], 0
xor	eax, eax
jmp	loc_68888A28
mov	ebx, [ebp+0D4h]
mov	edx, ebx
test	ebx, ebx
jz	loc_68888DFB
xor	esi, esi
lea	esi, [esi+0]
mov	cx, [ebx+6]
mov	edx, [ebx+4]
mov	eax, [ebp+0D8h]
test	eax, eax
jnz	short loc_68888B47
jmp	loc_68888D04
align 4
			
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68888D04
cmp	dx, [eax+4]
jnz	short loc_68888B3C
cmp	cx, [eax+6]
jnz	short loc_68888B3C
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_68888B5F
cmp	esi, 0Eh
jle	short loc_68888B24
mov	ecx, [ebp+0DCh]
test	ecx, ecx
jnz	loc_68888822
mov	ebx, [ebp+0D8h]
test	ebx, ebx
jz	loc_68888822
cmp	esi, 0Eh
jg	loc_68888822
mov	edx, [ebp+0D4h]
mov	cx, [ebx+6]
mov	eax, [ebx+4]
test	edx, edx
jnz	short loc_68888BA7
jmp	loc_68888CAC
align 4
			
mov	edx, [edx+10h]
test	edx, edx
jz	loc_68888CAC
cmp	ax, [edx+4]
jnz	short loc_68888B9C
cmp	cx, [edx+6]
jnz	short loc_68888B9C
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_68888BBF
cmp	esi, 0Eh
jle	short loc_68888B84
mov	edx, [ebp+0DCh]
test	edx, edx
jnz	loc_68888822
mov	ebx, [ebp+0D8h]
test	ebx, ebx
jz	loc_68888822
cmp	esi, 0Eh
jg	loc_68888822
mov	[esp+5Ch+var_30], edi
mov	cx, [ebx+6]
mov	eax, [ebx+4]
mov	edi, [ebp+0D4h]
test	edi, edi
jnz	short loc_68888C0B
jmp	loc_68888C91
align 10h
			
mov	edi, [edi+10h]
test	edi, edi
jz	loc_68888C91
cmp	ax, [edi+4]
jnz	short loc_68888C00
cmp	cx, [edi+6]
jnz	short loc_68888C00
mov	ecx, [ebx+0Ch]
test	ecx, ecx
jz	loc_68888D5C
mov	eax, [edi+0Ch]
test	eax, eax
jz	short loc_68888C3D
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ecx
call	aim_tlvlist_cmp
test	eax, eax
jz	loc_68888D67
			
mov	[esp+5Ch+var_5C], 10h
call	g_malloc
mov	word ptr [eax],	9
mov	word ptr [eax+2], 0FFFFh
mov	dword ptr [eax+4], 0
mov	[eax+8], ebx
mov	dword ptr [eax+0Ch], 0
mov	edx, [ebp+0DCh]
test	edx, edx
jnz	short loc_68888C76
jmp	loc_68888DC9
mov	edx, ecx
mov	ecx, [edx+0Ch]
test	ecx, ecx
jnz	short loc_68888C74
mov	[edx+0Ch], eax
inc	esi
mov	ecx, ebx
mov	edx, offset aModifyingItem 
mov	eax, [esp+5Ch+var_30]
call	sub_68887C80
			
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_68888CA1
cmp	esi, 0Eh
jle	loc_68888BE8
mov	edi, [esp+5Ch+var_30]
jmp	loc_68888822
align 4
			
mov	[esp+5Ch+var_5C], 10h
call	g_malloc
mov	word ptr [eax],	8
mov	word ptr [eax+2], 0FFFFh
mov	dword ptr [eax+4], 0
mov	[eax+8], ebx
mov	dword ptr [eax+0Ch], 0
mov	edx, [ebp+0DCh]
test	edx, edx
jnz	short loc_68888CE6
jmp	loc_68888DE0
align 4
mov	edx, ecx
mov	ecx, [edx+0Ch]
test	ecx, ecx
jnz	short loc_68888CE4
mov	[edx+0Ch], eax
inc	esi
mov	ecx, ebx
mov	edx, offset aAddingItem	
mov	eax, edi
call	sub_68887C80
jmp	loc_68888BB3
			
mov	[esp+5Ch+var_5C], 10h
call	g_malloc
mov	word ptr [eax],	0Ah
mov	word ptr [eax+2], 0FFFFh
mov	dword ptr [eax+4], 0
mov	[eax+8], ebx
mov	dword ptr [eax+0Ch], 0
mov	edx, [ebp+0DCh]
test	edx, edx
jnz	short loc_68888D3E
jmp	loc_68888DEB
align 4
mov	edx, ecx
mov	ecx, [edx+0Ch]
test	ecx, ecx
jnz	short loc_68888D3C
mov	[edx+0Ch], eax
inc	esi
mov	ecx, ebx
mov	edx, offset aDeletingItem 
mov	eax, edi
call	sub_68887C80
jmp	loc_68888B53
mov	eax, [edi+0Ch]
test	eax, eax
jnz	loc_68888C3D
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_68888DD4
mov	eax, [edi]
test	eax, eax
jz	loc_68888C3D
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ecx
call	oscar_util_name_compare
test	eax, eax
jnz	loc_68888C3D
mov	edx, [edi+4]
cmp	[ebx+4], dx
jnz	loc_68888C3D
mov	ax, [edi+6]
cmp	[ebx+6], ax
jnz	loc_68888C3D
mov	edx, [edi+8]
cmp	[ebx+8], dx
jnz	loc_68888C3D
jmp	loc_68888C91
			
mov	eax, 0FFFFFFEAh
jmp	loc_68888A28
xor	eax, eax
jmp	loc_688889C2
mov	[ebp+0DCh], eax
jmp	loc_68888C80
mov	eax, [edi]
test	eax, eax
jnz	loc_68888C3D
jmp	short loc_68888D8B
mov	[ebp+0DCh], eax
jmp	loc_68888CF0
mov	[ebp+0DCh], eax
jmp	loc_68888D48
call	__stack_chk_fail
mov	ebx, [ebp+0D8h]
xor	esi, esi
test	ebx, ebx
jnz	loc_68888B8A
jmp	loc_68888822
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_50], eax
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_3C], edx
mov	ecx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_38], ecx
mov	eax, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_44], eax
mov	ebp, [esp+7Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
mov	ax, [eax+2]
cmp	ax, 3
jz	loc_68888EEC
cmp	ax, 6
jz	loc_68888FDE
cmp	ax, 8
jz	loc_6888920B
cmp	ax, 9
jz	loc_6888941A
cmp	ax, 0Ah
jz	loc_688895FD
cmp	ax, 0Eh
jz	loc_68889720
cmp	ax, 0Fh
jz	loc_68889A74
cmp	ax, 15h
jz	loc_68889AC7
cmp	ax, 19h
jz	loc_68889C14
cmp	ax, 1Bh
jz	loc_68889CA8
cmp	ax, 1Ch
jz	loc_68889384
			
mov	[esp+7Ch+var_48], 0
			
mov	eax, [esp+7Ch+var_48]
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_68889F5C
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+7Ch+var_7C], ebp
call	aim_tlvlist_read
mov	[esp+7Ch+var_54], eax
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], 4
mov	[esp+7Ch+var_7C], eax
call	aim_tlv_gettlv
mov	ebx, eax
test	eax, eax
jz	loc_68889E78
movzx	eax, word ptr [eax+2]
mov	[esp+7Ch+var_74], eax
mov	eax, [ebx+4]
mov	[esp+7Ch+var_78], eax
lea	edi, [esp+7Ch+var_2C]
mov	[esp+7Ch+var_7C], edi
call	sub_68881798
movzx	eax, word ptr [ebx+2]
and	eax, 0FFFEh
mov	[esp+7Ch+var_7C], eax
call	g_malloc
mov	esi, eax
mov	ax, [ebx+2]
xor	ebp, ebp
shr	ax, 1
jz	short loc_68888F6F
nop
mov	[esp+7Ch+var_7C], edi
call	sub_688819F0
mov	[esi+ebp*2], ax
inc	ebp
mov	ax, [ebx+2]
shr	ax, 1
movzx	eax, ax
cmp	ebp, eax
jl	short loc_68888F54
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68889DCD
mov	[esp+7Ch+var_6C], esi
mov	dx, [ebx+2]
shr	dx, 1
movzx	edx, dx
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_7C], esi
call	g_free
jmp	loc_68888ED0
mov	[esp+7Ch+var_7C], offset byte_688AF2EF
call	g_string_new
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
mov	byte ptr [esp+7Ch+var_34], al
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0D0h]
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
add	ebx, eax
mov	eax, [esp+7Ch+var_50]
mov	[eax+0D0h], bx
add	eax, 0D4h
mov	[esp+7Ch+var_40], eax
mov	ebx, ebp
jmp	loc_688890B2
align 4
mov	[esp+7Ch+var_48], 0
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
mov	ebp, eax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	esi, ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	edi, ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_readlen
mov	[esp+7Ch+var_54], eax
movzx	ecx, bp
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], esi
mov	edx, [esp+7Ch+var_48]
mov	eax, [esp+7Ch+var_40]
call	sub_68887D10
mov	ecx, eax
mov	edx, offset asc_688AF34C 
mov	eax, [esp+7Ch+var_4C]
call	sub_68887C80
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_7C], ebx
call	sub_68881818
cmp	eax, 4
jbe	short loc_688890E8
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
test	ax, ax
jz	loc_6888902C
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_48], eax
jmp	loc_68889034
mov	ebp, ebx
mov	eax, [esp+7Ch+var_4C]
mov	ebx, [eax]
mov	edx, [esp+7Ch+var_50]
mov	eax, [edx+68h]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_account
mov	[esp+7Ch+var_70], ebx
mov	eax, [eax]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aReadingItemsFr 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_misc
mov	[esp+7Ch+var_78], 1
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	g_string_free
mov	[esp+7Ch+var_7C], ebp
call	sub_68881A60
mov	edx, [esp+7Ch+var_50]
mov	[edx+0E0h], eax
mov	ecx, [esp+7Ch+var_44]
test	byte ptr [ecx+4], 1
jnz	loc_68888EC8
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0D4h]
lea	esi, [eax+0D8h]
test	ebx, ebx
jz	short loc_68889192
lea	esi, [esi+0]
movzx	ecx, word ptr [ebx+4]
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [ebx+8]
mov	[esp+7Ch+var_78], eax
movzx	edx, word ptr [ebx+6]
mov	[esp+7Ch+var_7C], edx
mov	edx, [ebx]
mov	eax, esi
call	sub_68887D10
mov	ebx, [ebx+10h]
test	ebx, ebx
jnz	short loc_68889168
mov	eax, [esp+7Ch+var_50]
mov	dword ptr [eax+0CCh], 1
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68888EC8
mov	ecx, [esp+7Ch+var_50]
mov	edx, [ecx+0E0h]
mov	[esp+7Ch+var_68], edx
movzx	edx, word ptr [ecx+0D0h]
mov	[esp+7Ch+var_6C], edx
movzx	edx, byte ptr [esp+7Ch+var_34]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
jmp	loc_68888ED0
mov	ecx, [esp+7Ch+var_44]
add	ecx, 2
mov	[esp+7Ch+var_40], ecx
mov	[esp+7Ch+var_48], 0
mov	eax, [esp+7Ch+var_50]
add	eax, 0D8h
mov	[esp+7Ch+var_34], eax
mov	edx, [esp+7Ch+var_50]
add	edx, 0D4h
mov	[esp+7Ch+var_30], edx
mov	ebx, ebp
jmp	loc_68889330
mov	[esp+7Ch+var_54], 0
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	edi, ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	ebp, ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
movzx	esi, ax
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
test	ax, ax
jnz	loc_6888936C
mov	[esp+7Ch+var_4C], 0
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebp
mov	ecx, edi
mov	edx, [esp+7Ch+var_54]
mov	eax, [esp+7Ch+var_34]
call	sub_68887D10
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebp
mov	ecx, edi
mov	edx, [esp+7Ch+var_54]
mov	eax, [esp+7Ch+var_30]
call	sub_68887D10
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	edx, [esp+7Ch+var_40]
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_74], eax
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	short loc_68889324
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_68], edx
mov	[esp+7Ch+var_6C], esi
mov	ecx, [esp+7Ch+var_40]
movzx	edx, word ptr [ecx]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	sub_68881818
test	eax, eax
jz	loc_68888ED0
mov	[esp+7Ch+var_7C], ebx
call	sub_688819F0
test	ax, ax
jz	loc_68889240
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_68881D24
mov	[esp+7Ch+var_54], eax
jmp	loc_68889248
align 4
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_readlen
mov	[esp+7Ch+var_4C], eax
jmp	loc_68889282
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
test	al, al
jz	loc_68889B84
movzx	eax, al
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	ebx, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jz	loc_68889E36
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68889E29
mov	[esp+7Ch+var_70], ebx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
mov	[esp+7Ch+var_7C], ebx
call	g_free
jmp	loc_68888ED0
mov	edx, [esp+7Ch+var_44]
add	edx, 2
mov	[esp+7Ch+var_34], edx
mov	[esp+7Ch+var_48], 0
lea	esi, [esi+0]
mov	[esp+7Ch+var_7C], ebp
call	sub_68881818
test	eax, eax
jz	loc_68888ED0
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
test	ax, ax
jnz	loc_688895E5
mov	[esp+7Ch+var_54], 0
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	esi, eax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	edi, eax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	word ptr [esp+7Ch+var_40], ax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
test	ax, ax
jnz	loc_688895CD
mov	[esp+7Ch+var_4C], 0
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0D8h]
test	ebx, ebx
jnz	short loc_688894AB
jmp	short loc_688894F1
align 4
			
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_688894F1
cmp	si, [ebx+4]
jnz	short loc_688894A4
cmp	di, [ebx+6]
jnz	short loc_688894A4
mov	eax, [esp+7Ch+var_40]
mov	[ebx+8], ax
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[ebx], eax
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_copy
mov	[ebx+0Ch], eax
			
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0D4h]
test	ebx, ebx
jnz	short loc_6888950B
jmp	short loc_68889551
align 4
			
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_68889551
cmp	si, [ebx+4]
jnz	short loc_68889504
cmp	di, [ebx+6]
jnz	short loc_68889504
mov	eax, [esp+7Ch+var_40]
mov	[ebx+8], ax
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[ebx], eax
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_copy
mov	[ebx+0Ch], eax
			
mov	edx, [esp+7Ch+var_34]
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_74], eax
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	short loc_688895B0
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_68], edx
movzx	edi, word ptr [esp+7Ch+var_40]
mov	[esp+7Ch+var_6C], edi
mov	ecx, [esp+7Ch+var_34]
movzx	edx, word ptr [ecx]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
jmp	loc_68889430
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	aim_tlvlist_readlen
mov	[esp+7Ch+var_4C], eax
jmp	loc_68889493
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	[esp+7Ch+var_54], eax
jmp	loc_68889459
mov	edi, [esp+7Ch+var_44]
add	edi, 2
mov	[esp+7Ch+var_48], 0
mov	edx, [esp+7Ch+var_50]
add	edx, 0D8h
mov	[esp+7Ch+var_4C], edx
mov	ecx, [esp+7Ch+var_50]
add	ecx, 0D4h
mov	[esp+7Ch+var_40], ecx
mov	[esp+7Ch+var_54], edi
mov	esi, [esp+7Ch+var_50]
			
mov	[esp+7Ch+var_7C], ebp
call	sub_68881818
test	eax, eax
jz	loc_68888ED0
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881904
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	ebx, eax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	edi, eax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881904
mov	edx, [esi+0D8h]
test	edx, edx
jnz	short loc_6888969F
jmp	short loc_688896B4
align 4
			
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_688896B4
cmp	bx, [edx+4]
jnz	short loc_68889698
cmp	di, [edx+6]
jnz	short loc_68889698
mov	eax, [esp+7Ch+var_4C]
call	sub_68887C04
			
mov	edx, [esi+0D4h]
test	edx, edx
jnz	short loc_688896C7
jmp	short loc_688896DC
			
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_688896DC
cmp	bx, [edx+4]
jnz	short loc_688896C0
cmp	di, [edx+6]
jnz	short loc_688896C0
mov	eax, [esp+7Ch+var_40]
call	sub_68887C04
			
mov	ecx, [esp+7Ch+var_54]
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_74], eax
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	aim_callhandler
test	eax, eax
jz	loc_68889630
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], esi
call	eax
mov	[esp+7Ch+var_48], eax
jmp	loc_68889630
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0DCh]
mov	eax, 0Eh
test	ebx, ebx
jnz	short loc_6888974B
jmp	loc_68889899
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	[ebx+2], ax
mov	ebx, [ebx+0Ch]
test	ebx, ebx
jz	short loc_68889757
mov	[esp+7Ch+var_7C], ebp
call	sub_68881818
test	eax, eax
jnz	short loc_68889738
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0DCh]
test	ebx, ebx
jz	loc_68889891
mov	ax, [ebx+2]
cmp	ax, 0FFFFh
jz	loc_68889DAF
mov	edi, [esp+7Ch+var_50]
add	edi, 0D4h
mov	ebp, [esp+7Ch+var_50]
add	ebp, 0D8h
mov	[esp+7Ch+var_54], edi
mov	edi, [esp+7Ch+var_50]
jmp	short loc_688897CD
align 4
cmp	ax, 8
jz	short loc_6888981D
cmp	ax, 9
jz	loc_688899D8
cmp	ax, 0Ah
jz	loc_68889D69
xchg	ax, ax
			
mov	ebx, [ebx+0Ch]
test	ebx, ebx
jz	loc_68889891
mov	ax, [ebx+2]
cmp	ax, 0FFFFh
jz	loc_68889DAF
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_688897B4
test	ax, ax
mov	eax, [ebx]
jnz	short loc_68889798
cmp	ax, 8
jz	short loc_68889850
cmp	ax, 9
jz	loc_6888994D
cmp	ax, 0Ah
jnz	short loc_688897B4
mov	eax, [edi+0D4h]
test	eax, eax
jnz	short loc_68889807
jmp	short loc_68889814
align 10h
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_68889814
cmp	edx, eax
jnz	short loc_68889800
mov	eax, [esp+7Ch+var_54]
call	sub_68887C04
			
mov	dword ptr [ebx+8], 0
jmp	short loc_688897B4
mov	eax, [edi+0D8h]
test	eax, eax
jnz	short loc_68889833
jmp	short loc_68889814
align 4
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_68889814
cmp	edx, eax
jnz	short loc_6888982C
mov	eax, [edx]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[ebx+4], eax
mov	edx, [ebx+8]
mov	eax, ebp
call	sub_68887C04
jmp	short loc_68889814
mov	eax, [edi+0D8h]
test	eax, eax
jnz	short loc_68889863
jmp	short loc_68889814
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_68889814
cmp	edx, eax
jnz	short loc_6888985C
movzx	ecx, word ptr [edx+4]
mov	eax, [edx+0Ch]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx+8]
mov	[esp+7Ch+var_78], eax
movzx	eax, word ptr [edx+6]
mov	[esp+7Ch+var_7C], eax
mov	edx, [edx]
mov	eax, [esp+7Ch+var_54]
call	sub_68887D10
jmp	loc_688897B4
			
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx+2]
			
mov	[esp+7Ch+var_74], eax
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68889BA5
mov	ecx, [esp+7Ch+var_50]
mov	edx, [ecx+0DCh]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
mov	eax, [esp+7Ch+var_50]
mov	ebx, [eax+0DCh]
test	ebx, ebx
jz	short loc_6888992B
cmp	word ptr [ebx+2], 0FFFFh
jnz	short loc_68889911
jmp	loc_68889DBC
align 4
mov	ebx, esi
cmp	word ptr [esi+2], 0FFFFh
jz	loc_68889DBE
mov	esi, [ebx+0Ch]
mov	eax, [ebx+4]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	g_free
test	esi, esi
jnz	short loc_68889904
mov	eax, [esp+7Ch+var_50]
mov	dword ptr [eax+0DCh], 0
mov	dword ptr [eax+0E4h], 0
call	sub_688887DC
jmp	loc_68888ED0
mov	eax, [edi+0D8h]
test	eax, eax
jnz	short loc_68889967
jmp	loc_68889814
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68889814
cmp	edx, eax
jnz	short loc_6888995C
mov	ax, [edx+6]
mov	edx, [edx+4]
mov	esi, [edi+0D4h]
test	esi, esi
jnz	short loc_6888998F
jmp	loc_688897B4
align 4
			
mov	esi, [esi+10h]
test	esi, esi
jz	loc_688897B4
cmp	dx, [esi+4]
jnz	short loc_68889984
cmp	ax, [esi+6]
jnz	short loc_68889984
mov	eax, [esi]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [ebx+8]
mov	eax, [eax]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[esi], eax
mov	eax, [esi+0Ch]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	eax, [ebx+8]
mov	eax, [eax+0Ch]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_copy
mov	[esi+0Ch], eax
jmp	loc_688897B4
align 4
mov	eax, [edi+0D8h]
test	eax, eax
jnz	short loc_688899F3
jmp	loc_68889814
align 4
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68889814
cmp	edx, eax
jnz	short loc_688899E8
mov	cx, [edx+6]
mov	eax, [edx+4]
mov	esi, [edi+0D4h]
test	esi, esi
jnz	short loc_68889A1B
jmp	loc_688897B4
align 10h
			
mov	esi, [esi+10h]
test	esi, esi
jz	loc_688897B4
cmp	ax, [esi+4]
jnz	short loc_68889A10
cmp	cx, [esi+6]
jnz	short loc_68889A10
mov	eax, [edx]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	edx, [ebx+8]
mov	eax, [esi]
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_58], edx
call	g_strdup
mov	edx, [esp+7Ch+var_58]
mov	[edx], eax
mov	eax, [ebx+8]
mov	eax, [eax+0Ch]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	edx, [ebx+8]
mov	eax, [esi+0Ch]
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_58], edx
call	aim_tlvlist_copy
mov	edx, [esp+7Ch+var_58]
mov	[edx+0Ch], eax
jmp	loc_688897B4
mov	edx, [esp+7Ch+var_44]
movzx	eax, word ptr [edx]
mov	ecx, [esp+7Ch+var_50]
mov	dword ptr [ecx+0CCh], 1
mov	[esp+7Ch+var_74], 0Fh
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ecx
call	aim_callhandler
test	eax, eax
jz	loc_68888EC8
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
jmp	loc_68888ED0
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
test	al, al
jz	loc_68889DE7
movzx	eax, al
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jz	loc_68889E91
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
test	ax, ax
jnz	loc_68889BB2
xor	ebx, ebx
			
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68889DDA
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], esi
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
			
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	g_free
jmp	loc_68888ED0
mov	[esp+7Ch+var_78], offset aDroppingYouWer 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_48], 0
jmp	loc_68888ED0
mov	[esp+7Ch+var_48], 0
jmp	loc_688898E7
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	ebx, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jnz	loc_68889B1B
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], offset aGotNonUtf8Mess 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], ebx
call	purple_utf8_salvage
mov	edi, eax
mov	[esp+7Ch+var_7C], ebx
call	g_free
mov	ebx, edi
jmp	loc_68889B1B
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
test	al, al
jz	loc_68889E08
movzx	eax, al
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jz	loc_68889EB2
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
test	ax, ax
jz	loc_68889B19
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	ebx, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jnz	loc_68889B1B
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], offset aGotNonUtf8Me_0 
jmp	loc_68889BEF
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
test	al, al
jz	loc_68889E57
movzx	eax, al
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jz	loc_68889F3B
mov	[esp+7Ch+var_7C], ebp
call	sub_68881990
mov	edi, eax
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
test	ax, ax
jnz	loc_68889ED3
xor	ebx, ebx
			
mov	[esp+7Ch+var_7C], ebp
call	sub_688819F0
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx+2]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [ecx]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	aim_callhandler
test	eax, eax
jz	loc_68889DDA
mov	[esp+7Ch+var_68], ebx
and	edi, 0FFh
mov	[esp+7Ch+var_6C], edi
mov	[esp+7Ch+var_70], esi
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_78], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	eax
mov	[esp+7Ch+var_48], eax
jmp	loc_68889B6F
mov	eax, [edi+0D4h]
test	eax, eax
jnz	short loc_68889D83
jmp	loc_68889814
mov	eax, [eax+10h]
test	eax, eax
jz	loc_68889814
cmp	edx, eax
jnz	short loc_68889D78
movzx	ecx, word ptr [edx+4]
mov	eax, [edx+0Ch]
mov	[esp+7Ch+var_74], eax
movzx	eax, word ptr [edx+8]
mov	[esp+7Ch+var_78], eax
movzx	eax, word ptr [edx+6]
mov	[esp+7Ch+var_7C], eax
mov	edx, [edx]
mov	eax, ebp
call	sub_68887D10
jmp	loc_688897B4
			
mov	ecx, [esp+7Ch+var_44]
movzx	eax, word ptr [ecx+2]
jmp	loc_68889899
mov	esi, ebx
mov	eax, [esp+7Ch+var_50]
mov	[eax+0DCh], esi
jmp	loc_68888ED0
mov	[esp+7Ch+var_48], 0
jmp	loc_68888FC5
			
mov	[esp+7Ch+var_48], 0
jmp	loc_68889B6F
mov	[esp+7Ch+var_78], offset aDroppingAuthGr 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_48], 0
jmp	loc_68888ED0
mov	[esp+7Ch+var_78], offset aDroppingAuthRe 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_48], 0
jmp	loc_68888ED0
mov	[esp+7Ch+var_48], 0
jmp	loc_6888940D
mov	[esp+7Ch+var_78], offset aDroppingYouW_0 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], ebx
call	g_free
jmp	loc_688893C5
mov	[esp+7Ch+var_78], offset aDroppingAuth_0 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_48], 0
jmp	loc_68888ED0
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_48], 0
jmp	loc_68888ED0
mov	[esp+7Ch+var_78], offset aDroppingAuth_1 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], esi
call	g_free
jmp	loc_68889B08
mov	[esp+7Ch+var_78], offset aDroppingAuth_2 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], esi
call	g_free
jmp	loc_68889C55
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	sub_68881D24
mov	ebx, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_utf8_validate
test	eax, eax
jnz	loc_68889D06
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], offset aGotNonUtf8Me_1 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], ebx
call	purple_utf8_salvage
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_58], eax
call	g_free
mov	eax, [esp+7Ch+var_58]
mov	ebx, eax
jmp	loc_68889D06
mov	[esp+7Ch+var_78], offset aDroppingAuth_3 
mov	[esp+7Ch+var_7C], offset aOscar_4 
call	purple_debug_warning
mov	[esp+7Ch+var_7C], esi
call	g_free
jmp	loc_68889CE9
call	__stack_chk_fail
align 4
public aim_ssi_setpresence
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_6888A064
mov	edi, [ebx+0CCh]
test	edi, edi
jz	loc_6888A064
mov	[esp+2Ch+var_20], 5
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_68889FF4
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 0C9h
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_32
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888A084
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_688887DC
align 4
mov	edx, [ebx+0D8h]
test	edx, edx
jz	short loc_6888A015
xchg	ax, ax
cmp	word ptr [edx+4], 0
jnz	short loc_6888A00E
cmp	word ptr [edx+6], 0
jz	short loc_6888A07C
mov	edx, [edx+10h]
test	edx, edx
jnz	short loc_6888A000
lea	edi, [ebx+0D8h]
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], 0
xor	ecx, ecx
xor	edx, edx
mov	eax, edi
call	sub_68887D10
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], 0FFFFh
xor	ecx, ecx
xor	edx, edx
mov	eax, edi
call	sub_68887D10
jmp	loc_68889FBD
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A084
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
lea	edi, [ebx+0D8h]
jmp	short loc_6888A03D
			
call	__stack_chk_fail
align 4
public aim_ssi_seticon
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	al, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_2D], al
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	loc_6888A194
test	esi, esi
jz	loc_6888A194
test	al, al
jz	loc_6888A194
mov	ebp, [ebx+0CCh]
test	ebp, ebp
jz	loc_6888A194
mov	[esp+4Ch+var_40], 14h
mov	[esp+4Ch+var_44], offset a1 
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_itemlist_finditem
mov	edx, eax
test	eax, eax
jz	loc_6888A19C
movzx	ecx, [esp+4Ch+var_2D]
lea	eax, [ecx+2]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
call	g_malloc
mov	ebp, eax
mov	byte ptr [eax],	0
mov	al, [esp+4Ch+var_2D]
mov	[ebp+1], al
lea	eax, [ebp+2]
mov	ecx, [esp+4Ch+var_38]
mov	edi, eax
rep movsb
mov	edx, [esp+4Ch+var_34]
lea	esi, [edx+0Ch]
mov	[esp+4Ch+var_40], ebp
movzx	eax, [esp+4Ch+var_2D]
add	eax, 2
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0D5h
mov	[esp+4Ch+var_4C], esi
call	aim_tlvlist_replace_raw
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	[esp+4Ch+var_48], 131h
mov	[esp+4Ch+var_4C], esi
call	aim_tlvlist_replace_noval
mov	eax, ebx
call	sub_688887DC
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888A21C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888A17C
align 4
mov	eax, [ebx+0D8h]
test	eax, eax
jz	short loc_6888A1BD
xchg	ax, ax
cmp	word ptr [eax+4], 0
jnz	short loc_6888A1B6
cmp	word ptr [eax+6], 0
jz	short loc_6888A214
mov	eax, [eax+10h]
test	eax, eax
jnz	short loc_6888A1A8
lea	edi, [ebx+0D8h]
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], 0
xor	ecx, ecx
xor	edx, edx
mov	eax, edi
call	sub_68887D10
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 14h
mov	[esp+4Ch+var_4C], 0FFFFh
xor	ecx, ecx
mov	edx, offset a1	
mov	eax, edi
call	sub_68887D10
mov	edx, eax
jmp	loc_6888A105
align 4
lea	edi, [ebx+0D8h]
jmp	short loc_6888A1E5
call	__stack_chk_fail
align 4
public aim_ssi_delicon
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_15], 2
mov	[esp+2Ch+var_14], 1
mov	[esp+2Ch+var_13], 0D2h
mov	[esp+2Ch+var_12], 4
mov	[esp+2Ch+var_11], 72h
mov	[esp+2Ch+var_24], 5
lea	eax, [esp+2Ch+var_15]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_seticon
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A277
add	esp, 2Ch
retn
call	__stack_chk_fail
public aim_ssi_setpermdeny
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
movzx	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_6888A380
mov	eax, [ebx+0CCh]
test	eax, eax
jz	loc_6888A380
mov	[esp+2Ch+var_20], 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_6888A310
and	esi, 0FFh
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 0CAh
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888A3A0
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_688887DC
mov	edx, [ebx+0D8h]
test	edx, edx
jz	short loc_6888A331
xchg	ax, ax
cmp	word ptr [edx+4], 0
jnz	short loc_6888A32A
cmp	word ptr [edx+6], 0
jz	short loc_6888A398
mov	edx, [edx+10h]
test	edx, edx
jnz	short loc_6888A31C
lea	edi, [ebx+0D8h]
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], 0
xor	ecx, ecx
xor	edx, edx
mov	eax, edi
call	sub_68887D10
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_2C], 0FFFFh
xor	ecx, ecx
xor	edx, edx
mov	eax, edi
call	sub_68887D10
jmp	loc_6888A2D6
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A3A0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
lea	edi, [ebx+0D8h]
jmp	short loc_6888A359
			
call	__stack_chk_fail
align 4
public aim_ssi_rename_group
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_6888A428
test	eax, eax
jz	short loc_6888A428
test	edi, edi
jz	short loc_6888A428
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
mov	esi, eax
test	eax, eax
jz	short loc_6888A428
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[esi], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888A440
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_688887DC
align 4
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A440
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_editcomment
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	ebx, ebx
jz	short loc_6888A4E8
test	eax, eax
jz	short loc_6888A4E8
test	edx, edx
jz	short loc_6888A4E8
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_6888A4E8
test	esi, esi
jz	short loc_6888A4A0
cmp	byte ptr [esi],	0
jnz	short loc_6888A4CC
mov	[esp+2Ch+var_28], 13Ch
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888A4FF
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_688887DC
align 4
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 13Ch
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_str
jmp	short loc_6888A4B3
align 4
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A4FF
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
public aim_ssi_aliasbuddy
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	ebx, ebx
jz	short loc_6888A5A4
test	eax, eax
jz	short loc_6888A5A4
test	edx, edx
jz	short loc_6888A5A4
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_6888A5A4
test	esi, esi
jz	short loc_6888A55C
cmp	byte ptr [esi],	0
jnz	short loc_6888A588
mov	[esp+2Ch+var_28], 131h
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888A5BB
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_688887DC
align 4
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 131h
add	eax, 0Ch
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_str
jmp	short loc_6888A56F
align 4
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A5BB
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
public aim_ssi_delgroup
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_6888A664
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edi
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
mov	esi, eax
test	eax, eax
jz	short loc_6888A664
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], 0C8h
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888A62F
cmp	word ptr [eax+2], 0
jnz	short loc_6888A664
lea	eax, [ebx+0D8h]
mov	edx, esi
call	sub_68887C04
mov	eax, [ebx+0D8h]
mov	edx, edi
call	sub_688880D4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A67C
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_688887DC
align 4
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A67C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_delbuddy
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_6888A6FC
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
mov	edx, eax
test	eax, eax
jz	short loc_6888A6FC
lea	eax, [ebx+0D8h]
call	sub_68887C04
mov	eax, [ebx+0D8h]
mov	edx, esi
call	sub_688880D4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888A713
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_688887DC
align 4
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A713
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
public aim_ssi_del_from_private_list
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
movzx	edx, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	ebx, ebx
jz	short loc_6888A780
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
mov	edx, eax
test	eax, eax
jz	short loc_6888A780
lea	eax, [ebx+0D8h]
call	sub_68887C04
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888A796
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_688887DC
align 10h
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A796
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_add_to_private_list
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
movzx	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_6888A864
test	esi, esi
jz	loc_6888A864
mov	eax, [ebx+0CCh]
test	eax, eax
jz	loc_6888A864
mov	ecx, [ebx+0D8h]
test	ecx, ecx
jz	short loc_6888A7F9
nop
cmp	word ptr [ecx+4], 0
jnz	short loc_6888A7F2
cmp	word ptr [ecx+6], 0
jz	short loc_6888A85C
mov	ecx, [ecx+10h]
test	ecx, ecx
jnz	short loc_6888A7E4
lea	ebp, [ebx+0D8h]
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], 0
xor	ecx, ecx
xor	edx, edx
mov	eax, ebp
call	sub_68887D10
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], 0FFFFh
xor	ecx, ecx
mov	edx, esi
mov	eax, ebp
call	sub_68887D10
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A87D
mov	eax, ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_688887DC
align 4
lea	ebp, [ebx+0D8h]
jmp	short loc_6888A821
			
mov	eax, 0FFFFFFEAh
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888A87D
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_addbuddy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_44], edx
mov	esi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_10]
mov	eax, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_40], eax
mov	edx, [esp+5Ch+arg_18]
mov	[esp+5Ch+var_3C], edx
mov	eax, [esp+5Ch+arg_1C]
mov	[esp+5Ch+var_34], eax
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	loc_6888AAA0
mov	eax, [esp+5Ch+var_44]
test	eax, eax
jz	loc_6888AAA0
test	esi, esi
jz	loc_6888AAA0
mov	[esp+5Ch+var_50], 1
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], esi
mov	eax, [ebx+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_finditem
mov	edi, eax
test	eax, eax
jz	loc_6888AA0C
lea	eax, [ebx+0D8h]
mov	[esp+5Ch+var_38], eax
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jnz	loc_6888A9F0
test	ebp, ebp
jz	short loc_6888A945
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], 131h
lea	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_add_str
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jz	short loc_6888A969
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], 13Ah
lea	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_add_str
mov	eax, [esp+5Ch+var_40]
test	eax, eax
jz	short loc_6888A98D
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 13Ch
lea	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_add_str
movzx	ecx, word ptr [edi+4]
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0FFFFh
mov	edx, [esp+5Ch+var_44]
mov	eax, [esp+5Ch+var_38]
call	sub_68887D10
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_free
mov	eax, [ebx+0D8h]
mov	edx, esi
call	sub_688880D4
mov	eax, ebx
call	sub_688887DC
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888AAAA
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_58], 66h
lea	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_add_noval
jmp	loc_6888A929
align 4
mov	eax, [ebx+0D8h]
test	eax, eax
jz	short loc_6888AA2D
xchg	ax, ax
cmp	word ptr [eax+4], 0
jnz	short loc_6888AA26
cmp	word ptr [eax+6], 0
jz	short loc_6888AA94
mov	eax, [eax+10h]
test	eax, eax
jnz	short loc_6888AA18
lea	eax, [ebx+0D8h]
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], 0
xor	ecx, ecx
xor	edx, edx
call	sub_68887D10
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], 0
mov	ecx, 0FFFFh
mov	edx, esi
mov	eax, [esp+5Ch+var_38]
call	sub_68887D10
mov	edi, eax
mov	eax, [ebx+0D8h]
xor	edx, edx
call	sub_688880D4
jmp	loc_6888A91D
align 4
lea	eax, [ebx+0D8h]
mov	[esp+5Ch+var_38], eax
jmp	short loc_6888AA57
			
mov	eax, 0FFFFFFEAh
jmp	loc_6888A9D5
call	__stack_chk_fail
align 10h
public aim_ssi_movebuddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], edi
mov	eax, [ebx+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_6888AB61
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_copy
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], eax
call	aim_ssi_delbuddy
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	aim_ssi_addbuddy
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888AB68
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, 0FFFFFFEAh
jmp	short loc_6888AB4D
call	__stack_chk_fail
align 10h
public aim_ssi_cleanlist
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_6888AD7D
mov	ebx, [edi+0D8h]
test	ebx, ebx
jz	loc_6888AD3C
			
mov	esi, [ebx+10h]
mov	ecx, [ebx]
test	ecx, ecx
jz	loc_6888ACFC
cmp	word ptr [ebx+8], 0
jnz	short loc_6888ABE8
mov	eax, [ebx+4]
mov	ebp, [edi+0D8h]
test	ax, ax
jz	loc_6888AC7C
test	ebp, ebp
jz	loc_6888AC7C
mov	edx, ebp
jmp	short loc_6888ABDB
align 10h
			
mov	edx, [edx+10h]
test	edx, edx
jz	loc_6888AC7C
cmp	ax, [edx+4]
jnz	short loc_6888ABD0
cmp	word ptr [edx+6], 0
jnz	short loc_6888ABD0
			
mov	ebx, esi
test	esi, esi
jnz	short loc_6888AB9C
			
mov	ebp, [edi+0D8h]
test	ebp, ebp
jz	loc_6888AD3C
lea	eax, [edi+0D8h]
mov	[esp+5Ch+var_30], eax
jmp	short loc_6888AC1F
cmp	ax, 2
jz	short loc_6888AC27
cmp	ax, 3
jz	short loc_6888AC27
mov	ebp, [ebp+10h]
test	ebp, ebp
jz	loc_6888AD3C
mov	eax, [ebp+8]
test	ax, ax
jnz	short loc_6888AC08
			
mov	ebx, [ebp+10h]
test	ebx, ebx
jnz	short loc_6888AC3D
jmp	loc_6888AD3C
align 4
			
test	esi, esi
jz	short loc_6888AC14
mov	eax, [ebp+8]
mov	ebx, esi
mov	esi, [ebx+10h]
cmp	ax, [ebx+8]
jnz	short loc_6888AC34
mov	edx, [ebx+4]
cmp	[ebp+4], dx
jnz	short loc_6888AC34
mov	eax, [ebp+0]
test	eax, eax
jz	short loc_6888AC34
mov	edx, [ebx]
test	edx, edx
jz	short loc_6888AC34
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_6888AC34
mov	edx, ebx
mov	eax, [esp+5Ch+var_30]
call	sub_68887C04
jmp	short loc_6888AC34
align 4
			
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebp
call	aim_ssi_getalias
mov	ebp, eax
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aOrphans 
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_addbuddy
mov	[esp+5Ch+var_54], 0
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_delbuddy
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	ebx, esi
test	esi, esi
jnz	loc_6888AB9C
jmp	loc_6888ABEE
align 4
movzx	eax, word ptr [ebx+8]
test	ax, ax
jz	short loc_6888AD56
lea	edx, [eax-2]
cmp	dx, 1
jbe	short loc_6888AD18
cmp	ax, 0Eh
jnz	loc_6888ABE8
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_del_from_private_list
mov	ebx, esi
test	esi, esi
jnz	loc_6888AB9C
jmp	loc_6888ABEE
align 4
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888AD96
mov	eax, edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_688887DC
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_delbuddy
mov	ebx, esi
test	esi, esi
jnz	loc_6888AB9C
jmp	loc_6888ABEE
mov	eax, 0FFFFFFEAh
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888AD96
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public aim_ssi_sendauthrequest
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	esi, esi
jz	loc_6888AF70
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_6888AF70
test	ebp, ebp
jz	loc_6888AF70
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
mov	edx, ecx
not	edx
mov	ecx, [esp+5Ch+var_34]
test	ecx, ecx
jz	loc_6888AF1C
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_34]
repne scasb
not	ecx
lea	eax, [edx+ecx+4]
mov	[esp+5Ch+var_58], eax
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_34]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFFFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 18h
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 18h
mov	[esp+5Ch+var_54], 13h
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888AF77
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
add	edx, 4
mov	[esp+5Ch+var_58], edx
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
jmp	loc_6888AE95
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888AF07
call	__stack_chk_fail
public aim_ssi_sendauthreply
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_38], eax
mov	dl, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_2D], dl
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ecx
xor	ecx, ecx
test	esi, esi
jz	loc_6888B178
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_6888B178
test	ebp, ebp
jz	loc_6888B178
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
mov	edx, ecx
not	edx
mov	ebx, [esp+5Ch+var_38]
test	ebx, ebx
jz	loc_6888B110
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_38]
repne scasb
not	ecx
lea	eax, [edx+ecx+5]
mov	[esp+5Ch+var_58], eax
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
movzx	eax, [esp+5Ch+var_2D]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_38]
xor	eax, eax
repne scasb
not	ecx
movzx	ecx, cx
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 1Ah
mov	[esp+5Ch+var_58], 13h
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 1Ah
mov	[esp+5Ch+var_54], 13h
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B182
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
add	edx, 5
mov	[esp+5Ch+var_58], edx
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
movzx	eax, [esp+5Ch+var_2D]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
jmp	loc_6888B08A
align 4
			
mov	eax, 0FFFFFFEAh
jmp	loc_6888B0FC
call	__stack_chk_fail
align 4
public aim_ssi_getdenyentrytype
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+44h]
test	eax, eax
jnz	short loc_6888B1B8
mov	eax, 3
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B1BF
add	esp, 1Ch
retn
align 4
mov	eax, 0Eh
jmp	short loc_6888B1A6
call	__stack_chk_fail
public ssi_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	13h
mov	word ptr [ebx+2], 4
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aFeedbag 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68888E10
mov	dword ptr [ebx+20h], offset sub_68887BD8
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B230
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B266
mov	eax, [eax+50h]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B29A
mov	eax, [eax+48h]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B2CE
mov	eax, [eax+48h]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B302
mov	eax, [eax+4Ch]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	esi, [esp+3Ch+arg_0]
movzx	ebp, cx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_34], 8
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+3Ch+var_38], ecx
mov	[esp+3Ch+var_3C], ebx
call	sub_68881DA4
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	sub_68882114
mov	ecx, ebp
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
lea	eax, [ecx+0Ah]
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B392
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_icbm_makecookie
			
push	esi
push	ebx
sub	esp, 14h
mov	esi, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
xor	ebx, ebx
xchg	ax, ax
call	rand
movzx	edx, al
lea	ecx, [edx+edx*4]
lea	edx, [edx+ecx*8]
lea	edx, [edx+edx*4]
shr	dx, 0Bh
lea	edx, [edx+edx*4]
shl	edx, 1
sub	eax, edx
add	eax, 30h
mov	[esi+ebx], al
inc	ebx
cmp	ebx, 7
jnz	short loc_6888B3B0
mov	byte ptr [esi+7], 0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888B3EE
add	esp, 14h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public aim_im_setparams
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_6888B51C
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], edi
call	flap_connection_findbygroup
mov	ebp, eax
test	eax, eax
jz	loc_6888B51C
test	esi, esi
jz	loc_6888B51C
mov	[esp+4Ch+var_48], 10h
lea	ebx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881748
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	eax, [esi+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
movzx	eax, word ptr [esi+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+0Ah]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+0Ch]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	eax, [esi+10h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 2
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], edi
call	aim_cachesnac
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 2
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
call	flap_connection_send_snac
mov	[esp+4Ch+var_4C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888B523
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888B508
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 20Ch
mov	eax, [esp+21Ch+arg_0]
mov	[esp+21Ch+var_1E8], eax
mov	edx, [esp+21Ch+arg_4]
mov	[esp+21Ch+var_1DC], edx
mov	eax, [esp+21Ch+arg_C]
mov	[esp+21Ch+var_1D8], eax
mov	edx, [esp+21Ch+arg_10]
mov	[esp+21Ch+var_1E4], edx
mov	ebp, [esp+21Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+21Ch+var_20], eax
xor	eax, eax
mov	ax, [edx+2]
cmp	ax, 1
jz	loc_6888B680
cmp	ax, 5
jz	loc_6888B700
cmp	ax, 7
jz	loc_6888B79C
cmp	ax, 0Ah
jz	loc_6888B84C
cmp	ax, 0Bh
jz	loc_6888B920
cmp	ax, 0Ch
jz	loc_6888B9A4
cmp	ax, 14h
jz	short loc_6888B5E4
mov	[esp+21Ch+var_1E0], 0
			
mov	eax, [esp+21Ch+var_1E0]
mov	edx, [esp+21Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888C7C3
add	esp, 20Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	ebx, ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881990
movzx	eax, al
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	edi, ax
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888BBA8
mov	[esp+21Ch+var_208], edi
mov	[esp+21Ch+var_20C], esi
mov	[esp+21Ch+var_210], ebx
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
mov	[esp+21Ch+Buf1], esi
call	g_free
jmp	loc_6888B5C1
mov	edx, [esp+21Ch+var_1E8]
mov	edx, [edx+68h]
mov	[esp+21Ch+var_1E0], edx
mov	edx, [esp+21Ch+var_1E4]
mov	eax, [edx+8]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_remsnac
mov	esi, eax
test	eax, eax
jz	loc_6888C672
movzx	eax, word ptr [eax+4]
cmp	ax, 4
jnz	loc_6888BB88
mov	ebx, [esi+0Ch]
test	ebx, ebx
jz	short loc_6888B6CA
cmp	byte ptr [ebx],	0
jnz	loc_6888BA71
mov	[esp+21Ch+Buf2], offset	aIcbmErrorRecei	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
			
mov	eax, [esi+0Ch]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	[esp+21Ch+Buf1], esi
call	g_free
mov	[esp+21Ch+var_1E0], 1
jmp	loc_6888B5C1
align 10h
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+var_198], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_194], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+var_190], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+var_18E], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+var_18C], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_194], 51Bh
mov	[esp+21Ch+var_190], 1F40h
mov	[esp+21Ch+var_188], 0
lea	eax, [esp+21Ch+var_198]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_im_setparams
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B5C1
align 4
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+var_1F0], edx
xor	ebx, ebx
mov	ecx, 98h
mov	edi, edx
mov	al, bl
rep stosb
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	[esp+21Ch+var_1D4], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	esi, ax
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+Size], edx
mov	[esp+21Ch+Buf2], ebp
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_info_extract
cmp	si, 1
jz	loc_6888BEA9
cmp	si, 2
jz	loc_6888C103
cmp	si, 4
jz	loc_6888BBB5
mov	[esp+21Ch+Size], esi
mov	[esp+21Ch+Buf2], offset	aIcbmIcbmReceiv	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
mov	[esp+21Ch+var_1E0], 0
			
lea	eax, [esp+21Ch+var_114]
mov	[esp+21Ch+Buf1], eax
call	aim_info_free
mov	eax, [esp+21Ch+var_1D4]
mov	[esp+21Ch+Buf1], eax
call	g_free
jmp	loc_6888B5C1
mov	edx, [esp+21Ch+var_1E4]
add	edx, 2
mov	[esp+21Ch+var_1D4], edx
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B909
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	ebx, ax
lea	eax, [esp+21Ch+var_114]
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], ebp
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	aim_info_extract
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	esi, ax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	edi, ax
mov	edx, [esp+21Ch+var_1D4]
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Size], eax
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	short loc_6888B8FA
mov	[esp+21Ch+var_204], edi
mov	[esp+21Ch+var_208], esi
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+var_20C], edx
mov	[esp+21Ch+var_210], ebx
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
lea	eax, [esp+21Ch+var_114]
mov	[esp+21Ch+Buf1], eax
call	aim_info_free
mov	[esp+21Ch+Buf1], ebp
call	sub_68881818
test	eax, eax
jnz	loc_6888B864
jmp	loc_6888B5C1
align 10h
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	[esp+21Ch+var_1D4], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	ebx, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881990
movzx	eax, al
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	edi, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	esi, ax
cmp	bx, 2
jz	loc_6888BE1C
cmp	bx, 4
jz	loc_6888BA0C
			
xor	esi, esi
mov	[esp+21Ch+var_1E0], 0
			
mov	eax, [esp+21Ch+var_1D4]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	[esp+21Ch+Buf1], edi
call	g_free
mov	[esp+21Ch+Buf1], esi
call	g_free
jmp	loc_6888B5C1
align 4
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	esi, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+Buf1], ebp
call	sub_68881990
movzx	eax, al
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	ebx, eax
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], offset	aSentMessageToS	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_info
mov	[esp+21Ch+Buf1], ebx
call	g_free
mov	[esp+21Ch+Buf1], esi
call	g_free
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B5C1
cmp	si, 3
jz	loc_6888BCC1
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888B976
mov	[esp+21Ch+var_208], esi
mov	[esp+21Ch+var_20C], edi
mov	[esp+21Ch+var_210], 4
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
xor	esi, esi
jmp	loc_6888B980
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	edi, ax
mov	[esp+21Ch+Buf1], ebp
call	aim_tlvlist_read
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], eax
mov	[esp+21Ch+var_1F4], eax
call	aim_tlv_gettlv
test	eax, eax
mov	ecx, [esp+21Ch+var_1F4]
jz	loc_6888BDAC
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ecx
call	aim_tlv_get16
mov	ebp, eax
mov	ecx, [esp+21Ch+var_1F4]
mov	[esp+21Ch+Buf1], ecx
call	aim_tlvlist_free
movzx	edx, bp
mov	[esp+21Ch+var_1DC], edx
mov	[esp+21Ch+var_20C], edx
mov	[esp+21Ch+var_210], edi
mov	[esp+21Ch+Size], ebx
mov	[esp+21Ch+Buf2], offset	aMessageErrorWi	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_error
mov	[esp+21Ch+Buf1], edi
call	oscar_get_msgerr_reason
mov	[esp+21Ch+var_1E4], eax
dec	ebp
cmp	bp, 0Eh
ja	loc_6888BDF1
mov	edx, [esp+21Ch+var_1DC]
mov	eax, ds:off_688B0280[edx*4]
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	edi, eax
mov	[esp+21Ch+Buf2], offset	aUnableToSendMe	
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	[esp+21Ch+Size], edi
mov	edx, [esp+21Ch+var_1E4]
mov	[esp+21Ch+Buf2], edx
mov	[esp+21Ch+Buf1], eax
call	g_strdup_printf
mov	edi, eax
mov	edx, [esp+21Ch+var_1E0]
mov	[esp+21Ch+Buf1], edx
call	purple_connection_get_account
mov	[esp+21Ch+Size], edi
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebx
call	purple_conv_present_error
test	eax, eax
jz	loc_6888C5EF
mov	[esp+21Ch+Buf1], edi
call	g_free
jmp	loc_6888B6DE
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], offset	aIcbmErrorRec_0	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
jmp	loc_6888B6DE
align 4
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B673
mov	[esp+21Ch+Buf1], ebp
call	aim_tlvlist_read
mov	esi, eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 5
mov	[esp+21Ch+Buf1], eax
call	aim_tlv_gettlv
mov	ebx, eax
test	eax, eax
jz	loc_6888CA67
movzx	eax, word ptr [eax+2]
mov	[esp+21Ch+Size], eax
mov	eax, [ebx+4]
mov	[esp+21Ch+Buf2], eax
lea	ebp, [esp+21Ch+var_1B4]
mov	[esp+21Ch+Buf1], ebp
call	sub_68881798
mov	[esp+21Ch+Buf1], ebp
call	sub_68881BB4
mov	[esp+21Ch+var_1A8], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881AE4
mov	[esp+21Ch+var_1A4], al
mov	[esp+21Ch+Buf1], ebp
call	sub_68881AE4
mov	[esp+21Ch+var_1A3], al
cmp	[esp+21Ch+var_1A4], 1Ah
jnz	loc_6888C5CB
movzx	eax, word ptr [ebx+2]
sub	eax, 6
mov	[esp+21Ch+var_19C], eax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	[esp+21Ch+var_1A0], eax
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888C6A3
lea	edx, [esp+21Ch+var_1A8]
mov	[esp+21Ch+var_208], edx
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+var_20C], edx
mov	[esp+21Ch+var_210], 4
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
mov	eax, [esp+21Ch+var_1A0]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	[esp+21Ch+Buf1], esi
call	aim_tlvlist_free
jmp	loc_6888B82C
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881AE4
add	eax, 18h
cmp	al, 4
ja	loc_6888C66B
movzx	eax, al
mov	ebx, ds:dword_688B02C0[eax*4]
mov	[esp+21Ch+Buf1], ebp
call	sub_68881AE4
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	esi, eax
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888C702
mov	[esp+21Ch+var_200], esi
mov	[esp+21Ch+var_204], ebx
mov	[esp+21Ch+var_208], 3
mov	[esp+21Ch+var_20C], edi
mov	[esp+21Ch+var_210], 4
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
mov	[esp+21Ch+Buf1], esi
call	g_free
xor	esi, esi
jmp	loc_6888B980
mov	[esp+21Ch+Buf1], ecx
call	aim_tlvlist_free
mov	[esp+21Ch+var_20C], 0
mov	[esp+21Ch+var_210], edi
mov	[esp+21Ch+Size], ebx
mov	[esp+21Ch+Buf2], offset	aMessageErrorWi	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_error
mov	[esp+21Ch+Buf1], edi
call	oscar_get_msgerr_reason
mov	[esp+21Ch+var_1E4], eax
mov	ebp, 0FFFFFFFFh
mov	[esp+21Ch+var_1DC], 0
mov	[esp+21Ch+Buf2], offset	aUnableToSend_0	
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	edx, [esp+21Ch+var_1E4]
mov	[esp+21Ch+Buf2], edx
mov	[esp+21Ch+Buf1], eax
call	g_strdup_printf
mov	edi, eax
jmp	loc_6888BB57
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
cmp	ax, 1Bh
jnz	loc_6888B976
cmp	dword ptr [ebp+4], 4Eh
jbe	loc_6888B976
mov	[esp+21Ch+Buf2], 33h
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
mov	ebx, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
mov	esi, eax
movzx	eax, ax
mov	[esp+21Ch+var_210], eax
movzx	eax, bx
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], offset	aXStatusNum1HuN	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
cmp	bx, 4F00h
jnz	short loc_6888BE90
cmp	si, 3B00h
jz	loc_6888CA74
mov	[esp+21Ch+Buf2], offset	aXStatus0x00040	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
jmp	loc_6888B976
lea	edx, [esp+21Ch+var_184]
mov	[esp+21Ch+var_1EC], edx
mov	ecx, 18h
mov	edi, edx
mov	al, bl
rep stosb
lea	edi, [esp+21Ch+var_1B4]
jmp	short loc_6888BF14
align 4
cmp	bx, 4
jz	loc_6888BF72
cmp	bx, 6
jz	loc_6888C05E
cmp	bx, 8
jz	loc_6888C6B0
cmp	bx, 9
jz	loc_6888C5E2
cmp	bx, 0Bh
jz	loc_6888C693
cmp	bx, 16h
jz	loc_6888C7A2
			
mov	edx, [esp+21Ch+var_1E0]
mov	[esp+21Ch+Buf2], edx
mov	[esp+21Ch+Buf1], ebp
call	sub_68881874
mov	[esp+21Ch+Buf1], ebp
call	sub_68881818
cmp	eax, 3
jbe	loc_6888C08D
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	ebx, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	esi, ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881818
cmp	esi, eax
ja	loc_6888C06E
mov	[esp+21Ch+Buf1], ebp
call	sub_68881848
add	eax, esi
mov	[esp+21Ch+var_1E0], eax
cmp	bx, 2
jz	short loc_6888BF7C
cmp	bx, 3
jnz	loc_6888BEC8
or	[esp+21Ch+var_184], 2
jmp	short loc_6888BF04
or	[esp+21Ch+var_184], 1
jmp	short loc_6888BF04
mov	[esp+21Ch+Size], esi
mov	eax, [ebp+0]
add	eax, [ebp+8]
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], edi
call	sub_68881798
mov	edx, [esp+21Ch+var_1E8]
mov	eax, [edx+68h]
mov	[esp+21Ch+Buf1], eax
call	purple_connection_get_account
mov	[esp+21Ch+var_1D0], eax
mov	[esp+21Ch+Buf1], edi
call	sub_68881818
cmp	eax, 3
jbe	loc_6888BF04
mov	[esp+21Ch+Buf1], edi
call	sub_688819F0
mov	ebx, eax
mov	[esp+21Ch+Buf1], edi
call	sub_688819F0
movzx	esi, ax
cmp	bx, 101h
jz	short loc_6888BFF0
mov	[esp+21Ch+Buf2], esi
mov	[esp+21Ch+Buf1], edi
call	sub_68881904
mov	[esp+21Ch+Buf1], edi
call	sub_68881818
cmp	eax, 3
ja	short loc_6888BFB6
jmp	loc_6888BF04
mov	[esp+21Ch+Buf1], edi
call	sub_688819F0
movzx	ebx, ax
mov	[esp+21Ch+Buf2], 2
mov	[esp+21Ch+Buf1], edi
call	sub_68881904
lea	edx, [esi-4]
movzx	edx, dx
mov	[esp+21Ch+Buf2], edx
mov	[esp+21Ch+Buf1], edi
mov	[esp+21Ch+var_1F4], edx
call	sub_68881D24
mov	esi, eax
mov	edx, [esp+21Ch+var_1F4]
mov	[esp+21Ch+var_20C], edx	
mov	[esp+21Ch+var_210], eax	
mov	[esp+21Ch+Size], ebx 
mov	eax, [esp+21Ch+var_114]
mov	[esp+21Ch+Buf2], eax 
mov	eax, [esp+21Ch+var_1D0]
mov	[esp+21Ch+Buf1], eax 
call	oscar_decode_im
mov	[esp+21Ch+var_17C], eax
mov	[esp+21Ch+Buf1], esi
call	g_free
jmp	loc_6888BFA5
or	[esp+21Ch+var_184], 800h
jmp	loc_6888BF04
mov	eax, [esp+21Ch+var_114]
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], offset	aReceivedAnImCo	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888C788
lea	edx, [esp+21Ch+var_184]
mov	[esp+21Ch+var_208], edx
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+var_20C], edx
mov	[esp+21Ch+var_210], 1
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
mov	eax, [esp+21Ch+var_17C]
mov	[esp+21Ch+Buf1], eax
call	g_free
jmp	loc_6888B82C
mov	[esp+21Ch+Buf1], ebp
call	aim_tlvlist_read
mov	[esp+21Ch+var_1D0], eax
mov	dword ptr [esp+21Ch+Dest], 0
lea	edi, [esp+21Ch+var_76]
mov	ecx, 1Ah
mov	al, bl
rep stosb
mov	dword ptr [esp+21Ch+var_5C], 0
lea	edi, [esp+21Ch+var_58]
mov	cl, 1Ah
rep stosb
mov	dword ptr [esp+21Ch+var_3E], 0
lea	edi, [esp+21Ch+var_3A]
mov	cl, 1Ah
rep stosb
lea	edx, [esp+21Ch+var_16C]
mov	[esp+21Ch+var_1EC], edx
mov	cl, 58h
mov	edi, edx
rep stosb
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 5
mov	eax, [esp+21Ch+var_1D0]
mov	[esp+21Ch+Buf1], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888C795
movzx	edx, word ptr [eax+2]
mov	[esp+21Ch+Size], edx
mov	eax, [eax+4]
mov	[esp+21Ch+Buf2], eax
lea	ebx, [esp+21Ch+var_1C0]
mov	[esp+21Ch+Buf1], ebx
call	sub_68881798
mov	[esp+21Ch+Buf1], ebx
call	sub_688819F0
mov	[esp+21Ch+var_16C], ax
mov	[esp+21Ch+Buf2], 8
mov	[esp+21Ch+Buf1], ebx
call	sub_68881CAC
mov	esi, eax
mov	[esp+21Ch+Size], 8 
mov	[esp+21Ch+Buf2], eax 
mov	eax, [esp+21Ch+var_1D4]
mov	[esp+21Ch+Buf1], eax 
call	memcmp
test	eax, eax
jnz	loc_6888C70F
mov	eax, [esi]
mov	edx, [esi+4]
mov	[esp+21Ch+var_16A], eax
mov	[esp+21Ch+var_166], edx
mov	[esp+21Ch+Buf1], esi
call	g_free
mov	[esp+21Ch+Size], 10h
mov	[esp+21Ch+Buf2], ebx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	aim_locate_getcaps
mov	[esp+21Ch+var_15C], eax
mov	[esp+21Ch+var_158], edx
mov	[esp+21Ch+Buf1], ebx
call	aim_tlvlist_read
mov	edi, eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 2
mov	[esp+21Ch+Buf1], eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C25A
cmp	word ptr [eax+2], 4
jz	loc_6888C8C9
			
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 3
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C281
cmp	word ptr [eax+2], 4
jz	loc_6888C90F
			
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 4
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C2A8
cmp	word ptr [eax+2], 4
jz	loc_6888C955
			
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 5
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C2E4
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 5
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_get16
mov	[esp+21Ch+var_148], ax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Ah
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C320
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Ah
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_get16
mov	[esp+21Ch+var_12C], ax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Bh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C35C
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Bh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_get16
mov	[esp+21Ch+var_140], ax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Ch
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C3B7
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Ch
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_getstr
mov	[esp+21Ch+var_13C], eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Ch
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_getlength
mov	[esp+21Ch+var_138], ax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Dh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C3F2
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Dh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_getstr
mov	[esp+21Ch+var_134], eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Eh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C42D
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 0Eh
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_getstr
mov	[esp+21Ch+var_130], eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 10h
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C454
mov	[esp+21Ch+var_144], 1
cmp	[esp+21Ch+Dest], 0
jz	short loc_6888C46C
lea	eax, [esp+21Ch+Dest]
mov	[esp+21Ch+var_154], eax
cmp	[esp+21Ch+var_5C], 0
jz	short loc_6888C484
lea	eax, [esp+21Ch+var_5C]
mov	[esp+21Ch+var_150], eax
cmp	[esp+21Ch+var_3E], 0
jz	short loc_6888C49C
lea	eax, [esp+21Ch+var_3E]
mov	[esp+21Ch+var_14C], eax
mov	[esp+21Ch+Size], 1
mov	[esp+21Ch+Buf2], 2711h
mov	[esp+21Ch+Buf1], edi
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_6888C504
movzx	edx, word ptr [eax+2]
mov	[esp+21Ch+Size], edx
mov	eax, [eax+4]
mov	[esp+21Ch+Buf2], eax
lea	ebp, [esp+21Ch+var_1B4]
mov	[esp+21Ch+Buf1], ebp
call	sub_68881798
mov	eax, [esp+21Ch+var_15C]
test	al, 1
jnz	loc_6888C7C8
test	ah, 1
jnz	loc_6888C81F
test	al, 8
jnz	loc_6888C99B
test	ah, 40h
jnz	loc_6888CA31
test	al, 20h
jnz	loc_6888C9BE
			
mov	edx, [esp+21Ch+var_1E4]
movzx	eax, word ptr [edx+2]
mov	[esp+21Ch+Size], eax
movzx	eax, word ptr [edx]
mov	[esp+21Ch+Buf2], eax
mov	eax, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], eax
call	aim_callhandler
test	eax, eax
jz	loc_6888C7B6
lea	edx, [esp+21Ch+var_16C]
mov	[esp+21Ch+var_208], edx
lea	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+var_20C], edx
mov	[esp+21Ch+var_210], 2
mov	edx, [esp+21Ch+var_1D8]
mov	[esp+21Ch+Size], edx
mov	edx, [esp+21Ch+var_1DC]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	[esp+21Ch+var_1E0], eax
mov	eax, [esp+21Ch+var_118]
test	eax, eax
jz	short loc_6888C585
lea	edx, [esp+21Ch+var_16C]
mov	[esp+21Ch+Buf2], edx
mov	edx, [esp+21Ch+var_1E8]
mov	[esp+21Ch+Buf1], edx
call	eax
mov	eax, [esp+21Ch+var_13C]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	eax, [esp+21Ch+var_134]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	eax, [esp+21Ch+var_130]
mov	[esp+21Ch+Buf1], eax
call	g_free
mov	[esp+21Ch+Buf1], edi
call	aim_tlvlist_free
			
mov	eax, [esp+21Ch+var_1D0]
mov	[esp+21Ch+Buf1], eax
call	aim_tlvlist_free
jmp	loc_6888B82C
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+21Ch+var_19C], eax
jmp	loc_6888BC39
or	[esp+21Ch+var_184], 10h
jmp	loc_6888BF04
mov	[esp+21Ch+Buf1], edi
call	g_free
cmp	bp, 0Eh
jbe	loc_6888C738
mov	[esp+21Ch+Buf2], offset	aUnableToSend_1	
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	edx, [esp+21Ch+var_1E4]
mov	[esp+21Ch+Size], edx
mov	[esp+21Ch+Buf2], ebx
mov	[esp+21Ch+Buf1], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+21Ch+var_204], 0
mov	[esp+21Ch+var_208], 0
mov	eax, [esp+21Ch+var_1E4]
mov	[esp+21Ch+var_20C], eax
mov	[esp+21Ch+var_210], edi
mov	[esp+21Ch+Size], 0
mov	[esp+21Ch+Buf2], 0
mov	edx, [esp+21Ch+var_1E8]
mov	eax, [edx+68h]
mov	[esp+21Ch+Buf1], eax
call	purple_notify_message
jmp	loc_6888BB7B
xor	ebx, ebx
jmp	loc_6888BD0C
mov	[esp+21Ch+Buf2], offset	aIcbmErrorRec_1	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
mov	[esp+21Ch+var_1E0], 1
jmp	loc_6888B5C1
or	[esp+21Ch+var_184], 1000h
jmp	loc_6888BF04
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888BCA8
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_174], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	[esp+21Ch+var_170], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_178], eax
mov	eax, [esp+21Ch+var_174]
test	eax, eax
jz	loc_6888BF04
or	[esp+21Ch+var_184], 20h
jmp	loc_6888BF04
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888BD9D
mov	[esp+21Ch+Buf2], offset	aCookiesDonTMat	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_warning
mov	[esp+21Ch+Buf1], esi
call	g_free
mov	[esp+21Ch+var_1E0], 1
jmp	loc_6888C5BA
mov	edx, [esp+21Ch+var_1DC]
mov	eax, ds:off_688B0280[edx*4]
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	edi, eax
mov	[esp+21Ch+Buf2], offset	aUnableToSend_2	
mov	[esp+21Ch+Buf1], offset	aPidgin_3 
call	libintl_dgettext
mov	[esp+21Ch+var_210], edi
mov	edx, [esp+21Ch+var_1E4]
mov	[esp+21Ch+Size], edx
mov	[esp+21Ch+Buf2], ebx
mov	[esp+21Ch+Buf1], eax
call	g_strdup_printf
mov	edi, eax
jmp	loc_6888C62B
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888C0EF
mov	[esp+21Ch+var_1E0], 1
jmp	loc_6888C5BA
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_180], eax
jmp	loc_6888BF04
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888C566
call	__stack_chk_fail
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_128], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_124], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_120], eax
mov	eax, [esp+21Ch+var_124]
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881CAC
mov	[esp+21Ch+var_11C], eax
mov	[esp+21Ch+var_118], offset sub_6888B238
jmp	loc_6888C504
mov	[esp+21Ch+var_1E0], edi
mov	[esp+21Ch+Buf1], ebp
call	sub_68881818
test	eax, eax
jz	loc_6888C8C0
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	edi, ax
xor	ebx, ebx
test	edi, edi
jz	short loc_6888C8B3
lea	esi, [esi+0]
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	[esp+21Ch+var_20C], eax
mov	[esp+21Ch+var_210], esi
mov	edx, [esp+21Ch+var_114]
mov	[esp+21Ch+Size], edx
mov	[esp+21Ch+Buf2], offset	aGotABuddyListF	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
mov	[esp+21Ch+var_1F4], eax
call	purple_debug_misc
mov	eax, [esp+21Ch+var_1F4]
mov	[esp+21Ch+Buf1], eax
call	g_free
inc	ebx
cmp	ebx, edi
jl	short loc_6888C860
mov	[esp+21Ch+Buf1], esi
call	g_free
jmp	loc_6888C823
mov	edi, [esp+21Ch+var_1E0]
jmp	loc_6888C504
mov	eax, [eax+4]
movzx	edx, byte ptr [eax+3]
mov	[esp+21Ch+var_204], edx
movzx	edx, byte ptr [eax+2]
mov	[esp+21Ch+var_208], edx
movzx	edx, byte ptr [eax+1]
mov	[esp+21Ch+var_20C], edx
movzx	eax, byte ptr [eax]
mov	[esp+21Ch+var_210], eax
mov	[esp+21Ch+Size], offset	Format 
mov	[esp+21Ch+Buf2], 1Eh 
lea	eax, [esp+21Ch+Dest]
mov	[esp+21Ch+Buf1], eax 
call	_snprintf
jmp	loc_6888C25A
mov	eax, [eax+4]
movzx	edx, byte ptr [eax+3]
mov	[esp+21Ch+var_204], edx
movzx	edx, byte ptr [eax+2]
mov	[esp+21Ch+var_208], edx
movzx	edx, byte ptr [eax+1]
mov	[esp+21Ch+var_20C], edx
movzx	eax, byte ptr [eax]
mov	[esp+21Ch+var_210], eax
mov	[esp+21Ch+Size], offset	Format 
mov	[esp+21Ch+Buf2], 1Eh 
lea	eax, [esp+21Ch+var_5C]
mov	[esp+21Ch+Buf1], eax 
call	_snprintf
jmp	loc_6888C281
mov	eax, [eax+4]
movzx	edx, byte ptr [eax+3]
mov	[esp+21Ch+var_204], edx
movzx	edx, byte ptr [eax+2]
mov	[esp+21Ch+var_208], edx
movzx	edx, byte ptr [eax+1]
mov	[esp+21Ch+var_20C], edx
movzx	eax, byte ptr [eax]
mov	[esp+21Ch+var_210], eax
mov	[esp+21Ch+Size], offset	Format 
mov	[esp+21Ch+Buf2], 1Eh 
lea	eax, [esp+21Ch+var_3E]
mov	[esp+21Ch+Buf1], eax 
call	_snprintf
jmp	loc_6888C2A8
lea	eax, [esp+21Ch+var_128]
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	aim_chat_readroominfo
mov	[esp+21Ch+var_118], offset sub_6888B26C
jmp	loc_6888C504
mov	[esp+21Ch+var_118], offset sub_6888B2D4
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	word ptr [esp+21Ch+var_128], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_688819F0
mov	word ptr [esp+21Ch+var_128+2], ax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881A60
mov	[esp+21Ch+var_124], eax
xor	ebx, ebx
jmp	short loc_6888C9FD
inc	ebx
mov	[esp+21Ch+Buf1], ebp
call	sub_68881990
test	al, al
jnz	short loc_6888C9FC
mov	eax, ebx
not	eax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf2], ebx
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	[esp+21Ch+var_120], eax
jmp	loc_6888C504
mov	[esp+21Ch+var_118], offset sub_6888B2A0
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
cmp	ax, 1Bh
jz	loc_6888CB9E
mov	[esp+21Ch+Buf2], offset	aExpectedToFind	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_warning
jmp	loc_6888C504
mov	[esp+21Ch+var_1E0], 0FFFFFFFFh
jmp	loc_6888BCB4
mov	[esp+21Ch+Buf2], 56h
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881848
mov	edx, [ebp+4]
sub	edx, eax
mov	[esp+21Ch+Buf2], edx
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	esi, eax
mov	[esp+21Ch+Buf2], offset	aXStatusReceive	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
test	esi, esi
jz	loc_6888CC77
mov	[esp+21Ch+Buf1], 0
call	g_string_new
mov	ebx, eax
mov	[esp+21Ch+Buf2], offset	SubStr 
mov	[esp+21Ch+Buf1], esi 
call	strstr
test	eax, eax
jz	short loc_6888CB06
lea	ebp, [eax+0Dh]
mov	[esp+21Ch+Buf2], offset	aLtTitleGt_0 
mov	[esp+21Ch+Buf1], ebp 
call	strstr
test	eax, eax
jz	short loc_6888CB06
sub	eax, ebp
mov	[esp+21Ch+Size], eax
mov	[esp+21Ch+Buf2], ebp
mov	[esp+21Ch+Buf1], ebx
call	g_string_append_len
			
mov	[esp+21Ch+Buf2], offset	aLtDescGt 
mov	[esp+21Ch+Buf1], esi 
call	strstr
test	eax, eax
jz	short loc_6888CB67
lea	ebp, [eax+0Ch]
mov	[esp+21Ch+Buf2], offset	aLtDescGt_0 
mov	[esp+21Ch+Buf1], ebp 
call	strstr
mov	edx, eax
test	eax, eax
jz	short loc_6888CB67
cmp	dword ptr [ebx+4], 0
jz	short loc_6888CB55
cmp	ebp, eax
jnb	short loc_6888CB55
mov	[esp+21Ch+Buf2], offset	asc_688AFB0E 
mov	[esp+21Ch+Buf1], ebx
mov	[esp+21Ch+var_1F4], eax
call	g_string_append
mov	edx, [esp+21Ch+var_1F4]
			
sub	edx, ebp
mov	[esp+21Ch+Size], edx
mov	[esp+21Ch+Buf2], ebp
mov	[esp+21Ch+Buf1], ebx
call	g_string_append_len
			
mov	eax, [ebx]
mov	[esp+21Ch+Buf1], eax
call	purple_unescape_text
mov	ebp, eax
mov	[esp+21Ch+Buf2], 1
mov	[esp+21Ch+Buf1], ebx
call	g_string_free
cmp	byte ptr [ebp+0], 0
jnz	short loc_6888CBD9
			
mov	[esp+21Ch+Buf1], ebp
call	g_free
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B980
mov	[esp+21Ch+Buf2], 1Bh
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
cmp	ax, 0Eh
jz	loc_6888CC98
mov	[esp+21Ch+Buf2], offset	aExpectedToFi_0	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_warning
jmp	loc_6888C504
mov	[esp+21Ch+Size], ebp
mov	[esp+21Ch+Buf2], offset	aXStatusReplyS 
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
mov	edx, [esp+21Ch+var_1E8]
mov	eax, [edx+68h]
mov	[esp+21Ch+Buf1], eax
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+21Ch+Buf2], edi
mov	[esp+21Ch+Buf1], eax
call	purple_find_buddy
mov	[esp+21Ch+Buf1], eax
call	purple_buddy_get_presence
mov	[esp+21Ch+Buf2], offset	aMood 
mov	[esp+21Ch+Buf1], eax
call	purple_presence_get_status
test	eax, eax
jz	loc_6888CB89
mov	[esp+21Ch+Buf2], offset	aMood 
mov	[esp+21Ch+Buf1], eax
call	purple_status_get_attr_string
mov	[esp+21Ch+var_200], 0
mov	[esp+21Ch+var_204], ebp
mov	[esp+21Ch+var_208], offset aMoodtext 
mov	[esp+21Ch+var_20C], eax
mov	[esp+21Ch+var_210], offset aMood 
mov	[esp+21Ch+Size], offset	aMood 
mov	[esp+21Ch+Buf2], edi
mov	[esp+21Ch+Buf1], ebx
call	purple_prpl_got_user_status
jmp	loc_6888CB89
mov	[esp+21Ch+Buf2], offset	aXStatusCanTGet	
mov	[esp+21Ch+Buf1], offset	aOscar_5 
call	purple_debug_misc
mov	[esp+21Ch+var_1E0], 0
jmp	loc_6888B980
mov	[esp+21Ch+Buf2], 0Eh
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881990
mov	byte ptr [esp+21Ch+var_128], al
mov	[esp+21Ch+Buf2], 5
mov	[esp+21Ch+Buf1], ebp
call	sub_68881904
mov	[esp+21Ch+Buf1], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+21Ch+Buf2], eax
mov	[esp+21Ch+Buf1], ebp
call	sub_68881D24
mov	[esp+21Ch+var_124], eax
jmp	loc_6888C504
align 4
public aim_im_reqparams
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_6888CD48
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_6888CD48
mov	[esp+2Ch+var_20], 4
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n_snacid
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888CD4F
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888CD35
call	__stack_chk_fail
public aim_im_sendch1_ext
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_6888D060
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	flap_connection_findbygroup
mov	ebp, eax
test	eax, eax
jz	loc_6888D060
test	edi, edi
jz	loc_6888D060
mov	edx, [edi+8]
test	edx, edx
jz	loc_6888D060
mov	eax, [edi+0Ch]
test	eax, eax
jz	loc_6888D060
cmp	eax, 9F0h
ja	loc_6888D054
movzx	edx, word ptr [edi+1Ch]
lea	edx, [eax+edx+0Ch]
mov	[esp+6Ch+var_40], edx
mov	eax, edx
sub	eax, 0FFFFFF80h
mov	[esp+6Ch+var_68], eax
lea	ebx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], ebx
call	sub_68881748
lea	edx, [esp+6Ch+var_28]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_44], edx
call	aim_icbm_makecookie
mov	eax, [edi]
mov	[esp+6Ch+var_6C], eax
mov	ecx, 1
mov	edx, [esp+6Ch+var_44]
mov	eax, ebx
call	sub_6888B308
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 501h
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, word ptr [edi+1Ch]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, word ptr [edi+1Ch]
mov	[esp+6Ch+var_64], eax
mov	eax, [edi+20h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
mov	[esp+6Ch+var_68], 101h
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+0Ch]
add	eax, 4
movzx	eax, ax
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, word ptr [edi+24h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+0Ch]
mov	[esp+6Ch+var_64], eax
mov	eax, [edi+8]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
test	byte ptr [edi+4], 1
jnz	loc_6888CF88
mov	[esp+6Ch+var_68], 3
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+4]
test	ah, 8
jnz	loc_6888D044
test	al, 20h
jnz	loc_6888CFB3
test	al, 10h
jnz	loc_6888D01C
			
mov	edx, [edi]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
mov	[esp+6Ch+var_58], ecx
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 6
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
mov	[esp+6Ch+var_68], 3Ch
mov	[esp+6Ch+var_6C], esi
call	aim_cleansnacs
xor	eax, eax
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888D06A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+4]
test	al, 20h
jz	loc_6888CEF0
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0Ch
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+10h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E8C
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
movzx	eax, word ptr [edi+18h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	eax, [edi+14h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E8C
mov	eax, [edi+4]
test	al, 10h
jz	loc_6888CEF8
mov	[esp+6Ch+var_68], 9
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
jmp	loc_6888CEF8
align 4
mov	[esp+6Ch+var_68], 6
jmp	loc_6888CF90
align 4
mov	eax, 0FFFFFFF9h
jmp	loc_6888CF6D
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	loc_6888CF6D
call	__stack_chk_fail
align 10h
public aim_im_sendch2_chatinvite
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	esi, [esp+8Ch+arg_4]
mov	eax, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_64], eax
mov	edx, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_5C], edx
mov	ecx, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_68], ecx
mov	edx, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_58], edx
mov	ecx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_50], cx
mov	[esp+8Ch+var_4E], dx
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_48], 0
mov	[esp+8Ch+var_44], 0
test	ebp, ebp
jz	loc_6888D3D4
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+var_8C], ebp
call	flap_connection_findbygroup
mov	[esp+8Ch+var_54], eax
test	eax, eax
jz	loc_6888D3D4
test	esi, esi
jz	loc_6888D3D4
mov	ebx, [esp+8Ch+var_64]
test	ebx, ebx
jz	loc_6888D3D4
mov	ecx, [esp+8Ch+var_68]
test	ecx, ecx
jz	loc_6888D3D4
lea	edx, [esp+8Ch+var_28]
mov	[esp+8Ch+var_8C], edx
call	aim_icbm_makecookie
xor	ebx, ebx
mov	ecx, 0FFFFFFFFh
mov	edi, esi
mov	al, bl
repne scasb
mov	[esp+8Ch+var_60], ecx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+var_68]
repne scasb
mov	edx, ecx
not	edx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+var_64]
repne scasb
not	ecx
sub	edx, [esp+8Ch+var_60]
lea	eax, [edx+ecx+472h]
mov	[esp+8Ch+var_88], eax
lea	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	sub_68881748
mov	ecx, 0FFFFFFFFh
mov	edi, esi
mov	al, bl
repne scasb
not	ecx
mov	[esp+8Ch+var_78], ecx
mov	[esp+8Ch+var_7C], esi
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+var_8C], ebp
call	aim_cachesnac
mov	[esp+8Ch+var_60], eax
mov	[esp+8Ch+var_8C], 0Ch
call	g_malloc
mov	ebx, eax
mov	[esp+8Ch+var_8C], esi
call	g_strdup
mov	[ebx], eax
mov	edx, [esp+8Ch+var_68]
mov	[esp+8Ch+var_8C], edx
call	g_strdup
mov	[ebx+4], eax
mov	ecx, [esp+8Ch+var_5C]
mov	[ebx+8], cx
mov	eax, [esp+8Ch+var_58]
mov	[ebx+0Ah], ax
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], 2
lea	edx, [esp+8Ch+var_28]
mov	[esp+8Ch+var_8C], edx
call	aim_mkcookie
test	eax, eax
jz	loc_6888D3C4
mov	[esp+8Ch+var_88], eax 
mov	[esp+8Ch+var_8C], ebp 
call	aim_cachecookie
mov	[esp+8Ch+var_8C], esi
mov	ecx, 2
lea	edx, [esp+8Ch+var_28]
lea	eax, [esp+8Ch+var_40]
call	sub_6888B308
mov	ebx, 0FFFFFFFFh
xor	eax, eax
mov	ecx, ebx
mov	edi, [esp+8Ch+var_64]
repne scasb
mov	edx, ecx
not	edx
mov	ecx, ebx
mov	edi, [esp+8Ch+var_68]
repne scasb
not	ecx
lea	eax, [edx+ecx+2Fh]
mov	[esp+8Ch+var_88], eax
lea	ebx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], ebx
call	sub_68881748
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebx
call	sub_68881E0C
mov	[esp+8Ch+var_84], 8
lea	eax, [esp+8Ch+var_28]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebx
call	sub_688820A0
mov	[esp+8Ch+var_88], 8
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_8C], ebx
call	sub_688918E0
mov	[esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], 0Ah
lea	esi, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
mov	[esp+8Ch+var_88], 0Fh
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_noval
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], 0Ch
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_str
movzx	eax, [esp+8Ch+var_4E]
mov	[esp+8Ch+var_7C], eax
mov	ecx, [esp+8Ch+var_68]
mov	[esp+8Ch+var_80], ecx
movzx	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 2711h
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_chatroom
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_write
mov	esi, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], ebx
call	sub_68881848
mov	[esp+8Ch+var_80], esi
and	eax, 0FFFFh
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 5
lea	esi, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_8C], ebx
call	sub_688817E4
mov	[esp+8Ch+var_88], esi
lea	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_write
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
lea	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_78], edx
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 6
mov	[esp+8Ch+var_84], 4
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebp
call	flap_connection_send_snac
lea	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], edx
call	sub_688817E4
xor	eax, eax
mov	ecx, [esp+8Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_6888D3DB
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_8C], ebx
call	g_free
jmp	loc_6888D20E
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888D3A9
call	__stack_chk_fail
public aim_im_sendch2_icon
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	eax, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_50], eax
mov	ebx, [esp+7Ch+arg_C]
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_48], edx
mov	eax, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_42], ax
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
test	ebp, ebp
jz	loc_6888D690
mov	[esp+7Ch+var_78], 4
mov	[esp+7Ch+var_7C], ebp
call	flap_connection_findbygroup
mov	[esp+7Ch+var_4C], eax
test	eax, eax
jz	loc_6888D690
test	esi, esi
jz	loc_6888D690
mov	edi, [esp+7Ch+var_50]
test	edi, edi
jz	loc_6888D690
test	ebx, ebx
jle	loc_6888D690
cmp	ebx, 1BFFh
jg	loc_6888D690
lea	eax, [esp+7Ch+var_28]
mov	[esp+7Ch+var_7C], eax
call	aim_icbm_makecookie
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	eax, [ebx+ecx+54h]
mov	[esp+7Ch+var_78], eax
lea	edi, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], edi
call	sub_68881748
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 6
mov	[esp+7Ch+var_78], 4
mov	[esp+7Ch+var_7C], ebp
call	aim_cachesnac
mov	[esp+7Ch+var_40], eax
mov	[esp+7Ch+var_7C], esi
mov	ecx, 2
lea	edx, [esp+7Ch+var_28]
mov	eax, edi
call	sub_6888B308
mov	[esp+7Ch+var_78], 5
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	esi, ebx
lea	eax, [esi+42h]
movzx	eax, ax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_74], 8
lea	edx, [esp+7Ch+var_28]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], edi
call	sub_688820A0
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_7C], edi
call	sub_688918E0
mov	[esp+7Ch+var_78], 0Ah
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 2
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 0Fh
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 2711h
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
add	esi, 1Ah
movzx	esi, si
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
movzx	eax, [esp+7Ch+var_42]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], ebx
mov	[esp+7Ch+var_7C], edi
call	sub_68881E8C
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	sub_68881E8C
mov	[esp+7Ch+var_74], ebx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], edi
call	sub_688820A0
mov	[esp+7Ch+var_78], offset aAvt1picture_id 
mov	[esp+7Ch+var_7C], edi
call	sub_68882114
mov	[esp+7Ch+var_78], 3
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], edi
call	sub_68881E0C
mov	[esp+7Ch+var_68], edi
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 6
mov	[esp+7Ch+var_74], 4
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	flap_connection_send_snac
mov	[esp+7Ch+var_7C], edi
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888D697
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888D677
call	__stack_chk_fail
public aim_im_sendch2_cancel
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	esi, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_40], 0
mov	[esp+7Ch+var_3C], 0
mov	ebp, [esi]
mov	[esp+7Ch+var_78], 4
mov	[esp+7Ch+var_7C], ebp
call	flap_connection_findbygroup
mov	[esp+7Ch+var_54], eax
test	eax, eax
jz	loc_6888D874
mov	edi, [esi+10h]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
add	ecx, 75h
mov	[esp+7Ch+var_78], ecx
lea	edi, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], edi
call	sub_68881748
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 6
mov	[esp+7Ch+var_78], 4
mov	[esp+7Ch+var_7C], ebp
call	aim_cachesnac
mov	[esp+7Ch+var_50], eax
lea	edx, [esi+18h]
mov	[esp+7Ch+var_58], edx
mov	eax, [esi+10h]
mov	[esp+7Ch+var_7C], eax
mov	ecx, 2
mov	eax, edi
call	sub_6888B308
mov	[esp+7Ch+var_78], 3
lea	ecx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], ecx
mov	[esp+7Ch+var_5C], ecx
call	aim_tlvlist_add_noval
mov	[esp+7Ch+var_78], 40h
lea	ebx, [esp+7Ch+var_2C]
mov	[esp+7Ch+var_7C], ebx
call	sub_68881748
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E0C
mov	[esp+7Ch+var_74], 8
mov	eax, [esp+7Ch+var_58]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	sub_688820A0
mov	eax, [esi+8]
mov	edx, [esi+0Ch]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_7C], ebx
call	sub_688918E0
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], 0Bh
lea	esi, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], esi
call	aim_tlvlist_add_16
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	aim_tlvlist_write
mov	esi, [esp+7Ch+var_2C]
mov	[esp+7Ch+var_7C], ebx
call	sub_68881848
mov	[esp+7Ch+var_70], esi
and	eax, 0FFFFh
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 5
mov	ecx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_7C], ecx
call	aim_tlvlist_add_raw
mov	[esp+7Ch+var_7C], ebx
call	sub_688817E4
mov	ecx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_78], ecx
mov	[esp+7Ch+var_7C], edi
call	aim_tlvlist_write
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_68], edi
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 6
mov	[esp+7Ch+var_74], 4
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	flap_connection_send_snac
mov	[esp+7Ch+var_7C], edi
call	sub_688817E4
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888D888
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public aim_im_sendch2_connected
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx]
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	ebp, eax
test	eax, eax
jz	loc_6888D9C2
mov	edi, [ebx+10h]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
add	ecx, 28h
mov	[esp+5Ch+var_58], ecx
lea	edi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], edi
call	sub_68881748
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_30], eax
lea	eax, [ebx+18h]
mov	[esp+5Ch+var_34], eax
mov	eax, [ebx+10h]
mov	[esp+5Ch+var_5C], eax
mov	ecx, 2
mov	edx, [esp+5Ch+var_34]
mov	eax, edi
call	sub_6888B308
mov	[esp+5Ch+var_58], 5
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 1Ah
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_54], 8
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	sub_688820A0
mov	eax, [ebx+8]
mov	edx, [ebx+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_5C], edi
call	sub_688918E0
mov	[esp+5Ch+var_48], edi
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 6
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], edi
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888D9D6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_im_sendch2_odc_requestdirect
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_60], eax
mov	ebx, [esp+8Ch+arg_4]
mov	esi, [esp+8Ch+arg_8]
mov	eax, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_58], eax
movzx	ebp, [esp+8Ch+arg_10]
mov	eax, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_52], ax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_40], 0
mov	[esp+8Ch+var_3C], 0
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_findbygroup
mov	[esp+8Ch+var_5C], eax
test	eax, eax
jz	loc_6888DC4C
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
add	ecx, 0F5h
mov	[esp+8Ch+var_88], ecx
lea	edi, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], edi
call	sub_68881748
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	aim_cachesnac
mov	[esp+8Ch+var_50], eax
mov	[esp+8Ch+var_8C], esi
mov	ecx, 2
mov	edx, ebx
mov	eax, edi
call	sub_6888B308
mov	[esp+8Ch+var_88], 3
lea	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], edx
mov	[esp+8Ch+var_64], edx
call	aim_tlvlist_add_noval
mov	[esp+8Ch+var_88], 80h
lea	esi, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_8C], esi
call	sub_68881748
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], esi
call	sub_68881E0C
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], esi
call	sub_688820A0
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_8C], esi
call	sub_688918E0
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 2
lea	ebx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_add_raw
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 3
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 5
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_add_16
movzx	eax, [esp+8Ch+var_52]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 0Ah
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_add_16
mov	[esp+8Ch+var_88], 0Fh
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_add_noval
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_write
mov	ebx, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_8C], esi
call	sub_68881848
mov	[esp+8Ch+var_80], ebx
and	eax, 0FFFFh
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 5
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], edx
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_8C], esi
call	sub_688817E4
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], edi
call	aim_tlvlist_write
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	[esp+8Ch+var_78], edi
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 6
mov	[esp+8Ch+var_84], 4
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_send_snac
mov	[esp+8Ch+var_8C], edi
call	sub_688817E4
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888DC60
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_im_sendch2_odc_requestproxy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_5C], eax
mov	esi, [esp+8Ch+arg_4]
mov	ebp, [esp+8Ch+arg_8]
mov	ebx, [esp+8Ch+arg_C]
mov	eax, [esp+8Ch+arg_10]
mov	word ptr [esp+8Ch+var_54], ax
mov	eax, [esp+8Ch+arg_14]
mov	word ptr [esp+8Ch+var_54+2], ax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_44], 0
mov	[esp+8Ch+var_40], 0
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_findbygroup
mov	[esp+8Ch+var_58], eax
test	eax, eax
jz	loc_6888DF45
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
add	ecx, 0F5h
mov	[esp+8Ch+var_88], ecx
lea	edi, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], edi
call	sub_68881748
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_8C], eax
call	aim_cachesnac
mov	[esp+8Ch+var_50], eax
mov	[esp+8Ch+var_8C], ebp
mov	ecx, 2
mov	edx, esi
mov	eax, edi
call	sub_6888B308
mov	[esp+8Ch+var_88], 3
lea	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], edx
mov	[esp+8Ch+var_60], edx
call	aim_tlvlist_add_noval
mov	[esp+8Ch+var_88], 80h
lea	ebp, [esp+8Ch+var_30]
mov	[esp+8Ch+var_8C], ebp
call	sub_68881748
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebp
call	sub_68881E0C
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebp
call	sub_688820A0
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_8C], ebp
call	sub_688918E0
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 2
lea	esi, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 3
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
movzx	eax, word ptr [esp+8Ch+var_54]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 5
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
movzx	eax, word ptr [esp+8Ch+var_54+2]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 0Ah
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
mov	[esp+8Ch+var_88], 0Fh
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_noval
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_noval
mov	al, [ebx]
not	eax
mov	[esp+8Ch+var_24], al
mov	al, [ebx+1]
not	eax
mov	[esp+8Ch+var_23], al
mov	al, [ebx+2]
not	eax
mov	[esp+8Ch+var_22], al
mov	al, [ebx+3]
not	eax
mov	[esp+8Ch+var_21], al
lea	eax, [esp+8Ch+var_24]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 16h
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	eax, [esp+8Ch+var_54]
not	eax
movzx	eax, ax
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 17h
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebp
call	aim_tlvlist_write
mov	ebx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_8C], ebp
call	sub_68881848
mov	[esp+8Ch+var_80], ebx
and	eax, 0FFFFh
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 5
mov	edx, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], edx
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_8C], ebp
call	sub_688817E4
mov	edx, [esp+8Ch+var_60]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], edi
call	aim_tlvlist_write
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	[esp+8Ch+var_78], edi
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 6
mov	[esp+8Ch+var_84], 4
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_send_snac
mov	[esp+8Ch+var_8C], edi
call	sub_688817E4
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888DF59
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public aim_im_sendch2_sendfile_requestdirect
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_64], eax
mov	esi, [esp+8Ch+arg_4]
mov	ebx, [esp+8Ch+arg_8]
mov	edi, [esp+8Ch+arg_C]
mov	eax, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_60], eax
mov	eax, [esp+8Ch+arg_1C]
mov	[esp+8Ch+var_54], eax
movzx	ebp, [esp+8Ch+arg_10]
mov	eax, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_56], ax
mov	eax, [esp+8Ch+arg_20]
mov	[esp+8Ch+var_58], ax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_4C], 0
mov	[esp+8Ch+var_48], 0
test	ebx, ebx
jz	loc_6888E2B4
test	edi, edi
jz	loc_6888E2D4
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_findbygroup
mov	[esp+8Ch+var_5C], eax
test	eax, eax
jz	loc_6888E2A0
mov	[esp+8Ch+var_88], 3F6h
lea	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	sub_68881748
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+var_88], 4
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	aim_cachesnac
mov	[esp+8Ch+var_50], eax
mov	[esp+8Ch+var_8C], ebx
mov	ecx, 2
mov	edx, esi
lea	eax, [esp+8Ch+var_44]
call	sub_6888B308
mov	[esp+8Ch+var_88], 3
lea	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_add_noval
mov	[esp+8Ch+var_88], 200h
lea	ebx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], ebx
call	sub_68881748
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebx
call	sub_68881E0C
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebx
call	sub_688820A0
mov	[esp+8Ch+var_88], 20h
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_8C], ebx
call	sub_688918E0
mov	[esp+8Ch+var_80], edi
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 2
lea	esi, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_80], edi
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], 3
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 5
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
movzx	eax, [esp+8Ch+var_56]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 0Ah
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_16
mov	[esp+8Ch+var_88], 0Fh
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_noval
mov	ebp, [esp+8Ch+var_60]
test	ebp, ebp
jz	loc_6888E1F3
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+var_60]
repne scasb
not	ecx
add	ecx, 8
mov	[esp+8Ch+var_88], ecx
lea	edi, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_8C], edi
call	sub_68881748
cmp	[esp+8Ch+var_58], 2
sbb	eax, eax
add	eax, 2
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], edi
call	sub_68881E0C
movzx	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], edi
call	sub_68881E0C
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], edi
call	sub_68881E8C
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], edi
call	sub_68882114
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], edi
call	sub_68881DA4
mov	eax, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_80], eax
movzx	eax, [esp+8Ch+var_28]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 2711h
mov	[esp+8Ch+var_8C], esi
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_8C], edi
call	sub_688817E4
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebx
call	aim_tlvlist_write
mov	esi, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], ebx
call	sub_68881848
mov	[esp+8Ch+var_80], esi
and	eax, 0FFFFh
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 5
lea	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_add_raw
mov	[esp+8Ch+var_8C], ebx
call	sub_688817E4
lea	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_88], eax
lea	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_write
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_8C], eax
call	aim_tlvlist_free
lea	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_78], eax
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 6
mov	[esp+8Ch+var_84], 4
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	flap_connection_send_snac
lea	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	sub_688817E4
			
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888E2F2
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+8Ch+var_84], offset aBnNull 
mov	[esp+8Ch+var_88], offset aAim_im_sendch2 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
jmp	short loc_6888E2A0
align 4
mov	[esp+8Ch+var_84], offset aIpNull 
mov	[esp+8Ch+var_88], offset aAim_im_sendch2 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
jmp	short loc_6888E2A0
call	__stack_chk_fail
align 4
public aim_im_sendch2_sendfile_requestproxy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	eax, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_74], eax
mov	ebx, [esp+9Ch+arg_4]
mov	esi, [esp+9Ch+arg_8]
mov	edi, [esp+9Ch+arg_C]
mov	eax, [esp+9Ch+arg_18]
mov	[esp+9Ch+var_70], eax
mov	eax, [esp+9Ch+arg_1C]
mov	[esp+9Ch+var_64], eax
mov	eax, [esp+9Ch+arg_10]
mov	word ptr [esp+9Ch+var_68], ax
movzx	ebp, [esp+9Ch+arg_14]
mov	eax, [esp+9Ch+arg_20]
mov	word ptr [esp+9Ch+var_68+2], ax
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+var_50], 0
mov	[esp+9Ch+var_4C], 0
mov	[esp+9Ch+var_98], 4
mov	eax, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], eax
call	flap_connection_findbygroup
mov	[esp+9Ch+var_6C], eax
test	eax, eax
jz	loc_6888E69B
mov	[esp+9Ch+var_98], 3F6h
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	sub_68881748
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], 6
mov	[esp+9Ch+var_98], 4
mov	eax, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], eax
call	aim_cachesnac
mov	[esp+9Ch+var_60], eax
mov	[esp+9Ch+var_9C], esi
mov	ecx, 2
mov	edx, ebx
lea	eax, [esp+9Ch+var_48]
call	sub_6888B308
mov	[esp+9Ch+var_98], 3
lea	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_add_noval
mov	[esp+9Ch+var_98], 200h
lea	esi, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_9C], esi
call	sub_68881748
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], esi
call	sub_68881E0C
mov	[esp+9Ch+var_94], 8
mov	[esp+9Ch+var_98], ebx
mov	[esp+9Ch+var_9C], esi
call	sub_688820A0
mov	[esp+9Ch+var_98], 20h
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_9C], esi
call	sub_688918E0
mov	[esp+9Ch+var_90], edi
mov	[esp+9Ch+var_94], 4
mov	[esp+9Ch+var_98], 2
lea	ebx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_90], edi
mov	[esp+9Ch+var_94], 4
mov	[esp+9Ch+var_98], 3
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_raw
movzx	eax, word ptr [esp+9Ch+var_68]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 5
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], 0Ah
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
mov	[esp+9Ch+var_98], 0Fh
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_noval
mov	[esp+9Ch+var_98], 10h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_noval
mov	al, [edi]
not	eax
mov	[esp+9Ch+var_24], al
mov	al, [edi+1]
not	eax
mov	[esp+9Ch+var_23], al
mov	al, [edi+2]
not	eax
mov	[esp+9Ch+var_22], al
mov	al, [edi+3]
not	eax
mov	[esp+9Ch+var_21], al
lea	eax, [esp+9Ch+var_24]
mov	[esp+9Ch+var_90], eax
mov	[esp+9Ch+var_94], 4
mov	[esp+9Ch+var_98], 16h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_raw
mov	eax, [esp+9Ch+var_68]
not	eax
movzx	eax, ax
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 17h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_16
mov	eax, [esp+9Ch+var_70]
test	eax, eax
jz	loc_6888E5EE
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+9Ch+var_70]
repne scasb
not	ecx
add	ecx, 8
mov	[esp+9Ch+var_98], ecx
lea	edi, [esp+9Ch+var_30]
mov	[esp+9Ch+var_9C], edi
call	sub_68881748
cmp	word ptr [esp+9Ch+var_68+2], 2
sbb	eax, eax
add	eax, 2
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], edi
call	sub_68881E0C
movzx	eax, word ptr [esp+9Ch+var_68+2]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], edi
call	sub_68881E0C
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], edi
call	sub_68881E8C
mov	eax, [esp+9Ch+var_70]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], edi
call	sub_68882114
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], edi
call	sub_68881DA4
mov	eax, [esp+9Ch+var_30]
mov	[esp+9Ch+var_90], eax
movzx	eax, [esp+9Ch+var_2C]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 2711h
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_9C], edi
call	sub_688817E4
mov	[esp+9Ch+var_98], ebx
mov	[esp+9Ch+var_9C], esi
call	aim_tlvlist_write
mov	ebx, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_9C], esi
call	sub_68881848
mov	[esp+9Ch+var_90], ebx
and	eax, 0FFFFh
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 5
lea	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_9C], esi
call	sub_688817E4
lea	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_write
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_free
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_free
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_88], eax
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+var_8C], eax
mov	[esp+9Ch+var_90], 6
mov	[esp+9Ch+var_94], 4
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], eax
call	flap_connection_send_snac
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	sub_688817E4
mov	eax, [esp+9Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888E6B2
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_im_denytransfer
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_48], eax
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_44], edx
movzx	ebp, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
test	esi, esi
jz	loc_6888E83C
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_6888E83C
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
xor	eax, eax
repne scasb
not	ecx
add	ecx, 10h
mov	[esp+6Ch+var_68], ecx
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_4C], edx
call	sub_68881748
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0Bh
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_64], 8
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], ebx
call	sub_68881DA4
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_68882114
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], 3
lea	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_add_16
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], ebx
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], ebx
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 0Bh
mov	[esp+6Ch+var_64], 4
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888E843
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888E827
call	__stack_chk_fail
public aim_im_send_icq_confirmation
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_30], edx
call	g_random_int
mov	ebp, eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aSendingMessage 
mov	[esp+5Ch+var_5C], offset aOscar_5 
call	purple_debug_misc
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
add	ecx, 42h
mov	[esp+5Ch+var_58], ecx
lea	edi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], edi
call	sub_68881748
mov	[esp+5Ch+var_5C], ebx
mov	ecx, 2
mov	edx, [esp+5Ch+var_30]
mov	eax, edi
call	sub_6888B308
mov	[esp+5Ch+var_58], 3
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 1Bh
mov	[esp+5Ch+var_5C], edi
call	sub_68881F8C
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], edi
call	sub_68881DA4
mov	[esp+5Ch+var_58], 2000h
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_5C], edi
call	sub_688918E0
mov	[esp+5Ch+var_58], 3
mov	[esp+5Ch+var_5C], edi
call	sub_68881E8C
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], edi
call	sub_68881E8C
and	ebp, 0FFFFh
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0Eh
mov	[esp+5Ch+var_5C], edi
call	sub_68881F8C
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881E8C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881E8C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881E8C
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	sub_68881DA4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881DA4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 100h
mov	[esp+5Ch+var_5C], edi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	sub_68881F8C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	sub_68881DA4
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	ebx, eax
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
test	eax, eax
jz	loc_6888EA6C
mov	[esp+5Ch+var_48], edi
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], 0Bh
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], edi
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888EA9A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_4C], offset aConn 
mov	[esp+5Ch+var_50], offset aAim_im_send_ic 
mov	[esp+5Ch+var_54], 671h
mov	[esp+5Ch+var_58], offset aFamily_icbm_c	
mov	[esp+5Ch+var_5C], 0
call	g_warn_message
jmp	short loc_6888EA50
call	__stack_chk_fail
align 10h
public aim_im_reqofflinemsgs
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_6888EAFC
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_6888EAFC
mov	[esp+2Ch+var_20], 10h
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888EB03
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888EAE9
call	__stack_chk_fail
public aim_im_sendmtn
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_38], eax
movzx	ebp, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_32], dx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_6888EC78
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_6888EC78
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	loc_6888EC78
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_38]
xor	eax, eax
repne scasb
not	ecx
add	ecx, 0Ch
mov	[esp+5Ch+var_58], ecx
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_3C], edx
call	sub_68881748
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 14h
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E8C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E8C
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_38]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	sub_68881DA4
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68882114
movzx	eax, [esp+5Ch+var_32]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 14h
mov	[esp+5Ch+var_54], 4
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888EC7F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888EC61
call	__stack_chk_fail
public icq_im_xstatus_request
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	eax, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_74], eax
mov	ebx, [esp+9Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], edx
xor	edx, edx
mov	[esp+9Ch+var_54], 0
mov	[esp+9Ch+var_50], 0
test	eax, eax
jz	loc_6888EF98
mov	[esp+9Ch+var_98], 4
mov	ecx, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], ecx
call	flap_connection_findbygroup
mov	[esp+9Ch+var_64], eax
test	eax, eax
jz	loc_6888EF98
test	ebx, ebx
jz	loc_6888EF98
mov	edx, [esp+9Ch+var_74]
mov	eax, [edx+68h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_get_account
mov	eax, [eax]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], offset aNQueryLtQGtLtP 
call	g_strdup_printf
mov	[esp+9Ch+var_68], eax
mov	ebp, 0FFFFFFFFh
xor	eax, eax
mov	ecx, ebp
mov	edi, [esp+9Ch+var_68]
repne scasb
not	ecx
mov	[esp+9Ch+var_70], ecx
dec	ecx
mov	[esp+9Ch+var_6C], ecx
lea	esi, [esp+9Ch+var_28]
mov	[esp+9Ch+var_9C], esi
mov	[esp+9Ch+var_78], al
call	aim_icbm_makecookie
mov	al, [esp+9Ch+var_78]
mov	ecx, ebp
mov	edi, ebx
repne scasb
not	ecx
mov	edx, [esp+9Ch+var_6C]
lea	eax, [edx+ecx+0D3h]
mov	[esp+9Ch+var_98], eax
lea	edi, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_9C], edi
call	sub_68881748
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], 6
mov	[esp+9Ch+var_98], 4
mov	ecx, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], ecx
call	aim_cachesnac
mov	[esp+9Ch+var_60], eax
mov	[esp+9Ch+var_9C], ebx
mov	ecx, 2
mov	edx, esi
mov	eax, edi
call	sub_6888B308
mov	eax, [esp+9Ch+var_70]
add	eax, 0B6h
mov	[esp+9Ch+var_98], eax
lea	ebx, [esp+9Ch+var_40]
mov	[esp+9Ch+var_9C], ebx
call	sub_68881748
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], ebx
call	sub_68881E0C
mov	[esp+9Ch+var_94], 8
mov	[esp+9Ch+var_98], esi
mov	[esp+9Ch+var_9C], ebx
call	sub_688820A0
mov	[esp+9Ch+var_94], 10h
mov	[esp+9Ch+var_98], offset byte_688AFF63
mov	[esp+9Ch+var_9C], ebx
call	sub_688820A0
mov	[esp+9Ch+var_94], 1
mov	[esp+9Ch+var_98], 0Ah
lea	ebp, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], ebp
call	aim_tlvlist_add_16
mov	[esp+9Ch+var_98], 0Fh
mov	[esp+9Ch+var_9C], ebp
call	aim_tlvlist_add_noval
mov	eax, [esp+9Ch+var_70]
add	eax, 8Eh
mov	[esp+9Ch+var_98], eax
lea	esi, [esp+9Ch+var_34]
mov	[esp+9Ch+var_9C], esi
call	sub_68881748
mov	[esp+9Ch+var_94], 8Fh
mov	[esp+9Ch+var_98], offset asc_688AFF80 
mov	[esp+9Ch+var_9C], esi
call	sub_688820A0
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_94], eax
mov	edx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], esi
call	sub_688820A0
mov	eax, [esp+9Ch+var_34]
mov	[esp+9Ch+var_90], eax
mov	eax, [esp+9Ch+var_6C]
add	eax, 8Fh
movzx	eax, ax
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 2711h
mov	[esp+9Ch+var_9C], ebp
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_98], ebp
mov	[esp+9Ch+var_9C], ebx
call	aim_tlvlist_write
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_free
mov	ebp, [esp+9Ch+var_40]
mov	[esp+9Ch+var_9C], ebx
call	sub_68881848
mov	[esp+9Ch+var_90], ebp
and	eax, 0FFFFh
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 5
lea	ebp, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], ebp
call	aim_tlvlist_add_raw
mov	[esp+9Ch+var_98], 3
mov	[esp+9Ch+var_9C], ebp
call	aim_tlvlist_add_noval
mov	[esp+9Ch+var_98], ebp
mov	[esp+9Ch+var_9C], edi
call	aim_tlvlist_write
mov	[esp+9Ch+var_98], offset aXStatusRequest 
mov	[esp+9Ch+var_9C], offset aOscar_5 
call	purple_debug_misc
mov	[esp+9Ch+var_84], 1
mov	[esp+9Ch+var_88], edi
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+var_8C], eax
mov	[esp+9Ch+var_90], 6
mov	[esp+9Ch+var_94], 4
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_74]
mov	[esp+9Ch+var_9C], edx
call	flap_connection_send_snac_with_priority
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	aim_tlvlist_free
mov	[esp+9Ch+var_9C], ebx
call	sub_688817E4
mov	[esp+9Ch+var_9C], esi
call	sub_688817E4
mov	[esp+9Ch+var_9C], edi
call	sub_688817E4
mov	ecx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_9C], ecx
call	g_free
xor	eax, eax
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888EF9F
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888EF7C
call	__stack_chk_fail
public icq_relay_xstatus
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_40], eax
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_6888F1D0
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], esi
call	flap_connection_findbygroup
mov	[esp+6Ch+var_38], eax
test	eax, eax
jz	loc_6888F1D0
mov	eax, [esp+6Ch+var_40]
test	eax, eax
jz	loc_6888F1D0
mov	eax, [esi+68h]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	ebx, eax
test	eax, eax
jz	loc_6888F1D0
mov	eax, [eax+40h]
mov	[esp+6Ch+var_6C], eax
call	purple_presence_get_active_status
mov	ebp, eax
test	eax, eax
jz	loc_6888F1D0
mov	[esp+6Ch+var_6C], eax
call	purple_status_get_name
mov	edi, eax
test	eax, eax
jz	loc_6888F1D0
mov	[esp+6Ch+var_68], offset aMessage 
mov	[esp+6Ch+var_6C], ebp
call	purple_status_get_attr_string
test	eax, eax
jz	loc_6888F1D0
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_44], eax
call	purple_markup_strip_html
mov	ebp, eax
test	eax, eax
jz	loc_6888F1D0
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], offset aNrResLtRetEven 
call	g_strdup_printf
mov	[esp+6Ch+var_3C], eax
mov	ebx, 0FFFFFFFFh
xor	eax, eax
mov	ecx, ebx
mov	edi, [esp+6Ch+var_3C]
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_34], ecx
mov	[esp+6Ch+var_60], ebp
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aXStatusAutorep 
mov	[esp+6Ch+var_6C], offset aOscar_5 
mov	byte ptr [esp+6Ch+var_44], al
call	purple_debug_misc
mov	al, byte ptr [esp+6Ch+var_44]
mov	ecx, ebx
mov	edi, [esp+6Ch+var_40]
repne scasb
not	ecx
mov	edx, [esp+6Ch+var_34]
lea	eax, [edx+ecx+0A5h]
mov	[esp+6Ch+var_68], eax
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], ebx
call	sub_68881748
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0Bh
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	aim_cachesnac
mov	edi, eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
mov	ecx, 2
mov	edx, [esp+6Ch+var_30]
mov	eax, ebx
call	sub_6888B308
mov	[esp+6Ch+var_68], 3
mov	[esp+6Ch+var_6C], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_64], 8Fh
mov	[esp+6Ch+var_68], offset asc_688B0020 
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	sub_688820A0
mov	[esp+6Ch+var_54], 1
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], edi
mov	[esp+6Ch+var_60], 0Bh
mov	[esp+6Ch+var_64], 4
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	flap_connection_send_snac_with_priority
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	[esp+6Ch+var_6C], ebp
call	g_free
mov	[esp+6Ch+var_6C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888F1D7
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6888F1BC
call	__stack_chk_fail
public msg_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	4
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aMessaging 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_6888B528
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888F241
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
movzx	eax, word ptr [eax]
mov	edx, [esp+1Ch+arg_4]
movzx	edx, word ptr [edx]
sub	eax, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888F276
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_6888F3E0
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+7Ch]
test	eax, eax
jz	short loc_6888F343
cmp	word ptr [ebx+78h], 0
jz	short loc_6888F343
xor	esi, esi
xchg	ax, ax
mov	eax, [eax+esi*4]
mov	[esp+2Ch+var_2C], eax
call	g_free
inc	esi
movzx	eax, word ptr [ebx+78h]
cmp	eax, esi
mov	eax, [ebx+7Ch]
jg	short loc_6888F32C
			
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+48h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+50h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+54h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+58h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+5Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+68h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+6Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+70h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+74h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+88h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+90h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6888F3F2
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 14h
mov	esi, [esp+2Ch+var_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+0B8h]
test	ebx, ebx
jz	short loc_6888F446
xchg	ax, ax
mov	eax, [ebx]
call	sub_6888F27C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_6888F418
mov	eax, [esi+0B8h]
mov	edx, [esp+2Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6888F44A
mov	[esp+2Ch+var_C], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	g_slist_free
xor	eax, eax
jmp	short loc_6888F42C
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	esi, [esp+8Ch+arg_10]
mov	ebp, [esp+8Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	ax, [esi+2]
cmp	ax, 1
jz	loc_6888F580
cmp	ax, 3
jz	short loc_6888F4A8
xor	eax, eax
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6888FEF6
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+Str], ebp
call	aim_tlvlist_read
mov	[esp+8Ch+var_60], eax
test	eax, eax
jz	loc_6888F5C0
mov	[esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], 1
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+Str], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_6888F5C0
movzx	ecx, word ptr [eax+2]
mov	[esp+8Ch+var_84], ecx
mov	eax, [eax+4]
mov	[esp+8Ch+var_88], eax
lea	ebp, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], ebp
call	sub_68881798
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	edi, ax
mov	[esp+8Ch+Str], ebp
call	sub_68881BB4
mov	[esp+8Ch+Str], ebp
mov	[esp+8Ch+var_64], eax
call	sub_68881B44
mov	word ptr [esp+8Ch+var_5C], ax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	[esp+8Ch+var_4A], ax
movzx	eax, ax
mov	[esp+8Ch+var_78], eax
movzx	eax, word ptr [esp+8Ch+var_5C]
mov	[esp+8Ch+var_7C], eax
mov	ecx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_80], ecx
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], offset aIcqResponseDBy 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
cmp	word ptr [esp+8Ch+var_5C], 7DAh
jz	loc_6888F6B2
			
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+Str], eax
call	aim_tlvlist_free
mov	eax, 1
jmp	loc_6888F48D
align 10h
mov	eax, [esi+8]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebx
call	aim_remsnac
mov	esi, eax
test	eax, eax
jz	short loc_6888F59C
cmp	word ptr [eax+4], 15h
jz	short loc_6888F5E8
			
mov	[esp+8Ch+var_88], offset aIcqTheOriginal 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
mov	[esp+8Ch+Str], esi
call	g_free
xor	eax, eax
jmp	loc_6888F48D
align 10h
			
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+Str], eax
call	aim_tlvlist_free
mov	[esp+8Ch+var_88], offset aCorruptIcqResp 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
xor	eax, eax
jmp	loc_6888F48D
align 4
mov	edx, [eax+0Ch]
mov	[esp+8Ch+var_60], edx
test	edx, edx
jz	short loc_6888F59C
mov	[esp+8Ch+var_84], offset sub_6888F248
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_find_custom
mov	edi, eax
test	eax, eax
jz	loc_6888F8D0
mov	eax, [eax]
mov	[esp+8Ch+var_5C], eax
mov	[esp+8Ch+Str], ebp
call	sub_688819F0
movzx	ebp, ax
mov	edx, [esp+8Ch+var_5C]
mov	eax, [edx+4]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], offset aU 
call	g_strdup_printf
mov	edx, [esp+8Ch+var_60]
movzx	ecx, word ptr [edx]
cmp	cx, 4B2h
jz	loc_6888F80C
cmp	cx, 4BAh
jz	loc_6888F7D4
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+var_88], offset aIcqGotAnErrorP 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
			
mov	eax, [esp+8Ch+var_5C]
call	sub_6888F27C
mov	[esp+8Ch+var_88], edi
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_remove
mov	[ebx+0B8h], eax
mov	eax, [esi+0Ch]
mov	[esp+8Ch+Str], eax
call	g_free
mov	[esp+8Ch+Str], esi
call	g_free
mov	eax, 1
jmp	loc_6888F48D
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	edi, eax
mov	[esp+8Ch+var_88], 1
mov	[esp+8Ch+Str], ebp
call	sub_68881904
mov	[esp+8Ch+var_84], offset sub_6888F248
lea	eax, [esp+8Ch+var_4A]
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_find_custom
test	eax, eax
jz	loc_6888FEC5
mov	eax, [eax]
mov	[esp+8Ch+var_5C], eax
cmp	di, 0E6h
jz	loc_6888FE05
ja	loc_6888F821
cmp	di, 0D2h
jz	loc_6888FAAA
cmp	di, 0DCh
jz	loc_6888FD5A
cmp	di, 0C8h
jz	loc_6888FBFB
			
test	byte ptr [esi+4], 1
jnz	loc_6888F569
cmp	di, 104h
jz	short loc_6888F74B
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+Str], ebx
call	oscar_user_info_display_icq
			
mov	edx, [esp+8Ch+var_5C]
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_6888F7AA
mov	edx, [edx+8]
test	edx, edx
jz	short loc_6888F7AA
mov	ebp, [ebx+68h]
mov	[esp+8Ch+Str], ebp
call	purple_connection_get_account
mov	esi, eax
mov	edx, [esp+8Ch+var_5C]
mov	eax, [edx+8]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+Str], esi
call	oscar_utf8_try_convert
mov	edi, eax
mov	edx, [esp+8Ch+var_5C]
mov	eax, [edx+8Ch]
test	eax, eax
jnz	loc_6889051D
test	edi, edi
jz	short loc_6888F7A2
cmp	byte ptr [edi],	0
jnz	loc_6889054F
			
mov	[esp+8Ch+Str], edi
call	g_free
			
mov	eax, [esp+8Ch+var_5C]
call	sub_6888F27C
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], edx
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_remove
mov	[ebx+0B8h], eax
jmp	loc_6888F569
mov	ecx, [esp+8Ch+var_5C]
mov	ebp, [ecx+8Ch]
test	ebp, ebp
jz	loc_6888F674
mov	ecx, [ecx+90h]
mov	[esp+8Ch+var_80], ecx
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+68h]
mov	[esp+8Ch+Str], eax
call	oscar_auth_recvrequest
jmp	loc_6888F674
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebp
mov	[esp+8Ch+Str], ebx
call	oscar_user_info_display_error
jmp	loc_6888F674
cmp	di, 104h
jz	loc_6888FA2A
ja	loc_6888F8DD
cmp	di, 0EBh
jnz	loc_6888F72A
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	edx, [esp+8Ch+var_5C]
mov	[edx+78h], ax
movzx	eax, ax
shl	eax, 2
mov	[esp+8Ch+Str], eax
call	g_malloc0
mov	edx, [esp+8Ch+var_5C]
mov	[edx+7Ch], eax
xor	edi, edi
movzx	eax, word ptr [edx+78h]
mov	[esp+8Ch+var_58], ebx
mov	ebx, edx
mov	[esp+8Ch+var_54], esi
mov	esi, edi
cmp	esi, eax
jge	short loc_6888F8B8
mov	eax, [ebx+7Ch]
lea	edi, [eax+esi*4]
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	[edi], eax
inc	esi
movzx	eax, word ptr [ebx+78h]
cmp	esi, eax
jz	short loc_6888F874
mov	[esp+8Ch+var_88], 1
mov	[esp+8Ch+Str], ebp
call	sub_68881904
movzx	eax, word ptr [ebx+78h]
cmp	esi, eax
jl	short loc_6888F878
mov	ebx, [esp+8Ch+var_58]
mov	esi, [esp+8Ch+var_54]
			
test	byte ptr [esi+4], 1
jz	loc_6888F73B
jmp	loc_6888F569
align 10h
mov	[esp+8Ch+var_88], offset aIcqTheRequestI 
jmp	loc_6888F5A4
cmp	di, 19Ah
jz	loc_6888FE29
cmp	di, 0FB4h
jnz	loc_6888F72A
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+Str], ebx
call	flap_connection_findbygroup
mov	[esp+8Ch+var_54], eax
test	eax, eax
jz	loc_688905C6
mov	[esp+8Ch+var_88], 2
mov	[esp+8Ch+Str], ebp
call	sub_68881904
mov	[esp+8Ch+var_88], 2Fh
mov	[esp+8Ch+Str], ebp
call	sub_68881904
mov	[esp+8Ch+Str], ebp
call	aim_tlvlist_read
mov	edi, eax
mov	[esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], 32h
mov	[esp+8Ch+Str], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688905BF
mov	[esp+8Ch+Str], eax
call	aim_tlv_getvalue_as_string
mov	ebp, eax
mov	[esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], 226h
mov	[esp+8Ch+Str], edi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_688905DF
mov	[esp+8Ch+Str], eax
call	aim_tlv_getvalue_as_string
mov	[esp+8Ch+var_58], eax
mov	[esp+8Ch+Str], edi
call	aim_tlvlist_free
test	ebp, ebp
jz	loc_688905EF
mov	edi, [esp+8Ch+var_58]
test	edi, edi
jz	loc_688905EF
mov	eax, [esp+8Ch+var_58]
cmp	byte ptr [eax],	0
jnz	loc_6888FEFB
mov	eax, [ebx+68h]
mov	[esp+8Ch+Str], eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+8Ch+var_88], ebp
mov	[esp+8Ch+Str], eax
call	purple_find_buddy
mov	[esp+8Ch+Str], eax
call	purple_buddy_get_presence
mov	[esp+8Ch+Str], eax
call	purple_presence_get_active_status
mov	[esp+8Ch+Str], eax
call	purple_status_get_id
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], offset aMessage_0 
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebp
mov	[esp+8Ch+Str], edi
call	purple_prpl_got_user_status
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], eax
call	g_free
mov	[esp+8Ch+Str], ebp
call	g_free
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+8], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+0Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+10h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881904
test	byte ptr [esi+4], 1
jnz	loc_6888F569
jmp	loc_6888F74B
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+48h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+4Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+50h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+54h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+58h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+5Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	edx, [esp+8Ch+var_5C]
mov	[edx+60h], ax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+64h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+68h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+6Ch], eax
mov	[esp+8Ch+var_88], 2
mov	[esp+8Ch+Str], ebp
call	sub_68881904
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+70h], eax
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+8], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+0Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+10h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+14h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+18h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+1Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+20h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+24h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+28h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+2Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+30h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	edx, [esp+8Ch+var_5C]
mov	[edx+34h], ax
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+36h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+37h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+38h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+3Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
mov	edx, [esp+8Ch+var_5C]
mov	[edx+40h], ax
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+42h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+43h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+44h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+45h], al
mov	[esp+8Ch+Str], ebp
call	sub_68881AE4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+46h], al
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
dec	eax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+74h], eax
jmp	loc_6888F8C0
mov	[esp+8Ch+var_88], 2
mov	[esp+8Ch+Str], ebp
call	sub_68881904
mov	[esp+8Ch+Str], ebp
call	sub_68881BB4
mov	edx, [esp+8Ch+var_5C]
mov	[edx+4], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+8], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+0Ch], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+10h], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881B44
movzx	eax, ax
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	sub_68881D24
mov	edx, [esp+8Ch+var_5C]
mov	[edx+14h], eax
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], 94h
call	g_malloc0
mov	cx, [esp+8Ch+var_4A]
mov	[eax], cx
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_prepend
mov	[ebx+0B8h], eax
jmp	loc_6888F6F2
call	__stack_chk_fail
mov	[esp+8Ch+Str], 94h
call	g_malloc0
mov	[esp+8Ch+var_68], eax
or	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
add	ecx, 0C8h
mov	[esp+8Ch+var_88], ecx
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881748
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+var_88], 4
mov	[esp+8Ch+Str], ebx
call	aim_cachesnac
mov	[esp+8Ch+var_50], eax
lea	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+Str], edx
mov	[esp+8Ch+var_64], edx
call	aim_icbm_makecookie
mov	[esp+8Ch+var_84], 8
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_88], edx
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_688820A0
mov	[esp+8Ch+var_88], 2
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
or	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
lea	eax, [ecx-1]
and	eax, 0FFh
mov	[esp+8Ch+var_88], eax
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881DA4
mov	[esp+8Ch+var_88], ebp
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68882114
mov	[esp+8Ch+var_88], 5
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 0B2h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+var_84], 8
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_88], edx
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_688820A0
mov	[esp+8Ch+var_88], 9461349h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 4C7Fh
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 11D1h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
mov	[esp+8Ch+var_88], 82224445h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 53540000h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0Ah
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
mov	[esp+8Ch+var_88], 2
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 1
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 0Fh
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 2711h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 8Ah
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E0C
mov	[esp+8Ch+var_88], 1Bh
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 9
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881DA4
mov	[esp+8Ch+var_88], 64h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 0Eh
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 64h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881F8C
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68882008
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68882008
mov	[esp+8Ch+var_88], 1Ah
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881DA4
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881DA4
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881F8C
mov	[esp+8Ch+var_88], 1
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881F8C
mov	[esp+8Ch+var_88], 3Ah
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881DA4
mov	[esp+8Ch+var_88], 811A18h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0BC0E6C18h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 47A5916Fh
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 18DCC76Fh
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 1A010013h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 41h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 77617920h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 53746174h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 7573204Dh
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 65737361h
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 67650100h
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 15h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 0Dh
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 74h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 6578742Fh
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 782D616Fh
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E8C
mov	[esp+8Ch+var_88], 6C727466h
lea	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	sub_68881E8C
mov	[esp+8Ch+var_88], 3
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_68881E0C
mov	[esp+8Ch+var_88], 0
lea	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], ecx
call	sub_68881E0C
mov	[esp+8Ch+Str], ebp 
call	atoi
mov	edx, [esp+8Ch+var_68]
mov	[edx+4], eax
mov	eax, [esp+8Ch+var_58]
mov	[edx+88h], eax
mov	edx, [esp+8Ch+var_30]
mov	ecx, [esp+8Ch+var_2C]
mov	eax, [esp+8Ch+var_68]
mov	[eax+80h], edx
mov	[eax+84h], ecx
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+0B8h]
mov	[esp+8Ch+Str], eax
call	g_slist_prepend
mov	[ebx+0B8h], eax
mov	[esp+8Ch+var_74], 0
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_78], edx
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 6
mov	[esp+8Ch+var_84], 4
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebx
call	flap_connection_send_snac_with_priority
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], edx
call	sub_688817E4
jmp	loc_6888FA1D
mov	esi, [edx+90h]
mov	eax, [edx+4]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], offset aU 
call	g_strdup_printf
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+Str], ebp
call	oscar_auth_recvrequest
jmp	loc_6888F7AA
mov	edx, [esp+8Ch+var_5C]
mov	eax, [edx+4]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], offset aU 
mov	[esp+8Ch+var_88], 10h
lea	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+Str], edx
mov	[esp+8Ch+var_64], edx
call	g_snprintf
mov	[esp+8Ch+var_84], edi
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+Str], ebp
call	serv_got_alias
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+Str], esi
call	purple_find_buddy
test	eax, eax
jz	loc_6888F7A2
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], offset aServernick 
mov	[esp+8Ch+Str], eax
call	purple_blist_node_set_string
jmp	loc_6888F7A2
xor	ebp, ebp
jmp	loc_6888F963
mov	[esp+8Ch+var_88], offset aIcq0x0fb4FlapC 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
jmp	loc_6888F8C0
mov	[esp+8Ch+Str], edi
call	aim_tlvlist_free
mov	[esp+8Ch+var_58], 0
			
mov	[esp+8Ch+var_88], offset aIcq0x0fb4UinOr 
mov	[esp+8Ch+Str], offset aOscar_6 
call	purple_debug_misc
mov	[esp+8Ch+Str], ebp
call	g_free
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], eax
call	g_free
jmp	loc_6888F8C0
public aim_icq_setsecurity
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_688907E4
mov	[esp+5Ch+var_58], 15h
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	edi, eax
test	eax, eax
jz	loc_688907E4
mov	[esp+5Ch+var_58], 1Ah
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], 15h
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_58], 16h
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	[esp+5Ch+var_58], 14h
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	sub_68882208
mov	[esp+5Ch+var_58], 7D0h
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
movzx	eax, word ptr [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], 0C3Ah
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], 30Ch
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
movzx	eax, byte ptr [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_58], 0F8h
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
xor	eax, eax
test	ebp, ebp
setz	al
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], 15h
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688907EB
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688907CB
call	__stack_chk_fail
public aim_icq_changepasswd
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_688909A4
test	esi, esi
jz	loc_688909A4
mov	[esp+5Ch+var_58], 15h
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_688909A4
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_34]
repne scasb
not	ecx
lea	ebp, [ecx-1]
cmp	ebp, 8
jg	loc_68890998
lea	edi, [ebp+0Fh]
lea	eax, [ebp+13h]
mov	[esp+5Ch+var_58], eax
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_38], edx
call	sub_68881748
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], 15h
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	eax, edi
and	eax, 0FFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
sub	edi, 2
movzx	edi, di
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	sub_68882208
mov	[esp+5Ch+var_58], 7D0h
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
movzx	eax, word ptr [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_58], 42Eh
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
lea	eax, [ebp+1]
movzx	eax, ax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F8C
mov	[esp+5Ch+var_54], ebp
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_688820A0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	sub_68881F24
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], 15h
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688909AB
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebp, 8
jmp	loc_68890854
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68890980
call	__stack_chk_fail
public aim_icq_getallinfo
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_2E], 4B2h
test	edi, edi
jz	loc_68890B60
mov	al, [edi]
cmp	al, 2Fh
jle	loc_68890B60
cmp	al, 39h
jg	loc_68890B60
test	esi, esi
jz	loc_68890B60
mov	[esp+6Ch+var_68], 15h
mov	[esp+6Ch+Str], esi
call	flap_connection_findbygroup
test	eax, eax
jz	loc_68890B60
mov	[esp+6Ch+var_68], 14h
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+Str], ebx
mov	[esp+6Ch+var_40], eax
call	sub_68881748
mov	[esp+6Ch+var_58], 2
lea	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 2
mov	[esp+6Ch+var_68], 15h
mov	[esp+6Ch+Str], esi
call	aim_cachesnac
mov	ebp, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+Str], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+Str], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0Eh
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+Str], ebx
call	sub_68882208
mov	[esp+6Ch+var_68], 7D0h
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	eax, ebp
and	eax, 0FFFFh
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
movzx	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	[esp+6Ch+Str], edi 
call	atoi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68882008
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], 2
mov	[esp+6Ch+var_64], 15h
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Str], esi
call	flap_connection_send_snac_with_priority
mov	[esp+6Ch+Str], ebx
call	sub_688817E4
mov	[esp+6Ch+Str], 94h
call	g_malloc0
mov	ebx, eax
mov	[eax], bp
mov	[esp+6Ch+Str], edi 
call	atoi
mov	[ebx+4], eax
mov	[esp+6Ch+var_68], ebx
mov	eax, [esi+0B8h]
mov	[esp+6Ch+Str], eax
call	g_slist_prepend
mov	[esi+0B8h], eax
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68890B67
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68890B47
call	__stack_chk_fail
public aim_icq_getalias
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ebp, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_44], edx
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_40], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_2E], 4BAh
test	ebp, ebp
jz	loc_68890D60
mov	al, [ebp+0]
cmp	al, 2Fh
jle	loc_68890D60
cmp	al, 39h
jg	loc_68890D60
test	esi, esi
jz	loc_68890D60
mov	[esp+6Ch+var_68], 15h
mov	[esp+6Ch+Str], esi
call	flap_connection_findbygroup
test	eax, eax
jz	loc_68890D60
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aRequestingIcqA 
mov	[esp+6Ch+Str], offset aOscar_6 
mov	[esp+6Ch+var_48], eax
call	purple_debug_info
mov	[esp+6Ch+var_68], 14h
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+Str], ebx
call	sub_68881748
mov	[esp+6Ch+var_58], 2
lea	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 2
mov	[esp+6Ch+var_68], 15h
mov	[esp+6Ch+Str], esi
call	aim_cachesnac
mov	edi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+Str], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+Str], ebx
call	sub_68881E0C
mov	[esp+6Ch+var_68], 0Eh
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+Str], ebx
call	sub_68882208
mov	[esp+6Ch+var_68], 7D0h
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	eax, edi
and	eax, 0FFFFh
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
movzx	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68881F8C
mov	[esp+6Ch+Str], ebp 
call	atoi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	sub_68882008
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], edi
mov	[esp+6Ch+var_60], 2
mov	[esp+6Ch+var_64], 15h
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+Str], esi
call	flap_connection_send_snac_with_priority
mov	[esp+6Ch+Str], ebx
call	sub_688817E4
mov	[esp+6Ch+Str], 94h
call	g_malloc0
mov	ebx, eax
mov	[eax], di
mov	[esp+6Ch+Str], ebp 
call	atoi
mov	[ebx+4], eax
mov	edx, [esp+6Ch+var_44]
mov	[ebx+8Ch], edx
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Str], edx
call	g_strdup
mov	[ebx+90h], eax
mov	[esp+6Ch+var_68], ebx
mov	eax, [esi+0B8h]
mov	[esp+6Ch+Str], eax
call	g_slist_prepend
mov	[esi+0B8h], eax
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68890D67
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68890D48
call	__stack_chk_fail
public aim_icq_sendsms
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	eax, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_58], eax
mov	ebx, [esp+7Ch+arg_8]
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_54], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], ecx
xor	ecx, ecx
test	ebp, ebp
jz	loc_68891094
mov	[esp+7Ch+Count], 15h
mov	[esp+7Ch+Time],	ebp
call	flap_connection_findbygroup
mov	[esp+7Ch+var_4C], eax
test	eax, eax
jz	loc_68891094
mov	eax, [esp+7Ch+var_58]
test	eax, eax
jz	loc_68891094
test	ebx, ebx
jz	loc_68891094
mov	eax, [esp+7Ch+var_54]
test	eax, eax
jz	loc_68891094
mov	eax, [ebp+68h]
mov	[esp+7Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+7Ch+Time],	eax
call	purple_account_get_username
mov	[esp+7Ch+var_48], eax
lea	esi, [esp+7Ch+var_30]
mov	[esp+7Ch+Time],	esi 
call	time
mov	[esp+7Ch+Time],	esi 
call	gmtime
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	offset aADBYTZ 
call	purple_utf8_strftime
mov	esi, eax
mov	[esp+7Ch+Time],	ebx
call	purple_markup_strip_html
mov	[esp+7Ch+var_50], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_58]
repne scasb
mov	[esp+7Ch+var_44], ecx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
repne scasb
mov	edx, ecx
not	edx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_48]
repne scasb
mov	[esp+7Ch+var_40], ecx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_54]
repne scasb
mov	ebx, ecx
not	ebx
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
sub	edx, [esp+7Ch+var_44]
sub	ebx, [esp+7Ch+var_40]
sub	edx, ecx
lea	ebx, [edx+ebx+0CAh]
mov	[esp+7Ch+Time],	ebx
call	g_malloc
mov	edx, eax
mov	[esp+7Ch+var_60], esi
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+var_64], eax
mov	ecx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_68], ecx
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_6C], eax
mov	ecx, [esp+7Ch+var_58]
mov	[esp+7Ch+var_70], ecx
mov	[esp+7Ch+Format], offset aIcq_sms_messag 
mov	[esp+7Ch+Count], ebx 
mov	[esp+7Ch+Time],	edx 
mov	[esp+7Ch+var_5C], edx
call	_snprintf
lea	edi, [ebx+24h]
lea	eax, [ebx+28h]
mov	[esp+7Ch+Count], eax
lea	esi, [esp+7Ch+var_2C]
mov	[esp+7Ch+Time],	esi
call	sub_68881748
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+Format], 2
mov	[esp+7Ch+Count], 15h
mov	[esp+7Ch+Time],	ebp
call	aim_cachesnac
mov	[esp+7Ch+var_58], eax
mov	[esp+7Ch+Count], 1
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
mov	eax, edi
and	eax, 0FFFFh
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
sub	edi, 2
movzx	edi, di
mov	[esp+7Ch+Count], edi
mov	[esp+7Ch+Time],	esi
call	sub_68881F8C
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	esi
call	sub_68882208
mov	[esp+7Ch+Count], 7D0h
mov	[esp+7Ch+Time],	esi
call	sub_68881F8C
movzx	eax, word ptr [esp+7Ch+var_58]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	sub_68881F8C
mov	[esp+7Ch+Count], 1482h
mov	[esp+7Ch+Time],	esi
call	sub_68881F8C
mov	[esp+7Ch+Count], 1
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
mov	[esp+7Ch+Count], 16h
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881E8C
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881E8C
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881E8C
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881E8C
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
and	ebx, 0FFFFh
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Time],	esi
call	sub_68881E0C
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+Count], edx
mov	[esp+7Ch+Time],	esi
call	sub_68882114
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Time],	esi
call	sub_68881DA4
mov	[esp+7Ch+var_68], esi
mov	eax, [esp+7Ch+var_58]
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 2
mov	[esp+7Ch+Format], 15h
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	ebp
call	flap_connection_send_snac
mov	[esp+7Ch+Time],	esi
call	sub_688817E4
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+Time],	edx
call	g_free
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+Time],	edx
call	g_free
xor	eax, eax
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_6889109B
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6889107A
call	__stack_chk_fail
public icq_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	15h
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 47Ch
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aIcq 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_6888F450
mov	dword ptr [ebx+20h], offset loc_6888F3F8
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889110C
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, eax
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_30], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+Buf1],	ebp
call	sub_68881818
test	eax, eax
jz	loc_688911EC
mov	edx, [esp+4Ch+var_34]
cmp	[esp+4Ch+var_38], edx
jge	loc_688911EC
mov	[esp+4Ch+Buf2],	10h
mov	[esp+4Ch+Buf1],	ebp
call	sub_68881CAC
mov	esi, eax
mov	ebx, offset aThinking 
xor	edi, edi
jmp	short loc_68891187
align 4
inc	edi
lea	eax, [edi+edi*4]
mov	ebx, ds:off_688B0D80[eax*4]
test	ebx, ebx
jz	short loc_688911CF
mov	[esp+4Ch+Size],	10h 
mov	[esp+4Ch+Buf2],	esi 
lea	eax, [edi+edi*4]
lea	eax, dword_688B0D84[eax*4]
mov	[esp+4Ch+Buf1],	eax 
call	memcmp
test	eax, eax
jnz	short loc_68891178
lea	eax, [edi+edi*2]
mov	eax, off_688AD004[eax*4]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aCustomStatusIc 
mov	[esp+4Ch+Buf1],	offset aOscar_7	
call	purple_debug_misc
mov	[esp+4Ch+var_30], ebx
mov	[esp+4Ch+Buf1],	esi
call	g_free
add	[esp+4Ch+var_38], 10h
mov	[esp+4Ch+Buf1],	ebp
call	sub_68881818
test	eax, eax
jnz	loc_6889114C
			
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68891204
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_locate_finduserinfo
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	esi, esi
jz	short loc_68891268
mov	ebx, [eax+0C4h]
test	ebx, ebx
jnz	short loc_68891242
jmp	short loc_68891268
align 4
mov	ebx, [ebx+94h]
test	ebx, ebx
jz	short loc_68891268
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_68891238
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889126C
add	esp, 24h
pop	ebx
pop	esi
retn
			
xor	ebx, ebx
jmp	short loc_68891254
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [edx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	aim_locate_finduserinfo
mov	ebp, eax
test	eax, eax
jz	loc_68891594
mov	eax, [ebx+4]
mov	[ebp+4], ax
mov	ax, [ebx+6]
mov	[ebp+6], ax
mov	eax, [ebx+8]
test	ax, ax
jz	short loc_688912BD
mov	[ebp+8], ax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_688912C7
mov	[ebp+0Ch], eax
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_688912D1
mov	[ebp+10h], eax
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_688912DB
mov	[ebp+14h], eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_688912E5
mov	[ebp+18h], eax
mov	edx, [ebx+20h]
mov	eax, [ebx+24h]
mov	ecx, eax
or	ecx, edx
jz	short loc_688912F7
mov	[ebp+20h], edx
mov	[ebp+24h], eax
mov	eax, [ebx+58h]
or	[ebp+58h], eax
cmp	word ptr [ebx+5Eh], 0
jnz	loc_68891560
mov	esi, [ebx+64h]
test	esi, esi
jz	short loc_6889134E
mov	eax, [ebp+64h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebp+68h]
mov	[esp+3Ch+var_3C], eax
call	g_free
movzx	eax, word ptr [ebx+6Ch]
test	ax, ax
jnz	loc_68891504
mov	dword ptr [ebp+64h], 0
mov	eax, [ebx+68h]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+68h], eax
mov	eax, [ebx+6Ch]
mov	[ebp+6Ch], ax
mov	ecx, [ebx+70h]
test	ecx, ecx
jz	short loc_6889139C
mov	eax, [ebp+70h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebp+74h]
mov	[esp+3Ch+var_3C], eax
call	g_free
movzx	eax, word ptr [ebx+78h]
test	ax, ax
jnz	loc_688914D4
mov	dword ptr [ebp+70h], 0
mov	eax, [ebx+74h]
test	eax, eax
jz	loc_688914F5
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+74h], eax
mov	eax, [ebx+78h]
mov	[ebp+78h], ax
mov	edx, [ebx+7Ch]
test	edx, edx
jz	short loc_688913FC
mov	eax, [ebp+7Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebp+80h]
mov	[esp+3Ch+var_3C], eax
call	g_free
movzx	eax, word ptr [ebx+84h]
test	ax, ax
jnz	loc_68891478
mov	dword ptr [ebp+7Ch], 0
mov	eax, [ebx+80h]
test	eax, eax
jz	loc_6889149F
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+80h], eax
mov	eax, [ebx+84h]
mov	[ebp+84h], ax
mov	eax, [ebx+88h]
test	eax, eax
mov	eax, [ebp+88h]
jz	loc_68891520
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebp+8Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
movzx	eax, word ptr [ebx+90h]
test	ax, ax
jnz	short loc_688914B0
mov	dword ptr [ebp+88h], 0
mov	eax, [ebx+8Ch]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+8Ch], eax
mov	eax, [ebx+90h]
mov	[ebp+90h], ax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688915C6
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	[ebp+7Ch], eax
movzx	ecx, word ptr [ebx+84h]
mov	esi, [ebx+7Ch]
mov	edi, eax
rep movsb
mov	eax, [ebx+80h]
test	eax, eax
jnz	loc_688913E1
mov	dword ptr [ebp+80h], 0
jmp	loc_688913EF
align 10h
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	[ebp+88h], eax
movzx	ecx, word ptr [ebx+90h]
mov	esi, [ebx+88h]
mov	edi, eax
rep movsb
jmp	loc_6889143C
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	[ebp+70h], eax
movzx	ecx, word ptr [ebx+78h]
mov	esi, [ebx+70h]
mov	edi, eax
rep movsb
mov	eax, [ebx+74h]
test	eax, eax
jnz	loc_6889138A
mov	dword ptr [ebp+74h], 0
jmp	loc_68891395
align 4
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	[ebp+64h], eax
movzx	ecx, word ptr [ebx+6Ch]
mov	esi, [ebx+64h]
mov	edi, eax
rep movsb
jmp	loc_68891339
align 10h
test	eax, eax
jz	short loc_68891536
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebp+88h], 0
mov	eax, [ebp+8Ch]
test	eax, eax
jz	short loc_68891552
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebp+8Ch], 0
mov	word ptr [ebp+90h], 0
jmp	loc_6889145D
mov	eax, [ebp+60h]
mov	[esp+3Ch+var_3C], eax
call	g_free
movzx	eax, word ptr [ebx+5Eh]
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	[ebp+60h], eax
movzx	ecx, word ptr [ebx+5Eh]
mov	esi, [ebx+60h]
mov	edi, eax
rep movsb
mov	ax, [ebx+5Eh]
mov	[ebp+5Eh], ax
jmp	loc_68891308
align 4
mov	[esp+3Ch+var_3C], 98h
call	g_malloc0
mov	ebp, eax
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+0], eax
mov	eax, [esi+0C4h]
mov	[ebp+94h], eax
mov	[esi+0C4h], ebp
jmp	loc_688912A2
call	__stack_chk_fail
align 4
public aim_locate_getcaps
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_34], edx
mov	ecx, [esp+9Ch+arg_8]
mov	[esp+9Ch+var_30], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+var_40], 0
mov	[esp+9Ch+var_3C], 0
mov	[esp+9Ch+var_38], 0
mov	edx, [esp+9Ch+var_34]
mov	[esp+9Ch+Buf1],	edx
call	sub_68881818
test	eax, eax
jz	loc_688916D1
nop
mov	edx, [esp+9Ch+var_30]
cmp	[esp+9Ch+var_40], edx
jge	loc_688916D1
mov	[esp+9Ch+Buf2],	10h
mov	edx, [esp+9Ch+var_34]
mov	[esp+9Ch+Buf1],	edx
call	sub_68881CAC
mov	[esp+9Ch+var_44], eax
mov	ebx, offset dword_688B0718
mov	esi, 80000h
xor	edi, edi
xor	ebp, ebp
jmp	short loc_68891671
align 4
inc	ebp
mov	esi, [ebx]
mov	edi, [ebx+4]
add	ebx, 18h
test	edi, 2
jnz	loc_688916F4
mov	[esp+9Ch+Size],	10h 
mov	eax, [esp+9Ch+var_44]
mov	[esp+9Ch+Buf2],	eax 
lea	eax, [ebp+ebp*2+0]
lea	eax, byte_688B0708[eax*8]
mov	[esp+9Ch+Buf1],	eax 
call	memcmp
test	eax, eax
jnz	short loc_6889165C
mov	edx, [esp+9Ch+var_3C]
or	edx, esi
mov	eax, [esp+9Ch+var_38]
or	eax, edi
mov	[esp+9Ch+var_3C], edx
mov	[esp+9Ch+var_38], eax
mov	eax, [esp+9Ch+var_44]
mov	[esp+9Ch+Buf1],	eax
call	g_free
add	[esp+9Ch+var_40], 10h
mov	edx, [esp+9Ch+var_34]
mov	[esp+9Ch+Buf1],	edx
call	sub_68881818
test	eax, eax
jnz	loc_68891624
			
mov	eax, [esp+9Ch+var_3C]
mov	edx, [esp+9Ch+var_38]
mov	ecx, [esp+9Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_68891790
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ecx, [esp+9Ch+var_44]
movzx	eax, byte ptr [ecx+0Fh]
mov	[esp+9Ch+var_58], eax
movzx	eax, byte ptr [ecx+0Eh]
mov	[esp+9Ch+var_5C], eax
movzx	eax, byte ptr [ecx+0Dh]
mov	[esp+9Ch+var_60], eax
movzx	eax, byte ptr [ecx+0Ch]
mov	[esp+9Ch+var_64], eax
movzx	eax, byte ptr [ecx+0Bh]
mov	[esp+9Ch+var_68], eax
movzx	eax, byte ptr [ecx+0Ah]
mov	[esp+9Ch+var_6C], eax
movzx	eax, byte ptr [ecx+9]
mov	[esp+9Ch+var_70], eax
movzx	eax, byte ptr [ecx+8]
mov	[esp+9Ch+var_74], eax
movzx	eax, byte ptr [ecx+7]
mov	[esp+9Ch+var_78], eax
movzx	eax, byte ptr [ecx+6]
mov	[esp+9Ch+var_7C], eax
movzx	eax, byte ptr [ecx+5]
mov	[esp+9Ch+var_80], eax
movzx	eax, byte ptr [ecx+4]
mov	[esp+9Ch+var_84], eax
movzx	eax, byte ptr [ecx+3]
mov	[esp+9Ch+var_88], eax
movzx	eax, byte ptr [ecx+2]
mov	[esp+9Ch+var_8C], eax
movzx	eax, byte ptr [ecx+1]
mov	[esp+9Ch+var_90], eax
movzx	eax, byte ptr [ecx]
mov	[esp+9Ch+Size],	eax
mov	[esp+9Ch+Buf2],	offset aUnknownCapabil 
mov	[esp+9Ch+Buf1],	offset aOscar_7	
call	purple_debug_misc
jmp	loc_688916AC
call	__stack_chk_fail
align 4
public aim_locate_getcaps_short
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	ecx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_3C], 0
mov	[esp+5Ch+var_38], 0
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Buf1],	edx
call	sub_68881818
test	eax, eax
jz	loc_68891891
xchg	ax, ax
mov	edx, [esp+5Ch+var_30]
cmp	[esp+5Ch+var_40], edx
jge	loc_68891891
mov	[esp+5Ch+Buf2],	2
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Buf1],	edx
call	sub_68881CAC
mov	[esp+5Ch+var_44], eax
mov	ebx, offset dword_688B0718
mov	esi, 80000h
xor	edi, edi
xor	ebp, ebp
jmp	short loc_68891831
align 10h
inc	ebp
mov	esi, [ebx]
mov	edi, [ebx+4]
add	ebx, 18h
test	edi, 2
jnz	short loc_688918B0
mov	[esp+5Ch+Size],	2 
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+Buf2],	eax 
lea	eax, [ebp+ebp*2+0]
lea	eax, word_688B070A[eax*8]
mov	[esp+5Ch+Buf1],	eax 
call	memcmp
test	eax, eax
jnz	short loc_68891820
mov	edx, [esp+5Ch+var_3C]
or	edx, esi
mov	eax, [esp+5Ch+var_38]
or	eax, edi
mov	[esp+5Ch+var_3C], edx
mov	[esp+5Ch+var_38], eax
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+Buf1],	eax
call	g_free
add	[esp+5Ch+var_40], 2
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Buf1],	edx
call	sub_68881818
test	eax, eax
jnz	loc_688917E8
			
mov	eax, [esp+5Ch+var_3C]
mov	edx, [esp+5Ch+var_38]
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_688918D9
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ecx, [esp+5Ch+var_44]
movzx	eax, byte ptr [ecx+1]
mov	[esp+5Ch+var_50], eax
movzx	eax, byte ptr [ecx]
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Buf2],	offset aUnknownShortCa 
mov	[esp+5Ch+Buf1],	offset aOscar_7	
call	purple_debug_misc
jmp	short loc_6889186C
call	__stack_chk_fail
align 10h
public sub_688918E0
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_6889196E
mov	ebx, offset dword_688B0700
xor	esi, esi
jmp	short loc_68891914
align 10h
			
inc	esi
add	ebx, 18h
mov	[esp+4Ch+var_4C], edi
call	sub_68881818
test	eax, eax
jz	short loc_6889195A
mov	edx, [ebx]
mov	eax, [ebx+4]
mov	ecx, eax
xor	ecx, 2
or	ecx, edx
jz	short loc_68891958
and	edx, [esp+4Ch+var_30]
and	eax, ebp
or	eax, edx
jz	short loc_68891910
mov	[esp+4Ch+var_44], 10h
lea	eax, [esi+esi*2]
lea	eax, byte_688B0708[eax*8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	sub_688820A0
jmp	short loc_68891910
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68891975
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, 0FFFFFFEAh
jmp	short loc_6889195A
call	__stack_chk_fail
align 4
public aim_info_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+60h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+68h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+70h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+74h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+7Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+88h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68891A16
mov	eax, [ebx+8Ch]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+0C4h]
test	ebx, ebx
jz	short loc_68891A62
xchg	ax, ax
mov	eax, [ebx+94h]
mov	[esi+0C4h], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_info_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, [esi+0C4h]
test	ebx, ebx
jnz	short loc_68891A3C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68891A74
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public aim_info_extract
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_38], eax
mov	ebx, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_40], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_68892146
test	edx, edx
jz	loc_68892146
mov	ecx, 98h
mov	edi, edx
rep stosb
mov	[esp+7Ch+Str1],	ebx
call	sub_68881990
movzx	eax, al
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	ebx
call	sub_68881D24
mov	edx, [esp+7Ch+var_40]
mov	[edx], eax
mov	[esp+7Ch+Str1],	ebx
call	sub_688819F0
mov	edx, [esp+7Ch+var_40]
mov	[edx+4], ax
mov	[esp+7Ch+Str1],	ebx
call	sub_688819F0
test	ax, ax
jz	loc_68891C26
movzx	eax, ax
inc	eax
mov	[esp+7Ch+var_44], eax
mov	[esp+7Ch+var_4C], 1
mov	eax, [esp+7Ch+var_40]
add	eax, 30h
mov	[esp+7Ch+var_30], eax
mov	edi, ebx
mov	esi, [esp+7Ch+var_40]
nop
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	ebp, eax
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
movzx	ebx, ax
mov	[esp+7Ch+Str1],	edi
call	sub_68881848
mov	[esp+7Ch+var_48], eax
mov	[esp+7Ch+var_50], ebx
mov	[esp+7Ch+Str1],	edi
call	sub_68881818
cmp	ebx, eax
jnb	loc_68891C50
mov	edx, [esp+7Ch+var_50]
add	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_50], edx
cmp	bp, 1
jz	loc_68891C64
cmp	bp, 2
jz	loc_68891C78
cmp	bp, 3
jz	loc_68891C90
cmp	bp, 4
jz	loc_68891CA4
cmp	bp, 5
jz	loc_68891CBC
cmp	bp, 6
jz	loc_68891CD0
cmp	bp, 8
jz	short loc_68891C04
cmp	bp, 0Ah
jz	loc_68891CF0
cmp	bp, 0Ch
jz	loc_68891D04
cmp	bp, 0Dh
jz	loc_68891D28
cmp	bp, 0Eh
jz	short loc_68891C04
lea	eax, [ebp-0Fh]
cmp	ax, 1
jbe	loc_68892028
cmp	bp, 14h
jz	loc_68892040
cmp	bp, 19h
jz	loc_68892050
cmp	bp, 1Ah
jz	short loc_68891C04
cmp	bp, 1Bh
jz	short loc_68891C04
cmp	bp, 1Dh
jz	loc_68891DC0
xchg	ax, ax
			
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881874
inc	[esp+7Ch+var_4C]
mov	edx, [esp+7Ch+var_44]
cmp	[esp+7Ch+var_4C], edx
jnz	loc_68891B24
mov	edx, [esp+7Ch+var_40]
mov	eax, [esp+7Ch+var_38]
call	sub_68891274
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688921A1
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+7Ch+Str1],	edi
call	sub_68881818
mov	[esp+7Ch+var_50], eax
jmp	loc_68891B59
align 4
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[esi+8], ax
or	dword ptr [esi+58h], 1
jmp	short loc_68891C04
align 4
mov	[esp+7Ch+Str1],	edi
call	sub_68881A60
mov	[esi+0Ch], eax
or	dword ptr [esi+58h], 200h
jmp	loc_68891C04
align 10h
mov	[esp+7Ch+Str1],	edi
call	sub_68881A60
mov	[esi+14h], eax
or	dword ptr [esi+58h], 4
jmp	loc_68891C04
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[esi+6], ax
or	dword ptr [esi+58h], 8
jmp	loc_68891C04
align 4
mov	[esp+7Ch+Str1],	edi
call	sub_68881A60
mov	[esi+10h], eax
or	dword ptr [esi+58h], 2
jmp	loc_68891C04
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
movzx	eax, ax
mov	[esi+28h], eax
or	dword ptr [esi+58h], 10h
jmp	loc_68891C04
align 10h
mov	[esp+7Ch+Str1],	edi
call	sub_68881A60
mov	[esi+2Ch], eax
or	dword ptr [esi+58h], 20h
jmp	loc_68891C04
mov	[esp+7Ch+var_74], 25h
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881C3C
or	dword ptr [esi+58h], 40h
jmp	loc_68891C04
align 4
mov	edx, [esp+7Ch+var_38]
mov	eax, [edx+68h]
mov	[esp+7Ch+Str1],	eax
call	purple_connection_get_account
mov	ebp, eax
mov	eax, [esi+20h]
mov	[esp+7Ch+var_3C], eax
mov	edx, [esi+24h]
mov	[esp+7Ch+var_34], edx
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	edi
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str1],	eax
call	aim_locate_getcaps
or	eax, [esp+7Ch+var_3C]
mov	[esi+20h], eax
or	edx, [esp+7Ch+var_34]
mov	[esi+24h], edx
or	dword ptr [esi+58h], 80h
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881874
mov	edx, ebx
mov	eax, edi
call	sub_68891114
test	eax, eax
jz	loc_6889212B
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], offset aMood_0 
mov	[esp+7Ch+var_74], offset aMood_0 
mov	eax, [esi]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	ebp
call	purple_prpl_got_user_status
jmp	loc_68891C04
mov	ebp, esi
jmp	short loc_68891DDC
dec	bx
jz	loc_68891FE0
			
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+Str2],	edx
mov	[esp+7Ch+Str1],	edi
call	sub_68881874
mov	[esp+7Ch+Str1],	edi
call	sub_68881848
add	eax, 4
cmp	[esp+7Ch+var_50], eax
jl	loc_68892124
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	ebx, eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881990
mov	byte ptr [esp+7Ch+var_34], al
mov	[esp+7Ch+Str1],	edi
call	sub_68881990
mov	byte ptr [esp+7Ch+var_48], al
mov	[esp+7Ch+Str1],	edi
call	sub_68881848
mov	[esp+7Ch+var_3C], eax
movzx	esi, byte ptr [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edi
call	sub_68881818
cmp	esi, eax
jnb	loc_68891F04
mov	eax, esi
add	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_3C], eax
cmp	bx, 2
jz	loc_68891F1E
jbe	loc_68891DC4
cmp	bx, 9
jz	loc_68891F7C
cmp	bx, 0Eh
jnz	loc_68891DCC
mov	edx, [esp+7Ch+var_38]
mov	eax, [edx+68h]
mov	[esp+7Ch+Str1],	eax
call	purple_connection_get_account
mov	[esp+7Ch+var_48], eax
mov	[esp+7Ch+Str2],	esi
mov	[esp+7Ch+Str1],	edi
call	sub_68881D24
mov	ebx, eax
cmp	byte ptr [eax],	0
jz	loc_688920A0
mov	eax, offset aIcqmood0 
xor	esi, esi
jmp	short loc_68891EA8
align 4
inc	esi
mov	eax, ds:off_688B0C60[esi*8]
test	eax, eax
jz	loc_68892086
mov	[esp+7Ch+Str2],	eax 
mov	[esp+7Ch+Str1],	ebx 
call	strcmp
test	eax, eax
jnz	short loc_68891E98
mov	esi, ds:off_688B0C64[esi*8]
test	esi, esi
jz	loc_68892086
mov	[esp+7Ch+Str1],	ebx
call	g_free
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+var_70], offset aMood_0 
mov	[esp+7Ch+var_74], offset aMood_0 
mov	eax, [ebp+0]
mov	[esp+7Ch+Str2],	eax
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	eax
call	purple_prpl_got_user_status
jmp	loc_68891DCC
align 4
mov	[esp+7Ch+Str1],	edi
call	sub_68881818
add	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_3C], eax
cmp	bx, 2
jnz	loc_68891E48
mov	eax, [ebp+70h]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	eax, [ebp+74h]
mov	[esp+7Ch+Str1],	eax
call	g_free
cmp	byte ptr [esp+7Ch+var_48], 3
jbe	loc_688920C8
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[ebp+78h], ax
movzx	eax, ax
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881D24
mov	[ebp+70h], eax
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
dec	ax
jz	loc_6889217A
mov	dword ptr [ebp+74h], 0
jmp	loc_68891DCC
align 4
mov	eax, [ebp+7Ch]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	eax, [ebp+80h]
mov	[esp+7Ch+Str1],	eax
call	g_free
cmp	byte ptr [esp+7Ch+var_48], 3
jbe	loc_688920F4
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[ebp+84h], ax
movzx	eax, ax
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881D24
mov	[ebp+7Ch], eax
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
dec	ax
jz	loc_68892150
mov	dword ptr [ebp+80h], 0
jmp	loc_68891DCC
cmp	byte ptr [esp+7Ch+var_48], 0
jz	loc_68891DCC
cmp	byte ptr [esp+7Ch+var_34], 1
ja	loc_68891DCC
mov	eax, [ebp+60h]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	al, byte ptr [esp+7Ch+var_34]
mov	[ebp+5Ch], al
mov	[esp+7Ch+Str2],	esi
mov	[esp+7Ch+Str1],	edi
call	sub_68881CAC
mov	[ebp+60h], eax
movzx	eax, byte ptr [esp+7Ch+var_48]
mov	[ebp+5Eh], ax
jmp	loc_68891DCC
align 4
mov	[esp+7Ch+Str1],	edi
call	sub_68881A60
mov	[esi+18h], eax
or	dword ptr [esi+58h], 100h
jmp	loc_68891C04
align 10h
mov	[esp+7Ch+Str1],	edi
call	sub_68881990
jmp	loc_68891C04
align 10h
mov	edx, [esi+20h]
mov	[esp+7Ch+var_48], edx
mov	ebp, [esi+24h]
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	edi
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str1],	eax
call	aim_locate_getcaps_short
or	eax, [esp+7Ch+var_48]
mov	[esi+20h], eax
or	edx, ebp
mov	[esi+24h], edx
or	dword ptr [esi+58h], 80h
jmp	loc_68891C04
			
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	offset aUnknownIcqmood 
mov	[esp+7Ch+Str1],	offset aOscar_7	
call	purple_debug_warning
xchg	ax, ax
mov	[esp+7Ch+Str1],	ebx
call	g_free
mov	[esp+7Ch+var_74], offset aMood_0 
mov	eax, [ebp+0]
mov	[esp+7Ch+Str2],	eax
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	eax
call	purple_prpl_got_user_status_deactive
jmp	loc_68891DCC
movzx	eax, byte ptr [esp+7Ch+var_48]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881904
mov	word ptr [ebp+78h], 0
mov	[esp+7Ch+Str1],	offset byte_688B0618
call	g_strdup
mov	[ebp+70h], eax
jmp	loc_68891F6D
align 4
movzx	eax, byte ptr [esp+7Ch+var_48]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881904
mov	word ptr [ebp+84h], 0
mov	[esp+7Ch+Str1],	offset byte_688B0618
call	g_strdup
mov	[ebp+7Ch], eax
jmp	loc_68891FD1
align 4
mov	esi, ebp
jmp	loc_68891C04
mov	[esp+7Ch+var_74], offset aMood_0 
mov	eax, [esi]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	ebp
call	purple_prpl_got_user_status_deactive
jmp	loc_68891C04
			
mov	eax, 0FFFFFFEAh
jmp	loc_68891C35
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
movzx	eax, ax
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881D24
mov	[ebp+80h], eax
jmp	loc_68891DCC
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
mov	[esp+7Ch+Str1],	edi
call	sub_688819F0
movzx	eax, ax
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	edi
call	sub_68881D24
mov	[ebp+74h], eax
jmp	loc_68891DCC
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_34], eax
mov	ebp, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_C]
mov	ebx, [esp+5Ch+arg_10]
mov	esi, [esp+5Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	ax, [ebx+2]
cmp	ax, 1
jz	loc_68892418
cmp	ax, 3
jz	loc_68892494
cmp	ax, 6
jz	short loc_6889220C
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688925CE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], 98h
call	g_malloc
mov	ebp, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_info_extract
mov	[esp+5Ch+var_5C], esi
call	aim_tlvlist_read
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_getstr
mov	[ebp+68h], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 2
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
mov	ebx, eax
test	eax, eax
jz	short loc_68892299
movzx	eax, word ptr [eax+2]
mov	[esp+5Ch+var_5C], eax
call	g_malloc
mov	[ebp+64h], eax
movzx	ecx, word ptr [ebx+2]
mov	esi, [ebx+4]
mov	edi, eax
rep movsb
mov	ax, [ebx+2]
mov	[ebp+6Ch], ax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 3
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_getstr
mov	[ebp+8Ch], eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 4
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
mov	ebx, eax
test	eax, eax
jz	short loc_68892305
movzx	eax, word ptr [eax+2]
mov	[esp+5Ch+var_5C], eax
call	g_malloc
mov	[ebp+88h], eax
movzx	ecx, word ptr [ebx+2]
mov	esi, [ebx+4]
mov	edi, eax
rep movsb
mov	ax, [ebx+2]
mov	[ebp+90h], ax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 5
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
mov	ebx, eax
test	eax, eax
jz	loc_688923C2
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	edi, eax
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_58], eax
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881798
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_locate_getcaps
mov	[ebp+20h], eax
mov	[ebp+24h], edx
mov	[esp+5Ch+var_5C], esi
call	sub_688818CC
mov	dword ptr [ebp+58h], 80h
movzx	edx, word ptr [ebx+2]
mov	eax, esi
call	sub_68891114
test	eax, eax
jz	loc_68892570
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], offset aMood_0 
mov	[esp+5Ch+var_54], offset aMood_0 
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_prpl_got_user_status
			
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_free
mov	edx, ebp
mov	eax, [esp+5Ch+var_34]
call	sub_68891274
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	aim_locate_finduserinfo
mov	ebx, eax
mov	[esp+5Ch+var_5C], ebp
call	aim_info_free
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	oscar_user_info_display_aim
xor	eax, eax
jmp	loc_688921F3
align 4
mov	eax, [ebx+8]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_remsnac
mov	ebx, eax
test	eax, eax
jz	loc_688925B3
movzx	eax, word ptr [eax+4]
cmp	ax, 2
jz	short loc_6889244A
cmp	word ptr [ebx+6], 15h
jnz	loc_68892530
mov	edi, [ebx+0Ch]
test	edi, edi
jz	loc_68892590
mov	[esp+5Ch+var_5C], esi
call	sub_688819F0
mov	[esp+5Ch+var_54], edi
movzx	eax, ax
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	oscar_user_info_display_error
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, 1
jmp	loc_688921F3
align 4
mov	[esp+5Ch+var_5C], esi
call	aim_tlvlist_read
mov	esi, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], eax
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68892564
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], esi
call	aim_tlv_get16
mov	word ptr [esp+5Ch+var_30], ax
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	aim_callhandler
test	eax, eax
jz	loc_6889258C
movzx	edx, word ptr [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebp
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	eax
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_38], eax
call	aim_tlvlist_free
mov	eax, [esp+5Ch+var_38]
jmp	loc_688921F3
align 10h
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aLocateErrorRec 
mov	[esp+5Ch+var_5C], offset aOscar_7 
call	purple_debug_misc
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
xor	eax, eax
jmp	loc_688921F3
align 4
mov	word ptr [esp+5Ch+var_30], 0
jmp	loc_688924DB
mov	[esp+5Ch+var_54], offset aMood_0 
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_prpl_got_user_status_deactive
jmp	loc_688923C2
xor	eax, eax
jmp	short loc_68892518
mov	[esp+5Ch+var_58], offset aLocateErrorR_0 
mov	[esp+5Ch+var_5C], offset aOscar_7 
call	purple_debug_misc
mov	[esp+5Ch+var_5C], ebx
call	g_free
xor	eax, eax
jmp	loc_688921F3
mov	[esp+5Ch+var_58], offset aLocateErrorR_1 
mov	[esp+5Ch+var_5C], offset aOscar_7 
call	purple_debug_misc
xor	eax, eax
jmp	loc_688921F3
call	__stack_chk_fail
align 4
public aim_locate_reqrights
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68892630
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_68892630
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], 2
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_genericreq_n_snacid
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892637
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6889261D
call	__stack_chk_fail
public aim_locate_setprofile
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	ebp, [esp+7Ch+arg_8]
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_40], edx
mov	eax, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_44], eax
mov	edx, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_50], edx
mov	edx, [esp+7Ch+arg_18]
mov	[esp+7Ch+var_4C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_30], 0
test	ebx, ebx
jz	loc_688928D8
mov	[esp+7Ch+Count], 2
mov	[esp+7Ch+Dest],	ebx
call	flap_connection_findbygroup
mov	[esp+7Ch+var_48], eax
test	eax, eax
jz	loc_688928D8
test	ebp, ebp
jz	loc_68892904
test	esi, esi
jz	loc_688928D8
mov	eax, [esp+7Ch+var_50]
test	eax, eax
jz	short loc_688926E7
mov	eax, [esp+7Ch+var_4C]
test	eax, eax
jnz	loc_688928CC
test	ebp, ebp
jz	loc_688928F8
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
add	ecx, 18h
mov	[esp+7Ch+Dest],	ecx
call	g_malloc
mov	edx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+Format], offset aTextAolrtfCh_0 
add	ecx, 18h
mov	[esp+7Ch+Count], ecx 
mov	[esp+7Ch+Dest],	edx 
mov	[esp+7Ch+var_54], edx
call	_snprintf
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Format], edx
mov	[esp+7Ch+Count], 1
lea	esi, [esp+7Ch+var_30]
mov	[esp+7Ch+Dest],	esi
call	aim_tlvlist_add_str
mov	[esp+7Ch+var_70], ebp
movzx	eax, word ptr [esp+7Ch+var_40]
mov	[esp+7Ch+Format], eax
mov	[esp+7Ch+Count], 2
mov	[esp+7Ch+Dest],	esi
call	aim_tlvlist_add_raw
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Dest],	edx
call	g_free
mov	ebp, [esp+7Ch+var_50]
test	ebp, ebp
jz	loc_6889281C
mov	edi, [esp+7Ch+var_4C]
test	edi, edi
jz	loc_688928E0
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, [esp+7Ch+var_44]
xor	eax, eax
repne scasb
not	ecx
add	ecx, 18h
mov	[esp+7Ch+Dest],	ecx
call	g_malloc
mov	edx, eax
mov	ecx, ebp
mov	edi, [esp+7Ch+var_44]
xor	eax, eax
repne scasb
not	ecx
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+Format], offset aTextAolrtfCh_0 
lea	ebp, [ecx+18h]
mov	[esp+7Ch+Count], ebp 
mov	[esp+7Ch+Dest],	edx 
mov	[esp+7Ch+var_54], edx
call	_snprintf
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Format], edx
mov	[esp+7Ch+Count], 3
mov	[esp+7Ch+Dest],	esi
call	aim_tlvlist_add_str
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_70], eax
movzx	eax, word ptr [esp+7Ch+var_4C]
mov	[esp+7Ch+Format], eax
mov	[esp+7Ch+Count], 4
mov	[esp+7Ch+Dest],	esi
call	aim_tlvlist_add_raw
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Dest],	edx
call	g_free
			
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Dest],	eax
call	aim_tlvlist_size
mov	[esp+7Ch+Count], eax
lea	ebp, [esp+7Ch+var_2C]
mov	[esp+7Ch+Dest],	ebp
call	sub_68881748
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+Format], 4
mov	[esp+7Ch+Count], 2
mov	[esp+7Ch+Dest],	ebx
call	aim_cachesnac
mov	edi, eax
mov	[esp+7Ch+Count], esi
mov	[esp+7Ch+Dest],	ebp
call	aim_tlvlist_write
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Dest],	eax
call	aim_tlvlist_free
mov	[esp+7Ch+var_68], ebp
mov	[esp+7Ch+var_6C], edi
mov	[esp+7Ch+var_70], 4
mov	[esp+7Ch+Format], 2
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Dest],	ebx
call	flap_connection_send_snac
mov	[esp+7Ch+Dest],	ebp
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68892912
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+7Ch+var_44]
test	eax, eax
jnz	loc_688926DF
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688928B4
align 10h
mov	[esp+7Ch+Count], 4
mov	[esp+7Ch+Dest],	esi
call	aim_tlvlist_add_noval
jmp	loc_6889281C
align 4
lea	esi, [esp+7Ch+var_30]
jmp	loc_68892772
align 4
mov	eax, [esp+7Ch+var_50]
test	eax, eax
jnz	loc_688926D3
jmp	short loc_688928D8
call	__stack_chk_fail
align 4
public aim_locate_setcaps
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	edi, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+68h]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	[esp+6Ch+var_6C], eax
call	purple_account_get_presence
mov	dword ptr [esp+6Ch+var_68], offset aMood_0 
mov	[esp+6Ch+var_6C], eax
call	purple_presence_get_status
mov	dword ptr [esp+6Ch+var_68], offset aMood_0 
mov	[esp+6Ch+var_6C], eax
call	purple_status_get_attr_string
mov	ebp, eax
mov	[esp+6Ch+var_30], 0
mov	dword ptr [esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	loc_68892A5B
mov	[esp+6Ch+var_5C], ebp 
mov	[esp+6Ch+var_64], esi 
mov	[esp+6Ch+var_60], edi 
mov	dword ptr [esp+6Ch+var_68], 5 
lea	edi, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], edi 
mov	[esp+6Ch+var_40], eax
call	aim_tlvlist_add_caps
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_size
mov	dword ptr [esp+6Ch+var_68], eax
lea	esi, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], esi
call	sub_68881748
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 4
mov	dword ptr [esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], ebx
call	aim_cachesnac
mov	ebp, eax
mov	dword ptr [esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], esi
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], 2
mov	edx, [esp+6Ch+var_40]
mov	dword ptr [esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], ebx
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], esi
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892A62
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, 0FFFFFFEAh
jmp	short loc_68892A47
call	__stack_chk_fail
align 4
public aim_locate_getinfoshort
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_68892B98
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_68892B98
test	ebx, ebx
jz	loc_68892B98
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
add	ecx, 4
mov	[esp+5Ch+var_58], ecx
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], edx
call	sub_68881748
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E8C
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], esi
call	sub_68881DA4
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	sub_68882114
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 15h
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebp
call	aim_cachesnac
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 15h
mov	[esp+5Ch+var_54], 2
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_send_snac_with_priority
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892B9F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68892B83
call	__stack_chk_fail
public locate_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	2
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aLocate 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_688921A8
mov	dword ptr [ebx+20h], offset loc_68891A1C
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892C10
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public icq_get_custom_icon_description
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_68892C6A
cmp	byte ptr [edi],	0
jz	short loc_68892C6A
mov	ebx, offset off_688AD004
mov	esi, offset off_688B0D94
mov	edx, offset aThinking 
xchg	ax, ax
mov	ebp, [ebx]
test	ebp, ebp
jz	short loc_68892C5E
mov	[esp+3Ch+Str2],	edx 
mov	[esp+3Ch+Str1],	edi 
call	strcmp
test	eax, eax
jz	short loc_68892C6C
mov	edx, [esi]
add	ebx, 0Ch
add	esi, 14h
test	edx, edx
jnz	short loc_68892C48
			
xor	ebp, ebp
mov	eax, ebp
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892C82
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public icq_get_custom_icon_data
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_68892CFC
cmp	byte ptr [edi],	0
jz	short loc_68892CFC
mov	esi, offset off_688AD004
mov	eax, offset aThinking 
xor	ebx, ebx
xchg	ax, ax
mov	edx, [esi]
test	edx, edx
jz	short loc_68892CCA
mov	[esp+2Ch+Str2],	eax 
mov	[esp+2Ch+Str1],	edi 
call	strcmp
test	eax, eax
jz	short loc_68892CF0
inc	ebx
lea	eax, [ebx+ebx*4]
mov	eax, ds:off_688B0D80[eax*4]
add	esi, 0Ch
test	eax, eax
jnz	short loc_68892CB4
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892D00
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
lea	eax, [ebx+ebx*4]
lea	eax, dword_688B0D84[eax*4]
jmp	short loc_68892CDC
			
xor	eax, eax
jmp	short loc_68892CDC
call	__stack_chk_fail
align 4
public icq_get_purple_moods
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset off_688AD000
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68892D2B
add	esp, 1Ch
retn
call	__stack_chk_fail
public aim_srv_clientready
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], 476h
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881748
mov	eax, [esp+5Ch+var_30]
mov	ebp, [eax+64h]
test	ebp, ebp
jz	short loc_68892DCC
lea	esi, [esi+0]
movzx	eax, word ptr [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim__findmodulebygroup
mov	ebx, eax
test	eax, eax
jz	short loc_68892DC5
movzx	eax, word ptr [eax]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+4]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+6]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_68892D70
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	aim_cachesnac
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], 1
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68892E40
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_srv_requestnew
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
movzx	ebp, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_58], 9
mov	[esp+5Ch+var_5C], esi
call	flap_connection_findbygroup
mov	edi, eax
test	eax, eax
jz	loc_68892F28
mov	[esp+5Ch+var_58], 6
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
call	sub_68881748
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E0C
mov	eax, [esi+40h]
test	eax, eax
jnz	loc_68892F3C
lea	ebp, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	aim_tlvlist_write
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_tlvlist_free
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 4
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68892F55
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], 8Ch
lea	ebp, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], ebp
call	aim_tlvlist_add_noval
jmp	loc_68892EB4
call	__stack_chk_fail
align 4
public aim_chat_join
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0ECh
mov	ebp, [esp+0FCh+arg_0]
mov	edx, [esp+0FCh+arg_4]
mov	esi, [esp+0FCh+arg_8]
mov	eax, [esp+0FCh+arg_C]
mov	[esp+0FCh+var_C4], eax
mov	[esp+0FCh+var_C0], dx
mov	[esp+0FCh+var_BE], ax
mov	eax, ds:__stack_chk_guard
mov	[esp+0FCh+var_20], eax
xor	eax, eax
mov	[esp+0FCh+var_B4], 0
mov	[esp+0FCh+var_F8], 9
mov	[esp+0FCh+var_FC], ebp
mov	[esp+0FCh+var_D0], edx
call	flap_connection_findbygroup
mov	[esp+0FCh+var_C8], eax
test	eax, eax
jz	loc_68893120
test	esi, esi
jz	loc_68893120
cmp	byte ptr [esi],	0
jz	loc_68893120
mov	[esp+0FCh+var_F8], 1FAh
lea	ebx, [esp+0FCh+var_B0]
mov	[esp+0FCh+var_FC], ebx
call	sub_68881748
lea	eax, [esp+0FCh+var_A4]
mov	[esp+0FCh+var_CC], eax
mov	ecx, 84h
xor	eax, eax
mov	edi, [esp+0FCh+var_CC]
rep stosb
mov	edx, [esp+0FCh+var_D0]
mov	[esp+0FCh+var_A4], dx
mov	[esp+0FCh+var_F4], 80h
mov	[esp+0FCh+var_F8], esi
lea	eax, [esp+0FCh+var_A2]
mov	[esp+0FCh+var_FC], eax
call	g_strlcpy
mov	edx, [esp+0FCh+var_C4]
mov	[esp+0FCh+var_22], dx
mov	[esp+0FCh+var_F8], 0Eh
mov	[esp+0FCh+var_FC], ebx
call	sub_68881E0C
movzx	eax, [esp+0FCh+var_BE]
mov	[esp+0FCh+var_EC], eax
mov	[esp+0FCh+var_F0], esi
movzx	eax, [esp+0FCh+var_C0]
mov	[esp+0FCh+var_F4], eax
mov	[esp+0FCh+var_F8], 1
lea	esi, [esp+0FCh+var_B4]
mov	[esp+0FCh+var_FC], esi
call	aim_tlvlist_add_chatroom
mov	edx, [ebp+40h]
test	edx, edx
jnz	loc_68893108
mov	[esp+0FCh+var_F8], esi
mov	[esp+0FCh+var_FC], ebx
call	aim_tlvlist_write
mov	eax, [esp+0FCh+var_B4]
mov	[esp+0FCh+var_FC], eax
call	aim_tlvlist_free
mov	[esp+0FCh+var_E8], 84h
lea	eax, [esp+0FCh+var_A4]
mov	[esp+0FCh+var_EC], eax
mov	[esp+0FCh+var_F0], 0
mov	[esp+0FCh+var_F4], 4
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], ebp
call	aim_cachesnac
mov	[esp+0FCh+var_E8], ebx
mov	[esp+0FCh+var_EC], eax
mov	[esp+0FCh+var_F0], 4
mov	[esp+0FCh+var_F4], 1
mov	eax, [esp+0FCh+var_C8]
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], ebp
call	flap_connection_send_snac
mov	[esp+0FCh+var_FC], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+0FCh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68893127
add	esp, 0ECh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+0FCh+var_F8], 8Ch
mov	[esp+0FCh+var_FC], esi
call	aim_tlvlist_add_noval
jmp	loc_68893072
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_688930EC
call	__stack_chk_fail
public aim_srv_reqrates
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 6
mov	[esp+2Ch+var_24], 1
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n_snacid
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889316E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public aim_srv_rates_addparam
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 1F6h
lea	esi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], esi
call	sub_68881748
mov	ebx, [ebp+68h]
test	ebx, ebx
jz	short loc_688931C4
lea	esi, [esi+0]
mov	eax, [ebx]
movzx	eax, word ptr [eax]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_688931AC
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 8
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	aim_cachesnac
mov	[esp+4Ch+var_38], esi
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 8
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
call	flap_connection_send_snac
mov	[esp+4Ch+var_4C], esi
call	sub_688817E4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68893234
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_srv_reqpersonalinfo
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0Eh
mov	[esp+2Ch+var_24], 1
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_genericreq_n_snacid
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889327E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public aim_srv_setidle
			
push	ebx
sub	esp, 48h
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_20], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 9
mov	[esp+4Ch+var_4C], ebx
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_688932D7
lea	edx, [esp+4Ch+var_20]
mov	[esp+4Ch+var_3C], edx
mov	[esp+4Ch+var_40], 11h
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	aim_genericreq_l
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688932E8
add	esp, 48h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public aim_srv_setversions
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], 476h
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881748
mov	eax, [esp+5Ch+var_30]
mov	ebx, [eax+64h]
test	ebx, ebx
jz	short loc_6889336B
lea	esi, [esi+0]
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	aim__findmodulebygroup
mov	ebp, eax
test	eax, eax
jz	short loc_68893364
movzx	eax, word ptr [eax]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebp+2]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_68893330
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 17h
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	aim_cachesnac
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 17h
mov	[esp+5Ch+var_54], 1
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688933DF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 13Ch
mov	ebx, [esp+14Ch+arg_0]
mov	[esp+14Ch+var_F8], ebx
mov	ebx, [esp+14Ch+arg_4]
mov	[esp+14Ch+var_100], ebx
mov	esi, [esp+14Ch+arg_8]
mov	ebx, [esp+14Ch+arg_C]
mov	[esp+14Ch+var_F0], ebx
mov	edx, [esp+14Ch+arg_10]
mov	ebx, [esp+14Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+14Ch+var_20], eax
xor	eax, eax
mov	ax, [edx+2]
cmp	ax, 3
jz	loc_68893530
cmp	ax, 5
jz	loc_68893580
cmp	ax, 7
jz	loc_6889377C
cmp	ax, 0Ah
jz	loc_688938BC
cmp	ax, 0Bh
jz	loc_68893B6B
cmp	ax, 0Dh
jz	loc_68893BAC
cmp	ax, 0Fh
jz	loc_68893BB6
cmp	ax, 10h
jz	loc_68893C17
cmp	ax, 12h
jz	loc_68893CB4
cmp	ax, 13h
jz	loc_68893DDD
cmp	ax, 18h
jz	loc_68893E60
cmp	ax, 1Fh
jz	loc_68893EA2
cmp	ax, 21h
jz	short loc_688934D4
			
xor	eax, eax
			
mov	edx, [esp+14Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889418E
add	esp, 13Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
cmp	ax, 1
ja	short loc_688934B4
mov	[esp+14Ch+var_14C], ebx
call	sub_68881990
mov	[esp+14Ch+var_14C], ebx
mov	byte ptr [esp+14Ch+var_108], al
call	sub_68881990
movzx	edi, al
mov	[esp+14Ch+var_148], edi
mov	[esp+14Ch+var_14C], ebx
call	sub_68881CAC
mov	esi, eax
mov	dl, byte ptr [esp+14Ch+var_108]
test	dl, dl
jz	loc_6889407A
cmp	dl, 41h
jz	loc_6889407A
cmp	dl, 81h
jz	loc_68894150
			
mov	[esp+14Ch+var_14C], esi
call	g_free
jmp	short loc_688934B4
align 10h
mov	esi, [esp+14Ch+var_100]
jmp	short loc_68893555
align 4
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
movzx	eax, ax
mov	[esp+14Ch+var_148], eax
mov	eax, [esi+64h]
mov	[esp+14Ch+var_14C], eax
call	g_slist_prepend
mov	[esi+64h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881818
test	eax, eax
jnz	short loc_68893538
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_srv_setversions
mov	eax, 1
jmp	loc_688934B6
align 10h
lea	ebp, [esp+14Ch+var_E0]
mov	ecx, 24h
xor	eax, eax
mov	edi, ebp
rep stosb
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 0Dh
mov	[esp+14Ch+var_14C], eax
call	aim_tlv_gettlv
test	eax, eax
mov	edx, [esp+14Ch+var_108]
jz	loc_68893CA1
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 5
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68893CA1
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 6
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68893CA1
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 0Dh
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_get16
mov	[esp+14Ch+var_E0], ax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 5
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_getstr
mov	[esp+14Ch+var_DC], eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 6
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_gettlv
mov	ax, [eax+2]
mov	[esp+14Ch+var_D8], ax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 6
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_getstr
mov	[esp+14Ch+var_D4], eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 8Dh
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_getstr
mov	[esp+14Ch+var_D0], eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 8Eh
mov	[esp+14Ch+var_14C], ebx
call	aim_tlv_get8
mov	[esp+14Ch+var_CC], al
mov	edx, [esp+14Ch+var_108]
mov	eax, [edx+8]
mov	[esp+14Ch+var_148], eax
mov	eax, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], eax
call	aim_remsnac
mov	esi, eax
cmp	[esp+14Ch+var_E0], 0Eh
mov	edx, [esp+14Ch+var_108]
jz	loc_68893FF5
			
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	edx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], edx
call	aim_callhandler
test	eax, eax
jz	loc_68893FEE
mov	[esp+14Ch+var_140], ebp
mov	ecx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], ecx
mov	edx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], edx
mov	ecx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ecx
call	eax
mov	edx, [esp+14Ch+var_DC]
mov	[esp+14Ch+var_14C], edx
mov	[esp+14Ch+var_108], eax
call	g_free
mov	edx, [esp+14Ch+var_D4]
mov	[esp+14Ch+var_14C], edx
call	g_free
mov	edx, [esp+14Ch+var_D0]
mov	[esp+14Ch+var_14C], edx
call	g_free
test	esi, esi
mov	eax, [esp+14Ch+var_108]
jz	short loc_6889375E
mov	edx, [esi+0Ch]
mov	[esp+14Ch+var_14C], edx
call	g_free
mov	eax, [esp+14Ch+var_108]
			
mov	[esp+14Ch+var_14C], esi
mov	[esp+14Ch+var_108], eax
call	g_free
mov	[esp+14Ch+var_14C], ebx
call	aim_tlvlist_free
mov	eax, [esp+14Ch+var_108]
jmp	loc_688934B6
align 4
add	esi, 2
mov	[esp+14Ch+var_104], esi
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	word ptr [esp+14Ch+var_F4], ax
test	ax, ax
jz	loc_68894055
xor	edi, edi
mov	ebp, [esp+14Ch+var_100]
jmp	short loc_688937E6
align 4
mov	byte ptr [esi+20h], 0
xor	ecx, ecx
xor	edx, edx
mov	eax, [esp+14Ch+var_E8]
sub	eax, edx
mov	[esi+24h], eax
mov	eax, [esp+14Ch+var_E4]
sub	eax, ecx
mov	[esi+28h], eax
mov	[esp+14Ch+var_148], esi
mov	eax, [ebp+68h]
mov	[esp+14Ch+var_14C], eax
call	g_slist_prepend
mov	[ebp+68h], eax
cmp	word ptr [esi],	1
jz	loc_688938B4
inc	edi
cmp	di, word ptr [esp+14Ch+var_F4]
jz	loc_68893A25
mov	[esp+14Ch+var_148], 0
lea	eax, [esp+14Ch+var_E8]
mov	[esp+14Ch+var_14C], eax
call	wpurple_gettimeofday
mov	[esp+14Ch+var_14C], 2Ch
call	g_malloc
mov	esi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	[esi], ax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+4], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+8], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+0Ch], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+10h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+14h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+18h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esi+1Ch], eax
mov	ecx, [esp+14Ch+var_104]
cmp	word ptr [ecx],	2
jbe	loc_688937A4
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], eax
call	sub_68881990
mov	[esi+20h], al
mov	ecx, [esp+14Ch+var_108]
mov	eax, 10624DD3h
mul	ecx
shr	edx, 6
lea	eax, [edx+edx*4]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
shl	eax, 3
sub	ecx, eax
lea	eax, [ecx+ecx*4]
lea	eax, [eax+eax*4]
lea	ecx, [eax+eax*4]
shl	ecx, 3
jmp	loc_688937AC
align 4
mov	[ebp+6Ch], esi
jmp	loc_688937DA
mov	[esp+14Ch+var_148], 0
lea	eax, [esp+14Ch+var_E8]
mov	[esp+14Ch+var_14C], eax
call	wpurple_gettimeofday
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	edi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	ecx, [esp+14Ch+var_100]
mov	edx, [ecx+68h]
test	edx, edx
jnz	short loc_688938FF
jmp	loc_688934B4
align 4
mov	edx, [edx+4]
test	edx, edx
jz	loc_688934B4
mov	ebp, [edx]
cmp	ax, [ebp+0]
jnz	short loc_688938F4
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+4], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+8], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+0Ch], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+10h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+14h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+18h], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	[ebp+1Ch], eax
cmp	word ptr [esi+2], 2
ja	loc_68893F85
mov	byte ptr [ebp+20h], 0
mov	[esp+14Ch+var_F4], 0
xor	ebx, ebx
xor	edx, edx
xor	esi, esi
mov	ecx, [esp+14Ch+var_E8]
sub	ecx, edx
mov	[ebp+24h], ecx
mov	edx, [esp+14Ch+var_E4]
sub	edx, ebx
mov	[ebp+28h], edx
mov	ecx, [ebp+4]
mov	edx, [ebp+14h]
mov	[esp+14Ch+var_104], edx
mov	ebx, [ebp+10h]
mov	[esp+14Ch+var_100], ebx
mov	edx, [ebp+8]
mov	ebx, [ebp+0Ch]
mov	[esp+14Ch+var_FC], ebx
mov	ebx, [ebp+18h]
mov	[esp+14Ch+var_F8], ebx
movzx	ebx, word ptr [ebp+0]
mov	[esp+14Ch+var_11C], ecx
mov	ecx, [esp+14Ch+var_F4]
mov	[esp+14Ch+var_120], ecx
mov	[esp+14Ch+var_124], esi
mov	ecx, [esp+14Ch+var_104]
mov	[esp+14Ch+var_128], ecx
mov	ecx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_12C], ecx
mov	[esp+14Ch+var_130], edx
mov	edx, [esp+14Ch+var_FC]
mov	[esp+14Ch+var_134], edx
mov	[esp+14Ch+var_138], eax
mov	ecx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_13C], ecx
mov	[esp+14Ch+var_140], ebx
cmp	di, 4
ja	loc_68893F5F
movzx	eax, di
mov	eax, ds:off_688B1424[eax*4]
mov	[esp+14Ch+var_144], eax
mov	[esp+14Ch+var_148], offset aRateSParamId0x 
mov	[esp+14Ch+var_14C], offset aOscar_8 
call	purple_debug_misc
cmp	di, 3
jz	loc_68894030
mov	eax, 1
jmp	loc_688934B6
mov	[esp+14Ch+var_14C], eax
call	g_slist_reverse
mov	edx, [esp+14Ch+var_100]
mov	[edx+68h], eax
mov	word ptr [esp+14Ch+var_FC], 0
nop
			
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	esi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
cmp	si, 1
jz	loc_68893B40
mov	ecx, [esp+14Ch+var_100]
mov	edx, [ecx+68h]
test	edx, edx
jnz	short loc_68893A73
jmp	loc_68893B38
mov	edx, [edx+4]
test	edx, edx
jz	loc_68893B38
mov	ebp, [edx]
cmp	si, [ebp+0]
jnz	short loc_68893A68
test	ax, ax
jz	short loc_68893ACC
movzx	eax, ax
inc	eax
mov	[esp+14Ch+var_104], eax
mov	esi, 1
lea	esi, [esi+0]
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
mov	edi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
test	ebp, ebp
jz	short loc_68893AC5
mov	[esp+14Ch+var_144], ebp
shl	edi, 10h
movzx	eax, ax
add	eax, edi
mov	[esp+14Ch+var_148], eax
mov	edx, [esp+14Ch+var_100]
mov	eax, [edx+70h]
mov	[esp+14Ch+var_14C], eax
call	g_hash_table_insert
inc	esi
cmp	esi, [esp+14Ch+var_104]
jnz	short loc_68893A90
inc	word ptr [esp+14Ch+var_FC]
mov	eax, [esp+14Ch+var_F4]
cmp	word ptr [esp+14Ch+var_FC], ax
jnz	loc_68893A3C
			
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_srv_rates_addparam
mov	[esp+14Ch+var_144], 6
mov	[esp+14Ch+var_148], 0FFFFh
mov	[esp+14Ch+var_14C], ebx
call	aim_callhandler
test	eax, eax
jz	loc_68893A1B
mov	ebx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], ebx
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	eax
mov	eax, 1
jmp	loc_688934B6
align 4
			
xor	ebp, ebp
jmp	loc_68893A7B
align 10h
movzx	eax, ax
shl	eax, 2
mov	[esp+14Ch+var_148], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881904
inc	word ptr [esp+14Ch+var_FC]
mov	eax, [esp+14Ch+var_F4]
cmp	word ptr [esp+14Ch+var_FC], ax
jnz	loc_68893A3C
jmp	loc_68893AE0
mov	[esp+14Ch+var_144], 0Bh
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_callhandler
test	eax, eax
jz	loc_688934B4
mov	ebx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], ebx
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	eax
jmp	loc_688934B6
mov	[esp+14Ch+var_144], 0Dh
jmp	short loc_68893B73
lea	esi, [esp+14Ch+var_BC]
mov	[esp+14Ch+var_144], esi
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_info_extract
mov	edx, [esp+14Ch+var_108]
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	[esp+14Ch+var_14C], ebx
call	aim_callhandler
test	eax, eax
jz	loc_68893CB0
mov	[esp+14Ch+var_140], esi
mov	ebx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], ebx
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	eax
jmp	short loc_68893C8C
lea	esi, [esp+14Ch+var_BC]
mov	ecx, 98h
xor	eax, eax
mov	edi, esi
rep stosb
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	sub_688819F0
movzx	edi, ax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881818
test	eax, eax
mov	edx, [esp+14Ch+var_108]
jnz	loc_68893FD1
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_callhandler
test	eax, eax
jz	short loc_68893CB0
mov	[esp+14Ch+var_13C], esi
mov	[esp+14Ch+var_140], edi
mov	ebx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], ebx
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	eax
			
mov	[esp+14Ch+var_14C], esi
mov	[esp+14Ch+var_108], eax
call	aim_info_free
mov	eax, [esp+14Ch+var_108]
jmp	loc_688934B6
			
mov	[esp+14Ch+var_14C], ebx
call	aim_tlvlist_free
xor	eax, eax
jmp	loc_688934B6
			
xor	eax, eax
jmp	short loc_68893C8C
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	sub_688819F0
mov	esi, eax
xor	edi, edi
test	ax, ax
mov	edx, [esp+14Ch+var_108]
jz	short loc_68893CFB
mov	ebp, edx
nop
mov	[esp+14Ch+var_14C], ebx
call	sub_688819F0
movzx	eax, ax
mov	[esp+14Ch+var_144], eax
mov	[esp+14Ch+var_148], offset aBifurcatedMigr 
mov	[esp+14Ch+var_14C], offset aOscar_8 
call	purple_debug_misc
inc	edi
cmp	di, si
jnz	short loc_68893CD0
mov	edx, ebp
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 5
mov	[esp+14Ch+var_14C], eax
call	aim_tlv_gettlv
test	eax, eax
mov	edx, [esp+14Ch+var_108]
jz	loc_68894029
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 5
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_tlv_getstr
mov	esi, eax
mov	edx, [esp+14Ch+var_108]
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 6
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	aim_tlv_gettlv
mov	edi, eax
mov	edx, [esp+14Ch+var_108]
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	eax, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], eax
call	aim_callhandler
test	eax, eax
jz	loc_6889410A
test	edi, edi
jz	loc_68894073
mov	edx, [edi+4]
mov	[esp+14Ch+var_13C], edx
mov	[esp+14Ch+var_140], esi
mov	edx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], edx
mov	ecx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ecx
mov	edx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], edx
call	eax
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], eax
call	aim_tlvlist_free
mov	[esp+14Ch+var_14C], esi
call	g_free
mov	eax, [esp+14Ch+var_108]
jmp	loc_688934B6
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	sub_688819F0
movzx	esi, ax
mov	[esp+14Ch+var_14C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 0Bh
mov	[esp+14Ch+var_14C], eax
call	aim_tlv_getstr
mov	edi, eax
mov	edx, [esp+14Ch+var_108]
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	ecx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ecx
call	aim_callhandler
test	eax, eax
jz	loc_6889404E
mov	[esp+14Ch+var_13C], edi
mov	[esp+14Ch+var_140], esi
mov	edx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], edx
mov	ecx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ecx
mov	edx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], edx
call	eax
mov	[esp+14Ch+var_14C], edi
jmp	loc_68893761
mov	[esp+14Ch+var_14C], ebx
call	sub_68881818
mov	[esp+14Ch+var_14C], ebx
call	sub_68881818
mov	[esp+14Ch+var_148], eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881CAC
mov	[esp+14Ch+var_14C], eax
call	g_free
mov	ebx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_srv_reqrates
mov	eax, 1
jmp	loc_688934B6
mov	[esp+14Ch+var_14C], ebx
mov	[esp+14Ch+var_108], edx
call	sub_68881A60
mov	edi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	ebp, eax
mov	[esp+14Ch+var_14C], ebx
call	aim_tlvlist_read
mov	ebx, eax
mov	[esp+14Ch+var_144], 1
mov	[esp+14Ch+var_148], 1
mov	[esp+14Ch+var_14C], eax
call	aim_tlv_getstr
mov	esi, eax
test	eax, eax
mov	edx, [esp+14Ch+var_108]
jz	loc_68894100
mov	[esp+14Ch+var_13C], eax
mov	[esp+14Ch+var_140], ebp
mov	[esp+14Ch+var_144], edi
mov	[esp+14Ch+var_148], offset aGotMemoryReque 
mov	[esp+14Ch+var_14C], offset aOscar_8 
mov	[esp+14Ch+var_108], edx
call	purple_debug_info
mov	edx, [esp+14Ch+var_108]
movzx	eax, word ptr [edx+2]
mov	[esp+14Ch+var_144], eax
movzx	eax, word ptr [edx]
mov	[esp+14Ch+var_148], eax
mov	eax, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], eax
call	aim_callhandler
test	eax, eax
jz	loc_6889406C
mov	[esp+14Ch+var_138], esi
mov	[esp+14Ch+var_13C], ebp
mov	[esp+14Ch+var_140], edi
mov	edx, [esp+14Ch+var_F0]
mov	[esp+14Ch+var_144], edx
mov	ecx, [esp+14Ch+var_100]
mov	[esp+14Ch+var_148], ecx
mov	edx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], edx
call	eax
jmp	loc_6889375E
mov	[esp+14Ch+var_144], offset aInvalid 
mov	[esp+14Ch+var_148], offset aRateSParamId0x 
mov	[esp+14Ch+var_14C], offset aOscar_8 
call	purple_debug_misc
mov	eax, 1
jmp	loc_688934B6
mov	[esp+14Ch+var_14C], ebx
call	sub_68881A60
mov	esi, eax
mov	[esp+14Ch+var_14C], ebx
call	sub_68881990
movzx	ecx, al
mov	[ebp+20h], cl
mov	edx, 10624DD3h
mov	eax, esi
mul	edx
shr	edx, 6
lea	eax, [edx+edx*4]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
shl	eax, 3
mov	ebx, esi
sub	ebx, eax
lea	eax, [ebx+ebx*4]
lea	eax, [eax+eax*4]
lea	ebx, [eax+eax*4]
shl	ebx, 3
mov	[esp+14Ch+var_F4], ecx
mov	eax, [ebp+1Ch]
jmp	loc_68893971
mov	[esp+14Ch+var_144], esi
mov	[esp+14Ch+var_148], ebx
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_info_extract
mov	edx, [esp+14Ch+var_108]
jmp	loc_68893C4C
xor	eax, eax
jmp	loc_6889371F
test	eax, eax
jz	loc_688936DF
mov	eax, [eax+0Ch]
mov	cx, [eax]
mov	[esp+14Ch+var_C8], cx
lea	ecx, [eax+2]
mov	[esp+14Ch+var_C4], ecx
mov	ax, [eax+82h]
mov	[esp+14Ch+var_C0], ax
jmp	loc_688936DF
xor	esi, esi
jmp	loc_68893D4F
mov	[esp+14Ch+var_148], offset aTheLastActionY 
mov	[esp+14Ch+var_14C], offset aOscar_8 
call	purple_debug_warning
mov	eax, 1
jmp	loc_688934B6
xor	eax, eax
jmp	loc_68893E58
mov	ebx, [esp+14Ch+var_100]
mov	eax, [ebx+68h]
mov	[esp+14Ch+var_14C], eax
call	g_slist_reverse
mov	[ebx+68h], eax
jmp	loc_68893AE0
xor	eax, eax
jmp	loc_6889375E
xor	edx, edx
jmp	loc_68893D9F
			
mov	[esp+14Ch+var_148], 10h
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	flap_connection_getbytype
test	eax, eax
jz	short loc_68894111
mov	ebx, [esp+14Ch+var_F8]
mov	eax, [ebx+68h]
mov	[esp+14Ch+var_14C], eax
call	purple_connection_get_account
mov	[esp+14Ch+var_14C], eax
call	purple_buddy_icons_find_account_icon
mov	ebx, eax
test	eax, eax
jz	loc_6889413F
mov	[esp+14Ch+var_148], offset aUploadingIconT 
mov	[esp+14Ch+var_14C], offset aOscar_8 
call	purple_debug_info
mov	[esp+14Ch+var_14C], ebx
call	purple_imgstore_get_size
mov	edi, eax
mov	[esp+14Ch+var_14C], ebx
call	purple_imgstore_get_data
and	edi, 0FFFFh
mov	[esp+14Ch+var_144], edi
mov	[esp+14Ch+var_148], eax
mov	eax, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], eax
call	aim_bart_upload
mov	[esp+14Ch+var_14C], ebx
call	purple_imgstore_unref
jmp	loc_68893525
mov	eax, offset aAim_exe 
jmp	loc_68893EEA
xor	eax, eax
jmp	loc_68893DC0
mov	ecx, [ebx+4]
test	ecx, ecx
jnz	loc_68894092
mov	dword ptr [ebx+4], 1
mov	dword ptr [ebx+8], 1
mov	[esp+14Ch+var_148], 10h
mov	[esp+14Ch+var_14C], ebx
call	aim_srv_requestnew
jmp	loc_68893525
			
mov	ebx, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], ebx
call	aim_ssi_delicon
jmp	loc_68893525
mov	ebx, [esp+14Ch+var_F8]
mov	eax, [ebx+68h]
mov	[esp+14Ch+var_14C], eax
call	purple_connection_get_account
mov	[esp+14Ch+var_14C], eax
call	purple_buddy_icons_find_account_icon
mov	ebx, eax
test	eax, eax
jz	short loc_6889413F
mov	[esp+14Ch+var_144], edi
mov	[esp+14Ch+var_148], esi
mov	eax, [esp+14Ch+var_F8]
mov	[esp+14Ch+var_14C], eax
call	aim_ssi_seticon
mov	[esp+14Ch+var_14C], ebx
call	purple_imgstore_unref
jmp	loc_68893525
call	__stack_chk_fail
align 4
public aim_srv_setextrainfo
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	ebp, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], edx
mov	edi, [esp+6Ch+arg_C]
mov	eax, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_48], eax
mov	edx, [esp+6Ch+arg_14]
mov	[esp+6Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], 0
test	ebx, ebx
jz	loc_688943AC
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], ebx
call	flap_connection_findbygroup
mov	esi, eax
test	eax, eax
jz	loc_688943AC
test	ebp, ebp
jnz	loc_68894370
lea	ebp, [esp+6Ch+var_30]
test	edi, edi
jz	loc_688942C8
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jz	loc_68894398
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
repne scasb
not	ecx
lea	edx, [ecx+0Fh]
mov	edi, [esp+6Ch+var_44]
test	edi, edi
jz	loc_688943A4
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_44]
repne scasb
not	ecx
dec	ecx
add	edx, ecx
mov	[esp+6Ch+var_68], edx
lea	edi, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], edi
call	sub_68881748
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], edi
call	sub_68882318
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 9
mov	[esp+6Ch+var_6C], edi
call	sub_68882318
mov	edx, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], edi
mov	[esp+6Ch+var_4C], edx
call	sub_68881848
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_60], edx
and	eax, 0FFFFh
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 1Dh
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_add_raw
mov	[esp+6Ch+var_6C], edi
call	sub_688817E4
jmp	short loc_688942CC
align 4
lea	edi, [esp+6Ch+var_2C]
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_size
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	sub_68881748
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], edi
call	aim_tlvlist_write
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	aim_tlvlist_free
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 1Eh
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	aim_cachesnac
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 1Eh
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], ebx
call	flap_connection_send_snac
mov	[esp+6Ch+var_6C], edi
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688943B3
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ebp, [esp+6Ch+var_40]
or	ebp, 10020000h
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], 6
lea	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], ebp
call	aim_tlvlist_add_32
jmp	loc_68894206
align 4
mov	edx, 10h
jmp	loc_6889422C
align 4
xor	ecx, ecx
jmp	loc_68894248
align 4
			
mov	eax, 0FFFFFFEAh
jmp	short loc_6889435A
call	__stack_chk_fail
public aim_srv_set_dc_info
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	[esp+4Ch+var_2C], 0
mov	[esp+4Ch+var_48], 25h
lea	ebx, [esp+4Ch+var_1C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881748
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881DA4
mov	[esp+4Ch+var_48], 8
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 50h
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E8C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	edi, [esp+4Ch+var_1C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881848
mov	[esp+4Ch+var_40], edi
and	eax, 0FFFFh
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0Ch
lea	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], edi
call	aim_tlvlist_add_raw
mov	[esp+4Ch+var_4C], ebx
call	sub_688817E4
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], eax
call	aim_tlvlist_size
mov	[esp+4Ch+var_48], eax
lea	ebx, [esp+4Ch+var_28]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881748
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_write
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], eax
call	aim_tlvlist_free
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 1Eh
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], esi
call	aim_cachesnac
mov	edi, eax
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], esi
call	flap_connection_findbygroup
test	eax, eax
jz	short loc_68894588
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], 1Eh
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	flap_connection_send_snac
mov	[esp+4Ch+var_4C], ebx
call	sub_688817E4
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688945B6
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+4Ch+var_3C], offset aConnNull 
mov	[esp+4Ch+var_40], offset aAim_srv_set_dc 
mov	[esp+4Ch+var_44], 37Ah
mov	[esp+4Ch+var_48], offset aFamily_oservic 
mov	[esp+4Ch+var_4C], 0
call	g_warn_message
jmp	short loc_6889456C
call	__stack_chk_fail
align 4
public aim_sendmemblock
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	esi, [esp+7Ch+arg_0]
mov	edi, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_50], edx
mov	ebp, [esp+7Ch+arg_C]
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_58], edx
mov	dl, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_51], dl
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_6889486C
test	edi, edi
jz	loc_6889486C
mov	[esp+7Ch+var_78], 12h
lea	ebx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], ebx
call	sub_68881748
mov	[esp+7Ch+var_78], 10h
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E0C
cmp	[esp+7Ch+var_51], 1
jz	loc_68894744
mov	eax, [esp+7Ch+var_58]
test	eax, eax
jz	loc_688947F0
test	ebp, ebp
jnz	loc_68894778
mov	[esp+7Ch+var_3D], 0
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], offset aMd5 
call	purple_cipher_context_new_by_name
mov	ebp, eax
mov	[esp+7Ch+var_74], 0
lea	eax, [esp+7Ch+var_3D]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_cipher_context_append
mov	[esp+7Ch+var_70], 0
lea	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], 10h
mov	[esp+7Ch+var_7C], ebp
mov	[esp+7Ch+var_5C], edx
call	purple_cipher_context_digest
mov	[esp+7Ch+var_7C], ebp
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_74], 10h
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	sub_688820A0
			
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 20h
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], esi
call	aim_cachesnac
mov	[esp+7Ch+var_68], ebx
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 20h
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], esi
call	flap_connection_send_snac
mov	[esp+7Ch+var_7C], ebx
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68894876
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+7Ch+var_58]
test	eax, eax
jz	loc_688947F0
cmp	ebp, 10h
jnz	loc_6889464F
mov	[esp+7Ch+var_74], 10h
mov	edx, [esp+7Ch+var_58]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	sub_688820A0
jmp	loc_688946CE
align 4
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], offset aMd5 
call	purple_cipher_context_new_by_name
mov	edx, eax
mov	[esp+7Ch+var_74], ebp
mov	eax, [esp+7Ch+var_58]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edx
mov	[esp+7Ch+var_5C], edx
call	purple_cipher_context_append
mov	[esp+7Ch+var_70], 0
lea	ebp, [esp+7Ch+var_30]
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], 10h
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_7C], edx
call	purple_cipher_context_digest
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_7C], edx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_74], 10h
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], ebx
call	sub_688820A0
jmp	loc_688946CE
align 10h
			
test	ebp, ebp
jz	loc_68894657
cmp	[esp+7Ch+var_50], 3FFFFFFh
jnz	short loc_6889480A
cmp	ebp, 3FFFFFFh
jz	short loc_68894824
mov	[esp+7Ch+var_78], offset aSendmemblockUn 
mov	[esp+7Ch+var_7C], offset aOscar_8 
call	purple_debug_warning
jmp	loc_688946CE
align 4
mov	[esp+7Ch+var_78], 44A95D26h
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E8C
mov	[esp+7Ch+var_78], 0D2490423h
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E8C
mov	[esp+7Ch+var_78], 93B8821Fh
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E8C
mov	[esp+7Ch+var_78], 51C54B01h
mov	[esp+7Ch+var_7C], ebx
call	sub_68881E8C
jmp	loc_688946CE
align 4
			
mov	eax, 0FFFFFFEAh
jmp	loc_6889472C
call	__stack_chk_fail
align 4
public service_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	1
mov	word ptr [ebx+2], 3
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aOservice 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_688933E4
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688948E1
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+arg_C]
mov	ebx, [esp+6Ch+arg_10]
mov	eax, [esp+6Ch+arg_14]
mov	esi, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], esi
xor	esi, esi
cmp	word ptr [ebx+2], 2
jz	short loc_68894938
xor	eax, eax
mov	ebx, [esp+6Ch+var_20]
xor	ebx, ds:__stack_chk_guard
jnz	loc_68894A60
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_3C], edx
mov	[esp+6Ch+var_40], ecx
call	aim_tlvlist_read
mov	esi, eax
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], eax
call	aim_tlv_getstr
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], esi
call	aim_tlv_getstr
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], 3
mov	[esp+6Ch+var_6C], esi
call	aim_tlv_get16
mov	[esp+6Ch+var_30], ax
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+var_6C], esi
call	aim_tlv_get16
mov	[esp+6Ch+var_2E], ax
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], 5
mov	[esp+6Ch+var_6C], esi
call	aim_tlv_get16
movzx	ebp, ax
movzx	eax, word ptr [ebx+2]
mov	[esp+6Ch+var_64], eax
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	aim_callhandler
test	eax, eax
mov	edx, [esp+6Ch+var_3C]
mov	ecx, [esp+6Ch+var_40]
jz	short loc_68894A5C
mov	[esp+6Ch+var_50], ebp
movzx	ebx, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_54], ebx
movzx	ebx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_58], ebx
mov	ebx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], ebx
mov	ebx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], edi
call	eax
mov	[esp+6Ch+var_6C], esi
mov	[esp+6Ch+var_3C], eax
call	aim_tlvlist_free
mov	esi, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], esi
call	g_free
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	eax, [esp+6Ch+var_3C]
jmp	loc_6889491E
align 4
xor	eax, eax
jmp	short loc_68894A2D
call	__stack_chk_fail
align 4
public popups_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	8
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 104h
mov	word ptr [ebx+6], 1
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aPopup	
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_688948E8
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68894ACD
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_C]
mov	ebx, [esp+4Ch+arg_10]
mov	eax, [esp+4Ch+arg_14]
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
cmp	word ptr [ebx+2], 2
jz	short loc_68894B18
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68894B6B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	sub_688819F0
movzx	ebp, ax
movzx	eax, word ptr [ebx+2]
mov	[esp+4Ch+var_44], eax
movzx	eax, word ptr [ebx]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	aim_callhandler
test	eax, eax
mov	edx, [esp+4Ch+var_30]
jz	short loc_68894B02
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_68894B6B
mov	[esp+4Ch+arg_C], ebp
mov	[esp+4Ch+arg_8], edx
mov	[esp+4Ch+arg_4], edi
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
call	__stack_chk_fail
public stats_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	0Bh
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 104h
mov	word ptr [ebx+6], 1
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aStats	
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68894AD4
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68894BD5
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edx, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_40], edx
mov	ecx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_3C], ecx
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_38], edx
mov	ecx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_4C], ecx
mov	ebx, [esp+7Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ax, [ecx+2]
cmp	ax, 1
jz	loc_68894DA4
cmp	ax, 3
jz	short loc_68894C50
xor	eax, eax
			
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_68894E62
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ecx, [esp+7Ch+var_4C]
mov	eax, [ecx+8]
mov	[esp+7Ch+Source], eax
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	edx
call	aim_remsnac
mov	[esp+7Ch+var_34], eax
test	eax, eax
jz	loc_68894E28
mov	ecx, [eax+0Ch]
mov	[esp+7Ch+var_30], ecx
mov	[esp+7Ch+Dest],	ebx
call	aim_tlvlist_read
mov	[esp+7Ch+var_48], eax
mov	[esp+7Ch+Dest],	eax
call	aim_tlvlist_count
mov	[esp+7Ch+var_44], eax
mov	ebx, 62h
xor	esi, esi
xor	ebp, ebp
jmp	short loc_68894CDB
align 10h
cmp	[esp+7Ch+var_44], ebp
jle	short loc_68894D00
mov	[esp+7Ch+Source], ebx
mov	[esp+7Ch+Dest],	esi
call	g_realloc
mov	esi, eax
mov	[esp+7Ch+Count], 61h 
mov	[esp+7Ch+Source], edi 
lea	eax, [eax+ebx-62h]
mov	[esp+7Ch+Dest],	eax 
call	strncpy
mov	[esp+7Ch+Dest],	edi
call	g_free
add	ebx, 62h
mov	ebp, [esp+7Ch+var_50]
lea	edx, [ebp+1]
mov	[esp+7Ch+var_50], edx
mov	[esp+7Ch+Count], edx
mov	[esp+7Ch+Source], 1
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Dest],	eax
call	aim_tlv_getstr
mov	edi, eax
test	eax, eax
jnz	short loc_68894CA0
mov	[esp+7Ch+Dest],	edi
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Dest],	eax
call	aim_tlvlist_free
mov	edx, [esp+7Ch+var_4C]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+Count], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+Source], eax
mov	ecx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	ecx
call	aim_callhandler
test	eax, eax
jz	loc_68894E20
mov	[esp+7Ch+var_68], esi
mov	[esp+7Ch+var_6C], ebp
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_70], edx
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+Count], ecx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+Source], edx
mov	ecx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	ecx
call	eax
mov	edx, [esp+7Ch+var_34]
test	edx, edx
jz	short loc_68894D83
mov	ecx, [esp+7Ch+var_34]
mov	edx, [ecx+0Ch]
mov	[esp+7Ch+Dest],	edx
mov	[esp+7Ch+var_54], eax
call	g_free
mov	eax, [esp+7Ch+var_54]
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+Dest],	edx
mov	[esp+7Ch+var_54], eax
call	g_free
mov	[esp+7Ch+Dest],	esi
call	g_free
mov	eax, [esp+7Ch+var_54]
jmp	loc_68894C37
mov	eax, [ecx+8]
mov	[esp+7Ch+Source], eax
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	edx
call	aim_remsnac
mov	ebx, eax
test	eax, eax
jz	short loc_68894E3C
mov	edx, [esp+7Ch+var_4C]
movzx	eax, word ptr [edx+2]
mov	[esp+7Ch+Count], eax
movzx	eax, word ptr [edx]
mov	[esp+7Ch+Source], eax
mov	ecx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	ecx
call	aim_callhandler
test	eax, eax
jz	short loc_68894E38
mov	edx, [ebx+0Ch]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+Count], edx
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+Source], ecx
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+Dest],	edx
call	eax
mov	edx, [ebx+0Ch]
mov	[esp+7Ch+Dest],	edx
mov	[esp+7Ch+var_54], eax
call	g_free
mov	[esp+7Ch+Dest],	ebx
call	g_free
mov	eax, [esp+7Ch+var_54]
jmp	loc_68894C37
xor	eax, eax
jmp	loc_68894D64
align 4
mov	[esp+7Ch+var_30], 0
jmp	loc_68894C7A
align 4
xor	eax, eax
jmp	short loc_68894E00
mov	ecx, [esp+7Ch+var_4C]
mov	eax, [ecx+8]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Source], offset aSearchErrorCou 
mov	[esp+7Ch+Dest],	offset aOscar_9	
call	purple_debug_misc
xor	eax, eax
jmp	loc_68894C37
call	__stack_chk_fail
align 4
public aim_search_address
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], 0Ah
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_findbygroup
mov	edx, eax
test	eax, eax
jz	loc_68894F50
test	ebx, ebx
jz	loc_68894F50
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+5Ch+var_58], ecx
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_30], edx
call	sub_68881748
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	sub_68882114
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], 0Ah
mov	[esp+5Ch+var_5C], ebp
call	aim_cachesnac
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], 0Ah
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebp
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68894F57
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68894F39
call	__stack_chk_fail
public search_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	0Ah
mov	word ptr [ebx+2], 1
mov	word ptr [ebx+4], 110h
mov	word ptr [ebx+6], 629h
mov	word ptr [ebx+8], 0
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aUserlookup 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_68894BDC
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68894FC1
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68894FFD
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public flap_connection_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 84h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[esp+2Ch+var_2C], 0
call	purple_circ_buffer_new
mov	[ebx+50h], eax
mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
mov	word ptr [ebx+5Eh], 0FFFFh
mov	[ebx+5Ch], di
mov	[esp+2Ch+var_28], offset loc_688ABD08
mov	[esp+2Ch+var_2C], offset loc_688ABD10
call	g_hash_table_new
mov	[ebx+70h], eax
mov	[esp+2Ch+var_28], ebx
mov	eax, [esi+0F0h]
mov	[esp+2Ch+var_2C], eax
call	g_slist_prepend
mov	[esi+0F0h], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68895091
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public flap_connection_schedule_destroy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
test	eax, eax
jnz	short loc_68895110
movzx	eax, word ptr [ebx+5Ch]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSchedulingDest 
mov	[esp+2Ch+var_2C], offset aOscar_10 
call	purple_debug_info
mov	[ebx+10h], edi
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+14h], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_68895BF0
mov	[esp+2Ch+var_2C], 0
call	purple_timeout_add
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68895123
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+50h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	loc_68895204
mov	edx, [ebx+30h]
test	edx, edx
jz	loc_68895228
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+50h]
mov	eax, [eax+14h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	purple_ssl_write
cmp	eax, 0
jle	short loc_68895198
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_68895287
mov	[esp+2Ch+arg_4], eax
mov	eax, [ebx+50h]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_circ_buffer_mark_read
jnz	loc_68895250
mov	eax, [ebx+58h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+58h], 0
mov	eax, [ebx+30h]
test	eax, eax
jz	loc_68895270
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_close
mov	dword ptr [ebx+30h], 0
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_68895287
mov	[esp+2Ch+arg_8], eax
mov	[esp+2Ch+arg_4], 4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	flap_connection_schedule_destroy
align 4
mov	eax, [ebx+58h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+58h], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68895287
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+50h]
mov	eax, [eax+14h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	wpurple_send
jmp	loc_6889516F
align 10h
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_68895216
call	_errno
cmp	dword ptr [eax], 2733h
jnz	loc_6889519E
jmp	short loc_68895216
align 10h
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
jmp	loc_688951CA
			
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edx, [ebx+44h]
test	edx, edx
jz	loc_68895344
mov	eax, [ebx+4Ch]
mov	ecx, [ebx+48h]
sub	ecx, eax
jz	short loc_688952F1
add	eax, [ebx+44h]
mov	edx, [ebx+30h]
test	edx, edx
jz	loc_68895400
mov	dword ptr [esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	edx
call	purple_ssl_read
cmp	eax, 0
jz	loc_68895424
jl	loc_688956B8
add	eax, [ebx+4Ch]
mov	[ebx+4Ch], eax
cmp	eax, [ebx+48h]
jb	loc_6889543C
			
lea	esi, [ebx+44h]
mov	[esp+5Ch+Time],	esi
call	sub_688818CC
lea	ebp, [ebx+40h]
mov	edi, [ebx]
mov	al, [ebx+40h]
cmp	al, 1
jz	loc_68895514
cmp	al, 2
jz	loc_6889555C
cmp	al, 4
jz	loc_68895454
			
mov	[esp+5Ch+Time],	0 
call	time
mov	[ebx+8], eax
mov	eax, [ebx+44h]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	dword ptr [ebx+44h], 0
mov	dword ptr [ebx+3Ch], 0
mov	edx, [ebx+3Ch]
lea	ecx, [ebx+edx+34h]
mov	eax, 6
sub	eax, edx
mov	edx, [ebx+30h]
test	edx, edx
jz	loc_68895610
mov	dword ptr [esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+Time],	edx
call	purple_ssl_read
mov	esi, eax
cmp	esi, 0
jz	loc_68895424
jl	loc_688956B8
mov	eax, [ebx]
mov	edi, [eax+68h]
mov	[esp+5Ch+Time],	0 
call	time
mov	[edi+30h], eax
add	esi, [ebx+3Ch]
mov	[ebx+3Ch], esi
cmp	esi, 5
jle	loc_6889543C
cmp	byte ptr [ebx+34h], 2Ah
jnz	loc_6889571B
mov	dl, [ebx+35h]
mov	[ebx+40h], dl
movzx	eax, byte ptr [ebx+36h]
shl	eax, 8
movzx	edx, byte ptr [ebx+37h]
add	eax, edx
mov	[ebx+42h], ax
movzx	eax, byte ptr [ebx+38h]
shl	eax, 8
movzx	edx, byte ptr [ebx+39h]
add	eax, edx
mov	[ebx+48h], eax
mov	[esp+5Ch+Time],	eax
call	g_malloc
mov	[ebx+44h], eax
mov	dword ptr [ebx+4Ch], 0
xor	eax, eax
mov	ecx, [ebx+48h]
sub	ecx, eax
jz	loc_688952F1
add	eax, [ebx+44h]
mov	edx, [ebx+30h]
test	edx, edx
jnz	loc_688952C3
nop
mov	[esp+5Ch+var_50], 0
mov	dword ptr [esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+2Ch]
mov	[esp+5Ch+Time],	eax
call	wpurple_recv
cmp	eax, 0
jnz	loc_688952DC
			
mov	dword ptr [esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+Time],	ebx
call	flap_connection_schedule_destroy
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68895738
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+Time],	esi
call	sub_68881818
test	eax, eax
jz	loc_6889531C
cmp	word ptr [ebx+5Ch], 17h
jz	loc_6889563C
mov	[esp+5Ch+Time],	esi
call	aim_tlvlist_read
mov	esi, eax
mov	dword ptr [esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 9
mov	[esp+5Ch+Time],	eax
call	aim_tlv_gettlv
test	eax, eax
jz	short loc_688954B1
mov	dword ptr [esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 9
mov	[esp+5Ch+Time],	esi
call	aim_tlv_get16
mov	[ebx+18h], ax
mov	dword ptr [esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 0Bh
mov	[esp+5Ch+Time],	esi
call	aim_tlv_gettlv
test	eax, eax
jz	loc_68895634
mov	dword ptr [esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 0Bh
mov	[esp+5Ch+Time],	esi
call	aim_tlv_getstr
mov	edi, eax
mov	dword ptr [esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+Time],	ebx
call	flap_connection_schedule_destroy
mov	[esp+5Ch+Time],	esi
call	aim_tlvlist_free
mov	[esp+5Ch+Time],	edi
call	g_free
jmp	loc_6889531C
mov	[esp+5Ch+Time],	esi
call	sub_68881A60
cmp	eax, 1
jz	loc_68895604
mov	dword ptr [esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aExpectingFlapV 
mov	[esp+5Ch+Time],	offset aOscar_10 
call	purple_debug_warning
mov	dword ptr [esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 5
mov	[esp+5Ch+Time],	ebx
call	flap_connection_schedule_destroy
jmp	loc_6889531C
align 4
mov	[esp+5Ch+Time],	esi
call	sub_68881818
cmp	eax, 9
jbe	loc_6889531C
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	word ptr [esp+5Ch+var_2C], ax
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	word ptr [esp+5Ch+var_2C+2], ax
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	word ptr [esp+5Ch+var_28], ax
mov	[esp+5Ch+Time],	esi
call	sub_68881A60
mov	[esp+5Ch+var_24], eax
cmp	word ptr [esp+5Ch+var_28], 0
js	loc_688956FF
mov	ecx, [edi+6Ch]
test	ecx, ecx
jnz	short loc_688955CC
jmp	loc_6889531C
mov	eax, [esp+5Ch+var_2C]
cmp	[ecx], ax
jz	short loc_688955D2
mov	ecx, [ecx+28h]
test	ecx, ecx
jz	loc_6889531C
test	byte ptr [ecx+8], 1
jz	short loc_688955B8
mov	[esp+5Ch+var_48], esi
lea	edx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], ebp
mov	dword ptr [esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	edi
mov	[esp+5Ch+var_34], ecx
call	dword ptr [ecx+1Ch]
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jz	short loc_688955C1
jmp	loc_6889531C
align 4
mov	dword ptr [ebx+4], 1
jmp	loc_6889531C
mov	[esp+5Ch+var_50], 0
mov	dword ptr [esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ecx
mov	eax, [ebx+2Ch]
mov	[esp+5Ch+Time],	eax
call	wpurple_recv
mov	esi, eax
jmp	loc_6889536F
align 4
xor	edi, edi
jmp	loc_688954EB
align 4
mov	word ptr [esp+5Ch+var_2C], 17h
mov	word ptr [esp+5Ch+var_2C+2], 3
mov	[esp+5Ch+var_24], 0
mov	word ptr [esp+5Ch+var_28], 0
mov	esi, [edi+6Ch]
test	esi, esi
jz	loc_6889531C
lea	edx, [ebx+44h]
mov	[esp+5Ch+var_30], edx
jmp	short loc_68895684
align 10h
mov	eax, [esp+5Ch+var_2C]
cmp	[esi], ax
jz	short loc_6889568A
mov	esi, [esi+28h]
test	esi, esi
jz	loc_6889531C
test	byte ptr [esi+8], 1
jz	short loc_68895670
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_48], edx
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], ebp
mov	dword ptr [esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	edi
call	dword ptr [esi+1Ch]
test	eax, eax
jz	short loc_68895679
jmp	loc_6889531C
align 4
			
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_6889543C
call	_errno
cmp	dword ptr [eax], 2733h
jz	loc_6889543C
call	_errno
mov	eax, [eax]
mov	[esp+5Ch+Time],	eax
call	wpurple_strerror
mov	dword ptr [esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+Time],	ebx
call	flap_connection_schedule_destroy
jmp	loc_6889543C
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
movzx	eax, ax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	esi
call	sub_68881904
jmp	loc_688955AC
mov	dword ptr [esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 5
mov	[esp+5Ch+Time],	ebx
call	flap_connection_schedule_destroy
jmp	loc_6889543C
call	__stack_chk_fail
align 10h
public flap_connection_findbygroup
			
push	ebx
sub	esp, 18h
movzx	ecx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ebx, [eax+0F0h]
test	ebx, ebx
jz	short loc_68895793
mov	eax, [ebx]
mov	edx, [eax+64h]
test	edx, edx
jnz	short loc_68895777
jmp	short loc_6889578C
align 10h
mov	edx, [edx+4]
test	edx, edx
jz	short loc_6889578C
cmp	[edx], ecx
jnz	short loc_68895770
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68895797
add	esp, 18h
pop	ebx
retn
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_68895762
xor	eax, eax
jmp	short loc_6889577B
call	__stack_chk_fail
public flap_connection_getbytype
			
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	edx, [eax+0F0h]
test	edx, edx
jnz	short loc_688957C7
jmp	short loc_688957EC
align 10h
			
mov	edx, [edx+4]
test	edx, edx
jz	short loc_688957EC
mov	eax, [edx]
movzx	ecx, word ptr [eax+5Ch]
cmp	ecx, ebx
jnz	short loc_688957C0
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_688957C0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688957F0
add	esp, 18h
pop	ebx
retn
align 4
			
xor	eax, eax
jmp	short loc_688957D8
call	__stack_chk_fail
align 4
public flap_connection_getbytype_all
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	edx, [eax+0F0h]
test	edx, edx
jnz	short loc_68895823
jmp	short loc_68895840
align 4
mov	edx, [edx+4]
test	edx, edx
jz	short loc_68895840
mov	eax, [edx]
movzx	ecx, word ptr [eax+5Ch]
cmp	ecx, ebx
jnz	short loc_6889581C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68895844
add	esp, 18h
pop	ebx
retn
align 10h
			
xor	eax, eax
jmp	short loc_6889582D
call	__stack_chk_fail
align 4
public flap_frame_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	ebx, eax
mov	edx, edi
mov	[eax], dl
test	esi, esi
jle	short loc_6889588A
mov	[esp+2Ch+var_28], esi
lea	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	sub_68881748
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889589F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public flap_connection_recv_cb
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688958CB
add	esp, 1Ch
jmp	loc_6889528C
call	__stack_chk_fail
public flap_connection_recv_cb_ssl
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688958F7
add	esp, 1Ch
jmp	loc_6889528C
call	__stack_chk_fail
public flap_connection_send
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [edi+60h]
inc	eax
mov	[edi+60h], ax
mov	[esi+2], ax
lea	ebp, [esi+4]
mov	[esp+4Ch+var_4C], ebp
call	sub_68881848
mov	[esp+4Ch+var_30], eax
add	eax, 6
mov	[esp+4Ch+var_48], eax
lea	ebx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881748
mov	[esp+4Ch+var_48], 2Ah
mov	[esp+4Ch+var_4C], ebx
call	sub_68881DA4
movzx	eax, byte ptr [esi]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881DA4
movzx	eax, word ptr [esi+2]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	[esp+4Ch+var_4C], ebp
call	sub_688818CC
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	sub_68882160
mov	[esp+4Ch+var_4C], ebx
call	sub_68881848
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	sub_688818CC
mov	[esp+4Ch+var_4C], ebx
call	sub_68881818
cmp	ebp, eax
ja	loc_68895A54
test	ebp, ebp
jnz	short loc_688959F0
			
mov	[esp+4Ch+var_4C], ebx
call	sub_688817E4
mov	eax, esi
call	sub_68894FC8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_68895A85
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], ebp
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], eax
mov	eax, [edi+50h]
mov	[esp+4Ch+var_4C], eax
call	purple_circ_buffer_append
mov	ebp, [edi+58h]
test	ebp, ebp
jnz	short loc_688959C6
mov	eax, [edi+30h]
test	eax, eax
jz	short loc_68895A64
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], offset sub_68895128
mov	[esp+4Ch+var_48], 2
mov	eax, [eax+1Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[edi+58h], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], edi
call	sub_68895128
jmp	loc_688959C6
mov	[esp+4Ch+var_4C], ebx
call	sub_68881818
mov	ebp, eax
jmp	loc_688959C2
align 4
mov	eax, [edi+2Ch]
test	eax, eax
js	loc_688959C6
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], offset sub_68895128
mov	[esp+4Ch+var_48], 2
jmp	short loc_68895A2C
call	__stack_chk_fail
align 4
public flap_connection_close
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_68895AB5
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx+30h]
test	eax, eax
jz	short loc_68895AD2
mov	edx, [eax+24h]
test	edx, edx
jz	short loc_68895AD2
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_close
mov	dword ptr [ebx+30h], 0
			
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_68895AE4
cmp	word ptr [ebx+5Ch], 0Eh
jz	loc_68895BD4
			
mov	eax, [ebx+2Ch]
test	eax, eax
js	loc_68895B9C
cmp	word ptr [ebx+5Ch], 2
jz	loc_68895BB2
			
mov	eax, [ebx+54h]
test	eax, eax
jnz	short loc_68895B70
mov	eax, [ebx+58h]
test	eax, eax
jnz	short loc_68895B86
			
mov	eax, [ebx+2Ch]
test	eax, eax
js	short loc_68895B1E
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	dword ptr [ebx+2Ch], 0FFFFFFFFh
mov	eax, [ebx+30h]
test	eax, eax
jz	short loc_68895B34
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_close
mov	dword ptr [ebx+30h], 0
mov	eax, [ebx+44h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+44h], 0
mov	eax, [ebx+50h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
mov	dword ptr [ebx+50h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_68895BE8
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+54h], 0
mov	eax, [ebx+58h]
test	eax, eax
jz	short loc_68895B08
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+58h], 0
jmp	loc_68895B08
align 4
mov	eax, [ebx+30h]
test	eax, eax
jz	loc_68895AFA
cmp	word ptr [ebx+5Ch], 2
jnz	loc_68895AFA
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	byte ptr [eax],	4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_send
jmp	loc_68895AFA
align 4
mov	[esp+2Ch+var_2C], eax
call	oscar_chat_destroy
mov	dword ptr [ebx+28h], 0
jmp	loc_68895AE4
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aDestroyingFlap 
mov	[esp+4Ch+var_4C], offset aOscar_10 
call	purple_debug_info
mov	esi, [ebx]
mov	eax, [esi+68h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	edi, eax
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_3C], eax
movzx	eax, word ptr [ebx+5Ch]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aDestroyingOsca 
mov	[esp+4Ch+var_4C], offset aOscar_10 
call	purple_debug_info
mov	[esp+4Ch+var_48], ebx
mov	eax, [esi+0F0h]
mov	[esp+4Ch+var_4C], eax
call	g_slist_remove
mov	[esi+0F0h], eax
mov	[esp+4Ch+var_44], 3
mov	[esp+4Ch+var_48], 0FFFFh
mov	[esp+4Ch+var_4C], esi
call	aim_callhandler
test	eax, eax
jz	short loc_68895CA8
mov	edx, [ebx+14h]
mov	[esp+4Ch+var_3C], edx
movzx	edx, word ptr [ebx+18h]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	eax
mov	ebp, [edi+20h]
test	ebp, ebp
jnz	short loc_68895CF4
mov	edx, [esi+0F0h]
test	edx, edx
jnz	loc_68895E1C
lea	esi, [esi+0]
cmp	word ptr [ebx+18h], 1
jz	loc_68895E88
mov	eax, [ebx+10h]
cmp	eax, 2
jz	loc_68895EB9
cmp	eax, 4
jz	loc_68895EDB
cmp	eax, 5
jz	loc_68895EEB
cmp	eax, 6
jz	loc_68895E39
xchg	ax, ax
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	flap_connection_close
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+4Ch+var_4C], eax
call	g_free
cmp	word ptr [ebx+5Ch], 0Eh
jz	loc_68895E28
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	g_slist_free
mov	eax, [ebx+68h]
test	eax, eax
jz	short loc_68895D54
nop
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebx+68h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], eax
call	g_slist_delete_link
mov	[ebx+68h], eax
test	eax, eax
jnz	short loc_68895D34
mov	eax, [ebx+70h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_destroy
mov	eax, [ebx+74h]
test	eax, eax
jnz	short loc_68895D82
jmp	short loc_68895D99
call	g_queue_pop_head
mov	esi, eax
mov	eax, [eax+4]
call	sub_68894FC8
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [ebx+74h]
mov	[esp+4Ch+var_4C], eax
call	g_queue_is_empty
test	eax, eax
mov	eax, [ebx+74h]
mov	[esp+4Ch+var_4C], eax
jz	short loc_68895D68
call	g_queue_free
mov	eax, [ebx+78h]
test	eax, eax
jnz	short loc_68895DBE
jmp	short loc_68895DD5
align 4
call	g_queue_pop_head
mov	esi, eax
mov	eax, [eax+4]
call	sub_68894FC8
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [ebx+78h]
mov	[esp+4Ch+var_4C], eax
call	g_queue_is_empty
test	eax, eax
mov	eax, [ebx+78h]
mov	[esp+4Ch+var_4C], eax
jz	short loc_68895DA4
call	g_queue_free
mov	eax, [ebx+7Ch]
test	eax, eax
jz	short loc_68895DE4
mov	[esp+4Ch+var_4C], eax
call	purple_timeout_remove
mov	[esp+4Ch+var_4C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68895F0F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ecx, [eax+4]
test	ecx, ecx
jnz	loc_68895CF4
mov	edx, [edx+4]
test	edx, edx
jz	loc_68895CC0
mov	eax, [edx]
cmp	word ptr [eax+5Ch], 2
jnz	short loc_68895E11
jmp	short loc_68895E06
align 4
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	flap_connection_destroy_chat
jmp	loc_68895D21
mov	edi, [ebx+14h]
mov	[esp+4Ch+var_48], offset aUnableToConnec 
mov	[esp+4Ch+var_4C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	ebp, eax
xor	eax, eax
			
test	ebp, ebp
jz	loc_68895CF4
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+68h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
mov	[esp+4Ch+var_4C], ebp
call	g_free
jmp	loc_68895CF4
mov	[esp+4Ch+var_48], offset aYouHaveSignedO 
mov	[esp+4Ch+var_4C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_remember_password
test	eax, eax
jz	short loc_68895EF5
mov	eax, 6
jmp	short loc_68895E60
mov	[esp+4Ch+var_48], offset aServerClosedTh 
mov	[esp+4Ch+var_4C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	ebp, eax
xor	eax, eax
jmp	short loc_68895E60
mov	edi, [ebx+14h]
mov	[esp+4Ch+var_48], offset aLostConnection 
jmp	loc_68895E44
mov	[esp+4Ch+var_48], offset aReceivedInvali 
jmp	short loc_68895EC1
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], edi
call	purple_account_set_password
mov	eax, 6
jmp	loc_68895E60
call	__stack_chk_fail
public flap_connection_destroy
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_68895F40
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	[ebx+10h], edi
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+14h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68895F74
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_68895BF0
call	__stack_chk_fail
align 4
public flap_connection_send_keepalive
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	byte ptr [eax],	5
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68895FD1
mov	[esp+2Ch+arg_4], 3Ch
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	aim_cleansnacs
call	__stack_chk_fail
align 4
public flap_connection_send_snac_with_priority
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	ecx, [esp+6Ch+arg_10]
mov	ebx, [esp+6Ch+arg_14]
mov	edx, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_34], edx
mov	ebp, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_3A], dx
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	loc_68896208
mov	edx, [ebx+8]
lea	esi, [edx+0Ah]
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_4C], edx
mov	[esp+6Ch+var_48], ecx
call	flap_frame_new
mov	[esp+6Ch+var_40], eax
movzx	eax, [esp+6Ch+var_3A]
mov	[esp+6Ch+var_44], eax
movzx	esi, bp
mov	eax, [esp+6Ch+var_40]
add	eax, 4
mov	[esp+6Ch+var_38], eax
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_60], ecx
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], eax
call	aim_putsnac
mov	edx, [esp+6Ch+var_4C]
test	edx, edx
jz	short loc_688960A2
mov	[esp+6Ch+var_6C], ebx
call	sub_688818CC
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], ebx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], edx
call	sub_68882160
			
mov	eax, [edi+7Ch]
test	eax, eax
jz	short loc_68896120
mov	[esp+6Ch+var_6C], 8
call	g_malloc
mov	ebx, eax
mov	[eax], bp
mov	cx, [esp+6Ch+var_3A]
mov	[eax+2], cx
mov	eax, [esp+6Ch+var_40]
mov	[ebx+4], eax
mov	eax, [esp+6Ch+var_34]
test	eax, eax
jnz	short loc_6889610C
mov	eax, [edi+78h]
test	eax, eax
jz	loc_68896284
			
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], eax
call	g_queue_push_tail
mov	eax, [edi+7Ch]
test	eax, eax
jz	loc_68896254
			
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_68896291
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [edi+74h]
test	eax, eax
jnz	short loc_688960DD
call	g_queue_new
mov	[edi+74h], eax
jmp	short loc_688960DD
align 10h
shl	esi, 10h
mov	eax, [esp+6Ch+var_44]
add	eax, esi
mov	[esp+6Ch+var_68], eax
mov	eax, [edi+70h]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	loc_68896274
mov	[esp+6Ch+var_68], 0
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_6C], eax
call	wpurple_gettimeofday
mov	ecx, [esp+6Ch+var_28]
mov	[esp+6Ch+var_38], ecx
mov	esi, [esp+6Ch+var_24]
mov	eax, ecx
sub	eax, [ebx+24h]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
mov	[esp+6Ch+var_30], eax
mov	ecx, esi
sub	ecx, [ebx+28h]
mov	eax, 10624DD3h
imul	ecx
mov	eax, edx
sar	eax, 6
sar	ecx, 1Fh
sub	eax, ecx
mov	ecx, [esp+6Ch+var_30]
lea	edx, [eax+ecx*8]
mov	eax, [ebx+4]
dec	eax
imul	eax, [ebx+18h]
add	eax, edx
xor	edx, edx
div	dword ptr [ebx+4]
mov	ecx, [ebx+1Ch]
cmp	eax, ecx
ja	short loc_688961D8
cmp	byte ptr [ebx+20h], 0
mov	edx, [ebx+0Ch]
jnz	short loc_688961E3
cmp	edx, eax
jnb	short loc_688961E3
mov	[ebx+18h], eax
mov	ecx, [esp+6Ch+var_38]
mov	[ebx+24h], ecx
mov	[ebx+28h], esi
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	flap_connection_send
jmp	loc_688960F4
align 4
mov	eax, ecx
cmp	byte ptr [ebx+20h], 0
mov	edx, [ebx+0Ch]
jz	short loc_688961B0
			
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aCurrentRateFor 
mov	[esp+6Ch+var_6C], offset aOscar_10 
call	purple_debug_info
jmp	loc_688960A9
mov	[esp+6Ch+var_64], 0Ah
mov	[esp+6Ch+var_68], 2
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_48], ecx
call	flap_frame_new
mov	[esp+6Ch+var_40], eax
movzx	edx, [esp+6Ch+var_3A]
mov	[esp+6Ch+var_44], edx
movzx	esi, bp
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_60], ecx
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], esi
add	eax, 4
mov	[esp+6Ch+var_6C], eax
call	aim_putsnac
jmp	loc_688960A2
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset sub_68896420
mov	[esp+6Ch+var_6C], 1F4h
call	purple_timeout_add
mov	[edi+7Ch], eax
jmp	loc_688960F4
mov	ebx, [edi+6Ch]
test	ebx, ebx
jz	loc_688961C1
jmp	loc_68896142
call	g_queue_new
mov	[edi+78h], eax
jmp	loc_688960DD
call	__stack_chk_fail
align 4
public flap_connection_send_snac
			
sub	esp, 3Ch
movzx	eax, [esp+3Ch+arg_8]
movzx	edx, [esp+3Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
mov	[esp+3Ch+var_24], 1
mov	ecx, [esp+3Ch+arg_14]
mov	[esp+3Ch+var_28], ecx
mov	ecx, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_2C], ecx
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	flap_connection_send_snac_with_priority
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688962F5
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, eax
mov	[esp+5Ch+var_38], ecx
mov	ebp, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_34], edx
jmp	loc_688963B4
align 4
			
mov	eax, [esp+5Ch+var_34]
sub	eax, [ecx+24h]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
mov	[esp+5Ch+var_30], eax
mov	edi, [esp+5Ch+var_38]
sub	edi, [ecx+28h]
mov	eax, 10624DD3h
imul	edi
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_40], edx
mov	eax, [esp+5Ch+var_40]
sar	eax, 6
sar	edi, 1Fh
sub	eax, edi
mov	edi, [esp+5Ch+var_30]
lea	edx, [eax+edi*8]
mov	eax, [ecx+4]
dec	eax
imul	eax, [ecx+18h]
add	eax, edx
xor	edx, edx
div	dword ptr [ecx+4]
mov	edx, [ecx+1Ch]
cmp	eax, edx
jbe	short loc_68896379
mov	eax, edx
cmp	byte ptr [ecx+20h], 0
jnz	short loc_688963FC
cmp	[ecx+0Ch], eax
jnb	short loc_688963FC
mov	[ecx+18h], eax
mov	edx, [esp+5Ch+var_34]
mov	[ecx+24h], edx
mov	edi, [esp+5Ch+var_38]
mov	[ecx+28h], edi
mov	eax, [ebx+4]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	[esp+5Ch+var_5C], ebp
call	g_queue_pop_head
mov	[esp+5Ch+var_5C], ebp
call	g_queue_is_empty
test	eax, eax
jnz	short loc_68896414
mov	[esp+5Ch+var_5C], ebp
call	g_queue_peek_head
mov	ebx, eax
movzx	eax, word ptr [eax]
shl	eax, 10h
movzx	edx, word ptr [ebx+2]
add	eax, edx
mov	[esp+5Ch+var_58], eax
mov	eax, [esi+70h]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	ecx, eax
test	eax, eax
jnz	loc_68896324
mov	ecx, [esi+6Ch]
test	ecx, ecx
jnz	loc_68896324
jmp	short loc_68896395
			
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889641B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, 1
jmp	short loc_688963FE
call	__stack_chk_fail
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 0
lea	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+var_3C], eax
call	wpurple_gettimeofday
mov	eax, [ebx+78h]
test	eax, eax
jz	loc_688964E8
mov	edx, [eax+8]
mov	eax, [ebx+74h]
test	eax, eax
jz	loc_688964E0
mov	eax, [eax+8]
mov	[esp+3Ch+var_2C], ebx
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aAttemptingToSe 
mov	[esp+3Ch+var_3C], offset aOscar_10 
call	purple_debug_info
mov	eax, [ebx+74h]
test	eax, eax
jz	short loc_688964A0
mov	[esp+3Ch+var_3C], eax
mov	edx, [esp+3Ch+var_18]
mov	ecx, [esp+3Ch+var_14]
mov	eax, ebx
call	sub_688962FC
test	eax, eax
jz	short loc_688964D8
mov	eax, [ebx+78h]
test	eax, eax
jz	short loc_688964BD
mov	[esp+3Ch+var_3C], eax
mov	edx, [esp+3Ch+var_18]
mov	ecx, [esp+3Ch+var_14]
mov	eax, ebx
call	sub_688962FC
test	eax, eax
jz	short loc_688964D8
mov	dword ptr [ebx+7Ch], 0
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688964EF
add	esp, 38h
pop	ebx
retn
align 4
			
mov	eax, 1
jmp	short loc_688964C6
align 10h
xor	eax, eax
jmp	loc_68896463
align 4
xor	edx, edx
jmp	loc_68896455
call	__stack_chk_fail
public flap_connection_send_version_with_cookie_and_clientinfo
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], eax
mov	edx, [esp+4Ch+arg_C]
mov	esi, [esp+4Ch+arg_10]
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_30], eax
movzx	ebx, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_24], 0
lea	eax, [ebx+480h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], edx
call	flap_frame_new
mov	edi, eax
lea	ebp, [eax+4]
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], ebp
call	sub_68881E8C
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 6
lea	ebx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_raw
mov	eax, [esi]
test	eax, eax
jz	loc_6889665C
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_str
movzx	eax, word ptr [esi+6]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 17h
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+8]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 18h
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+0Ah]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 19h
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_16
movzx	eax, word ptr [esi+0Ch]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 1Ah
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_16
cmp	[esp+4Ch+var_30], 1
sbb	eax, eax
and	eax, 2
inc	eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 4Ah
mov	[esp+4Ch+var_4C], ebx
call	aim_tlvlist_add_8
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebp
call	aim_tlvlist_write
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	aim_tlvlist_free
mov	[esp+4Ch+var_48], edi
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	flap_connection_send
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889668A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	oscar_get_clientstring
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_38], eax
call	aim_tlvlist_add_str
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	g_free
jmp	loc_688965A0
call	__stack_chk_fail
align 10h
public flap_connection_send_version_with_cookie
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_C]
movzx	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_24], 0
lea	eax, [edi+8]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	flap_frame_new
mov	ebx, eax
lea	esi, [eax+4]
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], esi
call	sub_68881E8C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], 6
lea	edi, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], edi
call	aim_tlvlist_add_raw
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	aim_tlvlist_write
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	aim_tlvlist_free
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebp
call	flap_connection_send
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68896743
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public flap_connection_send_version
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	flap_frame_new
mov	ebx, eax
mov	[esp+2Ch+var_28], 1
lea	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	sub_68881E8C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688967AB
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	flap_connection_send
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ecx, [esp+5Ch+arg_C]
mov	ebx, [esp+5Ch+arg_10]
mov	ebp, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
movzx	eax, word ptr [ebx+2]
cmp	ax, 1
jz	short loc_68896844
cmp	dword ptr [ebx], 0FFFFFFFFh
jz	short loc_68896800
xor	eax, eax
			
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_68896904
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], ecx
call	aim_callhandler
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jz	short loc_688967E5
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68896904
mov	[esp+5Ch+arg_8], ecx
mov	[esp+5Ch+arg_4], edi
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	eax, [ebx+8]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], ecx
call	aim_remsnac
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], ebp
call	sub_68881818
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jnz	short loc_688968E8
xor	ebp, ebp
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_54], eax
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], ecx
call	aim_callhandler
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jz	short loc_688968FC
mov	ebx, [esp+5Ch+var_30]
test	ebx, ebx
jz	short loc_68896900
mov	edx, [esp+5Ch+var_30]
mov	ebx, [edx+0Ch]
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	eax
mov	edx, [esp+5Ch+var_30]
test	edx, edx
jz	loc_688967E7
mov	ecx, [esp+5Ch+var_30]
mov	edx, [ecx+0Ch]
mov	[esp+5Ch+var_5C], edx
mov	[esp+5Ch+var_34], eax
call	g_free
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_free
mov	eax, [esp+5Ch+var_34]
jmp	loc_688967E7
mov	[esp+5Ch+var_5C], ebp
call	sub_688819F0
movzx	ebp, ax
mov	ecx, [esp+5Ch+var_34]
jmp	loc_6889686D
xor	eax, eax
jmp	short loc_688968B4
xor	ebx, ebx
jmp	short loc_6889689F
			
call	__stack_chk_fail
align 4
public aim_genericreq_n
			
sub	esp, 3Ch
movzx	eax, [esp+3Ch+arg_8]
movzx	edx, [esp+3Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	flap_connection_send_snac
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68896961
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public aim_genericreq_n_snacid
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
movzx	esi, [esp+4Ch+arg_8]
movzx	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	aim_cachesnac
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	flap_connection_send_snac
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688969E8
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public aim_genericreq_l
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_10]
movzx	edi, [esp+5Ch+arg_8]
movzx	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_68896ABC
mov	[esp+5Ch+var_58], 4
lea	ebx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_38], ecx
call	sub_68881748
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	aim_cachesnac
mov	[esp+5Ch+var_30], eax
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	sub_68881E8C
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], edi
mov	ecx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], esi
call	flap_connection_send_snac
mov	[esp+5Ch+var_5C], ebx
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68896AD2
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], esi
call	aim_genericreq_n
jmp	short loc_68896AA6
call	__stack_chk_fail
align 4
public misc_modfirst
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	word ptr [ebx],	0FFFFh
mov	word ptr [ebx+2], 0
mov	word ptr [ebx+8], 1
mov	[esp+2Ch+Count], 11h 
mov	[esp+2Ch+Source], offset aMisc 
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+1Ch], offset sub_688967B0
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896B31
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public aim_uncachecookie
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	short loc_68896BAE
mov	ebx, [edi+0B4h]
test	ebx, ebx
jz	short loc_68896B98
add	edi, 0B4h
jmp	short loc_68896B76
			
lea	edi, [ebx+14h]
mov	ebx, [ebx+14h]
test	ebx, ebx
jz	short loc_68896B98
cmp	[ebx+8], esi
jnz	short loc_68896B6C
mov	[esp+3Ch+Size],	8 
mov	[esp+3Ch+Buf2],	ebp 
mov	[esp+3Ch+Buf1],	ebx 
call	memcmp
test	eax, eax
jnz	short loc_68896B6C
mov	eax, [ebx+14h]
mov	[edi], eax
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896BB2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	ebx, ebx
jmp	short loc_68896B98
call	__stack_chk_fail
align 4
public aim_mkcookie
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_68896C08
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
mov	[eax+0Ch], edi
mov	[eax+8], esi
mov	edx, [ebx]
mov	[eax], edx
mov	edx, [ebx+4]
mov	[eax+4], edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896C0C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
xor	eax, eax
jmp	short loc_68896BF5
call	__stack_chk_fail
align 4
public aim_checkcookie
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+0B4h]
test	ebx, ebx
jnz	short loc_68896C47
jmp	short loc_68896C64
align 10h
			
mov	ebx, [ebx+14h]
test	ebx, ebx
jz	short loc_68896C64
cmp	[ebx+8], esi
jnz	short loc_68896C40
mov	[esp+2Ch+Size],	8 
mov	[esp+2Ch+Buf2],	edi 
mov	[esp+2Ch+Buf1],	ebx 
call	memcmp
test	eax, eax
jnz	short loc_68896C40
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896C79
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public aim_cookie_free
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_68896CEB
test	ebx, ebx
jz	short loc_68896CEB
lea	edx, [eax+0B4h]
mov	eax, [eax+0B4h]
test	eax, eax
jz	short loc_68896CBE
cmp	ebx, eax
jz	short loc_68896CE4
lea	edx, [eax+14h]
mov	eax, [eax+14h]
test	eax, eax
jnz	short loc_68896CB0
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896CF2
add	esp, 28h
pop	ebx
retn
mov	eax, [ebx+14h]
mov	[edx], eax
jmp	short loc_68896CAC
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68896CD3
call	__stack_chk_fail
align 4
public aim_cachecookie
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_68896D90
test	ebx, ebx
jz	short loc_68896D90
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax 
mov	[esp+2Ch+var_28], ebx 
mov	[esp+2Ch+Time],	esi 
call	aim_checkcookie
mov	edi, eax
cmp	eax, ebx
jz	short loc_68896D78
test	eax, eax
jz	short loc_68896D42
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Time],	esi
call	aim_cookie_free
mov	[esp+2Ch+Time],	0 
call	time
mov	[ebx+10h], eax
mov	eax, [esi+0B4h]
mov	[ebx+14h], eax
mov	[esi+0B4h], ebx
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68896D97
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+Time],	0 
call	time
mov	[edi+10h], eax
mov	eax, 1
jmp	short loc_68896D62
align 10h
			
mov	eax, 0FFFFFFEAh
jmp	short loc_68896D62
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edx+34h]
mov	[esp+5Ch+var_48], eax
movzx	eax, word ptr [edx+0Eh]
mov	[esp+5Ch+var_4C], eax
movzx	eax, word ptr [edx]
mov	[esp+5Ch+var_50], eax
mov	eax, [ebp+10h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aOutgoingOdcFra 
mov	[esp+5Ch+var_5C], offset aOscar_11 
call	purple_debug_info
mov	eax, [ebp+0]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_username
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
lea	edx, [ebx+10h]
mov	edi, edx
rep movsb
lea	edi, [ebx+4]
mov	eax, [ebp+18h]
mov	[ebx+4], eax
mov	eax, [ebp+1Ch]
mov	[ebx+8], eax
mov	eax, [ebx+34h]
add	eax, 4Ch
mov	[esp+5Ch+var_58], eax
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_30], edx
call	sub_68881748
mov	[esp+5Ch+var_54], 4
lea	eax, [ebp+14h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	[esp+5Ch+var_58], 4Ch
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+2]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_54], 8
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E8C
movzx	eax, word ptr [ebx+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+0Eh]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_54], 20h
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+30h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	peer_connection_send
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68896FA8
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_64], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], ecx
xor	ecx, ecx
mov	edx, [edx+3Ch]
mov	[esp+9Ch+var_68], edx
mov	ecx, edx
mov	edx, [edx+38h]
mov	[esp+9Ch+var_90], 0
mov	eax, [ecx+34h]
sub	eax, edx
mov	[esp+9Ch+var_94], eax
add	edx, [ecx+30h]
mov	[esp+9Ch+var_98], edx
mov	edx, [esp+9Ch+var_64]
mov	eax, [edx+54h]
mov	[esp+9Ch+Str], eax
call	wpurple_recv
cmp	eax, 0
jz	loc_68897374
jl	loc_68897504
mov	ecx, [esp+9Ch+var_68]
add	eax, [ecx+38h]
mov	[ecx+38h], eax
mov	edx, [ecx+34h]
cmp	eax, edx
jnb	short loc_68897040
			
mov	ecx, [esp+9Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_688975E9
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	eax, [ecx+30h]
mov	byte ptr [eax+edx], 0
mov	eax, ecx
add	eax, 30h
mov	[esp+9Ch+Str], eax
call	sub_688818CC
mov	edx, [esp+9Ch+var_68]
mov	dx, [edx+0Eh]
and	edx, 1
mov	[esp+9Ch+var_40], dx
mov	ecx, [esp+9Ch+var_68]
mov	ecx, [ecx+0Ch]
mov	[esp+9Ch+var_3E], cx
mov	edx, [esp+9Ch+var_68]
mov	ebx, [edx+34h]
mov	edi, [edx+30h]
mov	ecx, [esp+9Ch+var_64]
add	ecx, 10h
mov	[esp+9Ch+var_4C], ecx
mov	edx, [esp+9Ch+var_64]
mov	eax, [edx]
mov	eax, [eax+68h]
mov	[esp+9Ch+var_44], eax
mov	[esp+9Ch+Str], eax
call	purple_connection_get_account
mov	[esp+9Ch+var_54], eax
add	ebx, edi
mov	[esp+9Ch+var_6C], ebx
mov	[esp+9Ch+var_90], offset g_free
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], offset loc_688ABD08
mov	[esp+9Ch+Str], offset loc_688ABD10
call	g_hash_table_new_full
mov	[esp+9Ch+var_58], eax
mov	[esp+9Ch+var_98], offset aBinary 
mov	[esp+9Ch+Str], edi
call	purple_strcasestr
mov	[esp+9Ch+var_48], eax
test	eax, eax
jz	loc_688975BC
add	eax, 8
mov	[esp+9Ch+var_30], eax
mov	edx, [esp+9Ch+var_48]
add	edx, 25h
lea	ebx, [esp+9Ch+var_24]
cmp	[esp+9Ch+var_6C], edx
jb	loc_688975C8
lea	edx, [esp+9Ch+var_2C]
mov	[esp+9Ch+var_60], edx
mov	[esp+9Ch+var_5C], edi
jmp	loc_688971EF
align 4
inc	[esp+9Ch+var_30]
mov	[esp+9Ch+Str], offset aId 
call	g_quark_try_string
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
test	eax, eax
jz	loc_68897550
mov	[esp+9Ch+Str], eax 
call	atoi
mov	edi, eax
mov	[esp+9Ch+Str], offset aSize 
call	g_quark_try_string
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
test	eax, eax
jz	loc_68897550
mov	[esp+9Ch+Str], eax 
call	atol
mov	esi, eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_clear
test	esi, esi
jz	short loc_6889718C
mov	eax, [esp+9Ch+var_30]
add	eax, esi
cmp	[esp+9Ch+var_6C], eax
jb	loc_6889721B
mov	[esp+9Ch+Str], 8
call	g_malloc
mov	ebp, eax
mov	[eax], esi
mov	eax, [esp+9Ch+var_30]
mov	[ebp+4], eax
add	esi, eax
mov	[esp+9Ch+var_30], esi
mov	[esp+9Ch+var_94], 7
mov	[esp+9Ch+var_98], offset aData_1 
mov	[esp+9Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_688975D8
add	[esp+9Ch+var_30], 7
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], edi
mov	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+Str], eax
call	g_hash_table_insert
mov	eax, [esp+9Ch+var_30]
lea	edx, [eax+1Dh]
cmp	[esp+9Ch+var_6C], edx
jb	short loc_6889721B
mov	[esp+9Ch+var_8C], ebx
lea	edx, [esp+9Ch+var_30]
mov	[esp+9Ch+var_90], edx
mov	ecx, [esp+9Ch+var_60]
mov	[esp+9Ch+var_94], ecx
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], offset aData_0 
call	purple_markup_find_tag
test	eax, eax
jnz	loc_68897118
			
mov	edi, [esp+9Ch+var_5C]
			
mov	[esp+9Ch+Str], offset byte_688B1754
call	g_string_new
mov	[esp+9Ch+var_5C], eax
mov	[esp+9Ch+var_30], edi
xor	esi, esi
movzx	edx, [esp+9Ch+var_3E]
mov	[esp+9Ch+var_50], edx
mov	ebp, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_4C], esi
xchg	ax, ax
mov	[esp+9Ch+var_8C], ebx
lea	edx, [esp+9Ch+var_28]
mov	[esp+9Ch+var_90], edx
mov	ecx, [esp+9Ch+var_60]
mov	[esp+9Ch+var_94], ecx
mov	[esp+9Ch+var_98], edi
mov	[esp+9Ch+Str], offset aImg_0 
call	purple_markup_find_tag
test	eax, eax
jz	loc_688973F4
mov	[esp+9Ch+Str], offset aId 
call	g_quark_try_string
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
mov	edi, eax
mov	[esp+9Ch+Str], offset aSrc 
call	g_quark_try_string
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
mov	esi, eax
mov	[esp+9Ch+Str], offset aDatasize	
call	g_quark_try_string
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
test	edi, edi
jz	short loc_6889730A
test	esi, esi
jz	short loc_6889730A
test	eax, eax
jz	short loc_6889730A
mov	[esp+9Ch+Str], edi 
mov	[esp+9Ch+var_70], eax
call	atoi
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+Str], edx 
mov	[esp+9Ch+var_70], eax
call	atol
mov	edi, eax
mov	ecx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_98], ecx
mov	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+Str], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_6889730A
cmp	edi, [eax]
jz	loc_68897398
			
xor	esi, esi
mov	[esp+9Ch+Str], ebx
call	g_datalist_clear
mov	edx, [esp+9Ch+var_30]
mov	eax, [esp+9Ch+var_2C]
sub	eax, edx
mov	[esp+9Ch+var_8C], eax 
mov	[esp+9Ch+var_90], edx 
mov	edx, [esp+9Ch+var_50]
mov	[esp+9Ch+var_94], edx 
mov	eax, [ebp+0]
mov	[esp+9Ch+var_98], eax 
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+Str], eax 
call	oscar_decode_im
mov	edi, eax
test	eax, eax
jz	short loc_6889735F
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], eax
call	g_string_append
mov	[esp+9Ch+Str], edi
call	g_free
test	esi, esi
jnz	short loc_688973D4
mov	edi, [esp+9Ch+var_28]
inc	edi
mov	[esp+9Ch+var_30], edi
jmp	loc_68897248
align 4
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], 2
mov	ecx, [esp+9Ch+var_64]
mov	[esp+9Ch+Str], ecx
call	peer_connection_destroy
jmp	loc_68897024
align 4
mov	[esp+9Ch+var_98], edi
mov	eax, [eax+4]
mov	[esp+9Ch+Str], eax
call	g_memdup
mov	[esp+9Ch+var_94], esi
mov	[esp+9Ch+var_98], edi
mov	[esp+9Ch+Str], eax
call	purple_imgstore_add_with_id
mov	esi, eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str], eax
call	g_slist_append
mov	[esp+9Ch+var_4C], eax
jmp	loc_6889730C
align 4
mov	[esp+9Ch+var_94], esi
mov	[esp+9Ch+var_98], offset aImgIdD 
mov	eax, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], eax
call	g_string_append_printf
jmp	loc_68897363
align 4
mov	esi, [esp+9Ch+var_4C]
mov	ebx, esi
mov	eax, [esp+9Ch+var_30]
cmp	eax, [esp+9Ch+var_48]
jbe	loc_68897564
			
cmp	esi, 1
sbb	edi, edi
not	edi
and	edi, 1000h
cmp	[esp+9Ch+var_40], 0
jz	short loc_68897420
or	edi, 8
mov	[esp+9Ch+Str], 0 
call	time
mov	[esp+9Ch+var_8C], eax
mov	[esp+9Ch+var_90], edi
mov	edx, [esp+9Ch+var_5C]
mov	eax, [edx]
mov	[esp+9Ch+var_94], eax
mov	ecx, [esp+9Ch+var_64]
mov	eax, [ecx+10h]
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_44]
mov	[esp+9Ch+Str], edx
call	serv_got_im
mov	[esp+9Ch+var_98], 1
mov	eax, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], eax
call	g_string_free
test	esi, esi
jz	short loc_68897489
lea	esi, [esi+0]
mov	eax, [esi]
mov	[esp+9Ch+Str], eax
call	purple_imgstore_unref_by_id
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_68897470
mov	[esp+9Ch+Str], ebx
call	g_slist_free
mov	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+Str], eax
call	g_hash_table_destroy
mov	edx, [esp+9Ch+var_68]
mov	eax, [edx+30h]
mov	[esp+9Ch+Str], eax
call	g_free
mov	ecx, [esp+9Ch+var_68]
mov	dword ptr [ecx+30h], 0
mov	[esp+9Ch+Str], ecx
call	g_free
mov	edx, [esp+9Ch+var_64]
mov	dword ptr [edx+3Ch], 0
mov	eax, [edx+84h]
mov	[esp+9Ch+Str], eax
call	purple_input_remove
mov	ecx, [esp+9Ch+var_64]
mov	[esp+9Ch+var_90], ecx
mov	[esp+9Ch+var_94], offset peer_connection_recv_cb
mov	[esp+9Ch+var_98], 1
mov	eax, [ecx+54h]
mov	[esp+9Ch+Str], eax
call	purple_input_add
mov	edx, [esp+9Ch+var_64]
mov	[edx+84h], eax
jmp	loc_68897024
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_68897024
call	_errno
cmp	dword ptr [eax], 2733h
jz	loc_68897024
call	_errno
mov	eax, [eax]
mov	[esp+9Ch+Str], eax
call	wpurple_strerror
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 4
mov	edx, [esp+9Ch+var_64]
mov	[esp+9Ch+Str], edx
call	peer_connection_destroy
jmp	loc_68897024
align 10h
			
mov	edi, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], ebx
call	g_datalist_clear
jmp	loc_6889721F
align 4
mov	edx, [esp+9Ch+var_48]
sub	edx, eax
mov	[esp+9Ch+var_8C], edx 
mov	[esp+9Ch+var_90], eax 
movzx	eax, [esp+9Ch+var_3E]
mov	[esp+9Ch+var_94], eax 
mov	edx, [esp+9Ch+var_64]
mov	eax, [edx+10h]
mov	[esp+9Ch+var_98], eax 
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+Str], eax 
call	oscar_decode_im
mov	edi, eax
test	eax, eax
jz	loc_68897408
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], eax
call	g_string_append
mov	[esp+9Ch+Str], edi
call	g_free
jmp	loc_68897408
align 4
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_48], edx
lea	ebx, [esp+9Ch+var_24]
lea	ecx, [esp+9Ch+var_2C]
mov	[esp+9Ch+var_60], ecx
jmp	loc_6889721F
align 4
mov	edi, [esp+9Ch+var_5C]
mov	[esp+9Ch+Str], ebp
call	g_free
jmp	loc_6889721F
call	__stack_chk_fail
align 10h
public peer_odc_close
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+34h]
cmp	eax, 2
jz	loc_68897700
cmp	eax, 3
jz	loc_68897710
cmp	eax, 4
jz	loc_68897720
cmp	eax, 5
jz	loc_6889774C
cmp	eax, 6
jz	short loc_6889767C
			
mov	ebx, [ebx+3Ch]
test	ebx, ebx
jz	short loc_68897664
mov	eax, [ebx+30h]
mov	[esp+3Ch+Time],	eax
call	g_free
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_68897759
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_68897759
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_38], offset aUnableToEstabl 
			
mov	[esp+3Ch+Time],	offset aPidgin_5 
call	libintl_dgettext
mov	[esp+3Ch+Time],	eax
call	g_strdup
mov	esi, eax
test	esi, esi
jz	short loc_68897631
mov	eax, [ebx]
mov	eax, [eax+68h]
mov	[esp+3Ch+Time],	eax
call	purple_connection_get_account
mov	edx, [ebx+10h]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	1
call	purple_conversation_new
mov	edi, eax
mov	[esp+3Ch+Time],	0 
call	time
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 4
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+Time],	edi
call	purple_conversation_write
mov	[esp+3Ch+Time],	esi
call	g_free
jmp	loc_68897631
align 10h
mov	[esp+3Ch+var_38], offset aTheRemoteUserH 
jmp	loc_68897684
align 10h
mov	[esp+3Ch+var_38], offset aTheRemoteUse_0 
jmp	loc_68897684
align 10h
mov	esi, [ebx+38h]
mov	[esp+3Ch+var_38], offset aLostConnecti_0 
mov	[esp+3Ch+Time],	offset aPidgin_5 
call	libintl_dgettext
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_6889769A
align 4
mov	[esp+3Ch+var_38], offset aReceivedInva_0 
jmp	loc_68897684
			
call	__stack_chk_fail
align 10h
public peer_odc_send_cookie
			
push	edi
sub	esp, 48h
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	edx, esp
mov	ecx, 3Ch
mov	edi, esp
rep stosb
mov	[esp+4Ch+var_4C], 1
mov	[esp+4Ch+var_4A], 6
mov	[esp+4Ch+var_3E], 60h
mov	eax, [esp+4Ch+arg_0]
call	sub_68896D9C
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688977A8
add	esp, 48h
pop	edi
retn
call	__stack_chk_fail
align 10h
public peer_odc_send_typing
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	ecx, 3Ch
mov	edi, esp
rep stosb
mov	[esp+4Ch+var_4C], 1
mov	[esp+4Ch+var_4A], 6
cmp	esi, 1
jz	short loc_6889780C
cmp	esi, 2
jz	short loc_68897818
mov	[esp+4Ch+var_3E], 2
			
mov	edx, esp
mov	eax, ebx
call	sub_68896D9C
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68897821
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+4Ch+var_3E], 0Ah
jmp	short loc_688977F0
align 4
mov	[esp+4Ch+var_3E], 6
jmp	short loc_688977F0
call	__stack_chk_fail
align 4
public peer_odc_send_im
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_60], eax
mov	esi, [esp+7Ch+arg_4]
mov	ebx, [esp+7Ch+arg_8]
mov	ebp, [esp+7Ch+arg_C]
mov	edx, [esp+7Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_6889790C
test	ebx, ebx
jle	short loc_688978EC
lea	eax, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_64], eax
mov	ecx, 3Ch
xor	eax, eax
mov	edi, [esp+7Ch+var_64]
rep stosb
mov	[esp+7Ch+var_5C], 1
mov	[esp+7Ch+var_5A], 6
mov	[esp+7Ch+var_28], ebx
mov	[esp+7Ch+var_50], bp
mov	[esp+7Ch+var_4E], dx
mov	[esp+7Ch+var_78], ebx
lea	ebp, [esp+7Ch+var_2C]
mov	[esp+7Ch+var_7C], ebp
call	sub_68881748
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebp
call	sub_688820A0
lea	edx, [esp+7Ch+var_5C]
mov	eax, [esp+7Ch+var_60]
call	sub_68896D9C
mov	eax, [esp+7Ch+var_2C]
mov	[esp+7Ch+var_7C], eax
call	g_free
			
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889792A
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_74], offset aLen0 
mov	[esp+7Ch+var_78], offset aPeer_odc_send_ 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	short loc_688978D7
align 4
mov	[esp+7Ch+var_74], offset aMsgNull 
mov	[esp+7Ch+var_78], offset aPeer_odc_send_ 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	short loc_688978D7
call	__stack_chk_fail
align 10h
public peer_odc_recv_frame
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edi]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+Time],	3Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	[ebx], ax
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	[ebx+2], ax
mov	[esp+5Ch+Buf2],	2
mov	[esp+5Ch+Time],	esi
call	sub_68881904
lea	ecx, [ebx+4]
mov	[esp+5Ch+Size],	8
mov	[esp+5Ch+Buf2],	ecx
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+var_34], ecx
call	sub_68881C3C
mov	[esp+5Ch+Buf2],	8
mov	[esp+5Ch+Time],	esi
call	sub_68881904
mov	[esp+5Ch+Time],	esi
call	sub_68881A60
mov	[ebx+34h], eax
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	[ebx+0Ch], ax
mov	[esp+5Ch+Buf2],	4
mov	[esp+5Ch+Time],	esi
call	sub_68881904
mov	[esp+5Ch+Time],	esi
call	sub_688819F0
mov	[ebx+0Eh], ax
mov	[esp+5Ch+Buf2],	4
mov	[esp+5Ch+Time],	esi
call	sub_68881904
lea	ebp, [ebx+10h]
mov	[esp+5Ch+Size],	20h
mov	[esp+5Ch+Buf2],	ebp
mov	[esp+5Ch+Time],	esi
call	sub_68881C3C
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_48], eax
movzx	eax, word ptr [ebx+0Eh]
mov	[esp+5Ch+var_4C], eax
movzx	eax, word ptr [ebx]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+Size],	ebp
mov	[esp+5Ch+Buf2],	offset aIncomingOdcFra 
mov	[esp+5Ch+Time],	offset aOscar_11 
call	purple_debug_info
mov	eax, [edi+24h]
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jnz	loc_68897AD9
test	byte ptr [edi+28h], 20h
jnz	loc_68897C5C
mov	dword ptr [edi+24h], 1
mov	eax, [edi+50h]
cmp	eax, 0FFFFFFFFh
jz	short loc_68897A72
mov	[esp+5Ch+Time],	eax
call	wpurple_close
mov	dword ptr [edi+50h], 0FFFFFFFFh
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	edx
call	purple_connection_get_account
mov	ecx, [edi+10h]
mov	[esp+5Ch+Size],	ecx
mov	[esp+5Ch+Buf2],	eax
mov	[esp+5Ch+Time],	1
call	purple_conversation_new
mov	esi, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	ebp, eax
mov	[esp+5Ch+Buf2],	offset aDirectImEstabl 
mov	[esp+5Ch+Time],	offset aPidgin_5 
call	libintl_dgettext
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], 4
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Buf2],	0
mov	[esp+5Ch+Time],	esi
call	purple_conversation_write
movzx	eax, word ptr [ebx]
cmp	ax, 1
jz	short loc_68897AF0
movzx	ecx, word ptr [ebx+2]
cmp	cx, 6
jnz	loc_68897C2C
mov	ax, [ebx+0Eh]
test	al, 8
jnz	loc_68897D2C
test	al, 4
jz	loc_68897CEC
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+Size],	0
mov	eax, [edi+10h]
mov	[esp+5Ch+Buf2],	eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	edx
call	serv_got_typing
mov	eax, [ebx+34h]
test	eax, eax
jz	loc_68897D0A
cmp	eax, 3200000h
jbe	loc_68897C88
mov	[esp+5Ch+Time],	eax
call	purple_str_size_to_units
mov	ebp, eax
mov	[esp+5Ch+Time],	3200000h
call	purple_str_size_to_units
mov	[esp+5Ch+var_30], eax
mov	esi, [edi+10h]
mov	[esp+5Ch+Buf2],	offset aSTriedToSendYo 
mov	[esp+5Ch+Time],	offset aPidgin_5 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+Size],	ebp
mov	[esp+5Ch+Buf2],	esi
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+Time],	ebp
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [edi]
mov	eax, [eax+68h]
mov	[esp+5Ch+Time],	eax
call	purple_connection_get_account
mov	ecx, [edi+10h]
mov	[esp+5Ch+Size],	ecx
mov	[esp+5Ch+Buf2],	eax
mov	[esp+5Ch+Time],	1
call	purple_conversation_new
mov	ebp, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 4
mov	[esp+5Ch+Size],	esi
mov	[esp+5Ch+Buf2],	0
mov	[esp+5Ch+Time],	ebp
call	purple_conversation_write
mov	[esp+5Ch+Time],	esi
call	g_free
mov	[esp+5Ch+Size],	0
mov	[esp+5Ch+Buf2],	1
mov	[esp+5Ch+Time],	edi
call	peer_connection_destroy
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68897C54
			
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Buf2],	offset aUnknownOdcFram 
mov	[esp+5Ch+Time],	offset aOscar_11 
call	purple_debug_info
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jz	short loc_68897C1A
			
call	__stack_chk_fail
align 4
mov	[esp+5Ch+Size],	8 
mov	[esp+5Ch+Buf2],	ecx 
lea	eax, [edi+18h]
mov	[esp+5Ch+Time],	eax 
call	memcmp
test	eax, eax
jnz	loc_68897D54
mov	[esp+5Ch+Time],	edi
call	peer_odc_send_cookie
jmp	loc_68897A54
inc	eax
mov	[esp+5Ch+Time],	eax
call	g_malloc
mov	[ebx+30h], eax
mov	dword ptr [ebx+38h], 0
mov	[edi+3Ch], ebx
mov	eax, [edi+84h]
mov	[esp+5Ch+Time],	eax
call	purple_input_remove
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+Size],	offset sub_68896FB0
mov	[esp+5Ch+Buf2],	1
mov	eax, [edi+54h]
mov	[esp+5Ch+Time],	eax
call	purple_input_add
mov	[edi+84h], eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_68897C54
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [edi+10h]
mov	[esp+5Ch+Buf2],	eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	edx
call	serv_got_typing_stopped
mov	eax, [ebx+34h]
test	eax, eax
jnz	loc_68897B32
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68897C54
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	eax, [edi+10h]
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Buf2],	offset aOhmigodSHasSta 
mov	[esp+5Ch+Time],	offset aOscar_11 
call	purple_debug_info
mov	[esp+5Ch+var_50], 1
jmp	loc_68897B0C
mov	[esp+5Ch+Buf2],	offset aReceivedAnInco 
mov	[esp+5Ch+Time],	offset aOscar_11 
call	purple_debug_info
mov	[esp+5Ch+Size],	0
mov	[esp+5Ch+Buf2],	5
mov	[esp+5Ch+Time],	edi
call	peer_connection_destroy
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_68897C1A
jmp	loc_68897C54
align 4
			
push	esi
push	ebx
sub	esp, 14h
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
shr	ecx, 10h
mov	esi, [esp+1Ch+arg_0]
test	esi, esi
jz	short loc_68897DFC
inc	edx
dec	eax
mov	bl, 1
cmp	edx, ebx
jle	short loc_68897DD5
movzx	esi, byte ptr [eax+ebx]
test	bl, 1
jnz	short loc_68897DC8
shl	esi, 8
movzx	esi, si
sub	ecx, esi
sbb	ecx, 0
inc	ebx
cmp	ebx, edx
jnz	short loc_68897DBC
movzx	eax, cx
shr	ecx, 10h
add	ecx, eax
mov	eax, ecx
shr	eax, 10h
lea	eax, [ecx+eax]
shl	eax, 10h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68897E00
add	esp, 14h
pop	ebx
pop	esi
retn
align 4
xor	ebx, ebx
jmp	short loc_68897DB8
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	esi, edx
mov	ebp, ecx
mov	edx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], edx
call	purple_xfer_get_local_filename
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aCalculatingChe 
mov	[esp+4Ch+var_4C], offset aOscar_12 
call	purple_debug_info
mov	[esp+4Ch+var_4C], 40020h
call	g_malloc0
mov	ebx, eax
mov	[eax], edi
mov	[eax+4], esi
mov	[eax+8], ebp
mov	edx, [esp+4Ch+var_30]
mov	[eax+0Ch], edx
mov	dword ptr [eax+10h], 0FFFF0000h
mov	[esp+4Ch+var_4C], esi
call	purple_xfer_get_local_filename
mov	[esp+4Ch+var_48], offset aRb 
mov	[esp+4Ch+var_4C], eax
call	g_fopen
mov	[ebx+18h], eax
test	eax, eax
jz	short loc_68897EC4
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset sub_688983A4
mov	[esp+4Ch+var_4C], 0Ah
call	purple_timeout_add
mov	[ebx+4001Ch], eax
mov	[edi+0A0h], ebx
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68897F1A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	edi, eax
mov	[esp+4Ch+var_4C], esi
call	purple_xfer_get_local_filename
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aUnableToOpenSF 
mov	[esp+4Ch+var_4C], offset aOscar_12 
call	purple_debug_error
mov	[esp+4Ch+var_4C], ebx
call	ebp
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68897F1A
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edx]
mov	edx, [edx+10h]
mov	[eax+0CCh], edx
mov	[esp+2Ch+var_2C], eax
call	peer_connection_trynext
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68897F57
add	esp, 2Ch
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebp, [edx+0C0h]
add	ebp, 0C0h
mov	[esp+3Ch+var_38], ebp
lea	ebx, [esp+3Ch+var_2C]
mov	[esp+3Ch+var_3C], ebx
call	sub_68881748
mov	[esp+3Ch+var_34], 4
lea	eax, [edi+14h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
and	ebp, 0FFFFh
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	[esp+3Ch+var_34], 8
lea	eax, [esi+2]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
movzx	eax, word ptr [esi+0Ah]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+0Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+0Eh]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+10h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+12h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+14h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	eax, [esi+18h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+1Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+20h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+24h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+28h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+2Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+30h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+34h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+38h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	eax, [esi+3Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E8C
mov	[esp+3Ch+var_34], 20h
lea	eax, [esi+40h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
movzx	eax, byte ptr [esi+60h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881DA4
movzx	eax, byte ptr [esi+61h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881DA4
movzx	eax, byte ptr [esi+62h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881DA4
mov	[esp+3Ch+var_34], 45h
lea	eax, [esi+63h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
mov	[esp+3Ch+var_34], 10h
lea	eax, [esi+0A8h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
movzx	eax, word ptr [esi+0B8h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
movzx	eax, word ptr [esi+0BAh]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_68881E0C
mov	eax, [esi+0C0h]
mov	[esp+3Ch+var_34], eax
mov	eax, [esi+0BCh]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_688820A0
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], edi
call	peer_connection_send
mov	[esp+3Ch+var_3C], ebx
call	sub_688817E4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688981B5
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
sub	esp, 3Ch
mov	edx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [edx]
mov	ecx, [eax+0E4h]
cmp	[edx+10h], ecx
jz	short loc_68898234
mov	dword ptr [eax+0E4h], 0FFFF0000h
mov	dword ptr [eax+0D0h], 0FFFF0000h
mov	dword ptr [eax+0E0h], 0
mov	word ptr [eax+0A8h], 106h
mov	edx, [eax+18h]
mov	[eax+0AAh], edx
mov	edx, [eax+1Ch]
mov	[eax+0AEh], edx
lea	edx, [eax+0A8h]
call	sub_68897F5C
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68898258
add	esp, 3Ch
retn
align 4
mov	ecx, [edx+14h]
cmp	ecx, [eax+0E0h]
jnz	short loc_688981DB
mov	[esp+3Ch+var_38], ecx
mov	edx, [edx+4]
mov	[esp+3Ch+var_3C], edx
mov	[esp+3Ch+var_20], eax
call	purple_xfer_set_bytes_sent
mov	eax, [esp+3Ch+var_20]
jmp	short loc_688981F9
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	short loc_6889829C
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688982C1
add	esp, 28h
pop	ebx
retn
align 4
mov	dword ptr [ebx+16Ch], 0
mov	[esp+2Ch+var_24], 0
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	peer_connection_destroy
xor	eax, eax
jmp	short loc_6889828A
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	short loc_68898304
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68898341
add	esp, 28h
pop	ebx
retn
align 4
mov	dword ptr [ebx+16Ch], 0
mov	eax, [ebx+0A4h]
mov	edx, [ebx+54h]
mov	[eax+30h], edx
mov	dword ptr [ebx+54h], 0FFFFFFFFh
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_start
xor	eax, eax
jmp	short loc_688982F2
call	__stack_chk_fail
align 4
public peer_oft_checksum_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	dword ptr [eax+0A0h], 0
mov	eax, [ebx+18h]
mov	[esp+2Ch+File],	eax 
call	fclose
mov	eax, [ebx+4001Ch]
test	eax, eax
jz	short loc_68898384
mov	[esp+2Ch+File],	eax
call	purple_timeout_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889839D
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+14h]
mov	edx, [ebx+0Ch]
cmp	eax, edx
jb	short loc_68898414
mov	eax, [ebx+4]
mov	[esp+3Ch+DstBuf], eax
call	purple_xfer_get_local_filename
mov	[esp+3Ch+Count], eax
mov	[esp+3Ch+ElementSize], offset aChecksumOfSCal 
mov	[esp+3Ch+DstBuf], offset aOscar_12 
call	purple_debug_info
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_688983F3
mov	[esp+3Ch+DstBuf], ebx
call	eax
mov	[esp+3Ch+DstBuf], ebx
call	peer_oft_checksum_destroy
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889846F
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
sub	edx, eax
cmp	edx, 40000h
ja	short loc_68898468
lea	edi, [ebx+1Ch]
mov	eax, [ebx+18h]
mov	[esp+3Ch+File],	eax 
mov	[esp+3Ch+Count], edx 
mov	[esp+3Ch+ElementSize], 1 
mov	[esp+3Ch+DstBuf], edi 
call	fread
mov	esi, eax
test	eax, eax
jz	short loc_688983C4
mov	ebp, [ebx+14h]
mov	ecx, [ebx+10h]
mov	eax, ebp
and	eax, 1
mov	[esp+3Ch+DstBuf], eax
mov	edx, esi
mov	eax, edi
call	sub_68897D98
mov	[ebx+10h], eax
add	esi, ebp
mov	[ebx+14h], esi
mov	eax, 1
jmp	short loc_688983FD
mov	edx, 40000h
jmp	short loc_6889841E
call	__stack_chk_fail
public peer_oft_close
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_get_status
cmp	eax, 5
jz	short loc_688984C8
			
mov	eax, [ebx+16Ch]
test	eax, eax
jz	short loc_688984B6
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+16Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688984D9
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+24h]
test	eax, eax
jnz	short loc_6889849A
mov	[esp+2Ch+var_2C], ebx
call	aim_im_sendch2_cancel
jmp	short loc_6889849A
call	__stack_chk_fail
align 10h
public peer_oft_send_prompt
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	word ptr [eax+0A8h], 101h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68898516
lea	edx, [eax+0A8h]
add	esp, 1Ch
jmp	sub_68897F5C
call	__stack_chk_fail
align 4
public peer_oft_recv_frame
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0ECh
mov	ebp, [esp+0FCh+arg_0]
mov	ebx, [esp+0FCh+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+0FCh+var_20], eax
xor	eax, eax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	word ptr [esp+0FCh+var_E4], ax
mov	[esp+0FCh+Size], 8
lea	esi, [esp+0FCh+var_E4]
lea	edi, [esp+0FCh+var_E4+2]
mov	[esp+0FCh+Buf2], edi
mov	[esp+0FCh+Buf1], ebx
call	sub_68881C3C
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_DA], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_D8], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_D6], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_D4], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_D2], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_D0], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_CC], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_C8], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_C4], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_C0], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_BC], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_B8], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_B4], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_B0], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_AC], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881A60
mov	[esp+0FCh+var_A8], eax
mov	[esp+0FCh+Size], 20h
lea	eax, [esp+0FCh+var_A4]
mov	[esp+0FCh+Buf2], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881C3C
mov	[esp+0FCh+Buf1], ebx
call	sub_68881990
mov	[esp+0FCh+var_84], al
mov	[esp+0FCh+Buf1], ebx
call	sub_68881990
mov	[esp+0FCh+var_83], al
mov	[esp+0FCh+Buf1], ebx
call	sub_68881990
mov	[esp+0FCh+var_82], al
mov	[esp+0FCh+Size], 45h
lea	eax, [esp+0FCh+var_81]
mov	[esp+0FCh+Buf2], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881C3C
mov	[esp+0FCh+Size], 10h
lea	eax, [esp+0FCh+var_3C]
mov	[esp+0FCh+Buf2], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881C3C
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_2C], ax
mov	[esp+0FCh+Buf1], ebx
call	sub_688819F0
mov	[esp+0FCh+var_2A], ax
mov	eax, [ebx+4]
sub	eax, 0BAh
mov	[esp+0FCh+var_24], eax
mov	[esp+0FCh+Buf2], eax
mov	[esp+0FCh+Buf1], ebx
call	sub_68881CAC
mov	[esp+0FCh+var_28], eax
movzx	eax, word ptr [esp+0FCh+var_E4]
mov	[esp+0FCh+var_F0], eax
mov	eax, [ebp+10h]
mov	[esp+0FCh+Size], eax
mov	[esp+0FCh+Buf2], offset	aIncomingOftFra	
mov	[esp+0FCh+Buf1], offset	aOscar_12 
call	purple_debug_info
mov	eax, [esp+0FCh+var_E4]
cmp	ax, 204h
jz	loc_68898828
jbe	short loc_68898758
cmp	ax, 205h
jz	loc_68898890
cmp	ax, 207h
jz	short loc_68898764
xchg	ax, ax
			
mov	eax, [esp+0FCh+var_28]
mov	[esp+0FCh+Buf1], eax
call	g_free
mov	eax, [esp+0FCh+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_68898933
add	esp, 0ECh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	ax, 101h
jz	short loc_688987C0
cmp	ax, 202h
jnz	short loc_68898728
mov	[esp+0FCh+Size], 8 
mov	[esp+0FCh+Buf2], edi 
lea	eax, [ebp+18h]
mov	[esp+0FCh+Buf1], eax 
call	memcmp
test	eax, eax
jnz	loc_688988E4
mov	eax, [ebp+84h]
mov	[esp+0FCh+Buf1], eax
call	purple_input_remove
mov	dword ptr [ebp+84h], 0
mov	[esp+0FCh+Size], ebp
mov	[esp+0FCh+Buf2], offset	sub_688982C8
mov	[esp+0FCh+Buf1], 64h
call	purple_timeout_add
mov	[ebp+16Ch], eax
jmp	loc_68898728
align 10h
mov	eax, [ebp+164h]
mov	[esp+0FCh+Buf1], eax
call	g_free
lea	ebx, [ebp+0A8h]
mov	ecx, 31h
mov	edi, ebx
rep movsd
mov	eax, [esp+0FCh+var_24]
mov	[esp+0FCh+Buf2], eax
mov	eax, [esp+0FCh+var_28]
mov	[esp+0FCh+Buf1], eax
call	g_memdup
mov	[ebp+164h], eax
mov	word ptr [ebp+0A8h], 202h
mov	eax, [ebp+18h]
mov	[ebp+0AAh], eax
mov	eax, [ebp+1Ch]
mov	[ebp+0AEh], eax
mov	edx, ebx
mov	eax, ebp
call	sub_68897F5C
jmp	loc_68898783
align 4
mov	eax, [ebp+0A4h]
mov	[esp+0FCh+Buf1], eax
call	purple_xfer_is_completed
test	eax, eax
jz	loc_68898918
mov	eax, [ebp+84h]
mov	[esp+0FCh+Buf1], eax
call	purple_input_remove
mov	dword ptr [ebp+84h], 0
mov	eax, [ebp+0A4h]
mov	edx, [ebp+54h]
mov	[eax+30h], edx
mov	dword ptr [ebp+54h], 0FFFFFFFFh
mov	dword ptr [ebp+34h], 0
mov	[esp+0FCh+Size], 0
mov	[esp+0FCh+Buf2], 0
mov	[esp+0FCh+Buf1], ebp
call	peer_connection_schedule_destroy
jmp	loc_68898728
align 10h
mov	[esp+0FCh+Size], 8 
mov	[esp+0FCh+Buf2], edi 
lea	eax, [ebp+18h]
mov	[esp+0FCh+Buf1], eax 
call	memcmp
test	eax, eax
jnz	short loc_688988E4
mov	eax, [esp+0FCh+var_A8]
mov	[ebp+0E4h], eax
mov	eax, [esp+0FCh+var_BC]
mov	[ebp+0D0h], eax
mov	eax, [esp+0FCh+var_AC]
mov	[ebp+0E0h], eax
mov	edx, [ebp+0A4h]
mov	[esp+0FCh+Buf1], eax
mov	ecx, offset sub_688981BC
mov	eax, ebp
call	sub_68897E08
jmp	loc_68898728
align 4
			
mov	[esp+0FCh+Buf2], offset	aReceivedAnIn_0	
mov	[esp+0FCh+Buf1], offset	aOscar_12 
call	purple_debug_info
mov	[esp+0FCh+Size], 0
mov	[esp+0FCh+Buf2], 5
mov	[esp+0FCh+Buf1], ebp
call	peer_connection_destroy
jmp	loc_68898728
align 4
mov	[esp+0FCh+Buf2], 1
mov	eax, [ebp+0A4h]
mov	[esp+0FCh+Buf1], eax
call	purple_xfer_set_completed
jmp	loc_6889883E
call	__stack_chk_fail
public peer_oft_recvcb_init
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+7Ch]
or	dword ptr [eax+28h], 2
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68898969
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	peer_connection_trynext
call	__stack_chk_fail
align 10h
public peer_oft_recvcb_end
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+7Ch]
mov	eax, [ebx+0A4h]
mov	edx, [eax+30h]
mov	[ebx+54h], edx
mov	dword ptr [eax+30h], 0FFFFFFFFh
mov	word ptr [ebx+0A8h], 204h
mov	dword ptr [ebx+0D0h], 0FFFF0000h
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_get_bytes_sent
mov	[ebx+0E0h], eax
lea	edx, [ebx+0A8h]
mov	eax, ebx
call	sub_68897F5C
mov	dword ptr [ebx+34h], 0
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_68898260
mov	[esp+2Ch+var_2C], 64h
call	purple_timeout_add
mov	[ebx+16Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688989FD
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public peer_oft_recvcb_ack_recv
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ecx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [ecx+7Ch]
mov	[esp+2Ch+var_2C], ecx
call	purple_xfer_get_bytes_sent
mov	ecx, [ebx+0E4h]
and	eax, 1
mov	[esp+2Ch+var_2C], eax
mov	edx, edi
mov	eax, esi
call	sub_68897D98
mov	[ebx+0E4h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898A5A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public peer_oft_sendcb_init
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
or	dword ptr [ebx+28h], 2
mov	[esp+2Ch+Dest],	esi
call	purple_xfer_get_size
mov	word ptr [ebx+0B6h], 1
mov	word ptr [ebx+0B8h], 1
mov	word ptr [ebx+0BAh], 1
mov	word ptr [ebx+0BCh], 1
mov	[ebx+0C0h], eax
mov	[ebx+0C4h], eax
mov	dword ptr [ebx+0CCh], 0FFFF0000h
mov	dword ptr [ebx+0D0h], 0FFFF0000h
mov	dword ptr [ebx+0DCh], 0FFFF0000h
mov	dword ptr [ebx+0E4h], 0FFFF0000h
mov	[esp+2Ch+Count], 1Fh 
mov	[esp+2Ch+Source], offset aCoolFilexfer 
lea	eax, [ebx+0E8h]
mov	[esp+2Ch+Dest],	eax 
call	strncpy
mov	dword ptr [ebx+0C8h], 0
mov	dword ptr [ebx+0D8h], 0
mov	eax, [esi+18h]
mov	[esp+2Ch+Dest],	eax
call	g_path_get_basename
mov	edx, eax
mov	[esi+14h], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
lea	eax, [ecx-1]
cmp	ecx, 3Fh
ja	short loc_68898B3D
mov	eax, 3Fh
mov	ecx, 40h
mov	[ebx+168h], ecx
mov	[esp+2Ch+Source], eax
mov	[esp+2Ch+Dest],	edx
call	g_strndup
mov	[ebx+164h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898B7D
mov	[esp+2Ch+arg_0], 0FFFFFFFFh
mov	ecx, offset sub_68897F20
mov	edx, esi
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_68897E08
call	__stack_chk_fail
align 4
public peer_oft_sendcb_ack
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, [ebx+7Ch]
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_remaining
test	eax, eax
jnz	short loc_68898BE1
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	eax, [ebx+30h]
mov	[esi+54h], eax
mov	dword ptr [ebx+30h], 0FFFFFFFFh
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], offset peer_connection_recv_cb
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[esi+84h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898BF3
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public peer_oft_cb_generic_cancel
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+7Ch]
test	eax, eax
jz	short loc_68898C29
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	peer_connection_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898C39
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
shr	eax, 10h
mov	edx, ecx
shr	edx, 10h
cmp	eax, edx
jz	short loc_68898C78
sub	eax, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68898C85
add	esp, 18h
pop	ebx
retn
movzx	eax, bx
and	ecx, 0FFFFh
sub	eax, ecx
jmp	short loc_68898C67
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Str2],	offset aAccount	
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	ebx, eax
mov	[esp+3Ch+Str2],	offset aAim 
mov	[esp+3Ch+Str1],	esi
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_68898CE8
mov	[esp+3Ch+Str2],	offset aIcq_0 
mov	[esp+3Ch+Str1],	esi
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_68898E20
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], offset aPrplS	
mov	[esp+3Ch+Str2],	0Bh
lea	esi, [esp+3Ch+var_2B]
mov	[esp+3Ch+Str1],	esi
call	g_snprintf
test	ebx, ebx
jz	loc_68898DD4
mov	[esp+3Ch+Str2],	esi
mov	[esp+3Ch+Str1],	ebx
call	purple_accounts_find
mov	ebx, eax
test	eax, eax
jz	loc_68898E20
mov	[esp+3Ch+Str1],	eax
call	purple_account_is_connected
test	eax, eax
jz	loc_68898E20
mov	[esp+3Ch+Str2],	offset aGoim 
mov	[esp+3Ch+Str1],	ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_68898E3C
mov	[esp+3Ch+Str2],	offset aScreenname 
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
jz	loc_68898F2E
mov	[esp+3Ch+Str2],	offset aMessage_1 
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	edi, eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+Str2],	ebp
mov	[esp+3Ch+Str1],	1
call	purple_find_conversation_with_account
mov	esi, eax
test	eax, eax
jz	loc_68898F38
mov	[esp+3Ch+Str1],	esi
call	purple_conversation_present
test	edi, edi
jz	loc_68898F2E
mov	[esp+3Ch+var_34], 20h
mov	[esp+3Ch+Str2],	offset asc_688B1B44 
mov	[esp+3Ch+Str1],	edi
call	g_strdelimit
mov	[esp+3Ch+Str2],	edi
mov	[esp+3Ch+Str1],	esi
call	purple_conv_send_confirm
mov	eax, 1
jmp	short loc_68898E22
align 4
call	purple_accounts_get_all
mov	ebx, eax
test	eax, eax
jnz	short loc_68898DEB
jmp	short loc_68898E20
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_68898E20
mov	eax, [ebx]
mov	[esp+3Ch+Str1],	eax
call	purple_account_get_protocol_id
mov	[esp+3Ch+Str2],	eax 
mov	[esp+3Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_68898DE4
mov	eax, [ebx]
mov	[esp+3Ch+Str1],	eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_68898DE4
mov	ebx, [ebx]
test	ebx, ebx
jnz	loc_68898D36
lea	esi, [esi+0]
			
xor	eax, eax
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68898F53
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+Str2],	offset aGochat 
mov	[esp+3Ch+Str1],	ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_68898EDC
mov	[esp+3Ch+Str2],	offset aRoomname 
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	loc_68898F2E
mov	[esp+3Ch+Str1],	offset a4 
call	g_strdup
mov	ebp, eax
mov	[esp+3Ch+Str1],	offset aExchange 
call	g_strdup
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Str2],	eax
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_insert
mov	[esp+3Ch+Str1],	esi
call	g_strdup
mov	esi, eax
mov	[esp+3Ch+Str1],	offset aRoom 
call	g_strdup
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+Str2],	eax
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_insert
mov	[esp+3Ch+Str1],	ebx
call	purple_account_get_connection
mov	[esp+3Ch+Str2],	edi
mov	[esp+3Ch+Str1],	eax
call	serv_join_chat
mov	eax, 1
jmp	loc_68898E22
mov	[esp+3Ch+Str2],	offset aAddbuddy 
mov	[esp+3Ch+Str1],	ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_68898E20
mov	[esp+3Ch+Str2],	offset aScreenname 
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+3Ch+Str2],	offset aGroupname 
mov	[esp+3Ch+Str1],	edi
call	g_hash_table_lookup
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Str2],	esi
mov	[esp+3Ch+Str1],	ebx
call	purple_blist_request_add_buddy
			
mov	eax, 1
jmp	loc_68898E22
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Str2],	ebx
mov	[esp+3Ch+Str1],	1
call	purple_conversation_new
mov	esi, eax
jmp	loc_68898D98
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898F8F
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
public oscar_free_name_data
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68898FD6
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ecx, [eax+34h]
test	ecx, ecx
jnz	short loc_68899007
jmp	short loc_68899020
align 10h
mov	ecx, [ecx+4]
test	ecx, ecx
jz	short loc_68899020
mov	eax, [ecx]
cmp	[eax+0Ch], ebx
jnz	short loc_68899000
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68899024
add	esp, 28h
pop	ebx
retn
align 10h
			
xor	eax, eax
jmp	short loc_6889900E
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edi, [ebx+8]
mov	esi, [ebx+4]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_blist_request_add_buddy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899084
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	oscar_free_name_data
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	ebx, [eax+0Ch]
mov	[esp+7Ch+var_7C], ebx
call	purple_connection_get_account
mov	[esp+7Ch+var_78], offset a_cancel 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_search 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aTypeTheEmailAd 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aSearchForABudd 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+7Ch+var_78], offset aFindBuddyByEma 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], 0
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], offset sub_68899290
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], edi
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_request_input
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688991A2
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+6Ch+arg_0]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], ebx
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+6Ch+var_68], offset a_cancel 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+6Ch+var_68], offset a_ok 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+6Ch+var_68], offset aChangeAddressT 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_30], ebx
mov	[esp+6Ch+var_34], 0
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_3C], ebp
mov	[esp+6Ch+var_40], 0
mov	[esp+6Ch+var_44], edi
mov	[esp+6Ch+var_48], offset loc_68899458
mov	[esp+6Ch+var_4C], esi
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	purple_request_input
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889928B
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688992CC
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	aim_search_address
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], eax
call	purple_find_buddies
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_68899443
mov	ebp, eax
mov	[esp+5Ch+var_38], 0
jmp	short loc_68899337
align 10h
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_68899389
			
mov	ebx, [ebp+0]
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_name
mov	edi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_group
mov	[esp+5Ch+var_5C], eax
call	purple_group_get_name
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], eax
mov	eax, [esi+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_waitingforauth
test	eax, eax
jz	short loc_68899330
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_slist_prepend
mov	[esp+5Ch+var_38], eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_68899337
			
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_slist_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_slist_reverse
mov	esi, eax
mov	[esp+5Ch+var_58], offset aYouAreNotWaiti 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	oscar_format_buddies
mov	ebx, eax
mov	[esp+5Ch+var_5C], esi
call	g_slist_free
mov	[esp+5Ch+var_58], offset aYouCanReReques 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aYouAreAwaiting 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_formatted
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899450
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+var_38], 0
jmp	loc_68899389
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+30h]
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	dword ptr [esp+4], 7
mov	[esp], eax
call	flap_connection_getbytype
test	eax, eax
jz	short loc_688994B0
mov	[esp+8], esi
mov	[esp+4], eax
mov	[esp], ebx
call	aim_admin_setemail
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688994E4
add	esp, 24h
pop	ebx
pop	esi
retn
mov	dword ptr [ebx+18h], 1
mov	[esp], esi
call	g_strdup
mov	[ebx+1Ch], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688994E4
mov	dword ptr [esp+34h], 7
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	aim_srv_requestnew
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_28], 7
mov	[esp+2Ch+var_2C], eax
call	flap_connection_getbytype
test	eax, eax
jz	short loc_68899548
mov	[esp+2Ch+var_24], 11h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_admin_getinfo
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899561
add	esp, 28h
pop	ebx
retn
align 4
mov	dword ptr [ebx+14h], 1
mov	[esp+2Ch+var_28], 7
mov	[esp+2Ch+var_2C], ebx
call	aim_srv_requestnew
jmp	short loc_68899534
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_28], 7
mov	[esp+2Ch+var_2C], eax
call	flap_connection_getbytype
test	eax, eax
jz	short loc_688995BC
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_admin_reqconfirm
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688995D5
add	esp, 28h
pop	ebx
retn
align 4
mov	dword ptr [ebx+10h], 1
mov	[esp+2Ch+var_28], 7
mov	[esp+2Ch+var_2C], ebx
call	aim_srv_requestnew
jmp	short loc_688995A8
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	ebx, [eax+0Ch]
mov	[esp+7Ch+var_7C], ebx
call	purple_connection_get_account
mov	esi, eax
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset aAuthorization	
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_bool
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aWeb_aware 
mov	[esp+7Ch+var_7C], esi
mov	[esp+7Ch+var_34], eax
call	purple_account_get_bool
mov	ebp, eax
call	purple_request_fields_new
mov	edi, eax
mov	[esp+7Ch+var_7C], 0
call	purple_request_field_group_new
mov	esi, eax
mov	[esp+7Ch+var_78], offset aRequireAuthori 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aAuthorization	
call	purple_request_field_bool_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aWebAwareEnabli 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aWeb_aware 
call	purple_request_field_bool_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], edi
call	purple_request_fields_add_group
mov	[esp+7Ch+var_7C], ebx
call	purple_connection_get_account
mov	[esp+7Ch+var_78], offset aCancel 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aOk 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aIcqPrivacyOpti 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+7Ch+var_78], offset aIcqPrivacyOpti 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], ebx
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_54], 0
mov	ecx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_58], ecx
mov	[esp+7Ch+var_5C], 0
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_60], edx
mov	[esp+7Ch+var_64], offset sub_688999AC
mov	[esp+7Ch+var_68], ebp
mov	[esp+7Ch+var_6C], edi
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_request_fields
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899791
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_active_status
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_id
mov	ebx, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aWeb_aware 
mov	[esp+2Ch+var_2C], edi
call	purple_account_get_bool
cmp	eax, 1
sbb	eax, eax
and	eax, 0FFFF0000h
add	eax, 30000h
mov	edi, offset aAvailable_0 
mov	ecx, 0Ah
mov	esi, ebx
repe cmpsb
jz	loc_688998E8
mov	edi, offset aAway 
mov	ecx, 5
mov	esi, ebx
repe cmpsb
jz	loc_688998FC
mov	edi, offset aDnd 
mov	ecx, 4
mov	esi, ebx
repe cmpsb
jz	loc_68899904
mov	edi, offset aNa	
mov	ecx, 3
mov	esi, ebx
repe cmpsb
jz	loc_688998E4
mov	edi, offset aOccupied 
mov	ecx, 9
mov	esi, ebx
repe cmpsb
jz	loc_6889990C
mov	edi, offset aFree4chat 
mov	ecx, 0Ah
mov	esi, ebx
repe cmpsb
jz	loc_6889991C
mov	edi, offset aInvisible 
mov	ecx, 0Ah
mov	esi, ebx
repe cmpsb
jz	loc_68899914
mov	edi, offset aEvil 
mov	ecx, 5
mov	esi, ebx
repe cmpsb
jz	loc_68899921
mov	edi, offset aDepression	
mov	ecx, 0Bh
mov	esi, ebx
repe cmpsb
jz	loc_68899926
mov	edi, offset aAtwork 
mov	ecx, 7
mov	esi, ebx
repe cmpsb
jz	short loc_6889992B
mov	edi, offset aAthome 
mov	ecx, 7
mov	esi, ebx
repe cmpsb
jz	short loc_68899930
mov	edi, offset aLunch 
mov	ecx, 6
mov	esi, ebx
repe cmpsb
jz	short loc_68899935
mov	edi, offset aCustom 
mov	ecx, 7
mov	esi, ebx
repe cmpsb
jnz	short loc_688998E8
lea	esi, [esi+0]
or	eax, 5
nop
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889993C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
or	eax, 1
jmp	short loc_688998E8
align 4
or	eax, 13h
jmp	short loc_688998E8
align 4
or	eax, 11h
jmp	short loc_688998E8
align 4
or	ah, 1
jmp	short loc_688998E8
align 4
or	eax, 20h
jmp	short loc_688998E8
or	ah, 30h
jmp	short loc_688998E8
or	ah, 40h
jmp	short loc_688998E8
or	ah, 60h
jmp	short loc_688998E8
or	ah, 50h
jmp	short loc_688998E8
or	eax, 2001h
jmp	short loc_688998E8
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_68899798
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_protocol_data
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	aim_srv_setextrainfo
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688999A5
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_protocol_data
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_30], eax
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aAuthorization	
mov	[esp+4Ch+var_4C], edi
call	purple_request_fields_get_field
mov	[esp+4Ch+var_4C], eax
call	purple_request_field_bool_get_value
mov	esi, eax
mov	[esp+4Ch+var_48], offset aWeb_aware 
mov	[esp+4Ch+var_4C], edi
call	purple_request_fields_get_field
mov	[esp+4Ch+var_4C], eax
call	purple_request_field_bool_get_value
mov	edi, eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aAuthorization	
mov	[esp+4Ch+var_4C], ebp
call	purple_account_set_bool
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aWeb_aware 
mov	[esp+4Ch+var_4C], ebp
call	purple_account_set_bool
mov	eax, ebx
call	sub_68899944
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], esi
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	aim_icq_setsecurity
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899A67
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aHttpMymobile_a 
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_uri
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899AA1
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aHttpWww_icq_co 
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_uri
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899ADD
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+30h]
mov	ebx, [eax+0Ch]
mov	[esp], ebx
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_connection_get_account
mov	[esp], eax
call	purple_account_get_username
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aS 
mov	eax, [esi+0BCh]
mov	eax, [eax+20h]
mov	[esp], eax
call	purple_strreplace
mov	esi, eax
mov	[esp+4], eax
mov	[esp], ebx
call	purple_notify_uri
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899B5A
mov	[esp+30h], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68899B95
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_account_request_change_password
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_68899BD1
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_account_request_change_user_info
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_7C], ebp
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_68899C34
mov	[esp+7Ch+var_74], offset aPurple_blist_0 
mov	[esp+7Ch+var_78], offset aOscar_ask_dire 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_68899D64
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_account
mov	edi, eax
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_connection
mov	esi, eax
mov	[esp+7Ch+var_7C], 8
call	g_malloc0
mov	ebx, eax
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_name
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[ebx+4], eax
mov	[esp+7Ch+var_7C], esi
call	purple_connection_get_protocol_data
mov	[ebx], eax
mov	ebp, [ebx+4]
mov	[esp+7Ch+var_78], offset aYouHaveSelecte 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+var_78], offset a_cancel 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aC_onnect 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	edx, eax
mov	eax, [ebx+4]
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aBecauseThisRev 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_34], edx
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset sub_68898F58
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], offset sub_68899D6C
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], ebx
mov	[esp+7Ch+var_60], 0
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_64], edx
mov	[esp+7Ch+var_68], edi
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], esi
call	purple_request_action
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899D64
mov	[esp+7Ch+arg_0], ebp
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_24], 0
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	peer_connection_propose
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_68899DC4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_68899E24
mov	dword ptr [esp+8], offset aPurple_blist_0 
mov	dword ptr [esp+4], offset aOscar_close_di 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_68899EF1
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_name
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_account
mov	edi, eax
mov	[esp], eax
call	purple_account_get_connection
mov	dword ptr [esp+8], 4
mov	dword ptr [esp+0Ch], 0
mov	[esp+4], esi
mov	eax, [eax+1Ch]
mov	[esp], eax
call	peer_connection_find_by_type
mov	ebx, eax
test	eax, eax
jz	short loc_68899E0A
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_68899EE4
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 1
mov	[esp], ebx
call	peer_connection_destroy
mov	[esp+8], esi
mov	[esp+4], edi
mov	dword ptr [esp], 1
call	purple_conversation_new
mov	ebx, eax
mov	dword ptr [esp], 0
call	time
mov	esi, eax
mov	dword ptr [esp+4], offset aYouClosedTheCo 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+10h], esi
mov	dword ptr [esp+0Ch], 4
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	[esp], ebx
call	purple_conversation_write
jmp	loc_68899E0A
align 4
mov	[esp], ebx
call	aim_im_sendch2_cancel
jmp	loc_68899E6C
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	ebx, [eax+68h]
mov	[esp+7Ch+var_7C], ebx
call	purple_connection_get_account
mov	edi, eax
mov	[esp+7Ch+var_78], offset aGotSecuridRequ 
mov	[esp+7Ch+var_7C], offset aOscar_13 
call	purple_debug_info
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_username
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aEnterTheSecuri 
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+var_78], offset a_cancel 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_ok 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aEnterThe6Digit 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aEnterSecurid 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
mov	[esp+7Ch+var_4C], edi
mov	[esp+7Ch+var_50], offset sub_6889A890
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_54], ecx
mov	[esp+7Ch+var_58], offset sub_6889E2CC
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_5C], edx
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebp
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], ebx
call	purple_request_input
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	eax, 1
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889A033
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_8C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_6889A094
mov	[esp+8Ch+var_84], offset aPurple_blist_0 
mov	[esp+8Ch+var_88], offset aOscar_buddycb_ 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_6889A263
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_8C], ebx
call	purple_buddy_get_name
mov	[esp+8Ch+var_38], eax
mov	[esp+8Ch+var_8C], ebx
call	purple_buddy_get_account
mov	[esp+8Ch+var_30], eax
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_connection
mov	[esp+8Ch+var_34], eax
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+8Ch+var_8C], ebx
call	purple_buddy_get_group
mov	ebp, eax
test	eax, eax
jz	short loc_6889A07A
mov	[esp+8Ch+var_8C], 0Ch
call	g_malloc
mov	esi, eax
mov	[esp+8Ch+var_8C], ebp
call	purple_group_get_name
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], eax
mov	eax, [edi+0D8h]
mov	[esp+8Ch+var_8C], eax
call	aim_ssi_getcomment
mov	ebp, eax
test	eax, eax
jz	loc_6889A25C
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], edi
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_8C], eax
call	oscar_utf8_try_convert
mov	edi, eax
mov	eax, [esp+8Ch+var_34]
mov	[esi], eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+8Ch+var_8C], ebx
call	purple_buddy_get_alias_only
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	[esi+8], eax
mov	ebx, [esi+4]
mov	[esp+8Ch+var_88], offset aBuddyCommentFo 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	g_strdup_printf
mov	ebx, eax
mov	edx, [esi+4]
mov	[esp+8Ch+var_88], offset a_cancel 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
mov	[esp+8Ch+var_40], edx
call	libintl_dgettext
mov	[esp+8Ch+var_88], offset a_ok 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
mov	[esp+8Ch+var_3C], eax
call	libintl_dgettext
mov	[esp+8Ch+var_38], eax
mov	[esp+8Ch+var_88], offset aBuddyComment 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+8Ch+var_50], esi
mov	[esp+8Ch+var_54], 0
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_58], edx
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_5C], edx
mov	[esp+8Ch+var_60], offset oscar_free_name_data
mov	ecx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_64], ecx
mov	[esp+8Ch+var_68], offset sub_6889A268
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_6C], edx
mov	[esp+8Ch+var_70], 0
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 1
mov	[esp+8Ch+var_7C], edi
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebx
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], eax
call	purple_request_input
mov	[esp+8Ch+var_8C], ebx
call	g_free
mov	[esp+8Ch+var_8C], ebp
call	g_free
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889A263
mov	[esp+8Ch+arg_0], edi
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
xor	edi, edi
jmp	loc_6889A120
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx]
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_account
mov	edx, [ebx+4]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_find_buddy
test	eax, eax
jz	short loc_6889A2D4
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_get_group
test	eax, eax
jz	short loc_6889A2D4
mov	esi, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	purple_group_get_name
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	aim_ssi_editcomment
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889A2F0
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	oscar_free_name_data
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+2Ch+var_28], offset aInvisible 
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_status_active
cmp	eax, 1
sbb	edx, edx
not	edx
add	edx, 4
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], esi
call	aim_ssi_setpermdeny
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889A354
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, edx
mov	edi, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_4C], ecx
call	purple_account_get_connection
mov	[esp+6Ch+var_48], eax
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+6Ch+var_30], 0
mov	[esp+6Ch+var_2C], 0
mov	[esp+6Ch+var_28], 0
mov	[esp+6Ch+var_24], 0
mov	[esp+6Ch+var_6C], esi
call	purple_status_get_type
mov	[esp+6Ch+var_6C], eax
call	purple_status_type_get_primitive
mov	[esp+6Ch+var_44], eax
test	ebp, ebp
mov	ecx, [esp+6Ch+var_4C]
jz	loc_6889A4C4
mov	edx, [ebx+60h]
test	edx, edx
jz	loc_6889A694
test	ecx, ecx
jz	loc_6889A4C4
mov	[esp+6Ch+var_6C], ecx
call	purple_strdup_withhtml
mov	edx, eax
lea	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
lea	eax, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_4C], edx
call	oscar_encode_im
mov	ebp, eax
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	edx, [ebx+60h]
cmp	edx, [esp+6Ch+var_2C]
jnb	loc_6889A4C6
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], offset aTheMaximumProf 
mov	[esp+6Ch+var_68], offset aTheMaximumPr_0 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
mov	[esp+6Ch+var_4C], edx
call	libintl_dngettext
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	g_strdup_printf
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_68], offset aProfileTooLong 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 1
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	purple_notify_message
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	short loc_6889A4C6
align 4
			
xor	ebp, ebp
			
test	edi, edi
jnz	short loc_6889A540
mov	edx, [ebx+64h]
mov	eax, [esp+6Ch+var_24]
cmp	eax, edx
ja	short loc_6889A53C
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], 0
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_5C], eax
mov	edx, [ebx+60h]
mov	eax, [esp+6Ch+var_2C]
cmp	eax, edx
ja	short loc_6889A538
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], ebp
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	aim_locate_setprofile
mov	[esp+6Ch+var_6C], ebp
call	g_free
mov	[esp+6Ch+var_6C], 0
call	g_free
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889A7CE
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, edx
jmp	short loc_6889A4F4
mov	eax, edx
jmp	short loc_6889A4D5
mov	[esp+6Ch+var_68], offset aMessage_1 
mov	[esp+6Ch+var_6C], esi
call	purple_status_get_attr_string
test	eax, eax
jz	loc_6889A6FC
cmp	[esp+6Ch+var_44], 2
jz	loc_6889A6FC
cmp	[esp+6Ch+var_44], 4
jz	loc_6889A6FC
mov	[esp+6Ch+var_6C], eax
call	purple_markup_linkify
mov	edi, eax
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	oscar_encode_im
mov	[esp+6Ch+var_6C], edi
mov	[esp+6Ch+var_4C], eax
call	g_free
mov	edi, [ebx+64h]
mov	eax, [esp+6Ch+var_24]
cmp	edi, eax
mov	ecx, [esp+6Ch+var_4C]
jb	loc_6889A740
			
cmp	edi, eax
jbe	short loc_6889A5BD
mov	edi, eax
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], ecx
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+var_2C]
mov	edx, [ebx+60h]
cmp	edx, eax
jbe	short loc_6889A5DA
mov	edx, eax
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ebp
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_4C], ecx
call	aim_locate_setprofile
mov	[esp+6Ch+var_6C], ebp
call	g_free
mov	ecx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], ecx
call	g_free
mov	[esp+6Ch+var_68], offset aMessage_1 
mov	[esp+6Ch+var_6C], esi
call	purple_status_get_attr_string
test	eax, eax
jz	loc_6889A718
mov	[esp+6Ch+var_6C], eax
call	purple_markup_strip_html
mov	ebp, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
dec	ecx
cmp	ecx, 0FBh
ja	loc_6889A720
			
mov	[esp+6Ch+var_68], offset aItmsurl 
mov	[esp+6Ch+var_6C], esi
call	purple_status_get_attr_string
mov	esi, eax
mov	eax, [esp+6Ch+var_48]
call	sub_68899798
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], 1
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], ebx
call	aim_srv_setextrainfo
mov	[esp+6Ch+var_6C], ebp
call	g_free
jmp	loc_6889A520
align 4
mov	[esp+6Ch+var_68], offset aYouHaveProbabl 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+6Ch+var_68], offset aUnableToSetAim 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 1
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	purple_notify_message
xor	ebp, ebp
jmp	loc_6889A4C6
align 4
			
mov	[esp+6Ch+var_6C], offset byte_688B2167
call	g_strdup
mov	ecx, eax
mov	eax, [esp+6Ch+var_24]
mov	edi, [ebx+64h]
jmp	loc_6889A5B7
align 4
xor	ebp, ebp
jmp	loc_6889A646
align 10h
lea	eax, [ebp+0F9h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	g_utf8_find_prev_char
mov	dword ptr [eax], 2E2E2Eh
jmp	loc_6889A646
align 10h
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], offset aTheMaximumAway 
mov	[esp+6Ch+var_68], offset aTheMaximumAw_0 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dngettext
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+6Ch+var_68], offset aAwayMessageToo 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], edi
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 1
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	purple_notify_message
mov	[esp+6Ch+var_6C], edi
call	g_free
mov	eax, [esp+6Ch+var_24]
mov	edi, [ebx+64h]
mov	ecx, [esp+6Ch+var_4C]
jmp	loc_6889A5B7
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+98h+var_7C], eax
xor	eax, eax
mov	eax, [ebx]
mov	esi, [eax+68h]
movzx	eax, word ptr [ebx+5Ch]
mov	[esp+98h+var_90], eax
mov	[esp+98h+var_94], offset aUnableToConn_0 
mov	[esp+98h+var_98], offset aOscar_13 
call	purple_debug_error
mov	eax, [ebx+5Ch]
cmp	ax, 17h
jz	short loc_6889A880
cmp	ax, 2
jz	short loc_6889A840
mov	[esp+98h+var_90], edi
mov	[esp+98h+var_94], 6
mov	[esp+98h+var_98], ebx
call	flap_connection_schedule_destroy
mov	eax, [esp+98h+var_7C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889A88A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+98h+var_94], offset aUnableToConn_1 
mov	[esp+98h+var_98], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+98h+var_94], edi
mov	[esp+98h+var_98], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+98h+var_90], eax
mov	[esp+98h+var_94], 0
mov	[esp+98h+var_98], esi
call	purple_connection_error_reason
mov	[esp+98h+var_98], ebx
call	g_free
jmp	short loc_6889A82D
mov	[esp+98h+var_94], offset aUnableToConn_2 
jmp	short loc_6889A848
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aTheSecuridKeyE 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889A8DC
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx]
mov	eax, [ebp+68h]
mov	[esp+8Ch+var_60], eax
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_64], eax
movzx	eax, word ptr [ebx+5Ch]
mov	dword ptr [esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aConnectedToFla 
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_info
mov	esi, [ebx+24h]
test	esi, esi
jz	loc_6889AA60
mov	dword ptr [esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], offset aUse_clientlogi 
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_bool
test	eax, eax
jnz	short loc_6889A9BC
mov	eax, [ebx+24h]
mov	[esp+8Ch+var_80], eax
movzx	eax, word ptr [ebx+20h]
mov	dword ptr [esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebp
call	flap_connection_send_version_with_cookie
mov	eax, [ebx+24h]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	dword ptr [ebx+24h], 0
mov	eax, [ebx+5Ch]
cmp	ax, 17h
jz	loc_6889AA74
cmp	ax, 2
jz	loc_6889AAE0
cmp	ax, 0Eh
jz	loc_6889AA3C
			
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_6889AB19
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+var_6C], eax
mov	esi, offset dword_688AD1C0
mov	ecx, 7
mov	edi, eax
rep movsd
lea	eax, [esp+8Ch+var_3C]
mov	dword ptr [esp+8Ch+var_68], eax
mov	esi, offset dword_688AD1DC
mov	cl, 7
mov	edi, eax
rep movsd
mov	dword ptr [esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], offset aAllow_multiple 
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_bool
mov	ecx, [ebp+44h]
test	ecx, ecx
jz	short loc_6889AA34
lea	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_78], eax
mov	[esp+8Ch+var_7C], edx
mov	eax, [ebx+24h]
mov	[esp+8Ch+var_80], eax
movzx	eax, word ptr [ebx+20h]
mov	dword ptr [esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebp
call	flap_connection_send_version_with_cookie_and_clientinfo
jmp	loc_6889A96F
lea	edx, [esp+8Ch+var_58]
jmp	short loc_6889AA0C
align 4
mov	eax, [ebx+28h]
mov	[esp+8Ch+var_88], eax
mov	eax, [ebp+34h]
mov	[esp+8Ch+var_8C], eax
call	g_slist_prepend
mov	[ebp+34h], eax
mov	dword ptr [ebx+28h], 0
jmp	loc_6889A9A2
align 10h
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebp
call	flap_connection_send_version
jmp	loc_6889A981
align 4
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_username
mov	dword ptr [esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebp
call	aim_request_login
mov	[esp+8Ch+var_88], offset aUsernameSentWa 
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_info
mov	[esp+8Ch+var_88], offset aUsernameSent 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 6
mov	dword ptr [esp+8Ch+var_84], 1
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_update_progress
jmp	loc_6889A9A2
align 10h
mov	[esp+8Ch+var_88], offset aConnectionEsta 
mov	[esp+8Ch+var_8C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 6
mov	dword ptr [esp+8Ch+var_84], 4
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_update_progress
jmp	loc_6889A9A2
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	dword ptr [ebx+1Ch], 0
mov	[ebx+2Ch], eax
test	eax, eax
js	short loc_6889AB80
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset flap_connection_recv_cb
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[ebx+54h], eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_6889AB97
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_6889A8E4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889AB97
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_6889A7D4
			
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+58h]
test	eax, eax
jz	short loc_6889ABCA
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+58h], 0
mov	dword ptr [ebx+30h], 0
mov	[esp+2Ch+var_2C], esi
call	purple_ssl_strerror
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889ABF3
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_6889A7D4
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset flap_connection_recv_cb_ssl
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_input_add
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889AC3A
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_6889A8E4
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+3Ch]
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+0D8h]
mov	[esp], eax
call	aim_ssi_getpresence
test	esi, esi
jz	short loc_6889AC98
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889ACAB
and	eax, 0FFFDFFFFh
mov	[esp+34h], eax
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	aim_ssi_setpresence
align 4
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889ACAB
or	eax, 20000h
jmp	short loc_6889AC85
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	edi, offset aNone 
mov	ecx, 5
repe cmpsb
setnbe	bl
setb	al
sub	ebx, eax
movsx	ebx, bl
mov	eax, [ebp+0D8h]
mov	[esp+3Ch+var_3C], eax
call	aim_ssi_getpresence
test	ebx, ebx
jnz	short loc_6889AD20
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889AD31
and	ah, 0FBh
mov	[esp+3Ch+arg_4], eax
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	aim_ssi_setpresence
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889AD31
or	ah, 4
jmp	short loc_6889AD0C
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	ebx, [esp+4Ch]
mov	dword ptr [esp+4], offset aNoResultsFound 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+4], ebx
mov	[esp], eax
call	g_strdup_printf
mov	ebx, eax
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	eax, [esi+68h]
mov	[esp], eax
call	purple_notify_message
mov	[esp], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889ADC8
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	eax, [esp+40h]
mov	esi, [eax+68h]
mov	eax, [esp+50h]
mov	[esp+0Ch], eax
mov	[esp+8], eax
mov	eax, [esp+4Ch]
mov	[esp+4], eax
mov	dword ptr [esp], offset	aSBrAHrefSSA 
call	g_strdup_printf
mov	ebx, eax
mov	dword ptr [esp+4], offset aPopUpMessage	
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], ebx
mov	dword ptr [esp+0Ch], 0
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	[esp], esi
call	purple_notify_formatted
mov	[esp], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889AE6C
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	edx, [esp+4Ch]
mov	ebx, edx
mov	eax, [esp+50h]
and	edx, 0FFFFh
test	eax, eax
jz	loc_6889AF24
mov	[esp+0Ch], edx
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aMotdSHu 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_misc
cmp	bx, 3
ja	short loc_6889AF0D
mov	dword ptr [esp+4], offset aYourAimConnect 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 1
mov	eax, [esi+68h]
mov	[esp], eax
call	purple_notify_message
mov	eax, 1
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889AF2E
add	esp, 34h
pop	ebx
pop	esi
retn
mov	eax, offset aUnknown_0 
jmp	loc_6889AEA0
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+68h]
mov	[esp], eax
call	purple_connection_get_account
mov	esi, eax
movzx	edi, word ptr [esp+3Ch]
mov	[esp+8], edi
mov	dword ptr [esp+4], offset aLocateRightsMa 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_misc
mov	[ebx+64h], edi
mov	[ebx+60h], edi
mov	dword ptr [esp+4], 700E402Dh
mov	dword ptr [esp+8], 1
mov	[esp], ebx
call	aim_locate_setcaps
mov	[esp], esi
call	purple_account_get_active_status
mov	ecx, [esi+0Ch]
mov	[esp+4], eax
mov	dword ptr [esp], 1
mov	edx, 1
mov	eax, esi
call	sub_6889A35C
mov	eax, 1
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889AFCB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edi+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	ebp, eax
mov	esi, [esp+5Ch+arg_10]
mov	eax, [esp+5Ch+arg_14]
movzx	edx, [esp+5Ch+arg_18]
cmp	edx, 4		
jbe	loc_6889B0BC
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuMes 
mov	[esp+5Ch+var_58], offset aYouMissedHuM_0 
xchg	ax, ax
			
mov	[esp+5Ch+var_5C], offset aPidgin_6 
mov	[esp+5Ch+var_30], edx
call	libintl_dngettext
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	purple_conv_present_error
test	eax, eax
jnz	short loc_6889B097
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889B162
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_688B2778[edx*4] 
align 4
			
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuM_1 
mov	[esp+5Ch+var_58], offset aYouMissedHuM_2 
jmp	loc_6889B024
align 4
			
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuM_3 
mov	[esp+5Ch+var_58], offset aYouMissedHuM_4 
jmp	loc_6889B024
align 4
			
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuM_5 
mov	[esp+5Ch+var_58], offset aYouMissedHuM_6 
jmp	loc_6889B024
align 4
			
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuM_7 
mov	[esp+5Ch+var_58], offset aYouMissedHuM_8 
jmp	loc_6889B024
align 4
			
mov	edx, [esi]	
movzx	ebx, ax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset aYouMissedHuM_9 
mov	[esp+5Ch+var_58], offset aYouMissedHu_10 
jmp	loc_6889B024
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	esi, [eax+68h]
mov	ebx, [esp+5Ch+arg_C]
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_2D], al
mov	edi, [esp+5Ch+arg_14]
and	eax, 0FFh
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aSsiReceivedAut 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_info
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_account
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	purple_find_buddy
mov	ebp, eax
test	eax, eax
jz	loc_6889B2A4
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_get_alias_only
test	eax, eax
jz	loc_6889B2A4
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_alias_only
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], offset aSS_1 
call	g_strdup_printf
mov	ebx, eax
cmp	[esp+5Ch+var_2D], 0
jnz	loc_6889B2B9
test	edi, edi
jz	loc_6889B2E8
mov	[esp+5Ch+var_58], offset aTheUserSHasDen 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_58], offset aAuthorizationD 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], esi
call	purple_notify_message
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889B303
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	ebx, eax
cmp	[esp+5Ch+var_2D], 0
jz	loc_6889B209
mov	[esp+5Ch+var_58], offset aTheUserSHasGra 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_58], offset aAuthorizationG 
jmp	loc_6889B23F
mov	[esp+5Ch+var_58], offset aNoReasonGiven_ 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
jmp	loc_6889B211
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	esi, [eax+68h]
mov	ebx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aSsiSHasGivenYo 
mov	[esp+7Ch+var_7C], offset aOscar_13 
call	purple_debug_info
mov	[esp+7Ch+var_7C], esi
call	purple_connection_get_account
mov	[esp+7Ch+var_78], ebx
mov	[esp+7Ch+var_7C], eax
call	purple_find_buddy
mov	ebp, eax
test	eax, eax
jz	loc_6889B4CC
mov	[esp+7Ch+var_7C], eax
call	purple_buddy_get_alias_only
test	eax, eax
jz	loc_6889B4BC
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_alias_only
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], ebx
mov	[esp+7Ch+var_7C], offset aSS_1 
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+var_78], offset aTheUserSHasGiv 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	[esp+7Ch+var_7C], 0Ch
call	g_malloc
mov	edi, eax
mov	[eax], esi
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
mov	[edi+4], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_alias_only
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[edi+8], eax
mov	[esp+7Ch+var_78], offset a_no 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_yes 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_7C], esi
mov	[esp+7Ch+var_34], eax
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aAuthorizatio_0 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset oscar_free_name_data
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], offset sub_6889902C
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], ebx
mov	[esp+7Ch+var_68], ebp
mov	[esp+7Ch+var_6C], 0FFFFFFFFh
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], esi
call	purple_request_action
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, 1
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889B524
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
jmp	loc_6889B38D
align 4
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
mov	edi, eax
mov	[esp+7Ch+var_78], offset aTheUserSHasGiv 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	[esp+7Ch+var_7C], 0Ch
call	g_malloc
mov	edi, eax
mov	[eax], esi
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
mov	[edi+4], eax
xor	eax, eax
jmp	loc_6889B3E6
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, ds:__stack_chk_guard
mov	[esp+0B8h+var_8C], eax
xor	eax, eax
mov	eax, [esp+0B8h+var_78]
mov	esi, [eax+68h]
mov	ebx, [esp+0B8h+var_6C]
test	ebx, ebx
jnz	loc_6889B5F0
jmp	loc_6889B684
align 4
cmp	ax, 0Eh
jz	loc_6889B658
test	ax, ax
jz	short loc_6889B5E5
mov	[esp+0Ch], eax
movzx	eax, word ptr [ebx]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aSsiAction0x04h 
mov	dword ptr [esp+0], offset aOscar_13 
call	purple_debug_error
mov	edi, [ebx+4]
test	edi, edi
jz	loc_6889B720
mov	dword ptr [esp+4], offset aUnableToAddThe 
mov	dword ptr [esp+0], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4], edi
mov	[esp+0], eax
call	g_strdup_printf
mov	edi, eax
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_6889B5DD
mov	[esp+0], esi
call	purple_connection_get_account
mov	[esp+8], edi
mov	[esp+4], eax
mov	eax, [ebx+4]
mov	[esp+0], eax
call	purple_conv_present_error
test	eax, eax
jz	loc_6889B6B8
			
mov	[esp+0], edi
call	g_free
			
mov	ebx, [ebx+0Ch]
test	ebx, ebx
jz	loc_6889B684
			
mov	eax, [ebx+8]
test	eax, eax
jz	loc_6889B6A0
mov	eax, [eax]
test	eax, eax
jz	loc_6889B6AC
			
mov	[esp+10h], eax
movzx	eax, word ptr [ebx]
mov	[esp+0Ch], eax
movzx	eax, word ptr [ebx+2]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aSsiStatusIs0x0 
mov	dword ptr [esp+0], offset aOscar_13 
call	purple_debug_misc
movzx	eax, word ptr [ebx+2]
cmp	ax, 0FFFFh
jz	short loc_6889B5E5
cmp	ax, 0Ch
jnz	loc_6889B558
mov	edi, [ebx+4]
test	edi, edi
jz	loc_6889B704
mov	dword ptr [esp+4], offset aUnableToAddT_0 
jmp	loc_6889B599
cmp	word ptr [ebx],	8
jnz	short loc_6889B5E5
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_6889B5E5
mov	dword ptr [esp+8], 0
mov	[esp+4], eax
mov	[esp+0], esi
call	oscar_auth_sendrequest
mov	ebx, [ebx+0Ch]
test	ebx, ebx
jnz	loc_6889B5F0
			
mov	eax, 1
mov	edx, [esp+0B8h+var_8C]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889B73B
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, offset aNoItem 
jmp	loc_6889B605
align 4
mov	eax, offset aNoName 
jmp	loc_6889B605
align 4
mov	dword ptr [esp+4], offset aUnableToAdd 
mov	dword ptr [esp+0], offset aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], edi
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	[esp+0], esi
call	purple_notify_message
jmp	loc_6889B5DD
align 4
mov	dword ptr [esp+4], offset aNoName_0 
mov	dword ptr [esp+0], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
jmp	loc_6889B64B
align 10h
mov	dword ptr [esp+4], offset aNoName_0 
mov	dword ptr [esp+0], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
jmp	loc_6889B591
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edi, [esp+4Ch+arg_C]
mov	ebx, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_4C], offset aSsiRights 
call	g_string_new
mov	esi, eax
test	edi, edi
jle	loc_6889B81D
xor	ebp, ebp
xchg	ax, ax
movzx	eax, word ptr [ebx+ebp*2]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aMaxType0x04xHd 
mov	[esp+4Ch+var_4C], esi
call	g_string_append_printf
inc	ebp
cmp	ebp, edi
jnz	short loc_6889B77C
mov	[esp+4Ch+var_48], offset asc_688B2AE8 
mov	[esp+4Ch+var_4C], esi
call	g_string_append
mov	eax, [esi]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aS 
mov	[esp+4Ch+var_4C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], esi
call	g_string_free
movzx	eax, word ptr [ebx]
mov	edx, [esp+4Ch+var_30]
mov	[edx+50h], eax
movzx	eax, word ptr [ebx+2]
mov	[edx+54h], eax
cmp	ebp, 1
jz	short loc_6889B804
movzx	eax, word ptr [ebx+4]
mov	edx, [esp+4Ch+var_30]
mov	[edx+58h], eax
cmp	ebp, 2
jz	short loc_6889B804
movzx	eax, word ptr [ebx+6]
mov	[edx+5Ch], eax
			
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889B868
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], offset asc_688B2AE8 
mov	[esp+4Ch+var_4C], eax
call	g_string_append
mov	eax, [esi]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aS 
mov	[esp+4Ch+var_4C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], esi
call	g_string_free
test	edi, edi
jnz	short loc_6889B804
movzx	eax, word ptr [ebx]
mov	edx, [esp+4Ch+var_30]
mov	[edx+50h], eax
jmp	short loc_6889B804
align 4
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+30h]
mov	eax, [eax+68h]
mov	edx, [esp+34h]
call	sub_68898FDC
mov	ebx, eax
test	eax, eax
jz	short loc_6889B8D1
mov	edi, [esp+3Ch]
mov	esi, [esp+40h]
mov	eax, esi
and	eax, 0FFFFh
mov	[esp+0Ch], eax
mov	eax, edi
and	eax, 0FFFFh
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aInsideChat_inf 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_misc
mov	[ebx+1Ch], di
mov	[ebx+1Eh], si
mov	eax, 1
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889B8E9
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
movzx	esi, word ptr [esp+40h]
movzx	edi, word ptr [esp+3Ch]
mov	[esp+0Ch], esi
mov	[esp+8], edi
mov	dword ptr [esp+4], offset aBuddyListRight 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_misc
mov	[ebx+50h], edi
mov	[ebx+4Ch], esi
mov	eax, 1
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889B949
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 134h
mov	eax, ds:__stack_chk_guard
mov	[esp+12Ch], eax
xor	eax, eax
mov	eax, [esp+140h]
mov	ebx, [eax+68h]
mov	eax, [esp+14Ch]
test	ax, ax
jz	short loc_6889B9C4
mov	dword ptr [esp+0Ch], offset aUnknown_1 
and	eax, 0FFFFh
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aAccountConfirm 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, 1
mov	edx, [esp+12Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889BA74
add	esp, 134h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [esp+0Ch], offset aEmailSent 
and	eax, 0FFFFh
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aAccountConfirm 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	[esp], ebx
call	purple_connection_get_account
mov	[esp], eax
call	purple_account_get_username
mov	esi, eax
mov	dword ptr [esp+4], offset aYouShouldRecei 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0Ch], esi
mov	[esp+8], eax
mov	dword ptr [esp+4], 100h
lea	esi, [esp+2Ch]
mov	[esp], esi
call	g_snprintf
mov	dword ptr [esp+4], offset aAccountConfi_0 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], esi
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 2
mov	[esp], ebx
call	purple_notify_message
jmp	loc_6889B9A1
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_38], eax
mov	edx, [esp+5Ch+arg_C]
mov	ecx, [esp+5Ch+arg_10]
mov	edi, [esp+5Ch+arg_14]
mov	esi, edi
mov	ebp, [esp+5Ch+arg_18]
mov	eax, [esp+5Ch+arg_1C]
mov	ebx, [esp+5Ch+arg_20]
test	ebx, ebx
jz	loc_6889BCAC
mov	[esp+5Ch+var_34], ebx
test	eax, eax
jz	loc_6889BCBC
test	ebp, ebp
jz	loc_6889BCCC
mov	[esp+5Ch+var_30], ebp
and	edi, 0FFFFh
and	ecx, 0FFFFh
mov	[esp+5Ch+var_3C], ecx
test	edx, edx
jz	loc_6889BC90
mov	edx, offset aChange 
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_40], ecx
mov	[esp+5Ch+var_44], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], edi
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aAccountInfoBec 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_misc
test	si, si
jz	loc_6889BBDC
test	ebp, ebp
jz	loc_6889BBDC
cmp	si, 1
jz	loc_6889BCDC
cmp	si, 6
jz	loc_6889BCEC
cmp	si, 0Bh
jz	loc_6889BCFC
cmp	si, 1Dh
jz	loc_6889BD0C
cmp	si, 21h
jz	loc_6889BD1C
cmp	si, 23h
jz	loc_6889BC9C
mov	[esp+5Ch+var_58], offset aError0x04xUnkn 
			
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aErrorChangingA 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
jmp	loc_6889BC5C
align 4
			
test	ebx, ebx
jz	loc_6889BC70
mov	ecx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], ecx
call	purple_connection_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_username
mov	esi, eax
mov	[esp+5Ch+var_58], offset aTheEmailAddres 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aAccountInfo 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 2
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	purple_notify_message
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, 1
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_6889BD29
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	edx, offset aRequest 
jmp	loc_6889BAF3
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUnab 
jmp	loc_6889BB80
align 4
mov	[esp+5Ch+var_34], offset aNull_0 
test	eax, eax
jnz	loc_6889BACA
mov	eax, offset aNull_0 
test	ebp, ebp
jnz	loc_6889BAD2
lea	esi, [esi+0]
mov	[esp+5Ch+var_30], offset aNull_0 
jmp	loc_6889BAD6
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUn_0 
jmp	loc_6889BB80
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUn_1 
jmp	loc_6889BB80
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUn_2 
jmp	loc_6889BB80
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUn_3 
jmp	loc_6889BB80
align 4
mov	[esp+5Ch+var_58], offset aError0x04xUn_4 
jmp	loc_6889BB80
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_30], eax
mov	edi, [esp+5Ch+arg_C]
mov	esi, [esp+5Ch+arg_10]
mov	ebp, [esp+5Ch+arg_14]
call	purple_notify_searchresults_new
mov	ebx, eax
test	eax, eax
jz	loc_6889BE6C
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], offset aTheFollowingUs 
mov	[esp+5Ch+var_58], offset aTheFollowing_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dngettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_58], offset aUsername 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_notify_searchresults_column_add
test	esi, esi
jle	short loc_6889BDFF
shl	esi, 1
lea	eax, ds:0[esi*8]
sub	eax, esi
lea	esi, [ebp+eax*8+0]
sub	esi, eax
nop
mov	[esp+5Ch+var_5C], ebp
call	g_strdup
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], 0
call	g_list_append
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_notify_searchresults_row_add
add	ebp, 62h
cmp	ebp, esi
jnz	short loc_6889BDD4
mov	[esp+5Ch+var_54], offset loc_6889BED4
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], ebx
call	purple_notify_searchresults_button_add
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	purple_notify_searchresults
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889BECE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aPurple_parse_s 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_error
mov	[esp+5Ch+var_58], offset aUnableToDispla 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	purple_notify_message
jmp	short loc_6889BE53
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], 0
mov	eax, [esp+34h]
mov	[esp], eax
call	g_list_nth_data
mov	ebx, eax
mov	[esp], esi
call	purple_connection_get_account
mov	dword ptr [esp+0Ch], 0
mov	dword ptr [esp+8], 0
mov	[esp+4], ebx
mov	[esp], eax
call	purple_blist_request_add_buddy
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889BF34
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_6889C036
mov	[esp+4Ch+Val], 2Dh 
mov	[esp+4Ch+Str], eax 
call	strchr
test	eax, eax
jz	loc_6889C036
inc	eax
mov	[esp+4Ch+Val], 2Dh 
mov	[esp+4Ch+Str], eax 
call	strchr
mov	ebx, eax
test	eax, eax
jz	loc_6889C036
lea	ebp, [eax+1]
mov	[esp+4Ch+Str], ebp
call	g_strdup
mov	ecx, eax
mov	dl, [ebx+1]
test	dl, dl
jz	loc_6889C032
mov	ebx, 1
xor	esi, esi
lea	edi, [esp+4Ch+Dest]
jmp	short loc_6889BFC0
align 10h
mov	[ecx+ebx-1], dl
mov	eax, ebx
inc	esi
mov	dl, [ebp+esi+0]
inc	ebx
test	dl, dl
jz	short loc_6889C018
			
cmp	dl, 25h
jnz	short loc_6889BFB0
mov	[esp+4Ch+Count], 2 
lea	eax, [ebp+esi+1]
mov	[esp+4Ch+Val], eax 
mov	[esp+4Ch+Str], edi 
mov	[esp+4Ch+var_30], ecx
call	strncpy
mov	[esp+4Ch+var_21], 0
add	esi, 2
mov	[esp+4Ch+Count], 10h 
mov	[esp+4Ch+Val], 0 
mov	[esp+4Ch+Str], edi 
call	strtol
mov	ecx, [esp+4Ch+var_30]
mov	[ecx+ebx-1], al
mov	eax, ebx
inc	esi
mov	dl, [ebp+esi+0]
inc	ebx
test	dl, dl
jnz	short loc_6889BFC0
lea	esi, [esi+0]
			
mov	byte ptr [ecx+eax], 0
mov	eax, ecx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889C03A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	eax, eax
jmp	short loc_6889C018
			
xor	ecx, ecx
jmp	short loc_6889C01C
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	edx, [ebp+68h]
mov	[esp+6Ch+var_30], edx
mov	[esp+6Ch+Str], edx
call	purple_connection_get_account
mov	[esp+6Ch+var_34], eax
mov	ebx, [esp+6Ch+arg_C]
movzx	edi, word ptr [ebp+0F4h]
mov	esi, [ebx+4]
mov	[esp+6Ch+Val], 3Ah 
mov	[esp+6Ch+Str], esi 
call	strchr
mov	edx, eax
test	eax, eax
jz	loc_6889C2A8
sub	eax, esi
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], esi
mov	[esp+6Ch+var_40], edx
call	g_strndup
mov	[esp+6Ch+var_3C], eax
mov	edx, [esp+6Ch+var_40]
inc	edx
mov	[esp+6Ch+Str], edx 
call	atoi
mov	[esp+6Ch+var_38], eax
cmp	byte ptr [ebx+14h], 0
jz	loc_6889C230
movzx	eax, word ptr [ebx]
cmp	ax, 7
jz	loc_6889C288
cmp	ax, 10h
jz	loc_6889C288
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aConnectingToFl 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_info
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], ebp
call	flap_connection_new
mov	esi, eax
movzx	eax, word ptr [ebx+8]
mov	[esi+20h], ax
mov	[esp+6Ch+Val], eax
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+Str], eax
call	g_memdup
mov	[esi+24h], eax
cmp	word ptr [esi+5Ch], 0Eh
jz	loc_6889C2C0
cmp	byte ptr [ebx+14h], 0
jnz	short loc_6889C1A0
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], offset sub_6889AB20
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], 0
call	purple_proxy_connect
mov	[esi+1Ch], eax
mov	eax, [esi+30h]
test	eax, eax
jz	short loc_6889C1DE
			
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Str], eax
call	g_free
mov	eax, 1
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889C3A6
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+var_54], esi
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], offset sub_6889AB9C
mov	[esp+6Ch+var_60], offset sub_6889ABF8
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Val], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	purple_ssl_connect_with_ssl_cn
mov	[esi+30h], eax
test	eax, eax
jnz	short loc_6889C177
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_6889C177
mov	[esp+6Ch+Val], offset aUnableToInitia 
mov	[esp+6Ch+Str], offset aPidgin_6	
call	libintl_dgettext
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], 6
mov	[esp+6Ch+Str], esi
call	flap_connection_schedule_destroy
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aUnableToConn_3 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_error
jmp	loc_6889C177
align 10h
mov	[esp+6Ch+var_64], offset aOpportunisti_0 
mov	[esp+6Ch+Val], offset aEncryption_0 
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	purple_account_get_string
mov	edi, offset aOpportunisti_0 
mov	ecx, 19h
mov	esi, eax
repe cmpsb
jz	loc_6889C328
mov	edi, offset aRequire_encryp 
mov	ecx, 13h
mov	esi, eax
repe cmpsb
jz	loc_6889C348
cmp	byte ptr [ebx+14h], 0
jnz	loc_6889C0C2
movzx	eax, word ptr [ebx]
jmp	loc_6889C0D9
align 4
			
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aIgnoringBroken 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	byte ptr [ebx+14h], 0
jmp	short loc_6889C27E
align 4
mov	[esp+6Ch+var_38], edi
mov	[esp+6Ch+Str], esi
call	g_strdup
mov	[esp+6Ch+var_3C], eax
jmp	loc_6889C0B8
align 10h
mov	[esp+6Ch+Str], 20h
call	g_malloc0
mov	edi, eax
mov	[eax+0Ch], esi
mov	edx, [esp+6Ch+var_30]
mov	[eax+14h], edx
mov	eax, [ebx+1Ch]
mov	[esp+6Ch+Str], eax
call	g_strdup
mov	[edi], eax
mov	eax, [ebx+18h]
mov	[edi+8], ax
mov	eax, [ebx+20h]
mov	[edi+0Ah], ax
mov	eax, [ebx+1Ch]
call	sub_6889BF3C
mov	[edi+4], eax
mov	[esi+28h], edi
movzx	eax, word ptr [edi+8]
mov	[esp+6Ch+var_60], eax
mov	eax, [edi]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aConnectingToCh 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_info
jmp	loc_6889C137
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aWeWonTUseSslFo 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_warning
jmp	loc_6889C274
movzx	eax, word ptr [ebx]
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aFlapServerSDOf 
mov	[esp+6Ch+Str], offset aOscar_13	
call	purple_debug_error
mov	[esp+6Ch+Val], offset aYouRequiredE_0 
mov	[esp+6Ch+Str], offset aPidgin_6	
call	libintl_dgettext
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], 4
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], edx
call	purple_connection_error_reason
xor	eax, eax
jmp	loc_6889C188
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	edx, [esp+15Ch+arg_0]
mov	[esp+15Ch+var_134], edx
mov	edx, [esp+15Ch+arg_4]
mov	[esp+15Ch+var_130], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	esi, [esp+15Ch+arg_C]
mov	ebp, [esp+15Ch+arg_10]
mov	ebx, [esp+15Ch+arg_14]
test	ebx, ebx
jz	loc_6889C4EC
mov	eax, ebx
mov	[esp+15Ch+var_14C], eax
mov	[esp+15Ch+var_150], ebp
mov	[esp+15Ch+var_154], esi
mov	[esp+15Ch+var_158], offset aOffsetULenUFil 
mov	[esp+15Ch+var_15C], offset aOscar_13 
call	purple_debug_misc
test	ebp, ebp
jz	loc_6889C4A4
mov	[esp+15Ch+var_15C], 1Ch
call	g_malloc0
mov	edi, eax
mov	edx, [esp+15Ch+var_134]
mov	eax, [edx+68h]
mov	[edi], eax
mov	edx, [esp+15Ch+var_130]
mov	[edi+14h], edx
mov	[edi+4], esi
mov	[edi+8], ebp
mov	[esp+15Ch+var_15C], ebx
call	g_strdup
mov	[edi+0Ch], eax
mov	eax, [edi]
mov	[esp+15Ch+var_148], edi
mov	[esp+15Ch+var_14C], offset sub_6889C5A4
mov	[esp+15Ch+var_150], 50h
mov	[esp+15Ch+var_154], offset aPidgin_im 
mov	ecx, [eax+0Ch]
mov	[esp+15Ch+var_158], ecx
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_connect
test	eax, eax
jz	short loc_6889C4F8
			
mov	eax, 1
mov	edx, [esp+15Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889C59C
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+15Ch+var_158], offset aLenIs0HashingN 
mov	[esp+15Ch+var_15C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+15Ch+var_148], 0
mov	[esp+15Ch+var_14C], 0
mov	[esp+15Ch+var_150], 0
mov	[esp+15Ch+var_154], esi
mov	edx, [esp+15Ch+var_130]
mov	[esp+15Ch+var_158], edx
mov	edx, [esp+15Ch+var_134]
mov	[esp+15Ch+var_15C], edx
call	aim_sendmemblock
jmp	short loc_6889C481
align 4
mov	eax, offset aAim_exe_0 
jmp	loc_6889C3F9
align 4
mov	eax, [edi+0Ch]
mov	[esp+15Ch+var_15C], eax
call	g_free
mov	[esp+15Ch+var_15C], edi
call	g_free
mov	[esp+15Ch+var_158], offset aHttpPidgin_im 
mov	[esp+15Ch+var_15C], offset aWebsite 
call	oscar_get_ui_info_string
mov	ebx, eax
mov	[esp+15Ch+var_158], offset aYouMayBeDiscon 
mov	[esp+15Ch+var_15C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_150], ebx
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 100h
lea	ebx, [esp+15Ch+var_120]
mov	[esp+15Ch+var_15C], ebx
call	g_snprintf
mov	[esp+15Ch+var_158], offset aUnableToGetAVa 
mov	[esp+15Ch+var_15C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_144], 0
mov	[esp+15Ch+var_148], 0
mov	[esp+15Ch+var_14C], ebx
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+var_154], 0
mov	[esp+15Ch+var_158], 1
mov	eax, [edi]
mov	[esp+15Ch+var_15C], eax
call	purple_notify_message
jmp	loc_6889C481
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	[ebx+10h], eax
test	eax, eax
js	loc_6889C6F0
mov	eax, [ebx+0Ch]
test	eax, eax
jz	loc_6889C6A4
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+8]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aGetHttpPidgin_ 
call	g_strdup_printf
mov	esi, eax
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], esi
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_4C], eax
call	wpurple_send
mov	edx, eax
test	eax, eax
js	loc_6889C6B0
mov	ecx, ebp
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
lea	ebp, [ecx-1]
cmp	edx, ebp
jz	short loc_6889C657
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTriedToWriteUB 
mov	[esp+4Ch+var_4C], offset aOscar_13 
call	purple_debug_error
			
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], offset sub_6889C7A4
mov	[esp+4Ch+var_48], 1
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[ebx+18h], eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889C79D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, offset byte_688B2167
jmp	loc_6889C5D5
align 10h
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	edx, eax
mov	ecx, ebp
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
lea	ebp, [ecx-1]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aErrorWritingUB 
mov	[esp+4Ch+var_4C], offset aOscar_13 
call	purple_debug_error
jmp	loc_6889C657
align 10h
mov	[esp+4Ch+var_48], offset aHttpPidgin_im	
mov	[esp+4Ch+var_4C], offset aWebsite 
call	oscar_get_ui_info_string
mov	esi, eax
mov	[esp+4Ch+var_48], offset aYouMayBeDiscon 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+var_48], offset aUnableToGetA_0 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 1
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889C79D
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	ebx, [esp+15Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+15Ch+var_15C], eax
call	purple_connection_get_protocol_data
mov	[esp+15Ch+var_130], eax
mov	[esp+15Ch+var_121], 0
xor	esi, esi
lea	edi, [esp+15Ch+var_121]
jmp	short loc_6889C7EB
align 10h
cmp	al, 0Dh
jz	short loc_6889C80E
xor	esi, esi
mov	[esp+15Ch+var_121], 0
mov	[esp+15Ch+var_154], 1
mov	[esp+15Ch+var_158], edi
mov	eax, [ebx+10h]
mov	[esp+15Ch+var_15C], eax
call	wpurple_read
dec	eax
mov	al, [esp+15Ch+var_121]
jnz	short loc_6889C813
cmp	al, 0Ah
jnz	short loc_6889C7E0
inc	esi
cmp	esi, 2
jnz	short loc_6889C7E6
cmp	al, 0Ah
jz	loc_6889C8E4
mov	[esp+15Ch+var_158], offset aHttpPidgin_im 
mov	[esp+15Ch+var_15C], offset aWebsite 
call	oscar_get_ui_info_string
mov	esi, eax
mov	[esp+15Ch+var_158], offset aYouMayBeDiscon 
mov	[esp+15Ch+var_15C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_150], esi
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 100h
lea	esi, [esp+15Ch+var_120]
mov	[esp+15Ch+var_15C], esi
call	g_snprintf
mov	[esp+15Ch+var_158], offset aUnableToGetA_0 
mov	[esp+15Ch+var_15C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_144], 0
mov	[esp+15Ch+var_148], 0
mov	[esp+15Ch+var_14C], esi
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+var_154], 0
mov	[esp+15Ch+var_158], 1
mov	eax, [ebx]
mov	[esp+15Ch+var_15C], eax
call	purple_notify_message
mov	eax, [ebx+18h]
mov	[esp+15Ch+var_15C], eax
call	purple_input_remove
mov	eax, [ebx+10h]
mov	[esp+15Ch+var_15C], eax
call	wpurple_close
mov	[esp+15Ch+var_15C], ebx
call	g_free
mov	eax, [esp+15Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_6889C9E1
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+15Ch+var_154], 10h
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+var_158], eax
mov	eax, [ebx+10h]
mov	[esp+15Ch+var_15C], eax
call	wpurple_read
cmp	eax, 10h
jz	short loc_6889C918
mov	[esp+15Ch+var_158], offset aCouldNotReadFu 
mov	[esp+15Ch+var_15C], offset aOscar_13 
call	purple_debug_warning
mov	[esp+15Ch+var_110], 0
mov	[esp+15Ch+var_15C], offset aSendingHash	
call	g_string_new
mov	esi, eax
lea	ebp, [esp+15Ch+var_120]
lea	edi, [esp+15Ch+var_110]
nop
movzx	edx, byte ptr [ebp+0]
mov	[esp+15Ch+var_154], edx
mov	[esp+15Ch+var_158], offset a02hhx 
mov	[esp+15Ch+var_15C], esi
call	g_string_append_printf
inc	ebp
cmp	ebp, edi
jnz	short loc_6889C934
mov	[esp+15Ch+var_158], offset asc_688B2AE8	
mov	[esp+15Ch+var_15C], esi
call	g_string_append
mov	eax, [esi]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aS 
mov	[esp+15Ch+var_15C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+15Ch+var_158], 1
mov	[esp+15Ch+var_15C], esi
call	g_string_free
mov	eax, [ebx+18h]
mov	[esp+15Ch+var_15C], eax
call	purple_input_remove
mov	eax, [ebx+10h]
mov	[esp+15Ch+var_15C], eax
call	wpurple_close
mov	[esp+15Ch+var_148], 1
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+var_14C], eax
mov	[esp+15Ch+var_150], 10h
mov	[esp+15Ch+var_154], 0
mov	eax, [ebx+14h]
mov	[esp+15Ch+var_158], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	aim_sendmemblock
mov	[esp+15Ch+var_15C], ebx
call	g_free
jmp	loc_6889C8C5
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_C]
mov	eax, [eax]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+68h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_set_display_name
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889CA24
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	ecx, [eax+68h]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, [esp+3Ch+arg_10]
movzx	eax, [esp+3Ch+arg_14]
cmp	eax, 1
jz	short loc_6889CAD0
jle	short loc_6889CABC
cmp	eax, 2
jz	short loc_6889CA9C
cmp	eax, 0Fh
jz	short loc_6889CAC0
mov	[esp+3Ch+var_2C], eax
and	ebx, 0FFFFh
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aReceivedUnknow 
mov	[esp+3Ch+var_3C], offset aOscar_13 
call	purple_debug_info
			
mov	eax, 1
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889CAEE
add	esp, 38h
pop	ebx
retn
mov	[esp+3Ch+var_30], 1
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ecx
call	serv_got_typing
jmp	short loc_6889CA86
align 4
test	eax, eax
jnz	short loc_6889CA60
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ecx
call	serv_got_typing_stopped
jmp	short loc_6889CA86
align 10h
mov	[esp+3Ch+var_30], 2
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ecx
call	serv_got_typing
jmp	short loc_6889CA86
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [esp+3Ch]
mov	ebx, [esp+40h]
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aSsiReceivedA_0 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
test	ebx, ebx
jz	short loc_6889CB94
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0FFFFFFFFh
mov	[esp], ebx
call	g_utf8_validate
test	eax, eax
jnz	short loc_6889CB63
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aReceivedAuthRe 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_warning
xor	ebx, ebx
			
mov	[esp+0Ch], ebx
mov	dword ptr [esp+8], 1
mov	[esp+4], esi
mov	[esp], edi
call	aim_icq_getalias
mov	eax, 1
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889CBAE
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aReceivedAuth_0 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_warning
jmp	short loc_6889CB63
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	eax, [esp+40h]
mov	eax, [eax+68h]
mov	[esp], eax
call	purple_connection_get_account
mov	esi, eax
mov	ebx, [esp+4Ch]
mov	[esp+4], ebx
mov	[esp], eax
call	purple_find_buddy
mov	edi, eax
mov	[esp+8], ebx
mov	dword ptr [esp+4], offset aSsiSAddedYouTo 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
test	edi, edi
jz	short loc_6889CC44
mov	[esp], edi
call	purple_buddy_get_alias_only
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	[esp+4], ebx
mov	[esp], esi
call	purple_account_notify_added
mov	eax, 1
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889CC48
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
xor	eax, eax
jmp	short loc_6889CC0C
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+68h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_38], edx
mov	ebx, [esp+5Ch+arg_14]
cmp	[esp+5Ch+arg_10], 0
jnz	loc_6889CD5B
test	ebx, ebx
jz	loc_6889CD5B
mov	esi, eax
mov	[esp+5Ch+var_58], ebx
mov	eax, [ebp+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_findparentname
mov	edi, eax
test	eax, eax
jz	loc_6889CD78
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	oscar_utf8_try_convert
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], edi
mov	eax, [ebp+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_getalias
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_40], eax
call	oscar_utf8_try_convert
mov	[esp+5Ch+var_3C], eax
mov	ecx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], ecx
call	g_free
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_find_buddy
test	eax, eax
jz	short loc_6889CD88
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	purple_blist_alias_buddy
			
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], edi
mov	eax, [ebp+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	loc_6889CE58
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	g_free
			
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889CEB6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_34], 0
jmp	loc_6889CCC3
align 4
cmp	word ptr [esp+5Ch+var_38], 8
jnz	short loc_6889CD1D
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_new
mov	[esp+5Ch+var_38], eax
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_6889CE79
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_find_group
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_6889CEF9
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aSsiAddingBud_0 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_info
mov	[esp+5Ch+var_50], 0
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	purple_blist_add_buddy
cmp	byte ptr [ebx],	2Bh
jnz	loc_6889CD1D
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aAvailable_0 
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_prpl_got_user_status
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aMobile_0 
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_prpl_got_user_status
jmp	loc_6889CD1D
align 4
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aPurple_ssi_par 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_error
jmp	loc_6889CD43
mov	[esp+5Ch+var_58], offset aOrphans_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	purple_find_group
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	short loc_6889CEBB
mov	[esp+5Ch+var_58], offset aOrphans_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
jmp	loc_6889CDD0
call	__stack_chk_fail
mov	[esp+5Ch+var_58], offset aOrphans_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	purple_group_new
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], eax
call	purple_blist_add_group
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jnz	loc_6889CDCC
jmp	short loc_6889CE9D
mov	eax, [esp+5Ch+var_34]
jmp	short loc_6889CECF
align 10h
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	edi, [ebx+68h]
mov	esi, [esp+4Ch]
mov	eax, esi
and	eax, 0FFFFh
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aSsiSnacErrorHu 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_error
cmp	si, 5
jz	short loc_6889CF60
mov	eax, 1
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889CFEE
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_6889CFE4
mov	dword ptr [esp+4], offset aTheAimServersW 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	dword ptr [esp+4], offset aUnableToRetrie 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], esi
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	[esp], edi
call	purple_notify_message
mov	[esp+8], ebx
mov	dword ptr [esp+4], offset sub_6889CFF4
mov	dword ptr [esp], 1Eh
call	purple_timeout_add_seconds
mov	[ebx+48h], eax
jmp	loc_6889CF41
align 4
mov	[esp], eax
call	purple_timeout_remove
jmp	short loc_6889CFC1
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_reqdata
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D023
add	esp, 2Ch
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_48], edx
mov	esi, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], esi
xor	esi, esi
movzx	eax, [esp+8Ch+arg_C]
cmp	eax, 2
jz	short loc_6889D098
cmp	eax, 8
jz	loc_6889D1D8
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aChatnavInfoUnk 
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_warning
			
mov	eax, 1
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889D2F9
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+8Ch+var_8C], offset byte_688B2167
call	g_string_new
mov	esi, eax
mov	edx, [esp+8Ch+arg_14]
mov	ebx, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_80], edx
movzx	eax, byte ptr [esp+8Ch+arg_10]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aChatInfoMaxCon 
mov	[esp+8Ch+var_8C], esi
mov	[esp+8Ch+var_4C], edx
call	g_string_append_printf
mov	edx, [esp+8Ch+var_4C]
test	edx, edx
jle	short loc_6889D136
xor	edi, edi
mov	[esp+8Ch+var_3C], ebp
mov	ebp, edx
movzx	eax, word ptr [ebx]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aHu 
mov	[esp+8Ch+var_8C], esi
call	g_string_append_printf
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_6889D11A
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aS_4 
mov	[esp+8Ch+var_8C], esi
call	g_string_append_printf
mov	[esp+8Ch+var_88], offset asc_688B369E 
mov	[esp+8Ch+var_8C], esi
call	g_string_append
inc	edi
add	ebx, 18h
cmp	edi, ebp
jnz	short loc_6889D0E8
mov	ebp, [esp+8Ch+var_3C]
mov	eax, [esi]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aS_2 
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+8Ch+var_88], 1
mov	[esp+8Ch+var_8C], esi
call	g_string_free
mov	eax, [ebp+0Ch]
test	eax, eax
jz	loc_6889D07B
mov	esi, [esp+8Ch+var_48]
nop
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aCreatingRoomS	
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_info
movzx	eax, word ptr [ebx+4]
mov	[esp+8Ch+var_80], eax
mov	eax, [ebx]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebp
call	aim_chatnav_createroom
mov	eax, [ebx]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	[esp+8Ch+var_88], ebx
mov	eax, [ebp+0Ch]
mov	[esp+8Ch+var_8C], eax
call	g_slist_remove
mov	[ebp+0Ch], eax
mov	[esp+8Ch+var_8C], ebx
call	g_free
mov	eax, [ebp+0Ch]
test	eax, eax
jnz	short loc_6889D170
jmp	loc_6889D07B
align 4
mov	edx, [esp+8Ch+arg_10]
mov	eax, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_48], eax
mov	esi, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_3C], esi
mov	eax, [esp+8Ch+arg_1C]
mov	[esp+8Ch+var_44], eax
mov	esi, [esp+8Ch+arg_20]
mov	[esp+8Ch+var_38], esi
mov	eax, [esp+8Ch+arg_24]
mov	[esp+8Ch+var_40], eax
mov	ecx, [esp+8Ch+arg_28]
mov	esi, [esp+8Ch+arg_2C]
mov	edi, [esp+8Ch+arg_30]
mov	eax, [esp+8Ch+arg_34]
mov	ebx, [esp+8Ch+arg_38]
test	eax, eax
jz	loc_6889D2E8
and	edi, 0FFFFh
mov	[esp+8Ch+var_34], edi
and	esi, 0FFh
mov	[esp+8Ch+var_30], esi
and	ecx, 0FFFFh
movzx	esi, word ptr [esp+8Ch+var_40]
mov	[esp+8Ch+var_40], esi
movzx	esi, word ptr [esp+8Ch+var_44]
mov	[esp+8Ch+var_44], esi
movzx	edi, word ptr [esp+8Ch+var_48]
movzx	esi, word ptr [esp+8Ch+var_3C]
test	edx, edx
jz	short loc_6889D2F2
mov	[esp+8Ch+var_5C], ebx
mov	[esp+8Ch+var_60], eax
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_64], eax
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_68], eax
mov	[esp+8Ch+var_6C], ecx
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_70], eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_74], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_78], eax
mov	[esp+8Ch+var_7C], edi
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], offset aCreatedRoomSHu 
mov	[esp+8Ch+var_8C], offset aOscar_13 
call	purple_debug_misc
mov	[esp+8Ch+var_80], edi
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebp
call	aim_chat_join
jmp	loc_6889D07B
mov	eax, offset aNull_0 
jmp	loc_6889D241
mov	edx, offset aNull_0 
jmp	short loc_6889D27B
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [eax+68h]
mov	edx, [esp+4Ch+arg_4]
mov	eax, ebx
call	sub_68898FDC
mov	esi, eax
test	eax, eax
jz	short loc_6889D386
mov	ebp, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_44], eax 
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_48], eax 
mov	eax, [esp+4Ch+arg_18]
mov	[esp+4Ch+Time],	eax 
call	oscar_encoding_to_utf8
mov	edi, eax
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], 0
mov	eax, [ebp+0]
mov	[esp+4Ch+var_44], eax
mov	eax, [esi+10h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	ebx
call	serv_got_chat_in
mov	[esp+4Ch+Time],	edi
call	g_free
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D39F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	eax, [eax+68h]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	esi, [esp+4Ch+arg_10]
mov	edx, [esp+4Ch+arg_4]
call	sub_68898FDC
mov	ebp, eax
test	eax, eax
jz	short loc_6889D412
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jle	short loc_6889D412
xor	ebx, ebx
xchg	ax, ax
mov	edi, [esi]
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_remove_user
inc	ebx
add	esi, 98h
cmp	ebx, [esp+4Ch+var_30]
jnz	short loc_6889D3E4
			
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D42B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	eax, [eax+68h]
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], edx
mov	esi, [esp+5Ch+arg_10]
mov	edx, [esp+5Ch+arg_4]
call	sub_68898FDC
mov	ebp, eax
test	eax, eax
jz	short loc_6889D4AE
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jle	short loc_6889D4AE
xor	ebx, ebx
xchg	ax, ax
mov	edi, [esi]
mov	eax, [ebp+18h]
mov	[esp+5Ch+var_5C], eax
call	purple_conversation_get_chat_data
mov	[esp+5Ch+var_4C], 1
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	purple_conv_chat_add_user
inc	ebx
add	esi, 98h
cmp	ebx, [esp+5Ch+var_30]
jnz	short loc_6889D470
			
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D4C7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	edi, [esi+68h]
mov	[esp+3Ch+var_3C], edi
call	purple_connection_get_account
mov	ebp, eax
mov	ebx, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aOffline_0 
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	purple_prpl_got_user_status
mov	[esp+3Ch+var_34], offset aMobile_0 
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	purple_prpl_got_user_status_deactive
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	eax, [edi+0Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_normalize
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+38h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_remove
mov	eax, 1
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D560
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	edi, [eax+68h]
mov	esi, [esp+5Ch+arg_C]
mov	ecx, [esp+5Ch+arg_14]
mov	ebp, [esp+5Ch+arg_18]
mov	edx, [esp+5Ch+arg_1C]
mov	ebx, [esp+5Ch+arg_20]
test	bx, bx
jz	short loc_6889D601
cmp	bx, 5Ah
jz	short loc_6889D601
and	ebp, 0FFFFh
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ecx
mov	[esp+5Ch+var_30], edx
call	purple_base16_encode
mov	ebp, eax
and	ebx, 0FFFFh
mov	[esp+5Ch+var_58], ebx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_memdup
mov	[esp+5Ch+var_5C], edi
mov	[esp+5Ch+var_30], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], ebx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_icons_set_for_user
mov	[esp+5Ch+var_5C], ebp
call	g_free
			
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889D61A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+3Ch+var_38], 10h
mov	[esp+3Ch+var_3C], eax
call	flap_connection_getbytype
test	eax, eax
jz	loc_6889D764
mov	edx, [ebx+8]
test	edx, edx
jnz	loc_6889D6FC
mov	eax, [ebx+3Ch]
test	eax, eax
jnz	short loc_6889D68F
jmp	short loc_6889D6D0
align 4
			
mov	eax, [ebx+3Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+3Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], eax
call	g_slist_delete_link
mov	[ebx+3Ch], eax
test	eax, eax
jz	short loc_6889D6D0
mov	eax, [eax]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	aim_locate_finduserinfo
test	eax, eax
jz	short loc_6889D66C
movzx	edx, word ptr [eax+5Eh]
test	dx, dx
jz	short loc_6889D66C
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+60h]
mov	[esp+3Ch+var_30], edx
movzx	eax, byte ptr [eax+5Ch]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+3Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	aim_bart_request
jmp	short loc_6889D66C
			
mov	[esp+3Ch+var_38], offset aNoMoreIconsToR 
mov	[esp+3Ch+var_3C], offset aOscar_13 
call	purple_debug_misc
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_6889D795
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_account
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_icons_find_account_icon
mov	esi, eax
test	eax, eax
jz	short loc_6889D78B
mov	[esp+3Ch+var_38], offset aUploadingIco_0 
mov	[esp+3Ch+var_3C], offset aOscar_13 
call	purple_debug_info
mov	[esp+3Ch+var_3C], esi
call	purple_imgstore_get_size
mov	edi, eax
mov	[esp+3Ch+var_3C], esi
call	purple_imgstore_get_data
and	edi, 0FFFFh
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	aim_bart_upload
mov	[esp+3Ch+var_3C], esi
call	purple_imgstore_unref
mov	dword ptr [ebx+8], 0
jmp	loc_6889D660
align 4
mov	ecx, [ebx+4]
test	ecx, ecx
jnz	loc_6889D6E4
mov	[esp+3Ch+var_38], 10h
mov	[esp+3Ch+var_3C], ebx
call	aim_srv_requestnew
mov	dword ptr [ebx+4], 1
jmp	loc_6889D6E4
mov	[esp+3Ch+var_3C], ebx
call	aim_ssi_delicon
jmp	short loc_6889D756
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edx+68h]
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+C], eax
call	purple_connection_get_account
mov	ebx, [esp+5Ch+arg_C]
test	ebx, ebx
jz	loc_6889DD18
mov	ebp, eax
mov	eax, [ebx]
test	eax, eax
jz	loc_6889DD3C
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_find_buddy
test	eax, eax
jz	loc_6889DA14
mov	[esp+5Ch+C], eax
call	purple_buddy_get_presence
mov	[esp+5Ch+C], eax
call	purple_presence_get_active_status
mov	[esp+5Ch+var_30], eax
mov	eax, [ebx]
mov	[esp+5Ch+C], eax
call	oscar_util_valid_name_icq
test	eax, eax
jnz	short loc_6889D87B
mov	edi, [ebx]
movsx	ecx, byte ptr [edi]
test	cl, cl
jz	loc_6889DE8C
mov	esi, ds:__mb_cur_max
jmp	short loc_6889D84A
mov	edx, ds:_pctype
mov	eax, [edx]
mov	ax, [eax+ecx*2]
and	eax, 2
movzx	eax, ax
test	eax, eax
jz	short loc_6889D863
inc	edi
movsx	ecx, byte ptr [edi]
test	cl, cl
jz	loc_6889DC58
cmp	dword ptr [esi], 1
jz	short loc_6889D828
mov	[esp+5Ch+Type],	2 
mov	[esp+5Ch+C], ecx 
call	_isctype
test	eax, eax
jnz	short loc_6889D83E
mov	edi, [ebx]
mov	eax, edi
			
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Type],	edi
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+C], eax
call	serv_got_alias
mov	eax, [ebx+58h]
test	al, 1
jz	loc_6889D960
mov	edi, [ebx+8]
shr	di, 5
and	edi, 1
test	al, 10h
jz	short loc_6889D8E4
mov	esi, [ebx+28h]
test	esi, 20h
jz	loc_6889DA00
			
mov	eax, [ebx]
mov	[esp+5Ch+C], eax
call	oscar_util_valid_name_icq
test	eax, eax
jz	short loc_6889D8F4
test	esi, 20h
jz	loc_6889D97C
mov	[esp+5Ch+Str1],	offset aFree4chat 
test	byte ptr [ebx+8], 80h
jnz	short loc_6889D90A
mov	[esp+5Ch+var_54], offset aMobile_0 
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_status_deactive
jmp	short loc_6889D928
align 4
xor	esi, esi
mov	eax, [ebx]
mov	[esp+5Ch+C], eax
call	oscar_util_valid_name_icq
test	eax, eax
jnz	short loc_6889D8B1
and	esi, 100h
jz	short loc_6889D968
mov	[esp+5Ch+Str1],	offset aInvisible 
			
test	byte ptr [ebx+8], 80h
jz	short loc_6889D8CB
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aMobile_0 
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_status
mov	eax, [ebx+70h]
test	eax, eax
jz	short loc_6889D93C
movzx	edx, word ptr [ebx+78h]
test	dx, dx
jnz	loc_6889DA24
mov	[esp+5Ch+Type],	offset aAvailable_0 
mov	eax, [esp+5Ch+Str1]
mov	[esp+5Ch+C], eax 
call	strcmp
test	eax, eax
jnz	loc_6889DDE8
xor	esi, esi
jmp	loc_6889DC86
align 10h
xor	edi, edi
jmp	loc_6889D890
align 4
test	edi, edi
jz	loc_6889DC64
mov	[esp+5Ch+Str1],	offset aAway 
jmp	short loc_6889D904
align 4
test	esi, 2
jnz	loc_6889DC74
test	esi, 4
jnz	loc_6889DE34
test	esi, 10h
jnz	loc_6889DE41
test	esi, 1
jnz	short loc_6889D970
test	esi, 100h
jnz	loc_6889D8FC
test	esi, 3000h
jnz	loc_6889DE93
test	esi, 4000h
jnz	loc_6889DEA0
test	esi, 5000h
jnz	loc_6889DEAD
test	esi, 6000h
jnz	loc_6889DEBA
and	esi, 2001h
jz	loc_6889DC64
mov	[esp+5Ch+Str1],	offset aLunch 
jmp	loc_6889D904
align 10h
test	esi, esi
jz	loc_6889D8A3
mov	edi, 1
jmp	loc_6889D8A3
align 4
mov	[esp+5Ch+var_30], 0
jmp	loc_6889D805
align 4
mov	[esp+5Ch+var_54], edx 
mov	[esp+5Ch+Type],	eax 
mov	eax, [ebx+74h]
mov	[esp+5Ch+C], eax 
call	oscar_encoding_to_utf8
mov	edi, offset aAvailable_0 
mov	ecx, 0Ah
mov	esi, [esp+5Ch+Str1]
repe cmpsb
jz	loc_6889DC84
test	eax, eax
jz	loc_6889DDE8
mov	esi, eax
mov	[esp+5Ch+var_4C], eax
mov	eax, [ebx]
mov	[esp+5Ch+var_50], eax
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Type],	offset aActivatingStat 
mov	[esp+5Ch+C], offset aOscar_13 
call	purple_debug_info
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], offset aMessage_1 
mov	eax, [esp+5Ch+Str1]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_status
xor	edi, edi
mov	[esp+5Ch+C], esi
call	g_free
mov	[esp+5Ch+C], edi
call	g_free
mov	eax, [ebx+58h]
test	al, 4
jz	loc_6889DB68
mov	eax, [ebx+14h]
			
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_login_time
test	byte ptr [ebx+58h], 8
jnz	loc_6889DC14
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_idle
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_normalize
mov	[esp+5Ch+Type],	eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+38h]
mov	[esp+5Ch+C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	loc_6889DDF4
mov	dword ptr [esi], 0
mov	dword ptr [esi+14h], 0
mov	eax, [ebx+2Ch]
mov	[esi+4], eax
movzx	eax, word ptr [ebx+5Eh]
test	ax, ax
jnz	short loc_6889DB78
			
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889DEC7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	ah, 1
jnz	loc_6889DD60
xor	eax, eax
jmp	loc_6889DAC7
mov	[esp+5Ch+Type],	eax
mov	eax, [ebx+60h]
mov	[esp+5Ch+C], eax
call	purple_base16_encode
mov	esi, eax
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_find_buddy
test	eax, eax
jz	short loc_6889DBBB
mov	[esp+5Ch+C], eax
call	purple_buddy_icons_get_checksum_for_user
test	esi, esi
jz	short loc_6889DBBB
test	eax, eax
jz	short loc_6889DBBB
mov	[esp+5Ch+Type],	eax 
mov	[esp+5Ch+C], esi 
call	strcmp
test	eax, eax
jz	short loc_6889DC06
			
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_buddy_icons_set_for_user
mov	[esp+5Ch+var_54], offset oscar_util_name_compare
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+3Ch]
mov	[esp+5Ch+C], eax
call	g_slist_find_custom
test	eax, eax
jz	loc_6889DE4E
			
mov	[esp+5Ch+C], esi
call	g_free
jmp	loc_6889DB48
align 4
mov	[esp+5Ch+C], 0	
call	time
movzx	edx, word ptr [ebx+6]
lea	edx, [edx+edx*2]
lea	edx, [edx+edx*4]
shl	edx, 2
sub	eax, edx
test	eax, eax
jle	loc_6889DAE3
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 1
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_idle
jmp	loc_6889DB01
align 4
mov	edi, [ebx]
xor	eax, eax
jmp	loc_6889D867
align 4
			
mov	[esp+5Ch+Str1],	offset aAvailable_0 
jmp	loc_6889D904
align 4
mov	[esp+5Ch+Str1],	offset aDnd 
jmp	loc_6889D904
align 4
mov	esi, eax
mov	eax, [ebx+7Ch]
test	eax, eax
jz	loc_6889DD9C
movzx	edx, word ptr [ebx+84h]
test	dx, dx
jnz	loc_6889DD74
			
xor	edi, edi
mov	eax, offset aNull_0 
test	esi, esi
jz	loc_6889DDDC
mov	edx, esi
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], edx
mov	eax, [ebx]
mov	[esp+5Ch+var_50], eax
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Type],	offset aActivatingSt_0 
mov	[esp+5Ch+C], offset aOscar_13 
call	purple_debug_info
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], edi
mov	[esp+5Ch+var_48], offset aItmsurl 
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], offset aMessage_1 
mov	eax, [esp+5Ch+Str1]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_prpl_got_user_status
jmp	loc_6889DAA9
align 4
mov	[esp+5Ch+var_54], offset aInfoNull 
mov	[esp+5Ch+Type],	offset aPurple_parse_o 
mov	[esp+5Ch+C], 0
call	g_return_if_fail_warning
jmp	loc_6889DB48
align 4
mov	[esp+5Ch+var_54], offset aInfoBnNull 
mov	[esp+5Ch+Type],	offset aPurple_parse_o 
mov	[esp+5Ch+C], 0
call	g_return_if_fail_warning
jmp	loc_6889DB48
align 10h
mov	[esp+5Ch+C], 0	
call	time
sub	eax, [ebx+18h]
jmp	loc_6889DAC7
mov	[esp+5Ch+var_54], edx 
mov	[esp+5Ch+Type],	eax 
mov	eax, [ebx+80h]
mov	[esp+5Ch+C], eax 
call	oscar_encoding_to_utf8
test	eax, eax
jz	loc_6889DCA1
mov	edi, eax
jmp	loc_6889DCA8
align 4
mov	edi, [esp+5Ch+var_30]
test	edi, edi
jz	loc_6889DCA1
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+C], eax
call	purple_status_is_available
test	eax, eax
jz	loc_6889DCA1
mov	[esp+5Ch+Type],	offset aItmsurl	
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+C], eax
call	purple_status_get_attr_string
mov	[esp+5Ch+C], eax
call	g_strdup
jmp	short loc_6889DD8A
align 4
mov	edx, offset aNull_0 
jmp	loc_6889DCB2
align 4
			
xor	esi, esi
mov	eax, offset aNull_0 
jmp	loc_6889DA57
mov	[esp+5Ch+C], 2Ch
call	g_malloc0
mov	esi, eax
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_normalize
mov	[esp+5Ch+C], eax
call	g_strdup
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Type],	eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+38h]
mov	[esp+5Ch+C], eax
call	g_hash_table_insert
jmp	loc_6889DB2C
mov	[esp+5Ch+Str1],	offset aNa 
jmp	loc_6889D904
mov	[esp+5Ch+Str1],	offset aOccupied 
jmp	loc_6889D904
mov	eax, [ebx]
mov	[esp+5Ch+Type],	eax
mov	[esp+5Ch+C], ebp
call	purple_normalize
mov	[esp+5Ch+C], eax
call	g_strdup
mov	[esp+5Ch+Type],	eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+3Ch]
mov	[esp+5Ch+C], eax
call	g_slist_prepend
mov	edx, [esp+5Ch+var_3C]
mov	[edx+3Ch], eax
mov	eax, [esp+5Ch+var_34]
call	sub_6889D620
jmp	loc_6889DC06
xor	eax, eax
jmp	loc_6889D867
mov	[esp+5Ch+Str1],	offset aEvil 
jmp	loc_6889D904
mov	[esp+5Ch+Str1],	offset aDepression 
jmp	loc_6889D904
mov	[esp+5Ch+Str1],	offset aAthome 
jmp	loc_6889D904
mov	[esp+5Ch+Str1],	offset aAtwork 
jmp	loc_6889D904
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	edi, [eax+68h]
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_account
mov	esi, eax
movzx	ebp, [esp+5Ch+arg_10]
movzx	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aBosRightsMaxPe 
mov	[esp+5Ch+Str1],	offset aOscar_13 
mov	[esp+5Ch+var_38], eax
call	purple_debug_misc
mov	eax, [esp+5Ch+var_38]
mov	[ebx+58h], eax
mov	[ebx+5Ch], ebp
mov	[esp+5Ch+Str2],	offset aBuddyListLoade 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_info
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_user_info
test	eax, eax
jz	short loc_6889DF69
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_user_info
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	edi
call	serv_set_info
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_username
mov	ebp, eax
mov	eax, [ebx+44h]
test	eax, eax
jz	loc_6889E114
			
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_active_status
mov	ebp, eax
mov	[esp+5Ch+Str1],	eax
call	purple_status_is_available
mov	edx, eax
test	eax, eax
jnz	loc_6889E0F4
xor	eax, eax
mov	[esp+5Ch+Str1],	eax
mov	[esp+5Ch+var_38], edx
call	purple_markup_strip_html
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Str2],	offset aItmsurl	
mov	[esp+5Ch+Str1],	ebp
call	purple_status_get_attr_string
mov	[esp+5Ch+var_48], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_4C], eax
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_setextrainfo
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_set_dc_info
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	[esp+5Ch+Str1],	ebp
call	purple_status_get_presence
mov	ebp, eax
mov	[esp+5Ch+Str1],	eax
call	purple_presence_is_idle
test	eax, eax
jnz	loc_6889E178
xor	eax, eax
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_setidle
mov	eax, [ebx+44h]
test	eax, eax
jnz	short loc_6889E0A4
mov	[esp+5Ch+Str2],	18h
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_requestnew
mov	[esp+5Ch+Str2],	0Dh
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_requestnew
mov	dword ptr [ebx+0C8h], 1
mov	ebp, [ebx+0CCh]
test	ebp, ebp
jz	short loc_6889E087
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Str2],	edx
mov	[esp+5Ch+Str1],	ebx
call	aim_srv_clientready
mov	[esp+5Ch+Str1],	ebx
call	aim_im_reqofflinemsgs
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	edi
call	purple_connection_set_state
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889E2C7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, edi
call	sub_68899944
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	offset aWeb_aware 
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_bool
mov	ebp, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	offset aAuthorization 
mov	[esp+5Ch+Str1],	esi
call	purple_account_get_bool
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebx
call	aim_icq_setsecurity
jmp	loc_6889E02B
align 4
mov	[esp+5Ch+Str2],	offset aMessage_1 
mov	[esp+5Ch+Str1],	ebp
mov	[esp+5Ch+var_38], eax
call	purple_status_get_attr_string
mov	edx, [esp+5Ch+var_38]
jmp	loc_6889DF9C
align 4
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_display_name
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jz	loc_6889DF7E
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_display_name
test	eax, eax
jz	short loc_6889E1A0
mov	[esp+5Ch+Str2],	40h 
mov	[esp+5Ch+Str1],	eax 
mov	[esp+5Ch+var_38], eax
call	strchr
test	eax, eax
mov	edx, [esp+5Ch+var_38]
jz	short loc_6889E1A0
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Str2],	offset aCowardlyRefusi 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_info
jmp	loc_6889DF7E
align 4
mov	[esp+5Ch+Str1],	0 
call	time
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Str1],	ebp
call	purple_presence_get_idle_time
mov	edx, [esp+5Ch+var_34]
sub	edx, eax
mov	eax, edx
jmp	loc_6889E018
align 10h
			
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_account
mov	[esp+5Ch+Str1],	eax
call	purple_account_get_username
mov	[esp+5Ch+Str2],	ebp
mov	[esp+5Ch+Str1],	eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_6889E23A
mov	[esp+5Ch+Str1],	ebp
call	g_strdup
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Str2],	40h 
mov	[esp+5Ch+Str1],	eax 
call	strchr
test	eax, eax
jz	short loc_6889E1E3
mov	byte ptr [eax],	0
mov	[esp+5Ch+Str1],	edi
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	eax
call	flap_connection_getbytype
test	eax, eax
jz	loc_6889E299
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebp
call	flap_connection_getbytype
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebp
call	aim_admin_setnick
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	g_free
jmp	loc_6889DF7E
mov	[esp+5Ch+Str2],	offset aUsernameFormat 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+Str2],	offset aTheNewFormatti 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Str1],	edi
call	purple_notify_message
jmp	loc_6889DF7E
mov	dword ptr [ebp+20h], 1
mov	eax, [ebp+24h]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[ebp+24h], eax
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebp
call	aim_srv_requestnew
jmp	loc_6889DF7E
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889E308
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	aim_auth_securid_send
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	ebp, [esp+9Ch+arg_0]
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_60], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
lea	ebx, [esp+9Ch+var_58]
mov	esi, offset dword_688AD1C0
mov	ecx, 7
mov	edi, ebx
rep movsd
lea	edx, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_6C], edx
mov	esi, offset dword_688AD1DC
mov	cl, 7
mov	edi, edx
rep movsd
mov	edi, [ebp+68h]
mov	[esp+9Ch+var_9C], edi
call	purple_connection_get_account
mov	esi, eax
mov	edx, [esp+9Ch+arg_C]
mov	[esp+9Ch+var_68], edx
mov	edx, [esp+9Ch+arg_10]
mov	[esp+9Ch+var_64], edx
mov	[esp+9Ch+var_94], 1
mov	[esp+9Ch+var_98], offset aAllow_multiple 
mov	[esp+9Ch+var_9C], eax
call	purple_account_get_bool
mov	edx, eax
mov	eax, [ebp+44h]
test	eax, eax
jnz	loc_6889E444
mov	ecx, ebx
mov	[esp+9Ch+var_9C], edi
mov	[esp+9Ch+var_74], edx
mov	[esp+9Ch+var_70], ecx
call	purple_connection_get_password
mov	ebx, eax
mov	[esp+9Ch+var_9C], esi
call	purple_account_get_username
mov	edx, [esp+9Ch+var_74]
mov	[esp+9Ch+var_80], edx
mov	edx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_84], edx
mov	ecx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_88], ecx
mov	edx, [esp+9Ch+var_64]
mov	[esp+9Ch+var_8C], edx
mov	[esp+9Ch+var_90], ebx
mov	[esp+9Ch+var_94], eax
mov	edx, [esp+9Ch+var_60]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], ebp
call	aim_send_login
mov	[esp+9Ch+var_98], offset aPasswordSent 
mov	[esp+9Ch+var_9C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+9Ch+var_90], 6
mov	[esp+9Ch+var_94], 2
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], edi
call	purple_connection_update_progress
mov	eax, 1
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889E44D
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
lea	ecx, [esp+9Ch+var_3C]
jmp	loc_6889E3A6
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	esi, [esp+15Ch+arg_0]
mov	edi, [esp+15Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	ebp, [esi+68h]
mov	[esp+15Ch+Str],	ebp
call	purple_connection_get_account
mov	[esp+15Ch+var_138], eax
movzx	eax, word ptr [esi+0F4h]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aPort_0 
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+Str],	eax
call	purple_account_get_int
mov	[esp+15Ch+var_134], eax
mov	ebx, [esp+15Ch+arg_C]
mov	eax, [ebx]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aInsideAuth_res 
mov	[esp+15Ch+Str],	offset aOscar_13 
call	purple_debug_info
movzx	eax, word ptr [ebx+4]
test	ax, ax
jnz	loc_6889E578
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_6889E4EC 
cmp	word ptr [ebx+18h], 0
jnz	loc_6889E58C
			
mov	[esp+15Ch+var_158], offset aUnknownReaso_1 
			
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 2
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
			
movzx	eax, word ptr [ebx+4]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aLoginErrorCode 
mov	[esp+15Ch+Str],	offset aOscar_13 
call	purple_debug_info
mov	eax, [ebx+8]
test	eax, eax
jz	loc_6889E870
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aErrorUrlS 
mov	[esp+15Ch+Str],	offset aOscar_13 
call	purple_debug_info
mov	eax, 1
			
mov	edx, [esp+15Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889E8DE
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	ax, 1Dh		
ja	loc_6889E4EC	
jmp	ds:off_688B3C28[eax*4] 
align 4
mov	edx, [ebx+1Ch]
test	edx, edx
jz	loc_6889E4EC	
mov	edx, [ebx+10h]
test	edx, edx
jz	loc_6889E8D4
mov	[esp+15Ch+var_14C], eax
mov	[esp+15Ch+var_150], edx
movzx	eax, word ptr [ebx+0Ch]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aRegStatusHuEma 
mov	[esp+15Ch+Str],	offset aOscar_13 
call	purple_debug_misc
mov	[esp+15Ch+var_158], offset aClosingAuthCon 
mov	[esp+15Ch+Str],	offset aOscar_13 
call	purple_debug_info
mov	[esp+15Ch+var_154], 0
mov	[esp+15Ch+var_158], 0
mov	[esp+15Ch+Str],	edi
call	flap_connection_schedule_destroy
mov	edx, [ebx+14h]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
xor	edi, edi
jmp	short loc_6889E613
align 4
cmp	byte ptr [edx+edi], 3Ah
jz	loc_6889E858
inc	edi
cmp	edi, ecx
jnz	short loc_6889E608
mov	[esp+15Ch+var_158], edi
mov	[esp+15Ch+Str],	edx
call	g_strndup
mov	[esp+15Ch+var_130], eax
mov	[esp+15Ch+var_158], 2
mov	[esp+15Ch+Str],	esi
call	flap_connection_new
mov	edi, eax
movzx	eax, word ptr [ebx+18h]
mov	[edi+20h], ax
mov	[esp+15Ch+var_158], eax
mov	eax, [ebx+1Ch]
mov	[esp+15Ch+Str],	eax
call	g_memdup
mov	[edi+24h], eax
mov	eax, [esi+40h]
test	eax, eax
jz	loc_6889E820
mov	[esp+15Ch+var_144], edi
mov	[esp+15Ch+var_148], offset aBos_oscar_aol_ 
mov	[esp+15Ch+var_14C], offset sub_6889AB9C
mov	[esp+15Ch+var_150], offset sub_6889ABF8
mov	eax, [esp+15Ch+var_134]
mov	[esp+15Ch+var_154], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_158], eax
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+Str],	eax
call	purple_ssl_connect_with_ssl_cn
mov	[edi+30h], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+Str],	eax
call	g_free
mov	eax, [edi+30h]
test	eax, eax
jz	loc_6889E87C
mov	[esp+15Ch+var_158], offset aReceivedAuthor 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_150], 6
mov	[esp+15Ch+var_154], 3
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+Str],	ebp
call	purple_connection_update_progress
mov	eax, 1
jmp	loc_6889E558
align 4
			
mov	[esp+15Ch+var_158], offset aYourIpAddressH 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 10h
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
jmp	loc_6889E514
align 4
			
mov	[esp+15Ch+var_158], offset aYourAccountIsC 
jmp	loc_6889E4F4
align 4
			
mov	eax, [esp+15Ch+var_138]	
mov	[esp+15Ch+Str],	eax
call	purple_account_get_remember_password
test	eax, eax
jz	loc_6889E8B8
mov	[esp+15Ch+var_158], offset aIncorrectPas_0 
jmp	loc_6889E4F4
align 10h
			
mov	[esp+15Ch+var_158], offset aTheAolInstantM 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 0
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
jmp	loc_6889E514
align 10h
			
mov	[esp+15Ch+var_158], offset aUsernameDoesNo 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 1
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
jmp	loc_6889E514
align 10h
			
mov	[esp+15Ch+var_158], offset aHttpPidgin_im 
mov	[esp+15Ch+Str],	offset aWebsite	
call	oscar_get_ui_info_string
mov	esi, eax
mov	[esp+15Ch+var_158], offset aTheClientVersi 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_150], esi
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 100h
lea	esi, [esp+15Ch+var_120]
mov	[esp+15Ch+Str],	esi
call	g_snprintf
mov	[esp+15Ch+var_154], esi
mov	[esp+15Ch+var_158], 10h
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
jmp	loc_6889E514
align 10h
			
mov	[esp+15Ch+var_158], offset aYourUsernameHa 
jmp	loc_6889E6F4
align 10h
mov	[esp+15Ch+var_148], edi
mov	[esp+15Ch+var_14C], offset sub_6889AB20
mov	eax, [esp+15Ch+var_134]
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_154], eax
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+Str],	0
call	purple_proxy_connect
mov	[edi+1Ch], eax
jmp	loc_6889E699
lea	eax, [edx+edi+1]
mov	[esp+15Ch+Str],	eax 
call	atoi
mov	[esp+15Ch+var_134], eax
mov	edx, [ebx+14h]
jmp	loc_6889E617
mov	eax, offset byte_688B2167
jmp	loc_6889E53B
align 4
mov	eax, [edi+1Ch]
test	eax, eax
jnz	loc_6889E6B0
mov	[esp+15Ch+var_158], offset aUnableToConn_4 
mov	[esp+15Ch+Str],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], 0
mov	[esp+15Ch+Str],	ebp
call	purple_connection_error_reason
xor	eax, eax
jmp	loc_6889E558
align 4
mov	[esp+15Ch+var_158], 0
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+Str],	eax
call	purple_account_set_password
jmp	loc_6889E740
align 4
mov	edx, offset aNull_2 
jmp	loc_6889E5A2
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	edi, [eax+68h]
mov	[esp+7Ch+var_7C], edi
call	purple_connection_get_account
mov	ecx, [esp+7Ch+arg_C]
mov	ebp, [esp+7Ch+arg_10]
mov	esi, [esp+7Ch+arg_14]
mov	ebx, [esp+7Ch+arg_18]
test	eax, eax
jz	short loc_6889E948
test	ecx, ecx
jz	short loc_6889E948
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_44], eax
mov	[esp+7Ch+var_48], ecx
call	purple_account_get_check_mail
test	eax, eax
mov	edx, [esp+7Ch+var_44]
mov	ecx, [esp+7Ch+var_48]
jnz	short loc_6889E990
			
test	esi, esi
jz	short loc_6889E970
test	ebx, ebx
jz	loc_6889EA4C
mov	[esp+7Ch+var_70], ebx
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], offset aGotAnAlertSS 
mov	[esp+7Ch+var_7C], offset aOscar_13 
call	purple_debug_misc
mov	eax, 1
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889EA64
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
cmp	byte ptr [ecx+0Eh], 0
jz	short loc_6889E948
test	ebp, ebp
jz	short loc_6889E948
mov	ebp, [ecx+10h]
test	ebp, ebp
jz	loc_6889EA56
mov	[esp+7Ch+var_40], offset byte_688B3CA0
mov	[esp+7Ch+var_7C], edx
mov	[esp+7Ch+var_48], ecx
call	purple_account_get_username
mov	[esp+7Ch+var_70], ebp
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aSSS_1	
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+var_2C], 0
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_24], 0
mov	ecx, [esp+7Ch+var_48]
mov	eax, [ecx+8]
mov	[esp+7Ch+var_28], eax
mov	[esp+7Ch+var_5C], 0
mov	[esp+7Ch+var_60], 0
lea	eax, [esp+7Ch+var_28]
mov	[esp+7Ch+var_64], eax
lea	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
movzx	eax, word ptr [ecx+0Ch]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_notify_emails
mov	[esp+7Ch+var_7C], ebp
call	g_free
jmp	loc_6889E948
align 4
mov	ebx, offset byte_688B2167
jmp	loc_6889E954
mov	ebp, offset byte_688B2167
mov	[esp+7Ch+var_40], ebp
jmp	loc_6889E9AD
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
movzx	ebx, [esp+2Ch+arg_C]
mov	[esp+2Ch+var_2C], ebx
call	oscar_get_msgerr_reason
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSnacThrewError 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_error
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889EABA
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	ebx, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
movzx	eax, word ptr [ebx+5Ch]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aFlapConnection 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [ebx+5Ch]
cmp	ax, 2
jz	short loc_6889EB68
cmp	ax, 7
jz	loc_6889EC24
cmp	ax, 0Eh
jz	loc_6889ECC0
cmp	ax, 0Dh
jz	loc_6889ED10
cmp	ax, 18h
jz	loc_6889ED30
cmp	ax, 10h
jz	short loc_6889EB48
			
mov	eax, 1
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889EE5A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	edi, [esi+68h]
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_clientready
mov	dword ptr [esi+4], 0
mov	eax, edi
call	sub_6889D620
jmp	short loc_6889EB2C
align 4
mov	edi, [esi+68h]
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_reqpersonalinfo
mov	dword ptr [esp+4], offset aSsiRequestingR 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	[esp], esi
call	aim_ssi_reqrights
mov	[esp], esi
call	aim_ssi_reqdata
mov	eax, [esi+48h]
test	eax, eax
jz	short loc_6889EBAA
mov	[esp], eax
call	purple_timeout_remove
mov	[esp+8], esi
mov	dword ptr [esp+4], offset sub_6889CFF4
mov	dword ptr [esp], 1Eh
call	purple_timeout_add_seconds
mov	[esi+48h], eax
mov	[esp], esi
call	aim_locate_reqrights
mov	[esp+4], ebx
mov	[esp], esi
call	aim_buddylist_reqrights
mov	[esp], esi
call	aim_im_reqparams
mov	[esp+4], ebx
mov	[esp], esi
call	aim_bos_reqrights
mov	dword ptr [esp+4], offset aFinalizingConn 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+0Ch], 6
mov	dword ptr [esp+8], 5
mov	[esp+4], eax
mov	[esp], edi
call	purple_connection_update_progress
jmp	loc_6889EB2C
align 4
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_clientready
mov	dword ptr [esp+4], offset aConnectedToAdm 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [esi+28h]
test	eax, eax
jnz	loc_6889EDFC
mov	eax, [esi+20h]
test	eax, eax
jnz	loc_6889EDB4
mov	eax, [esi+10h]
test	eax, eax
jnz	loc_6889ED88
mov	edi, [esi+14h]
test	edi, edi
jnz	loc_6889ED54
mov	ecx, [esi+18h]
test	ecx, ecx
jz	loc_6889EB2C
mov	dword ptr [esp+4], offset aSettingEmailAd 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [esi+1Ch]
mov	[esp+8], eax
mov	[esp+4], ebx
mov	[esp], esi
call	aim_admin_setemail
mov	eax, [esi+1Ch]
mov	[esp], eax
call	g_free
mov	dword ptr [esi+1Ch], 0
mov	dword ptr [esi+18h], 0
jmp	loc_6889EB2C
mov	edi, [esi+68h]
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_clientready
mov	edx, ebx
mov	eax, edi
call	sub_68898FDC
mov	ebx, eax
test	eax, eax
jz	loc_6889EB2C
mov	eax, dword_688AD1F8
mov	[ebx+10h], eax
mov	edx, [ebx+4]
lea	ecx, [eax+1]
mov	dword_688AD1F8,	ecx
mov	[esp+8], edx
mov	[esp+4], eax
mov	[esp], edi
call	serv_got_joined_chat
mov	[ebx+18h], eax
jmp	loc_6889EB2C
align 10h
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_clientready
mov	[esp+4], ebx
mov	[esp], esi
call	aim_chatnav_reqrights
jmp	loc_6889EB2C
align 10h
mov	[esp], esi
call	aim_email_sendcookies
mov	[esp], esi
call	aim_email_activate
mov	[esp+4], ebx
mov	[esp], esi
call	aim_srv_clientready
jmp	loc_6889EB2C
align 4
mov	dword ptr [esp+4], offset aRequestingEmai 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	dword ptr [esp+8], 11h
mov	[esp+4], ebx
mov	[esp], esi
call	aim_admin_getinfo
mov	dword ptr [esi+14h], 0
jmp	loc_6889EC70
mov	dword ptr [esp+4], offset aConfirmingAcco 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	[esp+4], ebx
mov	[esp], esi
call	aim_admin_reqconfirm
mov	dword ptr [esi+10h], 0
jmp	loc_6889EC65
mov	dword ptr [esp+4], offset aFormattingUser 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [esi+24h]
mov	[esp+8], eax
mov	[esp+4], ebx
mov	[esp], esi
call	aim_admin_setnick
mov	eax, [esi+24h]
mov	[esp], eax
call	g_free
mov	dword ptr [esi+24h], 0
mov	dword ptr [esi+20h], 0
jmp	loc_6889EC5A
align 4
mov	dword ptr [esp+4], offset aChangingPasswo 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [esi+2Ch]
mov	[esp+0Ch], eax
mov	eax, [esi+30h]
mov	[esp+8], eax
mov	[esp+4], ebx
mov	[esp], esi
call	aim_admin_changepasswd
mov	eax, [esi+2Ch]
mov	[esp], eax
call	g_free
mov	dword ptr [esi+2Ch], 0
mov	eax, [esi+30h]
mov	[esp], eax
call	g_free
mov	dword ptr [esi+30h], 0
mov	dword ptr [esi+28h], 0
jmp	loc_6889EC4F
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	al, 20h
jnz	loc_6889EEF8
test	al, 2
jnz	loc_6889EF68
test	al, 4
jnz	loc_6889EF28
test	al, 10h
jnz	loc_6889EF88
test	al, 1
jnz	loc_6889EFAC
test	eax, 10000h
jnz	loc_6889EFD0
test	ah, 1
jnz	loc_6889EF48
test	ah, 30h
jnz	loc_6889F018
test	ah, 40h
jnz	loc_6889F03C
test	ah, 50h
jnz	loc_6889F060
test	ah, 60h
jnz	loc_6889F084
test	eax, 2001h
jnz	loc_6889EFF4
mov	[esp+2Ch+var_28], offset aOnline 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	short loc_6889EF14
mov	[esp+2Ch+var_28], offset aFreeForChat 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889F0A5
add	esp, 2Ch
retn
mov	[esp+2Ch+var_28], offset aNotAvailable 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	short loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aInvisible_1 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	short loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aDoNotDisturb 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	short loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aOccupied_0 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aAway_0 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 10h
mov	[esp+2Ch+var_28], offset aWebAware 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aAtLunch 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aEvil_0 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aDepression_0 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 10h
mov	[esp+2Ch+var_28], offset aAtHome 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
align 4
mov	[esp+2Ch+var_28], offset aAtWork 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_2C], eax
call	g_strdup
jmp	loc_6889EF14
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_6889F100
mov	dword ptr [esp+8], offset aPurple_blist_0 
mov	dword ptr [esp+4], offset aOscar_get_icqx 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889F169
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp], ebx
call	purple_buddy_get_name
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_account
mov	ebx, eax
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp], ebx
call	purple_account_get_username
mov	[esp+0Ch], eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aManualXStatusG 
mov	dword ptr [esp], offset	aOscar_13 
call	purple_debug_info
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889F169
mov	[esp+34h], esi
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	icq_im_xstatus_request
			
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_6889F1C0
mov	dword ptr [esp+8], offset aPurple_blist_0 
mov	dword ptr [esp+4], offset aOscar_get_aim_ 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_6889F1FA
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp], esi
call	purple_connection_get_protocol_data
mov	dword ptr [esp+8], 3
mov	[esp+4], ebx
mov	[esp], eax
call	aim_locate_getinfoshort
jmp	short loc_6889F1AD
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ecx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_C]
mov	ebx, [esp+5Ch+arg_10]
mov	edx, [esp+5Ch+arg_14]
cmp	ax, 2
jz	loc_6889F388
cmp	ax, 4
jz	short loc_6889F250
mov	eax, 1
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_6889F40E
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
cmp	dx, 3
jz	loc_6889F378
xor	esi, esi
xor	eax, eax
and	edx, 0FFFFh
mov	ecx, [ecx+68h]
cmp	dx, 3
jz	short loc_6889F294
cmp	dx, 6
jz	short loc_6889F294
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aReceivedAnUnkn 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_6889F237
align 4
			
mov	[esp+5Ch+var_30], ecx
call	sub_6889EE60
mov	ebp, eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset asc_688B3F07 
mov	[esp+5Ch+var_5C], esi
call	g_strsplit
mov	edi, eax
call	purple_notify_user_info_new
mov	esi, eax
mov	[esp+5Ch+var_58], offset aUin_0	
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+var_58], offset aStatus_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+var_5C], esi
call	purple_notify_user_info_add_section_break
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], offset aBr_1 
call	g_strjoinv
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	[esp+5Ch+var_5C], edi
call	g_strfreev
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebx
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], ecx
call	purple_notify_userinfo
mov	[esp+5Ch+var_5C], esi
call	purple_notify_user_info_destroy
xor	eax, eax
jmp	loc_6889F237
align 4
mov	eax, [esp+5Ch+arg_18]
mov	esi, [esp+5Ch+arg_1C]
jmp	loc_6889F25E
align 4
mov	eax, [esp+5Ch+arg_18]
and	edx, 0FFFFh
cmp	dx, 3
jz	short loc_6889F3BC
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aReceivedAnUn_0 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_warning
xor	eax, eax
jmp	loc_6889F237
align 4
mov	[esp+5Ch+var_54], eax 
mov	[esp+5Ch+var_58], ebx 
mov	[esp+5Ch+var_5C], ecx 
call	peer_connection_find_by_cookie
test	eax, eax
jz	short loc_6889F3EF
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 3
mov	[esp+5Ch+var_5C], eax
call	peer_connection_destroy
xor	eax, eax
jmp	loc_6889F237
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aReceivedARende 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_info
xor	eax, eax
jmp	loc_6889F237
call	__stack_chk_fail
align 4
public oscar_get_locale_charset
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_688C1020
test	eax, eax
jz	short loc_6889F43C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_6889F44F
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_2C], offset dword_688C1020
call	g_get_charset
mov	eax, ds:dword_688C1020
jmp	short loc_6889F42B
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0ACh
mov	edx, [esp+0BCh+arg_0]
mov	[esp+0BCh+var_6C], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+0BCh+var_20], ecx
xor	ecx, ecx
mov	ebx, [esp+0BCh+arg_10]
movzx	eax, [esp+0BCh+arg_C]
cmp	eax, 2
jz	loc_6889F6F8
cmp	eax, 4
jz	loc_6889F6B4
cmp	eax, 1
jz	short loc_6889F4D8
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aIcbmReceivedOn 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_warning
xor	eax, eax
			
mov	edx, [esp+0BCh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A0600
add	esp, 0ACh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	esi, [esp+0BCh+arg_14]
mov	edx, [edx+68h]
mov	[esp+0BCh+var_64], edx
mov	[esp+0BCh+Time], edx
call	purple_connection_get_account
mov	edi, eax
mov	eax, [ebx]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aReceivedImFrom 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_misc
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], edi
call	purple_normalize
mov	[esp+0BCh+EndPtr], eax
mov	edx, [esp+0BCh+var_6C]
mov	eax, [edx+38h]
mov	[esp+0BCh+Time], eax
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
jz	loc_688A04CF
mov	eax, [esi]
mov	ecx, eax
and	ecx, 1
neg	ecx
and	ecx, 8
mov	[esp+0BCh+var_68], ecx
xor	edx, edx
test	ah, 10h
setnz	dl
mov	[ebp+0], edx
test	al, 20h
jz	short loc_6889F5A8
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_6889F5A8
cmp	word ptr [esi+14h], 0
jz	short loc_6889F5A8
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_6889F5A8
mov	eax, [ebx]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aSHasAnIcon 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_misc
mov	eax, [esi+10h]
cmp	eax, [ebp+18h]
movzx	edx, word ptr [esi+14h]
jz	loc_688A056D
mov	ecx, [esi+0Ch]
			
mov	dword ptr [ebp+24h], 1
mov	[ebp+18h], eax
mov	[ebp+1Ch], edx
mov	[ebp+20h], ecx
xchg	ax, ax
			
mov	[esp+0BCh+Time], edi
call	purple_buddy_icons_find_account_icon
mov	edx, eax
test	eax, eax
jz	short loc_6889F5D0
test	byte ptr [esi],	10h
jz	short loc_6889F5D0
mov	eax, [ebp+28h]
test	eax, eax
jnz	short loc_6889F5D0
mov	ebp, [ebp+14h]
test	ebp, ebp
jnz	loc_6889FC6A
lea	esi, [esi+0]
			
mov	[esp+0BCh+Time], edx
call	purple_imgstore_unref
mov	eax, [esi+8]
mov	[esp+0BCh+Time], eax
call	g_strdup
mov	edi, eax
lea	ebp, [esp+0BCh+var_3C]
mov	[esp+0BCh+var_AC], ebp
lea	eax, [esp+0BCh+var_40]
mov	[esp+0BCh+var_B0], eax
lea	edx, [esp+0BCh+var_44]
mov	[esp+0BCh+Radix], edx
mov	[esp+0BCh+EndPtr], edi
mov	[esp+0BCh+Time], offset	aBody 
call	purple_markup_find_tag
test	eax, eax
jnz	loc_6889F854
mov	[esp+0BCh+var_AC], ebp
lea	eax, [esp+0BCh+var_40]
mov	[esp+0BCh+var_B0], eax
lea	edx, [esp+0BCh+var_44]
mov	[esp+0BCh+Radix], edx
mov	[esp+0BCh+EndPtr], edi
mov	[esp+0BCh+Time], offset	aHtml 
call	purple_markup_find_tag
test	eax, eax
jnz	loc_6889F810
mov	[esp+0BCh+var_AC], ebp
lea	ecx, [esp+0BCh+var_40]
mov	[esp+0BCh+var_B0], ecx
lea	eax, [esp+0BCh+var_44]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], edi
mov	[esp+0BCh+Time], offset	aHtml_0	
call	purple_markup_find_tag
test	eax, eax
jnz	loc_6889F7D4
test	dword ptr [esi], 800h
jz	loc_6889F7C0
mov	eax, [esi+4]
mov	[esp+0BCh+var_AC], eax
mov	edx, [esp+0BCh+var_68]
mov	[esp+0BCh+var_B0], edx
mov	[esp+0BCh+Radix], edi
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	ecx, [esp+0BCh+var_64]
mov	[esp+0BCh+Time], ecx
call	serv_got_im
mov	[esp+0BCh+Time], edi
call	g_free
mov	eax, 1
jmp	loc_6889F4B8
align 4
mov	ebx, [esp+0BCh+arg_14]
mov	edx, [esp+0BCh+var_6C]
mov	edx, [edx+68h]
mov	[esp+0BCh+var_58], edx
mov	[esp+0BCh+Time], edx
call	purple_connection_get_account
mov	[esp+0BCh+var_64], eax
movzx	eax, byte ptr [ebx+4]
test	al, al
jz	short loc_6889F6EB
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_6889F6EB
mov	edx, [ebx]
test	edx, edx
jnz	loc_6889FAD4
			
mov	eax, 1
jmp	loc_6889F4B8
align 4
mov	ebp, [esp+0BCh+arg_14]
mov	esi, [esp+0BCh+var_6C]
test	esi, esi
jz	loc_6889FD08
mov	edx, [esp+0BCh+var_6C]
mov	esi, [edx+68h]
test	esi, esi
jz	loc_6889F9B4
mov	[esp+0BCh+Time], esi
call	purple_connection_get_account
mov	[esp+0BCh+var_68], eax
mov	[esp+0BCh+Time], esi
call	purple_connection_get_protocol_data
mov	[esp+0BCh+var_6C], eax
test	ebp, ebp
jz	loc_6889F9D0
movzx	eax, word ptr [ebp+0]
mov	[esp+0BCh+var_A8], eax
mov	eax, [ebx]
mov	[esp+0BCh+var_AC], eax
mov	eax, [ebp+10h]
mov	edx, [ebp+14h]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+var_B0], edx
mov	[esp+0BCh+EndPtr], offset aIncomingRendez 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_misc
mov	eax, [ebp+30h]
test	eax, eax
jz	loc_6889FACC
movzx	ecx, word ptr [ebp+34h]
mov	[esp+0BCh+Radix], ecx 
mov	[esp+0BCh+EndPtr], eax 
mov	eax, [ebp+38h]
mov	[esp+0BCh+Time], eax 
call	oscar_encoding_to_utf8
mov	edx, eax
mov	eax, [ebp+10h]
mov	ecx, [ebp+14h]
test	al, 8
jz	loc_6889F9D8
mov	eax, [ebp+48h]
test	eax, eax
jz	short loc_6889F7AE
cmp	word ptr [ebp+44h], 0
jnz	loc_6889FD2C
			
mov	[esp+0BCh+Time], edx
call	g_free
mov	eax, 1
jmp	loc_6889F4B8
mov	[esp+0BCh+Time], 0 
call	time
jmp	loc_6889F67F
align 4
mov	[esp+0BCh+Time], ebp
call	g_datalist_clear
mov	eax, [esp+0BCh+var_44]
sub	eax, edi
mov	edx, [esp+0BCh+var_40]
inc	edx
mov	[esp+0BCh+var_B0], edx
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	a_SS 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+0BCh+Time], edi
call	g_free
mov	edi, ebp
jmp	loc_6889F670
mov	[esp+0BCh+Time], ebp
call	g_datalist_clear
mov	eax, [esp+0BCh+var_44]
sub	eax, edi
mov	edx, [esp+0BCh+var_40]
inc	edx
mov	[esp+0BCh+var_B0], edx
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	a_SS 
call	g_strdup_printf
mov	[esp+0BCh+Time], edi
mov	[esp+0BCh+var_70], eax
call	g_free
mov	eax, [esp+0BCh+var_70]
mov	edi, eax
jmp	loc_6889F644
align 4
mov	[esp+0BCh+var_34], 0
lea	ecx, [esp+0BCh+var_30]
mov	[esp+0BCh+var_AC], ecx
lea	eax, [esp+0BCh+var_34]
mov	[esp+0BCh+var_B0], eax
lea	eax, [esp+0BCh+var_38]
mov	[esp+0BCh+Radix], eax
mov	eax, [esp+0BCh+var_40]
inc	eax
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	aBody_0	
call	purple_markup_find_tag
test	eax, eax
jnz	loc_6889FC38
mov	[esp+0BCh+EndPtr], offset aBrokenMessageC 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_warning
mov	eax, [esp+0BCh+var_44]
mov	[esp+0BCh+Time], eax
call	g_strdup
mov	[esp+0BCh+var_6C], eax
mov	[esp+0BCh+Time], offset	aIchattextcolor	
call	g_quark_try_string
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], ebp
call	g_datalist_id_get_data
test	eax, eax
jz	loc_688A0498
mov	edx, [esp+0BCh+var_6C]
mov	[esp+0BCh+Radix], edx
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	aFontColorSSFon	
call	g_strdup_printf
mov	[esp+0BCh+var_60], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	g_free
mov	[esp+0BCh+Time], offset	aIchatballoonco	
call	g_quark_try_string
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], ebp
call	g_datalist_id_get_data
test	eax, eax
jz	loc_688A0488
mov	edx, [esp+0BCh+var_60]
mov	[esp+0BCh+Radix], edx
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	aFontBackSSFont	
call	g_strdup_printf
mov	[esp+0BCh+var_6C], eax
mov	eax, [esp+0BCh+var_60]
mov	[esp+0BCh+Time], eax
call	g_free
mov	[esp+0BCh+Time], ebp
call	g_datalist_clear
mov	eax, [esp+0BCh+var_44]
sub	eax, edi
mov	edx, [esp+0BCh+var_34]
test	edx, edx
jz	loc_688A0516
inc	edx
mov	[esp+0BCh+var_AC], edx
mov	edx, [esp+0BCh+var_6C]
mov	[esp+0BCh+var_B0], edx
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	a_SSS 
call	g_strdup_printf
mov	[esp+0BCh+Time], edi
mov	[esp+0BCh+var_70], eax
call	g_free
mov	ecx, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], ecx
call	g_free
mov	eax, [esp+0BCh+var_70]
mov	edi, eax
jmp	loc_6889F618
align 4
mov	[esp+0BCh+Radix], offset aOdGcNull 
mov	[esp+0BCh+EndPtr], offset aIncomingim_cha 
mov	[esp+0BCh+Time], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_6889F4B8
align 4
test	al, 24h
jnz	loc_6889FA6C
test	al, 12h
jnz	loc_6889F7AE
test	al, 1
jnz	loc_688A05B1
test	ah, 40h
jz	loc_688A0588
movzx	eax, byte ptr [ebp+44h]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aGotAnIcqServer 
mov	[esp+0BCh+Time], offset	aOscar_13 
mov	[esp+0BCh+var_74], edx
call	purple_debug_info
mov	al, [ebp+44h]
cmp	al, 1
mov	edx, [esp+0BCh+var_74]
jz	loc_688A0605
cmp	al, 1Ah
jnz	loc_6889F7AE
mov	[esp+0BCh+EndPtr], offset aSendingXStatus 
mov	[esp+0BCh+Time], offset	aOscar_13 
mov	[esp+0BCh+var_74], edx
call	purple_debug_info
lea	eax, [ebp+2]
mov	[esp+0BCh+Radix], eax
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	icq_relay_xstatus
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
align 4
mov	eax, [ebp+0]
test	ax, ax
jz	loc_688A04A8
dec	ax
jnz	loc_6889F7AE
lea	eax, [ebp+2]
mov	[esp+0BCh+Radix], eax 
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax 
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax 
mov	[esp+0BCh+var_74], edx
call	peer_connection_find_by_cookie
test	eax, eax
mov	edx, [esp+0BCh+var_74]
jz	loc_6889F7AE
mov	[esp+0BCh+Radix], 0
mov	[esp+0BCh+EndPtr], 2
mov	[esp+0BCh+Time], eax
call	peer_connection_destroy
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
align 4
xor	edx, edx
jmp	loc_6889F78E
align 4
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aReceivedAChann 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_info
xor	eax, eax
cmp	byte ptr [ebx+4], 1
setz	al
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset byte_688B4173
mov	eax, [ebx+8]
mov	[esp+0BCh+Time], eax
call	g_strsplit
mov	[esp+0BCh+var_54], eax
mov	ebp, [eax]
test	ebp, ebp
jz	loc_6889FCFC
xor	eax, eax
mov	edx, [esp+0BCh+var_54]
inc	eax
mov	edi, [edx+eax*4]
test	edi, edi
jnz	short loc_6889FB20
lea	eax, ds:4[eax*4]
mov	[esp+0BCh+Time], eax
call	g_malloc
mov	[esp+0BCh+var_60], eax
mov	eax, [esp+0BCh+var_54]
mov	esi, [eax]
test	esi, esi
jz	loc_688A0520
mov	edx, eax
add	edx, 4
mov	edi, eax
mov	[esp+0BCh+var_68], 0
xor	ebp, ebp
mov	[esp+0BCh+var_5C], ebx
mov	ebx, edx
mov	edx, [esp+0BCh+var_5C]
mov	eax, [edx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	byte_688B4175
call	g_strdup_printf
mov	esi, eax
mov	[esp+0BCh+EndPtr], 0Dh
mov	eax, [edi]
mov	[esp+0BCh+Time], eax
call	purple_str_strip_char
add	ebp, [esp+0BCh+var_60]
mov	edx, [edi]
mov	ecx, 0FFFFFFFFh
mov	edi, edx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+0BCh+var_AC], ecx 
mov	[esp+0BCh+var_B0], edx 
mov	[esp+0BCh+Radix], 0 
mov	[esp+0BCh+EndPtr], esi 
mov	eax, [esp+0BCh+var_64]
mov	[esp+0BCh+Time], eax 
call	oscar_decode_im
mov	[ebp+0], eax
mov	[esp+0BCh+Time], esi
call	g_free
inc	[esp+0BCh+var_68]
mov	ebp, [esp+0BCh+var_68]
shl	ebp, 2
mov	edi, ebx
add	ebx, 4
mov	ecx, [ebx-4]
test	ecx, ecx
jnz	short loc_6889FB60
mov	ebx, [esp+0BCh+var_5C]
mov	eax, [esp+0BCh+var_60]
mov	dword ptr [eax+ebp], 0
movzx	eax, byte ptr [ebx+4]
cmp	al, 1Ah		
jbe	loc_6889FE20
			
mov	[esp+0BCh+Radix], eax 
mov	[esp+0BCh+EndPtr], offset aReceivedACha_0 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_info
nop
			
mov	eax, [esp+0BCh+var_54] 
mov	[esp+0BCh+Time], eax
call	g_strfreev
mov	eax, [esp+0BCh+var_60]
mov	[esp+0BCh+Time], eax
call	g_strfreev
mov	eax, 1
jmp	loc_6889F4B8
align 4
mov	edx, [esp+0BCh+var_44]
mov	eax, [esp+0BCh+var_34]
inc	eax
sub	eax, edx
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], edx
call	g_strndup
mov	[esp+0BCh+var_6C], eax
lea	eax, [esp+0BCh+var_30]
mov	[esp+0BCh+Time], eax
call	g_datalist_clear
jmp	loc_6889F8C1
mov	[esp+0BCh+Time], edx
mov	[esp+0BCh+var_74], edx
call	purple_imgstore_get_data
mov	[esp+0BCh+var_60], eax
mov	edx, [esp+0BCh+var_74]
mov	[esp+0BCh+Time], edx
call	purple_imgstore_get_size
mov	ecx, eax
mov	[esp+0BCh+var_B0], eax
mov	eax, [ebx]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aSendingBuddyIc 
mov	[esp+0BCh+Time], offset	aOscar_13 
mov	[esp+0BCh+var_70], ecx
call	purple_debug_info
mov	ecx, [esp+0BCh+var_70]
mov	[esp+0BCh+EndPtr], ecx
mov	eax, [esp+0BCh+var_60]
mov	[esp+0BCh+Time], eax
call	aimutil_iconsum
movzx	ebp, ax
mov	[esp+0BCh+Time], edi
call	purple_buddy_icons_get_account_icon_timestamp
mov	[esp+0BCh+var_A8], ebp
mov	[esp+0BCh+var_AC], eax
mov	ecx, [esp+0BCh+var_70]
mov	[esp+0BCh+var_B0], ecx
mov	eax, [esp+0BCh+var_60]
mov	[esp+0BCh+Radix], eax
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	ecx, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], ecx
call	aim_im_sendch2_icon
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F5D0
mov	eax, 4
jmp	loc_6889FB2F
align 4
mov	[esp+0BCh+Radix], offset aOdNull 
mov	[esp+0BCh+EndPtr], offset aIncomingim_cha 
mov	[esp+0BCh+Time], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_6889F4B8
align 4
movzx	ecx, byte ptr [ebp+4Ch]
mov	[esp+0BCh+Radix], ecx 
mov	[esp+0BCh+EndPtr], eax 
mov	eax, [ebp+38h]
mov	[esp+0BCh+Time], eax 
mov	[esp+0BCh+var_74], edx
call	oscar_encoding_to_utf8
mov	ecx, eax
mov	[esp+0BCh+var_70], ecx
call	sub_6889BF3C
mov	edi, eax
test	eax, eax
mov	edx, [esp+0BCh+var_74]
mov	ecx, [esp+0BCh+var_70]
jz	loc_688A050F
mov	[esp+0BCh+Time], ecx
call	g_free
mov	edx, [esp+0BCh+var_74]
mov	[esp+0BCh+var_B0], offset g_free
mov	[esp+0BCh+Radix], offset g_free
mov	[esp+0BCh+EndPtr], offset g_str_equal
mov	[esp+0BCh+Time], offset	loc_688ABE00
mov	[esp+0BCh+var_74], edx
call	g_hash_table_new_full
mov	[esp+0BCh+var_6C], eax
mov	[esp+0BCh+Time], offset	aRoom 
call	g_strdup
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	g_hash_table_replace
movzx	eax, word ptr [ebp+44h]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	aD 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+0BCh+Time], offset	aExchange 
call	g_strdup
mov	[esp+0BCh+Radix], ebp
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	g_hash_table_replace
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+var_AC], eax
mov	edx, [esp+0BCh+var_74]
mov	[esp+0BCh+var_B0], edx
mov	eax, [ebx]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], edi
mov	[esp+0BCh+Time], esi
call	serv_got_chat_invite
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
align 10h
movzx	edx, al
jmp	ds:off_688B44B4[edx*4] 
			
mov	eax, [ebx+0Ch]	
mov	[esp+0BCh+Radix], eax
mov	eax, [ebx+8]
mov	[esp+0BCh+EndPtr], eax
lea	ebx, [esp+0BCh+var_2C]
mov	[esp+0BCh+Time], ebx
call	sub_68881798
mov	[esp+0BCh+EndPtr], 15h
mov	[esp+0BCh+Time], ebx
call	sub_68881904
mov	[esp+0BCh+Time], ebx
call	sub_68881B44
test	ax, ax
jnz	loc_6889FC14	
mov	[esp+0BCh+Time], ebx
call	sub_68881BB4
cmp	eax, 7D0h
ja	loc_6889FC14	
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], ebx
call	sub_68881D24
mov	ebp, eax
test	eax, eax
jz	loc_6889FC14	
mov	[esp+0BCh+EndPtr], 3
mov	[esp+0BCh+Time], ebx
call	sub_68881904
mov	[esp+0BCh+EndPtr], 4
mov	[esp+0BCh+Time], ebx
call	sub_68881904
mov	[esp+0BCh+Time], ebx
call	sub_68881BB4
cmp	eax, 7D0h
jbe	loc_688A070F
mov	[esp+0BCh+Time], ebp
call	g_free
jmp	loc_6889FC14	
align 4
			
mov	[esp+0BCh+Radix], 0 
mov	[esp+0BCh+EndPtr], offset byte_688B4173
mov	eax, [ebx+8]
mov	[esp+0BCh+Time], eax
call	g_strsplit
mov	[esp+0BCh+var_68], eax
test	eax, eax
jz	loc_6889FC14	
call	_errno
mov	dword ptr [eax], 0
mov	ecx, [esp+0BCh+var_68]
mov	eax, [ecx]
test	eax, eax
jz	loc_688A0533
mov	[esp+0BCh+Radix], 0Ah 
mov	[esp+0BCh+EndPtr], 0 
mov	[esp+0BCh+Time], eax 
call	strtoul
mov	[esp+0BCh+var_5C], eax
test	eax, eax
jz	loc_688A0533
call	_errno
mov	eax, [eax]
test	eax, eax
jnz	loc_688A0533
mov	ebp, [esp+0BCh+var_68]
add	ebp, 4
mov	eax, [esp+0BCh+var_68]
mov	edi, [eax+4]
test	edi, edi
jz	loc_688A0533
mov	edx, [esp+0BCh+var_68]
add	edx, 8
mov	eax, [esp+0BCh+var_68]
mov	esi, [eax+8]
test	esi, esi
jz	loc_688A0533
mov	ecx, [esp+0BCh+var_68]
add	ecx, 0Ch
mov	[esp+0BCh+var_6C], 1
mov	[esp+0BCh+var_50], ebx
mov	eax, ebp
mov	ebp, edx
mov	ebx, esi
mov	esi, ecx
mov	edx, eax
jmp	short loc_6889FFB3
mov	edx, esi
mov	edi, [esi]
test	edi, edi
jz	loc_688A052F
inc	[esp+0BCh+var_6C]
lea	ebp, [esi+4]
add	esi, 8
mov	ebx, [esi-4]
test	ebx, ebx
jz	loc_688A052F
mov	eax, [esp+0BCh+var_50]
mov	ecx, [eax]
mov	[esp+0BCh+EndPtr], offset aIcqUserUHasSen 
mov	[esp+0BCh+Time], offset	aPidgin_6 
mov	[esp+0BCh+var_74], edx
mov	[esp+0BCh+var_70], ecx
call	libintl_dgettext
mov	[esp+0BCh+var_B0], edi
mov	[esp+0BCh+Radix], ebx
mov	ecx, [esp+0BCh+var_70]
mov	[esp+0BCh+EndPtr], ecx
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+0BCh+Time], 0Ch
call	g_malloc
mov	ebx, eax
mov	ecx, [esp+0BCh+var_58]
mov	[eax], ecx
mov	edx, [esp+0BCh+var_74]
mov	eax, [edx]
mov	[esp+0BCh+Time], eax
call	g_strdup
mov	[ebx+4], eax
mov	eax, [ebp+0]
mov	[esp+0BCh+Time], eax
call	g_strdup
mov	[ebx+8], eax
mov	[esp+0BCh+EndPtr], offset a_decline 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+EndPtr], offset a_add	
mov	[esp+0BCh+Time], offset	aPidgin_6 
mov	[esp+0BCh+var_70], eax
call	libintl_dgettext
mov	edx, eax
mov	ebp, [ebx+4]
mov	eax, [esp+0BCh+var_58]
mov	[esp+0BCh+Time], eax
mov	[esp+0BCh+var_74], edx
call	purple_connection_get_account
mov	[esp+0BCh+var_64], eax
mov	[esp+0BCh+EndPtr], offset aDoYouWantToAdd 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+var_88], offset oscar_free_name_data
mov	ecx, [esp+0BCh+var_70]
mov	[esp+0BCh+var_8C], ecx
mov	[esp+0BCh+var_90], offset sub_6889902C
mov	edx, [esp+0BCh+var_74]
mov	[esp+0BCh+var_94], edx
mov	[esp+0BCh+var_98], 2
mov	[esp+0BCh+var_9C], ebx
mov	[esp+0BCh+var_A0], 0
mov	[esp+0BCh+var_A4], ebp
mov	edx, [esp+0BCh+var_64]
mov	[esp+0BCh+var_A8], edx
mov	[esp+0BCh+var_AC], 0FFFFFFFFh
mov	[esp+0BCh+var_B0], eax
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], 0
mov	edx, [esp+0BCh+var_58]
mov	[esp+0BCh+Time], edx
call	purple_request_action
mov	[esp+0BCh+Time], edi
call	g_free
mov	eax, [esp+0BCh+var_5C]
cmp	[esp+0BCh+var_6C], eax
jnz	loc_6889FF92
mov	eax, [esp+0BCh+var_68]
mov	[esp+0BCh+Time], eax
call	g_strfreev
jmp	loc_6889FC14	
			
cmp	[esp+0BCh+var_68], 5 
jle	loc_6889FC14	
mov	eax, [esp+0BCh+var_60]
mov	edi, [eax+14h]
mov	esi, [eax+0Ch]
mov	ebx, [eax]
mov	[esp+0BCh+EndPtr], offset aYouHaveReceive 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+var_B0], edi
mov	[esp+0BCh+Radix], esi
mov	[esp+0BCh+EndPtr], ebx
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+var_A4], 0
mov	[esp+0BCh+var_A8], 0
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], offset aIcqEmail 
			
mov	[esp+0BCh+Radix], 0
mov	[esp+0BCh+EndPtr], 2
mov	edx, [esp+0BCh+var_58]
mov	[esp+0BCh+Time], edx
call	purple_notify_message
mov	[esp+0BCh+Time], ebx
call	g_free
jmp	loc_6889FC14	
			
cmp	[esp+0BCh+var_68], 4 
jle	loc_6889FC14	
mov	eax, [esp+0BCh+var_60]
mov	edi, [eax+14h]
mov	esi, [eax+0Ch]
mov	ebx, [eax]
mov	[esp+0BCh+EndPtr], offset aYouHaveRecei_0 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+var_B0], edi
mov	[esp+0BCh+Radix], esi
mov	[esp+0BCh+EndPtr], ebx
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+var_A4], 0
mov	[esp+0BCh+var_A8], 0
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], offset aIcqServerMessa 
jmp	loc_688A0163
			
mov	ebx, [ebx]	
mov	[esp+0BCh+EndPtr], offset aTheUserUHasGra 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+EndPtr], ebx
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+var_A4], 0
mov	[esp+0BCh+var_A8], 0
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], offset aIcqAuthorizati 
jmp	loc_688A0163
			
cmp	[esp+0BCh+var_68], 5 
jle	loc_6889FC14	
mov	eax, [esp+0BCh+var_60]
mov	edi, [eax+14h]
mov	esi, [eax+0Ch]
mov	ebx, [eax]
mov	[esp+0BCh+EndPtr], offset aYouHaveRecei_1 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+var_B0], edi
mov	[esp+0BCh+Radix], esi
mov	[esp+0BCh+EndPtr], ebx
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+var_A4], 0
mov	[esp+0BCh+var_A8], 0
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], offset aIcqPage 
jmp	loc_688A0163
			
mov	eax, [esp+0BCh+var_68] 
test	eax, eax
jle	loc_6889FC14	
mov	eax, [esp+0BCh+var_60]
mov	edi, [eax]
test	edi, edi
jz	loc_688A06F4
mov	esi, [ebx]
mov	[esp+0BCh+EndPtr], offset aTheUserUHasDen 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+Radix], edi
mov	[esp+0BCh+EndPtr], esi
mov	[esp+0BCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+EndPtr], offset aIcqAuthoriza_0 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+0BCh+var_A4], 0
mov	[esp+0BCh+var_A8], 0
mov	[esp+0BCh+var_AC], ebx
mov	[esp+0BCh+var_B0], eax
jmp	loc_688A0163
			
cmp	[esp+0BCh+var_68], 5 
jle	loc_6889FC14	
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	byte_688B4175
call	g_strdup_printf
mov	ebp, eax
mov	eax, [esp+0BCh+var_60]
mov	edx, [eax+14h]
test	edx, edx
jz	loc_688A06ED
xor	eax, eax
or	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+0BCh+var_AC], ecx 
mov	[esp+0BCh+var_B0], edx 
mov	[esp+0BCh+Radix], 3 
mov	[esp+0BCh+EndPtr], ebp 
mov	eax, [esp+0BCh+var_64]
mov	[esp+0BCh+Time], eax 
call	oscar_decode_im
mov	esi, eax
mov	eax, [ebx]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aReceivedAnAuth 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_info
mov	[esp+0BCh+var_B0], esi 
mov	[esp+0BCh+Radix], 1 
mov	[esp+0BCh+EndPtr], ebp 
mov	edx, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], edx 
call	aim_icq_getalias
mov	[esp+0BCh+Time], ebp
call	g_free
mov	[esp+0BCh+Time], esi
call	g_free
jmp	loc_6889FC14	
			
cmp	[esp+0BCh+var_68], 1 
jle	loc_6889FC14	
mov	eax, [esp+0BCh+var_60]
mov	eax, [eax+4]
test	eax, eax
jz	loc_6889FC14	
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	byte_688B4175
call	g_strdup_printf
mov	esi, eax
mov	edx, [esp+0BCh+var_60]
mov	eax, [edx]
test	eax, eax
jz	loc_688A05F2
cmp	byte ptr [eax],	0
jz	loc_688A05F2
mov	edx, [edx+4]
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], edx
mov	[esp+0BCh+Time], offset	aAHrefSSA 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+0BCh+Time], 0 
call	time
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], 0
mov	[esp+0BCh+Radix], ebx
mov	[esp+0BCh+EndPtr], esi
mov	edx, [esp+0BCh+var_58]
mov	[esp+0BCh+Time], edx
call	serv_got_im
mov	[esp+0BCh+Time], esi
call	g_free
mov	[esp+0BCh+Time], ebx
call	g_free
jmp	loc_6889FC14	
			
mov	edx, [esp+0BCh+var_68] 
test	edx, edx
jle	loc_6889FC14	
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], offset	byte_688B4175
call	g_strdup_printf
mov	esi, eax
mov	[esp+0BCh+EndPtr], 0FFFFFFFFh
mov	edx, [esp+0BCh+var_60]
mov	eax, [edx]
mov	[esp+0BCh+Time], eax
call	g_markup_escape_text
jmp	short loc_688A040B
align 4
mov	eax, [esp+0BCh+var_60]
mov	[esp+0BCh+var_6C], eax
jmp	loc_6889F951
align 4
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+var_60], eax
jmp	loc_6889F909
align 4
mov	[esp+0BCh+var_B0], ebp
mov	[esp+0BCh+Radix], edx
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
mov	[esp+0BCh+var_74], edx
call	peer_connection_got_proposition
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
mov	[esp+0BCh+Time], 2Ch
call	g_malloc0
mov	ebp, eax
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], edi
call	purple_normalize
mov	[esp+0BCh+Time], eax
call	g_strdup
mov	[esp+0BCh+Radix], ebp
mov	[esp+0BCh+EndPtr], eax
mov	edx, [esp+0BCh+var_6C]
mov	eax, [edx+38h]
mov	[esp+0BCh+Time], eax
call	g_hash_table_insert
jmp	loc_6889F535
mov	edi, ecx
jmp	loc_6889FD70
mov	edx, offset aBody_1 
jmp	loc_6889F96F
mov	[esp+0BCh+var_68], 0
xor	ebp, ebp
jmp	loc_6889FBE4
			
mov	ebx, [esp+0BCh+var_50]
			
mov	[esp+0BCh+EndPtr], 0
mov	eax, [ebx+8]
mov	[esp+0BCh+Time], eax
call	g_strescape
mov	ebx, eax
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aUnknownSyntaxP 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_error
mov	[esp+0BCh+Time], ebx
call	g_free
jmp	loc_688A00F5
cmp	edx, [ebp+1Ch]
mov	ecx, [esi+0Ch]
jnz	loc_6889F596
cmp	ecx, [ebp+20h]
jnz	loc_6889F596
jmp	loc_6889F5A8
align 4
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+var_B0], ecx
mov	[esp+0BCh+EndPtr], offset aUnknownRequest 
mov	[esp+0BCh+Time], offset	aOscar_13 
mov	[esp+0BCh+var_74], edx
call	purple_debug_error
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
mov	esi, [ebp+48h]
mov	[esp+0BCh+EndPtr], esi
mov	eax, [ebp+50h]
mov	[esp+0BCh+Time], eax
mov	[esp+0BCh+var_74], edx
call	g_memdup
mov	[esp+0BCh+var_AC], 0
mov	[esp+0BCh+var_B0], esi
mov	[esp+0BCh+Radix], eax
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_68]
mov	[esp+0BCh+Time], eax
call	purple_buddy_icons_set_for_user
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
			
mov	edx, [esp+0BCh+var_60]
mov	eax, [edx+4]
mov	edx, eax
jmp	loc_688A03F7
call	__stack_chk_fail
mov	ecx, [ebp+48h]
mov	[esp+0BCh+var_60], ecx
test	ecx, ecx
jz	loc_6889F7AE
mov	eax, [ebp+38h]
mov	[esp+0BCh+var_64], eax
xor	eax, eax
or	ecx, 0FFFFFFFFh
mov	edi, [esp+0BCh+var_60]
repne scasb
not	ecx
lea	edi, [ecx-1]
cmp	[esp+0BCh+var_64], 0
jz	loc_688A0809
			
mov	[esp+0BCh+Radix], edi 
mov	eax, [ebp+48h]
mov	[esp+0BCh+EndPtr], eax 
mov	eax, [esp+0BCh+var_64]
mov	[esp+0BCh+Time], eax 
mov	[esp+0BCh+var_74], edx
call	oscar_encoding_to_utf8
mov	edi, eax
mov	[esp+0BCh+EndPtr], 0FFFFFFFFh
mov	[esp+0BCh+Time], eax
call	g_markup_escape_text
mov	[esp+0BCh+var_68], eax
mov	[esp+0BCh+Time], edi
call	g_free
mov	[esp+0BCh+Radix], offset aBr 
mov	[esp+0BCh+EndPtr], offset asc_688B3F07 
mov	eax, [esp+0BCh+var_68]
mov	[esp+0BCh+Time], eax
call	purple_strreplace
mov	edi, eax
mov	eax, [esp+0BCh+var_68]
mov	[esp+0BCh+Time], eax
call	g_free
mov	[esp+0BCh+Time], 0 
call	time
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], 0
mov	[esp+0BCh+Radix], edi
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], esi
call	serv_got_im
lea	eax, [ebp+2]
mov	[esp+0BCh+Radix], eax
mov	eax, [ebx]
mov	[esp+0BCh+EndPtr], eax
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	aim_im_send_icq_confirmation
mov	[esp+0BCh+Time], edi
call	g_free
mov	edx, [esp+0BCh+var_74]
jmp	loc_6889F7AE
xor	esi, esi
jmp	loc_688A0364
mov	[esp+0BCh+EndPtr], offset aNoReasonGiven_ 
mov	[esp+0BCh+Time], offset	aPidgin_6 
call	libintl_dgettext
mov	edi, eax
jmp	loc_688A02AF
mov	[esp+0BCh+EndPtr], eax
mov	[esp+0BCh+Time], ebx
call	sub_68881D24
mov	[esp+0BCh+var_6C], eax
mov	[esp+0BCh+EndPtr], offset aIcqsms 
mov	[esp+0BCh+Time], ebp 
call	strcmp
test	eax, eax
jnz	loc_688A07F0
cmp	[esp+0BCh+var_6C], 0
jz	loc_688A07F0
mov	[esp+0BCh+EndPtr], 0FFFFFFFFh
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	xmlnode_from_str
mov	edi, eax
test	eax, eax
jz	loc_688A07F0
mov	[esp+0BCh+EndPtr], offset aSender 
mov	[esp+0BCh+Time], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_688A0876
mov	[esp+0BCh+Time], eax
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+0BCh+EndPtr], offset aText	
mov	[esp+0BCh+Time], edi
call	xmlnode_get_child
test	eax, eax
jz	loc_688A086F
mov	[esp+0BCh+Time], eax
call	xmlnode_get_data
mov	esi, eax
test	ebx, ebx
jz	short loc_688A07D8
test	eax, eax
jz	short loc_688A07D8
mov	[esp+0BCh+Time], 0 
call	time
mov	[esp+0BCh+var_AC], eax
mov	[esp+0BCh+var_B0], 0
mov	[esp+0BCh+Radix], esi
mov	[esp+0BCh+EndPtr], ebx
mov	edx, [esp+0BCh+var_58]
mov	[esp+0BCh+Time], edx
call	serv_got_im
			
mov	[esp+0BCh+Time], ebx
call	g_free
mov	[esp+0BCh+Time], esi
call	g_free
mov	[esp+0BCh+Time], edi
call	xmlnode_free
			
mov	[esp+0BCh+Time], ebp
call	g_free
mov	eax, [esp+0BCh+var_6C]
mov	[esp+0BCh+Time], eax
call	g_free
jmp	loc_6889FC14	
mov	[esp+0BCh+Radix], 0
mov	[esp+0BCh+EndPtr], edi
mov	ecx, [esp+0BCh+var_60]
mov	[esp+0BCh+Time], ecx
call	g_utf8_validate
test	eax, eax
mov	edx, [esp+0BCh+var_74]
jnz	loc_688A0636
call	oscar_get_locale_charset
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aEncoding_0 
mov	eax, [esp+0BCh+var_68]
mov	[esp+0BCh+Time], eax
call	purple_account_get_string
mov	[esp+0BCh+var_64], eax
mov	[esp+0BCh+Radix], eax
mov	[esp+0BCh+EndPtr], offset aMirandaIsThatY 
mov	[esp+0BCh+Time], offset	aOscar_13 
call	purple_debug_info
mov	edx, [esp+0BCh+var_74]
jmp	loc_688A0636
xor	esi, esi
jmp	loc_688A07D8
xor	ebx, ebx
jmp	loc_688A0782
align 10h
public oscar_chat_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A08C1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], esi
call	purple_connection_get_protocol_data
mov	edi, eax
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_chat_data
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_get_id
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	serv_got_chat_left
mov	[esp+2Ch+var_28], ebx
mov	eax, [edi+34h]
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[edi+34h], eax
mov	[esp+2Ch+var_2C], ebx
call	oscar_chat_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A0933
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	esi, [eax+68h]
mov	edx, [esp+4Ch+arg_C]
mov	ecx, [esp+4Ch+arg_10]
test	ecx, ecx
jz	loc_688A0A40
mov	[esp+4Ch+var_40], ecx
and	edx, 0FFFFh
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aDisconnected_C 
mov	[esp+4Ch+Time],	offset aOscar_13 
call	purple_debug_info
test	ebx, ebx
jz	loc_688A0A4C
cmp	word ptr [ebx+5Ch], 0Eh
jz	short loc_688A09B4
			
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A0A6D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, ebx
mov	eax, esi
call	sub_68898FDC
mov	ebx, eax
test	eax, eax
jz	short loc_688A0996
mov	eax, [eax+10h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	esi
call	purple_find_chat
mov	edi, eax
test	eax, eax
jz	short loc_688A0A30
mov	ebp, [ebx]
mov	[esp+4Ch+var_48], offset aYouHaveBeenDis 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 200h
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+Time],	edi
call	purple_conversation_write
mov	[esp+4Ch+Time],	ebp
call	g_free
mov	edx, ebx
mov	eax, esi
call	sub_688A08C8
jmp	loc_688A0996
align 10h
mov	ecx, offset byte_688B2167
jmp	loc_688A0965
align 4
mov	[esp+4Ch+var_44], offset aConnNull_0 
mov	[esp+4Ch+var_48], offset aPurple_connerr 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_688A0996
call	__stack_chk_fail
align 4
public oscar_login
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str1],	offset byte_688B2167
call	g_string_new
mov	esi, eax
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_connection
mov	ebp, eax
call	oscar_data_new
mov	ebx, eax
mov	[eax+68h], ebp
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebp
call	purple_connection_set_protocol_data
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_688A0938
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	0FFFFh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889EAC0
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+Str2],	0FFFFh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889BA7C
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889BA7C
mov	[esp+5Ch+var_54], 5
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889B950
mov	[esp+5Ch+var_54], 7
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	18h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889E8E4
mov	[esp+5Ch+var_54], 7
mov	[esp+5Ch+Str2],	18h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889E454
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	17h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889E310
mov	[esp+5Ch+var_54], 7
mov	[esp+5Ch+Str2],	17h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_68899EF8
mov	[esp+5Ch+var_54], 0Ah
mov	[esp+5Ch+Str2],	17h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D568
mov	[esp+5Ch+var_54], 5
mov	[esp+5Ch+Str2],	10h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	9
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889DECC
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	9
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	3
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889B8F0
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	3
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D79C
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+Str2],	3
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D4CC
mov	[esp+5Ch+var_54], 0Ch
mov	[esp+5Ch+Str2],	3
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	0Eh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D430
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	0Eh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D3A4
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+Str2],	0Eh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889B870
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+Str2],	0Eh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D300
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+Str2],	0Eh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	0Dh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889D028
mov	[esp+5Ch+var_54], 9
mov	[esp+5Ch+Str2],	0Dh
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889CF00
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889B740
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_688A46F4
mov	[esp+5Ch+var_54], 6
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889B52C
mov	[esp+5Ch+var_54], 0Eh
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889CC50
mov	[esp+5Ch+var_54], 8
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889CC50
mov	[esp+5Ch+var_54], 9
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889B308
mov	[esp+5Ch+var_54], 15h
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889CAF4
mov	[esp+5Ch+var_54], 19h
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889B168
mov	[esp+5Ch+var_54], 1Bh
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889CBB4
mov	[esp+5Ch+var_54], 1Ch
mov	[esp+5Ch+Str2],	13h
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889F454
mov	[esp+5Ch+var_54], 7
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889AFD0
mov	[esp+5Ch+var_54], 0Ah
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889F200
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889CA2C
mov	[esp+5Ch+var_54], 14h
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889AF34
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	2
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889EA6C
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889C9E8
mov	[esp+5Ch+var_54], 0Fh
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889C3AC
mov	[esp+5Ch+var_54], 1Fh
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889C040
mov	[esp+5Ch+var_54], 5
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889AE74
mov	[esp+5Ch+var_54], 13h
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889ADD0
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+Str2],	8
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_6889AD38
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	0Ah
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_6889BD30
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Str2],	0Ah
mov	[esp+5Ch+Str1],	ebx
call	oscar_data_addhandler
mov	[esp+5Ch+Str2],	offset aRegisteredHand 
mov	[esp+5Ch+Str1],	esi
call	g_string_append
mov	eax, [ebx+0ECh]
mov	[esp+5Ch+Str1],	eax
call	g_hash_table_get_keys
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+Str1],	eax
call	g_list_copy
mov	[esp+5Ch+Str2],	offset sub_68898C40
mov	[esp+5Ch+Str1],	eax
call	g_list_sort
mov	[esp+5Ch+var_34], eax
mov	edi, eax
test	eax, eax
jz	loc_688A1287
mov	eax, [edi]
movzx	edx, ax
mov	[esp+5Ch+var_50], edx
shr	eax, 10h
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset a04x04x 
mov	[esp+5Ch+Str1],	esi
call	g_string_append_printf
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_688A1260
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	g_list_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str1],	eax
call	g_list_free
mov	eax, [esi]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aS_2 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_misc
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	esi
call	g_string_free
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+Str2],	offset aOscar_loginGcP 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_misc
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_username
mov	[esp+5Ch+Str1],	eax
call	oscar_util_valid_name
test	eax, eax
jz	loc_688A14A0
or	dword ptr [ebp+4], 1
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_protocol_id
mov	[esp+5Ch+Str2],	offset aPrplIcq	
mov	[esp+5Ch+Str1],	eax
call	g_str_equal
test	eax, eax
jnz	loc_688A1494
or	dword ptr [ebp+4], 4
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_protocol_id
mov	[esp+5Ch+Str2],	offset aPrplIcq	
mov	[esp+5Ch+Str1],	eax
call	g_str_equal
test	eax, eax
jz	short loc_688A1350
or	dword ptr [ebp+4], 200h
mov	[esp+5Ch+var_54], 1446h
mov	[esp+5Ch+Str2],	offset aPort_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_int
mov	[ebx+0F4h], ax
mov	[esp+5Ch+var_54], offset aOpportunisti_0 
mov	[esp+5Ch+Str2],	offset aEncryption_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_string
mov	[esp+5Ch+var_34], eax
call	purple_ssl_is_supported
test	eax, eax
jnz	short loc_688A13B2
mov	edi, offset aRequire_encryp 
mov	ecx, 13h
mov	esi, [esp+5Ch+var_34]
repe cmpsb
jz	loc_688A1720
call	purple_ssl_is_supported
test	eax, eax
jz	loc_688A160C
mov	edi, offset aNo_encryptio_0 
mov	ecx, 0Eh
mov	esi, [esp+5Ch+var_34]
repe cmpsb
setnz	al
movzx	eax, al
mov	[ebx+40h], eax
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], offset sub_6889ACB0
mov	[esp+5Ch+Str2],	offset aPurpleAwayIdle 
mov	[esp+5Ch+Str1],	ebp
call	purple_prefs_connect_callback
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], offset loc_6889AC40
mov	[esp+5Ch+Str2],	offset aPluginsPrplOsc 
mov	[esp+5Ch+Str1],	ebp
call	purple_prefs_connect_callback
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+Str2],	offset aUse_clientlogi 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_bool
test	eax, eax
jz	loc_688A1504
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_username
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebx
call	send_client_login
			
mov	[esp+5Ch+Str2],	offset aConnecting 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_50], 6
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebp
call	purple_connection_update_progress
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A17A2
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	dword ptr [ebx+44h], 1
jmp	loc_688A1329
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_username
mov	ebx, eax
mov	[esp+5Ch+Str2],	offset aUnableToSignOn 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Str1],	eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	7
mov	[esp+5Ch+Str1],	ebp
call	purple_connection_error_reason
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A17A2
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+Str2],	17h
mov	[esp+5Ch+Str1],	ebx
call	flap_connection_new
mov	[esp+5Ch+var_34], eax
mov	eax, [ebx+40h]
test	eax, eax
jnz	loc_688A1614
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
not	eax
and	eax, 2
mov	eax, ds:off_688B53EC[eax*4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aServer 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_string
mov	esi, eax
cmp	dword ptr [ebx+44h], 1
sbb	edx, edx
and	edx, 0FFFFFFFEh
mov	eax, ds:off_688B53F8[edx*4]
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Str1],	esi 
call	strcmp
test	eax, eax
jz	loc_688A174D
mov	[esp+5Ch+var_54], 1446h
mov	[esp+5Ch+Str2],	offset aPort_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_int
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_48], edx
mov	[esp+5Ch+var_4C], offset sub_6889AB20
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str2],	edx
mov	[esp+5Ch+Str1],	0
call	purple_proxy_connect
mov	edx, [esp+5Ch+var_34]
mov	[edx+1Ch], eax
mov	eax, [edx+30h]
test	eax, eax
jnz	loc_688A144C
mov	eax, [esp+5Ch+var_34]
mov	eax, [eax+1Ch]
test	eax, eax
jnz	loc_688A144C
mov	[esp+5Ch+Str2],	offset aUnableToConn_4 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Str1],	ebp
call	purple_connection_error_reason
jmp	loc_688A147C
align 4
xor	eax, eax
jmp	loc_688A13D5
align 4
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
and	eax, 0FFFFFFFEh
mov	eax, ds:off_688B53F8[eax*4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aServer 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_string
mov	[esp+5Ch+var_30], eax
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
not	eax
and	eax, 2
mov	eax, ds:off_688B53EC[eax*4]
mov	[esp+5Ch+Str2],	eax 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_688A1678
mov	edi, offset aLogin_messagin 
mov	ecx, 18h
mov	esi, [esp+5Ch+var_30]
repe cmpsb
jnz	short loc_688A16C8
mov	[esp+5Ch+Str2],	offset aAccountUsesSsl 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_info
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
and	eax, 0FFFFFFFEh
mov	eax, ds:off_688B53F8[eax*4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aServer 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_set_string
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
and	eax, 0FFFFFFFEh
mov	eax, ds:off_688B53F8[eax*4]
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_54], 1446h
mov	[esp+5Ch+Str2],	offset aPort_0 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_get_int
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_48], edx
mov	[esp+5Ch+var_4C], offset sub_6889AB9C
mov	[esp+5Ch+var_50], offset sub_6889ABF8
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str2],	eax
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_ssl_connect
mov	edx, [esp+5Ch+var_34]
mov	[edx+30h], eax
jmp	loc_688A15C5
mov	[esp+5Ch+Str2],	offset aYouRequiredE_1 
mov	[esp+5Ch+Str1],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Str1],	ebp
call	purple_connection_error_reason
jmp	loc_688A147C
mov	[esp+5Ch+Str2],	offset aAccountDoesNot 
mov	[esp+5Ch+Str1],	offset aOscar_13 
call	purple_debug_info
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
not	eax
and	eax, 2
mov	eax, ds:off_688B53EC[eax*4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aServer 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	edx
call	purple_account_set_string
cmp	dword ptr [ebx+44h], 1
sbb	eax, eax
not	eax
and	eax, 2
mov	esi, ds:off_688B53EC[eax*4]
jmp	loc_688A1573
			
call	__stack_chk_fail
align 4
public oscar_close
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], edi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+34h]
test	eax, eax
jz	short loc_688A181E
xchg	ax, ax
mov	esi, [eax]
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+34h], eax
mov	[esp+2Ch+var_2C], esi
call	oscar_chat_destroy
mov	eax, [ebx+34h]
test	eax, eax
jnz	short loc_688A17D0
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_688A1825
nop
mov	esi, [eax]
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+0Ch], eax
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [ebx+0Ch]
test	eax, eax
jnz	short loc_688A17F8
mov	[esp+2Ch+var_2C], ebx
call	oscar_data_destroy
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], edi
call	purple_connection_set_protocol_data
mov	[esp+2Ch+var_2C], edi
call	purple_prefs_disconnect_by_handle
mov	[esp+2Ch+var_28], offset aSignedOff_ 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A186C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public oscar_connect_to_bos
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_30], edx
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_38], edx
mov	ecx, [esp+6Ch+arg_14]
mov	edx, [esp+6Ch+arg_18]
mov	edi, [esp+6Ch+arg_C]
movzx	ebp, cx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_40], ecx
call	purple_connection_get_account
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+var_68], 2
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	flap_connection_new
mov	esi, eax
mov	ecx, [esp+6Ch+var_40]
mov	[eax+20h], cx
mov	[esp+6Ch+var_68], ebp
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_memdup
mov	[esi+24h], eax
mov	edx, [esp+6Ch+var_44]
test	edx, edx
jz	loc_688A19D0
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], offset sub_6889AB9C
mov	[esp+6Ch+var_60], offset sub_6889ABF8
movzx	eax, di
mov	[esp+6Ch+var_64], eax
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], edx
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], eax
call	purple_ssl_connect_with_ssl_cn
mov	[esi+30h], eax
test	eax, eax
jz	short loc_688A199C
mov	edx, [esp+6Ch+var_3C]
mov	[edx+0F4h], di
mov	[esp+6Ch+var_68], offset aReceivedAuthor 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 3
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_connection_update_progress
mov	eax, 1
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A1A0A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esi+1Ch]
test	eax, eax
jnz	short loc_688A1945
mov	[esp+6Ch+var_68], offset aUnableToConn_4 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], ebx
call	purple_connection_error_reason
xor	eax, eax
jmp	short loc_688A1985
align 10h
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], offset sub_6889AB20
movzx	eax, di
mov	[esp+6Ch+var_60], eax
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_64], edx
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], 0
call	purple_proxy_connect
mov	[esi+1Ch], eax
mov	eax, [esi+30h]
jmp	loc_688A1941
call	__stack_chk_fail
align 10h
public oscar_keepalive
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	ebx, [eax+0F0h]
test	ebx, ebx
jz	short loc_688A1A4D
mov	edx, [ebx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], esi
call	flap_connection_send_keepalive
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_688A1A38
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A1A5F
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public oscar_send_typing
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	peer_connection_find_by_type
test	eax, eax
jz	short loc_688A1ABB
mov	ecx, [eax+24h]
test	ecx, ecx
jnz	loc_688A1B50
mov	eax, [esi+0Ch]
mov	ebp, [eax+34h]
test	ebp, ebp
jnz	short loc_688A1ACF
jmp	short loc_688A1AFF
align 4
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_688A1AFC
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_688A1AC8
			
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A1BA4
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esi+0Ch]
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_48], eax
mov	eax, [edi+38h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_688A1AE2
mov	edx, [eax]
test	edx, edx
jz	short loc_688A1AE2
cmp	[esp+4Ch+var_30], 1
jz	short loc_688A1B83
cmp	[esp+4Ch+var_30], 2
jz	short loc_688A1B62
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	aim_im_sendmtn
jmp	short loc_688A1AE2
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	peer_odc_send_typing
jmp	short loc_688A1AE2
mov	[esp+4Ch+var_40], 1
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	aim_im_sendmtn
jmp	loc_688A1AE2
mov	[esp+4Ch+var_40], 2
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	aim_im_sendmtn
jmp	loc_688A1AE2
call	__stack_chk_fail
align 4
public oscar_send_im
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	esi, [esp+9Ch+arg_0]
mov	ebx, [esp+9Ch+arg_4]
mov	edx, [esp+9Ch+arg_8]
mov	[esp+9Ch+var_6C], edx
mov	edi, [esp+9Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], ecx
xor	ecx, ecx
mov	[esp+9Ch+Str], esi
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	[esp+9Ch+Str], esi
call	purple_connection_get_account
mov	esi, eax
mov	[esp+9Ch+Str], ebx
call	oscar_util_valid_name_sms
mov	[esp+9Ch+var_70], eax
mov	edx, [ebp+44h]
test	edx, edx
jz	short loc_688A1C11
test	eax, eax
jnz	loc_688A2340
mov	ecx, edi
and	ecx, 8
mov	[esp+9Ch+var_60], ecx
jnz	loc_688A1EE8
mov	ecx, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], ecx
call	g_strdup
mov	[esp+9Ch+var_68], eax
mov	[esp+9Ch+var_94], 4
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], ebp
call	peer_connection_find_by_type
mov	[esp+9Ch+var_64], eax
test	eax, eax
jz	short loc_688A1C5F
mov	eax, [eax+24h]
test	eax, eax
jnz	loc_688A2184
mov	[esp+9Ch+var_94], esi
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], 1
call	purple_find_conversation_with_account
mov	edi, eax
mov	[esp+9Ch+SubStr], offset aImg 
mov	eax, [esp+9Ch+var_68]
mov	[esp+9Ch+Str], eax 
call	strstr
test	eax, eax
jz	short loc_688A1CD5
mov	[esp+9Ch+Str], 0 
call	time
mov	[esp+9Ch+SubStr], offset aYourImImageWas 
mov	[esp+9Ch+Str], offset aPidgin_6	
mov	[esp+9Ch+var_78], eax
call	libintl_dgettext
mov	edx, [esp+9Ch+var_78]
mov	[esp+9Ch+var_8C], edx
mov	[esp+9Ch+var_90], 200h
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+SubStr], offset byte_688B2167
mov	[esp+9Ch+Str], edi
call	purple_conversation_write
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], esi
call	purple_find_buddy
mov	edi, eax
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], esi
call	purple_normalize
mov	[esp+9Ch+SubStr], eax
mov	eax, [ebp+38h]
mov	[esp+9Ch+Str], eax
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	loc_688A23E4
mov	[esp+9Ch+var_44], 0
mov	eax, [esp+9Ch+var_70]
test	eax, eax
jnz	short loc_688A1D4B
test	edi, edi
jz	loc_688A23D8
mov	[esp+9Ch+Str], edi
mov	[esp+9Ch+var_78], edx
call	purple_buddy_get_account
mov	[esp+9Ch+Str], eax
call	purple_account_is_connected
test	eax, eax
mov	edx, [esp+9Ch+var_78]
jnz	loc_688A2388
mov	eax, [esp+9Ch+var_44]
or	ah, 8
mov	[esp+9Ch+var_44], eax
			
mov	eax, [ebp+44h]
test	eax, eax
jz	loc_688A212C
mov	[esp+9Ch+var_28], offset byte_688AD1FC
mov	[esp+9Ch+var_2C], 1
mov	edi, [edx+24h]
test	edi, edi
jnz	loc_688A2157
			
mov	[esp+9Ch+Str], esi
mov	[esp+9Ch+var_78], edx
call	purple_buddy_icons_find_account_icon
mov	edi, eax
test	eax, eax
jz	loc_688A1E25
mov	[esp+9Ch+Str], eax
call	purple_imgstore_get_data
mov	[esp+9Ch+Str], edi
mov	[esp+9Ch+var_74], eax
call	purple_imgstore_get_size
mov	[esp+9Ch+var_38], eax
mov	[esp+9Ch+SubStr], eax
mov	ecx, [esp+9Ch+var_74]
mov	[esp+9Ch+Str], ecx
call	aimutil_iconsum
movzx	eax, ax
mov	[esp+9Ch+var_30], eax
mov	[esp+9Ch+Str], esi
call	purple_buddy_icons_get_account_icon_timestamp
mov	[esp+9Ch+var_34], eax
mov	edx, [esp+9Ch+var_78]
mov	ecx, [edx+8]
cmp	[esp+9Ch+var_38], ecx
jz	loc_688A23B0
			
mov	dword ptr [edx+14h], 0
mov	dword ptr [edx+28h], 0
mov	[esp+9Ch+SubStr], offset aClaimingToHave 
mov	[esp+9Ch+Str], offset aOscar_13	
mov	[esp+9Ch+var_78], edx
call	purple_debug_info
or	[esp+9Ch+var_44], 20h
mov	eax, [esp+9Ch+var_38]
mov	edx, [esp+9Ch+var_78]
mov	[edx+8], eax
mov	eax, [esp+9Ch+var_30]
mov	[edx+0Ch], eax
mov	eax, [esp+9Ch+var_34]
mov	[edx+10h], eax
mov	dword ptr [edx+14h], 1
mov	[esp+9Ch+Str], edi
call	purple_imgstore_unref
mov	[esp+9Ch+var_48], ebx
mov	[esp+9Ch+Str], ebx
call	oscar_util_valid_name_sms
test	eax, eax
mov	eax, [esp+9Ch+var_68]
jz	loc_688A2038
mov	[esp+9Ch+Str], eax
call	purple_markup_strip_html
mov	ebx, eax
mov	eax, [esp+9Ch+var_68]
mov	[esp+9Ch+Str], eax
call	g_free
mov	[esp+9Ch+var_90], 0
lea	eax, [esp+9Ch+var_24]
mov	[esp+9Ch+var_94], eax
lea	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], ebx
call	oscar_encode_im
mov	[esp+9Ch+var_40], eax
mov	edx, [esp+9Ch+var_3C]
			
mov	[esp+9Ch+var_90], edx
movzx	eax, [esp+9Ch+var_24]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+SubStr], offset aSendingImChars 
mov	[esp+9Ch+Str], offset aOscar_13	
call	purple_debug_info
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], ebp
call	aim_im_sendch1_ext
mov	esi, eax
mov	eax, [esp+9Ch+var_40]
mov	[esp+9Ch+Str], eax
call	g_free
mov	[esp+9Ch+Str], ebx
call	g_free
test	esi, esi
jns	loc_688A202B
mov	eax, esi
			
mov	ecx, [esp+9Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_688A2435
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+9Ch+SubStr], ebx
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], edx
call	oscar_util_format_string
mov	[esp+9Ch+var_68], eax
jmp	loc_688A1C30
align 4
cmp	byte ptr [esi],	0
jz	short loc_688A1F19
mov	[esp+9Ch+SubStr], esi
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_append
			
mov	[esp+9Ch+SubStr], offset aBodyHtml 
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_append
mov	[esp+9Ch+var_90], 0
lea	eax, [esp+9Ch+var_5A]
mov	[esp+9Ch+var_94], eax
lea	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+SubStr], eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	[esp+9Ch+Str], eax
call	oscar_encode_im
mov	ebx, eax
mov	[esp+9Ch+SubStr], 1
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_free
mov	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], ebx
call	g_string_new_len
mov	esi, eax
mov	[esp+9Ch+Str], ebx
call	g_free
mov	eax, [esp+9Ch+var_70]
test	eax, eax
jz	short loc_688A1FB2
mov	eax, [edi+4]
mov	[esp+9Ch+var_94], eax
mov	eax, [edi]
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], esi
call	g_string_append_len
mov	[esp+9Ch+SubStr], offset aBinary_1 
mov	[esp+9Ch+Str], eax
call	g_string_append
mov	esi, eax
mov	[esp+9Ch+SubStr], 1
mov	[esp+9Ch+Str], edi
call	g_string_free
movzx	eax, [esp+9Ch+var_5A]
mov	[esp+9Ch+var_90], eax
mov	eax, [esi]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+SubStr], offset aSendingDirec_0 
mov	[esp+9Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	edx, [esp+9Ch+var_60]
mov	[esp+9Ch+var_8C], edx
movzx	eax, [esp+9Ch+var_5A]
mov	[esp+9Ch+var_90], eax
mov	eax, [esi+4]
mov	[esp+9Ch+var_94], eax
mov	eax, [esi]
mov	[esp+9Ch+SubStr], eax
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+Str], eax
call	peer_odc_send_im
mov	[esp+9Ch+SubStr], 1
mov	[esp+9Ch+Str], esi
call	g_string_free
mov	eax, [esp+9Ch+var_68]
mov	[esp+9Ch+Str], eax
call	g_free
			
mov	eax, 1
jmp	loc_688A1ECC
align 4
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], offset aHtmlBodySBodyH 
call	g_strdup_printf
mov	ebx, eax
mov	eax, [esp+9Ch+var_68]
mov	[esp+9Ch+Str], eax
call	g_free
mov	[esp+9Ch+var_90], 0
lea	edi, [esp+9Ch+var_24]
mov	[esp+9Ch+var_94], edi
lea	esi, [esp+9Ch+var_3C]
mov	[esp+9Ch+SubStr], esi
mov	[esp+9Ch+Str], ebx
call	oscar_encode_im
mov	[esp+9Ch+var_40], eax
mov	edx, [esp+9Ch+var_3C]
cmp	edx, 9F0h
jbe	loc_688A1E7B
mov	[esp+9Ch+Str], eax
call	g_free
mov	[esp+9Ch+Str], ebx
call	purple_markup_strip_html
mov	[esp+9Ch+var_70], eax
mov	[esp+9Ch+Str], ebx
call	g_free
mov	[esp+9Ch+SubStr], 0FFFFFFFFh
mov	eax, [esp+9Ch+var_70]
mov	[esp+9Ch+Str], eax
call	g_markup_escape_text
mov	ebx, eax
mov	eax, [esp+9Ch+var_70]
mov	[esp+9Ch+Str], eax
call	g_free
mov	[esp+9Ch+Str], ebx
call	purple_strdup_withhtml
mov	[esp+9Ch+var_70], eax
mov	[esp+9Ch+Str], ebx
call	g_free
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], edi
mov	[esp+9Ch+SubStr], esi
mov	eax, [esp+9Ch+var_70]
mov	[esp+9Ch+Str], eax
call	oscar_encode_im
mov	[esp+9Ch+var_40], eax
mov	[esp+9Ch+var_90], eax
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], offset aSendingSAsSBec 
mov	[esp+9Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	edx, [esp+9Ch+var_3C]
mov	ebx, [esp+9Ch+var_70]
jmp	loc_688A1E7B
align 4
mov	[esp+9Ch+var_28], offset byte_688AD1FD
mov	[esp+9Ch+var_2C], 4
mov	eax, [esp+9Ch+var_60]
test	eax, eax
jz	loc_688A1D65
or	[esp+9Ch+var_44], 1
mov	edi, [edx+24h]
test	edi, edi
jz	loc_688A1D70
mov	[esp+9Ch+SubStr], offset aSendingBuddy_0 
mov	[esp+9Ch+Str], offset aOscar_13	
mov	[esp+9Ch+var_78], edx
call	purple_debug_info
or	[esp+9Ch+var_44], 10h
mov	edx, [esp+9Ch+var_78]
mov	dword ptr [edx+24h], 0
jmp	loc_688A1D70
mov	[esp+9Ch+var_94], edi
mov	[esp+9Ch+SubStr], offset aSendingDirectI 
mov	[esp+9Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	[esp+9Ch+Str], offset aHtmlBody	
call	g_string_new
mov	[esp+9Ch+var_6C], eax
mov	[esp+9Ch+Str], offset aBinary_0	
call	g_string_new
mov	edi, eax
mov	eax, [esp+9Ch+var_68]
test	eax, eax
jz	loc_688A2428
mov	eax, [esp+9Ch+var_68]
cmp	byte ptr [eax],	0
jz	loc_688A2428
mov	esi, [esp+9Ch+var_68]
mov	[esp+9Ch+var_70], 0
lea	ebx, [esp+9Ch+var_54]
jmp	loc_688A2267
mov	[esp+9Ch+var_8C], esi
mov	ecx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_90], ecx
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], offset aImgSrcSIdDData 
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_append_printf
mov	[esp+9Ch+var_90], esi
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], offset aDataIdDSizeLu	
mov	[esp+9Ch+Str], edi
call	g_string_append_printf
mov	[esp+9Ch+var_94], esi
mov	[esp+9Ch+SubStr], ebp
mov	[esp+9Ch+Str], edi
call	g_string_append_len
mov	[esp+9Ch+SubStr], offset aData_2 
mov	[esp+9Ch+Str], edi
call	g_string_append
			
mov	[esp+9Ch+Str], ebx
call	g_datalist_clear
mov	eax, [esp+9Ch+var_4C]
mov	esi, eax
inc	esi
jz	loc_688A1F19
cmp	byte ptr [eax+1], 0
jz	loc_688A1F19
mov	[esp+9Ch+var_8C], ebx
lea	ecx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_90], ecx
lea	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+SubStr], esi
mov	[esp+9Ch+Str], offset aImg_1 
call	purple_markup_find_tag
test	eax, eax
jz	loc_688A1F04
mov	eax, [esp+9Ch+var_50]
cmp	eax, esi
jz	short loc_688A22B1
sub	eax, esi
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+SubStr], esi
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_append_len
mov	[esp+9Ch+Str], offset aId_0 
call	g_quark_try_string
mov	[esp+9Ch+SubStr], eax
mov	[esp+9Ch+Str], ebx
call	g_datalist_id_get_data
test	eax, eax
jz	loc_688A2248
mov	[esp+9Ch+Str], eax 
call	atoi
mov	[esp+9Ch+Str], eax
call	purple_imgstore_find_by_id
mov	ebp, eax
test	eax, eax
jz	loc_688A2248
mov	[esp+9Ch+Str], eax
call	purple_imgstore_get_size
mov	esi, eax
mov	[esp+9Ch+Str], ebp
call	purple_imgstore_get_filename
mov	[esp+9Ch+Str], ebp
mov	[esp+9Ch+var_78], eax
call	purple_imgstore_get_data
mov	ebp, eax
inc	[esp+9Ch+var_70]
mov	edx, [esp+9Ch+var_78]
test	edx, edx
jnz	loc_688A21E8
mov	[esp+9Ch+var_90], esi
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], offset aImgIdDDatasize 
mov	eax, [esp+9Ch+var_6C]
mov	[esp+9Ch+Str], eax
call	g_string_append_printf
jmp	loc_688A220C
mov	[esp+9Ch+var_94], ebx
mov	[esp+9Ch+SubStr], offset aSendingSmsToS_ 
mov	[esp+9Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	[esp+9Ch+Str], esi
call	purple_account_get_username
mov	[esp+9Ch+var_90], eax
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], ebp
call	aim_icq_sendsms
test	eax, eax
jns	loc_688A202B
jmp	loc_688A1ECC
align 4
mov	[esp+9Ch+Str], edi
mov	[esp+9Ch+var_78], edx
call	purple_buddy_get_presence
mov	[esp+9Ch+Str], eax
call	purple_presence_is_online
test	eax, eax
mov	edx, [esp+9Ch+var_78]
jnz	loc_688A1D4B
jmp	loc_688A1D40
align 10h
mov	ecx, [edx+0Ch]
cmp	[esp+9Ch+var_30], ecx
jnz	loc_688A1DD2
cmp	eax, [edx+10h]
jnz	loc_688A1DD2
mov	esi, [edx+14h]
test	esi, esi
jnz	loc_688A1E1D
jmp	loc_688A1DE0
align 4
mov	eax, 800h
jmp	loc_688A1D47
align 4
mov	[esp+9Ch+Str], 2Ch
call	g_malloc0
mov	[esp+9Ch+SubStr], ebx
mov	[esp+9Ch+Str], esi
mov	[esp+9Ch+var_78], eax
call	purple_normalize
mov	[esp+9Ch+Str], eax
call	g_strdup
mov	edx, [esp+9Ch+var_78]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+SubStr], eax
mov	eax, [ebp+38h]
mov	[esp+9Ch+Str], eax
call	g_hash_table_insert
mov	edx, [esp+9Ch+var_78]
jmp	loc_688A1D08
			
mov	[esp+9Ch+var_70], 0
jmp	loc_688A1F19
call	__stack_chk_fail
align 4
public oscar_get_info
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	ecx, [eax+44h]
test	ecx, ecx
jz	short loc_688A2471
mov	[esp+2Ch+var_2C], esi
call	oscar_util_valid_name_icq
test	eax, eax
jnz	short loc_688A2498
mov	[esp+2Ch+var_24], 3
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	aim_locate_getinfoshort
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A24B6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A24B6
mov	[esp+2Ch+arg_4], esi 
mov	[esp+2Ch+arg_0], ebx 
add	esp, 24h
pop	ebx
pop	esi
jmp	aim_icq_getallinfo
			
call	__stack_chk_fail
align 4
public oscar_set_idle
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A24F8
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	aim_srv_setidle
call	__stack_chk_fail
align 10h
public oscar_set_info
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_active_status
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A2555
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], 0
mov	ecx, esi
mov	edx, 1
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_6889A35C
call	__stack_chk_fail
align 4
public oscar_set_status
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_status_get_name
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSetStatusToS 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	purple_status_is_active
test	eax, eax
jnz	short loc_688A25AD
mov	[esp+2Ch+var_2C], ebx
call	purple_status_is_independent
test	eax, eax
jz	short loc_688A25B9
mov	[esp+2Ch+var_2C], esi
call	purple_account_is_connected
test	eax, eax
jnz	short loc_688A25D0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A2651
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_status_get_type
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_primitive
cmp	eax, 9
jz	short loc_688A2634
mov	edi, [edi+44h]
test	edi, edi
jnz	short loc_688A2628
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2651
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], 1
xor	ecx, ecx
xor	edx, edx
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_6889A35C
align 4
mov	eax, esi
call	sub_6889A2F8
jmp	short loc_688A25FE
align 4
mov	[esp+2Ch+var_28], 700E402Dh
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_2C], edi
call	aim_locate_setcaps
jmp	loc_688A25B9
			
call	__stack_chk_fail
align 4
public oscar_add_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], eax
mov	ebp, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_account
mov	[esp+5Ch+var_34], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp+5Ch+var_5C], ebp
call	purple_group_get_name
mov	ebp, eax
mov	[esp+5Ch+var_5C], ebx
call	oscar_util_valid_name
test	eax, eax
jz	short loc_688A2720
mov	eax, [edi+0CCh]
test	eax, eax
jnz	loc_688A278C
			
mov	ebp, [edi+44h]
test	ebp, ebp
jnz	short loc_688A26EC
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A28F2
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A28F2
mov	[esp+5Ch+arg_C], 0 
mov	[esp+5Ch+arg_8], 0 
mov	[esp+5Ch+arg_4], ebx 
mov	[esp+5Ch+arg_0], edi 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	aim_icq_getalias
mov	[esp+5Ch+var_58], offset aUnableToAddT_1 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_conv_present_error
test	eax, eax
jz	loc_688A27FC
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A28F2
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_blist_remove_buddy
align 4
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], ebp
mov	eax, [edi+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	loc_688A2848
mov	[esp+5Ch+var_58], ebx
mov	eax, [edi+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_itemlist_findparentname
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+0D8h]
mov	[esp+5Ch+var_5C], eax
call	aim_ssi_waitingforauth
test	eax, eax
jz	loc_688A26CA
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	oscar_auth_sendrequest
jmp	loc_688A26CA
align 4
mov	[esp+5Ch+var_58], offset aUnableToAdd 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	purple_notify_message
jmp	loc_688A275E
align 4
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aSsiAddingBud_1 
mov	[esp+5Ch+var_5C], offset aOscar_13 
call	purple_debug_info
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_get_alias_only
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	aim_ssi_addbuddy
cmp	byte ptr [ebx],	2Bh
jnz	loc_688A26CA
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aAvailable_0 
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aMobile_0 
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
jmp	loc_688A26CA
			
call	__stack_chk_fail
align 4
public oscar_remove_buddy
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+0CCh]
test	eax, eax
jnz	short loc_688A293C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A298F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], edi
call	purple_group_get_name
mov	edi, eax
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_get_name
mov	esi, eax
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSsiDeletingBud 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A298F
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	aim_ssi_delbuddy
			
call	__stack_chk_fail
public oscar_move_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+Str1],	eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+0CCh]
test	eax, eax
jz	short loc_688A29DA
mov	[esp+4Ch+Str2],	edi 
mov	[esp+4Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_688A29F0
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2A38
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Str2],	offset aSsiMovingBuddy 
mov	[esp+4Ch+Str1],	offset aOscar_13 
call	purple_debug_info
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2A38
mov	[esp+4Ch+arg_C], ebp
mov	[esp+4Ch+arg_8], edi
mov	[esp+4Ch+arg_4], esi
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	aim_ssi_movebuddy
			
call	__stack_chk_fail
align 10h
public oscar_alias_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+0CCh]
test	eax, eax
jnz	short loc_688A2A88
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2ADF
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_38], esi
mov	eax, [ebx+0D8h]
mov	[esp+3Ch+var_3C], eax
call	aim_ssi_itemlist_findparentname
mov	ebp, eax
test	eax, eax
jz	short loc_688A2A72
test	edi, edi
jz	short loc_688A2AD8
mov	eax, edi
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aSsiChangingThe 
mov	[esp+3Ch+var_3C], offset aOscar_13 
call	purple_debug_info
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	aim_ssi_aliasbuddy
jmp	short loc_688A2A72
mov	eax, offset aNone_0 
jmp	short loc_688A2AA6
call	__stack_chk_fail
public oscar_rename_group
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], eax
mov	edi, [esp+4Ch+arg_8]
mov	ebx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_connection_get_protocol_data
mov	esi, eax
mov	eax, [eax+0CCh]
test	eax, eax
jnz	short loc_688A2B38
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A2C41
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], edi
call	purple_group_get_name
mov	edi, eax
mov	[esp+4Ch+var_40], 1
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	loc_688A2C04
mov	[esp+4Ch+var_4C], ebp
call	purple_connection_get_account
mov	[esp+4Ch+var_30], eax
test	ebx, ebx
jz	loc_688A2C3A
mov	ebp, ebx
xor	esi, esi
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_get_group
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_list_append
mov	esi, eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_688A2B84
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_account_remove_buddies
mov	[esp+4Ch+var_48], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_account_add_buddies
mov	[esp+4Ch+var_4C], esi
call	g_list_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2C41
mov	[esp+4Ch+arg_C], edi
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], offset	aSsiMovedAllBud	
mov	[esp+4Ch+arg_0], offset	aOscar_13 
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_info
mov	[esp+4Ch+var_44], edi
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	aim_ssi_rename_group
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2C41
mov	[esp+4Ch+arg_C], edi
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], offset	aSsiRenamedGrou	
jmp	short loc_688A2BF0
xor	esi, esi
jmp	loc_688A2BA4
			
call	__stack_chk_fail
align 4
public oscar_remove_group
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_group_get_name
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_protocol_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A2C90
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	aim_ssi_delgroup
call	__stack_chk_fail
align 4
public oscar_chat_info
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_room	
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aRoom	
mov	dword ptr [ebx+8], 1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 0
call	g_list_append
mov	esi, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_exchange 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aExchange 
mov	dword ptr [ebx+8], 1
mov	dword ptr [ebx+0Ch], 1
mov	dword ptr [ebx+10h], 4
mov	dword ptr [ebx+14h], 14h
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_list_append
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A2D51
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public oscar_chat_info_defaults
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset loc_688ABE00
call	g_hash_table_new_full
mov	ebx, eax
test	esi, esi
jz	short loc_688A2DB2
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aRoom 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_insert
mov	[esp+2Ch+var_2C], offset a4 
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aExchange 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_insert
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A2DE6
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public oscar_get_chat_name
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aRoom 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A2E26
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_strdup
call	__stack_chk_fail
align 4
public oscar_join_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+Str], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+3Ch+EndPtr], offset aRoom 
mov	[esp+3Ch+Str], esi
call	g_hash_table_lookup
mov	ebx, eax
mov	[esp+3Ch+EndPtr], offset aExchange 
mov	[esp+3Ch+Str], esi
call	g_hash_table_lookup
test	ebx, ebx
jz	short loc_688A2ED4
cmp	byte ptr [ebx],	0
jz	short loc_688A2ED4
mov	esi, eax
test	eax, eax
jz	loc_688A2FD0
call	_errno
mov	dword ptr [eax], 0
mov	[esp+3Ch+Radix], 0Ah 
mov	[esp+3Ch+EndPtr], 0 
mov	[esp+3Ch+Str], esi 
call	strtol
mov	esi, eax
call	_errno
mov	eax, [eax]
test	eax, eax
jz	short loc_688A2F08
mov	[esp+3Ch+Radix], offset	aErrno0	
mov	[esp+3Ch+EndPtr], offset aOscar_join_cha 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
jmp	short loc_688A2EF0
align 4
			
mov	[esp+3Ch+Radix], offset	aNameNullName0 
mov	[esp+3Ch+EndPtr], offset aOscar_join_cha 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A2FF1
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+Radix], ebx
mov	[esp+3Ch+EndPtr], offset aAttemptingToJo 
mov	[esp+3Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	[esp+3Ch+EndPtr], 0Dh
mov	[esp+3Ch+Str], edi
call	flap_connection_getbytype
mov	ebp, eax
test	eax, eax
jz	short loc_688A2F68
mov	[esp+3Ch+EndPtr], offset aChatnavExistsC 
mov	[esp+3Ch+Str], offset aOscar_13	
call	purple_debug_info
and	esi, 0FFFFh
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+Radix], ebx
mov	[esp+3Ch+EndPtr], ebp
mov	[esp+3Ch+Str], edi
call	aim_chatnav_createroom
jmp	short loc_688A2EF0
align 4
mov	[esp+3Ch+Str], 8
call	g_malloc0
mov	ebp, eax
mov	[esp+3Ch+EndPtr], offset aChatnavDoesNot 
mov	[esp+3Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	[ebp+4], esi
mov	[esp+3Ch+Str], ebx
call	g_strdup
mov	[ebp+0], eax
mov	[esp+3Ch+EndPtr], ebp
mov	eax, [edi+0Ch]
mov	[esp+3Ch+Str], eax
call	g_slist_prepend
mov	[edi+0Ch], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A2FF1
mov	[esp+3Ch+arg_4], 0Dh
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	aim_srv_requestnew
align 10h
mov	[esp+3Ch+Radix], offset	aExchangeNull 
mov	[esp+3Ch+EndPtr], offset aOscar_join_cha 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_688A2EF0
			
call	__stack_chk_fail
align 4
public oscar_chat_invite
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_connection_get_protocol_data
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_connection_get_protocol_data
mov	edx, [eax+34h]
test	edx, edx
jnz	short loc_688A303F
jmp	short loc_688A3074
align 4
mov	edx, [edx+4]
test	edx, edx
jz	short loc_688A3074
mov	ecx, [edx]
cmp	edi, [ecx+10h]
jnz	short loc_688A3038
mov	eax, [ecx]
movzx	edx, word ptr [ecx+8]
test	ebp, ebp
jz	short loc_688A3088
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], esi
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	aim_im_sendch2_chatinvite
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A308F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebp, offset byte_688B2167
jmp	short loc_688A3050
call	__stack_chk_fail
public oscar_chat_leave
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_find_chat
mov	ebx, eax
test	eax, eax
jz	loc_688A3150
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_name
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aLeavingChatRoo 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_chat_data
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_get_id
mov	esi, eax
mov	[esp+2Ch+var_2C], edi
call	purple_connection_get_protocol_data
mov	ecx, [eax+34h]
test	ecx, ecx
jnz	short loc_688A310F
jmp	short loc_688A314C
align 4
mov	ecx, [ecx+4]
test	ecx, ecx
jz	short loc_688A314C
mov	ebx, [ecx]
cmp	esi, [ebx+10h]
jnz	short loc_688A3108
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	flap_connection_schedule_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A317F
mov	edx, ebx
mov	eax, edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_688A08C8
			
xor	ebx, ebx
jmp	short loc_688A3116
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aOscar_chat_lea 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A317F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public oscar_send_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str], ebx
call	purple_connection_get_protocol_data
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+SubStr], esi
mov	[esp+5Ch+Str], ebx
call	purple_find_chat
mov	esi, eax
test	eax, eax
jz	loc_688A3360
mov	[esp+5Ch+Str], ebx
call	purple_connection_get_protocol_data
mov	ecx, [eax+34h]
test	ecx, ecx
jnz	short loc_688A31E7
jmp	loc_688A3360
mov	ecx, [ecx+4]
test	ecx, ecx
jz	loc_688A3360
mov	edi, [ecx]
cmp	esi, [edi+18h]
jnz	short loc_688A31DC
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], edx
call	purple_strdup_withhtml
mov	ebx, eax
mov	[esp+5Ch+SubStr], offset aImg 
mov	[esp+5Ch+Str], eax 
call	strstr
test	eax, eax
jz	short loc_688A3252
mov	[esp+5Ch+Str], 0 
call	time
mov	ebp, eax
mov	[esp+5Ch+SubStr], offset aYourImImageW_0 
mov	[esp+5Ch+Str], offset aPidgin_6	
call	libintl_dgettext
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], 200h
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], offset byte_688B2167
mov	[esp+5Ch+Str], esi
call	purple_conversation_write
lea	edx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_50], edx
lea	esi, [esp+5Ch+var_2A]
mov	[esp+5Ch+var_54], esi
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebx
call	oscar_encode_im
mov	ebp, eax
mov	eax, [esp+5Ch+var_24]
movzx	ecx, word ptr [edi+1Ch]
cmp	ecx, eax
jb	short loc_688A328C
movzx	ecx, word ptr [edi+1Eh]
cmp	eax, ecx
jbe	loc_688A3316
mov	[esp+5Ch+Str], ebp
call	g_free
mov	[esp+5Ch+Str], ebx
call	purple_markup_strip_html
mov	ebp, eax
mov	[esp+5Ch+Str], ebx
call	g_free
mov	[esp+5Ch+Str], ebp
call	purple_strdup_withhtml
mov	ebx, eax
mov	[esp+5Ch+Str], ebp
call	g_free
lea	edx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], esi
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebx
call	oscar_encode_im
mov	ebp, eax
mov	eax, [esp+5Ch+var_24]
movzx	ecx, word ptr [edi+1Ch]
movzx	esi, word ptr [edi+1Eh]
cmp	ecx, eax
jb	loc_688A3379
cmp	eax, esi
ja	loc_688A3379
mov	[esp+5Ch+var_50], ebp
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+SubStr], offset aSendingSAsSBec 
mov	[esp+5Ch+Str], offset aOscar_13	
call	purple_debug_info
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_44], offset aEn_0 
mov	ecx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], 0
mov	eax, [edi+0Ch]
mov	[esp+5Ch+SubStr], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	aim_chat_send_im
mov	[esp+5Ch+Str], ebp
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_free
xor	eax, eax
jmp	short loc_688A3365
align 10h
			
mov	eax, 0FFFFFFEAh
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A33B8
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+5Ch+var_44], esi
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], ecx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+SubStr], offset aCouldNotSendSB 
mov	[esp+5Ch+Str], offset aOscar_13	
call	purple_debug_warning
mov	[esp+5Ch+Str], ebx
call	g_free
mov	[esp+5Ch+Str], ebp
call	g_free
mov	eax, 0FFFFFFF9h
jmp	short loc_688A3365
call	__stack_chk_fail
align 10h
public oscar_get_purple_moods
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A33EB
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	icq_get_purple_moods
call	__stack_chk_fail
public oscar_list_icon_icq
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A3422
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_get_name
mov	ebx, eax
test	eax, eax
jz	short loc_688A3422
mov	[esp+2Ch+var_2C], eax
call	oscar_util_valid_name_sms
test	eax, eax
jz	short loc_688A3438
			
mov	eax, offset aIcq_0 
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A3442
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_2C], ebx
call	oscar_util_valid_name_icq
jmp	short loc_688A3422
call	__stack_chk_fail
align 4
public oscar_list_icon_aim
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A347A
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_get_name
mov	ebx, eax
test	eax, eax
jz	short loc_688A347A
mov	[esp+2Ch+var_2C], eax
call	oscar_util_valid_name_sms
test	eax, eax
jz	short loc_688A3490
			
mov	eax, offset aAim 
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A34A3
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_2C], ebx
call	oscar_util_valid_name_icq
test	eax, eax
jz	short loc_688A347A
mov	eax, offset aIcq_0 
jmp	short loc_688A347F
call	__stack_chk_fail
public oscar_list_emblem
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_account
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_name
mov	ebp, eax
test	esi, esi
jz	loc_688A3588
mov	[esp+3Ch+var_3C], esi
call	purple_account_get_connection
test	eax, eax
jz	loc_688A3588
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
test	eax, eax
jz	loc_688A360C
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	aim_locate_finduserinfo
mov	esi, eax
			
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_presence
mov	ebx, eax
mov	[esp+3Ch+var_3C], eax
call	purple_presence_is_online
test	eax, eax
jnz	short loc_688A3532
test	ebp, ebp
jz	short loc_688A3532
test	edi, edi
jz	short loc_688A3532
mov	edx, [edi+0CCh]
test	edx, edx
jnz	short loc_688A3594
			
test	esi, esi
jz	loc_688A3600
mov	eax, [esi+8]
test	al, 2
jnz	short loc_688A3580
test	ah, 4
jnz	short loc_688A3560
test	byte ptr [esi+22h], 20h
jnz	loc_688A35F4
test	byte ptr [esi+2Ah], 8
jz	short loc_688A35D0
mov	eax, offset aBirthday 
jmp	short loc_688A3565
align 10h
mov	eax, offset aBot 
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A3607
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	eax, offset aAdmin_0 
jmp	short loc_688A3565
align 4
			
xor	edi, edi
xor	esi, esi
jmp	loc_688A350A
align 4
mov	[esp+3Ch+var_38], ebp
mov	eax, [edi+0D8h]
mov	[esp+3Ch+var_3C], eax
call	aim_ssi_itemlist_findparentname
test	eax, eax
jz	short loc_688A3532
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], eax
mov	eax, [edi+0D8h]
mov	[esp+3Ch+var_3C], eax
call	aim_ssi_waitingforauth
test	eax, eax
jz	loc_688A3532
mov	eax, offset aNotAuthorized 
jmp	short loc_688A3565
align 10h
mov	[esp+3Ch+var_38], 9
mov	[esp+3Ch+var_3C], ebx
call	purple_presence_is_status_primitive_active
test	eax, eax
jnz	short loc_688A3600
test	byte ptr [esi+22h], 10h
jz	short loc_688A3600
mov	eax, offset aHiptop 
jmp	loc_688A3565
mov	eax, offset aSecure 
jmp	loc_688A3565
align 10h
			
xor	eax, eax
jmp	loc_688A3565
call	__stack_chk_fail
xor	esi, esi
jmp	loc_688A350A
align 4
public oscar_tooltip_text
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688A364A
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_688A3664
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A36F3
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_presence
mov	[esp+5Ch+var_5C], eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_688A364A
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_connection
mov	ebp, eax
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_protocol_data
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], eax
call	purple_buddy_get_name
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	aim_locate_finduserinfo
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
mov	[esp+5Ch+var_30], eax
call	oscar_user_info_append_status
test	edi, edi
mov	eax, [esp+5Ch+var_30]
jz	loc_688A364A
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	oscar_user_info_append_extra_info
jmp	loc_688A364A
call	__stack_chk_fail
public oscar_status_text
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_connection
mov	esi, eax
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_presence
mov	edi, eax
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_active_status
mov	ebp, eax
test	esi, esi
jz	short loc_688A375A
mov	[esp+4Ch+var_4C], edi
call	purple_presence_is_online
test	eax, eax
jz	short loc_688A37C8
mov	[esp+4Ch+var_48], offset aMessage_1 
mov	[esp+4Ch+var_4C], ebp
call	purple_status_get_attr_string
mov	ebx, eax
test	eax, eax
jz	loc_688A3858
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_username
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	oscar_util_format_string
mov	ebx, eax
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], eax
call	purple_markup_escape_text
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_34], eax
call	g_free
mov	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A3850
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_itemlist_findparentname
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_waitingforauth
test	eax, eax
jnz	short loc_688A3830
mov	[esp+4Ch+var_48], offset aOffline 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A3850
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
align 10h
mov	[esp+4Ch+var_48], offset aNotAuthorize_0 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_688A381E
			
call	__stack_chk_fail
align 4
mov	[esp+4Ch+var_4C], ebp
call	purple_status_is_available
test	eax, eax
jnz	short loc_688A3888
mov	[esp+4Ch+var_4C], ebp
call	purple_status_get_name
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A3850
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
xor	eax, eax
jmp	loc_688A37AE
align 10h
public oscar_set_aim_permdeny
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_account
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_protocol_data
mov	edx, [esi+38h]
and	edx, 0FFh
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_setpermdeny
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A38DD
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public oscar_add_permit
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+2Ch+var_28], offset aSsiAboutToAddA 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_24], 2
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	aim_ssi_add_to_private_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A3940
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public oscar_add_deny
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aSsiAboutToAd_0 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	aim_ssi_getdenyentrytype
movzx	eax, ax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	aim_ssi_add_to_private_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A39AB
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public oscar_rem_permit
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+2Ch+var_28], offset aSsiAboutToDele 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_24], 2
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	aim_ssi_del_from_private_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A3A0C
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public oscar_rem_deny
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aSsiAboutToDe_0 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	aim_ssi_getdenyentrytype
movzx	eax, ax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	aim_ssi_del_from_private_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A3A77
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public oscar_status_types
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_688A428C
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_username
mov	[esp+7Ch+var_7C], eax
call	oscar_util_valid_name_icq
mov	ebx, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aItunesMusicSto 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], 0
mov	[esp+7Ch+var_50], ebp
mov	[esp+7Ch+var_54], edi
mov	[esp+7Ch+var_58], offset aItmsurl 
mov	[esp+7Ch+var_5C], esi
mov	[esp+7Ch+var_60], eax
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aAvailable_0 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], 0
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aFreeForChat 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aFree4chat 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aEvil_0 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aEvil 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aDepression_0 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aDepression 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aAtHome 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aAthome 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aAtWork 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aAtwork 
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aLunch_0 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aLunch	
mov	[esp+7Ch+var_7C], 2
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], eax
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aAway 
mov	[esp+7Ch+var_7C], 5
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], eax
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aInvisible 
mov	[esp+7Ch+var_7C], 4
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_68], 1
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aMobile_0 
mov	[esp+7Ch+var_7C], 7
call	purple_status_type_new_full
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aOccupied_0 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aOccupied 
mov	[esp+7Ch+var_7C], 3
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aDoNotDisturb 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aDnd 
mov	[esp+7Ch+var_7C], 3
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aMessage_2 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aNotAvailable 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_58], 0
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], edi
mov	[esp+7Ch+var_64], offset aMessage_1 
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aNa 
mov	[esp+7Ch+var_7C], 6
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aOffline_0 
mov	[esp+7Ch+var_7C], 1
call	purple_status_type_new_full
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	[esp+7Ch+var_78], offset aMoodComment 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_7C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+7Ch+var_78], offset aMoodName 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], 0
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_50], edx
mov	[esp+7Ch+var_54], ebp
mov	[esp+7Ch+var_58], offset aMoodtext_0 
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], eax
mov	[esp+7Ch+var_64], offset aMood_1 
mov	[esp+7Ch+var_68], 1
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aMood_1 
mov	[esp+7Ch+var_7C], 9
call	purple_status_type_new_with_attrs
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_list_prepend
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A42BE
mov	[esp+7Ch+arg_0], eax
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
align 4
mov	[esp+7Ch+var_74], offset aAccountNull 
mov	[esp+7Ch+var_78], offset aOscar_status_t 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A42BE
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public oscar_blist_node_menu
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	loc_688A447C
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_name
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_connection
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	aim_locate_finduserinfo
mov	[esp+4Ch+var_30], eax
mov	eax, [esi+44h]
test	eax, eax
jnz	loc_688A4498
xor	edi, edi
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_group
test	eax, eax
jz	short loc_688A437E
mov	[esp+4Ch+var_48], offset aEditBuddyComme 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_6889A038
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
mov	eax, [esi+44h]
test	eax, eax
jnz	loc_688A44F4
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_688A43CC
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_username
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jz	short loc_688A43CC
test	ebx, ebx
jz	short loc_688A43CC
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_688A4564
lea	esi, [esi+0]
			
mov	ecx, [esi+0CCh]
test	ecx, ecx
jnz	short loc_688A43F8
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A4627
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_group
test	eax, eax
jz	short loc_688A43D6
mov	[esp+4Ch+var_48], ebp
mov	eax, [esi+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_itemlist_findparentname
test	eax, eax
jz	short loc_688A43D6
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+0D8h]
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_waitingforauth
test	eax, eax
jz	short loc_688A43D6
mov	[esp+4Ch+var_48], offset aReRequestAutho 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset oscar_auth_sendrequest_menu
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
jmp	loc_688A43D6
align 4
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A4627
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], ebp
call	oscar_util_valid_name_icq
test	eax, eax
jz	loc_688A432E
mov	[esp+4Ch+var_48], offset aGetAimInfo 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset loc_6889F170
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 0
call	g_list_prepend
mov	edi, eax
jmp	loc_688A4330
align 4
mov	[esp+4Ch+var_48], offset aGetXStatusMsg	
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset loc_6889F0AC
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	create_visibility_menu_item
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jnz	loc_688A4391
jmp	loc_688A43CC
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_presence
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_online
test	eax, eax
jz	loc_688A43CC
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	peer_connection_find_by_type
mov	edx, [esp+4Ch+var_30]
test	byte ptr [edx+20h], 4
jz	loc_688A43CC
test	eax, eax
jz	short loc_688A45F1
mov	[esp+4Ch+var_48], offset aEndDirectImSes 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset loc_68899DCC
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
jmp	loc_688A43CC
mov	[esp+4Ch+var_48], offset aDirectIm 
mov	[esp+4Ch+var_4C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_68899BD8
mov	[esp+4Ch+var_4C], eax
call	purple_menu_action_new
jmp	short loc_688A45DE
			
call	__stack_chk_fail
public oscar_set_icon
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
test	ebx, ebx
jz	loc_688A46E4
mov	[esp+4Ch+var_4C], ebx
call	purple_imgstore_get_data
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_imgstore_get_size
mov	ebp, eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], offset aMd5_0	
call	purple_cipher_context_new_by_name
mov	ebx, eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_append
mov	[esp+4Ch+var_40], 0
lea	esi, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], 10h
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_destroy
mov	[esp+4Ch+var_44], 10h
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], edi
call	aim_ssi_seticon
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A46EE
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], eax
call	aim_ssi_delicon
jmp	short loc_688A46CE
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], ebx
call	aim_ssi_getdenyentrytype
mov	[esp+6Ch+var_3A], ax
mov	ebx, [ebx+68h]
mov	[esp+6Ch+var_48], ebx
mov	[esp+6Ch+var_6C], ebx
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], edx
call	purple_connection_get_account
mov	[esp+6Ch+var_40], eax
mov	eax, [ebp+48h]
test	eax, eax
jnz	loc_688A4E40
mov	[esp+6Ch+var_68], offset aSsiSyncingLoca 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_6C], ebp
call	aim_ssi_cleanlist
mov	[esp+6Ch+var_68], 0
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddies
mov	edi, eax
xor	ebx, ebx
test	eax, eax
jz	loc_688A48C8
mov	[esp+6Ch+var_44], ebx
jmp	short loc_688A4808
align 10h
mov	[esp+6Ch+var_68], offset aServernick_0 
mov	[esp+6Ch+var_6C], ebx
call	purple_blist_node_get_string
test	eax, eax
jz	short loc_688A47B8
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], esi
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], edx
call	serv_got_alias
mov	[esp+6Ch+var_64], esi
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_getalias
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_50], eax
call	purple_buddy_get_local_buddy_alias
mov	edx, [esp+6Ch+var_50]
test	edx, edx
jz	loc_688A4870
			
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], edi
call	g_slist_delete_link
mov	edi, eax
test	eax, eax
jz	loc_688A48A4
mov	ebx, [edi]
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_group
mov	[esp+6Ch+var_6C], eax
call	purple_group_get_name
mov	[esp+6Ch+var_4C], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_name
mov	esi, eax
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_itemlist_exists
test	eax, eax
jnz	loc_688A4790
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], offset aSsiRemovingBud 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], eax
call	g_slist_prepend
mov	[esp+6Ch+var_44], eax
jmp	short loc_688A47F2
test	eax, eax
jz	loc_688A47EA
cmp	byte ptr [eax],	0
jz	loc_688A47EA
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	aim_ssi_aliasbuddy
mov	edx, [esp+6Ch+var_50]
jmp	loc_688A47EA
align 4
mov	ebx, [esp+6Ch+var_44]
test	ebx, ebx
jz	short loc_688A48C8
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	purple_blist_remove_buddy
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_688A48AC
			
mov	esi, [ebp+44h]
test	esi, esi
jnz	short loc_688A4911
mov	eax, [esp+6Ch+var_40]
mov	ebx, [eax+30h]
test	ebx, ebx
jz	short loc_688A4911
xchg	ax, ax
mov	esi, [ebx+4]
mov	[esp+6Ch+var_60], 2
mov	eax, [ebx]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	loc_688A4DC4
mov	ebx, esi
test	esi, esi
jnz	short loc_688A48DC
			
mov	eax, [esp+6Ch+var_40]
mov	edi, [eax+34h]
test	edi, edi
jz	short loc_688A4955
movzx	esi, [esp+6Ch+var_3A]
lea	esi, [esi+0]
mov	ebx, [edi+4]
mov	[esp+6Ch+var_60], esi
mov	eax, [edi]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	loc_688A4D60
mov	edi, ebx
test	ebx, ebx
jnz	short loc_688A4924
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_getpresence
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_688A4999
mov	[esp+6Ch+var_6C], offset aPurpleAwayIdle 
call	purple_prefs_get_string
mov	edi, offset aNone 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jz	loc_688A4DB0
or	bh, 4
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], ebp
call	aim_ssi_setpresence
			
mov	edi, [ebp+0D8h]
test	edi, edi
jz	loc_688A4AE3
mov	esi, edi
mov	edi, [esp+6Ch+var_40]
lea	esi, [esi+0]
			
mov	eax, [esi]
test	eax, eax
jz	short loc_688A49D6
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+var_6C], eax
call	g_utf8_validate
test	eax, eax
jz	loc_688A4D34
mov	eax, [esi+8]
cmp	ax, 0Eh		
ja	loc_688A4AD8	
movzx	ecx, ax
jmp	ds:off_688B5068[ecx*4] 
mov	[esp+6Ch+var_68], offset aOrphans_0 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_6C], eax
call	purple_find_group
mov	[esp+6Ch+var_34], eax
test	eax, eax
jnz	short loc_688A4A41
mov	[esp+6Ch+var_68], offset aOrphans_0 
mov	[esp+6Ch+var_6C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+6Ch+var_6C], eax
call	purple_group_new
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	purple_blist_add_group
			
mov	eax, [esi]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ebx
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_getalias
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], edi
call	oscar_utf8_try_convert
mov	[esp+6Ch+var_38], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], eax
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_find_buddy_in_group
mov	ecx, eax
mov	eax, [esp+6Ch+var_38]
test	ecx, ecx
jz	loc_688A4E94
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_50], ecx
call	purple_blist_alias_buddy
mov	ecx, [esp+6Ch+var_50]
mov	eax, [esi]
cmp	byte ptr [eax],	2Bh
jz	loc_688A4F00
			
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_free
			
mov	esi, [esi+10h]	
test	esi, esi
jnz	loc_688A49B0
			
mov	ebx, [ebp+44h]
test	ebx, ebx
jz	loc_688A4D9C
mov	eax, [esp+6Ch+var_40]
call	sub_6889A2F8
mov	[esp+6Ch+var_68], offset aSsiActivatingS 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_6C], ebp
call	aim_ssi_enable
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_buddy_icons_find_account_icon
mov	ebx, eax
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], edx
call	oscar_set_icon
mov	[esp+6Ch+var_6C], ebx
call	purple_imgstore_unref
mov	eax, [ebp+0C8h]
test	eax, eax
jz	short loc_688A4B6F
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], ebp
call	aim_srv_clientready
mov	[esp+6Ch+var_6C], ebp
call	aim_im_reqofflinemsgs
mov	[esp+6Ch+var_68], 1
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], edx
call	purple_connection_set_state
mov	eax, 1
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A4F5F
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, [ebp+44h]	
test	eax, eax
jnz	loc_688A4AD8	
mov	eax, [esi+0Ch]
test	eax, eax
jz	loc_688A4AD8	
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_getpermdeny
test	al, al
jz	loc_688A4AD8	
movzx	ebx, al
mov	eax, [edi+38h]
cmp	ebx, eax
jz	loc_688A4AD8	
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiChangingPer 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[edi+38h], ebx
mov	esi, [esi+10h]
test	esi, esi
jnz	loc_688A49B0
jmp	loc_688A4AE3
align 4
			
cmp	[esp+6Ch+var_3A], ax 
jnz	loc_688A4AD8	
mov	eax, [esi]
test	eax, eax
jz	loc_688A4AD8	
mov	ebx, [edi+34h]
test	ebx, ebx
jnz	short loc_688A4C29
jmp	loc_688A4E54
align 4
mov	ebx, [ebx+4]
mov	eax, [esi]
test	ebx, ebx
jz	loc_688A4E54
mov	edx, [ebx]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_688A4C1C
jmp	loc_688A4AD8	
			
mov	edx, [ebp+44h]	
test	edx, edx
jnz	loc_688A4AD8	
mov	eax, [esi]
test	eax, eax
jz	loc_688A4AD8	
mov	ebx, [edi+30h]
test	ebx, ebx
jnz	short loc_688A4C71
jmp	loc_688A4E00
align 4
mov	ebx, [ebx+4]
mov	eax, [esi]
test	ebx, ebx
jz	loc_688A4E00
mov	edx, [ebx]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_688A4C64
jmp	loc_688A4AD8	
			
mov	eax, [esi]	
test	eax, eax
jz	loc_688A4AD8	
mov	[esp+6Ch+var_6C], eax
call	purple_find_group
test	eax, eax
jnz	loc_688A4AD8	
mov	eax, [esi]
mov	[esp+6Ch+var_6C], eax
call	purple_group_new
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	purple_blist_add_group
jmp	loc_688A4AD8	
align 4
			
mov	ecx, [esi]	
test	ecx, ecx
jz	loc_688A4AD8	
mov	[esp+6Ch+var_64], 0
movzx	eax, word ptr [esi+4]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_itemlist_find
test	eax, eax
jz	loc_688A4F58
mov	ebx, [eax]
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], edi
call	oscar_utf8_try_convert
mov	[esp+6Ch+var_4C], eax
test	eax, eax
jz	loc_688A49ED
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	purple_find_group
mov	[esp+6Ch+var_34], eax
test	eax, eax
jnz	loc_688A4A41
mov	eax, [esp+6Ch+var_4C]
jmp	loc_688A4A25
align 4
movzx	eax, word ptr [esi+8]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiServerListC 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_warning
mov	esi, [esi+10h]
test	esi, esi
jnz	loc_688A49B0
jmp	loc_688A4AE3
mov	eax, [edi]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiRemovingDen 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_64], 1
mov	eax, [edi]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_privacy_deny_remove
jmp	loc_688A494F
align 4
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], edx
call	oscar_set_aim_permdeny
jmp	loc_688A4AF7
align 10h
and	bh, 0FBh
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], ebp
call	aim_ssi_setpresence
jmp	loc_688A4999
mov	eax, [ebx]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiRemovingPer 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_64], 1
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_privacy_permit_remove
jmp	loc_688A490B
align 10h
			
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiAddingPermi 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_64], 1
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_privacy_permit_add
mov	esi, [esi+10h]
test	esi, esi
jnz	loc_688A49B0
jmp	loc_688A4AE3
align 10h
mov	[esp+6Ch+var_6C], eax
call	purple_timeout_remove
mov	dword ptr [ebp+48h], 0
jmp	loc_688A474B
			
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiAddingDenyB 
mov	[esp+6Ch+var_6C], offset aOscar_13 
call	purple_debug_info
mov	[esp+6Ch+var_64], 1
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_privacy_deny_add
mov	esi, [esi+10h]
test	esi, esi
jnz	loc_688A49B0
jmp	loc_688A4AE3
align 4
mov	[esp+6Ch+var_64], eax
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_buddy_new
mov	ecx, eax
mov	[esp+6Ch+var_60], ebx
mov	eax, [esi]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSsiAddingBud_0 
mov	[esp+6Ch+var_6C], offset aOscar_13 
mov	[esp+6Ch+var_50], ecx
call	purple_debug_info
mov	[esp+6Ch+var_60], 0
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	ecx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_6C], ecx
call	purple_blist_add_buddy
mov	ecx, [esp+6Ch+var_50]
mov	eax, [esi]
cmp	byte ptr [eax],	2Bh
jnz	loc_688A4AB4
lea	esi, [esi+0]
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_50], ecx
call	purple_buddy_get_name
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset aAvailable_0 
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_prpl_got_user_status
mov	ecx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_6C], ecx
call	purple_buddy_get_name
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset aMobile_0 
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_prpl_got_user_status
jmp	loc_688A4AB4
align 4
xor	ebx, ebx
jmp	loc_688A4CF6
call	__stack_chk_fail
public oscar_can_receive_file
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_account
test	esi, esi
jz	short loc_688A4FCC
mov	ebx, eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	aim_locate_finduserinfo
test	eax, eax
jz	short loc_688A4FAB
test	byte ptr [eax+20h], 20h
jz	short loc_688A4FCC
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	oscar_util_name_compare
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_688A4FCE
align 4
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A4FE1
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public oscar_new_xfer
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_account
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_new
mov	ebx, eax
test	eax, eax
jz	short loc_688A50AB
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_ref
mov	[esp+2Ch+var_28], offset peer_oft_sendcb_init
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_init_fnc
mov	[esp+2Ch+var_28], offset peer_oft_cb_generic_cancel
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_cancel_send_fnc
mov	[esp+2Ch+var_28], offset peer_oft_cb_generic_cancel
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_request_denied_fnc
mov	[esp+2Ch+var_28], offset peer_oft_sendcb_ack
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_ack_fnc
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_28], 20h
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_2C], edi
call	peer_connection_new
mov	esi, eax
or	dword ptr [eax+28h], 3
lea	eax, [eax+18h]
mov	[esp+2Ch+var_2C], eax
call	aim_icbm_makecookie
mov	[esi+0A4h], ebx
mov	[ebx+7Ch], esi
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A50C0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public oscar_send_file
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	oscar_new_xfer
test	ebx, ebx
jz	short loc_688A5110
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A5129
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_xfer_request_accepted
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A5129
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_xfer_request
			
call	__stack_chk_fail
align 10h
public oscar_actions
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aSetUserInfo___ 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_68899B9C
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 0
call	g_list_prepend
mov	esi, eax
mov	eax, [ebx+44h]
test	eax, eax
jnz	loc_688A5424
mov	[esp+2Ch+var_28], offset aChangePassword 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_68899B60
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	eax, [ebx+0BCh]
test	eax, eax
jz	short loc_688A5204
mov	eax, [eax+20h]
test	eax, eax
jz	short loc_688A5204
mov	[esp+2Ch+var_28], offset aChangePasswo_0 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset loc_68899AE4
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
			
mov	eax, [ebx+44h]
test	eax, eax
jz	loc_688A53EC
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	eax, [ebx+44h]
test	eax, eax
jnz	loc_688A5364
mov	[esp+2Ch+var_28], offset aConfirmAccount 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_68899568
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aDisplayCurrent 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_688994EC
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aChangeCurrentl 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_688991A8
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_list_prepend
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aShowBuddiesAwa 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_688992D4
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_list_prepend
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aSearchForBuddy 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_6889908C
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_list_prepend
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A545B
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_reverse
align 4
mov	[esp+2Ch+var_28], offset aSetPrivacyOpti 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_688995DC
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aShowVisibleLis 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset oscar_show_visible_list
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_list_prepend
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aShowInvisibleL 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset oscar_show_invisible_list
jmp	loc_688A52AC
align 4
mov	[esp+2Ch+var_28], offset aConfigureImFor 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_68899A6C
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
jmp	loc_688A520F
align 4
mov	[esp+2Ch+var_28], offset aSetUserInfoWeb 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_68899AA8
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
jmp	loc_688A518F
call	__stack_chk_fail
public oscar_change_passwd
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+44h]
test	eax, eax
jnz	short loc_688A54CC
mov	[esp+2Ch+var_28], 7
mov	[esp+2Ch+var_2C], ebx
call	flap_connection_getbytype
test	eax, eax
jz	short loc_688A54EC
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	aim_admin_changepasswd
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A552C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A552C
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	aim_icq_changepasswd
align 4
mov	dword ptr [ebx+28h], 1
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+2Ch], eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+30h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A552C
mov	[esp+2Ch+arg_4], 7
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	aim_srv_requestnew
			
call	__stack_chk_fail
align 4
public oscar_convo_closed
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	[esp+3Ch+var_34], 4
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	peer_connection_find_by_type
test	eax, eax
jz	short loc_688A5592
mov	edx, [eax+24h]
test	edx, edx
jz	short loc_688A55A4
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	peer_connection_destroy
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A55B6
add	esp, 38h
pop	ebx
retn
align 4
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	aim_im_sendch2_cancel
mov	eax, [esp+3Ch+var_20]
jmp	short loc_688A557A
call	__stack_chk_fail
align 4
public oscar_normalize
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	loc_688A56A8
mov	al, [ecx]
test	al, al
jz	loc_688A56C8
inc	ecx
xor	edx, edx
xchg	ax, ax
cmp	al, 20h
jz	short loc_688A55FB
mov	ds:byte_688C1040[edx], al
inc	edx
cmp	edx, 7FEh
jg	short loc_688A5603
inc	ecx
mov	al, [ecx-1]
test	al, al
jnz	short loc_688A55E8
			
mov	ds:byte_688C1040[edx], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], offset byte_688C1040
call	g_utf8_strdown
mov	esi, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	g_utf8_normalize
mov	ebx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 7FFh
ja	short loc_688A5690
mov	[esp+2Ch+var_24], 800h
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], offset byte_688C1040
call	g_strlcpy
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, offset byte_688C1040
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A56CF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_28], offset aNormalizedStri 
mov	[esp+2Ch+var_2C], offset aOscar_13 
call	purple_debug_error
jmp	short loc_688A5650
align 4
mov	[esp+2Ch+var_24], offset aStrNull 
mov	[esp+2Ch+var_28], offset aOscar_normaliz 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_688A567D
xor	edx, edx
jmp	loc_688A5603
call	__stack_chk_fail
public oscar_offline_message
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A56F4
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public oscar_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edx+10h]
mov	edi, [eax+4Ch]
cmp	[esp+5Ch+arg_4], 1
sbb	eax, eax
and	eax, 0FFFFFFFEh
mov	ebx, ds:off_688B53F8[eax*4]
mov	[esp+5Ch+var_58], offset aServer_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aServer 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_string_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
mov	[esp+5Ch+var_58], offset aPort_1 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], 1446h
mov	[esp+5Ch+var_58], offset aPort_0 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_int_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
mov	edx, offset aUseEncryptionI 
xor	ebx, ebx
xor	ebp, ebp
mov	[esp+5Ch+var_5C], 8
mov	[esp+5Ch+var_34], edx
call	g_malloc0
mov	esi, eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esi], eax
mov	eax, ds:off_688B5520[ebx*4]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	g_list_append
mov	ebp, eax
inc	ebx
mov	edx, ds:off_688B5510[ebx*4]
test	edx, edx
jnz	short loc_688A57AE
mov	[esp+5Ch+var_58], offset aConnectionSecu 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aEncryption_0 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_list_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
mov	[esp+5Ch+var_58], offset aUseClientlogin 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], offset aUse_clientlogi 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_bool_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
mov	[esp+5Ch+var_58], offset aAlwaysUseAimIc 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset aAlways_use_rv_ 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_bool_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	purple_plugin_get_id
mov	[esp+5Ch+var_58], offset aPrplAim 
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jnz	loc_688A5974
mov	ecx, ds:dword_688C1840
test	ecx, ecx
jnz	short loc_688A595D
mov	ds:dword_688C1840, 1
mov	[esp+5Ch+var_5C], offset aPluginsPrplO_0 
call	purple_prefs_add_none
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], offset aPluginsPrplOsc 
call	purple_prefs_add_bool
mov	[esp+5Ch+var_5C], offset aPluginsPrplO_1 
call	purple_prefs_remove
mov	[esp+5Ch+var_5C], offset aPluginsPrplO_2 
call	purple_prefs_remove
call	purple_get_core
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset sub_68898C8C
mov	[esp+5Ch+var_54], offset dword_688C1840
mov	[esp+5Ch+var_58], offset aUriHandler 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_connect
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A59B7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_58], offset aAllowMultipleS 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], offset aAllow_multiple 
mov	[esp+5Ch+var_5C], eax
call	purple_account_option_bool_new
mov	[esp+5Ch+var_58], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+8], eax
jmp	loc_688A58E4
call	__stack_chk_fail
public oscar_data_new
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], 0FCh
call	g_malloc0
mov	esi, eax
mov	[esp+3Ch+var_3C], eax
call	aim_initsnachash
mov	dword ptr [esi+0B0h], 1
mov	[esp+3Ch+var_30], offset g_free
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset loc_688ABE00
call	g_hash_table_new_full
mov	[esi+38h], eax
mov	[esp+3Ch+var_30], offset g_free
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset loc_688ABD08
mov	[esp+3Ch+var_3C], offset loc_688ABD10
call	g_hash_table_new_full
mov	[esi+0ECh], eax
mov	[esp+3Ch+var_38], offset misc_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset service_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset locate_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset buddylist_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset msg_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset admin_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset popups_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset bos_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset search_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset stats_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset chatnav_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset chat_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset bart_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset ssi_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset icq_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset auth_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_38], offset email_modfirst
mov	[esp+3Ch+var_3C], esi
call	aim__registermodule
mov	[esp+3Ch+var_3C], offset aRegisteredModu 
call	g_string_new
mov	edi, eax
mov	ebx, [esi+6Ch]
test	ebx, ebx
jz	short loc_688A5BA1
nop
movzx	eax, word ptr [ebx+6]
mov	[esp+3Ch+var_24], eax
movzx	eax, word ptr [ebx+4]
mov	[esp+3Ch+var_28], eax
movzx	eax, word ptr [ebx+2]
mov	[esp+3Ch+var_2C], eax
movzx	eax, word ptr [ebx]
mov	[esp+3Ch+var_30], eax
lea	edx, [ebx+0Ah]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aSFamily0x04xVe 
mov	[esp+3Ch+var_3C], edi
call	g_string_append_printf
mov	ebx, [ebx+28h]
test	ebx, ebx
jnz	short loc_688A5B64
mov	eax, [edi]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aS_0 
mov	[esp+3Ch+var_3C], offset aOscar_14 
call	purple_debug_misc
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], edi
call	g_string_free
mov	eax, esi
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A5BE0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public oscar_data_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	aim_cleansnacs
mov	eax, [ebx]
test	eax, eax
jz	short loc_688A5C19
mov	[esp+2Ch+var_2C], eax
call	purple_util_fetch_url_cancel
mov	eax, [ebx+3Ch]
test	eax, eax
jz	short loc_688A5C40
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	[ebx+3Ch], eax
test	eax, eax
jnz	short loc_688A5C20
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+48h]
test	eax, eax
jz	short loc_688A5C8A
jmp	loc_688A5CFE
align 10h
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	flap_connection_destroy
			
mov	eax, [ebx+0F0h]
test	eax, eax
jnz	short loc_688A5C70
mov	eax, [ebx+0F8h]
test	eax, eax
jz	short loc_688A5CC4
xchg	ax, ax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 1
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	peer_connection_destroy
mov	eax, [ebx+0F8h]
test	eax, eax
jnz	short loc_688A5CA0
mov	[esp+2Ch+var_2C], ebx
call	aim__shutdownmodules
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+0ECh]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A5D08
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	short loc_688A5C8A
call	__stack_chk_fail
align 10h
public oscar_data_addhandler
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ecx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	edx, [esp+4Ch+arg_10]
movzx	ebp, bx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 0Ch
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_34], ecx
call	g_malloc0
mov	[eax], si
mov	[eax+2], bx
mov	edx, [esp+4Ch+var_38]
mov	[eax+8], dx
mov	edx, [esp+4Ch+var_30]
mov	[eax+4], edx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
mov	ecx, [esp+4Ch+var_34]
jnz	short loc_688A5D9C
mov	edi, esi
mov	[esp+4Ch+arg_8], eax
shl	edi, 10h
add	edi, ebp
mov	[esp+4Ch+arg_4], edi
mov	eax, [ecx+0ECh]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_insert
call	__stack_chk_fail
align 4
public aim_callhandler
			
sub	esp, 2Ch
movzx	eax, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_4]
shl	edx, 10h
add	eax, edx
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+0ECh]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_688A5DEE
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A5DF2
add	esp, 2Ch
retn
xor	eax, eax
jmp	short loc_688A5DDE
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, [ebx+8]
mov	eax, [ebx+0Ch]
mov	ecx, edx
xor	ecx, 4
or	ecx, eax
jz	loc_688A5F68
xor	edx, 20h
or	edx, eax
jz	loc_688A5F78
			
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_688A5E3D
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+44h], 0
mov	eax, [ebx+40h]
test	eax, eax
jz	short loc_688A5E53
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+40h], 0
mov	eax, [ebx+48h]
test	eax, eax
jz	short loc_688A5E69
mov	[esp+2Ch+var_2C], eax
call	purple_network_listen_cancel
mov	dword ptr [ebx+48h], 0
mov	eax, [ebx+4Ch]
test	eax, eax
jnz	loc_688A5F14
mov	eax, [ebx+84h]
test	eax, eax
jnz	loc_688A5F31
mov	eax, [ebx+88h]
test	eax, eax
jnz	loc_688A5F51
			
mov	eax, [ebx+50h]
test	eax, eax
js	short loc_688A5EA6
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	dword ptr [ebx+50h], 0FFFFFFFFh
mov	eax, [ebx+54h]
test	eax, eax
js	short loc_688A5EBC
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	dword ptr [ebx+54h], 0FFFFFFFFh
mov	eax, [ebx+74h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+74h], 0
mov	dword ptr [ebx+78h], 0
mov	dword ptr [ebx+7Ch], 0
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
mov	[esp+2Ch+var_2C], 0
call	purple_circ_buffer_new
mov	[ebx+80h], eax
and	dword ptr [ebx+28h], 0FFFFFFDFh
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A5F85
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+4Ch], 0
mov	eax, [ebx+84h]
test	eax, eax
jz	loc_688A5E82
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+84h], 0
mov	eax, [ebx+88h]
test	eax, eax
jz	loc_688A5E90
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+88h], 0
jmp	loc_688A5E90
mov	[esp+2Ch+var_2C], ebx
call	peer_odc_close
jmp	loc_688A5E27
align 4
mov	[esp+2Ch+var_2C], ebx
call	peer_oft_close
jmp	loc_688A5E27
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_request_close_with_handle
mov	eax, ebx
call	sub_688A5DF8
mov	eax, [ebx+0A0h]
test	eax, eax
jz	short loc_688A5FC1
mov	[esp+2Ch+var_2C], eax
call	peer_oft_checksum_destroy
mov	eax, [ebx+0A4h]
test	eax, eax
jz	short loc_688A5FFE
mov	dword ptr [eax+7Ch], 0
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_get_status
sub	eax, 4
cmp	eax, 2
ja	loc_688A6090
			
mov	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_unref
mov	dword ptr [ebx+0A4h], 0
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+90h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+94h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+164h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
mov	esi, [ebx]
mov	[esp+2Ch+var_28], ebx
mov	eax, [esi+0F8h]
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[esi+0F8h], eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A60BA
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [ebx+34h]
sub	eax, 2
cmp	eax, 1
mov	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
jbe	short loc_688A60B0
call	purple_xfer_cancel_local
jmp	loc_688A5FE6
align 10h
call	purple_xfer_cancel_remote
jmp	loc_688A5FE6
call	__stack_chk_fail
align 10h
public peer_connection_find_by_type
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [eax+0F8h]
test	ebx, ebx
jnz	short loc_688A60FB
jmp	short loc_688A613C
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_688A613C
mov	esi, [ebx]
mov	ecx, [esi+0Ch]
xor	ecx, ebp
mov	eax, [esi+8]
xor	eax, edi
or	ecx, eax
jnz	short loc_688A60F4
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	eax, [esi+10h]
mov	[esp+4Ch+var_4C], eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_688A60F4
xchg	ax, ax
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A6140
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	esi, esi
jmp	short loc_688A6124
call	__stack_chk_fail
align 4
public peer_connection_find_by_cookie
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [eax+0F8h]
test	ebx, ebx
jnz	short loc_688A617B
jmp	short loc_688A61C4
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_688A61C4
mov	esi, [ebx]
mov	[esp+3Ch+Size],	8 
mov	[esp+3Ch+Buf2],	edi 
lea	eax, [esi+18h]
mov	[esp+3Ch+Buf1],	eax 
call	memcmp
test	eax, eax
jnz	short loc_688A6174
mov	[esp+3Ch+Buf2],	ebp
mov	eax, [esi+10h]
mov	[esp+3Ch+Buf1],	eax
call	oscar_util_name_compare
test	eax, eax
jnz	short loc_688A6174
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A61C8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	esi, esi
jmp	short loc_688A61AB
call	__stack_chk_fail
align 10h
public peer_connection_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+68h]
mov	[esp+4Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+4Ch+Time],	170h
mov	[esp+4Ch+var_34], eax
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[eax+8], edi
mov	edx, [esp+4Ch+var_30]
mov	[eax+0Ch], edx
mov	[esp+4Ch+Time],	ebp
call	g_strdup
mov	[ebx+10h], eax
mov	[esp+4Ch+Time],	0
call	purple_circ_buffer_new
mov	[ebx+80h], eax
mov	dword ptr [ebx+50h], 0FFFFFFFFh
mov	dword ptr [ebx+54h], 0FFFFFFFFh
mov	[esp+4Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
mov	ebp, [ebx+9Ch]
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aAlways_use_r_0 
mov	ecx, [esp+4Ch+var_34]
mov	[esp+4Ch+Time],	ecx
call	purple_account_get_bool
or	eax, ebp
mov	[ebx+9Ch], eax
mov	eax, edi
xor	eax, 4
or	eax, [esp+4Ch+var_30]
jz	short loc_688A62D4
xor	edi, 20h
or	edi, [esp+4Ch+var_30]
jz	short loc_688A62C8
			
mov	[esp+4Ch+var_48], ebx
mov	eax, [esi+0F8h]
mov	[esp+4Ch+Time],	eax
call	g_slist_prepend
mov	[esi+0F8h], eax
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A62DD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword ptr [ebx+14h], 3254464Fh
jmp	short loc_688A6297
align 4
mov	dword ptr [ebx+14h], 3243444Fh
jmp	short loc_688A6297
call	__stack_chk_fail
align 4
public peer_connection_destroy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+30h]
test	eax, eax
jz	short loc_688A6310
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	[ebx+34h], edi
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+38h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A6344
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_688A5F8C
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 1
lea	eax, [ebx+18h]
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	aim_im_denytransfer
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	peer_connection_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A63A8
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public peer_connection_recv_cb
			
push	esi
push	ebx
sub	esp, 44h
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+74h]
test	eax, eax
jz	loc_688A64F0
mov	ecx, [ebx+7Ch]
mov	[esp+4Ch+var_40], 0
mov	edx, [ebx+78h]
sub	edx, ecx
mov	[esp+4Ch+Size],	edx
add	eax, ecx
mov	[esp+4Ch+Buf2],	eax
mov	eax, [ebx+54h]
mov	[esp+4Ch+Time],	eax
call	wpurple_recv
mov	esi, eax
cmp	eax, 0
jz	short loc_688A6478
jl	short loc_688A6434
mov	[esp+4Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
add	esi, [ebx+7Ch]
mov	[ebx+7Ch], esi
cmp	esi, [ebx+78h]
jnb	loc_688A64A8
			
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A6631
add	esp, 44h
pop	ebx
pop	esi
retn
align 4
			
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_688A641B
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_688A641B
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+Time],	eax
call	wpurple_strerror
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A6631
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], 4
jmp	short loc_688A6498
			
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A6631
mov	[esp+4Ch+arg_8], 0
mov	[esp+4Ch+arg_4], 2
			
mov	[esp+4Ch+arg_0], ebx
add	esp, 44h
pop	ebx
pop	esi
jmp	peer_connection_destroy
align 4
lea	esi, [ebx+74h]
mov	[esp+4Ch+Time],	esi
call	sub_688818CC
mov	edx, [ebx+8]
mov	eax, [ebx+0Ch]
mov	ecx, edx
xor	ecx, 4
or	ecx, eax
jz	loc_688A660C
xor	edx, 20h
or	edx, eax
jz	loc_688A6620
			
mov	eax, [ebx+74h]
mov	[esp+4Ch+Time],	eax
call	g_free
mov	dword ptr [ebx+74h], 0
mov	dword ptr [ebx+60h], 0
jmp	loc_688A641B
align 10h
mov	edx, [ebx+60h]
mov	[esp+4Ch+var_40], 0
mov	eax, 6
sub	eax, edx
mov	[esp+4Ch+Size],	eax
lea	eax, [ebx+edx+58h]
mov	[esp+4Ch+Buf2],	eax
mov	eax, [ebx+54h]
mov	[esp+4Ch+Time],	eax
call	wpurple_recv
mov	esi, eax
cmp	eax, 0
jz	loc_688A6478
jl	loc_688A6434
mov	[esp+4Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
add	esi, [ebx+60h]
mov	[ebx+60h], esi
cmp	esi, 5
jle	loc_688A641B
mov	[esp+4Ch+Size],	4 
lea	eax, [ebx+58h]
mov	[esp+4Ch+Buf2],	eax 
lea	eax, [ebx+14h]
mov	[esp+4Ch+Time],	eax 
call	memcmp
test	eax, eax
jnz	short loc_688A6594
movzx	edx, byte ptr [ebx+5Dh]
movzx	eax, byte ptr [ebx+5Ch]
shl	eax, 8
lea	eax, [edx+eax-6]
mov	[ebx+78h], eax
mov	[esp+4Ch+Time],	eax
call	g_malloc
mov	[ebx+74h], eax
mov	dword ptr [ebx+7Ch], 0
xor	ecx, ecx
jmp	loc_688A63D2
align 4
movzx	eax, byte ptr [ebx+5Bh]
mov	[esp+4Ch+var_28], eax
movzx	eax, byte ptr [ebx+5Ah]
mov	[esp+4Ch+var_2C], eax
movzx	eax, byte ptr [ebx+59h]
mov	[esp+4Ch+var_30], eax
movzx	eax, byte ptr [ebx+58h]
mov	[esp+4Ch+var_34], eax
movzx	eax, byte ptr [ebx+17h]
mov	[esp+4Ch+var_38], eax
movzx	eax, byte ptr [ebx+16h]
mov	[esp+4Ch+var_3C], eax
movzx	eax, byte ptr [ebx+15h]
mov	[esp+4Ch+var_40], eax
movzx	eax, byte ptr [ebx+14h]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aExpectingMagic 
mov	[esp+4Ch+Time],	offset aOscar_15 
call	purple_debug_warning
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A6631
mov	[esp+4Ch+arg_8], 0
mov	[esp+4Ch+arg_4], 5
jmp	loc_688A6498
align 4
mov	[esp+4Ch+Buf2],	esi
mov	[esp+4Ch+Time],	ebx
call	peer_odc_recv_frame
jmp	loc_688A64D1
align 10h
mov	[esp+4Ch+Buf2],	esi
mov	[esp+4Ch+Time],	ebx
call	peer_oft_recv_frame
jmp	loc_688A64D1
			
call	__stack_chk_fail
align 4
public peer_connection_schedule_destroy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+30h]
test	eax, eax
jnz	short loc_688A66A4
mov	[esp+2Ch+var_28], offset aSchedulingDe_0 
mov	[esp+2Ch+var_2C], offset aOscar_15 
call	purple_debug_info
mov	[ebx+34h], edi
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+38h], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset loc_688A5F8C
mov	[esp+2Ch+var_2C], 0
call	purple_timeout_add
mov	[ebx+30h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A66B7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public peer_connection_finalize_connection
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset peer_connection_recv_cb
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx+54h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[ebx+84h], eax
mov	edx, [ebx+8]
mov	eax, [ebx+0Ch]
mov	ecx, edx
xor	ecx, 4
or	ecx, eax
jz	short loc_688A6740
xor	edx, 20h
or	edx, eax
jz	short loc_688A6750
			
test	byte ptr [ebx+28h], 20h
jz	short loc_688A6724
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A676B
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A676B
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	aim_im_sendch2_connected
align 10h
test	byte ptr [ebx+28h], 20h
jnz	short loc_688A6710
mov	[esp+2Ch+var_2C], ebx
call	peer_odc_send_cookie
jmp	short loc_688A670A
mov	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_get_type
dec	eax
jnz	short loc_688A670A
mov	[esp+2Ch+var_2C], ebx
call	peer_oft_send_prompt
jmp	short loc_688A670A
			
call	__stack_chk_fail
public peer_connection_trynext
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx]
mov	eax, [eax+68h]
mov	[esp+4Ch+Str1],	eax
call	purple_connection_get_account
mov	esi, eax
mov	eax, ebx
call	sub_688A5DF8
mov	edx, [ebx+28h]
test	dl, 4
jnz	loc_688A6880
mov	edi, [ebx+94h]
test	edi, edi
jz	loc_688A6880
movzx	ebp, word ptr [ebx+98h]
test	bp, bp
jz	loc_688A6880
mov	eax, [ebx+9Ch]
test	eax, eax
jnz	loc_688A6880
or	edx, 4
mov	[ebx+28h], edx
mov	eax, [ebx+8]
xor	eax, 4
or	eax, [ebx+0Ch]
jz	loc_688A6A30
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], offset sub_688A6EB0
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	0
call	purple_proxy_connect
mov	edi, eax
mov	[ebx+44h], eax
mov	eax, [ebx+94h]
mov	ebp, [ebx+90h]
test	eax, eax
jz	loc_688A69EC
mov	[esp+4Ch+Str2],	ebp 
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_688A69EC
test	edi, edi
jz	short loc_688A6874
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+Str2],	offset sub_688A6D8C
mov	[esp+4Ch+Str1],	5
call	purple_timeout_add_seconds
mov	[ebx+4Ch], eax
lea	esi, [esi+0]
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A6AB5
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebp, [ebx+40h]
test	ebp, ebp
jnz	short loc_688A683E
mov	edx, [ebx+28h]
xchg	ax, ax
			
test	dl, 8
jz	loc_688A6914
			
test	dl, 10h
jnz	short loc_688A68F6
mov	eax, edx
or	eax, 10h
mov	[ebx+28h], eax
mov	ecx, [ebx+9Ch]
test	ecx, ecx
jnz	short loc_688A68A6
or	edx, 30h
mov	[ebx+28h], edx
mov	edx, [ebx+8]
xor	edx, 4
or	edx, [ebx+0Ch]
jz	loc_688A697C
mov	eax, [ebx+8Ch]
test	eax, eax
jz	loc_688A6964
			
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], offset peer_proxy_connection_established_cb
mov	[esp+4Ch+var_40], 1446h
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	0
call	purple_proxy_connect
mov	[ebx+44h], eax
test	eax, eax
jnz	loc_688A685C
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Str2],	6
mov	[esp+4Ch+Str1],	ebx
call	peer_connection_destroy
jmp	loc_688A685C
align 4
mov	edi, [ebx+9Ch]
test	edi, edi
jnz	loc_688A6889
or	edx, 28h
mov	[ebx+28h], edx
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_40], offset sub_688A6AF0
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+Str2],	14AAh
mov	[esp+4Ch+Str1],	1446h
call	purple_network_listen_range
mov	[ebx+48h], eax
test	eax, eax
jnz	loc_688A685C
mov	edx, [ebx+28h]
jmp	loc_688A6889
align 4
mov	eax, [ebx]
mov	edx, [eax+44h]
test	edx, edx
jz	loc_688A6A24
mov	eax, offset aArs_icq_com 
jmp	loc_688A68C3
align 4
mov	[esp+4Ch+Str2],	offset aAttemptingToCo 
mov	[esp+4Ch+Str1],	offset aPidgin_7 
call	libintl_dgettext
mov	[esp+4Ch+Str1],	eax
call	g_strdup
mov	edi, eax
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	1
call	purple_conversation_new
mov	ebp, eax
mov	[esp+4Ch+Str1],	0 
call	time
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 4
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+Str2],	0
mov	[esp+4Ch+Str1],	ebp
call	purple_conversation_write
mov	[esp+4Ch+Str1],	edi
call	g_free
jmp	loc_688A68B5
			
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], offset sub_688A6E7C
movzx	eax, word ptr [ebx+98h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	0
call	purple_proxy_connect
mov	[ebx+40h], eax
mov	edi, [ebx+44h]
jmp	loc_688A683A
align 4
mov	eax, offset aArs_oscar_aol_ 
jmp	loc_688A68C3
align 10h
mov	[esp+4Ch+Str2],	offset aAttemptingTo_0 
mov	[esp+4Ch+Str1],	offset aPidgin_7 
call	libintl_dgettext
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Str2],	edi
mov	[esp+4Ch+Str1],	eax
call	g_strdup_printf
mov	edi, eax
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	1
call	purple_conversation_new
mov	ebp, eax
mov	[esp+4Ch+Str1],	0 
call	time
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 4
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+Str2],	0
mov	[esp+4Ch+Str1],	ebp
call	purple_conversation_write
mov	[esp+4Ch+Str1],	edi
call	g_free
movzx	ebp, word ptr [ebx+98h]
mov	edi, [ebx+94h]
jmp	loc_688A67E9
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
or	dword ptr [eax+28h], 2
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A6AEB
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	peer_connection_trynext
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	dword ptr [ebx+48h], 0
test	esi, esi
js	loc_688A6C2C
mov	edi, [ebx]
mov	eax, [edi+68h]
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+6Ch+var_30], eax
mov	[ebx+50h], esi
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], offset peer_connection_listen_cb
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+Time],	esi
call	purple_input_add
mov	[ebx+84h], eax
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+Time],	edi
call	flap_connection_findbygroup
mov	esi, eax
test	eax, eax
jz	loc_688A6C2C
mov	eax, [eax+30h]
test	eax, eax
jz	loc_688A6C48
mov	eax, [eax+1Ch]
mov	[esp+6Ch+Time],	eax
call	purple_network_get_my_ip
mov	ebp, eax
mov	[esp+6Ch+Time],	ebp
call	purple_network_ip_atoi
mov	edx, eax
test	eax, eax
jz	short loc_688A6BDC
mov	eax, [ebx+50h]
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_38], edx
call	purple_network_get_port_from_fd
mov	ecx, [ebx+8]
mov	[esp+6Ch+var_3C], ecx
mov	esi, [ebx+0Ch]
xor	ecx, 4
or	ecx, esi
mov	edx, [esp+6Ch+var_38]
jz	loc_688A6CB0
mov	ecx, [esp+6Ch+var_3C]
xor	ecx, 20h
or	ecx, esi
jz	loc_688A6C5C
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A6C26
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esi+30h]
test	edx, edx
setnz	al
movzx	ecx, al
test	al, al
jz	loc_688A6D78
mov	eax, [edx+1Ch]
test	ebp, ebp
jz	loc_688A6D80
mov	[esp+6Ch+var_5C], ecx
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aCanTAskPeerToC 
mov	[esp+6Ch+Time],	offset aOscar_15 
call	purple_debug_error
mov	esi, [esp+6Ch+var_20]
xor	esi, ds:__stack_chk_guard
jz	short loc_688A6C38
			
call	__stack_chk_fail
align 4
			
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_688A6C26
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	peer_connection_trynext
mov	eax, [esi+2Ch]
mov	[esp+6Ch+Time],	eax
call	purple_network_get_my_ip
mov	ebp, eax
jmp	loc_688A6B81
align 4
movzx	ebp, word ptr [ebx+0B6h]
mov	esi, [ebx+0C4h]
mov	ecx, [ebx+20h]
inc	ecx
mov	[ebx+20h], cx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], esi
mov	esi, [ebx+164h]
mov	[esp+6Ch+var_54], esi
movzx	ecx, cx
mov	[esp+6Ch+var_58], ecx
movzx	eax, ax
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], edx
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_64], eax
add	ebx, 18h
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	edi
call	aim_im_sendch2_sendfile_requestdirect
jmp	loc_688A6BC6
mov	ecx, [ebx+20h]
inc	ecx
mov	[ebx+20h], cx
movzx	esi, ax
movzx	ecx, cx
mov	[esp+6Ch+var_58], ecx
mov	[esp+6Ch+var_5C], esi
mov	[esp+6Ch+var_60], edx
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_64], eax
lea	eax, [ebx+18h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	edi
call	aim_im_sendch2_odc_requestdirect
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	1
call	purple_conversation_new
mov	edi, eax
mov	ebx, [ebx+10h]
mov	[esp+6Ch+var_68], offset aAskingSToConne 
mov	[esp+6Ch+Time],	offset aPidgin_7 
call	libintl_dgettext
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+6Ch+Time],	0 
call	time
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+Time],	edi
call	purple_conversation_write
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_688A6C26
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	eax, [esi+2Ch]
jmp	loc_688A6BF2
mov	ebp, offset aNull_1 
jmp	loc_688A6BFA
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aPeerConnection 
mov	[esp+2Ch+var_2C], offset aOscar_15 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	peer_connection_trynext
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A6DCE
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_688A6E54
mov	dword ptr [ebx+44h], 0
test	esi, esi
js	short loc_688A6E5F
mov	eax, [ebx+4Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+4Ch], 0
mov	eax, [ebx+40h]
test	eax, eax
jz	short loc_688A6E1F
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+40h], 0
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_688A6E35
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+44h], 0
mov	[ebx+54h], esi
mov	[esp+2Ch+var_2C], ebx
call	peer_connection_finalize_connection
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A6E77
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [ebx+40h], 0
test	esi, esi
jns	short loc_688A6DF7
mov	eax, [ebx+44h]
test	eax, eax
jnz	short loc_688A6E40
mov	eax, [ebx+40h]
test	eax, eax
jnz	short loc_688A6E40
mov	[esp+2Ch+var_2C], ebx
call	peer_connection_trynext
jmp	short loc_688A6E40
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_688A6EA9
xor	ecx, ecx
add	esp, 1Ch
jmp	loc_688A6DD4
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_688A6EE0
mov	ecx, 1
add	esp, 1Ch
jmp	loc_688A6DD4
call	__stack_chk_fail
align 4
public peer_connection_listen_cb
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_24], 10h
mov	[esp+3Ch+addr],	offset aAcceptingConne 
mov	[esp+3Ch+s], offset aOscar_15 
call	purple_debug_info
lea	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+addrlen], eax 
lea	eax, [esp+3Ch+var_20]
mov	[esp+3Ch+addr],	eax 
mov	eax, [ebx+50h]
mov	[esp+3Ch+s], eax 
call	accept
sub	esp, 0Ch
mov	[ebx+54h], eax
test	eax, eax
js	short loc_688A6F88
mov	edx, dword ptr [esp+3Ch+var_20.sa_family]
mov	[esp+3Ch+s], eax
cmp	dx, 2
jz	short loc_688A6F68
cmp	dx, 17h
jz	short loc_688A6F68
call	wpurple_close
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A6FA9
add	esp, 38h
pop	ebx
retn
align 4
			
call	_purple_network_set_common_socket_flags
mov	eax, [ebx+84h]
mov	[esp+3Ch+s], eax
call	purple_input_remove
mov	[esp+3Ch+s], ebx
call	peer_connection_finalize_connection
jmp	short loc_688A6F54
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_688A6F54
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_688A6F54
mov	[esp+3Ch+s], ebx
call	peer_connection_trynext
jmp	short loc_688A6F54
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+Time],	eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	loc_688A70A0
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+80h]
mov	eax, [eax+14h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+54h]
mov	[esp+2Ch+Time],	eax
call	wpurple_send
cmp	eax, 0
jle	short loc_688A7038
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+Time],	eax
call	purple_circ_buffer_mark_read
mov	[esp+2Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A710C
add	esp, 28h
pop	ebx
retn
jnz	loc_688A70E8
mov	eax, [ebx+24h]
test	eax, eax
jz	loc_688A70CC
mov	eax, [ebx+88h]
mov	[esp+2Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+88h], 0
mov	eax, [ebx+54h]
mov	[esp+2Ch+Time],	eax
call	wpurple_close
mov	dword ptr [ebx+54h], 0FFFFFFFFh
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A710C
mov	[esp+2Ch+arg_8], 0
mov	[esp+2Ch+arg_4], 4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	peer_connection_schedule_destroy
mov	eax, [ebx+88h]
mov	[esp+2Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+88h], 0
mov	eax, [ebx+80h]
mov	edx, [eax]
mov	[eax+10h], edx
mov	[eax+14h], edx
jmp	loc_688A7023
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A710C
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	peer_connection_trynext
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_688A7023
call	_errno
cmp	dword ptr [eax], 2733h
jnz	loc_688A703E
jmp	loc_688A7023
			
call	__stack_chk_fail
align 4
public peer_connection_send
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_24], edx
mov	eax, [eax]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_append
mov	eax, [ebx+88h]
test	eax, eax
jnz	short loc_688A7191
mov	eax, [ebx+54h]
test	eax, eax
js	short loc_688A7191
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_688A6FB0
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[ebx+88h], eax
mov	[esp+2Ch+var_24], 0
mov	eax, [ebx+54h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_688A6FB0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A71A2
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public peer_connection_propose
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, esi
xor	eax, 4
or	eax, ebx
jz	short loc_688A7218
			
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_3C], ebp
call	peer_connection_new
mov	ebx, eax
or	dword ptr [eax+28h], 3
lea	eax, [eax+18h]
mov	[esp+3Ch+var_3C], eax
call	aim_icbm_makecookie
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A72CC
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	peer_connection_trynext
mov	[esp+3Ch+var_34], 4
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	peer_connection_find_by_type
test	eax, eax
jz	short loc_688A71D3
mov	edx, [eax+24h]
test	edx, edx
jz	short loc_688A7298
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aAlreadyHaveADi 
mov	[esp+3Ch+var_3C], offset aOscar_15 
call	purple_debug_info
mov	eax, [ebp+68h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_688A72B8
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A72CC
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_conversation_present
align 4
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], eax
call	peer_connection_destroy
jmp	loc_688A71D3
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A72CC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public peer_connection_got_proposition
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_3C], edx
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_30], edx
mov	ebx, [esp+8Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+68h]
mov	[esp+8Ch+Str], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_34], eax
lea	edi, [ebx+2]
mov	[esp+8Ch+var_84], edi 
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_88], edx 
mov	[esp+8Ch+Str], ebp 
call	peer_connection_find_by_cookie
mov	esi, eax
mov	ecx, [ebx+10h]
mov	eax, [ebx+14h]
test	esi, esi
jz	short loc_688A7354
mov	edx, [esi+0Ch]
xor	edx, eax
mov	[esp+8Ch+var_38], edx
mov	edx, [esi+8]
xor	edx, ecx
or	edx, [esp+8Ch+var_38]
jz	loc_688A7650
mov	edx, ecx
xor	edx, 4
or	edx, eax
jz	loc_688A75E4
mov	edx, ecx
xor	edx, 20h
or	edx, eax
jz	loc_688A7410
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_80], edx
mov	[esp+8Ch+var_88], ecx
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Str], ebp
call	peer_connection_new
mov	esi, eax
mov	eax, [ebx+2]
mov	[esi+18h], eax
mov	eax, [edi+4]
mov	[esi+1Ch], eax
mov	edi, [ebx+28h]
test	edi, edi
jnz	loc_688A7468
mov	eax, [ebx+1Ch]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+90h], eax
mov	eax, [ebx+20h]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+94h], eax
mov	eax, [ebx+24h]
mov	[esi+98h], ax
mov	eax, [ebx+28h]
or	[esi+9Ch], eax
inc	word ptr [esi+20h]
mov	edx, [ebx+10h]
mov	eax, [ebx+14h]
mov	ecx, edx
xor	ecx, 4
or	ecx, eax
jz	loc_688A7700
xor	edx, 20h
or	edx, eax
jz	loc_688A7480
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A7863
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	esi, [ebx+4Ch]
test	esi, esi
jz	short loc_688A7429
mov	edx, [ebx+48h]
test	edx, edx
jz	short loc_688A7429
cmp	word ptr [ebx+46h], 0
jnz	loc_688A736E
			
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A7863
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+arg_8], edx
mov	[esp+8Ch+arg_4], offset	aSTriedToSend_0	
mov	[esp+8Ch+arg_0], offset	aOscar_15 
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_warning
align 4
mov	eax, [ebx+18h]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+8Ch], eax
jmp	loc_688A739F
align 10h
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], 2
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+Str], eax
call	purple_xfer_new
mov	[esi+0A4h], eax
test	eax, eax
jz	loc_688A73F6
mov	[eax+7Ch], esi
mov	[esp+8Ch+Str], eax
call	purple_xfer_ref
mov	eax, [ebx+48h]
mov	[esp+8Ch+var_88], eax
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_size
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	eax, [ebx+4Ch]
mov	[esp+8Ch+Str], eax
call	g_utf8_validate
test	eax, eax
mov	eax, [ebx+4Ch]
mov	[esp+8Ch+Str], eax
jnz	loc_688A77DC
call	purple_utf8_salvage
mov	edi, eax
cmp	word ptr [ebx+44h], 2
jz	loc_688A7800
			
mov	[esp+8Ch+var_88], edi
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_filename
mov	[esp+8Ch+Str], edi
call	g_free
mov	ecx, [esp+8Ch+var_30]
test	ecx, ecx
jz	short loc_688A754B
mov	[esp+8Ch+var_84], 0Dh
mov	[esp+8Ch+var_88], offset aIcq_cool_ft 
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+Str], edx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_688A782C
			
mov	[esp+8Ch+var_88], offset peer_oft_recvcb_init
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_init_fnc
mov	[esp+8Ch+var_88], offset peer_oft_recvcb_end
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_end_fnc
mov	[esp+8Ch+var_88], offset peer_oft_cb_generic_cancel
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_request_denied_fnc
mov	[esp+8Ch+var_88], offset peer_oft_cb_generic_cancel
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_cancel_recv_fnc
mov	[esp+8Ch+var_88], offset peer_oft_recvcb_ack_recv
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_ack_fnc
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A7863
mov	eax, [esi+0A4h]
mov	[esp+8Ch+arg_0], eax
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_request
align 4
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+var_80], 0
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+Str], ebp
call	peer_connection_find_by_type
test	eax, eax
jz	short loc_688A7644
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], offset aReceivedNewDir 
mov	[esp+8Ch+Str], offset aOscar_15	
mov	[esp+8Ch+var_40], eax
call	purple_debug_info
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 2
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+Str], eax
call	peer_connection_destroy
mov	ecx, [ebx+10h]
mov	eax, [ebx+14h]
jmp	loc_688A7361
align 10h
mov	[esp+8Ch+var_88], offset aRemoteUserWant 
mov	[esp+8Ch+Str], offset aOscar_15	
call	purple_debug_info
mov	eax, [esi+8Ch]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esi+90h]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esi+94h]
mov	[esp+8Ch+Str], eax
call	g_free
mov	edi, [ebx+28h]
test	edi, edi
jnz	loc_688A77E8
mov	dword ptr [esi+8Ch], 0
mov	eax, [ebx+20h]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+94h], eax
mov	eax, [ebx+1Ch]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+90h], eax
mov	eax, [ebx+24h]
mov	[esi+98h], ax
mov	eax, [ebx+28h]
or	[esi+9Ch], eax
inc	word ptr [esi+20h]
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A7863
mov	[esp+8Ch+arg_0], esi
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	peer_connection_trynext
align 10h
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+Str], eax
call	purple_account_get_username
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aSHasJustAskedT 
mov	[esp+8Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+8Ch+var_84], ebx
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+Str], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aCancel_0 
mov	[esp+8Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	ebp, eax
mov	[esp+8Ch+var_88], offset aC_onnect_0 
mov	[esp+8Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	edi, eax
mov	[esp+8Ch+var_88], offset aThisRequiresAD 
mov	[esp+8Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+8Ch+var_58], offset sub_688A634C
mov	[esp+8Ch+var_5C], ebp
mov	[esp+8Ch+var_60], offset sub_688A6ABC
mov	[esp+8Ch+var_64], edi
mov	[esp+8Ch+var_68], 2
mov	[esp+8Ch+var_6C], esi
mov	[esp+8Ch+var_70], 0
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_74], edx
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_78], edx
mov	[esp+8Ch+var_7C], 0FFFFFFFFh
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+Str], esi
call	purple_request_action
jmp	loc_688A73F6
align 4
call	g_strdup
mov	edi, eax
jmp	loc_688A74FA
mov	eax, [ebx+18h]
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	[esi+8Ch], eax
jmp	loc_688A76A3
align 10h
mov	[esp+8Ch+var_88], 5Ch 
mov	[esp+8Ch+Str], edi 
call	strrchr
test	eax, eax
jz	loc_688A7505
cmp	byte ptr [eax+1], 2Ah
jnz	loc_688A7505
mov	byte ptr [eax],	0
jmp	loc_688A7505
align 4
mov	[esp+8Ch+var_88], offset aHtml_1 
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+Str], edx
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_688A754B
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_88], edx
mov	eax, [esi+0A4h]
mov	[esp+8Ch+Str], eax
call	purple_xfer_set_message
jmp	loc_688A754B
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [edx+10h]
mov	[esp+4Ch+var_38], eax
movzx	eax, word ptr [edx+8]
mov	[esp+4Ch+var_3C], eax
mov	eax, [edx+4]
mov	[esp+4Ch+var_40], eax
movzx	eax, word ptr [edx+2]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aOutgoingPeerPr 
mov	[esp+4Ch+var_4C], offset aOscar_16 
call	purple_debug_info
mov	edi, [ebx+10h]
add	edi, 0Ch
mov	[esp+4Ch+var_48], edi
lea	esi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], esi
call	sub_68881748
sub	edi, 2
movzx	edi, di
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	[esp+4Ch+var_48], 44Ah
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
movzx	eax, word ptr [ebx+2]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	sub_68881E8C
movzx	eax, word ptr [ebx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	sub_68881E0C
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	sub_688820A0
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebp
call	peer_connection_send
mov	[esp+4Ch+var_4C], esi
call	sub_688817E4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A7955
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+3Ch]
test	ebp, ebp
jz	loc_688A7B54
mov	ecx, [ebp+10h]
mov	eax, [ebp+14h]
cmp	eax, ecx
jz	short loc_688A79B9
mov	[esp+6Ch+var_60], 0
sub	ecx, eax
mov	[esp+6Ch+var_64], ecx
add	eax, [ebp+0Ch]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx+54h]
mov	[esp+6Ch+Time],	eax
call	wpurple_recv
cmp	eax, 0
jz	loc_688A7B18
jl	loc_688A7A84
add	[ebp+14h], eax
mov	[esp+6Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
mov	eax, [ebp+10h]
cmp	[ebp+14h], eax
jnb	short loc_688A79E8
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A7E1C
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	dword ptr [ebx+3Ch], 0
lea	esi, [ebp+0Ch]
mov	[esp+6Ch+Time],	esi
call	sub_688818CC
mov	eax, [ebp+10h]
mov	[esp+6Ch+var_58], eax
movzx	eax, word ptr [ebp+8]
mov	[esp+6Ch+var_5C], eax
mov	eax, [ebp+4]
mov	[esp+6Ch+var_60], eax
movzx	eax, word ptr [ebp+2]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aIncomingPeerPr 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_info
movzx	eax, word ptr [ebp+2]
cmp	ax, 3
jz	loc_688A7C50
cmp	ax, 5
jz	loc_688A7CF4
cmp	ax, 1
jz	short loc_688A7AB0
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aUnknownPeerPro 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_warning
			
mov	eax, [ebp+0Ch]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	dword ptr [ebx+70h], 0
jmp	loc_688A79D0
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_688A79D0
call	_errno
cmp	dword ptr [eax], 2733h
jz	loc_688A79D0
mov	[esp+6Ch+var_68], offset aLostConnecti_1 
jmp	short loc_688A7B20
align 10h
mov	[esp+6Ch+Time],	esi
call	sub_68881818
cmp	eax, 1
jbe	loc_688A7BF4
mov	[esp+6Ch+Time],	esi
call	sub_688819F0
cmp	ax, 0Dh
jz	loc_688A7D40
cmp	ax, 10h
jz	loc_688A7D4A
cmp	ax, 1Ah
jz	loc_688A7DC5
mov	ecx, offset aUnknownReason 
			
mov	[esp+6Ch+var_60], ecx
movzx	eax, ax
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aProxyNegotiati 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_info
mov	[esp+6Ch+Time],	ebx
call	peer_connection_trynext
jmp	loc_688A7A62
mov	[esp+6Ch+var_68], offset aPeerProxyServe 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_info
mov	eax, [ebp+0Ch]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	dword ptr [ebx+3Ch], 0
mov	[esp+6Ch+Time],	ebx
call	peer_connection_trynext
jmp	loc_688A79D0
align 4
mov	edx, [ebx+70h]
mov	[esp+6Ch+var_60], 0
mov	eax, 0Ch
sub	eax, edx
mov	[esp+6Ch+var_64], eax
lea	eax, [ebx+edx+64h]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx+54h]
mov	[esp+6Ch+Time],	eax
call	wpurple_recv
mov	esi, eax
cmp	eax, 0
jz	loc_688A7D1C
jl	loc_688A7C10
mov	[esp+6Ch+Time],	0 
call	time
mov	[ebx+2Ch], eax
add	esi, [ebx+70h]
mov	[ebx+70h], esi
cmp	esi, 0Bh
jle	loc_688A79D0
movzx	eax, byte ptr [ebx+66h]
shl	eax, 8
movzx	edx, byte ptr [ebx+67h]
add	eax, edx
cmp	eax, 44Ah
jz	loc_688A7D54
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 44Ah
mov	[esp+6Ch+var_68], offset aExpectedPeerPr 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_warning
mov	[esp+6Ch+Time],	ebx
call	peer_connection_trynext
jmp	loc_688A79D0
align 4
mov	[esp+6Ch+var_68], offset aProxyNegotia_0 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_warning
jmp	loc_688A7B0B
align 10h
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_688A79D0
call	_errno
cmp	dword ptr [eax], 2733h
jz	loc_688A79D0
mov	[esp+6Ch+var_68], offset aLostConnecti_1 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_info
mov	[esp+6Ch+Time],	ebx
call	peer_connection_trynext
jmp	loc_688A79D0
mov	[esp+6Ch+Time],	esi
call	sub_688819F0
mov	[esp+6Ch+var_2E], ax
lea	edi, [esp+6Ch+var_24]
lea	eax, [esp+6Ch+var_20]
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+Time],	esi
call	sub_68881990
mov	[edi], al
inc	edi
cmp	edi, [esp+6Ch+var_34]
jnz	short loc_688A7C69
mov	ecx, [ebx+8]
mov	eax, [ebx+0Ch]
mov	esi, ecx
xor	esi, 4
or	esi, eax
jz	loc_688A7DCF
xor	ecx, 20h
or	ecx, eax
jnz	loc_688A7A62
movzx	edi, word ptr [ebx+0B6h]
mov	esi, [ebx+0C4h]
mov	ecx, [ebx+164h]
mov	eax, [ebx+20h]
inc	eax
mov	[ebx+20h], ax
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ecx
movzx	eax, ax
mov	[esp+6Ch+var_58], eax
movzx	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_5C], eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_60], eax
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_64], eax
lea	eax, [ebx+18h]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx]
mov	[esp+6Ch+Time],	eax
call	aim_im_sendch2_sendfile_requestproxy
jmp	loc_688A7A62
mov	eax, [ebx+84h]
mov	[esp+6Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+84h], 0
mov	[esp+6Ch+Time],	ebx
call	peer_connection_finalize_connection
jmp	loc_688A7A62
align 4
mov	[esp+6Ch+var_68], offset aPeerProxyServe 
mov	[esp+6Ch+Time],	offset aOscar_16 
call	purple_debug_info
mov	[esp+6Ch+Time],	ebx
call	peer_connection_trynext
jmp	loc_688A79D0
align 10h
mov	ecx, offset aBadRequest	
jmp	loc_688A7AEC
mov	ecx, offset aInitialRequest 
jmp	loc_688A7AEC
mov	[esp+6Ch+Time],	18h
call	g_malloc0
mov	ebp, eax
movzx	ecx, byte ptr [ebx+65h]
movzx	eax, byte ptr [ebx+64h]
shl	eax, 8
lea	ecx, [ecx+eax-0Ah]
mov	[ebp+10h], ecx
movzx	eax, byte ptr [ebx+66h]
shl	eax, 8
movzx	esi, byte ptr [ebx+67h]
add	eax, esi
mov	[ebp+0], ax
movzx	eax, byte ptr [ebx+68h]
shl	eax, 8
movzx	esi, byte ptr [ebx+69h]
add	eax, esi
mov	[ebp+2], ax
movzx	eax, byte ptr [ebx+6Ah]
shl	eax, 8
movzx	esi, byte ptr [ebx+6Bh]
add	eax, esi
mov	[ebp+4], eax
movzx	eax, byte ptr [ebx+6Eh]
shl	eax, 8
movzx	esi, byte ptr [ebx+6Fh]
add	eax, esi
mov	[ebp+8], ax
test	ecx, ecx
jnz	short loc_688A7E0C
xor	ecx, ecx
mov	[ebx+3Ch], ebp
jmp	loc_688A7980
mov	ecx, offset aAcceptPeriodTi 
jmp	loc_688A7AEC
mov	eax, [ebx+20h]
inc	eax
mov	[ebx+20h], ax
movzx	eax, ax
mov	[esp+6Ch+var_58], eax
movzx	eax, [esp+6Ch+var_2E]
mov	[esp+6Ch+var_5C], eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_60], eax
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_64], eax
lea	eax, [ebx+18h]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx]
mov	[esp+6Ch+Time],	eax
call	aim_im_sendch2_odc_requestproxy
jmp	loc_688A7A62
mov	[esp+6Ch+Time],	ecx
call	g_malloc
mov	[ebp+0Ch], eax
mov	ecx, [ebp+10h]
jmp	short loc_688A7DBD
call	__stack_chk_fail
align 4
public peer_proxy_connection_established_cb
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	dword ptr [ebx+44h], 0
test	eax, eax
js	loc_688A7F88
mov	[ebx+54h], eax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_688A795C
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], eax
call	purple_input_add
mov	[ebx+84h], eax
mov	eax, [ebx+8Ch]
test	eax, eax
jz	loc_688A7F94
movzx	ebp, word ptr [ebx+98h]
mov	[esp+5Ch+var_40], ebp
lea	edx, [esp+5Ch+var_38]
xor	esi, esi
mov	ecx, 18h
mov	edi, edx
mov	eax, esi
rep stosb
mov	[esp+5Ch+var_36], 4
mov	eax, [ebx]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_44], edx
call	purple_connection_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_username
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
mov	eax, esi
repne scasb
not	ecx
dec	ecx
movzx	edi, cl
lea	eax, [edi+1Fh]
mov	[esp+5Ch+var_58], eax
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881748
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	sub_68881DA4
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	ebp, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_54], 8
lea	eax, [ebx+18h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], esi
call	sub_68881E0C
mov	edi, [ebx+8]
mov	ebp, [ebx+0Ch]
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_5C], esi
call	sub_688918E0
mov	edx, [esp+5Ch+var_44]
mov	eax, ebx
call	sub_688A7868
mov	[esp+5Ch+var_5C], esi
call	sub_688817E4
mov	ebp, [esp+5Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	loc_688A8017
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], ebx
call	peer_connection_trynext
jmp	short loc_688A7F6F
align 4
lea	edx, [esp+5Ch+var_38]
xor	esi, esi
mov	ecx, 18h
mov	edi, edx
mov	eax, esi
rep stosb
mov	[esp+5Ch+var_36], 2
mov	eax, [ebx]
mov	eax, [eax+68h]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_44], edx
call	purple_connection_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_username
mov	[esp+5Ch+var_40], eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
mov	eax, esi
repne scasb
not	ecx
lea	ebp, [ecx-1]
and	ebp, 0FFh
lea	eax, [ebp+1Dh]
mov	[esp+5Ch+var_58], eax
lea	esi, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], esi
call	sub_68881748
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	sub_68881DA4
mov	[esp+5Ch+var_54], ebp
mov	edi, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	sub_688820A0
jmp	loc_688A7F0F
call	__stack_chk_fail
public aim__findmodulebygroup
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+6Ch]
test	eax, eax
jnz	short loc_688A8043
jmp	short loc_688A8048
align 4
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_688A8048
cmp	[eax], dx
jnz	short loc_688A803C
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8058
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public aim__findmodule
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+6Ch]
test	ebx, ebx
jnz	short loc_688A808B
jmp	short loc_688A809E
align 4
mov	ebx, [ebx+28h]
test	ebx, ebx
jz	short loc_688A809E
lea	eax, [ebx+0Ah]
mov	[esp+2Ch+Str2],	eax 
mov	[esp+2Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_688A8084
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A80B2
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public aim__registermodule
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688A8144
test	edi, edi
jz	short loc_688A8144
mov	[esp+2Ch+var_2C], 2Ch
call	g_malloc0
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	edi
inc	eax
jz	short loc_688A8134
lea	eax, [esi+0Ah]
mov	[esp+2Ch+var_28], eax 
mov	[esp+2Ch+var_2C], ebx 
call	aim__findmodule
test	eax, eax
jnz	short loc_688A8124
mov	eax, [ebx+6Ch]
mov	[esi+28h], eax
mov	[ebx+6Ch], esi
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A814B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [esi+20h]
test	eax, eax
jz	short loc_688A8134
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, 0FFFFFFFFh
jmp	short loc_688A8111
align 4
			
mov	eax, 0FFFFFFFFh
jmp	short loc_688A8111
call	__stack_chk_fail
public aim__shutdownmodules
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [edi+6Ch]
test	ebx, ebx
jz	short loc_688A818D
mov	esi, [ebx+28h]
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_688A817F
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], edi
call	eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, esi
test	esi, esi
jnz	short loc_688A816C
mov	dword ptr [edi+6Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A81A7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public aim_initsnachash
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
xchg	ax, ax
mov	dword ptr [edx+eax*4+70h], 0
inc	eax
cmp	eax, 10h
jnz	short loc_688A81C0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A81DE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public aim_newsnac
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A8248
mov	[esp+2Ch+var_28], 18h
mov	[esp+2Ch+Time],	eax
call	g_memdup
mov	ebx, eax
mov	[esp+2Ch+Time],	0 
call	time
mov	[ebx+10h], eax
mov	eax, [ebx]
mov	edx, eax
and	edx, 0Fh
add	edx, 1Ch
mov	ecx, [esi+edx*4]
mov	[ebx+14h], ecx
mov	[esi+edx*4], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A824C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_688A8235
call	__stack_chk_fail
align 4
public aim_cachesnac
			
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	ecx, [esp+3Ch+arg_10]
mov	edx, [esp+3Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0B0h]
mov	[esp+3Ch+var_28], eax
inc	eax
mov	[ebx+0B0h], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_24], ax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_22], ax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_20], ax
test	edx, edx
jnz	short loc_688A82C8
mov	[esp+3Ch+var_1C], 0
lea	eax, [esp+3Ch+var_28]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	aim_newsnac
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A82DA
add	esp, 38h
pop	ebx
retn
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ecx
call	g_memdup
mov	[esp+3Ch+var_1C], eax
jmp	short loc_688A82A7
call	__stack_chk_fail
align 10h
public aim_remsnac
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_0]
mov	ecx, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	ebx, ecx
and	ebx, 0Fh
add	ebx, 1Ch
mov	edx, [eax+ebx*4]
test	edx, edx
jz	short loc_688A835A
cmp	[edx], ecx
jnz	short loc_688A8316
jmp	short loc_688A835E
align 10h
cmp	[eax], ecx
jz	short loc_688A8330
mov	edx, eax
mov	eax, [edx+14h]
test	eax, eax
jnz	short loc_688A8310
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8365
add	esp, 38h
pop	ebx
retn
align 10h
lea	ecx, [edx+14h]
mov	edx, [eax+14h]
mov	[ecx], edx
test	byte ptr [eax+8], 1
jz	short loc_688A831D
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_3C], edx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	dword ptr [eax+0Ch], 0
jmp	short loc_688A831D
xor	eax, eax
jmp	short loc_688A831D
lea	ecx, [eax+ebx*4]
mov	eax, edx
jmp	short loc_688A8333
call	__stack_chk_fail
align 4
public aim_cleansnacs
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
xor	edi, edi
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+edi*4+70h]
test	eax, eax
jz	short loc_688A83C6
mov	[esp+4Ch+Time],	0 
call	time
mov	edx, [esp+4Ch+var_30]
lea	ebp, [edx+edi*4+70h]
mov	ebx, [ebp+0]
test	ebx, ebx
jz	short loc_688A83C6
mov	ecx, eax
sub	ecx, [ebx+10h]
cmp	ecx, esi
jg	short loc_688A83E0
lea	ebp, [ebx+14h]
mov	ebx, [ebp+0]
test	ebx, ebx
jnz	short loc_688A83B3
			
inc	edi
cmp	edi, 10h
jnz	short loc_688A838C
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A8403
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ecx, [ebx+14h]
mov	[ebp+0], ecx
mov	ecx, [ebx+0Ch]
mov	[esp+4Ch+Time],	ecx
mov	[esp+4Ch+var_34], eax
call	g_free
mov	[esp+4Ch+Time],	ebx
call	g_free
mov	eax, [esp+4Ch+var_34]
jmp	short loc_688A83AC
call	__stack_chk_fail
public aim_putsnac
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_C]
movzx	eax, [esp+2Ch+arg_4]
movzx	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_68881E0C
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	sub_68881E0C
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	sub_68881E0C
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	sub_68881E8C
mov	eax, 0Ah
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8478
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public aim_tlvlist_free
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688A84BF
mov	esi, [ebx]
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_688A8498
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A84D1
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], edx
call	sub_688819F0
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	sub_688819F0
mov	esi, eax
movzx	edx, ax
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_4C], ebx
call	sub_68881818
cmp	[esp+4Ch+var_30], eax
ja	short loc_688A8590
mov	[esp+4Ch+var_4C], 8
call	g_malloc
mov	edx, eax
mov	[eax], bp
mov	[eax+2], si
mov	dword ptr [eax+4], 0
test	si, si
jnz	short loc_688A8558
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	g_slist_prepend
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A859C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_34], edx
call	sub_68881CAC
mov	edx, [esp+4Ch+var_34]
mov	[edx+4], eax
test	eax, eax
jnz	short loc_688A8538
mov	[esp+4Ch+var_4C], 0
call	g_free
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	g_free
nop
mov	[esp+4Ch+var_4C], edi
call	aim_tlvlist_free
xor	eax, eax
jmp	short loc_688A8544
call	__stack_chk_fail
align 4
public aim_tlvlist_readlen
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
xor	ebx, ebx
jmp	short loc_688A85E1
align 4
test	si, si
jz	short loc_688A85ED
mov	edx, edi
mov	eax, ebx
call	sub_688A84D8
mov	ebx, eax
test	eax, eax
jz	short loc_688A8608
mov	eax, [eax]
sub	si, [eax+2]
sub	esi, 4
mov	[esp+2Ch+var_2C], edi
call	sub_68881818
test	eax, eax
jnz	short loc_688A85C4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A861D
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_slist_reverse
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A861D
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public aim_tlvlist_readnum
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
xor	ebx, ebx
jmp	short loc_688A8659
align 4
test	si, si
jz	short loc_688A8665
mov	edx, edi
mov	eax, ebx
call	sub_688A84D8
mov	ebx, eax
test	eax, eax
jz	short loc_688A8680
dec	esi
mov	[esp+2Ch+var_2C], edi
call	sub_68881818
test	eax, eax
jnz	short loc_688A8644
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8695
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_slist_reverse
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8695
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public aim_tlvlist_read
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
xor	ebx, ebx
jmp	short loc_688A86C3
mov	edx, esi
mov	eax, ebx
call	sub_688A84D8
mov	ebx, eax
test	eax, eax
jz	short loc_688A86EC
mov	[esp+2Ch+var_2C], esi
call	sub_68881818
test	eax, eax
jnz	short loc_688A86B4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8700
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_slist_reverse
align 4
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8700
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public aim_tlvlist_count
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_688A8738
xchg	ax, ax
inc	eax
mov	edx, [edx+4]
test	edx, edx
jnz	short loc_688A8720
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A873C
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_688A8728
call	__stack_chk_fail
align 4
public aim_tlvlist_size
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_688A8780
xchg	ax, ax
mov	ecx, [edx]
movzx	ecx, word ptr [ecx+2]
lea	eax, [eax+ecx+4]
mov	edx, [edx+4]
test	edx, edx
jnz	short loc_688A875C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8784
add	esp, 1Ch
retn
align 10h
xor	eax, eax
jmp	short loc_688A876D
call	__stack_chk_fail
align 4
public aim_tlvlist_add_raw
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ecx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_688A8820
mov	[esp+4Ch+var_4C], 8
mov	[esp+4Ch+var_34], ecx
call	g_malloc
mov	ebx, eax
mov	ecx, [esp+4Ch+var_34]
mov	[eax], cx
mov	[eax+2], di
mov	dword ptr [eax+4], 0
test	di, di
jnz	short loc_688A8808
mov	[esp+4Ch+var_48], ebx
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_slist_append
mov	[esi], eax
movzx	eax, word ptr [ebx+2]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8824
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
movzx	edx, di
mov	[esp+4Ch+var_48], edx
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_memdup
mov	[ebx+4], eax
jmp	short loc_688A87DF
xor	eax, eax
jmp	short loc_688A87F3
call	__stack_chk_fail
align 4
public aim_tlvlist_copy
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
test	ebx, ebx
jz	short loc_688A888D
lea	esi, [esp+2Ch+var_14]
mov	eax, [ebx]
mov	edx, [eax+4]
mov	[esp+2Ch+var_20], edx
movzx	edx, word ptr [eax+2]
mov	[esp+2Ch+var_24], edx
movzx	eax, word ptr [eax]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	aim_tlvlist_add_raw
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_688A8850
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8891
add	esp, 24h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_688A887B
call	__stack_chk_fail
align 4
public aim_tlvlist_add_8
			
sub	esp, 2Ch
movzx	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_11], al
lea	eax, [esp+2Ch+var_11]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_add_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A88E3
add	esp, 2Ch
retn
call	__stack_chk_fail
public aim_tlvlist_add_16
			
sub	esp, 2Ch
movzx	edx, [esp+2Ch+arg_4]
mov	eax, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, eax
shr	cx, 8
mov	[esp+2Ch+var_12], cl
mov	[esp+2Ch+var_11], al
lea	eax, [esp+2Ch+var_12]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 2
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_add_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A893E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_add_32
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_8]
movzx	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, eax
shr	ecx, 18h
mov	[esp+2Ch+var_14], cl
mov	ecx, eax
shr	ecx, 10h
mov	[esp+2Ch+var_13], cl
mov	ecx, eax
shr	ecx, 8
mov	[esp+2Ch+var_12], cl
mov	[esp+2Ch+var_11], al
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_add_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A89AB
add	esp, 2Ch
retn
call	__stack_chk_fail
public aim_tlvlist_add_str
			
push	edi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_8]
movzx	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_20], edx
and	ecx, 0FFFFh
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], ebx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_add_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8A05
add	esp, 24h
pop	ebx
pop	edi
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_add_caps
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	ebx, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
movzx	esi, [esp+4Ch+arg_4]
mov	edi, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edi
xor	edi, edi
mov	edx, ebp
or	edx, ebx
jnz	short loc_688A8A58
xor	eax, eax
mov	edi, [esp+4Ch+var_20]
xor	edi, ds:__stack_chk_guard
jnz	loc_688A8B12
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], eax 
call	icq_get_custom_icon_data
mov	[esp+4Ch+var_30], eax
mov	eax, ebx
mov	edx, ebp
xor	ecx, ecx
xchg	ax, ax
mov	edi, eax
and	edi, 1
add	ecx, edi
shrd	eax, edx, 1
shr	edx, 1
mov	edi, edx
or	edi, eax
jnz	short loc_688A8A6C
mov	eax, [esp+4Ch+var_30]
test	eax, eax
setnz	dl
movzx	eax, dl
add	ecx, eax
shl	ecx, 4
mov	[esp+4Ch+var_48], ecx
lea	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], edi
mov	byte ptr [esp+4Ch+var_38], dl
call	sub_68881748
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_4C], edi
call	sub_688918E0
mov	dl, byte ptr [esp+4Ch+var_38]
test	dl, dl
jz	short loc_688A8AD4
mov	[esp+4Ch+var_44], 10h
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	sub_688820A0
mov	ebx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], edi
call	sub_68881848
mov	[esp+4Ch+var_40], ebx
and	eax, 0FFFFh
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], esi
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	aim_tlvlist_add_raw
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_38], eax
call	sub_688817E4
mov	eax, [esp+4Ch+var_38]
jmp	loc_688A8A40
call	__stack_chk_fail
align 4
public aim_tlvlist_add_chatroom
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_C]
movzx	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], eax
movzx	ebp, [esp+4Ch+arg_8]
movzx	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
add	ecx, 4
mov	[esp+4Ch+var_48], ecx
lea	ebx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_38], edx
call	sub_68881748
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
dec	ecx
and	ecx, 0FFh
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], ebx
call	sub_68881DA4
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	sub_68882114
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_68881E0C
mov	esi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], ebx
call	sub_68881848
mov	[esp+4Ch+var_40], esi
and	eax, 0FFFFh
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	aim_tlvlist_add_raw
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_38], eax
call	sub_688817E4
mov	eax, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8C04
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_add_noval
			
sub	esp, 2Ch
movzx	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_add_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8C50
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_replace_raw
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ecx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_C]
movzx	edx, word ptr [esp+2Ch+arg_4]
movzx	esi, word ptr [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	loc_688A8D0C
mov	eax, [ecx]
test	eax, eax
jnz	short loc_688A8C93
jmp	short loc_688A8CCC
align 4
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A8CCC
mov	ebx, [eax]
cmp	[ebx], dx
jnz	short loc_688A8C8C
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[ebx+2], si
test	si, si
jnz	short loc_688A8CF4
mov	dword ptr [ebx+4], 0
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8D10
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A8D10
mov	[esp+2Ch+arg_C], edi
mov	[esp+2Ch+arg_8], esi
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], ecx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	aim_tlvlist_add_raw
align 4
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	g_memdup
mov	[ebx+4], eax
movzx	eax, word ptr [ebx+2]
jmp	short loc_688A8CB7
align 4
xor	eax, eax
jmp	short loc_688A8CB7
			
call	__stack_chk_fail
align 4
public aim_tlvlist_replace_str
			
push	edi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_8]
movzx	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_20], edx
and	ecx, 0FFFFh
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], ebx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8D6D
add	esp, 24h
pop	ebx
pop	edi
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_replace_noval
sub	esp, 2Ch
movzx	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8DB8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public aim_tlvlist_replace_8
sub	esp, 2Ch
movzx	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_11], al
lea	eax, [esp+2Ch+var_11]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8E0B
add	esp, 2Ch
retn
call	__stack_chk_fail
public aim_tlvlist_replace_32
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_8]
movzx	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, eax
shr	ecx, 18h
mov	[esp+2Ch+var_14], cl
mov	ecx, eax
shr	ecx, 10h
mov	[esp+2Ch+var_13], cl
mov	ecx, eax
shr	ecx, 8
mov	[esp+2Ch+var_12], cl
mov	[esp+2Ch+var_11], al
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	aim_tlvlist_replace_raw
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8E77
add	esp, 2Ch
retn
call	__stack_chk_fail
public aim_tlvlist_remove
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	short loc_688A8EE0
mov	eax, [ebp+0]
test	eax, eax
jnz	short loc_688A8EAA
jmp	short loc_688A8EE0
align 4
mov	eax, esi
test	esi, esi
jz	short loc_688A8EE0
			
mov	ebx, [eax]
mov	esi, [eax+4]
cmp	[ebx], di
jnz	short loc_688A8EA4
mov	[esp+3Ch+var_38], eax
mov	eax, [ebp+0]
mov	[esp+3Ch+var_3C], eax
call	g_slist_delete_link
mov	[ebp+0], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	eax, esi
test	esi, esi
jnz	short loc_688A8EAA
nop
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A8EF4
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public aim_tlvlist_write
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esi]
test	eax, eax
jz	loc_688A8FB4
xor	ebx, ebx
lea	esi, [esi+0]
mov	edx, [eax]
movzx	edx, word ptr [edx+2]
lea	ebx, [ebx+edx+4]
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_688A8F24
mov	[esp+2Ch+var_2C], edi
call	sub_68881818
cmp	ebx, eax
ja	short loc_688A8FB0
mov	esi, [esi]
test	esi, esi
jnz	short loc_688A8F53
jmp	short loc_688A8F97
align 4
mov	esi, [esi+4]
test	esi, esi
jz	short loc_688A8F97
			
mov	ebx, [esi]
movzx	eax, word ptr [ebx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	sub_68881E0C
movzx	eax, word ptr [ebx+2]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	sub_68881E0C
movzx	eax, word ptr [ebx+2]
test	ax, ax
jz	short loc_688A8F4C
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	sub_688820A0
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_688A8F53
			
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A8FBE
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
xor	eax, eax
jmp	short loc_688A8F9C
mov	[esp+2Ch+var_2C], edi
call	sub_68881818
jmp	short loc_688A8F41
call	__stack_chk_fail
align 4
public aim_tlvlist_add_frozentlvlist
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, [edi]
xor	ebx, ebx
test	edx, edx
jz	short loc_688A9055
xchg	ax, ax
mov	eax, [edx]
movzx	eax, word ptr [eax+2]
lea	ebx, [ebx+eax+4]
mov	edx, [edx+4]
test	edx, edx
jnz	short loc_688A8FF0
test	ebx, ebx
jle	short loc_688A906C
mov	[esp+4Ch+var_48], ebx
lea	esi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], esi
call	sub_68881748
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	aim_tlvlist_write
mov	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], esi
call	sub_68881848
mov	[esp+4Ch+var_40], edi
and	eax, 0FFFFh
mov	[esp+4Ch+var_44], eax
movzx	ecx, bp
mov	[esp+4Ch+var_48], ecx
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	aim_tlvlist_add_raw
mov	[esp+4Ch+var_4C], esi
call	sub_688817E4
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A9070
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	ebx, ebx
jmp	short loc_688A9055
call	__stack_chk_fail
align 4
public aim_tlvlist_cmp
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	edi, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edi
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	esi, edi
test	edi, edi
jz	loc_688A91A4
mov	eax, edi
xor	ecx, ecx
nop
mov	edx, [eax]
movzx	edx, word ptr [edx+2]
lea	ecx, [ecx+edx+4]
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_688A90A8
mov	eax, [esp+4Ch+var_34]
xor	edx, edx
test	eax, eax
jz	short loc_688A90D5
nop
mov	ebx, [eax]
movzx	ebx, word ptr [ebx+2]
lea	edx, [edx+ebx+4]
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_688A90C4
cmp	ecx, edx
jz	short loc_688A90F8
mov	eax, 1
			
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_688A91C3
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 4
xor	eax, eax
test	edi, edi
jz	short loc_688A9111
xchg	ax, ax
mov	edx, [esi]
movzx	edx, word ptr [edx+2]
lea	eax, [eax+edx+4]
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_688A9100
mov	[esp+4Ch+Buf2],	eax
lea	ebx, [esp+4Ch+var_28]
mov	[esp+4Ch+Buf1],	ebx
call	sub_68881748
mov	eax, [esp+4Ch+var_34]
xor	edx, edx
test	eax, eax
jz	short loc_688A913D
nop
mov	ecx, [eax]
movzx	ecx, word ptr [ecx+2]
lea	edx, [edx+ecx+4]
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_688A912C
mov	[esp+4Ch+Buf2],	edx
lea	esi, [esp+4Ch+var_1C]
mov	[esp+4Ch+Buf1],	esi
call	sub_68881748
lea	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Buf2],	eax
mov	[esp+4Ch+Buf1],	ebx
call	aim_tlvlist_write
lea	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Buf2],	eax
mov	[esp+4Ch+Buf1],	esi
call	aim_tlvlist_write
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Size],	eax 
mov	eax, [esp+4Ch+var_1C]
mov	[esp+4Ch+Buf2],	eax 
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+Buf1],	eax 
call	memcmp
mov	[esp+4Ch+Buf1],	ebx
test	eax, eax
jnz	short loc_688A91AC
call	sub_688817E4
mov	[esp+4Ch+Buf1],	esi
call	sub_688817E4
xor	eax, eax
jmp	loc_688A90DE
xor	ecx, ecx
jmp	loc_688A90B9
align 4
call	sub_688817E4
mov	[esp+4Ch+Buf1],	esi
call	sub_688817E4
mov	eax, 1
jmp	loc_688A90DE
call	__stack_chk_fail
public aim_tlv_gettlv
			
push	esi
push	ebx
sub	esp, 14h
mov	edx, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_688A9218
xor	ecx, ecx
jmp	short loc_688A91F7
cmp	ecx, esi
jge	short loc_688A9204
mov	edx, [edx+4]
test	edx, edx
jz	short loc_688A9218
mov	eax, [edx]
cmp	[eax], bx
jnz	short loc_688A91EC
inc	ecx
cmp	ecx, esi
jl	short loc_688A91F0
nop
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A921C
add	esp, 14h
pop	ebx
pop	esi
retn
align 4
			
xor	eax, eax
jmp	short loc_688A9204
call	__stack_chk_fail
align 4
public aim_tlv_getlength
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A926C
xor	ecx, ecx
jmp	short loc_688A9257
align 4
cmp	esi, ecx
jle	short loc_688A9263
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A926C
mov	edx, [eax]
cmp	bx, [edx]
jnz	short loc_688A924C
inc	ecx
cmp	esi, ecx
jg	short loc_688A9250
movzx	eax, word ptr [edx+2]
jmp	short loc_688A9271
align 4
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A9283
add	esp, 14h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public aim_tlv_getvalue_as_string
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
movzx	eax, word ptr [ebx+2]
inc	eax
mov	[esp+2Ch+var_2C], eax
call	g_malloc
movzx	edx, word ptr [ebx+2]
mov	esi, [ebx+4]
mov	edi, eax
mov	ecx, edx
rep movsb
mov	byte ptr [eax+edx], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A92CE
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public aim_tlv_getstr
			
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A9330
xor	ecx, ecx
jmp	short loc_688A9307
align 4
cmp	esi, ecx
jle	short loc_688A9313
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A9330
mov	edx, [eax]
cmp	bx, [edx]
jnz	short loc_688A92FC
inc	ecx
cmp	esi, ecx
jg	short loc_688A9300
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A9344
mov	[esp+1Ch+arg_0], edx
add	esp, 14h
pop	ebx
pop	esi
jmp	aim_tlv_getvalue_as_string
align 10h
			
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A9344
add	esp, 14h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public aim_tlv_get8
			
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A93A2
xor	ecx, ecx
jmp	short loc_688A937F
align 4
cmp	esi, ecx
jle	short loc_688A938B
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A9390
mov	edx, [eax]
cmp	bx, [edx]
jnz	short loc_688A9374
inc	ecx
cmp	esi, ecx
jg	short loc_688A9378
mov	eax, [edx+4]
mov	al, [eax]
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A93A6
add	esp, 14h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_688A9390
call	__stack_chk_fail
align 4
public aim_tlv_get16
			
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A940C
xor	ecx, ecx
jmp	short loc_688A93DF
align 4
cmp	esi, ecx
jle	short loc_688A93EB
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A93FA
mov	edx, [eax]
cmp	bx, [edx]
jnz	short loc_688A93D4
inc	ecx
cmp	esi, ecx
jg	short loc_688A93D8
mov	edx, [edx+4]
movzx	eax, byte ptr [edx]
shl	eax, 8
movzx	edx, byte ptr [edx+1]
add	eax, edx
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A9410
add	esp, 14h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_688A93FA
call	__stack_chk_fail
align 4
public aim_tlv_get32
			
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_688A948A
xor	ecx, ecx
jmp	short loc_688A944B
align 10h
cmp	esi, ecx
jle	short loc_688A9457
mov	eax, [eax+4]
test	eax, eax
jz	short loc_688A9478
mov	edx, [eax]
cmp	bx, [edx]
jnz	short loc_688A9440
inc	ecx
cmp	esi, ecx
jg	short loc_688A9444
mov	edx, [edx+4]
movzx	eax, byte ptr [edx]
shl	eax, 18h
movzx	ecx, byte ptr [edx+3]
add	ecx, eax
movzx	eax, byte ptr [edx+1]
shl	eax, 10h
add	ecx, eax
movzx	eax, byte ptr [edx+2]
shl	eax, 8
add	eax, ecx
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A948E
add	esp, 14h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_688A9478
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ebx
xor	ebx, ebx
test	ecx, ecx
jz	short loc_688A94BD
cmp	byte ptr [ecx],	0
jz	short loc_688A94BD
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_add_pair
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A94CE
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	edi, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edi
xor	edi, edi
test	ebx, ebx
jz	short loc_688A94F7
cmp	byte ptr [ebx],	0
jnz	short loc_688A950C
			
mov	edi, [esp+3Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_688A9555
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], ecx
call	oscar_utf8_try_convert
mov	ebx, eax
test	eax, eax
mov	ecx, [esp+3Ch+var_20]
jz	short loc_688A94F7
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ecx
call	purple_notify_user_info_add_pair
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A9555
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ebp, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ebp
xor	ebp, ebp
test	ebx, ebx
jz	short loc_688A9584
cmp	byte ptr [ebx],	0
jnz	short loc_688A9598
			
mov	ebp, [esp+4Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_688A9604
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], ecx
call	oscar_utf8_try_convert
mov	ebx, eax
test	eax, eax
jz	short loc_688A9584
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], offset aAHrefSSSA 
call	g_strdup_printf
mov	edi, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], esi
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], ecx
call	purple_notify_user_info_add_pair
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A9604
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 4
public oscar_user_info_append_status
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_3C], edx
mov	edi, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str1],	ebx
call	purple_connection_get_account
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+Str1],	ebx
call	purple_connection_get_protocol_data
mov	[esp+5Ch+var_30], eax
test	edi, edi
jz	loc_688A9AB0
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_name
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str1],	eax
call	aim_locate_finduserinfo
mov	esi, eax
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_presence
mov	ebp, eax
mov	[esp+5Ch+Str1],	eax
call	purple_presence_get_active_status
mov	[esp+5Ch+var_34], eax
test	esi, esi
jz	loc_688A9B14
			
test	byte ptr [esi+8], 20h
jz	short loc_688A96D8
mov	ebx, [esp+5Ch+var_38]
test	ebx, ebx
jz	short loc_688A96D8
movzx	eax, word ptr [esi+90h]
test	ax, ax
jz	short loc_688A96D8
mov	edx, [esi+88h]
test	edx, edx
jz	short loc_688A96D8
mov	ecx, [esi+8Ch]
test	ecx, ecx
jz	short loc_688A96D8
mov	[esp+5Ch+var_54], eax 
mov	[esp+5Ch+Str2],	edx 
mov	[esp+5Ch+Str1],	ecx 
call	oscar_encoding_to_utf8
mov	ebx, eax
xor	ecx, ecx
xor	edx, edx
jmp	short loc_688A9701
			
mov	eax, [esi+70h]
test	eax, eax
jz	short loc_688A96E8
cmp	byte ptr [eax],	0
jnz	loc_688A9950
xor	ebx, ebx
mov	eax, [esi+7Ch]
test	eax, eax
jz	short loc_688A96FA
cmp	byte ptr [eax],	0
jnz	loc_688A99C4
mov	ecx, 1
xor	edx, edx
			
test	ebx, ebx
jz	short loc_688A9745
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str1],	eax
mov	[esp+5Ch+var_48], edx
mov	[esp+5Ch+var_44], ecx
call	purple_account_get_username
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	ebx
call	oscar_util_format_string
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+Str1],	ebx
call	g_free
mov	ecx, [esp+5Ch+var_44]
test	ecx, ecx
mov	edx, [esp+5Ch+var_48]
jnz	loc_688A9A78
mov	ebx, [esp+5Ch+var_40]
mov	ecx, [esp+5Ch+var_38]
test	ecx, ecx
jz	short loc_688A9777
test	edx, edx
jz	short loc_688A9777
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	edx
mov	[esp+5Ch+Str1],	offset aAHrefSSA_0 
call	g_strdup_printf
mov	[esp+5Ch+Str1],	ebx
mov	[esp+5Ch+var_44], eax
call	g_free
mov	eax, [esp+5Ch+var_44]
mov	ebx, eax
			
test	edi, edi
jz	loc_688A9843
mov	[esp+5Ch+Str1],	ebp
call	purple_presence_is_online
test	eax, eax
jz	loc_688A99F0
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_688A9970
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_is_available
test	eax, eax
jnz	loc_688A9970
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_name
mov	[esp+5Ch+Str1],	eax
call	oscar_util_valid_name_icq
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_name
mov	esi, eax
test	eax, eax
jz	loc_688A9B5C
test	ebx, ebx
jz	short loc_688A9818
mov	[esp+5Ch+Str2],	ebx 
mov	[esp+5Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_688A97EB
xor	esi, esi
			
cmp	byte ptr [ebx],	0
jnz	loc_688A9B97
test	esi, esi
jnz	short loc_688A9818
			
mov	edx, offset byte_688B5C11
mov	eax, offset byte_688B5C11
mov	esi, eax
jmp	short loc_688A981F
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_name
mov	esi, eax
test	eax, eax
jz	short loc_688A97F8
			
mov	edx, offset byte_688B5C11
mov	eax, edx
			
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	esi
mov	[esp+5Ch+Str1],	offset aSSS 
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+Str1],	ebx
call	g_free
mov	ebx, esi
			
test	ebp, ebp
jz	loc_688A9907
mov	[esp+5Ch+Str2],	offset aMood_2 
mov	[esp+5Ch+Str1],	ebp
call	purple_presence_get_status
mov	edi, eax
mov	[esp+5Ch+Str2],	offset aMood_2 
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_attr_string
mov	[esp+5Ch+Str1],	eax 
call	icq_get_custom_icon_description
mov	esi, eax
test	eax, eax
jz	loc_688A9907
mov	[esp+5Ch+Str2],	offset aMoodtext_1 
mov	[esp+5Ch+Str1],	edi
call	purple_status_get_attr_string
test	eax, eax
jz	loc_688A9AF4
mov	[esp+5Ch+Str2],	0FFFFFFFFh
mov	[esp+5Ch+Str1],	eax
call	purple_markup_escape_text
mov	edi, eax
mov	[esp+5Ch+Str2],	esi
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aSS_2 
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+Str1],	edi
call	g_free
mov	[esp+5Ch+Str2],	offset aMood_3 
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Str2],	eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str1],	edx
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+Str1],	esi
call	g_free
			
mov	[esp+5Ch+Str2],	offset aStatus 
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str1],	edx
call	purple_notify_user_info_add_pair
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A9BC0
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
movzx	edx, word ptr [esi+78h]
mov	[esp+5Ch+var_54], edx 
mov	[esp+5Ch+Str2],	eax 
mov	eax, [esi+74h]
mov	[esp+5Ch+Str1],	eax 
call	oscar_encoding_to_utf8
mov	ebx, eax
jmp	loc_688A96EA
align 10h
			
test	esi, esi
jz	short loc_688A997E
test	byte ptr [esi+8], 20h
jnz	loc_688A97AF
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_name
mov	[esp+5Ch+Str1],	eax
call	oscar_util_valid_name_icq
test	eax, eax
jnz	loc_688A97BF
test	ebx, ebx
jz	loc_688A9806
cmp	byte ptr [ebx],	0
jnz	loc_688A9843
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_name
mov	esi, eax
test	eax, eax
jnz	loc_688A97D9
jmp	loc_688A97EB
align 4
movzx	edx, word ptr [esi+84h]
mov	[esp+5Ch+var_54], edx 
mov	[esp+5Ch+Str2],	eax 
mov	eax, [esi+80h]
mov	[esp+5Ch+Str1],	eax 
call	oscar_encoding_to_utf8
mov	edx, eax
mov	ecx, 1
jmp	loc_688A9701
align 10h
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_name
mov	esi, eax
mov	[esp+5Ch+Str1],	edi
call	purple_buddy_get_name
mov	[esp+5Ch+Str2],	eax
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0D8h]
mov	[esp+5Ch+Str1],	eax
call	aim_ssi_itemlist_findparentname
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Str2],	eax
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0D8h]
mov	[esp+5Ch+Str1],	eax
call	aim_ssi_waitingforauth
test	eax, eax
jz	loc_688A9B6C
test	ebx, ebx
jz	loc_688A9AE8
cmp	byte ptr [ebx],	0
jz	loc_688A9AE8
mov	edi, ebx
mov	esi, offset asc_688B5C0E 
mov	[esp+5Ch+Str2],	offset aNotAuthorize_1 
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Str2],	eax
jmp	loc_688A982B
align 4
mov	[esp+5Ch+Str2],	0FFFFFFFFh
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str1],	eax
call	purple_markup_escape_text
mov	ebx, eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	edx, [esp+5Ch+var_48]
mov	ecx, [esp+5Ch+var_38]
test	ecx, ecx
jz	loc_688A9777
jmp	loc_688A974D
align 10h
test	esi, esi
jz	loc_688A9BAC
mov	edi, [esi]
mov	[esp+5Ch+Str1],	ebx
call	purple_connection_get_account
mov	[esp+5Ch+Str2],	edi
mov	[esp+5Ch+Str1],	eax
call	purple_find_buddy
mov	edi, eax
test	eax, eax
jnz	loc_688A9BC5
mov	[esp+5Ch+var_34], 0
xor	ebp, ebp
jmp	loc_688A9692
align 4
			
mov	edi, offset byte_688B5C11
mov	esi, edi
jmp	loc_688A9A52
mov	[esp+5Ch+Str2],	esi
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	esi, eax
jmp	loc_688A98D7
align 4
mov	[esp+5Ch+Str2],	offset aMessage_3 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_attr_string
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	ebx, eax
mov	[esp+5Ch+Str2],	offset aItmsurl_0 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	purple_status_get_attr_string
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	edx, eax
mov	ecx, 1
jmp	loc_688A9701
align 4
test	ebx, ebx
jnz	loc_688A97EB
jmp	loc_688A97F8
align 4
mov	[esp+5Ch+Str1],	ebx
call	g_free
mov	[esp+5Ch+Str2],	offset aOffline_1 
mov	[esp+5Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	ebx, eax
jmp	loc_688A9843
mov	edx, ebx
mov	eax, offset asc_688B5C0E 
test	esi, esi
jnz	loc_688A981F
jmp	loc_688A97FD
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688A9BC0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
mov	[esp+5Ch+Str1],	eax
call	purple_buddy_get_presence
mov	ebp, eax
mov	[esp+5Ch+Str1],	eax
call	purple_presence_get_active_status
mov	[esp+5Ch+var_34], eax
jmp	loc_688A9692
public oscar_user_info_append_extra_info
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_44], eax
mov	ebx, [esp+6Ch+arg_8]
mov	esi, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], edi
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	[esp+6Ch+var_6C], edi
call	purple_connection_get_account
mov	[esp+6Ch+var_40], eax
mov	eax, [esp+6Ch+var_44]
test	eax, eax
jz	loc_688A9D58
test	ebx, ebx
jz	loc_688A9E44
test	esi, esi
jz	loc_688A9E80
			
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_name
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_group
mov	edi, eax
mov	[esp+6Ch+var_6C], eax
call	purple_group_get_name
mov	[esp+6Ch+var_38], eax
test	esi, esi
jz	short loc_688A9C9B
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_normalize
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+38h]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_688A9C8E
mov	eax, [eax+4]
test	eax, eax
jnz	loc_688A9DDC
			
movzx	eax, word ptr [esi+4]
test	ax, ax
jnz	loc_688A9D70
			
test	ebx, ebx
jz	loc_688A9D58
mov	eax, [esp+6Ch+var_3C]
test	eax, eax
jz	loc_688A9D58
test	edi, edi
jz	loc_688A9D58
mov	esi, [esp+6Ch+var_38]
test	esi, esi
jz	loc_688A9D58
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_getcomment
mov	esi, eax
test	eax, eax
jz	short loc_688A9D58
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], esi
call	g_markup_escape_text
mov	ebx, eax
mov	[esp+6Ch+var_6C], esi
call	g_free
mov	[esp+6Ch+var_68], offset aBuddyComment_0 
mov	[esp+6Ch+var_6C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], eax
mov	ecx, [esp+6Ch+var_44]
mov	edx, ebp
mov	eax, [esp+6Ch+var_40]
call	sub_688A94D4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A9E9B
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688A9E9B
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
fld	ds:flt_688B5F7C
push	eax
fidivr	[esp+70h+var_70]
pop	eax
fadd	ds:flt_688B5F80
fnstcw	[esp+6Ch+var_2E]
mov	ax, [esp+6Ch+var_2E]
mov	ah, 0Ch
mov	[esp+6Ch+var_30], ax
fldcw	[esp+6Ch+var_30]
fistp	[esp+6Ch+var_68]
fldcw	[esp+6Ch+var_2E]
mov	[esp+6Ch+var_6C], offset aD_0 
call	g_strdup_printf
mov	esi, eax
mov	[esp+6Ch+var_68], offset aWarningLevel 
mov	[esp+6Ch+var_6C], offset aPidgin_8 
call	libintl_dgettext
mov	ecx, esi
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	[esp+6Ch+var_6C], esi
call	g_free
jmp	loc_688A9C9B
align 4
movzx	edx, al
mov	[esp+6Ch+var_5C], edx
movzx	edx, ah
mov	[esp+6Ch+var_60], edx
mov	edx, eax
and	edx, 0FF0000h
shr	edx, 10h
mov	[esp+6Ch+var_64], edx
shr	eax, 18h
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], offset aU_U_U_U 
call	g_strdup_printf
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+var_68], offset aIpAddress 
mov	[esp+6Ch+var_6C], offset aPidgin_8 
call	libintl_dgettext
mov	ecx, [esp+6Ch+var_34]
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	loc_688A9C8E
test	esi, esi
jz	loc_688A9D58
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddy
mov	ebx, eax
test	eax, eax
jnz	loc_688A9C38
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_3C], 0
xor	edi, edi
jmp	loc_688A9C5E
align 10h
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_name
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	aim_locate_finduserinfo
mov	esi, eax
jmp	loc_688A9C38
			
call	__stack_chk_fail
public oscar_user_info_display_error
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_8]
movzx	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_notify_user_info_new
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	oscar_get_msgerr_reason
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aUserInformatio 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	purple_notify_user_info_add_pair
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebp
mov	eax, [edi+68h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_userinfo
mov	[esp+4Ch+var_4C], esi
call	purple_notify_user_info_destroy
mov	eax, [edi+68h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_conv_present_error
test	eax, eax
jnz	short loc_688A9F87
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	eax, [edi+68h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688A9FA3
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
public oscar_user_info_display_icq
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edi, [esp+7Ch+arg_0]
mov	ebx, [esp+7Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	edx, [edi+68h]
mov	[esp+7Ch+var_48], edx
mov	[esp+7Ch+Time],	edx
call	purple_connection_get_account
mov	[esp+7Ch+var_4C], eax
mov	eax, [ebx+4]
test	eax, eax
jnz	short loc_688A9FFC
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_688AA81F
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	purple_notify_user_info_new
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+Format], offset aU_0 
mov	[esp+7Ch+Count], 10h
lea	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Time],	eax
call	g_snprintf
lea	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+Count], edx
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
mov	[esp+7Ch+var_40], eax
test	eax, eax
jz	loc_688AA760
mov	[esp+7Ch+Time],	eax
call	purple_buddy_get_name
mov	[esp+7Ch+Count], eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Time],	eax
call	purple_normalize
mov	[esp+7Ch+Count], eax
mov	eax, [edi+38h]
mov	[esp+7Ch+Time],	eax
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+7Ch+Count], offset	aUin 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
lea	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+Format], edx
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_pair
mov	edx, [ebx+8]
mov	[esp+7Ch+Count], offset	aNick 
mov	[esp+7Ch+Time],	offset aPidgin_8 
mov	[esp+7Ch+var_50], edx
call	libintl_dgettext
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+Count], edx
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
test	ebp, ebp
jz	short loc_688AA0D9
mov	eax, [ebp+4]
test	eax, eax
jnz	loc_688AA6A8
			
mov	ebp, [ebx+0Ch]
mov	[esp+7Ch+Count], offset	aFirstName 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+10h]
mov	[esp+7Ch+Count], offset	aLastName 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+14h]
mov	[esp+7Ch+Count], offset	aEmailAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], offset aMailto 
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A955C
mov	edx, [ebx+78h]
test	dx, dx
jz	short loc_688AA1C5
mov	eax, [ebx+7Ch]
test	eax, eax
jz	short loc_688AA1C5
test	dx, dx
jz	short loc_688AA1C5
xor	ebp, ebp
mov	[esp+7Ch+var_44], esi
jmp	short loc_688AA183
align 10h
mov	eax, [ebx+7Ch]
mov	esi, [eax+ebp*4]
mov	[esp+7Ch+Count], offset	aEmailAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], offset aMailto 
mov	[esp+7Ch+Count], esi
mov	[esp+7Ch+Time],	eax
mov	ecx, [esp+7Ch+var_44]
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A955C
inc	ebp
movzx	eax, word ptr [ebx+78h]
cmp	eax, ebp
jg	short loc_688AA180
mov	esi, [esp+7Ch+var_44]
			
mov	ebp, [ebx+2Ch]
mov	[esp+7Ch+Count], offset	aMobilePhone 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	al, [ebx+38h]
test	al, al
jz	short loc_688AA239
dec	al
jz	loc_688AA804
mov	[esp+7Ch+Count], offset	aMale 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+Count], offset	aGender	
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], ebp
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_pair
cmp	word ptr [ebx+40h], 76Ch
ja	loc_688AA614
			
movzx	eax, byte ptr [ebx+36h]
lea	edx, [eax-1]
cmp	dl, 0FDh
jbe	loc_688AA7B8
mov	ebp, [ebx+14h]
mov	[esp+7Ch+Count], offset	aPersonalWebPag	
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], offset byte_688B5C11
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A955C
mov	eax, [esp+7Ch+var_40]
test	eax, eax
jz	short loc_688AA2B8
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], 0
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+Format], eax
mov	[esp+7Ch+Count], esi
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Time],	edx
call	oscar_user_info_append_status
mov	ebp, [ebx+74h]
mov	[esp+7Ch+Count], offset	aAdditionalInfo	
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_section_break
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_688AA2F7
cmp	byte ptr [eax],	0
jnz	short loc_688AA318
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_688AA303
cmp	byte ptr [eax],	0
jnz	short loc_688AA318
mov	eax, [ebx+1Ch]
test	eax, eax
jz	loc_688AA728
cmp	byte ptr [eax],	0
jz	loc_688AA728
nop
			
mov	[esp+7Ch+Count], offset	aHomeAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_section_header
mov	ebp, [ebx+28h]
mov	[esp+7Ch+Count], offset	aAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+18h]
mov	[esp+7Ch+Count], offset	aCity 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+1Ch]
mov	[esp+7Ch+Count], offset	aState 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+30h]
mov	[esp+7Ch+Count], offset	aZipCode 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
			
mov	eax, [ebx+58h]
test	eax, eax
jz	short loc_688AA3F0
cmp	byte ptr [eax],	0
jnz	short loc_688AA410
mov	eax, [ebx+48h]
test	eax, eax
jz	short loc_688AA3FC
cmp	byte ptr [eax],	0
jnz	short loc_688AA410
mov	eax, [ebx+4Ch]
test	eax, eax
jz	loc_688AA744
cmp	byte ptr [eax],	0
jz	loc_688AA744
			
mov	[esp+7Ch+Count], offset	aWorkAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_section_header
mov	ebp, [ebx+58h]
mov	[esp+7Ch+Count], offset	aAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+48h]
mov	[esp+7Ch+Count], offset	aCity 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+4Ch]
mov	[esp+7Ch+Count], offset	aState 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+5Ch]
mov	[esp+7Ch+Count], offset	aZipCode 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
			
mov	eax, [ebx+64h]
test	eax, eax
jz	short loc_688AA4E8
cmp	byte ptr [eax],	0
jnz	short loc_688AA508
mov	eax, [ebx+68h]
test	eax, eax
jz	short loc_688AA4F4
cmp	byte ptr [eax],	0
jnz	short loc_688AA508
mov	eax, [ebx+6Ch]
test	eax, eax
jz	loc_688AA70C
cmp	byte ptr [eax],	0
jz	loc_688AA70C
			
mov	[esp+7Ch+Count], offset	aWorkInformatio	
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_section_header
mov	ebp, [ebx+64h]
mov	[esp+7Ch+Count], offset	aCompany 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+68h]
mov	[esp+7Ch+Count], offset	aDivision 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebp, [ebx+6Ch]
mov	[esp+7Ch+Count], offset	aPosition 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
mov	ebx, [ebx+14h]
mov	[esp+7Ch+Count], offset	aWebPage 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], offset byte_688B5C11
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A955C
			
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+Format], esi
lea	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Count], eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Time],	edx
call	purple_notify_userinfo
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_destroy
jmp	loc_688A9FE2
align 4
cmp	byte ptr [ebx+42h], 0
jz	loc_688AA245
cmp	byte ptr [ebx+43h], 0
jz	loc_688AA245
mov	[esp+7Ch+Time],	0 
call	time
mov	[esp+7Ch+var_3C], eax
lea	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+Time],	eax 
call	localtime
mov	ebp, eax
movzx	eax, byte ptr [ebx+43h]
mov	[ebp+0Ch], eax
movzx	eax, byte ptr [ebx+42h]
dec	eax
mov	[ebp+10h], eax
movzx	eax, word ptr [ebx+40h]
sub	eax, 76Ch
mov	[ebp+14h], eax
mov	dword ptr [ebp+20h], 0FFFFFFFFh
mov	[esp+7Ch+Time],	ebp 
call	mktime
mov	[esp+7Ch+Time],	ebp
call	purple_date_format_short
mov	ebp, eax
mov	[esp+7Ch+Count], offset	aBirthday_0 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
jmp	loc_688AA245
align 4
movzx	edx, al
mov	[esp+7Ch+var_6C], edx
movzx	edx, ah
mov	[esp+7Ch+var_70], edx
mov	edx, eax
and	edx, 0FF0000h
shr	edx, 10h
mov	[esp+7Ch+Format], edx
shr	eax, 18h
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	offset aU_U_U_U	
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+Count], offset	aIpAddress 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], ebp
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_pair
mov	[esp+7Ch+Time],	ebp
call	g_free
jmp	loc_688AA0D9
align 4
			
mov	eax, [ebx+70h]
test	eax, eax
jz	loc_688AA5DC
cmp	byte ptr [eax],	0
jnz	loc_688AA508
jmp	loc_688AA5DC
align 4
			
mov	eax, [ebx+30h]
test	eax, eax
jz	loc_688AA3E4
cmp	byte ptr [eax],	0
jz	loc_688AA3E4
jmp	loc_688AA318
align 4
			
mov	eax, [ebx+5Ch]
test	eax, eax
jz	loc_688AA4DC
cmp	byte ptr [eax],	0
jz	loc_688AA4DC
jmp	loc_688AA410
align 10h
mov	[esp+7Ch+Count], offset	aUin 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
lea	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+Format], edx
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_pair
mov	ebp, [ebx+8]
mov	[esp+7Ch+Count], offset	aNick 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Count], ebp
mov	[esp+7Ch+Time],	eax
mov	ecx, esi
mov	edx, edi
mov	eax, [esp+7Ch+var_4C]
call	sub_688A94D4
jmp	loc_688AA0D9
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+Format], offset aHhd 
mov	[esp+7Ch+Count], 5 
lea	ebp, [esp+7Ch+Dest]
mov	[esp+7Ch+Time],	ebp 
call	_snprintf
mov	[esp+7Ch+Count], offset	aAge 
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+Format], ebp
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Time],	esi
call	purple_notify_user_info_add_pair
jmp	loc_688AA255
align 4
mov	[esp+7Ch+Count], offset	aFemale	
mov	[esp+7Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
jmp	loc_688AA215
call	__stack_chk_fail
public oscar_user_info_display_aim
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+6Ch+arg_0]
mov	eax, [eax+68h]
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+6Ch+var_34], eax
call	purple_notify_user_info_new
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], eax
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	ecx
call	oscar_user_info_append_status
test	byte ptr [ebx+58h], 8
jz	short loc_688AA891
movzx	eax, word ptr [ebx+6]
test	ax, ax
jnz	loc_688AAC6C
			
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], 0
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_68], eax
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	ecx
call	oscar_user_info_append_extra_info
mov	eax, [ebx+58h]
test	al, 4
jnz	loc_688AAA38
test	al, 2
jnz	loc_688AAA55
mov	edx, [ebx+20h]
mov	ecx, [ebx+24h]
mov	[esp+6Ch+var_3C], ecx
or	ecx, edx
jnz	loc_688AAAA5
			
movzx	eax, word ptr [ebx+6Ch]
test	ax, ax
jz	short loc_688AA956
mov	edx, [ebx+64h]
test	edx, edx
jz	short loc_688AA956
mov	ecx, [ebx+68h]
test	ecx, ecx
jz	short loc_688AA956
mov	[esp+6Ch+var_64], eax 
mov	[esp+6Ch+var_68], edx 
mov	[esp+6Ch+Time],	ecx 
call	oscar_encoding_to_utf8
mov	edi, eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	purple_account_get_username
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	edi
call	oscar_util_format_string
mov	ebp, eax
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_notify_user_info_add_section_break
mov	[esp+6Ch+var_68], offset aProfile 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ecx, ebp
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	[esp+6Ch+Time],	edi
call	g_free
			
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_notify_user_info_add_section_break
mov	eax, [ebx]
mov	[esp+6Ch+Time],	eax
call	oscar_util_valid_name_icq
test	eax, eax
jnz	loc_688AAA2C
mov	edi, offset aHttpProfiles_a 
mov	[esp+6Ch+var_68], offset aViewWebProfile 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	purple_normalize
mov	[esp+6Ch+var_60], ebp
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	offset aAHrefSSSA_0 
call	g_strdup_printf
mov	edi, eax
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_notify_user_info_add_pair
mov	[esp+6Ch+Time],	edi
call	g_free
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	ecx
call	purple_notify_userinfo
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_notify_user_info_destroy
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_688AB048
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, offset aHttpWww_icq__0 
jmp	loc_688AA979
align 4
mov	eax, [ebx]
mov	[esp+6Ch+Time],	eax
call	oscar_util_valid_name_sms
test	eax, eax
jz	loc_688AAD50
mov	eax, [ebx+58h]
test	al, 2
jz	loc_688AA8C4
mov	eax, [ebx+10h]
mov	[esp+6Ch+var_24], eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Time],	eax 
call	localtime
mov	[esp+6Ch+Time],	eax
call	purple_date_format_full
mov	edi, eax
mov	[esp+6Ch+var_68], offset aMemberSince 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ecx, edi
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	edx, [ebx+20h]
mov	ecx, [ebx+24h]
mov	[esp+6Ch+var_3C], ecx
or	ecx, edx
jz	loc_688AA8D6
mov	[esp+6Ch+Time],	offset byte_688B5C11
mov	[esp+6Ch+var_48], edx
call	g_string_new
mov	[esp+6Ch+var_38], eax
mov	ebp, 22h
mov	esi, 1
xor	edi, edi
mov	[esp+6Ch+var_30], ebx
mov	edx, [esp+6Ch+var_48]
mov	ebx, edx
jmp	short loc_688AAB27
align 4
mov	[esp+6Ch+var_68], offset aNihilist 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
			
test	eax, eax
jz	short loc_688AAB1C
mov	ecx, [esp+6Ch+var_38]
mov	edx, [ecx]
cmp	byte ptr [edx],	0
jnz	loc_688AABE4
mov	edx, offset byte_688B5C11
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aSS_3 
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	eax
call	g_string_append_printf
			
add	esi, esi
adc	edi, edi
dec	ebp
jz	loc_688AABF0
mov	eax, esi
and	eax, ebx
mov	edx, [esp+6Ch+var_3C]
and	edx, edi
or	edx, eax
jz	short loc_688AAB1C
mov	eax, esi
xor	ah, 20h
or	eax, edi
jz	short loc_688AAAD4
mov	eax, esi
cmp	edi, 0
ja	short loc_688AAB4D
cmp	esi, 2000h
jbe	short loc_688AAB74
xor	eax, 800000h
or	eax, edi
jnz	loc_688AAC38
mov	[esp+6Ch+var_68], offset aVideoChat 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
xor	eax, 40h
or	eax, edi
jz	loc_688AACBB
mov	eax, esi
cmp	edi, 0
ja	loc_688AACB0
cmp	esi, 40h
ja	loc_688AACB0
xor	eax, 4
or	eax, edi
jz	loc_688AAEA2
mov	eax, esi
cmp	edi, 0
ja	loc_688AAFE0
cmp	esi, 4
ja	loc_688AAFE0
xor	eax, 1
or	eax, edi
jz	loc_688AAE89
mov	eax, esi
xor	eax, 2
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aVoice	
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
mov	edx, offset asc_688B5DD3 
jmp	loc_688AAB00
align 10h
mov	ebx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], 0
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	eax
call	g_string_free
mov	edi, eax
mov	[esp+6Ch+var_68], offset aCapabilities 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ecx, edi
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	[esp+6Ch+Time],	edi
call	g_free
jmp	loc_688AA8D6
mov	eax, esi
cmp	edi, 0
jbe	loc_688AACD4
xor	eax, 4000000h
or	eax, edi
jnz	loc_688AAD94
mov	[esp+6Ch+var_68], offset aCamera 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
lea	eax, [eax+eax*2]
lea	eax, [eax+eax*4]
shl	eax, 2
mov	[esp+6Ch+Time],	eax
call	purple_str_seconds_to_string
mov	edi, eax
mov	[esp+6Ch+var_68], offset aIdle 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ecx, edi
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
mov	[esp+6Ch+Time],	edi
call	g_free
jmp	loc_688AA891
align 10h
			
xor	ah, 2
or	eax, edi
jnz	loc_688AADE4
mov	[esp+6Ch+var_68], offset aGames	
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
cmp	esi, 800000h
ja	loc_688AAC43
xor	eax, 10000h
or	eax, edi
jz	short loc_688AAD34
mov	eax, esi
cmp	edi, 0
ja	loc_688AAF08
cmp	esi, 10000h
ja	loc_688AAF08
xor	ah, 40h
or	eax, edi
jz	loc_688AAED4
mov	eax, esi
xor	ah, 80h
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aOldIcqUtf8 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
mov	[esp+6Ch+var_68], offset aTrillianEncryp 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 10h
mov	eax, [ebx+14h]
mov	[esp+6Ch+var_24], eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Time],	eax 
call	localtime
mov	[esp+6Ch+Time],	eax
call	purple_date_format_full
mov	edi, eax
mov	[esp+6Ch+var_68], offset aOnlineSince 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	ecx, edi
mov	edx, eax
mov	eax, [esp+6Ch+var_44]
call	sub_688A9494
jmp	loc_688AAA4A
align 4
mov	eax, esi
cmp	edi, 0
jbe	loc_688AAE2C
xor	eax, 20000000h
or	eax, edi
jz	loc_688AAE70
mov	eax, esi
xor	eax, 40000000h
or	eax, edi
jz	loc_688AAE70
mov	eax, esi
xor	eax, 8000000h
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aScreenSharing	
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
mov	eax, esi
cmp	edi, 0
ja	loc_688AAF78
cmp	esi, 200h
ja	loc_688AAF78
xor	al, 80h
or	eax, edi
jz	loc_688AAEBB
mov	eax, esi
xor	ah, 1
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aSendBuddyList	
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
cmp	esi, 4000000h
ja	loc_688AAD9F
xor	eax, 1000000h
or	eax, edi
jz	loc_688AAEED
mov	eax, esi
xor	eax, 2000000h
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aLiveVideo 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 10h
			
mov	[esp+6Ch+var_68], offset aIcqXtraz 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aBuddyIcon 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aAimDirectIm 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aAddIns 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aIcqServerRelay 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aIchatAv 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
			
xor	eax, 100000h
or	eax, edi
jz	short loc_688AAF44
mov	eax, esi
xor	eax, 200000h
or	eax, edi
jz	short loc_688AAF5D
mov	eax, esi
xor	eax, 20000h
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aIcqUtf8 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aHiptop_0 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aSecurityEnable 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
align 4
			
xor	ah, 8
or	eax, edi
jz	short loc_688AAFAE
mov	eax, esi
xor	ah, 10h
or	eax, edi
jz	short loc_688AAFC7
mov	eax, esi
xor	ah, 4
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aIcqDirectConne 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aApUser 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aIcqRtf 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
			
xor	eax, 10h
or	eax, edi
jz	short loc_688AB016
mov	eax, esi
xor	eax, 20h
or	eax, edi
jz	short loc_688AB02F
mov	eax, esi
xor	eax, 8
or	eax, edi
jnz	loc_688AAB1C
mov	[esp+6Ch+var_68], offset aChat_0 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aGetFile 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
mov	[esp+6Ch+var_68], offset aSendFile 
mov	[esp+6Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
jmp	loc_688AAAE8
call	__stack_chk_fail
align 10h
public oscar_get_msgerr_reason
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	eax, 18h
jbe	short loc_688AB08C
mov	[esp+2Ch+var_28], offset aUnknownReaso_0 
mov	[esp+2Ch+var_2C], offset aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB0A5
add	esp, 2Ch
retn
mov	eax, ds:off_688B6200[eax*4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_9 
call	libintl_dgettext
jmp	short loc_688AB07C
call	__stack_chk_fail
align 4
public oscar_get_ui_info_int
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_core_get_ui_info
test	eax, eax
jz	short loc_688AB0ED
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup_extended
test	eax, eax
jnz	short loc_688AB104
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB10A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	ebx, [esp+2Ch+var_14]
jmp	short loc_688AB0ED
call	__stack_chk_fail
align 10h
public oscar_get_ui_info_string
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_core_get_ui_info
test	eax, eax
jz	short loc_688AB154
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_688AB154
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB158
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	eax, esi
jmp	short loc_688AB141
call	__stack_chk_fail
align 10h
public oscar_get_clientstring
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aPurple 
mov	[esp+2Ch+var_2C], offset aName 
call	oscar_get_ui_info_string
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a2_10_11 
mov	[esp+2Ch+var_2C], offset aVersion 
call	oscar_get_ui_info_string
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], offset aSS_4 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB1BE
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public aimutil_iconsum
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
dec	eax
jle	short loc_688AB23F
lea	eax, [ebp+1]
mov	edi, [esp+3Ch+var_30]
sub	edi, 2
shr	edi, 1
lea	esi, [ebp+edi*2+3]
xor	ecx, ecx
movzx	edx, byte ptr [eax]
shl	edx, 8
movzx	ebx, byte ptr [eax-1]
add	edx, ebx
add	ecx, edx
add	eax, 2
cmp	eax, esi
jnz	short loc_688AB1F8
lea	eax, [edi+edi+2]
cmp	[esp+3Ch+var_30], eax
jle	short loc_688AB21E
movzx	eax, byte ptr [ebp+eax+0]
add	ecx, eax
mov	eax, ecx
shr	eax, 10h
and	ecx, 0FFFFh
add	eax, ecx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB245
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	eax, eax
xor	ecx, ecx
jmp	short loc_688AB211
call	__stack_chk_fail
align 4
public oscar_util_valid_name_icq
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
movsx	edx, byte ptr [eax]
test	dl, dl
jz	short loc_688AB284
sub	edx, 30h
cmp	edx, 9
ja	short loc_688AB29C
inc	eax
jmp	short loc_688AB27D
align 4
inc	eax
sub	edx, 30h
cmp	edx, 9
ja	short loc_688AB29C
movsx	edx, byte ptr [eax]
test	dl, dl
jnz	short loc_688AB274
mov	eax, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB2A0
add	esp, 1Ch
retn
align 4
			
xor	eax, eax
jmp	short loc_688AB289
call	__stack_chk_fail
align 4
public oscar_util_valid_name_sms
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
cmp	byte ptr [eax],	2Bh
jz	short loc_688AB2D4
			
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB303
add	esp, 1Ch
retn
align 4
movsx	edx, byte ptr [eax+1]
test	dl, dl
jz	short loc_688AB2FC
sub	edx, 30h
cmp	edx, 9
ja	short loc_688AB2C0
add	eax, 2
jmp	short loc_688AB2F5
align 4
inc	eax
sub	edx, 30h
cmp	edx, 9
ja	short loc_688AB2C0
movsx	edx, byte ptr [eax]
test	dl, dl
jnz	short loc_688AB2EC
mov	eax, 1
jmp	short loc_688AB2C2
call	__stack_chk_fail
public oscar_util_valid_name
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688AB368
mov	cl, [ebx]
test	cl, cl
jz	short loc_688AB368
movsx	eax, cl
sub	eax, 30h
cmp	eax, 9
ja	short loc_688AB36C
lea	eax, [ebx+1]
jmp	short loc_688AB341
inc	eax
sub	edx, 30h
cmp	edx, 9
ja	short loc_688AB36C
movsx	edx, byte ptr [eax]
test	dl, dl
jnz	short loc_688AB338
			
mov	eax, 1
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688AB44E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	eax, eax
jmp	short loc_688AB34D
			
cmp	cl, 2Bh
jz	loc_688AB400
			
mov	[esp+3Ch+C], ebx
call	purple_email_is_valid
test	eax, eax
jnz	short loc_688AB348
movsx	eax, byte ptr [ebx]
mov	esi, ds:__mb_cur_max
cmp	dword ptr [esi], 1
jnz	loc_688AB439
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 107h
test	eax, eax
jz	short loc_688AB368
movsx	eax, byte ptr [ebx]
lea	ebp, [ebx+1]
mov	edi, ds:_pctype
test	al, al
jnz	short loc_688AB3E8
jmp	short loc_688AB348
align 4
mov	edx, [edi]
mov	ax, [edx+eax*2]
and	eax, 107h
test	eax, eax
jnz	short loc_688AB3D9
mov	al, [ebx]
cmp	al, 20h
jz	short loc_688AB3D9
cmp	al, 2Eh
jz	short loc_688AB3D9
cmp	al, 5Fh
jnz	short loc_688AB368
			
mov	ebx, ebp
inc	ebp
movsx	eax, byte ptr [ebp-1]
test	al, al
jz	loc_688AB348
cmp	dword ptr [esi], 1
jz	short loc_688AB3BC
mov	[esp+3Ch+Type],	107h 
mov	[esp+3Ch+C], eax 
call	_isctype
jmp	short loc_688AB3C7
align 10h
movsx	eax, byte ptr [ebx+1]
test	al, al
jz	loc_688AB348
sub	eax, 30h
cmp	eax, 9
ja	loc_688AB375
lea	eax, [ebx+2]
jmp	short loc_688AB42D
align 10h
inc	eax
sub	edx, 30h
cmp	edx, 9
ja	loc_688AB375
movsx	edx, byte ptr [eax]
test	dl, dl
jnz	short loc_688AB420
jmp	loc_688AB348
mov	[esp+3Ch+Type],	107h 
mov	[esp+3Ch+C], eax 
call	_isctype
jmp	loc_688AB3A4
call	__stack_chk_fail
align 4
public oscar_util_name_compare
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_688AB4D9
test	esi, esi
jz	short loc_688AB4D9
lea	esi, [esi+0]
			
inc	esi
mov	cl, [esi-1]
cmp	cl, 20h
jnz	short loc_688AB485
jmp	short loc_688AB478
align 4
inc	ebx
mov	dl, [ebx]
cmp	dl, 20h
jz	short loc_688AB484
movsx	eax, dl
mov	[esp+3Ch+C], eax 
mov	[esp+3Ch+var_24], dl
mov	[esp+3Ch+var_20], cl
call	toupper
mov	edi, eax
movsx	ecx, [esp+3Ch+var_20]
mov	[esp+3Ch+C], ecx 
call	toupper
cmp	edi, eax
mov	dl, [esp+3Ch+var_24]
jnz	short loc_688AB4BD
test	dl, dl
jz	short loc_688AB4D5
inc	ebx
jmp	short loc_688AB478
mov	eax, 1
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB4E0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
xor	eax, eax
jmp	short loc_688AB4C2
			
mov	eax, 0FFFFFFFFh
jmp	short loc_688AB4C2
call	__stack_chk_fail
align 4
public oscar_util_format_string
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_688AB674
test	ebp, ebp
jz	loc_688AB698
mov	[esp+4Ch+Time],	400h
call	g_string_sized_new
mov	ebx, eax
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_24], eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Time],	eax 
call	localtime
mov	edi, eax
movsx	edx, byte ptr [esi]
test	dl, dl
jz	short loc_688AB5C0
mov	[esp+4Ch+var_30], ebp
jmp	short loc_688AB578
align 4
mov	ecx, [ebx+4]
lea	eax, [ecx+1]
cmp	eax, [ebx+8]
jnb	loc_688AB658
mov	ebp, [ebx]
mov	[ebp+ecx+0], dl
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+ecx+1], 0
mov	eax, esi
			
lea	esi, [eax+1]
movsx	edx, byte ptr [eax+1]
test	dl, dl
jz	short loc_688AB5C0
			
cmp	dl, 25h
jnz	short loc_688AB54C
mov	al, [esi+1]
test	al, al
jz	short loc_688AB598
cmp	al, 6Eh
jz	loc_688AB640
cmp	al, 74h
jz	loc_688AB624
cmp	al, 64h
jz	short loc_688AB608
mov	edx, [ebx+4]
lea	eax, [edx+1]
cmp	eax, [ebx+8]
jnb	short loc_688AB5E8
mov	ecx, [ebx]
mov	byte ptr [ecx+edx], 25h
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
mov	eax, esi
lea	esi, [eax+1]
movsx	edx, byte ptr [eax+1]
test	dl, dl
jnz	short loc_688AB578
nop
			
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+Time],	ebx
call	g_string_free
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_688AB6BB
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], 25h
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	ebx
call	g_string_insert_c
mov	eax, esi
jmp	loc_688AB56D
align 4
mov	[esp+4Ch+Time],	edi
call	purple_date_format_short
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	ebx
call	g_string_append
lea	eax, [esi+1]
jmp	loc_688AB56D
mov	[esp+4Ch+Time],	edi
call	purple_time_format
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	ebx
call	g_string_append
lea	eax, [esi+1]
jmp	loc_688AB56D
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	ebx
call	g_string_append
lea	eax, [esi+1]
jmp	loc_688AB56D
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	ebx
call	g_string_insert_c
mov	eax, esi
jmp	loc_688AB56D
align 4
mov	[esp+4Ch+var_44], offset aStrNull_0 
mov	[esp+4Ch+var_48], offset aOscar_util_for 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_688AB5D0
align 4
mov	[esp+4Ch+var_44], offset aNameNull 
mov	[esp+4Ch+var_48], offset aOscar_util_for 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_688AB5D0
call	__stack_chk_fail
public oscar_format_buddies
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	loc_688AB76C
mov	[esp+3Ch+var_3C], offset byte_688B5FFB
call	g_string_new
mov	edi, eax
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+3Ch+var_3C], esi
call	purple_buddy_get_name
mov	ebp, eax
mov	[esp+3Ch+var_3C], esi
call	purple_buddy_get_alias_only
mov	esi, eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	g_string_append
test	esi, esi
jz	short loc_688AB72E
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aS_1 
mov	[esp+3Ch+var_3C], edi
call	g_string_append_printf
mov	[esp+3Ch+var_38], offset aBr_0 
mov	[esp+3Ch+var_3C], edi
call	g_string_append
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_688AB6F4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688AB790
mov	[esp+3Ch+arg_4], 0
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB790
mov	[esp+3Ch+arg_4], eax
mov	[esp+3Ch+arg_0], offset	aISI 
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup_printf
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_38], ecx
mov	eax, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_30], eax
movzx	edi, dx
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddies
mov	[esp+6Ch+var_3C], eax
test	eax, eax
jz	loc_688AB908
mov	[esp+6Ch+var_44], edi
mov	ebp, eax
xor	ebx, ebx
mov	edi, [ebp+0]
mov	[esp+6Ch+var_6C], edi
call	purple_buddy_get_name
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 0
mov	eax, [esi+0D8h]
mov	[esp+6Ch+var_6C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
jz	short loc_688AB843
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], ebx
call	g_slist_prepend
mov	ebx, eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_688AB804
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	g_slist_free
mov	[esp+6Ch+var_6C], ebx
call	g_slist_reverse
mov	esi, eax
mov	[esp+6Ch+var_68], offset aYouHaveNoBuddi 
mov	[esp+6Ch+var_6C], offset aPidgin_10 
call	libintl_dgettext
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	oscar_format_buddies
mov	ebx, eax
mov	[esp+6Ch+var_6C], esi
call	g_slist_free
mov	[esp+6Ch+var_68], offset aYouCanAddABudd 
mov	[esp+6Ch+var_6C], offset aPidgin_10 
call	libintl_dgettext
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_60], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_notify_formatted
mov	[esp+6Ch+var_6C], esi
call	g_free
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB90F
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
xor	ebx, ebx
jmp	loc_688AB84A
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+68h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_28], offset aInvisible_0 
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_status_active
cmp	eax, 1
sbb	ecx, ecx
not	ecx
add	ecx, 3
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+var_2C], eax
call	aim_ssi_itemlist_finditem
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688AB985
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	edi, eax
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	eax, [eax+68h]
mov	[esp], eax
call	purple_connection_get_account
mov	dword ptr [esp+4], offset aInvisible_0 
mov	[esp], eax
call	purple_account_is_status_active
cmp	eax, 1
sbb	ebx, ebx
not	ebx
add	ebx, 3
mov	edx, edi
mov	eax, esi
call	sub_688AB914
mov	[esp+8], ebx
mov	[esp+4], edi
mov	[esp], esi
test	eax, eax
jz	short loc_688ABA1C
call	aim_ssi_del_from_private_list
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688ABA23
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
call	aim_ssi_add_to_private_list
jmp	short loc_688ABA07
call	__stack_chk_fail
public create_visibility_menu_item
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+68h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_28], offset aInvisible_0 
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_status_active
mov	esi, eax
mov	edx, edi
mov	eax, ebx
call	sub_688AB914
test	esi, esi
jz	short loc_688ABA88
test	eax, eax
jz	short loc_688ABAEC
mov	[esp+2Ch+var_28], offset aDonTAppearOnli 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
jmp	short loc_688ABAA0
align 4
test	eax, eax
jnz	short loc_688ABAD4
mov	[esp+2Ch+var_28], offset aAppearOffline	
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
			
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset loc_688AB98C
mov	[esp+2Ch+var_2C], eax
call	purple_menu_action_new
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_688ABB02
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], offset aDonTAppearOffl 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
jmp	short loc_688ABAA0
align 4
mov	[esp+2Ch+var_28], offset aAppearOnline 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
jmp	short loc_688ABAA0
call	__stack_chk_fail
align 4
public oscar_show_visible_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aAppearOnline 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	edi, eax
mov	[esp+2Ch+var_28], offset aTheseBuddiesWi 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	esi, eax
mov	[esp+2Ch+var_28], offset aVisibleList 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	ebx, [ebx+0Ch]
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
mov	ecx, eax
mov	edx, 2
mov	eax, ebx
call	sub_688AB798
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688ABB88
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public oscar_show_invisible_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aAppearOffline	
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	edi, eax
mov	[esp+2Ch+var_28], offset aTheseBuddies_0 
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	esi, eax
mov	[esp+2Ch+var_28], offset aInvisibleList	
mov	[esp+2Ch+var_2C], offset aPidgin_10 
call	libintl_dgettext
mov	ebx, [ebx+0Ch]
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
mov	ecx, eax
mov	edx, 3
mov	eax, ebx
call	sub_688AB798
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_688ABC10
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
			
jmp	ds:g_direct_equal
align 10h
			
jmp	ds:g_direct_hash
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
			
jmp	ds:g_str_hash
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 10h
public TlsCallback_1
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
test	eax, eax
jz	short loc_688AC6D0
cmp	eax, 3
jz	short loc_688AC6D0
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
			
mov	edx, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], edx
mov	[esp+1Ch+var_1C], eax
call	sub_688ACD20
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
public TlsCallback_0
			
push	esi
push	ebx
sub	esp, 14h
cmp	ds:dword_688C1878, 2
mov	eax, [esp+1Ch+arg_4]
jz	short loc_688AC71C
mov	ds:dword_688C1878, 2
cmp	eax, 2
jz	short loc_688AC733
cmp	eax, 1
jz	short loc_688AC768
			
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	esi, offset dword_688C9014
sub	esi, offset dword_688C9014
sar	esi, 2
test	esi, esi
jle	short loc_688AC726
xor	ebx, ebx
mov	eax, ds:dword_688C9014[ebx*4]
test	eax, eax
jz	short loc_688AC754
call	eax 
add	ebx, 1
cmp	ebx, esi
jnz	short loc_688AC747
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	eax, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], 1
mov	[esp+1Ch+var_14], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_1C], eax
call	sub_688ACD20
jmp	short loc_688AC726
align 10h
xor	eax, eax
retn
align 10h
			
mov	eax, 1
retn	0Ch
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, ds:_iob
lea	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+Count], 17h 
mov	[esp+2Ch+Size],	1 
add	ebx, 40h
mov	[esp+2Ch+File],	ebx 
mov	[esp+2Ch+Str], offset aMingwRuntimeFa 
mov	[esp+2Ch+ArgList], eax
call	fwrite
mov	eax, [esp+2Ch+ArgList]
mov	[esp+2Ch+Str], ebx 
mov	[esp+2Ch+Count], eax 
mov	eax, [esp+2Ch+Format]
mov	[esp+2Ch+Size],	eax 
call	vfprintf
call	abort
align 10h
			
sub	esp, 5Ch
mov	[esp+5Ch+var_10], ebx
mov	ebx, eax
lea	eax, [esp+5Ch+Buffer]
mov	[esp+5Ch+dwLength], 1Ch	
mov	[esp+5Ch+lpBuffer], eax	
mov	[esp+5Ch+lpAddress], ebx 
mov	[esp+5Ch+var_C], esi
mov	esi, edx
mov	[esp+5Ch+var_8], edi
mov	edi, ecx
mov	[esp+5Ch+var_4], ebp
call	VirtualQuery
sub	esp, 0Ch
test	eax, eax
jz	loc_688AC906
mov	eax, [esp+5Ch+Buffer.Protect]
cmp	eax, 4
jnz	short loc_688AC880
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
call	memcpy
			
mov	ebx, [esp+5Ch+var_10]
mov	esi, [esp+5Ch+var_C]
mov	edi, [esp+5Ch+var_8]
mov	ebp, [esp+5Ch+var_4]
add	esp, 5Ch
retn
align 10h
cmp	eax, 40h
jz	short loc_688AC855
mov	eax, [esp+5Ch+Buffer.RegionSize]
lea	ebp, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], 40h	
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
mov	eax, [esp+5Ch+Buffer.Protect]
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
cmp	eax, 40h
setnz	[esp+5Ch+var_3E]
cmp	eax, 4
setnz	[esp+5Ch+var_3D]
call	memcpy
cmp	[esp+5Ch+var_3D], 0
jz	short loc_688AC865
cmp	[esp+5Ch+var_3E], 0
jz	short loc_688AC865
mov	eax, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], eax	
mov	eax, [esp+5Ch+Buffer.RegionSize]
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
jmp	loc_688AC865
mov	[esp+5Ch+dwLength], ebx
mov	[esp+5Ch+lpBuffer], 1Ch	
mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa 
call	sub_688AC7B0
align 10h
mov	eax, ds:dword_688C1870
test	eax, eax
jz	short loc_688AC930
retn
align 10h
mov	eax, offset dword_688B9608
sub	eax, offset dword_688B6488
cmp	eax, 7
mov	ds:dword_688C1870, 1
jle	short locret_688AC929
sub	esp, 2Ch
cmp	eax, 0Bh
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], esi
mov	[esp+2Ch+var_4], edi
jle	loc_688ACA40
mov	esi, ds:dword_688B6488
test	esi, esi
jnz	loc_688AC9F4
mov	ebx, ds:dword_688B648C
test	ebx, ebx
jnz	short loc_688AC9F4
mov	ecx, ds:dword_688B6490
mov	ebx, offset dword_688B6494
test	ecx, ecx
jz	loc_688ACA45
mov	ebx, offset dword_688B6488
mov	eax, [ebx+8]
cmp	eax, 1
jnz	loc_688ACAE4
			
add	ebx, 0Ch
cmp	ebx, offset dword_688B9608
jnb	loc_688ACA2F
movzx	edx, byte ptr [ebx+8]
mov	esi, [ebx+4]
mov	ecx, [ebx]
cmp	edx, 10h
lea	eax, [esi+68880000h]
mov	edi, [ecx+68880000h]
jz	loc_688ACA58
cmp	edx, 20h
jz	loc_688ACAC3
cmp	edx, 8
jz	loc_688ACA90
mov	dword ptr [esp+2Ch+var_28], edx	
mov	[esp+2Ch+Format], offset aUnknownPseudoR 
mov	[esp+2Ch+var_14], 0
call	sub_688AC7B0
			
mov	ebx, offset dword_688B6488
			
cmp	ebx, offset dword_688B9608
jnb	short loc_688ACA2F
mov	edx, [ebx+4]
mov	ecx, 4		
lea	eax, [edx+68880000h]
mov	edx, [edx+68880000h]
add	edx, [ebx]
add	ebx, 8
mov	[esp+2Ch+Src], edx
lea	edx, [esp+2Ch+Src] 
call	sub_688AC810
cmp	ebx, offset dword_688B9608
jb	short loc_688ACA01
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn
align 10h
mov	ebx, offset dword_688B6488
mov	edx, [ebx]
test	edx, edx
jnz	short loc_688AC9F9
mov	eax, [ebx+4]
test	eax, eax
jz	loc_688AC991
jmp	short loc_688AC9F9
movzx	esi, word ptr [esi+68880000h]
test	si, si
movzx	edx, si
jns	short loc_688ACA6D
or	edx, 0FFFF0000h
sub	edx, ecx
mov	ecx, 2		
sub	edx, 68880000h
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_688AC810
jmp	loc_688AC99D
align 10h
movzx	edx, byte ptr [eax]
test	dl, dl
movzx	esi, dl
jns	short loc_688ACAA0
or	esi, 0FFFFFF00h
mov	edx, esi
sub	edx, 68880000h
sub	edx, ecx
mov	ecx, 1		
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_688AC810
jmp	loc_688AC99D
add	ecx, 68880000h
sub	edi, ecx
mov	ecx, 4		
add	edi, [eax]
lea	edx, [esp+2Ch+var_14] 
mov	[esp+2Ch+var_14], edi
call	sub_688AC810
jmp	loc_688AC99D
mov	dword ptr [esp+2Ch+var_28], eax	
mov	[esp+2Ch+Format], offset aUnknownPseud_0 
call	sub_688AC7B0
align 10h
mov	eax, off_688AD204
mov	eax, [eax]
test	eax, eax
jz	short locret_688ACB2A
sub	esp, 0Ch
xchg	ax, ax
call	eax
mov	eax, off_688AD204
lea	edx, [eax+4]
mov	eax, [eax+4]
mov	off_688AD204, edx
test	eax, eax
jnz	short loc_688ACB10
add	esp, 0Ch
rep retn
align 10h
push	ebx
sub	esp, 18h
mov	ebx, ds:dword_688ACF1C
cmp	ebx, 0FFFFFFFFh
jz	short loc_688ACB63
test	ebx, ebx
jz	short loc_688ACB52
call	ds:dword_688ACF1C[ebx*4]
sub	ebx, 1
lea	esi, [esi+0]
jnz	short loc_688ACB43
mov	[esp+1Ch+var_1C], offset loc_688ACB00
call	sub_68881160
add	esp, 18h
pop	ebx
retn
xor	ebx, ebx
jmp	short loc_688ACB69
mov	ebx, eax
lea	eax, [ebx+1]
mov	edx, ds:dword_688ACF1C[eax*4]
test	edx, edx
jnz	short loc_688ACB67
jmp	short loc_688ACB3F
align 10h
mov	ecx, ds:dword_688C1874
test	ecx, ecx
jz	short loc_688ACB90
rep retn
align 10h
mov	ds:dword_688C1874, 1
jmp	short loc_688ACB30
align 10h
			
push	esi
push	ebx
sub	esp, 14h
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	EnterCriticalSection
mov	ebx, ds:dword_688C1898
sub	esp, 4
test	ebx, ebx
jz	short loc_688ACBEB
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+1Ch+lpCriticalSection], eax 
call	TlsGetValue
sub	esp, 4
mov	esi, eax
call	GetLastError
test	eax, eax
jnz	short loc_688ACBE4
test	esi, esi
jz	short loc_688ACBE4
mov	eax, [ebx+4]
mov	[esp+1Ch+lpCriticalSection], esi
call	eax
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_688ACBC0
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	LeaveCriticalSection
sub	esp, 4
add	esp, 14h
pop	ebx
pop	esi
retn
sub	esp, 1Ch
mov	eax, ds:dword_688C187C
mov	[esp+18h], esi
xor	esi, esi
mov	[esp+14h], ebx
test	eax, eax
jnz	short loc_688ACC24
mov	eax, esi
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	dword ptr [esp+4], 0Ch
mov	dword ptr [esp], 1
call	calloc
test	eax, eax
mov	ebx, eax
jz	short loc_688ACC85
mov	eax, [esp+20h]
mov	dword ptr [esp], offset	CriticalSection
mov	[ebx], eax
mov	eax, [esp+24h]
mov	[ebx+4], eax
call	EnterCriticalSection
mov	eax, ds:dword_688C1898
mov	ds:dword_688C1898, ebx
mov	[ebx+8], eax
sub	esp, 4
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
mov	eax, esi
sub	esp, 4
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	esi, 0FFFFFFFFh
jmp	short loc_688ACC16
align 10h
push	ebx
sub	esp, 18h
mov	eax, ds:dword_688C187C
mov	ebx, [esp+20h]
test	eax, eax
jnz	short loc_688ACCA8
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	dword ptr [esp], offset	CriticalSection
call	EnterCriticalSection
mov	edx, ds:dword_688C1898
sub	esp, 4
test	edx, edx
jz	short loc_688ACCDF
mov	eax, [edx]
cmp	eax, ebx
jnz	short loc_688ACCD8
jmp	short loc_688ACD14
align 10h
mov	ecx, [eax]
cmp	ecx, ebx
jz	short loc_688ACCF5
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_688ACCD0
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	ecx, [eax+8]
mov	[edx+8], ecx
mov	[esp], eax
call	free
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
jmp	short loc_688ACCEE
mov	eax, [edx+8]
mov	ds:dword_688C1898, eax
mov	eax, edx
jmp	short loc_688ACCFB
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
cmp	eax, 1
jz	short loc_688ACD70
jb	short loc_688ACD40
cmp	eax, 3
jz	short loc_688ACD90
			
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_688C187C
test	eax, eax
jnz	short loc_688ACDB1
mov	eax, ds:dword_688C187C
cmp	eax, 1
jnz	short loc_688ACD33
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
mov	ds:dword_688C187C, 0
call	DeleteCriticalSection
sub	esp, 4
jmp	short loc_688ACD33
align 10h
mov	eax, ds:dword_688C187C
test	eax, eax
jz	short loc_688ACDA0
mov	ds:dword_688C187C, 1
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_688C187C
test	eax, eax
jz	short loc_688ACD33
call	sub_688ACBA0
jmp	short loc_688ACD33
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	InitializeCriticalSection
sub	esp, 4
jmp	short loc_688ACD79
call	sub_688ACBA0
jmp	short loc_688ACD49
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
push	ebp
mov	ebp, esp
sub	esp, 18h
call	sub_688811C0
mov	[esp+18h+var_18], offset sub_6888124C
call	sub_68881160
leave
retn
align 4
			
dd offset sub_688ACF00
align 8
dd 0FFFFFFFFh
assume cs:_data

			
			
			
dd 0
dd offset aBusy		
dd offset aBusy_0	
align 8
dd offset aShopping	
dd offset aShopping_0	
dd 0
dd offset aTyping	
align 10h
dd offset aQuestion	
dd offset aQuestioning	
dd 0
dd offset aAngry	
dd offset aAngry_0	
align 8
dd offset aPlate	
dd offset aEating	
dd 0
dd offset aCinema	
dd offset aWatchingAMovie 
align 10h
dd offset aSick		
dd offset aSick_0	
dd 0
dd offset aTyping	
dd offset aTyping_0	
align 8
dd offset aSuit		
dd offset aAtTheOffice	
dd 0
dd offset aBathing	
dd offset aTakingABath	
align 10h
dd offset aTv		
dd offset aWatchingTv	
dd 0
dd offset aExcited	
dd offset aHavingFun	
align 8
dd offset aSleeping	
dd offset aSleeping_0	
dd 0
dd offset aHiptop_1	
dd offset aUsingAPda	
align 10h
dd offset aIn_love	
dd offset aInLove	
dd 0
dd offset aSleepy	
dd offset aSleepy_0	
align 8
dd offset aMeeting	
dd offset aMeetingFriends 
dd 0
dd offset aPhone	
dd offset aOnThePhone	
align 10h
dd offset aSurfing	
dd offset aSurfing_0	
dd 0
dd offset aMobile_1	
dd offset aMobile_2	
align 8
dd offset aSearch	
dd offset aSearchingTheWe 
dd 0
dd offset aParty	
dd offset aAtAParty	
align 10h
dd offset aCoffee	
dd offset aHavingCoffee	
dd 0
dd offset aConsole	
dd offset aGaming	
align 8
dd offset aInternet	
dd offset aBrowsingTheWeb 
dd 0
dd offset aCigarette	
dd offset aSmoking	
align 10h
dd offset aWriting	
dd offset aWriting_0	
dd 0
dd offset aBeer		
dd offset aDrinking	
align 8
dd offset aMusic	
dd offset aListeningToMus 
dd 0
dd offset aStudying	
dd offset aStudying_0	
align 10h
dd offset aWorking	
dd offset aWorking_0	
dd 0
dd offset aRestroom	
dd offset aInTheRestroom 
align 40h
			
dd 50109h, 1, 0BDCh, 611h
dd offset aUs		
dd offset aEn_0		
			
dd 14010Ah, 34h, 0C18h,	611h
dd offset aUs		
dd offset aEn_0		
			
dd 2
			
			
align 1000h
assume cs:_rdata

			
align 4
			
			
align 4
			
			
			
			
align 4
align 4
			
align 10h
			
			
			
			
			
			
			
			
align 4
			
			
			
align 4
			
			
align 10h
			
			
			
align 4
			
			
			
			
align 4
			
			
			
align 10h
			
			
			
			
align 4
			
db 'en minutes and try again. If you continue to try, you will need t'
db 'o wait even longer.',0
align 4
			
			
			
			
db 'o BOS.',0Ah,0
align 4
			
align 4
			
db 'servers doesn',27h,'t support it.',0
			
			
align 10h
			
			
align 4
			
			
			
db ' but this client does not currently support CAPTCHAs.',0
align 10h
			
align 4
			
			
			
align 4
			
align 10h
			
db 'Connection: close',0Dh,0Ah
db 'Accept: */*',0Dh,0Ah,0
align 4
			
db 0
db 0Dh,0Ah,0
			
			
align 4
			
			
dd offset aHttpsApi_login 
			
			
align 4
			
			
dd offset aHttpsApi_icq_n 
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
db 'eaking with is probably using a different encoding than expected.'
db '  If you know what encoding he is using, you can specify it in th'
db 'e advanced account options for your AIM/ICQ account.)',0
			
			
			
			
			
			
db 'choice3=%s',0Ah,0
align 10h
			
db 've different encodings selected, or %s has a buggy client.)',0
align 4
align 4
align 10h
align 4
align 4
			
			
			
align 10h
			
			
align 4
			
db 'm=%04x)',0Ah,0
align 10h
			
			
			
db '%08x)',0Ah,0
			
db 'request! (fam=%04x)',0Ah,0
align 4
			
align 4
			
align 4
			
			
align 4
			
			
			
align 4
			
align 10h
align 10h
			
			
			
align 4
db '%s',0
			
align 10h
			
db '%s',0
align 10h
			
align 4
			
db 0Ah,0
align 4
			
			
align 10h
			
db '-8',0Ah,0
align 4
			
align 4
			
align 10h
			
db 0Ah,0
align 4
			
			
db 0
align 4
			
db ' valid UTF-8',0Ah,0
			
align 20h
align 4
			
dd 1
dd offset aGroup	
dd 2
dd offset aPermitVisible 
dd 3
dd offset aDenyInvisible 
dd 4
dd offset aPdinfo	
dd 5
dd offset aPresenceprefs 
dd 6
dd offset aNonBuddyInfo	
dd 9
dd offset aClientprefs	
dd 0Eh
dd offset aIcqdenyIgnore 
dd 14h
dd offset aBuddyIcon_0	
dd 15h
dd offset aRecentBuddies 
dd 19h
dd offset aNonBuddy	
dd 1Dh
dd offset aVanityInfo	
dd 20h
dd offset aIcqMdir	
dd 29h
dd offset aFacebook	
align 10h
			
			
align 4
			
			
db 0
align 4
			
			
			
align 4
align 4
align 10h
			
db 'are probably trying to do something malicious.',0Ah,0
align 4
			
			
align 10h
			
align 10h
			
align 10h
			
align 10h
			
db '= %04x)',0Ah,0
			
			
align 4
			
			
align 4
			
db 'gt
db 'q&gt
db '
db '</N>',0Dh,0Ah,0
align 4
			
db '
db '&lt
db 'ge&gt
db 'itle&gt
db 'lt
db '&gt
db '
align 10h
			
			
			
dd 4C491346h, 82D1117Fh, 53454422h, 54h, 3 dup(0)
dw 1Bh,	0Ah, 0
align 4
dd 3 dup(0)
dd 30000h, 0F9000000h, 0F9000ED1h, 0D1h, 2 dup(0)
dd 1A00h, 1000100h, 4F0000h, 0EFB3603Bh, 456C2AD8h, 5A9CE0A4h
dd 65E8675Eh, 2A0008h, 63530000h, 74706972h, 756C5020h
dd 6E692D67h, 6552203Ah, 65746F6Dh, 746F4E20h, 63696669h
dd 6F697461h, 7241206Eh, 65766972h, 10000h, 2 dup(0)
dd 14000000h, 10000001h, 1, 4 dup(0)
dw 1Bh,	9, 0
align 4
dd 3 dup(0)
dd 10000h, 0F9000000h, 0F9000ED1h, 0D1h, 2 dup(0)
dd 1A00h, 1000000h, 4F0000h, 0EFB3603Bh, 456C2AD8h, 5A9CE0A4h
dd 65E8675Eh, 2A0008h, 63530000h, 74706972h, 756C5020h
dd 6E692D67h, 6552203Ah, 65746F6Dh, 746F4E20h, 63696669h
dd 6F697461h, 7241206Eh, 65766972h, 10000h, 2 dup(0)
dd 0F3000000h, 0EF000001h
db 1, 2	dup(0)
align 4
			
align 4
			
align 10h
align 4
align 4
align 4
align 4
align 4
align 10h
			
			
dd offset aNotLoggedIn	
dd offset aCannotReceiveI 
dd offset aCannotSendSmsW 
dd offset aCannotSendSms 
dd offset aCannotSendSmsT 
dd offset aUnknownError_0 
dd offset aUnknownError_0 
dd offset aCannotSendSm_0 
dd offset aBotAccountsCan 
dd offset aBotAccountCann 
dd offset aBotAccountReac 
dd offset aBotAccountRe_0 
dd offset aBotAccountRe_1 
dd offset aUnableToReceiv 
dd offset aOfflineMessage 
dd 11h,	5, 13h,	20h, 3 dup(0)
			
			
			
			
			
			
			
			
align 4
			
db 'epage>1252</codepage><senders_UIN>%s</senders_UIN><senders_name>%'
db 's</senders_name><delivery_receipt>Yes</delivery_receipt><time>%s<'
db '/time></icq_sms_message>',0
align 10h
			
			
align 4
			
db '%02x%02x%02x%02x%02x%02x}',0Ah,0
			
			
			
			
align 10h
			
align 4
			
align 4
			
db '!',0Ah,0
align 20h
			
dd 0D1117F4Ch, 45442282h, 5453h
			
dd 1004609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h, 0
dd 2004609h, 0D1117F4Ch, 45442282h, 5453h, 800000h, 0
dd 14609h, 0D1117F4Ch, 45442282h, 5453h, 2000000h, 0
dd 1014609h, 0D1117F4Ch, 45442282h, 5453h, 4000000h, 0
dd 2014609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h, 0
dd 3014609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h, 0
dd 4014609h, 0D1117F4Ch, 45442282h, 5453h, 1000000h, 0
dd 5014609h, 0D1117F4Ch, 45442282h, 545345h, 80000000h
dd 0
dd 0A014609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h
dd 0
dd 0B014609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h
dd 0
dd 0FF014609h, 0D1117F4Ch, 45442282h, 5453h, 100000h, 0
dd 23134609h, 0D1117F4Ch, 45442282h, 5453h, 2, 0
dd 41134609h, 0D1117F4Ch, 45442282h, 5453h, 20h, 0
dd 43134609h, 0D1117F4Ch, 45442282h, 5453h, 400h, 0
dd 44134609h, 0D1117F4Ch, 45442282h, 5453h, 4, 0
dd 45134609h, 0D1117F4Ch, 45442282h, 5453h, 1, 0
dd 46134609h, 0D1117F4Ch, 45442282h, 5453h, 80h, 0
dd 47134609h, 0D1117F4Ch, 45442282h, 5453h, 10h, 0
dd 48134609h, 0D1117F4Ch, 45442282h, 5453h, 4000h, 0
dd 49134609h, 0D1117F4Ch, 45442282h, 5453h, 40h, 0
dd 4A134609h, 0D1117F4Ch, 45442282h, 5453h, 200h, 0
dd 4A134609h, 0D1117F4Ch, 45448222h, 5453h, 20000000h
dd 0
dd 4609h, 0D1117F4Ch, 45442282h, 5453h,	40000000h, 0
dd 6C3C091Ah, 0C54EFDD7h, 47A6519Dh, 0A0F5344Eh, 100h
dd 0
dd 4B134609h, 0D1117F4Ch, 45442282h, 5453h, 40000h, 0
dd 4D134609h, 0D1117F4Ch, 45442282h, 5453h, 20000h, 0
dd 4E134609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h
dd 0
dd 3F04609h, 0D1117F4Ch, 45442282h, 5453h, 8000000h, 0
dd 4F04609h, 0D1117F4Ch, 45442282h, 5453h, 80000000h, 0
dd 5F04609h, 0D1117F4Ch, 45442282h, 5453h, 8000h, 0
dd 75647A2Eh, 0C84DDFFAh, 35EA6F88h, 0DFB6FD95h, 10000000h
dd 0
dd 9C83F56h, 0BD416F0Bh, 2642799Fh, 0F3A2DF09h,	8, 0
dd 20248F74h, 0D1118762h, 45442282h, 5453h, 80000000h
dd 0
dd 5127B197h, 34433C24h, 0ABD622ADh, 9143FF7h, 1000h, 0
dd 5127B197h, 34433C24h, 0ABD622ADh, 92143FF7h,	800h, 0
dd 0B5324AAAh, 0C64884F8h, 508CD7A3h, 5BFD1997h, 10000h
dd 0
dd 0F4C7E7F2h, 0FB4DADFEh, 793635B2h, 0DF8Bh, 2000h, 6 dup(0)
dd 1, 7BCA3801h, 15499A76h, 0FC13F288h,	0A89E9700h, 0
dd 2, 4	dup(0)
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
dd offset aIcqmood1	
dd offset aBathing	
dd offset aIcqmood2	
dd offset aSleepy	
dd offset aIcqmood3	
dd offset aParty	
dd offset aIcqmood4	
dd offset aBeer		
dd offset aIcqmood5	
dd offset aThinking	
dd offset aIcqmood6	
dd offset aPlate	
dd offset aIcqmood7	
dd offset aTv		
dd offset aIcqmood8	
dd offset aMeeting	
dd offset aIcqmood9	
dd offset aCoffee	
dd offset aIcqmood10	
dd offset aMusic	
dd offset aIcqmood11	
dd offset aSuit		
dd offset aIcqmood12	
dd offset aCinema	
dd offset aIcqmood13	
dd offset aSmileBig	
dd offset aIcqmood14	
dd offset aPhone	
dd offset aIcqmood15	
dd offset aConsole	
dd offset aIcqmood16	
dd offset aStudying	
dd offset aIcqmood17	
dd offset aSick		
dd offset aIcqmood18	
dd offset aSleeping	
dd offset aIcqmood19	
dd offset aSurfing	
dd offset aIcqmood20	
dd offset aInternet	
dd offset aIcqmood21	
dd offset aWorking	
dd offset aIcqmood22	
dd offset aTyping	
dd offset aIcqmood23	
dd offset aAngry	
dd 2 dup(0)
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
dd 89148E48h, 84ACA8Ah,	0CE77AA82h, 852167Ah
dd offset aShopping	
dd 37736263h, 0FF493FA0h, 9F7E580h, 0EEA4E0CDh
dd offset aTyping	
dd 0D86B4F63h, 0A14AD2ADh, 5B11B9AAh, 0A1056DC2h
dd offset aQuestion	
dd 0FF361463h, 0D0408A3Fh, 667BCBA5h, 64B351E0h
dd offset aAngry	
dd 0EED7D801h, 2A493BACh, 0D8D38DA5h, 926BE677h
dd offset aPlate	
dd 0B2D7E8F8h, 4241C482h, 0C610F890h, 0A6890ACEh
dd offset aCinema	
dd 189A7A10h, 0A44D3212h, 7908CDB6h, 90F78DBh
dd offset aSick		
dd 71407A1Fh, 604E3BBFh, 574C32BCh, 0F14CB087h
dd offset aTyping	
dd 0E5E4E02Ch, 7043647Ch, 1C7A3A9Ch, 0DCA778E8h
dd offset aSuit		
dd 0F56708B7h, 27432538h, 4CCFFFA1h, 979793C1h
dd offset aBathing	
dd 0A11E585Ah, 0C4380E5h, 22616FA0h, 0C7E4B798h
dd offset aTv		
dd 0E27D5380h, 764A67A4h, 0FD6D54B3h, 0C65E5F07h
dd offset aExcited	
dd 9830496Fh, 0FF4A7C4Fh, 0A03476A2h, 0A7AECE3Bh
dd offset aSleeping	
dd 488C5E78h, 654CD340h, 0CF046F88h, 0DF433F3Fh
dd offset aHiptop_1	
dd 0C9171110h, 0F940B0A3h, 0E149AC81h, 0D4D5FB59h
dd offset aIn_love	
dd 0A90ECFDDh, 48409571h, 3241C6A9h, 80F2D606h
dd offset aSleepy	
dd 8EB7C983h, 7843E777h, 6CFBC5B2h, 0EC5BC3FCh
dd offset aMeeting	
dd 2EB58AF1h, 1D4957DCh, 4464DC99h, 0AF572450h
dd offset aPhone	
dd 50E59212h, 664F641Bh, 9AB206B2h, 8DE478F3h
dd offset aSurfing	
dd 7E55EDA6h, 0D444F76Bh, 0E7D2D4A5h, 1FE85CD9h
dd offset aMobile_1	
dd 0BB600C16h, 0F34344DDh, 0F054091h, 9C0E600h
dd offset aSearch	
dd 0BAB0E2D4h, 0A54F4E33h, 7D11D098h, 0C83C4DBFh
dd offset aParty	
dd 1CE401E6h, 0D14B7333h, 1D8106BCh, 813D326Ch
dd offset aCoffee	
dd 31AE781Bh, 384D0BFAh, 7E99D193h, 18B2AFEEh
dd offset aConsole	
dd 0D011A6D4h, 0C04E018Fh, 0B6C52392h, 0F0CCC6BEh
dd offset aInternet	
dd 3E7ED012h, 9E4885F8h, 2AA7978Eh, 8DE55165h
dd offset aCigarette	
dd 0AFC64364h, 17456022h, 0DFD78CB5h, 5203298Eh
dd offset aWriting	
dd 8D97200h, 0DD43D14Ah, 26F9991h, 6F026669h
dd offset aBeer		
dd 0AEDB508Ch, 8647ED81h, 0CC16CAACh, 0B7C71332h
dd offset aMusic	
dd 0DDE0BE61h, 5D47DD8Bh, 4B5FEE8Dh, 0A719CFAAh
dd offset aStudying	
dd 0F8529D60h, 0A6499AA2h, 2425A0B2h, 60D2E9C5h
dd offset aWorking	
dd 3EDB74BAh, 4B43249Eh, 6B2FB687h, 0FE5FE8Dh
dd offset aRestroom	
dd 6FB7F516h, 3540D2A9h, 84C0C58Ch, 0FA983C70h,	5 dup(0)
			
align 10h
			
			
db ', clear warning at %u, limit at %u, disconnect at %u, delta is %u'
db ', dropping is %u (window size = %u)',0Ah,0
			
align 4
			
db 'are over the rate limit. Please wait 10 seconds and try again.',0Ah,0
align 4
			
align 10h
			
db 0
align 4
			
			
align 10h
			
			
dd offset aChange_0	
dd offset aWarning	
dd offset aLimit	
dd offset aLimitCleared	
align 10h
align 4
			
align 4
			
			
			
db '  Closing connection.',0Ah,0
align 4
			
db 'son is %d',0Ah,0
			
			
align 10h
			
align 4
			
db 'ing',0Ah,0
align 10h
			
db 'Cs for %p',0Ah,0
align 4
			
db 'length=%u',0Ah,0
			
			
			
			
align 4
			
align 4
			
			
align 4
			
align 4
			
db 'd length=%u',0Ah,0
align 4
			
align 10h
			
align 4
			
db 'you a message! *squeal*',0Ah,0
align 4
			
db 'over Direct IM.  Try using file transfer instead.',0Ah,0
			
align 4
			
align 4
			
align 10h
			
align 10h
			
align 4
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
align 4
			
db 'king on them and selecting "Re-request Authorization."',0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 10h
			
align 4
			
align 4
			
db 'rity risk.  Do you wish to continue?',0
			
align 4
			
align 4
			
db 'procedure completed.  Your profile remains unset
db 'again when you are fully connected.',0
align 10h
			
db ' been truncated for you.',0
align 4
			
db 'been truncated for you.',0
			
			
db 't has been truncated for you.',0
align 4
			
db ' has been truncated for you.',0
			
align 4
			
align 4
			
align 4
			
align 4
			
			
			
			
align 4
			
			
			
			
align 4
align 10h
align 4
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
db 'xceeded.',0
align 4
			
db 'ceeded.',0
align 10h
			
db 'too high.',0
align 4
			
db 'oo high.',0
align 4
			
db ' high.',0
			
db 'high.',0
align 4
			
align 10h
			
align 4
dd offset loc_6889B124	
dd offset loc_6889B144
dd offset loc_6889B0C4
dd offset loc_6889B0E4
			
			
align 4
			
db 'st.',0
			
			
db 't for the following reason:',0Ah
db '%s',0
align 4
			
			
			
db 'ddy list.  Do you want to add this user?',0
align 10h
			
			
			
db 'our buddy list.  Please remove one and try again.',0
			
align 4
			
align 4
			
			
align 4
			
			
align 10h
			
			
align 4
			
align 4
			
align 4
			
db '=%s, email=%s',0Ah,0
			
db 'e differs from the original.',0
align 4
			
align 4
			
db 'e is too long.',0
			
db 'eady a request pending for this username.',0
align 4
			
db 'dress has too many usernames associated with it.',0
align 4
			
db 'dress is invalid.',0
			
db 0
align 4
align 4
			
align 4
			
			
			
align 4
			
			
			
align 4
			
db 'servers doesn',27h,'t support it.',0
align 4
			
			
align 4
			
align 10h
			
align 4
			
			
align 4
			
			
align 4
align 4
			
align 4
			
db 'HTTP/1.0',0Ah
db 0Ah,0
			
align 4
			
db '%i bytes',0Ah,0
align 10h
			
db '.php3--that',27h,'s bad.',0Ah,0
			
db ' 0x%04x and event is 0x%04hx.',0Ah,0
			
align 4
			
align 10h
			
align 4
			
			
align 4
			
			
			
align 4
			
db 'y %s, group %s',0Ah,0
align 4
			
db ' Your buddy list is not lost, and will probably become available '
db 'in a few minutes.',0
align 10h
			
db 0
			
align 4
			
			
align 4
			
db 'itmsurl = ',27h,'%s',27h,0Ah,0
align 4
			
align 10h
			
align 4
			
db 'rrent formatting according to the server (%s) appears to be an em'
db 'ail address',0Ah,0
align 4
			
db '.',0
align 4
			
align 10h
			
			
align 10h
			
db 'y. Wait ten minutes and try again. If you continue to try, you wi'
db 'll need to wait even longer.',0
align 10h
			
db 0
align 4
			
db 'tly. Wait a minute and try again. If you continue to try, you wil'
db 'l need to wait even longer.',0
align 4
db 'Email: %s',0Ah
db 'BOSIP: %s',0Ah,0
			
			
dd offset loc_6889E780	
dd offset loc_6889E750
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E72C
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E71C
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E750
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E810
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E4EC
dd offset loc_6889E7B0
dd offset loc_6889E6EC
align 10h
			
align 4
			
			
			
			
			
			
			
			
			
align 4
			
db ' from %s.',0Ah,0
			
			
align 4
			
db 0
align 4
			
			
			
align 10h
			
align 4
			
align 4
			
			
			
db 0
			
			
align 4
			
db 't for the following reason:',0Ah
db '%s',0
align 4
			
db 'st.',0
align 4
db 0Ah
db 'From: %s [%s]',0Ah
db '%s',0
align 4
db 0Ah
db 'From: %s [%s]',0Ah
db '%s',0
align 4
			
db 0Ah
db 'Message is:',0Ah
db '%s',0
align 4
			
align 10h
			
			
align 10h
			
align 10h
			
align 4
dd offset loc_688A044E	
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_688A03AF
dd offset loc_6889FBFB
dd offset loc_688A0308
dd offset loc_688A0295
dd offset loc_688A01EE
dd offset loc_688A018C
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_688A0233
dd offset loc_688A0106
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FC14
dd offset loc_6889FED4
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FBFB
dd offset loc_6889FE2A
			
align 10h
			
align 4
			
db 'es must be a valid email address, or start with a letter and cont'
db 'ain only letters, numbers and spaces, or contain only numbers.',0
			
align 10h
			
db 'is not supported by your system.',0
			
			
			
			
align 10h
			
			
align 4
align 4
align 4
			
			
db 'IM Images.',0
			
align 4
			
			
			
align 10h
			
align 4
			
db 'names must be a valid email address, or start with a letter and c'
db 'ontain only letters, numbers and spaces, or contain only numbers.'
db 0
			
align 4
			
align 4
			
align 4
			
			
align 4
align 4
			
			
align 10h
align 4
			
db 's.',0
			
align 4
			
			
align 4
			
			
			
align 4
			
align 4
			
db 'me',0Ah,0
align 4
			
			
align 10h
			
align 4
			
align 4
dd offset loc_688A4C88	
dd offset loc_688A4C40
dd offset loc_688A4BF8
dd offset loc_688A4B8C
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4AD8
dd offset loc_688A4BF8
			
			
align 4
			
align 4
align 4
			
			
align 10h
db 'file transfers and direct IM (slower,',0Ah
db 'but does not reveal your IP address)',0
			
align 4
align 4
			
			
dd offset aSlogin_oscar_a 
dd offset aLogin_icq_com 
			
			
			
			
			
align 10h
			
dd offset aRequireEncrypt 
dd offset aDonTUseEncrypt 
align 10h
			
dd offset aRequire_encryp 
dd offset aNo_encryptio_0 
align 10h
align 10h
			
db '04x), ',0
			
db 'c%c%c%c.  Closing connection.',0Ah,0
			
align 4
			
align 10h
			
			
			
align 4
			
db '(%s) returned NULL. fd=%d. is_ssl=%d',0Ah,0
			
			
db 0Ah,0
align 4
			
align 10h
			
align 4
			
			
db 'n.',0Ah,0
align 4
			
align 4
			
			
db 's necessary for IM Images.  Because your IP address will be revea'
db 'led, this may be considered a privacy risk.',0
align 4
			
db 's=0x%04hx, and payload length=%u',0Ah,0
			
align 10h
			
			
align 4
			
			
			
db ' Closing connection.',0Ah,0
align 4
			
db 's=0x%04hx, and payload length=%u',0Ah,0
align 4
			
align 10h
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
align 4
align 20h
			
dd offset aInvalidSnac	
dd offset aServerRateLimi 
dd offset aClientRateLimi 
dd offset aNotLoggedIn_0 
dd offset aServiceUnavail 
dd offset aServiceNotDefi 
dd offset aObsoleteSnac	
dd offset aNotSupportedBy 
dd offset aNotSupported_0 
dd offset aRefusedByClien 
dd offset aReplyTooBig	
dd offset aResponsesLost 
dd offset aRequestDenied 
dd offset aBustedSnacPayl 
dd offset aInsufficientRi 
dd offset aInLocalPermitD 
dd offset aWarningLevelTo 
dd offset aWarningLevel_0 
dd offset aUserTemporaril 
dd offset aNoMatch	
dd offset aListOverflow	
dd offset aRequestAmbiguo 
dd offset aQueueFull	
dd offset aNotWhileOnAol 
			
align 10h
			
			
db 'lecting "%s"',0
			
			
			
			
			
align 4
			
db 0
align 4
			
			
align 4
			
align 4
			
align 4
dd 2C95Eh
			
			
dd 20h,	45CD0h,	13E6h, 20h, 45CD0h, 1425h, 20h,	45CD0h
dd 145Eh, 20h, 45CD0h, 148Ch, 20h, 45CD0h, 1536h, 20h
dd 45CD0h, 160Eh, 20h, 45CD0h, 1647h, 20h, 45CD0h, 16A4h
dd 20h,	45CD0h,	1732h, 20h, 45CD0h, 1756h, 20h,	45CD0h
dd 1780h, 20h, 45CD0h, 17AAh, 20h, 45CD0h, 17CCh, 20h
dd 45CD0h, 17EDh, 20h, 45CD0h, 17FDh, 20h, 45CD0h, 1820h
dd 20h,	45CD0h,	1836h, 20h, 45CD0h, 184Ch, 20h,	45CD0h
dd 1863h, 20h, 45CD0h, 1881h, 20h, 45CD0h, 1899h, 20h
dd 45CD0h, 18D0h, 20h, 45CD0h, 18F4h, 20h, 45CD0h, 1913h
dd 20h,	45CD0h,	1953h, 20h, 45CD0h, 1999h, 20h,	45CD0h
dd 19BCh, 20h, 45CD0h, 19F9h, 20h, 45CD0h, 1A2Ch, 20h
dd 45CD0h, 1A6Ah, 20h, 45CD0h, 1AB1h, 20h, 45CD0h, 1AEDh
dd 20h,	45CD0h,	1B10h, 20h, 45CD0h, 1B4Dh, 20h,	45CD0h
dd 1B80h, 20h, 45CD0h, 1BBFh, 20h, 45CD0h, 1C06h, 20h
dd 45CD0h, 1C50h, 20h, 45CD0h, 1C77h, 20h, 45CD0h, 1CBCh
dd 20h,	45CD0h,	1CECh, 20h, 45CD0h, 1D34h, 20h,	45CD0h
dd 1D6Bh, 20h, 45CD0h, 1DB2h, 20h, 45CD0h, 1DD7h, 20h
dd 45CD0h, 1E1Bh, 20h, 45CD0h, 1E55h, 20h, 45CD0h, 1E9Bh
dd 20h,	45CD0h,	1EF0h, 20h, 45CD0h, 1F32h, 20h,	45CD0h
dd 1F57h, 20h, 45CD0h, 1F9Ah, 20h, 45CD0h, 1FD2h, 20h
dd 45CD0h, 2017h, 20h, 45CD0h, 206Ah, 20h, 45CD0h, 20B4h
dd 20h,	45CD0h,	20DDh, 20h, 45CD0h, 211Dh, 20h,	45CD0h
dd 214Dh, 20h, 45CD0h, 2175h, 20h, 45CD0h, 21D0h, 20h
dd 45CD0h, 2211h, 20h, 45CD0h, 2240h, 20h, 45CD0h, 2270h
dd 20h,	45CD0h,	22A7h, 20h, 45CD0h, 22F2h, 20h,	45CD0h
dd 232Dh, 20h, 45CD0h, 2365h, 20h, 45CD0h, 23ECh, 20h
dd 45CD0h, 245Eh, 20h, 45CD0h, 24CFh, 20h, 45CD0h, 256Fh
dd 20h,	45CD0h,	25A8h, 20h, 45CD0h, 2620h, 20h,	45CD0h
dd 2C40h, 20h, 45CD0h, 2CA8h, 20h, 45CD0h, 2EDEh, 20h
dd 45CD0h, 300Eh, 20h, 45CD0h, 339Fh, 20h, 45CD0h, 3444h
dd 20h,	45CD0h,	35E6h, 20h, 45CD0h, 3644h, 20h,	45CD0h
dd 3740h, 20h, 45CD0h, 37D4h, 20h, 45CD0h, 3864h, 20h
dd 45CD0h, 38D4h, 20h, 45CD0h, 3986h, 20h, 45CD0h, 3AF3h
dd 20h,	45CD0h,	3B2Eh, 20h, 45CD0h, 3B90h, 20h,	45CD0h
dd 3BA6h, 20h, 45CD0h, 3BE9h, 20h, 45CD0h, 3C9Fh, 20h
dd 45CD0h, 3E9Ah, 20h, 45CD0h, 3F15h, 20h, 45CD0h, 3F7Fh
dd 20h,	45CD0h,	3FABh, 20h, 45CD0h, 41C0h, 20h,	45CD0h
dd 4211h, 20h, 45CD0h, 42ADh, 20h, 45CD0h, 42D4h, 20h
dd 45CD0h, 439Eh, 20h, 45CD0h, 43D4h, 20h, 45CD0h, 44C1h
dd 20h,	45CD0h,	44E8h, 20h, 45CD0h, 45B2h, 20h,	45CD0h
dd 45CCh, 20h, 45CD0h, 4600h, 20h, 45CD0h, 4619h, 20h
dd 45CD0h, 466Ah, 20h, 45CD0h, 4686h, 20h, 45CD0h, 46E8h
dd 20h,	45CD0h,	472Ah, 20h, 45CD0h, 4743h, 20h,	45CD0h
dd 49D3h, 20h, 45CD0h, 4B87h, 20h, 45CD0h, 4BABh, 20h
dd 45CD0h, 4C9Fh, 20h, 45CD0h, 4CC1h, 20h, 45CD0h, 4D19h
dd 20h,	45CD0h,	4D35h, 20h, 45CD0h, 4E07h, 20h,	45CD0h
dd 4E26h, 20h, 45CD0h, 4E5Ch, 20h, 45CD0h, 4E88h, 20h
dd 45CD0h, 4EBDh, 20h, 45CD0h, 53EFh, 20h, 45CD0h, 5754h
dd 20h,	45CD0h,	57D8h, 20h, 45CD0h, 58E1h, 20h,	45CD0h
dd 590Ch, 20h, 45CD0h, 59F1h, 20h, 45CD0h, 5A15h, 20h
dd 45CD0h, 5A61h, 20h, 45CD0h, 5A9Fh, 20h, 45CD0h, 5AC5h
dd 20h,	45CD0h,	5C19h, 20h, 45CD0h, 5C61h, 20h,	45CD0h
dd 5D49h, 20h, 45CD0h, 5D8Fh, 20h, 45CD0h, 5F0Ah, 20h
dd 45CD0h, 5F2Dh, 20h, 45CD0h, 5F7Eh, 20h, 45CD0h, 5FADh
dd 20h,	45CD0h,	5FC6h, 20h, 45CD0h, 60E8h, 20h,	45CD0h
dd 611Ch, 20h, 45CD0h, 6135h, 20h, 45CD0h, 6186h, 20h
dd 45CD0h, 61C6h, 20h, 45CD0h, 61F7h, 20h, 45CD0h, 63ECh
dd 20h,	45CD0h,	6420h, 20h, 45CD0h, 6439h, 20h,	45CD0h
dd 648Ah, 20h, 45CD0h, 64A1h, 20h, 45CD0h, 64CAh, 20h
dd 45CD0h, 64F2h, 20h, 45CD0h, 6540h, 20h, 45CD0h, 658Eh
dd 20h,	45CD0h,	65C7h, 20h, 45CD0h, 6A89h, 20h,	45CD0h
dd 6C8Bh, 20h, 45CD0h, 6CD9h, 20h, 45CD0h, 6D2Ah, 20h
dd 45CD0h, 6D72h, 20h, 45CD0h, 6D9Eh, 20h, 45CD0h, 78BCh
dd 20h,	45CD0h,	78F0h, 20h, 45CD0h, 7919h, 20h,	45CD0h
dd 7A7Ch, 20h, 45CD0h, 7A99h, 20h, 45CD0h, 7AEAh, 20h
dd 45CD0h, 7B05h, 20h, 45CD0h, 7BC4h, 20h, 45CD0h, 7BE1h
dd 20h,	45CD0h,	7BF1h, 20h, 45CD0h, 7C0Ch, 20h,	45CD0h
dd 7C60h, 20h, 45CD0h, 7C88h, 20h, 45CD0h, 7CEBh, 20h
dd 45CD0h, 7D34h, 20h, 45CD0h, 7DFEh, 20h, 45CD0h, 7F36h
dd 20h,	45CD0h,	7F61h, 20h, 45CD0h, 7F98h, 20h,	45CD0h
dd 8034h, 20h, 45CD0h, 80DDh, 20h, 45CD0h, 81CEh, 20h
dd 45CD0h, 8259h, 20h, 45CD0h, 8289h, 20h, 45CD0h, 82AEh
dd 20h,	45CD0h,	82F8h, 20h, 45CD0h, 830Ch, 20h,	45CD0h
dd 836Dh, 20h, 45CD0h, 8388h, 20h, 45CD0h, 83EBh, 20h
dd 45CD0h, 8424h, 20h, 45CD0h, 8484h, 20h, 45CD0h, 84A8h
dd 20h,	45CD0h,	84BCh, 20h, 45CD0h, 851Ch, 20h,	45CD0h
dd 8540h, 20h, 45CD0h, 8554h, 20h, 45CD0h, 85AFh, 20h
dd 45CD0h, 85D1h, 20h, 45CD0h, 8617h, 20h, 45CD0h, 863Ah
dd 20h,	45CD0h,	8689h, 20h, 45CD0h, 86ADh, 20h,	45CD0h
dd 86F3h, 20h, 45CD0h, 8715h, 20h, 45CD0h, 875Bh, 20h
dd 45CD0h, 877Dh, 20h, 45CD0h, 87C3h, 20h, 45CD0h, 87E6h
dd 20h,	45CD0h,	8A2Eh, 20h, 45CD0h, 8E4Ch, 20h,	45CD0h
dd 8EDAh, 20h, 45CD0h, 9F73h, 20h, 45CD0h, 9FDAh, 20h
dd 45CD0h, 0A06Fh, 20h,	45CD0h,	0A0A5h,	20h, 45CD0h, 0A182h
dd 20h,	45CD0h,	0A228h,	20h, 45CD0h, 0A26Dh, 20h, 45CD0h
dd 0A28Ch, 20h,	45CD0h,	0A2F9h,	20h, 45CD0h, 0A38Bh, 20h
dd 45CD0h, 0A3BCh, 20h,	45CD0h,	0A414h,	20h, 45CD0h, 0A433h
dd 20h,	45CD0h,	0A45Fh,	20h, 45CD0h, 0A4B9h, 20h, 45CD0h
dd 0A4F3h, 20h,	45CD0h,	0A51Bh,	20h, 45CD0h, 0A575h, 20h
dd 45CD0h, 0A5AFh, 20h,	45CD0h,	0A5CFh,	20h, 45CD0h, 0A64Fh
dd 20h,	45CD0h,	0A66Fh,	20h, 45CD0h, 0A697h, 20h, 45CD0h
dd 0A6E7h, 20h,	45CD0h,	0A707h,	20h, 45CD0h, 0A72Bh, 20h
dd 45CD0h, 0A76Eh, 20h,	45CD0h,	0A78Bh,	20h, 45CD0h, 0A7B1h
dd 20h,	45CD0h,	0A845h,	20h, 45CD0h, 0A86Fh, 20h, 45CD0h
dd 0A8C1h, 20h,	45CD0h,	0A9DBh,	20h, 45CD0h, 0AAC8h, 20h
dd 45CD0h, 0AB53h, 20h,	45CD0h,	0AB7Ch,	20h, 45CD0h, 0AD42h
dd 20h,	45CD0h,	0AD88h,	20h, 45CD0h, 0ADB5h, 20h, 45CD0h
dd 0AF0Dh, 20h,	45CD0h,	0AF9Dh,	20h, 45CD0h, 0B102h, 20h
dd 45CD0h, 0B18Ch, 20h,	45CD0h,	0B1ACh,	20h, 45CD0h, 0B1CDh
dd 20h,	45CD0h,	0B225h,	20h, 45CD0h, 0B241h, 20h, 45CD0h
dd 0B251h, 20h,	45CD0h,	0B275h,	20h, 45CD0h, 0B285h, 20h
dd 45CD0h, 0B2A9h, 20h,	45CD0h,	0B2B9h,	20h, 45CD0h, 0B2DDh
dd 20h,	45CD0h,	0B2EDh,	20h, 45CD0h, 0B319h, 20h, 45CD0h
dd 0B384h, 20h,	45CD0h,	0B3A2h,	20h, 45CD0h, 0B3E2h, 20h
dd 45CD0h, 0B404h, 20h,	45CD0h,	0B50Eh,	20h, 45CD0h, 0B566h
dd 20h,	45CD0h,	0B5CEh,	20h, 45CD0h, 0CCF5h, 20h, 45CD0h
dd 0CD3Bh, 20h,	45CD0h,	0CD64h,	20h, 45CD0h, 0CF73h, 20h
dd 45CD0h, 0D0C0h, 20h,	45CD0h,	0D3AFh,	20h, 45CD0h, 0D420h
dd 20h,	45CD0h,	0D67Dh,	20h, 45CD0h, 0D6ABh, 20h, 45CD0h
dd 0D87Ah, 20h,	45CD0h,	0D89Ch,	20h, 45CD0h, 0D9C8h, 20h
dd 45CD0h, 0DA1Ch, 20h,	45CD0h,	0DC52h,	20h, 45CD0h, 0DCA8h
dd 20h,	45CD0h,	0DF4Bh,	20h, 45CD0h, 0DFBEh, 20h, 45CD0h
dd 0E2A6h, 20h,	45CD0h,	0E359h,	20h, 45CD0h, 0E6A1h, 20h
dd 45CD0h, 0E6D9h, 20h,	45CD0h,	0E82Dh,	20h, 45CD0h, 0E85Ch
dd 20h,	45CD0h,	0EA5Eh,	20h, 45CD0h, 0EAA9h, 20h, 45CD0h
dd 0EAEFh, 20h,	45CD0h,	0EB2Ah,	20h, 45CD0h, 0EC67h, 20h
dd 45CD0h, 0ECA2h, 20h,	45CD0h,	0EF82h,	20h, 45CD0h, 0EFC0h
dd 20h,	45CD0h,	0F1C2h,	20h, 45CD0h, 0F1E5h, 20h, 45CD0h
dd 0F236h, 20h,	45CD0h,	0F24Ch,	20h, 45CD0h, 0F26Ch, 20h
dd 45CD0h, 0F284h, 20h,	45CD0h,	0F3E6h,	20h, 45CD0h, 0F402h
dd 20h,	45CD0h,	0F432h,	20h, 45CD0h, 0F46Dh, 20h, 45CD0h
dd 0F493h, 20h,	45CD0h,	10634h,	20h, 45CD0h, 107D1h, 20h
dd 45CD0h, 10805h, 20h,	45CD0h,	10986h,	20h, 45CD0h, 109C0h
dd 20h,	45CD0h,	10B4Dh,	20h, 45CD0h, 10B8Ch, 20h, 45CD0h
dd 10D4Eh, 20h,	45CD0h,	10D99h,	20h, 45CD0h, 11080h, 20h
dd 45CD0h, 110A9h, 20h,	45CD0h,	11101h,	20h, 45CD0h, 11122h
dd 20h,	45CD0h,	111F6h,	20h, 45CD0h, 1121Bh, 20h, 45CD0h
dd 1125Ch, 20h,	45CD0h,	11280h,	20h, 45CD0h, 11463h, 20h
dd 45CD0h, 115EDh, 20h,	45CD0h,	116DFh,	20h, 45CD0h, 117B0h
dd 20h,	45CD0h,	1189Fh,	20h, 45CD0h, 118F8h, 20h, 45CD0h
dd 11960h, 20h,	45CD0h,	11985h,	20h, 45CD0h, 119FDh, 20h
dd 45CD0h, 11A26h, 20h,	45CD0h,	11A68h,	20h, 45CD0h, 11AA1h
dd 20h,	45CD0h,	11C3Bh,	20h, 45CD0h, 121C9h, 20h, 45CD0h
dd 121F9h, 20h,	45CD0h,	125DDh,	20h, 45CD0h, 12623h, 20h
dd 45CD0h, 12685h, 20h,	45CD0h,	128BAh,	20h, 45CD0h, 1292Ch
dd 20h,	45CD0h,	12A4Dh,	20h, 45CD0h, 12A80h, 20h, 45CD0h
dd 12B89h, 20h,	45CD0h,	12BADh,	20h, 45CD0h, 12C05h, 20h
dd 45CD0h, 12C24h, 20h,	45CD0h,	12C74h,	20h, 45CD0h, 12C93h
dd 20h,	45CD0h,	12CE2h,	20h, 45CD0h, 12D0Ch, 20h, 45CD0h
dd 12D21h, 20h,	45CD0h,	12D44h,	20h, 45CD0h, 12E32h, 20h
dd 45CD0h, 12E59h, 20h,	45CD0h,	12F2Eh,	20h, 45CD0h, 12F91h
dd 20h,	45CD0h,	130F5h,	20h, 45CD0h, 13130h, 20h, 45CD0h
dd 13164h, 20h,	45CD0h,	13184h,	20h, 45CD0h, 13226h, 20h
dd 45CD0h, 13240h, 20h,	45CD0h,	13274h,	20h, 45CD0h, 13295h
dd 20h,	45CD0h,	132DDh,	20h, 45CD0h, 13304h, 20h, 45CD0h
dd 133D1h, 20h,	45CD0h,	13425h,	20h, 45CD0h, 134BFh, 20h
dd 45CD0h, 141C6h, 20h,	45CD0h,	14360h,	20h, 45CD0h, 143C3h
dd 20h,	45CD0h,	1457Ah,	20h, 45CD0h, 145FAh, 20h, 45CD0h
dd 14732h, 20h,	45CD0h,	14885h,	20h, 45CD0h, 148D6h, 20h
dd 45CD0h, 1490Bh, 20h,	45CD0h,	14924h,	20h, 45CD0h, 14A71h
dd 20h,	45CD0h,	14AC2h,	20h, 45CD0h, 14AF1h, 20h, 45CD0h
dd 14B0Ah, 20h,	45CD0h,	14B4Ch,	20h, 45CD0h, 14B79h, 20h
dd 45CD0h, 14BCAh, 20h,	45CD0h,	14C17h,	20h, 45CD0h, 14C3Dh
dd 20h,	45CD0h,	14E78h,	20h, 45CD0h, 14F3Fh, 20h, 45CD0h
dd 14F65h, 20h,	45CD0h,	14FB6h,	20h, 45CD0h, 14FCFh, 20h
dd 45CD0h, 14FF2h, 20h,	45CD0h,	15013h,	20h, 45CD0h, 15082h
dd 20h,	45CD0h,	150ABh,	20h, 45CD0h, 15116h, 20h, 45CD0h
dd 15131h, 20h,	45CD0h,	1517Ah,	20h, 45CD0h, 151DFh, 20h
dd 45CD0h, 1521Ch, 20h,	45CD0h,	15296h,	20h, 45CD0h, 15442h
dd 20h,	45CD0h,	1574Ah,	20h, 45CD0h, 15781h, 20h, 45CD0h
dd 157A5h, 20h,	45CD0h,	157DEh,	20h, 45CD0h, 15801h, 20h
dd 45CD0h, 15833h, 20h,	45CD0h,	1585Bh,	20h, 45CD0h, 15892h
dd 20h,	45CD0h,	158ADh,	20h, 45CD0h, 158BDh, 20h, 45CD0h
dd 158D9h, 20h,	45CD0h,	158E9h,	20h, 45CD0h, 1590Ch, 20h
dd 45CD0h, 159DBh, 20h,	45CD0h,	15A95h,	20h, 45CD0h, 15B5Eh
dd 20h,	45CD0h,	15BFCh,	20h, 45CD0h, 15DF4h, 20h, 45CD0h
dd 15F27h, 20h,	45CD0h,	15F5Fh,	20h, 45CD0h, 15F8Ah, 20h
dd 45CD0h, 15FB5h, 20h,	45CD0h,	1600Fh,	20h, 45CD0h, 160FAh
dd 20h,	45CD0h,	162A7h,	20h, 45CD0h, 162EBh, 20h, 45CD0h
dd 1630Eh, 20h,	45CD0h,	16404h,	20h, 45CD0h, 16429h, 20h
dd 45CD0h, 164CCh, 20h,	45CD0h,	16519h,	20h, 45CD0h, 1664Dh
dd 20h,	45CD0h,	166A5h,	20h, 45CD0h, 16735h, 20h, 45CD0h
dd 16752h, 20h,	45CD0h,	16793h,	20h, 45CD0h, 167CCh, 20h
dd 45CD0h, 167EDh, 20h,	45CD0h,	16825h,	20h, 45CD0h, 1691Bh
dd 20h,	45CD0h,	16957h,	20h, 45CD0h, 16982h, 20h, 45CD0h
dd 169DAh, 20h,	45CD0h,	16A0Eh,	20h, 45CD0h, 16AACh, 20h
dd 45CD0h, 16AE1h, 20h,	45CD0h,	16B26h,	20h, 45CD0h, 16B4Ch
dd 20h,	45CD0h,	16BA0h,	20h, 45CD0h, 16BCBh, 20h, 45CD0h
dd 16BFBh, 20h,	45CD0h,	16C23h,	20h, 45CD0h, 16C6Ch, 20h
dd 45CD0h, 16C8Eh, 20h,	45CD0h,	16CD9h,	20h, 45CD0h, 16D07h
dd 20h,	45CD0h,	16D68h,	20h, 45CD0h, 16DA8h, 20h, 45CD0h
dd 16F9Ah, 20h,	45CD0h,	16FC7h,	20h, 45CD0h, 1702Ah, 20h
dd 45CD0h, 175FBh, 20h,	45CD0h,	17649h,	20h, 45CD0h, 1766Ah
dd 20h,	45CD0h,	17765h,	20h, 45CD0h, 1779Dh, 20h, 45CD0h
dd 177BFh, 20h,	45CD0h,	177FFh,	20h, 45CD0h, 17857h, 20h
dd 45CD0h, 178DDh, 20h,	45CD0h,	17940h,	20h, 45CD0h, 17C14h
dd 20h,	45CD0h,	17C4Eh,	20h, 45CD0h, 17CD7h, 20h, 45CD0h
dd 17D10h, 20h,	45CD0h,	17D86h,	20h, 45CD0h, 17D9Fh, 20h
dd 45CD0h, 17DEEh, 20h,	45CD0h,	17E1Ah,	20h, 45CD0h, 17EB5h
dd 20h,	45CD0h,	17F04h,	20h, 45CD0h, 17F28h, 20h, 45CD0h
dd 17F4Dh, 20h,	45CD0h,	17F68h,	20h, 45CD0h, 181A7h, 20h
dd 45CD0h, 181C4h, 20h,	45CD0h,	18227h,	20h, 45CD0h, 18269h
dd 20h,	45CD0h,	18290h,	20h, 45CD0h, 182D1h, 20h, 45CD0h
dd 182F8h, 20h,	45CD0h,	18351h,	20h, 45CD0h, 1838Ah, 20h
dd 45CD0h, 183B0h, 20h,	45CD0h,	18403h,	20h, 45CD0h, 1847Dh
dd 20h,	45CD0h,	184BCh,	20h, 45CD0h, 184E9h, 20h, 45CD0h
dd 18502h, 20h,	45CD0h,	18535h,	20h, 45CD0h, 18740h, 20h
dd 45CD0h, 1893Ch, 20h,	45CD0h,	18957h,	20h, 45CD0h, 18975h
dd 20h,	45CD0h,	189F2h,	20h, 45CD0h, 18A17h, 20h, 45CD0h
dd 18A4Dh, 20h,	45CD0h,	18A6Bh,	20h, 45CD0h, 18B5Bh, 20h
dd 45CD0h, 18B8Eh, 20h,	45CD0h,	18BE7h,	20h, 45CD0h, 18BFCh
dd 20h,	45CD0h,	18C2Fh,	20h, 45CD0h, 18C4Dh, 20h, 45CD0h
dd 18C6Dh, 20h,	45CD0h,	18CA0h,	20h, 45CD0h, 18E28h, 20h
dd 45CD0h, 18F61h, 20h,	45CD0h,	18F7Ch,	20h, 45CD0h, 18F9Dh
dd 20h,	45CD0h,	18FC3h,	20h, 45CD0h, 18FE4h, 20h, 45CD0h
dd 19014h, 20h,	45CD0h,	19037h,	20h, 45CD0h, 1906Fh, 20h
dd 45CD0h, 19094h, 20h,	45CD0h,	19194h,	20h, 45CD0h, 191B0h
dd 20h,	45CD0h,	1927Dh,	20h, 45CD0h, 19299h, 20h, 45CD0h
dd 192B5h, 20h,	45CD0h,	192DCh,	20h, 45CD0h, 1942Dh, 20h
dd 45CD0h, 19462h, 20h,	45CD0h,	194A4h,	20h, 45CD0h, 194C8h
dd 20h,	45CD0h,	194F1h,	20h, 45CD0h, 1953Ah, 20h, 45CD0h
dd 1956Dh, 20h,	45CD0h,	195AEh,	20h, 45CD0h, 195E4h, 20h
dd 45CD0h, 19783h, 20h,	45CD0h,	197A0h,	20h, 45CD0h, 198EEh
dd 20h,	45CD0h,	1994Ch,	20h, 45CD0h, 19999h, 20h, 45CD0h
dd 199BCh, 20h,	45CD0h,	19A59h,	20h, 45CD0h, 19A70h, 20h
dd 45CD0h, 19A97h, 20h,	45CD0h,	19AACh,	20h, 45CD0h, 19AD3h
dd 20h,	45CD0h,	19AEAh,	20h, 45CD0h, 19B46h, 20h, 45CD0h
dd 19B64h, 20h,	45CD0h,	19B83h,	20h, 45CD0h, 19BA0h, 20h
dd 45CD0h, 19BBFh, 20h,	45CD0h,	19BE7h,	20h, 45CD0h, 19C20h
dd 20h,	45CD0h,	19D4Bh,	20h, 45CD0h, 19D75h, 20h, 45CD0h
dd 19DB1h, 20h,	45CD0h,	19DD7h,	20h, 45CD0h, 19E10h, 20h
dd 45CD0h, 19F00h, 20h,	45CD0h,	1A025h,	20h, 45CD0h, 1A047h
dd 20h,	45CD0h,	1A080h,	20h, 45CD0h, 1A242h, 20h, 45CD0h
dd 1A278h, 20h,	45CD0h,	1A2DAh,	20h, 45CD0h, 1A300h, 20h
dd 45CD0h, 1A348h, 20h,	45CD0h,	1A36Fh,	20h, 45CD0h, 1A526h
dd 20h,	45CD0h,	1A7DFh,	20h, 45CD0h, 1A833h, 20h, 45CD0h
dd 1A899h, 20h,	45CD0h,	1A8D1h,	20h, 45CD0h, 1A8EEh, 20h
dd 45CD0h, 1A9A8h, 20h,	45CD0h,	1AB32h,	20h, 45CD0h, 1AB6Fh
dd 20h,	45CD0h,	1AB86h,	20h, 45CD0h, 1ABAAh, 20h, 45CD0h
dd 1ABDFh, 20h,	45CD0h,	1AC01h,	20h, 45CD0h, 1AC29h, 20h
dd 45CD0h, 1AC4Ah, 20h,	45CD0h,	1AC7Ah,	20h, 45CD0h, 1AC9Eh
dd 20h,	45CD0h,	1ACBCh,	20h, 45CD0h, 1AD03h, 20h, 45CD0h
dd 1AD26h, 20h,	45CD0h,	1AD42h,	20h, 45CD0h, 1ADBCh, 20h
dd 45CD0h, 1ADD6h, 20h,	45CD0h,	1AE60h,	20h, 45CD0h, 1AE7Eh
dd 20h,	45CD0h,	1AF18h,	20h, 45CD0h, 1AF3Fh, 20h, 45CD0h
dd 1AFBEh, 20h,	45CD0h,	1AFDCh,	20h, 45CD0h, 1B0AAh, 20h
dd 45CD0h, 1B170h, 20h,	45CD0h,	1B296h,	20h, 45CD0h, 1B310h
dd 20h,	45CD0h,	1B4AEh,	20h, 45CD0h, 1B533h, 20h, 45CD0h
dd 1B68Fh, 20h,	45CD0h,	1B750h,	20h, 45CD0h, 1B80Fh, 20h
dd 45CD0h, 1B877h, 20h,	45CD0h,	1B8DCh,	20h, 45CD0h, 1B8FBh
dd 20h,	45CD0h,	1B93Ch,	20h, 45CD0h, 1B959h, 20h, 45CD0h
dd 1B9AFh, 20h,	45CD0h,	1BA84h,	20h, 45CD0h, 1BC7Bh, 20h
dd 45CD0h, 1BD38h, 20h,	45CD0h,	1BE5Eh,	20h, 45CD0h, 1BEDEh
dd 20h,	45CD0h,	1BF28h,	20h, 45CD0h, 1BF45h, 20h, 45CD0h
dd 1C024h, 20h,	45CD0h,	1C04Ch,	20h, 45CD0h, 1C18Eh, 20h
dd 45CD0h, 1C3CDh, 20h,	45CD0h,	1C48Fh,	20h, 45CD0h, 1C5B5h
dd 20h,	45CD0h,	1C692h,	20h, 45CD0h, 1C787h, 20h, 45CD0h
dd 1C7B6h, 20h,	45CD0h,	1C8CEh,	20h, 45CD0h, 1C9ECh, 20h
dd 45CD0h, 1CA1Ah, 20h,	45CD0h,	1CA31h,	20h, 45CD0h, 1CA91h
dd 20h,	45CD0h,	1CAFFh,	20h, 45CD0h, 1CB86h, 20h, 45CD0h
dd 1CBBBh, 20h,	45CD0h,	1CC37h,	20h, 45CD0h, 1CC5Ch, 20h
dd 45CD0h, 1CD66h, 20h,	45CD0h,	1CF0Bh,	20h, 45CD0h, 1CF4Ch
dd 20h,	45CD0h,	1CFF8h,	20h, 45CD0h, 1D019h, 20h, 45CD0h
dd 1D043h, 20h,	45CD0h,	1D086h,	20h, 45CD0h, 1D308h, 20h
dd 45CD0h, 1D391h, 20h,	45CD0h,	1D3ACh,	20h, 45CD0h, 1D41Dh
dd 20h,	45CD0h,	1D438h,	20h, 45CD0h, 1D4B9h, 20h, 45CD0h
dd 1D4D8h, 20h,	45CD0h,	1D552h,	20h, 45CD0h, 1D570h, 20h
dd 45CD0h, 1D60Ch, 20h,	45CD0h,	1D629h,	20h, 45CD0h, 1D6EAh
dd 20h,	45CD0h,	1D7ACh,	20h, 45CD0h, 1DB53h, 20h, 45CD0h
dd 1DEDCh, 20h,	45CD0h,	1E092h,	20h, 45CD0h, 1E2D5h, 20h
dd 45CD0h, 1E2F1h, 20h,	45CD0h,	1E32Dh,	20h, 45CD0h, 1E433h
dd 20h,	45CD0h,	1E46Dh,	20h, 45CD0h, 1E561h, 20h, 45CD0h
dd 1E8ECh, 20h,	45CD0h,	1E97Bh,	20h, 45CD0h, 1EA71h, 20h
dd 45CD0h, 1EAAFh, 20h,	45CD0h,	1EACFh,	20h, 45CD0h, 1EB37h
dd 20h,	45CD0h,	1EE65h,	20h, 45CD0h, 1EF1Ah, 20h, 45CD0h
dd 1F0B7h, 20h,	45CD0h,	1F0F0h,	20h, 45CD0h, 1F150h, 20h
dd 45CD0h, 1F17Ah, 20h,	45CD0h,	1F1B3h,	20h, 45CD0h, 1F20Ch
dd 20h,	45CD0h,	1F23Dh,	20h, 45CD0h, 1F418h, 20h, 45CD0h
dd 1F431h, 20h,	45CD0h,	1F46Bh,	20h, 45CD0h, 1F4C1h, 20h
dd 45CD0h, 20889h, 20h,	45CD0h,	208AEh,	20h, 45CD0h, 208D3h
dd 20h,	45CD0h,	20926h,	20h, 45CD0h, 20944h, 20h, 45CD0h
dd 209A1h, 20h,	45CD0h,	20A84h,	20h, 45CD0h, 21482h, 20h
dd 45CD0h, 214EAh, 20h,	45CD0h,	217B3h,	20h, 45CD0h, 2185Fh
dd 20h,	45CD0h,	218B0h,	20h, 45CD0h, 2198Bh, 20h, 45CD0h
dd 21A16h, 20h,	45CD0h,	21A53h,	20h, 45CD0h, 21A7Ch, 20h
dd 45CD0h, 21AEAh, 20h,	45CD0h,	21BD8h,	20h, 45CD0h, 21ED2h
dd 20h,	45CD0h,	22446h,	20h, 45CD0h, 2248Bh, 20h, 45CD0h
dd 2249Eh, 20h,	45CD0h,	224C5h,	20h, 45CD0h, 224E1h, 20h
dd 45CD0h, 2250Ah, 20h,	45CD0h,	22530h,	20h, 45CD0h, 2256Bh
dd 20h,	45CD0h,	225BFh,	20h, 45CD0h, 22604h, 20h, 45CD0h
dd 22678h, 20h,	45CD0h,	226D7h,	20h, 45CD0h, 226F2h, 20h
dd 45CD0h, 2276Ch, 20h,	45CD0h,	22907h,	20h, 45CD0h, 2292Fh
dd 20h,	45CD0h,	22972h,	20h, 45CD0h, 229A8h, 20h, 45CD0h
dd 229E0h, 20h,	45CD0h,	22A16h,	20h, 45CD0h, 22A50h, 20h
dd 45CD0h, 22A78h, 20h,	45CD0h,	22B00h,	20h, 45CD0h, 22B24h
dd 20h,	45CD0h,	22BD6h,	20h, 45CD0h, 22C1Eh, 20h, 45CD0h
dd 22C52h, 20h,	45CD0h,	22C78h,	20h, 45CD0h, 22C9Eh, 20h
dd 45CD0h, 22D45h, 20h,	45CD0h,	22D62h,	20h, 45CD0h, 22DDAh
dd 20h,	45CD0h,	22DF0h,	20h, 45CD0h, 22E14h, 20h, 45CD0h
dd 22E38h, 20h,	45CD0h,	22EF6h,	20h, 45CD0h, 22FB0h, 20h
dd 45CD0h, 23010h, 20h,	45CD0h,	2307Ah,	20h, 45CD0h, 2309Fh
dd 20h,	45CD0h,	23137h,	20h, 45CD0h, 23172h, 20h, 45CD0h
dd 2319Ch, 20h,	45CD0h,	2336Bh,	20h, 45CD0h, 233C9h, 20h
dd 45CD0h, 233D9h, 20h,	45CD0h,	233FAh,	20h, 45CD0h, 2342Dh
dd 20h,	45CD0h,	23452h,	20h, 45CD0h, 23485h, 20h, 45CD0h
dd 234B4h, 20h,	45CD0h,	2356Bh,	20h, 45CD0h, 23628h, 20h
dd 45CD0h, 23650h, 20h,	45CD0h,	23704h,	20h, 45CD0h, 237B4h
dd 20h,	45CD0h,	23818h,	20h, 45CD0h, 2384Ah, 20h, 45CD0h
dd 23872h, 20h,	45CD0h,	2389Ah,	20h, 45CD0h, 238D1h, 20h
dd 45CD0h, 238EEh, 20h,	45CD0h,	23934h,	20h, 45CD0h, 23952h
dd 20h,	45CD0h,	2399Fh,	20h, 45CD0h, 239BAh, 20h, 45CD0h
dd 23A00h, 20h,	45CD0h,	23A1Eh,	20h, 45CD0h, 23A6Bh, 20h
dd 45CD0h, 23A8Ch, 20h,	45CD0h,	24270h,	20h, 45CD0h, 242B0h
dd 20h,	45CD0h,	242D0h,	20h, 45CD0h, 243DCh, 20h, 45CD0h
dd 24484h, 20h,	45CD0h,	24638h,	20h, 45CD0h, 246D4h, 20h
dd 45CD0h, 24708h, 20h,	45CD0h,	24B7Ah,	20h, 45CD0h, 24F73h
dd 20h,	45CD0h,	24FD4h,	20h, 45CD0h, 24FF7h, 20h, 45CD0h
dd 250B3h, 20h,	45CD0h,	250D1h,	20h, 45CD0h, 250F9h, 20h
dd 45CD0h, 25116h, 20h,	45CD0h,	25136h,	20h, 45CD0h, 2534Ah
dd 20h,	45CD0h,	2546Fh,	20h, 45CD0h, 254BCh, 20h, 45CD0h
dd 254D2h, 20h,	45CD0h,	2550Fh,	20h, 45CD0h, 2553Dh, 20h
dd 45CD0h, 25598h, 20h,	45CD0h,	255C7h,	20h, 45CD0h, 25683h
dd 20h,	45CD0h,	256D8h,	20h, 45CD0h, 256EAh, 20h, 45CD0h
dd 2570Ch, 20h,	45CD0h,	25963h,	20h, 45CD0h, 259C3h, 20h
dd 45CD0h, 25BD3h, 20h,	45CD0h,	25BF1h,	20h, 45CD0h, 25CEBh
dd 20h,	45CD0h,	25D33h,	20h, 45CD0h, 25D6Dh, 20h, 45CD0h
dd 25DAEh, 20h,	45CD0h,	25DE4h,	20h, 45CD0h, 25DFFh, 20h
dd 45CD0h, 25F06h, 20h,	45CD0h,	25F96h,	20h, 45CD0h, 26084h
dd 20h,	45CD0h,	260D8h,	20h, 45CD0h, 2612Ch, 20h, 45CD0h
dd 26158h, 20h,	45CD0h,	261B3h,	20h, 45CD0h, 261ECh, 20h
dd 45CD0h, 262B7h, 20h,	45CD0h,	262F7h,	20h, 45CD0h, 2632Fh
dd 20h,	45CD0h,	26355h,	20h, 45CD0h, 2639Dh, 20h, 45CD0h
dd 263BAh, 20h,	45CD0h,	26421h,	20h, 45CD0h, 26460h, 20h
dd 45CD0h, 2647Eh, 20h,	45CD0h,	265EEh,	20h, 45CD0h, 2664Bh
dd 20h,	45CD0h,	266AAh,	20h, 45CD0h, 266C5h, 20h, 45CD0h
dd 26716h, 20h,	45CD0h,	2672Ah,	20h, 45CD0h, 2677Ch, 20h
dd 45CD0h, 26862h, 20h,	45CD0h,	26AC5h,	20h, 45CD0h, 26AD9h
dd 20h,	45CD0h,	26B00h,	20h, 45CD0h, 26BCCh, 20h, 45CD0h
dd 26C20h, 20h,	45CD0h,	26C32h,	20h, 45CD0h, 26D5Ch, 20h
dd 45CD0h, 26D95h, 20h,	45CD0h,	26DC3h,	20h, 45CD0h, 26DDEh
dd 20h,	45CD0h,	26E46h,	20h, 45CD0h, 26E89h, 20h, 45CD0h
dd 26E99h, 20h,	45CD0h,	26EBDh,	20h, 45CD0h, 26ECDh, 20h
dd 45CD0h, 26EF1h, 20h,	45CD0h,	26F5Ah,	20h, 45CD0h, 26FB9h
dd 20h,	45CD0h,	27029h,	20h, 45CD0h, 27079h, 20h, 45CD0h
dd 270D2h, 20h,	45CD0h,	27122h,	20h, 45CD0h, 27197h, 20h
dd 45CD0h, 271C0h, 20h,	45CD0h,	271FEh,	20h, 45CD0h, 27280h
dd 20h,	45CD0h,	272BEh,	20h, 45CD0h, 27300h, 20h, 45CD0h
dd 273FCh, 20h,	45CD0h,	2742Fh,	20h, 45CD0h, 275BFh, 20h
dd 45CD0h, 276E2h, 20h,	45CD0h,	27874h,	20h, 45CD0h, 27947h
dd 20h,	45CD0h,	27968h,	20h, 45CD0h, 279D6h, 20h, 45CD0h
dd 27E35h, 20h,	45CD0h,	27F75h,	20h, 45CD0h, 28024h, 20h
dd 45CD0h, 2804Eh, 20h,	45CD0h,	2806Ah,	20h, 45CD0h, 280A6h
dd 20h,	45CD0h,	280C7h,	20h, 45CD0h, 28117h, 20h, 45CD0h
dd 2815Bh, 20h,	45CD0h,	2819Ah,	20h, 45CD0h, 281B4h, 20h
dd 45CD0h, 281D4h, 20h,	45CD0h,	281F3h,	20h, 45CD0h, 2823Bh
dd 20h,	45CD0h,	28265h,	20h, 45CD0h, 282BDh, 20h, 45CD0h
dd 282EEh, 20h,	45CD0h,	28323h,	20h, 45CD0h, 28380h, 20h
dd 45CD0h, 283D2h, 20h,	45CD0h,	28422h,	20h, 45CD0h, 2846Bh
dd 20h,	45CD0h,	2848Ah,	20h, 45CD0h, 284C5h, 20h, 45CD0h
dd 284E4h, 20h,	45CD0h,	2854Ah,	20h, 45CD0h, 285B3h, 20h
dd 45CD0h, 285F3h, 20h,	45CD0h,	28610h,	20h, 45CD0h, 28633h
dd 20h,	45CD0h,	2866Bh,	20h, 45CD0h, 28688h, 20h, 45CD0h
dd 286A6h, 20h,	45CD0h,	286D5h,	20h, 45CD0h, 286F4h, 20h
dd 45CD0h, 28710h, 20h,	45CD0h,	2872Eh,	20h, 45CD0h, 2874Ch
dd 20h,	45CD0h,	28773h,	20h, 45CD0h, 287A8h, 20h, 45CD0h
dd 287F9h, 20h,	45CD0h,	28836h,	20h, 45CD0h, 28881h, 20h
dd 45CD0h, 288A1h, 20h,	45CD0h,	288D9h,	20h, 45CD0h, 288F6h
dd 20h,	45CD0h,	28934h,	20h, 45CD0h, 28952h, 20h, 45CD0h
dd 289A1h, 20h,	45CD0h,	289BFh,	20h, 45CD0h, 289F9h, 20h
dd 45CD0h, 28A2Eh, 20h,	45CD0h,	28A46h,	20h, 45CD0h, 28B3Fh
dd 20h,	45CD0h,	28BF6h,	20h, 45CD0h, 28C16h, 20h, 45CD0h
dd 28C46h, 20h,	45CD0h,	28C71h,	20h, 45CD0h, 28CBDh, 20h
dd 45CD0h, 28CD2h, 20h,	45CD0h,	28D27h,	20h, 45CD0h, 28D61h
dd 20h,	45CD0h,	28D7Eh,	20h, 45CD0h, 28DAEh, 20h, 45CD0h
dd 28DC9h, 20h,	45CD0h,	28E01h,	20h, 45CD0h, 28E1Eh, 20h
dd 45CD0h, 28E6Dh, 20h,	45CD0h,	28E8Ch,	20h, 45CD0h, 28EE6h
dd 20h,	45CD0h,	28F0Bh,	20h, 45CD0h, 28FA2h, 20h, 45CD0h
dd 28FDCh, 20h,	45CD0h,	2905Dh,	20h, 45CD0h, 2908Fh, 20h
dd 45CD0h, 290E4h, 20h,	45CD0h,	291DAh,	20h, 45CD0h, 2920Ah
dd 20h,	45CD0h,	29237h,	20h, 45CD0h, 29277h, 20h, 45CD0h
dd 29293h, 20h,	45CD0h,	292C1h,	20h, 45CD0h, 292E7h, 20h
dd 45CD0h, 29319h, 20h,	45CD0h,	29338h,	20h, 45CD0h, 2935Fh
dd 20h,	45CD0h,	29396h,	20h, 45CD0h, 293BFh, 20h, 45CD0h
dd 29400h, 20h,	45CD0h,	2942Bh,	20h, 45CD0h, 2947Eh, 20h
dd 45CD0h, 2949Ah, 20h,	45CD0h,	294C3h,	20h, 45CD0h, 294E4h
dd 20h,	45CD0h,	294FDh,	20h, 45CD0h, 29540h, 20h, 45CD0h
dd 29571h, 20h,	45CD0h,	2958Ah,	20h, 45CD0h, 295EEh, 20h
dd 45CD0h, 29630h, 20h,	45CD0h,	29935h,	20h, 45CD0h, 29BB2h
dd 20h,	45CD0h,	29BFCh,	20h, 45CD0h, 29D3Bh, 20h, 45CD0h
dd 29D5Eh, 20h,	45CD0h,	29EB5h,	20h, 45CD0h, 29F8Dh, 20h
dd 45CD0h, 29FBEh, 20h,	45CD0h,	29FE8h,	20h, 45CD0h, 2A830h
dd 20h,	45CD0h,	2AA17h,	20h, 45CD0h, 2B059h, 20h, 45CD0h
dd 2B082h, 20h,	45CD0h,	2B0BAh,	20h, 45CD0h, 2B0F5h, 20h
dd 45CD0h, 2B11Eh, 20h,	45CD0h,	2B147h,	20h, 45CD0h, 2B165h
dd 20h,	45CD0h,	2B1B3h,	20h, 45CD0h, 2B1D9h, 20h, 45CD0h
dd 2B231h, 20h,	45CD0h,	2B255h,	20h, 45CD0h, 2B28Fh, 20h
dd 45CD0h, 2B2B1h, 20h,	45CD0h,	2B2C8h,	20h, 45CD0h, 2B314h
dd 20h,	45CD0h,	2B353h,	20h, 45CD0h, 2B463h, 20h, 45CD0h
dd 2B4C8h, 20h,	45CD0h,	2B4F8h,	20h, 45CD0h, 2B5D6h, 20h
dd 45CD0h, 2B6D1h, 20h,	45CD0h,	2B74Bh,	20h, 45CD0h, 2B772h
dd 20h,	45CD0h,	2B7BCh,	20h, 45CD0h, 2B8F2h, 20h, 45CD0h
dd 2B91Eh, 20h,	45CD0h,	2B979h,	20h, 45CD0h, 2B997h, 20h
dd 45CD0h, 2BA0Dh, 20h,	45CD0h,	2BA37h,	20h, 45CD0h, 2BAC6h
dd 20h,	45CD0h,	2BB13h,	20h, 45CD0h, 2BB7Bh, 20h, 45CD0h
dd 2BB9Bh, 20h,	45CD0h,	2BC03h,	20h
			
align 1000h
assume cs:_eh_frame

dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFC6FE0h
dd 53h,	80E4100h, 0E430283h, 0E4D0220h,	0EC34108h, 4, 34h
dd 40h,	0FFFC701Ch, 0F2h, 300E4300h, 48048344h,	87480386h
dd 240E5902h, 6E300E43h, 0C3C6C70Ah, 0B43040Eh,	43240E7Ah
dd 0E5E300Eh, 300E4324h, 14h, 78h, 0FFFC70E4h, 28h, 200E4300h
dd 40E64h, 14h,	90h, 0FFFC70FCh, 23h, 200E4300h, 40E5Fh
			
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFC70FCh
dd 8Bh,	80E4100h, 0D420285h, 0A780205h,	4040CC5h, 0B41h
dd 20h,	40h, 0FFFC7164h, 43h, 80E4100h,	0D420285h, 0C50A7505h
dd 4404040Ch, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC716Ch
dd 10Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0AFA0201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 5Ch, 0FFFC7238h,	7Dh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A51h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B46h, 20h, 94h, 0FFFC7280h
dd 5Ah,	80E4100h, 0E430283h, 0A4B0230h,	0C341080Eh, 0B45040Eh
dd 3Ch,	0B8h, 0FFFC72B8h, 18Ch,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AC402h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 2Ch, 0F8h
dd 0FFFC7404h, 85h, 80E4100h, 0E410286h, 4303830Ch, 4702300Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 3Ch, 128h, 0FFFC745Ch
dd 0B9h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0AA802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 28h, 1Ch,	0FFFC74C0h
dd 50h,	80E4100h, 0E410286h, 4303830Ch,	0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 20h, 48h, 0FFFC74E4h,	4Bh, 80E4100h
dd 0E430283h, 0E0A7920h, 0EC34108h, 0B4104h, 18h, 6Ch
dd 0FFFC750Ch, 32h, 200E4300h, 40E0A65h, 0B45h,	18h, 88h
dd 0FFFC7524h, 2Dh, 200E4300h, 40E0A64h, 0B41h,	18h, 0A4h
dd 0FFFC7538h, 2Ah, 200E4300h, 40E0A61h, 0B41h,	18h, 0C0h
dd 0FFFC7548h, 58h, 300E4300h, 40E0A6Bh, 0B42h,	18h, 0DCh
dd 0FFFC7584h, 37h, 300E4300h, 40E0A6Eh, 0B41h,	2Ch, 0F8h
dd 0FFFC75A0h, 89h, 80E4100h, 0E410286h, 4303830Ch, 5302300Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 18h, 128h, 0FFFC75FCh
dd 5Dh,	300E4300h, 40E0A72h, 0B43h, 18h, 144h, 0FFFC7640h
dd 6Dh,	300E4300h, 0E0A4202h, 0B4304h, 20h, 160h, 0FFFC7694h
dd 81h,	80E4100h, 0E430283h, 0A560230h,	0C341080Eh, 0B41040Eh
dd 18h,	184h, 0FFFC76F4h, 5Dh, 300E4300h, 40E0A72h, 0B43h
dd 18h,	1A0h, 0FFFC7738h, 6Dh, 300E4300h, 0E0A4202h, 0B4304h
dd 2Ch,	1BCh, 0FFFC778Ch, 85h, 80E4100h, 0E410286h, 4303830Ch
dd 5602300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 34h
dd 1ECh, 0FFFC77E4h, 6Dh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 7E300E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0Bh, 3Ch,	224h, 0FFFC781Ch, 75h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A4202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 3Ch, 264h, 0FFFC7854h, 7Dh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A4902h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 20h,	2A4h, 0FFFC7894h, 65h, 80E4100h, 0E430283h, 0E0A7830h
dd 0EC34108h, 0B4304h, 2Ch, 2C8h, 0FFFC78D8h, 7Dh, 80E4100h
dd 0E410286h, 4303830Ch, 4D02300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 2Ch,	2F8h, 0FFFC7928h, 95h, 80E4100h
dd 0E410286h, 4303830Ch, 6802300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 20h,	328h, 0FFFC7990h, 65h, 80E4100h
dd 0E430283h, 0E0A7830h, 0EC34108h, 0B4304h, 20h, 34Ch
dd 0FFFC79D4h, 79h, 80E4100h, 0E430283h, 0A4B0230h, 0C341080Eh
dd 0B44040Eh, 2Ch, 370h, 0FFFC7A2Ch, 95h, 80E4100h, 0E410286h
dd 4303830Ch, 6602300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	34h, 3A0h, 0FFFC7A94h, 71h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A40h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 20h, 3D8h, 0FFFC7AD0h, 49h
dd 80E4100h, 0E430287h,	0E0A7E30h, 0EC74108h, 0B4104h
dd 3Ch,	3FCh, 0FFFC7AF8h, 0A5h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A7202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 20h, 43Ch
dd 0FFFC7B60h, 54h, 80E4100h, 0E430283h, 0A450230h, 0C341080Eh
dd 0B45040Eh, 38h, 460h, 0FFFC7B90h, 0BAh, 80E4100h, 0E410286h
dd 4303830Ch, 5B02300Eh, 410C0E0Ah, 41080EC3h, 46040EC6h
dd 0A46020Bh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 3Ch, 49Ch
dd 0FFFC7C10h, 0C7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A4F02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4204h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC7C80h
dd 0E2h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 34h, 5Ch, 0FFFC7D24h, 0BDh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2500E43h, 100E0AAEh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 94h, 0FFFC7DACh
dd 697h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0AA20201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 54h, 0D4h, 0FFFC8404h, 811h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 0A990201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B48040Eh, 0A022E03h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B46040Eh, 3Ch, 12Ch, 0FFFC8BC0h
dd 1F3h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A01C803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC8D5Ch
dd 1A0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011E03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 3Ch, 5Ch, 0FFFC8EBCh,	0F9h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AA202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 3Ch, 9Ch, 0FFFC8F78h, 21Eh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0ACC02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 58h,	0DCh, 0FFFC9158h, 0E5h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A59h, 0C0EC341h, 80EC641h
dd 40EC741h, 51020B46h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 44040EC7h, 0E0A530Bh, 0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4604h, 3Ch, 138h, 0FFFC91E4h, 2B9h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0ADD02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 2Ch,	178h, 0FFFC9460h, 0C0h,	80E4100h, 0E410286h, 4303830Ch
dd 9502400Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFC94D8h
dd 2B8h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A6D0201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 0A023103h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 3Ch, 74h,	0FFFC9738h
dd 0C4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AB302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 0B4h, 0FFFC97BCh, 0F1h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0AE002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 0F4h, 0FFFC9870h, 120h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A010F03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 3Ch,	134h, 0FFFC9950h, 0F1h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0AE002h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 174h
dd 0FFFC9A04h, 47h, 300E4300h, 40E0A7Eh, 0B41h,	20h, 190h
dd 0FFFC9A30h, 6Ah, 80E4100h, 0E430283h, 0A5F0230h, 0C341080Eh
dd 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFC9A60h
dd 7Dh,	80E4100h, 0E410286h, 4303830Ch,	7002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch,	0FFFC9AB0h, 2CCh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0A4D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 34h, 8Ch, 0FFFC9D3Ch, 1D8h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 3400E43h, 0E0A01C2h
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4104h, 34h, 0C4h
dd 0FFFC9EDCh, 118h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 3400E43h, 0E0A0102h,	0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4104h, 20h, 0FCh, 0FFFC9FBCh, 71h,	80E4100h, 0E430283h
dd 0A660230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFC9FF4h
dd 10Ah, 80E4100h, 0E430283h, 0AEA0230h, 0C341080Eh, 0B45040Eh
dd 80E0A4Fh, 40EC341h, 0B41h, 54h, 4Ch,	0FFFCA0D0h, 55Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A5602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4304h,	140E0A42h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B42h, 40h, 0A4h, 0FFFCA5D4h, 430h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 3C20301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 3Ch, 0E8h, 0FFFCA9C0h, 138h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011F03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 128h, 0FFFCAAB8h, 110h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 20h, 168h, 0FFFCAB88h, 65h, 80E4100h
dd 0E430283h, 0A5A0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFCABB4h
dd 1D8h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A570201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 0A015F03h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 3Ch, 74h,	0FFFCAD34h
dd 118h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AFF02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 3Ch, 0B4h, 0FFFCAE0Ch, 1C0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A01A803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 20h, 0F4h, 0FFFCAF8Ch, 6Ah, 80E4100h, 0E430283h
dd 0A5F0230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFCAFBCh
dd 151h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 140E0A7Ch, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 18h, 5Ch, 0FFFCB0D0h, 47h, 300E4300h
dd 40E0A7Eh, 0B41h, 20h, 78h, 0FFFCB0FCh, 6Ah, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFCB12Ch
dd 250h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0F00E4605h, 0A650201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 5Ch, 0FFFCB33Ch,	47h, 300E4300h
dd 40E0A7Eh, 0B41h, 20h, 78h, 0FFFCB368h, 6Ah, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFCB398h
dd 46h,	80E4100h, 0E430283h, 0E0A7730h,	0EC34108h, 0B4504h
dd 2Ch,	40h, 0FFFCB3BCh, 6Dh, 80E4100h,	0E410286h, 4303830Ch
dd 6002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 70h,	0FFFCB3FCh, 4E6h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0A00E4605h, 0A790202h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 40h
dd 0B0h, 0FFFCB8A4h, 293h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 2510301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 20h
dd 0F4h, 0FFFCBAF4h, 6Ah, 80E4100h, 0E430283h, 0A5F0230h
dd 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFCBB24h
dd 0B7Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0B00E4605h, 0A680201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 18h, 5Ch, 0FFFCC660h,	47h, 300E4300h
dd 40E0A7Eh, 0B41h, 3Ch, 78h, 0FFFCC68Ch, 18Fh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A017E03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 20h, 0B8h, 0FFFCC7DCh, 6Ah, 80E4100h, 0E430283h
dd 0A5F0230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch,	0FFFCC80Ch
dd 0DAh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0ACBh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 54h,	0FFFCC8B0h, 2Ch, 200E4300h, 40E0A5Fh, 0B45h, 20h
dd 70h,	0FFFCC8C0h, 7Ah, 80E4100h, 0E430283h, 0A610230h
dd 0C341080Eh, 0B41040Eh, 34h, 94h, 0FFFCC918h,	90h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A6Eh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 0CCh, 0FFFCC970h
dd 214h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 20h, 10Ch, 0FFFCCB44h, 51h, 80E4100h
dd 0E430283h, 0A420220h, 0C341080Eh, 0B41040Eh,	3Ch, 130h
dd 0FFFCCB74h, 15Ah, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0AC202h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 34h, 170h, 0FFFCCC90h
dd 178h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AFDh, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 18h
dd 1A8h, 0FFFCCDD0h, 51h, 300E4300h, 0E0A4302h,	0B4204h
dd 20h,	1C4h, 0FFFCCE08h, 68h, 80E4100h, 0E430283h, 0A5D0230h
dd 0C341080Eh, 0B41040Eh, 18h, 1E8h, 0FFFCCE4Ch, 79h, 300E4300h
dd 0E0A6B02h, 0B4204h, 18h, 204h, 0FFFCCEACh, 9Ch, 300E4300h
dd 0E0A6D02h, 0B4404h, 20h, 220h, 0FFFCCF2Ch, 97h, 300E4300h
dd 0E0A7502h, 510B4804h, 41040E0Ah, 0Bh, 20h, 244h, 0FFFCCFA0h
dd 97h,	300E4300h, 0E0A7502h, 510B4804h, 41040E0Ah, 0Bh
dd 18h,	268h, 0FFFCD014h, 75h, 300E4300h, 0E0A6502h, 0B4404h
dd 20h,	284h, 0FFFCD070h, 68h, 80E4100h, 0E430283h, 0A540230h
dd 0C341080Eh, 0B43040Eh, 2Ch, 2A8h, 0FFFCD0B4h, 74h, 80E4100h
dd 0E410286h, 4303830Ch, 5D02300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 20h,	2D8h, 0FFFCD0F8h, 68h, 80E4100h
dd 0E430283h, 0A540230h, 0C341080Eh, 0B43040Eh,	20h, 2FCh
dd 0FFFCD13Ch, 68h, 80E4100h, 0E430283h, 0A540230h, 0C341080Eh
dd 0B43040Eh, 20h, 320h, 0FFFCD180h, 68h, 80E4100h, 0E430283h
dd 0A540230h, 0C341080Eh, 0B43040Eh, 3Ch, 344h,	0FFFCD1C4h
dd 634h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A025803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 384h, 0FFFCD7B8h, 1151h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0AD00201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 48h, 3C4h, 0FFFCE8CCh, 125h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A7Fh, 0C0EC341h, 80EC641h, 40EC741h, 84020B48h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 3Ch
dd 410h, 0FFFCE9A8h, 195h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AFC02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 450h
dd 0FFFCEB00h, 58h, 300E4300h, 0E0A4F02h, 0B4104h, 48h
dd 46Ch, 0FFFCEB3Ch, 129h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A86h, 0C0EC341h, 80EC641h
dd 40EC741h, 84020B45h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0Bh, 44h,	4B8h, 0FFFCEC1Ch, 9Dh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A71h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A540B46h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 38h, 500h, 0FFFCEC74h
dd 0BCh, 80E4100h, 0E410286h, 4303830Ch, 7702300Eh, 410C0E0Ah
dd 41080EC3h, 46040EC6h, 0E0A700Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 38h, 53Ch, 0FFFCECF4h, 0BCh, 80E4100h, 0E410286h
dd 4303830Ch, 7702300Eh, 410C0E0Ah, 41080EC3h, 46040EC6h
dd 0E0A700Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 44h, 578h
dd 0FFFCED74h, 0C1h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A94h,	0C0EC341h, 80EC641h, 40EC741h
dd 0A540B47h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh
dd 38h,	5C0h, 0FFFCEDF0h, 94h, 80E4100h, 0E410286h, 4303830Ch
dd 6902300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A540Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 2Ch, 5FCh, 0FFFCEE48h
dd 83h,	80E4100h, 0E430283h, 0A5D0230h,	0C341080Eh, 0B46040Eh
dd 80E0A54h, 40EC341h, 0B41h, 54h, 62Ch, 0FFFCEE9Ch, 0E6h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AAD02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 5C0B4804h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 684h, 0FFFCEF2Ch, 22Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A015D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 3Ch, 6C4h, 0FFFCF118h, 0BDh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AA502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 54h, 704h, 0FFFCF198h, 22Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A01D603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 140E0A7Bh, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 3Ch, 75Ch, 0FFFCF36Ch, 1E0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A017303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 3Ch, 79Ch, 0FFFCF50Ch, 20Bh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A018803h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 18h,	7DCh, 0FFFCF6D8h, 3Ch, 200E4300h, 40E0A6Ah, 0B43h
dd 20h,	7F8h, 0FFFCF6F8h, 71h, 80E4100h
dd 0E430283h, 0A660230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFCF730h
dd 33h,	200E4300h, 40E0A66h, 0B45h, 18h, 38h, 0FFFCF748h
dd 33h,	200E4300h, 40E0A66h, 0B45h, 18h, 54h, 0FFFCF760h
dd 33h,	200E4300h, 40E0A66h, 0B45h, 18h, 70h, 0FFFCF778h
dd 33h,	200E4300h, 40E0A66h, 0B45h, 3Ch, 8Ch, 0FFFCF790h
dd 8Fh,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A7E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 0CCh, 0FFFCF7E0h, 5Bh, 80E4100h
dd 0E410286h, 4303830Ch, 4E02200Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	0FCh, 0FFFCF80Ch, 134h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A011C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 3Ch, 13Ch, 0FFFCF900h, 17C2h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0A00E4605h, 0AAC0204h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 20h,	17Ch, 0FFFD1084h, 68h, 80E4100h, 0E430283h, 0A540230h
dd 0C341080Eh, 0B43040Eh, 3Ch, 1A0h, 0FFFD10C8h, 31Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A022503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 40h, 1E0h, 0FFFD13A4h, 370h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 3450301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 40h, 224h, 0FFFD16D0h, 2BCh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 2A30301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 40h, 268h, 0FFFD1948h, 1F1h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 1E00301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 2ACh, 0FFFD1AF8h, 14Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A013A03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 40h, 2ECh, 0FFFD1C04h, 289h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 2780301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 40h, 330h, 0FFFD1E4Ch, 2F6h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 2E50301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 40h, 374h, 0FFFD2100h, 397h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 3480301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 40h, 3B8h, 0FFFD2454h, 3BFh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 3AB0301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 3FCh, 0FFFD27D0h, 190h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A017703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 43Ch, 0FFFD2920h, 257h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A021803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 20h, 47Ch, 0FFFD2B38h, 68h, 80E4100h
dd 0E430283h, 0A540230h, 0C341080Eh, 0B43040Eh,	3Ch, 4A0h
dd 0FFFD2B7Ch, 17Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0A016103h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 40h, 4E0h, 0FFFD2CB8h
dd 320h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 3040301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 3Ch, 524h, 0FFFD2F94h, 238h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A022003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 20h, 564h, 0FFFD318Ch, 6Ah, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFD31BCh
dd 33h,	200E4300h, 40E0A6Ah, 0B41h, 2Ch, 38h, 0FFFD31D4h
dd 17Bh, 80E4100h, 0E410286h, 4303830Ch, 6E03300Eh, 0C0E0A01h
dd 80EC341h, 40EC641h, 0B41h, 2Ch, 68h,	0FFFD3320h, 57h
dd 80E4100h, 0E410286h,	4303830Ch, 4202200Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 3Ch, 98h,	0FFFD3348h, 11CCh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 0A490201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 3Ch, 0D8h, 0FFFD44D4h, 1D4h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A01BB03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 118h, 0FFFD4668h, 1C0h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A019C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 158h, 0FFFD47E8h, 1BCh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A01A303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 198h, 0FFFD4964h, 200h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A01E803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 40h, 1D8h, 0FFFD4B24h, 334h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 31A0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 20h, 21Ch, 0FFFD4E14h, 71h
dd 80E4100h, 0E430283h,	0A660230h, 0C341080Eh, 0B41040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD4E4Ch
dd 0F5h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AE402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 5Ch, 0FFFD4F04h, 65h, 80E4100h
dd 0E410286h, 4303830Ch, 5402300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	8Ch, 0FFFD4F3Ch, 357h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0A01F503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 40h, 0CCh, 0FFFD5254h, 1C9h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0A00E4605h, 1190301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	3Ch, 110h, 0FFFD53DCh, 146h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A010903h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 3Ch,	150h, 0FFFD54E4h, 9Ah, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 20h, 190h
dd 0FFFD5540h, 9Fh, 80E4100h, 0E430283h, 0A900230h, 0C341080Eh
dd 0B45040Eh, 2Ch, 1B4h, 0FFFD55BCh, 5Dh, 80E4100h, 0E410286h
dd 4303830Ch, 5002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	40h, 1E4h, 0FFFD55ECh, 72Ah, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 1C50301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h
dd 0Bh,	3Ch, 228h, 0FFFD5CD4h, 42Bh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A5702h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h
dd 20h,	268h, 0FFFD60C0h, 68h, 80E4100h, 0E430283h, 0A540230h
dd 0C341080Eh, 0B43040Eh, 40h, 28Ch, 0FFFD6104h, 2DBh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 2840301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 2D0h, 0FFFD639Ch, 14Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A013703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 310h, 0FFFD64ACh, 13Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A012303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 20h, 350h, 0FFFD65A8h, 71h, 80E4100h
dd 0E430283h, 0A660230h, 0C341080Eh, 0B41040Eh,	3Ch, 374h
dd 0FFFD65F8h, 6Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A5E02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 34h, 3B4h, 0FFFD6628h
dd 7Dh,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A5Dh, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 18h
dd 3ECh, 0FFFD6670h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD6664h
dd 115h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A010403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 5Ch, 0FFFD673Ch,	112h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AE802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 40h, 9Ch, 0FFFD6810h, 1D0h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4605h, 19B0302h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	18h, 0E0h, 0FFFD699Ch, 47h, 300E4300h, 40E0A7Eh
dd 0B41h, 3Ch, 0FCh, 0FFFD69C8h, 0C5h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AB402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	13Ch, 0FFFD6A50h, 47h, 300E4300h, 40E0A7Eh, 0B41h
dd 20h,	158h, 0FFFD6A7Ch, 69h, 80E4100h, 0E430283h, 0A5E0250h
dd 0C341080Eh, 0B41040Eh, 3Ch, 17Ch, 0FFFD6AC4h, 0F4h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AE302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 1BCh, 0FFFD6B78h, 0DAFh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0D00E4605h
dd 0AE10202h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 3Ch, 1FCh, 0FFFD78E8h, 224h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A01CE03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 34h,	23Ch, 0FFFD7ACCh, 203h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 3500E43h, 0E0A01C5h, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4204h, 40h, 274h, 0FFFD7C98h, 2BFh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 17C0301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 20h,	2B8h, 0FFFD7F14h, 6Ah, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD7F44h
dd 17Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0A4202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 20h, 5Ch, 0FFFD8084h, 6Ah, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFD80B4h
dd 9Ch,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 140E0A78h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 4D020B41h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 20h, 74h,	0FFFD80F8h, 6Ah
dd 80E4100h, 0E430283h,	0A5F0230h, 0C341080Eh, 0B41040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD8128h
dd 28Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A670201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 5Ch, 0FFFD8374h,	0F4h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AD902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 20h, 9Ch, 0FFFD8428h, 6Ah, 80E4100h, 0E430283h
dd 0A5F0230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD8458h
dd 3Ah,	80E4100h, 0E430283h, 0E0A6F30h,	0EC34108h, 0B4104h
dd 34h,	40h, 0FFFD8470h, 92h, 80E4100h,	0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A83h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 34h, 78h, 0FFFD84CCh, 90h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A81h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 38h, 0B0h, 0FFFD8524h
dd 164h, 80E4100h, 0E430283h, 0A660230h, 0C341080Eh, 0B45040Eh
dd 0E0A6402h, 0EC34108h, 610B4704h, 41080E0Ah, 42040EC3h
dd 0Bh,	3Ch, 0ECh, 0FFFD864Ch, 4B1h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A01BC03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 20h,	12Ch, 0FFFD8AC0h, 5Ch, 80E4100h, 0E430283h, 0A460220h
dd 0C341080Eh, 0B41040Eh, 20h, 150h, 0FFFD8AF8h, 59h, 80E4100h
dd 0E430283h, 0A470220h, 0C341080Eh, 0B44040Eh,	20h, 174h
dd 0FFFD8B30h, 51h, 80E4100h, 0E430283h, 0A400220h, 0C341080Eh
dd 0B43040Eh, 34h, 198h, 0FFFD8B60h, 58h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A49h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 18h, 1D0h, 0FFFD8B80h, 2Ch
dd 200E4300h, 40E0A5Fh,	0B45h, 18h, 1ECh, 0FFFD8B90h, 2Ch
dd 200E4300h, 40E0A5Fh,	0B45h, 3Ch, 208h, 0FFFD8BA0h, 18Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AE502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 20h, 248h, 0FFFD8CF0h, 161h, 80E4100h
dd 0E430283h, 0ADB0230h, 0C341080Eh, 0B44040Eh,	3Ch, 26Ch
dd 0FFFD8E30h, 324h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0A020A03h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 34h, 2ACh, 0FFFD9114h
dd 65h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A52h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 2Ch
dd 2E4h, 0FFFD9144h, 5Ah, 80E4100h, 0E410286h, 4303830Ch
dd 4902300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h, 0Bh, 3Ch
dd 314h, 0FFFD9170h, 2BEh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A012803h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h
dd 354h, 0FFFD93F0h, 62h, 400E4300h, 0E0A5902h,	0B4104h
dd 3Ch,	370h, 0FFFD9438h, 124h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A010A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 20h
dd 3B0h, 0FFFD951Ch, 0D4h, 80E4100h, 0E430283h,	0AB10240h
dd 0C341080Eh, 0B42040Eh, 3Ch, 3D4h, 0FFFD95CCh, 19Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A015B03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 414h, 0FFFD9728h, 0B8h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AA702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 454h, 0FFFD97A0h, 68h, 80E4100h
dd 0E410286h, 4303830Ch, 5702300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFD97C0h
dd 159h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A4302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 7E0B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 18h, 74h,	0FFFD98C4h, 5Ah
dd 400E4300h, 0E0A5102h, 0B4104h, 3Ch, 90h, 0FFFD9904h
dd 85h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A7402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 0D0h, 0FFFD994Ch, 0E7h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0ABE02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 20h, 110h, 0FFFD99F4h, 5Eh,	80E4100h, 0E430283h
dd 0A530230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD9A18h
dd 7Fh,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A6A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 34h, 5Ch, 0FFFD9A58h, 59h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A46h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 34h, 94h, 0FFFD9A7Ch
dd 6Ah,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A5Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 20h
dd 0CCh, 0FFFD9AB0h, 77h, 80E4100h, 0E430283h, 0A5E0230h
dd 0C341080Eh, 0B41040Eh, 34h, 0F0h, 0FFFD9B04h, 0A4h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A73h, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD9B58h
dd 211h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A020003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 5Ch, 0FFFD9D2Ch,	63Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0A00E4605h
dd 0A800201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 44h, 9Ch,	0FFFDA32Ch, 16Eh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0A64h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A530B47h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B42040Eh, 20h, 0E4h, 0FFFDA454h, 4Dh, 80E4100h
dd 0E430287h, 0A420250h, 0C741080Eh, 0B41040Eh,	34h, 108h
dd 0FFFDA480h, 76h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2500E43h, 100E0A52h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 3Ch, 140h, 0FFFDA4C0h, 107h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 0AB70201h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 6Ch,	180h, 0FFFDA588h, 465h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A02EA03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 0E0AB802h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 750B4404h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 47040EC5h
dd 0Bh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFDA968h
dd 6Dh,	80E4100h, 0E410286h, 4303830Ch,	5A02200Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 54h, 4Ch,	0FFFDA9A8h, 117h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AAF02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4204h,	140E0A4Dh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 18h, 0A4h, 0FFFDAA68h, 3Ch
dd 300E4300h, 40E0A73h,	0B41h, 3Ch, 0C0h, 0FFFDAA88h, 25Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0A024D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 100h, 0FFFDACA8h, 0A1h
dd 400E4300h, 0E0A7102h, 0B4404h, 20h, 11Ch, 0FFFDAD30h
dd 66h,	80E4100h, 0E430283h, 0E0A7530h,	0EC34108h, 0B4204h
dd 20h,	140h, 0FFFDAD74h, 7Eh, 80E4100h, 0E430283h, 0E0A7530h
dd 0EC34108h, 0B4204h, 20h, 164h, 0FFFDADD0h, 5Ah, 80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B45040Eh,	3Ch, 188h
dd 0FFFDAE08h, 0D0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A6102h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4404h, 20h, 1C8h, 0FFFDAE98h
dd 6Ah,	80E4100h, 0E430283h, 0A4D0230h,	0C341080Eh, 0B42040Eh
dd 18h,	1ECh, 0FFFDAEE0h, 3Bh, 200E4300h, 40E0A6Eh, 0B45h
dd 40h,	208h, 0FFFDAF00h, 41Ch,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4605h, 22A0302h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 18h
dd 24Ch, 0FFFDB2D8h, 36h, 200E4300h, 40E0A69h, 0B45h, 20h
dd 268h, 0FFFDB2F4h, 92h, 80E4100h, 0E430283h, 0A870230h
dd 0C341080Eh, 0B41040Eh, 34h, 28Ch, 0FFFDB364h, 5Bh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 34h, 2C4h, 0FFFDB388h
dd 122h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 3300E43h
dd 0E0A010Fh, 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4504h
dd 2Ch,	2FCh, 0FFFDB474h, 74h, 80E4100h, 0E410286h, 4303830Ch
dd 6702300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 18h
dd 32Ch, 0FFFDB4B8h, 46h, 300E4300h, 40E0A7Dh, 0B41h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFDB4CCh
dd 4Ah,	80E4100h, 0E430283h, 0E0A7220h,	0EC34108h, 0B4104h
dd 3Ch,	40h, 0FFFDB4F4h, 2CCh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0A01A203h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 20h
dd 80h,	0FFFDB780h, 3Ch, 80E4100h, 0E430283h, 0E0A6D30h
dd 0EC34108h, 0B4504h, 20h, 0A4h, 0FFFDB798h, 47h, 80E4100h
dd 0E430283h, 0E0A7830h, 0EC34108h, 0B4504h, 20h, 0C8h
dd 0FFFDB7BCh, 4Dh, 80E4100h, 0E430283h, 0E0A7D30h, 0EC34108h
dd 0B4204h, 34h, 0ECh, 0FFFDB7E8h, 5Dh,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Ah, 0C0EC341h
dd 80EC641h, 40EC741h, 0B45h, 40h, 124h, 0FFFDB810h, 11Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 10A0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 168h, 0FFFDB8E8h, 0E8h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0AD702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 20h, 1A8h, 0FFFDB990h, 41h, 80E4100h
dd 0E430283h, 0E0A7230h, 0EC34108h, 0B4504h, 3Ch, 1CCh
dd 0FFFDB9B0h, 181h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0A015F03h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 38h, 20Ch, 0FFFDBAF4h
dd 91h,	80E4100h, 0E410286h, 4303830Ch,	5002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0E0A6D0Bh, 0EC3410Ch, 0EC64108h
dd 0B4504h, 20h, 248h, 0FFFDBB4Ch, 7Ah,	80E4100h, 0E430283h
dd 0A530230h, 0C341080Eh, 0B44040Eh, 20h, 26Ch,	0FFFDBBA4h
dd 72h,	80E4100h, 0E430283h, 0A4B0230h,	0C341080Eh, 0B44040Eh
dd 40h,	290h, 0FFFDBBF4h, 1BAh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 1A90301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 34h
dd 2D4h, 0FFFDBD6Ch, 1A9h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 3300E43h, 0E0A0159h, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4204h, 2Ch, 30Ch, 0FFFDBEE0h, 66h, 80E4100h
dd 0E410286h, 4303830Ch, 5902400Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	33Ch, 0FFFDBF18h, 0C0h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AAF02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 18h, 37Ch, 0FFFDBF98h, 3Ah,	300E4300h, 40E0A71h
dd 0B41h, 18h, 398h, 0FFFDBFB8h, 3Ah, 300E4300h, 40E0A71h
dd 0B41h, 2Ch, 3B4h, 0FFFDBFD8h, 7Bh, 80E4100h,	0E410286h
dd 4303830Ch, 6A02300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0Bh,	18h, 3E4h, 0FFFDC024h, 3Ah, 300E4300h, 40E0A6Dh
dd 0B45h, 18h, 400h, 0FFFDC044h, 3Ah, 300E4300h, 40E0A6Dh
dd 0B45h, 54h, 41Ch, 0FFFDC064h, 191h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 0A4E0201h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 0A012703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 20h, 474h, 0FFFDC1A0h, 5Dh, 80E4100h, 0E430283h
dd 0A4E0230h, 0C341080Eh, 0B45040Eh, 34h, 498h,	0FFFDC1DCh
dd 12Ah, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2400E43h
dd 100E0A4Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 40h
dd 4D0h, 0FFFDC2D0h, 140h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 12F0301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 54h
dd 514h, 0FFFDC3CCh, 230h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 0A4E0201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 0A01BE03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh
dd 3Ch,	56Ch, 0FFFDC5A4h, 8Dh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A7802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 2Ch, 5ACh
dd 0FFFDC5F4h, 61h, 80E4100h, 0E410286h, 4303830Ch, 5402300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch, 5DCh, 0FFFDC628h
dd 477h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A01D003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 61Ch, 0FFFDCA60h, 0BBh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A62h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 20h
dd 654h, 0FFFDCAE4h, 51h, 80E4100h, 0E430283h, 0A460230h
dd 0C341080Eh, 0B41040Eh, 3Ch, 678h, 0FFFDCB14h, 23Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 0ACA0201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 2Ch, 6B8h, 0FFFDCD10h, 7Ch, 80E4100h
dd 0E430283h, 0A560230h, 0C341080Eh, 0B45040Eh,	80E0A51h
dd 40EC341h, 0B45h, 2Ch, 6E8h, 0FFFDCD5Ch, 5Ch,	80E4100h
dd 0E410286h, 4303830Ch, 4B02300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 20h,	718h, 0FFFDCD88h, 47h, 80E4100h
dd 0E430283h, 0E0A7830h, 0EC34108h, 0B4504h, 2Ch, 73Ch
dd 0FFFDCDACh, 70h, 80E4100h, 0E410286h, 4303830Ch, 4B02300Eh
dd 410C0E0Ah, 41080EC3h, 46040EC6h, 0Bh, 3Ch, 76Ch, 0FFFDCDECh
dd 86h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A6002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 2Ch, 7ACh, 0FFFDCE34h, 95h, 80E4100h
dd 0E410286h, 4303830Ch, 8802400Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 2Ch,	7DCh, 0FFFDCE9Ch, 0A1h,	80E4100h
dd 0E410286h, 4303830Ch, 9402400Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh
dd 2Ch,	80Ch, 0FFFDCF10h, 0BFh,	80E4100h, 0E410286h, 4303830Ch
dd 0A802400Eh, 410C0E0Ah, 41080EC3h, 41040EC6h,	0Bh, 34h
dd 83Ch, 0FFFDCFA0h, 9Ch, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A8Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 3Ch, 874h, 0FFFDD004h, 197h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AE002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 8B4h, 0FFFDD15Ch, 1A0h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A013003h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 40h,	8F4h, 0FFFDD2BCh, 221h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 1A80301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 34h
dd 938h, 0FFFDD49Ch, 214h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 3400E43h, 0E0A016Ah, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4104h, 3Ch, 970h, 0FFFDD678h, 12Dh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AD102h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 34h, 9B0h, 0FFFDD768h, 7Eh,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A6Fh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 34h, 9E8h, 0FFFDD7B0h, 5Eh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A4Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 2Ch
dd 0A20h, 0FFFDD7D8h, 129h, 80E4100h, 0E410286h, 4603830Ch
dd 202C00Eh, 0C0E0A67h,	80EC341h, 40EC641h, 0B43h, 3Ch
dd 0A50h, 0FFFDD8D4h, 2B2h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A020503h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch
dd 0A90h, 0FFFDDB48h, 1A3h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A013003h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 2Ch
dd 0AD0h, 0FFFDDCACh, 65h, 80E4100h, 0E410286h,	4303830Ch
dd 5802300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 0B00h, 0FFFDDCE4h, 103h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AEA02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 0B40h
dd 0FFFDDDA8h, 36Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 700E4305h, 0A015403h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 3Ch, 0B80h, 0FFFDE0D4h
dd 1F5h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0E00E4605h, 0AE90202h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 54h, 0BC0h, 0FFFDE28Ch, 1FEh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AF402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4104h,	140E0AF0h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 40h, 0C18h, 0FFFDE434h, 242h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0E00E4605h, 1300302h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 18h, 0C5Ch, 0FFFDE634h, 41h
dd 300E4300h, 40E0A78h,	0B41h, 20h, 0C78h, 0FFFDE65Ch
dd 0C7h, 80E4100h, 0E430283h, 0A6A0240h, 0C341080Eh, 0B41040Eh
dd 34h,	0C9Ch, 0FFFDE700h, 0BFh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A95h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 34h, 0CD4h,	0FFFDE788h, 99h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A86h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 0D0Ch, 0FFFDE7ECh
dd 2AFh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 0D4Ch, 0FFFDEA5Ch, 0F3h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A53h, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 18h
dd 0D84h, 0FFFDEB18h, 34h, 300E4300h, 40E0A6Bh,	0B41h
dd 3Ch,	0DA0h, 0FFFDEB30h, 2D6h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 0A640201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 3Ch
dd 0DE0h, 0FFFDEDC8h, 0A4h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 0E20h
dd 0FFFDEE2Ch, 8Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A7B02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 0E60h, 0FFFDEE78h
dd 9Ch,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 600E4305h, 0E0A8B02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 0EA0h, 0FFFDEED4h, 99h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A8802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 0EE0h,	0FFFDEF30h, 0B7h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0AA602h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 34h,	0F20h, 0FFFDEFA8h, 17Ah, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0AD1h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 3Ch, 0F58h,	0FFFDF0ECh, 730h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A03BD03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 3Ch, 0F98h, 0FFFDF7DCh, 400h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A01CC03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 20h,	0FD8h, 0FFFDFB9Ch, 41h,	80E4100h, 0E430283h, 0E0A7230h
dd 0EC34108h, 0B4504h, 40h, 0FFCh, 0FFFDFBBCh, 142h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 1250301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 40h, 1040h, 0FFFDFCBCh, 48Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0E00E4605h, 1130302h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 3Ch, 1084h, 0FFFE0108h, 185h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A9D0201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 20h, 10C4h, 0FFFE0250h, 53h
dd 80E4100h, 0E430283h,	0A480230h, 0C341080Eh, 0B41040Eh
dd 34h,	10E8h, 0FFFE0280h, 39Fh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A7Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 18h, 1120h,	0FFFE05E8h, 24Ah, 300E4300h
dd 0E0AC402h, 0B4104h, 48h, 113Ch, 0FFFE0818h, 0C2h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A47h
dd 0C0EC341h, 80EC641h,	40EC741h, 61020B44h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 45040EC7h, 0Bh, 2Ch, 1188h, 0FFFE0890h
dd 8Fh,	80E4100h, 0E410286h, 4303830Ch,	4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 3Ch, 11B8h, 0FFFE08F0h, 213h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A4302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 18h, 11F8h, 0FFFE0AC4h, 40h, 300E4300h
dd 40E0A63h, 0B42h, 3Ch, 1214h,	0FFFE0AE8h, 1429h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0C00E4605h
dd 0A730201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 20h, 1254h, 0FFFE1ED4h, 46h, 80E4100h, 0E430283h
dd 0E0A7730h, 0EC34108h, 0B4504h, 34h, 1278h, 0FFFE1EF8h
dd 70h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A61h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 3Ch
dd 12B0h, 0FFFE1F30h, 13Ah, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A6F02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 54h, 12F0h
dd 0FFFE202Ch, 0D33h, 80E4100h,	0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0A0A1403h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 0E0A6702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 34h, 1348h
dd 0FFFE2D08h, 0C9h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0ABAh,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 3Ch, 1380h, 0FFFE2D9Ch, 19Bh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A011903h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 2Ch,	13C0h, 0FFFE2EF8h, 54h,	80E4100h, 0E410286h, 4303830Ch
dd 4702300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 13F0h, 0FFFE2F1Ch, 145h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8C02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 40h, 1430h
dd 0FFFE3024h, 88Eh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 0A00E4605h, 32C0301h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 38h, 1474h, 0FFFE3870h
dd 7Fh,	80E4100h, 0E410286h, 4303830Ch,	5302300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0E0A570Bh, 0EC3410Ch, 0EC64108h
dd 0B4504h, 20h, 14B0h,	0FFFE38B4h, 41h, 80E4100h, 0E430283h
dd 0E0A7230h, 0EC34108h, 0B4504h, 2Ch, 14D4h, 0FFFE38D4h
dd 5Ah,	80E4100h, 0E410286h, 4303830Ch,	4902300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 48h, 1504h, 0FFFE3900h, 0FAh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Ah, 0C0EC341h, 80EC641h, 40EC741h, 4F020B41h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 46040EC7h, 0Bh, 68h
dd 1550h, 0FFFE39B0h, 29Fh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0A8502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0A61020Bh
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh
dd 44h,	15BCh, 0FFFE3BE4h, 9Ch,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 7A300E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0A4B020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B45040Eh, 54h, 1604h, 0FFFE3C38h, 0A9h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A4E02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 7F0B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	3Ch, 165Ch, 0FFFE3C8Ch,	0A4h, 80E4100h,	0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 140E0A7Ah
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B43h, 54h
dd 169Ch, 0FFFE3CF0h, 162h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A4602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4304h, 140E0AC3h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B45h, 28h
dd 16F4h, 0FFFE3DFCh, 4Dh, 80E4100h, 0E410286h,	4303830Ch
dd 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 2Ch, 1720h
dd 0FFFE3E20h, 0BEh, 80E4100h, 0E410286h, 4303830Ch, 0B102300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 2Ch, 1750h, 0FFFE3EB0h
dd 93h,	80E4100h, 0E410286h, 4303830Ch,	8602300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 18h, 1780h, 0FFFE3F14h, 3Fh
dd 300E4300h, 40E0A72h,	0B45h, 54h, 179Ch, 0FFFE3F38h
dd 1CAh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AD002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4104h,	140E0ABDh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B47h, 3Ch, 17F4h, 0FFFE40ACh, 9Ch
dd 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A8402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 44h,	1834h, 0FFFE4108h, 0F0h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0AAAh, 0C0EC341h, 80EC641h
dd 40EC741h, 0A6F0B45h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B41040Eh, 3Ch, 187Ch, 0FFFE41B0h, 239h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A01E903h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 18h,	18BCh, 0FFFE43ACh, 30h,	200E4300h, 40E0A63h, 0B45h
dd 20h,	18D8h, 0FFFE43C0h, 57h,	80E4100h, 0E430283h, 0A420230h
dd 0C341080Eh, 0B41040Eh, 20h, 18FCh, 0FFFE43F4h, 60h
dd 80E4100h, 0E430283h,	0A420230h, 0C341080Eh, 0B41040Eh
dd 3Ch,	1920h, 0FFFE4430h, 16Bh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AC902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 3Ch, 1960h
dd 0FFFE455Ch, 0E4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0E0A4202h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 6Ch, 19A0h, 0FFFE4600h
dd 197h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4304h,	140E0A5Dh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 4F020B47h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 2Ch, 1A10h, 0FFFE4728h
dd 52h,	80E4100h, 0E410286h, 4303830Ch,	4502300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 1A40h, 0FFFE474Ch, 61h
dd 80E4100h, 0E410286h,	4303830Ch, 5402300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 1A70h, 0FFFE4780h, 68h
dd 80E4100h, 0E410286h,	4303830Ch, 5B02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 1AA0h, 0FFFE47B8h, 61h
dd 80E4100h, 0E410286h,	4303830Ch, 5402300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 1AD0h, 0FFFE47ECh, 68h
dd 80E4100h, 0E410286h,	4303830Ch, 5B02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 54h, 1B00h, 0FFFE4824h, 847h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 7FD0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 48040EC5h, 0E0A6D0Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 54h, 1B58h, 0FFFE5014h
dd 368h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A012203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B47040Eh, 0E0A9902h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 1BB0h, 0FFFE5324h
dd 0C7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AAA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 3Ch, 1BF0h, 0FFFE53ACh, 870h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A048C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 34h, 1C30h, 0FFFE5BDCh, 82h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A73h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 34h, 1C68h, 0FFFE5C28h, 0DDh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0ACEh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 2Ch
dd 1CA0h, 0FFFE5CD0h, 66h, 80E4100h, 0E430283h,	0E0A7E30h
dd 0EC34108h, 530B4504h, 41080E0Ah, 45040EC3h, 0Bh, 2Ch
dd 1CD0h, 0FFFE5D08h, 330h, 80E4100h, 0E410286h, 4303830Ch
dd 2603300Eh, 0C0E0A02h, 80EC341h, 40EC641h, 0B47h, 58h
dd 1D00h, 0FFFE6008h, 0D1h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A5Fh, 0C0EC341h, 80EC641h
dd 40EC741h, 0A570B44h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B46040Eh, 100E0A78h, 0C0EC341h, 80EC641h, 40EC741h
dd 0B45h, 20h, 1D5Ch, 0FFFE6080h, 87h, 80E4100h, 0E430283h
dd 0A690240h, 0C341080Eh, 0B42040Eh, 34h, 1D80h, 0FFFE60E4h
dd 118h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0ACAh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 1DB8h, 0FFFE61C4h, 25h, 200E4300h, 40E0A5Ch,	0B41h
dd 3Ch,	1DD4h, 0FFFE61D0h, 2C0h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A026903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch,	0FFFE6438h
dd 229h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 3400E43h
dd 0E0A021Ah, 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4104h
dd 24h,	54h, 0FFFE662Ch, 125h, 80E4100h, 0E430283h, 10C0330h
dd 41080E0Ah, 45040EC3h, 0Bh, 3Ch, 7Ch,	0FFFE672Ch, 91h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 18h, 0BCh, 0FFFE6780h, 53h, 300E4300h
dd 0E0A4602h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 24h, 1Ch,	0FFFE67A0h
dd 192h, 80E4100h, 0E430283h, 1130330h,	41080E0Ah, 44040EC3h
dd 0Bh,	2Ch, 44h, 0FFFE690Ch, 133h, 80E4100h, 0E410286h
dd 4303830Ch, 0FC02300Eh, 410C0E0Ah, 41080EC3h,	41040EC6h
dd 0Bh,	3Ch, 74h, 0FFFE6A10h, 85h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A6E02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h
dd 3Ch,	0B4h, 0FFFE6A58h, 85h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6D02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 3Ch, 0F4h
dd 0FFFE6AA0h, 112h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0AE902h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4404h, 34h, 134h, 0FFFE6B74h
dd 65h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A52h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 20h
dd 16Ch, 0FFFE6BA4h, 61h, 80E4100h, 0E430283h, 0A560230h
dd 0C341080Eh, 0B41040Eh, 38h, 190h, 0FFFE6BE4h, 286h
dd 80E4100h, 0E410286h,	4303830Ch, 7902500Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0A6B020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B47040Eh, 34h, 1CCh, 0FFFE6E30h, 84h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A75h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 2Ch, 204h, 0FFFE6E7Ch, 0B4h
dd 80E4100h, 0E430283h,	0A5F0230h, 0C341080Eh, 0B44040Eh
dd 80E0A53h, 40EC341h, 0B48h, 3Ch, 234h, 0FFFE6F00h, 34Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AF802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 274h, 0FFFE720Ch, 34h, 200E4300h
dd 40E0A67h, 0B45h, 6Ch, 290h, 0FFFE7224h, 29Ah, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0ADE02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4304h, 140E0A63h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 25030B45h,	140E0A01h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B47h, 20h, 300h, 0FFFE7450h, 47h
dd 80E4100h, 0E430283h,	0E0A7C30h, 0EC34108h, 0B4104h
dd 2Ch,	324h, 0FFFE7474h, 0A8h,	80E4100h, 0E410286h, 4303830Ch
dd 7602300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 18h
dd 354h, 0FFFE74ECh, 32h, 200E4300h, 40E0A65h, 0B45h, 18h
dd 370h, 0FFFE7504h, 35h, 200E4300h, 40E0A68h, 0B45h, 28h
dd 38Ch, 0FFFE7520h, 0C6h, 80E4100h, 0E430283h,	0E460240h
dd 400E4334h, 80E0A6Eh,	40EC341h, 0B44h, 38h, 3B8h, 0FFFE75BCh
dd 161h, 80E4100h, 0E430283h, 0A820230h, 0C341080Eh, 0B41040Eh
dd 0E0A6202h, 0EC34108h, 7F0B4504h, 41080E0Ah, 48040EC3h
dd 0Bh,	20h, 3F4h, 0FFFE76E4h, 93h, 80E4100h, 0E430283h
dd 0A880230h, 0C341080Eh, 0B41040Eh, 68h, 418h,	0FFFE7754h
dd 129h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0A75h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A6F0B47h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 84h, 484h, 0FFFE7814h
dd 594h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 12E0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0A4D020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 0A017103h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 0A011203h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFE7D08h
dd 0F2h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AE102h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 5Ch, 0FFFE7DBCh, 4C5h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 9Ch, 0FFFE8244h, 1F8h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A015703h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFE83E4h
dd 41h,	200E4300h, 40E0A78h, 0B41h, 2Ch, 38h, 0FFFE840Ch
dd 57h,	80E4100h, 0E410286h, 4303830Ch,	4A02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 34h, 68h,	0FFFE8434h, 98h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A62h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 0A0h, 0FFFE8494h, 5Ch, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A4Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFE84A0h
dd 37h,	200E4300h, 40E0A6Eh, 0B41h, 2Ch, 38h, 0FFFE84BCh
dd 6Dh,	80E4100h, 0E410286h, 4303830Ch,	5B02300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 20h, 68h,	0FFFE84FCh, 8Bh
dd 80E4100h, 0E430283h,	0A6E0240h, 0C341080Eh, 0B41040Eh
dd 20h,	8Ch, 0FFFE8564h, 8Ah, 80E4100h,	0E430283h, 0A480240h
dd 0C341080Eh, 0B43040Eh, 3Ch, 0B0h, 0FFFE85CCh, 9Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A6802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 34h, 0F0h, 0FFFE8628h, 75h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A66h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFE8650h
dd 56h,	80E4100h, 0E410286h, 4303830Ch,	4902300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch,	0FFFE8678h, 0C9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 44h, 8Ch, 0FFFE8704h, 7Eh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A56h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A510B45h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 44h, 0D4h, 0FFFE873Ch
dd 76h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A4Eh, 0C0EC341h, 80EC641h, 40EC741h, 0A510B45h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 38h
dd 11Ch, 0FFFE876Ch, 69h, 80E4100h, 0E410286h, 4303830Ch
dd 4102300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A510Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 18h, 158h, 0FFFE879Ch
dd 39h,	200E4300h, 40E0A6Ch, 0B41h, 18h, 174h, 0FFFE87BCh
dd 45h,	200E4300h, 40E0A75h, 0B44h, 3Ch, 190h, 0FFFE87E8h
dd 9Dh,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A6F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 2Ch, 1D0h, 0FFFE8848h, 6Ah, 80E4100h
dd 0E410286h, 4303830Ch, 5902300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	200h, 0FFFE8884h, 50h, 300E4300h
dd 0E0A4702h, 0B4104h, 18h, 21Ch, 0FFFE88B8h, 5Bh, 300E4300h
dd 0E0A5202h, 0B4104h, 18h, 238h, 0FFFE88F8h, 6Ch, 300E4300h
dd 0E0A6302h, 0B4104h, 2Ch, 254h, 0FFFE8948h, 5Ah, 80E4100h
dd 0E410287h, 4303830Ch, 4D02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC7h, 0Bh, 3Ch,	284h, 0FFFE8974h, 10Bh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A4002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 2C4h, 0FFFE8A40h, 0F1h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AE002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	304h, 0FFFE8AF4h, 49h, 300E4300h, 0E0A4002h, 0B4104h
dd 44h,	320h, 0FFFE8B24h, 0BDh,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A68h, 0C0EC341h, 80EC641h
dd 40EC741h, 0A5F0B43h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B46040Eh, 2Ch, 368h, 0FFFE8B9Ch, 5Ah, 80E4100h, 0E410287h
dd 4303830Ch, 4D02300Eh, 410C0E0Ah, 41080EC3h, 41040EC7h
dd 0Bh,	18h, 398h, 0FFFE8BC8h, 49h, 300E4300h, 0E0A4002h
dd 0B4104h, 18h, 3B4h, 0FFFE8BF8h, 50h,	300E4300h, 0E0A4702h
dd 0B4104h, 18h, 3D0h, 0FFFE8C2Ch, 6Ch,	300E4300h, 0E0A6302h
dd 0B4104h, 3Ch, 3ECh, 0FFFE8C7Ch, 7Dh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A6C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 34h,	42Ch, 0FFFE8CBCh, 0C7h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0AA9h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 3Ch, 464h, 0FFFE8D4Ch, 0B1h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A9B02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 34h, 4A4h, 0FFFE8DC0h, 150h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2500E43h, 100E0A73h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B44h, 2Ch, 4DCh, 0FFFE8ED8h, 59h
dd 80E4100h, 0E410286h,	4303830Ch, 4602200Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 2Ch, 50Ch, 0FFFE8F04h, 64h
dd 80E4100h, 0E410286h,	4303830Ch, 5702200Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 34h, 53Ch, 0FFFE8F38h, 4Bh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 7C300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 38h
dd 574h, 0FFFE8F4Ch, 75h, 80E4100h, 0E410286h, 4303830Ch
dd 4D02200Eh, 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A510Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 2Ch, 5B0h, 0FFFE8F88h
dd 5Fh,	80E4100h, 0E410286h, 4303830Ch,	4E02200Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 5E0h, 0FFFE8FB8h, 69h
dd 80E4100h, 0E410286h,	4303830Ch, 5802200Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 610h, 0FFFE8FF4h, 7Bh
dd 80E4100h, 0E410286h,	4303830Ch, 6A02200Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFE9028h
dd 3Fh,	80E4100h, 0E430283h, 0E0A7430h,	0EC34108h, 0B4104h
dd 44h,	40h, 0FFFE9044h, 86h, 80E4100h,	0E410287h, 4103860Ch
dd 483100Eh, 6C400E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 43040EC7h, 0A41020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B45040Eh, 54h, 88h,	0FFFE9084h, 0ADh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 140E0A70h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 63020B41h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	54h, 0E0h, 0FFFE90DCh, 5D4h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A033303h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh
dd 0A026B03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 54h, 138h, 0FFFE9658h, 2C0h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A016503h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B48040Eh
dd 140E0A53h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 3Ch, 190h, 0FFFE98C0h, 108h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AF302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 3Ch,	1D0h, 0FFFE9988h, 87Ch,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 0A460201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 3Ch
dd 210h, 0FFFEA1C4h, 829h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A01F903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFEA998h
dd 5Ah,	300E4300h, 40E0A78h, 0B41h, 2Ch, 38h, 0FFFEA9D8h
dd 63h,	80E4100h, 0E410286h, 4303830Ch,	4D02300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 28h, 68h,	0FFFEAA0Ch, 4Dh
dd 80E4100h, 0E410286h,	4303830Ch, 0A7B300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B42040Eh, 20h, 94h, 0FFFEAA30h,	63h, 80E4100h
dd 0E430283h, 0A580230h, 0C341080Eh, 0B41040Eh,	3Ch, 0B8h
dd 0FFFEAA70h, 86h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A6F02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 0F8h, 0FFFEAAB8h
dd 59h,	200E4300h, 0E0A4902h, 0B4404h, 18h, 114h, 0FFFEAAF8h
dd 60h,	200E4300h, 40E0A66h, 0B43h, 3Ch, 130h, 0FFFEAB3Ch
dd 14Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A5102h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 34h, 170h, 0FFFEAC48h, 91h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A77h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 1A8h, 0FFFEACA4h
dd 1D8h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AF402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 54h, 1E8h, 0FFFEAE3Ch, 0D5h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A9902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 5B0B4804h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 45040EC5h, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFEAEA4h
dd 17Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A016003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 2Ch, 5Ch, 0FFFEAFE0h,	76h, 80E4100h
dd 0E410286h, 4303830Ch, 6902300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 34h,	8Ch, 0FFFEB028h, 9Ch, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A84h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 34h, 0C4h, 0FFFEB08Ch
dd 0DFh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AA1h, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 34h
dd 0FCh, 0FFFEB134h, 85h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A76h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 34h, 134h, 0FFFEB184h, 85h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A76h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFEBC54h
dd 43h,	200E4300h, 40E0A55h, 0E600B48h,	4, 38h,	3Ch, 0FFFEBC84h
dd 86h,	80E4100h, 0E410286h, 4303830Ch,	0A64200Eh, 0C3460C0Eh
dd 0C641080Eh, 0B43040Eh, 0C0E0A6Bh, 80EC346h, 40EC641h
dd 0B43h, 10h, 78h, 0FFFEBCD8h,	3, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 10h, 1Ch,	0FFFEBCBCh
dd 8, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFEBCA0h
dd 52h,	80E4100h, 0E430283h, 30h, 3Ch, 38h, 0FFFEBCE4h
dd 10Eh, 600E4300h, 59058344h, 87460486h, 2854603h, 43540E45h
dd 0A74600Eh, 0C3C6C7C5h, 0B48040Eh, 43500E69h,	5202600Eh
dd 0E43500Eh, 60h, 24h,	78h, 0FFFEBDB4h, 1D4h, 300E6C00h
dd 8604834Fh, 2028703h,	0C6C70AE3h, 42040EC3h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 14h, 1Ch,	0FFFEBF54h
dd 2Ch,	100E4E00h, 40E5Ch, 20h,	34h, 0FFFEBF6Ch, 49h, 80E4100h
dd 0E430283h, 0E0A6D20h, 0EC34108h, 0B4104h, 10h, 58h
dd 0FFFEBF98h, 1Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 38h, 1Ch,	0FFFEBF8Ch
dd 60h,	80E4100h, 0E410286h, 4303830Ch,	0E4C200Eh, 200E491Ch
dd 431C0E50h, 0E6A200Eh, 200E431Ch, 410C0E43h, 41080EC3h
dd 40EC6h, 34h,	58h, 0FFFEBFB0h, 8Ch, 200E4300h, 46028649h
dd 0A510383h, 40EC3C6h,	0E730B41h, 200E511Ch, 451C0E4Ch
dd 0A4B200Eh, 40EC6C3h,	0B41h, 3Ch, 90h, 0FFFEC008h, 90h
dd 80E4100h, 0E430283h,	0E0A5020h, 0EC34308h, 4C0B4104h
dd 0E491C0Eh, 1C0E6E20h, 43200E43h, 43080E0Ah, 41040EC3h
dd 1C0E5A0Bh, 200E43h, 28h, 0D0h, 0FFFEC058h, 98h, 200E4300h
dd 40E0A58h, 0E690B45h,	200E431Ch, 40E0A5Fh, 0E5C0B45h
dd 200E431Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFEC1F0h
dd 19h,	80E4100h, 0D420285h, 0CC55505h,	404h, 36h dup(0)
align 400h
assume cs:_bss

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
			
			
			
align 20h
			
align 4
dd 1FFh	dup(?)
			
dd 0Ah dup(?)
			
			
			
			
			
			
align 800h
extrn __imp_g_ascii_strcasecmp:dword 
extrn __imp_g_ascii_strncasecmp:dword 
extrn __imp_g_convert:dword 
extrn __imp_g_convert_with_fallback:dword
			
extrn __imp_g_datalist_clear:dword 
extrn __imp_g_datalist_id_get_data:dword
			
extrn g_direct_equal:dword 
extrn g_direct_hash:dword 
extrn __imp_g_error_free:dword 
extrn __imp_g_fopen:dword 
extrn __imp_g_free:dword 
extrn __imp_g_get_charset:dword	
extrn __imp_g_hash_table_destroy:dword 
extrn __imp_g_hash_table_get_keys:dword	
extrn __imp_g_hash_table_insert:dword 
extrn __imp_g_hash_table_lookup:dword 
extrn __imp_g_hash_table_lookup_extended:dword
			
extrn __imp_g_hash_table_new:dword 
extrn __imp_g_hash_table_new_full:dword	
extrn __imp_g_hash_table_remove:dword 
extrn __imp_g_hash_table_replace:dword 
extrn __imp_g_list_append:dword	
extrn __imp_g_list_copy:dword 
extrn __imp_g_list_free:dword 
extrn __imp_g_list_nth_data:dword 
extrn __imp_g_list_prepend:dword 
extrn __imp_g_list_reverse:dword 
extrn __imp_g_list_sort:dword 
extrn __imp_g_malloc:dword 
extrn __imp_g_malloc0:dword 
extrn __imp_g_markup_escape_text:dword 
extrn __imp_g_memdup:dword 
extrn __imp_g_path_get_basename:dword 
extrn __imp_g_quark_try_string:dword 
extrn __imp_g_queue_free:dword 
extrn __imp_g_queue_is_empty:dword 
extrn __imp_g_queue_new:dword 
extrn __imp_g_queue_peek_head:dword 
extrn __imp_g_queue_pop_head:dword 
extrn __imp_g_queue_push_tail:dword 
extrn __imp_g_random_int:dword 
extrn __imp_g_realloc:dword 
extrn __imp_g_return_if_fail_warning:dword
			
extrn __imp_g_slist_append:dword 
extrn __imp_g_slist_delete_link:dword 
extrn __imp_g_slist_find_custom:dword 
extrn __imp_g_slist_free:dword 
extrn __imp_g_slist_prepend:dword 
extrn __imp_g_slist_remove:dword 
extrn __imp_g_slist_reverse:dword 
extrn __imp_g_snprintf:dword 
extrn __imp_g_str_equal:dword 
extrn __imp_g_str_has_prefix:dword 
extrn g_str_hash:dword	
extrn __imp_g_strdelimit:dword 
extrn __imp_g_strdup:dword 
extrn __imp_g_strdup_printf:dword 
extrn __imp_g_strescape:dword 
extrn __imp_g_strfreev:dword 
extrn __imp_g_string_append:dword 
extrn __imp_g_string_append_len:dword 
extrn __imp_g_string_append_printf:dword
			
extrn __imp_g_string_free:dword	
extrn __imp_g_string_insert_c:dword 
extrn __imp_g_string_new:dword 
extrn __imp_g_string_new_len:dword 
extrn __imp_g_string_sized_new:dword 
extrn __imp_g_string_truncate:dword 
extrn __imp_g_strjoinv:dword 
extrn __imp_g_strlcpy:dword 
extrn __imp_g_strndup:dword 
extrn __imp_g_strsplit:dword 
extrn __imp_g_utf8_find_prev_char:dword	
extrn __imp_g_utf8_normalize:dword 
extrn __imp_g_utf8_strdown:dword 
extrn __imp_g_utf8_validate:dword 
extrn __imp_g_warn_message:dword 
extrn __imp_libintl_dgettext:dword 
extrn __imp_libintl_dngettext:dword 
extrn __imp__purple_network_set_common_socket_flags:dword
			
extrn __imp_purple_account_add_buddies:dword
			
extrn __imp_purple_account_get_active_status:dword
			
extrn __imp_purple_account_get_bool:dword
			
extrn __imp_purple_account_get_check_mail:dword
			
extrn __imp_purple_account_get_connection:dword
			
extrn __imp_purple_account_get_int:dword
			
extrn __imp_purple_account_get_presence:dword
			
extrn __imp_purple_account_get_protocol_id:dword
			
extrn __imp_purple_account_get_remember_password:dword
			
extrn __imp_purple_account_get_string:dword
			
extrn __imp_purple_account_get_user_info:dword
			
extrn __imp_purple_account_get_username:dword
			
extrn __imp_purple_account_is_connected:dword
			
extrn __imp_purple_account_is_status_active:dword
			
extrn __imp_purple_account_notify_added:dword
			
extrn __imp_purple_account_option_bool_new:dword
			
extrn __imp_purple_account_option_int_new:dword
			
extrn __imp_purple_account_option_list_new:dword
			
extrn __imp_purple_account_option_string_new:dword
			
extrn __imp_purple_account_remove_buddies:dword
			
extrn __imp_purple_account_request_authorization:dword
			
extrn __imp_purple_account_request_change_password:dword
			
extrn __imp_purple_account_request_change_user_info:dword
			
extrn __imp_purple_account_set_bool:dword
			
extrn __imp_purple_account_set_password:dword
			
extrn __imp_purple_account_set_string:dword
			
extrn __imp_purple_accounts_find:dword 
extrn __imp_purple_accounts_get_all:dword
			
extrn __imp_purple_base16_encode:dword 
extrn __imp_purple_base64_decode:dword 
extrn __imp_purple_base64_encode:dword 
extrn __imp_purple_blist_add_buddy:dword
			
extrn __imp_purple_blist_add_group:dword
			
extrn __imp_purple_blist_alias_buddy:dword
			
extrn __imp_purple_blist_node_get_string:dword
			
extrn __imp_purple_blist_node_get_type:dword
			
extrn __imp_purple_blist_node_set_string:dword
			
extrn __imp_purple_blist_remove_buddy:dword
			
extrn __imp_purple_blist_request_add_buddy:dword
			
extrn __imp_purple_buddy_get_account:dword
			
extrn __imp_purple_buddy_get_alias_only:dword
			
extrn __imp_purple_buddy_get_group:dword
			
extrn __imp_purple_buddy_get_local_buddy_alias:dword
			
extrn __imp_purple_buddy_get_name:dword	
extrn __imp_purple_buddy_get_presence:dword
			
extrn __imp_purple_buddy_icons_find_account_icon:dword
			
extrn __imp_purple_buddy_icons_get_account_icon_timestamp:dword
			
extrn __imp_purple_buddy_icons_get_checksum_for_user:dword
			
extrn __imp_purple_buddy_icons_set_for_user:dword
			
extrn __imp_purple_buddy_new:dword 
extrn __imp_purple_cipher_context_append:dword
			
extrn __imp_purple_cipher_context_destroy:dword
			
extrn __imp_purple_cipher_context_digest:dword
			
extrn __imp_purple_cipher_context_new:dword
			
extrn __imp_purple_cipher_context_new_by_name:dword
			
extrn __imp_purple_cipher_context_set_key:dword
			
extrn __imp_purple_cipher_context_set_option:dword
			
extrn __imp_purple_ciphers_find_cipher:dword
			
extrn __imp_purple_circ_buffer_append:dword
			
extrn __imp_purple_circ_buffer_destroy:dword
			
extrn __imp_purple_circ_buffer_get_max_read:dword
			
extrn __imp_purple_circ_buffer_mark_read:dword
			
extrn __imp_purple_circ_buffer_new:dword
			
extrn __imp_purple_connection_error_reason:dword
			
extrn __imp_purple_connection_get_account:dword
			
extrn __imp_purple_connection_get_display_name:dword
			
extrn __imp_purple_connection_get_password:dword
			
extrn __imp_purple_connection_get_protocol_data:dword
			
extrn __imp_purple_connection_set_display_name:dword
			
extrn __imp_purple_connection_set_protocol_data:dword
			
extrn __imp_purple_connection_set_state:dword
			
extrn __imp_purple_connection_update_progress:dword
			
extrn __imp_purple_conv_chat_add_user:dword
			
extrn __imp_purple_conv_chat_get_id:dword
			
extrn __imp_purple_conv_chat_remove_user:dword
			
extrn __imp_purple_conv_present_error:dword
			
extrn __imp_purple_conv_send_confirm:dword
			
extrn __imp_purple_conversation_get_chat_data:dword
			
extrn __imp_purple_conversation_get_name:dword
			
extrn __imp_purple_conversation_new:dword
			
extrn __imp_purple_conversation_present:dword
			
extrn __imp_purple_conversation_write:dword
			
extrn __imp_purple_core_get_ui_info:dword
			
extrn __imp_purple_date_format_full:dword
			
extrn __imp_purple_date_format_short:dword
			
extrn __imp_purple_debug_error:dword 
extrn __imp_purple_debug_info:dword 
extrn __imp_purple_debug_is_verbose:dword
			
extrn __imp_purple_debug_misc:dword 
extrn __imp_purple_debug_warning:dword 
extrn __imp_purple_email_is_valid:dword	
extrn __imp_purple_find_buddies:dword 
extrn __imp_purple_find_buddy:dword 
extrn __imp_purple_find_buddy_in_group:dword
			
extrn __imp_purple_find_chat:dword 
extrn __imp_purple_find_conversation_with_account:dword
			
extrn __imp_purple_find_group:dword 
extrn __imp_purple_get_core:dword 
extrn __imp_purple_group_get_name:dword	
extrn __imp_purple_group_new:dword 
extrn __imp_purple_imgstore_add_with_id:dword
			
extrn __imp_purple_imgstore_find_by_id:dword
			
extrn __imp_purple_imgstore_get_data:dword
			
extrn __imp_purple_imgstore_get_filename:dword
			
extrn __imp_purple_imgstore_get_size:dword
			
extrn __imp_purple_imgstore_unref:dword	
extrn __imp_purple_imgstore_unref_by_id:dword
			
extrn __imp_purple_input_add:dword 
extrn __imp_purple_input_remove:dword 
extrn __imp_purple_markup_escape_text:dword
			
extrn __imp_purple_markup_find_tag:dword
			
extrn __imp_purple_markup_linkify:dword	
extrn __imp_purple_markup_strip_html:dword
			
extrn __imp_purple_menu_action_new:dword
			
extrn __imp_purple_network_get_my_ip:dword
			
extrn __imp_purple_network_get_port_from_fd:dword
			
extrn __imp_purple_network_ip_atoi:dword
			
extrn __imp_purple_network_listen_cancel:dword
			
extrn __imp_purple_network_listen_range:dword
			
extrn __imp_purple_normalize:dword 
extrn __imp_purple_notify_emails:dword 
extrn __imp_purple_notify_formatted:dword
			
extrn __imp_purple_notify_message:dword	
extrn __imp_purple_notify_searchresults:dword
			
extrn __imp_purple_notify_searchresults_button_add:dword
			
extrn __imp_purple_notify_searchresults_column_add:dword
			
extrn __imp_purple_notify_searchresults_column_new:dword
			
extrn __imp_purple_notify_searchresults_new:dword
			
extrn __imp_purple_notify_searchresults_row_add:dword
			
extrn __imp_purple_notify_uri:dword 
extrn __imp_purple_notify_user_info_add_pair:dword
			
extrn __imp_purple_notify_user_info_add_section_break:dword
			
extrn __imp_purple_notify_user_info_add_section_header:dword
			
extrn __imp_purple_notify_user_info_destroy:dword
			
extrn __imp_purple_notify_user_info_new:dword
			
extrn __imp_purple_notify_userinfo:dword
			
extrn __imp_purple_plugin_action_new:dword
			
extrn __imp_purple_plugin_get_id:dword 
extrn __imp_purple_prefs_add_bool:dword	
extrn __imp_purple_prefs_add_none:dword	
extrn __imp_purple_prefs_connect_callback:dword
			
extrn __imp_purple_prefs_disconnect_by_handle:dword
			
extrn __imp_purple_prefs_get_string:dword
			
extrn __imp_purple_prefs_remove:dword 
extrn __imp_purple_presence_get_active_status:dword
			
extrn __imp_purple_presence_get_idle_time:dword
			
extrn __imp_purple_presence_get_status:dword
			
extrn __imp_purple_presence_is_idle:dword
			
extrn __imp_purple_presence_is_online:dword
			
extrn __imp_purple_presence_is_status_primitive_active:dword
			
extrn __imp_purple_privacy_deny_add:dword
			
extrn __imp_purple_privacy_deny_remove:dword
			
extrn __imp_purple_privacy_permit_add:dword
			
extrn __imp_purple_privacy_permit_remove:dword
			
extrn __imp_purple_proxy_connect:dword 
extrn __imp_purple_proxy_connect_cancel:dword
			
extrn __imp_purple_prpl_got_user_idle:dword
			
extrn __imp_purple_prpl_got_user_login_time:dword
			
extrn __imp_purple_prpl_got_user_status:dword
			
extrn __imp_purple_prpl_got_user_status_deactive:dword
			
extrn __imp_purple_request_action:dword	
extrn __imp_purple_request_close_with_handle:dword
			
extrn __imp_purple_request_field_bool_get_value:dword
			
extrn __imp_purple_request_field_bool_new:dword
			
extrn __imp_purple_request_field_group_add_field:dword
			
extrn __imp_purple_request_field_group_new:dword
			
extrn __imp_purple_request_fields:dword	
extrn __imp_purple_request_fields_add_group:dword
			
extrn __imp_purple_request_fields_get_field:dword
			
extrn __imp_purple_request_fields_new:dword
			
extrn __imp_purple_request_input:dword 
extrn __imp_purple_signal_connect:dword	
extrn __imp_purple_ssl_close:dword 
extrn __imp_purple_ssl_connect:dword 
extrn __imp_purple_ssl_connect_with_ssl_cn:dword
			
extrn __imp_purple_ssl_input_add:dword 
extrn __imp_purple_ssl_is_supported:dword
			
extrn __imp_purple_ssl_read:dword 
extrn __imp_purple_ssl_strerror:dword 
extrn __imp_purple_ssl_write:dword 
extrn __imp_purple_status_get_attr_string:dword
			
extrn __imp_purple_status_get_id:dword 
extrn __imp_purple_status_get_name:dword
			
extrn __imp_purple_status_get_presence:dword
			
extrn __imp_purple_status_get_type:dword
			
extrn __imp_purple_status_is_active:dword
			
extrn __imp_purple_status_is_available:dword
			
extrn __imp_purple_status_is_independent:dword
			
extrn __imp_purple_status_type_get_primitive:dword
			
extrn __imp_purple_status_type_new_full:dword
			
extrn __imp_purple_status_type_new_with_attrs:dword
			
extrn __imp_purple_str_seconds_to_string:dword
			
extrn __imp_purple_str_size_to_units:dword
			
extrn __imp_purple_str_strip_char:dword	
extrn __imp_purple_strcasestr:dword 
extrn __imp_purple_strdup_withhtml:dword
			
extrn __imp_purple_strreplace:dword 
extrn __imp_purple_time_format:dword 
extrn __imp_purple_timeout_add:dword 
extrn __imp_purple_timeout_add_seconds:dword
			
extrn __imp_purple_timeout_remove:dword	
extrn __imp_purple_unescape_text:dword 
extrn __imp_purple_url_encode:dword 
extrn __imp_purple_utf8_salvage:dword 
extrn __imp_purple_utf8_strftime:dword 
extrn __imp_purple_utf8_try_convert:dword
			
extrn __imp_purple_util_fetch_url_cancel:dword
			
extrn __imp_purple_util_fetch_url_request_len_with_account:dword
			
extrn __imp_purple_value_new:dword 
extrn __imp_purple_xfer_cancel_local:dword
			
extrn __imp_purple_xfer_cancel_remote:dword
			
extrn __imp_purple_xfer_get_bytes_remaining:dword
			
extrn __imp_purple_xfer_get_bytes_sent:dword
			
extrn __imp_purple_xfer_get_local_filename:dword
			
extrn __imp_purple_xfer_get_size:dword 
extrn __imp_purple_xfer_get_status:dword
			
extrn __imp_purple_xfer_get_type:dword 
extrn __imp_purple_xfer_is_completed:dword
			
extrn __imp_purple_xfer_new:dword 
extrn __imp_purple_xfer_ref:dword 
extrn __imp_purple_xfer_request:dword 
extrn __imp_purple_xfer_request_accepted:dword
			
extrn __imp_purple_xfer_set_ack_fnc:dword
			
extrn __imp_purple_xfer_set_bytes_sent:dword
			
extrn __imp_purple_xfer_set_cancel_recv_fnc:dword
			
extrn __imp_purple_xfer_set_cancel_send_fnc:dword
			
extrn __imp_purple_xfer_set_completed:dword
			
extrn __imp_purple_xfer_set_end_fnc:dword
			
extrn __imp_purple_xfer_set_filename:dword
			
extrn __imp_purple_xfer_set_init_fnc:dword
			
extrn __imp_purple_xfer_set_message:dword
			
extrn __imp_purple_xfer_set_request_denied_fnc:dword
			
extrn __imp_purple_xfer_set_size:dword 
extrn __imp_purple_xfer_start:dword 
extrn __imp_purple_xfer_unref:dword 
extrn __imp_serv_got_alias:dword 
extrn __imp_serv_got_chat_in:dword 
extrn __imp_serv_got_chat_invite:dword 
extrn __imp_serv_got_chat_left:dword 
extrn __imp_serv_got_im:dword 
extrn __imp_serv_got_joined_chat:dword 
extrn __imp_serv_got_typing:dword 
extrn __imp_serv_got_typing_stopped:dword
			
extrn __imp_serv_join_chat:dword 
extrn __imp_serv_set_info:dword	
extrn __imp_wpurple_close:dword	
extrn __imp_wpurple_gettimeofday:dword 
extrn __imp_wpurple_read:dword 
extrn __imp_wpurple_recv:dword 
extrn __imp_wpurple_send:dword 
extrn __imp_wpurple_strerror:dword 
extrn __imp_xmlnode_free:dword 
extrn __imp_xmlnode_from_str:dword 
extrn __imp_xmlnode_get_child:dword 
extrn __imp_xmlnode_get_data:dword 
extrn __imp_xmlnode_get_data_unescaped:dword
			
extrn __imp_DeleteCriticalSection:dword	
extrn __imp_EnterCriticalSection:dword 
extrn __imp_GetLastError:dword 
extrn __imp_GetModuleHandleA:dword 
extrn __imp_GetProcAddress:dword 
extrn __imp_InitializeCriticalSection:dword
			
extrn __imp_LeaveCriticalSection:dword 
extrn __imp_TlsGetValue:dword 
extrn __imp_VirtualProtect:dword 
extrn __imp_VirtualQuery:dword 
extrn __imp___dllonexit:dword 
extrn __mb_cur_max:dword 
			
extrn __imp__errno:dword 
extrn _iob:dword	
extrn __imp__isctype:dword 
extrn _pctype:dword	
			
extrn __imp__snprintf:dword 
extrn __imp_abort:dword	
extrn __imp_atoi:dword	
extrn __imp_atol:dword	
extrn __imp_calloc:dword 
extrn __imp_fclose:dword 
extrn __imp_fflush:dword 
extrn __imp_fread:dword	
extrn __imp_free:dword	
extrn __imp_fwrite:dword 
extrn __imp_gmtime:dword 
extrn __imp_localtime:dword 
extrn __imp_malloc:dword 
extrn __imp_memcmp:dword 
extrn __imp_memcpy:dword 
extrn __imp_mktime:dword 
extrn __imp_rand:dword	
extrn __imp_strchr:dword 
extrn __imp_strcmp:dword 
extrn __imp_strncpy:dword 
extrn __imp_strrchr:dword 
extrn __imp_strstr:dword 
extrn __imp_strtol:dword 
extrn __imp_strtoul:dword 
extrn __imp_time:dword	
extrn __imp_toupper:dword 
extrn __imp_vfprintf:dword 
extrn __imp_accept:dword 
extrn __imp___stack_chk_fail:dword 
extrn __stack_chk_guard:dword 
			
assume cs:_CRT

dd 0
dd offset TlsCallback_1
dd 0
dd 0
			
align 1000h
assume cs:_tls

db 0
align 1000h
end DllEntryPoint

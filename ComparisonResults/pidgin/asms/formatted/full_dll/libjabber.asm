assume cs:_text

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
push	ebx
sub	esp, 18h
mov	edx, ds:Memory
test	edx, edx
jz	short loc_61C41042
mov	ebx, ds:dword_61C96004
sub	ebx, 4
cmp	edx, ebx
ja	short loc_61C41030
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C41014
call	eax
mov	edx, ds:Memory
sub	ebx, 4
cmp	edx, ebx
jbe	short loc_61C4101B
mov	[esp+1Ch+Memory], edx 
call	free
mov	ds:Memory, 0
mov	[esp+1Ch+Memory], 0 
call	fflush
add	esp, 18h
pop	ebx
retn
align 10h
public DllEntryPoint
sub	esp, 2Ch
mov	[esp+2Ch+var_C], ebx
mov	ebx, [esp+2Ch+fdwReason]
mov	[esp+2Ch+var_8], esi
mov	esi, [esp+2Ch+hinstDLL]
mov	[esp+2Ch+var_4], edi
mov	edi, [esp+2Ch+lpReserved]
cmp	ebx, 1
jz	short loc_61C410C4
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+Size],	esi
call	sub_61C78970
sub	esp, 0Ch
test	ebx, ebx
jnz	short loc_61C410B2
mov	edx, ds:Memory
test	edx, edx
jz	loc_61C41130
mov	[esp+2Ch+var_10], eax
call	sub_61C41000
mov	eax, [esp+2Ch+var_10]
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn	0Ch
mov	[esp+2Ch+Size],	80h 
call	malloc
test	eax, eax
mov	ds:Memory, eax
jz	short loc_61C41137
mov	dword ptr [eax], 0
mov	ds:dword_61C96004, eax
mov	eax, ds:off_61C859EC
test	eax, eax
jz	short loc_61C41101
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+Size],	esi
call	eax 
sub	esp, 0Ch
call	sub_61C78AF0
call	sub_61C78D50
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+Size],	esi
call	sub_61C78970
sub	esp, 0Ch
test	eax, eax
jz	loc_61C410A5
jmp	short loc_61C410B2
align 10h
xor	eax, eax
jmp	loc_61C410B2
mov	esi, esi
lea	edi, [edi+0]
call	_errno
mov	dword ptr [eax], 0Ch
xor	eax, eax
jmp	loc_61C410B2
align 10h
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], offset dword_61C96004
mov	[esp+1Ch+var_18], offset Memory
mov	[esp+1Ch+var_1C], eax
call	__dllonexit
cmp	eax, 1
sbb	eax, eax
add	esp, 1Ch
retn
align 10h
sub	esp, 1Ch
mov	eax, [esp+20h]
mov	dword ptr [esp+8], offset dword_61C96004
mov	dword ptr [esp+4], offset Memory
mov	[esp], eax
call	__dllonexit
add	esp, 1Ch
retn
align 10h
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_61C4123C
mov	[esp+18h+lpProcName], offset ProcName 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short loc_61C411FF
mov	[esp+18h+lpProcName], offset dword_61C96008
mov	[esp+18h+lpModuleName],	offset dword_61C8B0A4
call	eax
mov	ecx, dword_61C7A564
test	ecx, ecx
jz	short locret_61C4123A
mov	[esp+18h+lpModuleName],	offset aLibgcj13_dll 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_61C41244
mov	[esp+18h+lpProcName], offset a_jv_registercl 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_61C4123A
mov	[esp+18h+lpModuleName],	offset dword_61C7A564
call	eax
			
leave
retn
mov	eax, 0
jmp	short loc_61C411EA
align 4
mov	eax, 0
jmp	short loc_61C4122D
align 4
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	ecx
test	eax, eax
jz	short loc_61C41288
mov	[esp+18h+lpProcName], offset a__deregister_f 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_61C41283
mov	[esp+18h+lpModuleName],	offset dword_61C8B0A4
call	eax
leave
retn
align 4
mov	eax, 0
jmp	short loc_61C41276
align 10h
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C412AE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_3C], eax
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_38], eax
mov	edi, [esp+6Ch+arg_8]
mov	esi, [esp+6Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_64], offset aHttpJabber_o_0 
mov	[esp+6Ch+Str2],	offset aCommand	
mov	[esp+6Ch+Str1],	esi
call	xmlnode_get_child_with_namespace
mov	ebx, eax
mov	[esp+6Ch+Str2],	offset aStatus_3 
mov	[esp+6Ch+Str1],	eax
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+6Ch+var_64], offset aJabberXData_5	
mov	[esp+6Ch+Str2],	offset asc_61C7B0A5 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_child_with_namespace
mov	[esp+6Ch+var_40], eax
cmp	edi, 3
jz	loc_61C415A8
test	ebp, ebp
jz	loc_61C41554
mov	edi, offset aCompleted 
mov	ecx, 0Ah
mov	esi, ebp
repe cmpsb
jz	loc_61C414EC
mov	edi, offset aExecuting 
mov	ecx, 0Ah
mov	esi, ebp
repe cmpsb
jnz	loc_61C41554
mov	edx, [esp+6Ch+var_40]
test	edx, edx
jz	loc_61C41554
mov	[esp+6Ch+Str2],	offset aActions_0 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_61C41644
mov	[esp+6Ch+Str2],	offset aExecute	
mov	[esp+6Ch+Str1],	eax
call	xmlnode_get_attrib
mov	ebp, [esi+18h]
test	ebp, ebp
jz	loc_61C416A0
xor	edi, edi
mov	[esp+6Ch+var_44], 0
mov	[esp+6Ch+var_34], 0
mov	[esp+6Ch+var_30], ebx
mov	ebx, edi
mov	edi, eax
jmp	short loc_61C413C8
align 10h
			
mov	ebp, [ebp+20h]
inc	ebx
test	ebp, ebp
jz	short loc_61C41440
			
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_61C413C0
mov	[esp+6Ch+Str1],	8
call	g_malloc0
mov	esi, eax
mov	eax, [ebp+0]
mov	[esp+6Ch+Str2],	eax
mov	[esp+6Ch+Str1],	offset aPidgin_17 
call	libintl_dgettext
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[esi], eax
mov	eax, [ebp+0]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+6Ch+Str2],	esi
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Str1],	eax
call	g_list_append
mov	[esp+6Ch+var_44], eax
test	edi, edi
jz	short loc_61C413C0
mov	eax, [ebp+0]
mov	[esp+6Ch+Str2],	eax 
mov	[esp+6Ch+Str1],	edi 
call	strcmp
test	eax, eax
jnz	short loc_61C413C0
mov	[esp+6Ch+var_34], ebx
mov	ebp, [ebp+20h]
inc	ebx
test	ebp, ebp
jnz	short loc_61C413C8
nop
mov	ebx, [esp+6Ch+var_30]
			
mov	[esp+6Ch+Str1],	10h
call	g_malloc0
mov	edi, eax
mov	[esp+6Ch+Str2],	offset aSessionid 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[edi], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[edi+4], eax
mov	[esp+6Ch+Str2],	offset aNode 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[edi+8], eax
mov	eax, [esp+6Ch+var_44]
mov	[edi+0Ch], eax
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C416D8
mov	[esp+6Ch+arg_14], edi
mov	[esp+6Ch+arg_10], offset sub_61C416E0
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+arg_C], eax
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+arg_8], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+arg_4], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_x_data_request_with_actions
align 4
mov	[esp+6Ch+Str2],	offset aNote 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4154A
mov	[esp+6Ch+Str1],	eax
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Str2],	2
mov	[esp+6Ch+Str1],	0
call	purple_notify_message
mov	[esp+6Ch+Str1],	ebx
call	g_free
mov	ecx, [esp+6Ch+var_40]
test	ecx, ecx
jnz	short loc_61C4156C
xchg	ax, ax
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C416D8
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C416D8
mov	[esp+6Ch+arg_C], 0
mov	[esp+6Ch+arg_8], offset	sub_61C41290
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+arg_4], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_x_data_request
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Str2],	esi
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Str1],	eax
call	jabber_parse_error
mov	ebx, eax
test	eax, eax
jz	loc_61C416B5
mov	[esp+6Ch+Str2],	offset aAdHocCommandFa 
mov	[esp+6Ch+Str1],	offset aPidgin_17 
call	libintl_dgettext
mov	esi, eax
mov	[esp+6Ch+Str2],	offset aAdHocCommandFa 
mov	[esp+6Ch+Str1],	offset aPidgin_17 
call	libintl_dgettext
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Str2],	0
mov	[esp+6Ch+Str1],	0
call	purple_notify_message
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C416D8
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+6Ch+Str1],	8
call	g_malloc0
mov	esi, eax
mov	[esp+6Ch+Str2],	offset aExecute	
mov	[esp+6Ch+Str1],	offset aPidgin_17 
call	libintl_dgettext
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[esi], eax
mov	[esp+6Ch+Str1],	offset aExecute	
call	g_strdup
mov	[esi+4], eax
mov	[esp+6Ch+Str2],	esi
mov	[esp+6Ch+Str1],	0
call	g_list_append
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+var_34], 0
jmp	loc_61C41444
mov	[esp+6Ch+var_44], 0
mov	[esp+6Ch+var_34], 0
jmp	loc_61C41444
mov	[esp+6Ch+Str2],	offset aUnknownError_2 
mov	[esp+6Ch+Str1],	offset aPidgin_17 
call	libintl_dgettext
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	ebx, eax
jmp	loc_61C415CA
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], eax
mov	ebx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new
mov	edi, eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_61C412B4
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_set_callback
mov	eax, [ebx+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aTo 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aCommand 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_48], offset aHttpJabber_o_0 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	eax, [ebx]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aSessionid 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+8]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aNode 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_namespace
mov	[esp+4Ch+var_48], offset aJabberXData_5	
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jnz	loc_61C4184C
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_61C417DC
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aAction 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	xmlnode_insert_child
mov	esi, [ebx+0Ch]
test	esi, esi
jz	loc_61C41891
nop
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_61C417F4
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41898
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
mov	[esp+4Ch+var_48], offset aType_16 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
mov	[esp+4Ch+var_48], offset aCancel_13 
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C417BC
mov	[esp+4Ch+var_44], offset aCancel_13 
mov	[esp+4Ch+var_48], offset aAction 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
jmp	loc_61C417E8
xor	eax, eax
jmp	loc_61C41808
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+88h+var_6C], eax
xor	eax, eax
test	edx, edx
jz	loc_61C419C6
mov	eax, [ebp+0E4h]
test	eax, eax
jz	short loc_61C4190E
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+88h+var_88], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+88h+var_88], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+88h+var_88], eax
call	g_free
mov	[esp+88h+var_88], ebx
call	g_free
mov	eax, [ebp+0E4h]
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], eax
call	g_list_delete_link
mov	[ebp+0E4h], eax
test	eax, eax
jnz	short loc_61C418C8
mov	ebx, [esi+18h]
test	ebx, ebx
jnz	short loc_61C41927
jmp	loc_61C419C0
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_61C419C0
			
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_61C4191C
mov	esi, [ebx]
mov	edi, offset aItem 
mov	ecx, 5
repe cmpsb
jnz	short loc_61C4191C
mov	[esp+88h+var_88], 0Ch
call	g_malloc0
mov	esi, eax
mov	[esp+88h+var_84], offset aJid 
mov	[esp+88h+var_88], ebx
call	xmlnode_get_attrib
mov	[esp+88h+var_88], eax
call	g_strdup
mov	[esi], eax
mov	[esp+88h+var_84], offset aNode 
mov	[esp+88h+var_88], ebx
call	xmlnode_get_attrib
mov	[esp+88h+var_88], eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+88h+var_84], offset aName 
mov	[esp+88h+var_88], ebx
call	xmlnode_get_attrib
mov	[esp+88h+var_88], eax
call	g_strdup
mov	[esi+8], eax
mov	[esp+88h+var_84], esi
mov	eax, [ebp+0E4h]
mov	[esp+88h+var_88], eax
call	g_list_append
mov	[ebp+0E4h], eax
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	loc_61C41927
nop
			
cmp	dword ptr [ebp+20h], 6
jz	short loc_61C419DC
			
mov	eax, [esp+88h+var_6C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C419F1
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebp+64h]
mov	[esp+88h+var_88], eax
call	purple_connection_get_account
mov	[esp+88h+var_88], eax
call	purple_prpl_got_account_actions
jmp	short loc_61C419C6
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_org 
mov	[esp+2Ch+var_28], offset aQuery	
mov	edx, [esp+2Ch+arg_10]
mov	[esp+2Ch+var_2C], edx
call	xmlnode_get_child_with_namespace
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C41A40
mov	edx, eax
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_61C418A0
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, eax
mov	edi, edx
mov	esi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], edx
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C41BB0
mov	eax, [eax+8]
test	eax, eax
jz	loc_61C41BC4
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	jabber_buddy_find
test	eax, eax
jz	loc_61C41BC4
mov	edx, [ebx+8]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_find_resource
mov	ebp, eax
mov	[esp+3Ch+var_3C], ebx
call	jabber_id_free
test	ebp, ebp
jz	loc_61C41BB0
mov	eax, [ebp+3Ch]
test	eax, eax
jz	short loc_61C41B04
lea	esi, [esi+0]
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	eax, [ebp+3Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], eax
call	g_list_delete_link
mov	[ebp+3Ch], eax
test	eax, eax
jnz	short loc_61C41AC4
mov	ebx, [esi]
test	ebx, ebx
jnz	short loc_61C41B1B
jmp	loc_61C41BB0
align 10h
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_61C41BB0
			
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_61C41B10
mov	esi, [ebx]
mov	edi, offset aItem 
mov	ecx, 5
repe cmpsb
jnz	short loc_61C41B10
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	esi, eax
mov	[esp+3Ch+var_38], offset aJid 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esi], eax
mov	[esp+3Ch+var_38], offset aNode 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+3Ch+var_38], offset aName 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esi+8], eax
mov	[esp+3Ch+var_38], esi
mov	eax, [ebp+3Ch]
mov	[esp+3Ch+var_3C], eax
call	g_list_append
mov	[ebp+3Ch], eax
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	loc_61C41B1B
lea	esi, [esi+0]
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41BCE
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+3Ch+var_3C], ebx
call	jabber_id_free
jmp	short loc_61C41BB0
call	__stack_chk_fail
align 4
public jabber_adhoc_disco_result_cb
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	[esp+2Ch+arg_8], 3
jz	short loc_61C41C3A
mov	[esp+2Ch+var_24], offset aHttpJabber_org 
mov	[esp+2Ch+var_28], offset aQuery	
mov	[esp+2Ch+var_2C], ecx
call	xmlnode_get_child_with_namespace
mov	ebx, eax
test	eax, eax
jz	short loc_61C41C3A
mov	[esp+2Ch+var_28], offset aNode 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_attrib
mov	[esp+2Ch+var_28], offset aHttpJabber_o_0 
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C41C50
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41C6E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41C6E
lea	ecx, [ebx+18h]
mov	edx, edi
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C41A48
			
call	__stack_chk_fail
align 4
public jabber_adhoc_got_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_strequal
test	eax, eax
jnz	short loc_61C41CC8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41CE3
lea	ecx, [edi+18h]
mov	edx, esi
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C41A48
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41CE3
mov	edx, edi
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C418A0
			
call	__stack_chk_fail
public jabber_adhoc_server_get_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_org 
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_org 
mov	[esp+2Ch+var_28], offset aQuery	
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child_with_namespace
mov	edi, eax
mov	eax, [esi+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], offset aHttpJabber_o_0 
mov	[esp+2Ch+var_28], offset aNode 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C419F8
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41D9C
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_adhoc_execute
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aCommand 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	esi, eax
mov	eax, [edi]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aHttpJabber_o_0 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_namespace
mov	eax, [edi+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aNode 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], offset aExecute 
mov	[esp+2Ch+var_28], offset aAction 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C412B4
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41E6F
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+10h]
test	edx, edx
jz	short loc_61C41EA0
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+0Ch]
mov	eax, [eax+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_adhoc_execute
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41EB0
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_adhoc_execute_action
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C41EF0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C41F21
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C41F21
mov	[esp+2Ch+arg_4], esi
mov	eax, [eax+1Ch]
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_adhoc_execute
			
call	__stack_chk_fail
align 4
public jabber_adhoc_init_server_commands
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [edx+5Ch]
mov	edx, [eax+4]
mov	[esp+4Ch+var_44], edx
mov	eax, [eax]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS@S 
call	g_strdup_printf
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	jabber_buddy_find
test	eax, eax
jz	loc_61C42007
mov	eax, [eax]
mov	[esp+4Ch+var_38], eax
test	eax, eax
jz	short loc_61C42007
mov	edx, [esp+4Ch+var_38]
mov	ebp, [edx]
mov	ebx, [ebp+3Ch]
mov	edx, ebp
test	ebx, ebx
jz	short loc_61C41FF8
nop
mov	ebp, [ebx]
mov	eax, [edx+4]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebp+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aSS 
mov	[esp+4Ch+var_3C], edx
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+var_48], offset sub_61C41E74
mov	[esp+4Ch+var_4C], eax
call	purple_plugin_action_new
mov	[eax+10h], ebp
mov	[esp+4Ch+var_48], eax
mov	eax, [edi]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[edi], eax
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
mov	edx, [esp+4Ch+var_3C]
jnz	short loc_61C41FA0
mov	edx, [esp+4Ch+var_38]
mov	edx, [edx+4]
mov	[esp+4Ch+var_38], edx
test	edx, edx
jnz	short loc_61C41F90
			
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	edx, [esp+4Ch+var_34]
mov	ebx, [edx+0E4h]
test	ebx, ebx
jz	short loc_61C42053
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+4Ch+var_48], offset sub_61C41E74
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	purple_plugin_action_new
mov	[eax+10h], esi
mov	[esp+4Ch+var_48], eax
mov	eax, [edi]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[edi], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C42024
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C42067
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_0]
mov	cl, [eax]
cmp	[edx], cl
jg	short loc_61C420A0
setl	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C420A7
add	esp, 1Ch
retn
align 10h
mov	eax, 0FFFFFFFFh
jmp	short loc_61C4208E
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aJabberIqAuth 
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+2Ch+var_28], offset aQuery_0 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	edi, eax
mov	[esp+2Ch+var_28], offset aUsername 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
mov	[esp+2Ch+var_28], offset aResource 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx+8]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
mov	[esp+2Ch+var_28], offset aPassword 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_password
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	xmlnode_insert_data
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C42740
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C421A5
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	ebx, [esp+9Ch+arg_0]
mov	esi, [esp+9Ch+arg_8]
mov	edi, [esp+9Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_get_password
cmp	esi, 3
jz	loc_61C423AC
cmp	esi, 2
jz	short loc_61C4220C
			
mov	eax, [esp+9Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C42683
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, eax
mov	[esp+9Ch+var_98], offset aQuery_0 
mov	[esp+9Ch+var_9C], edi
call	xmlnode_get_child
mov	esi, eax
mov	edx, [ebx+1Ch]
test	edx, edx
jz	short loc_61C42230
cmp	byte ptr [edx],	0
jnz	loc_61C423F0
			
mov	[esp+9Ch+var_98], offset aCrammd5 
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C4250C
mov	[esp+9Ch+var_98], offset aChallenge 
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_attrib
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], offset aHmac 
mov	[esp+9Ch+var_54], eax
call	purple_cipher_context_new_by_name
mov	esi, eax
mov	[esp+9Ch+var_94], offset aMd5 
mov	[esp+9Ch+var_98], offset aHash 
mov	[esp+9Ch+var_9C], eax
call	purple_cipher_context_set_option
mov	[esp+9Ch+var_98], ebp
mov	[esp+9Ch+var_9C], esi
call	purple_cipher_context_set_key
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edx, [esp+9Ch+var_54]
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+9Ch+var_94], ecx
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], esi
call	purple_cipher_context_append
mov	[esp+9Ch+var_90], 0
lea	ebp, [esp+9Ch+var_41]
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], 21h
mov	[esp+9Ch+var_9C], esi
call	purple_cipher_context_digest_to_str
mov	[esp+9Ch+var_9C], esi
call	purple_cipher_context_destroy
mov	[esp+9Ch+var_94], offset aJabberIqAuth 
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+9Ch+var_98], offset aQuery_0 
mov	eax, [eax+8]
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_child
mov	edi, eax
mov	[esp+9Ch+var_98], offset aUsername 
mov	[esp+9Ch+var_9C], eax
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	[esp+9Ch+var_98], offset aResource 
mov	[esp+9Ch+var_9C], edi
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx+8]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	[esp+9Ch+var_98], offset aCrammd5 
mov	[esp+9Ch+var_9C], edi
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 20h
mov	[esp+9Ch+var_98], ebp
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], offset sub_61C42740
mov	[esp+9Ch+var_9C], esi
call	jabber_iq_set_callback
mov	[esp+9Ch+var_9C], esi
call	jabber_iq_send
jmp	loc_61C421EF
align 4
mov	[esp+9Ch+var_48], 0
lea	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], edi
mov	[esp+9Ch+var_9C], ebx
call	jabber_parse_error
mov	esi, eax
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_98], eax
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_error_reason
mov	[esp+9Ch+var_9C], esi
call	g_free
jmp	loc_61C421EF
align 10h
mov	[esp+9Ch+var_98], offset aDigest 
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C42230
mov	[esp+9Ch+var_94], offset aJabberIqAuth 
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+9Ch+var_98], offset aQuery_0 
mov	eax, [eax+8]
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_child
mov	edi, eax
mov	[esp+9Ch+var_98], offset aUsername 
mov	[esp+9Ch+var_9C], eax
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	[esp+9Ch+var_98], offset aResource 
mov	[esp+9Ch+var_9C], edi
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx+8]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	[esp+9Ch+var_98], offset aDigest 
mov	[esp+9Ch+var_9C], edi
call	xmlnode_new_child
mov	edx, eax
mov	[esp+9Ch+var_94], ebp
mov	eax, [ebx+1Ch]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], offset aSS_0 
mov	[esp+9Ch+var_54], edx
call	g_strdup_printf
mov	ebx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
mov	[esp+9Ch+var_94], offset aSha1 
mov	[esp+9Ch+var_98], ecx
mov	[esp+9Ch+var_9C], ebx
call	jabber_calculate_data_hash
mov	edi, eax
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], edx
call	xmlnode_insert_data
mov	[esp+9Ch+var_9C], edi
call	g_free
mov	[esp+9Ch+var_9C], ebx
call	g_free
jmp	loc_61C42386
align 4
mov	[esp+9Ch+var_98], offset aPassword 
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C42561
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_get_account
mov	esi, eax
mov	[esp+9Ch+var_9C], ebx
call	jabber_stream_is_ssl
test	eax, eax
jnz	short loc_61C42555
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], offset aAuth_plain_in_ 
mov	[esp+9Ch+var_9C], esi
call	purple_account_get_bool
test	eax, eax
jz	short loc_61C42591
mov	eax, ebx
call	sub_61C420AC
jmp	loc_61C421EF
mov	[esp+9Ch+var_98], offset aServerDoesNotU 
mov	[esp+9Ch+var_9C], offset aPidgin 
call	libintl_dgettext
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 3
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_error_reason
jmp	loc_61C421EF
mov	[esp+9Ch+var_9C], esi
call	purple_account_get_username
mov	edi, eax
mov	[esp+9Ch+var_98], offset aSRequiresPlain 
mov	[esp+9Ch+var_9C], offset aPidgin 
call	libintl_dgettext
mov	[esp+9Ch+var_98], edi
mov	[esp+9Ch+var_9C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+9Ch+var_98], offset a_no 
mov	[esp+9Ch+var_9C], offset aPidgin 
call	libintl_dgettext
mov	[esp+9Ch+var_98], offset a_yes 
mov	[esp+9Ch+var_9C], offset aPidgin 
mov	[esp+9Ch+var_50], eax
call	libintl_dgettext
mov	[esp+9Ch+var_98], offset aPlaintextAuthe 
mov	[esp+9Ch+var_9C], offset aPidgin 
mov	[esp+9Ch+var_54], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+9Ch+var_98], offset aPlaintextAuthe 
mov	[esp+9Ch+var_9C], offset aPidgin 
call	libintl_dgettext
mov	[esp+9Ch+var_68], offset sub_61C42688
mov	ecx, [esp+9Ch+var_50]
mov	[esp+9Ch+var_6C], ecx
mov	[esp+9Ch+var_70], offset sub_61C426E8
mov	edx, [esp+9Ch+var_54]
mov	[esp+9Ch+var_74], edx
mov	[esp+9Ch+var_78], 2
mov	[esp+9Ch+var_7C], esi
mov	[esp+9Ch+var_80], 0
mov	[esp+9Ch+var_84], 0
mov	[esp+9Ch+var_88], esi
mov	[esp+9Ch+var_8C], 1
mov	[esp+9Ch+var_90], edi
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], eax
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_request_action
mov	[esp+9Ch+var_9C], edi
call	g_free
jmp	loc_61C421EF
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aServerRequires 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C426E0
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset aAuth_plain_in_ 
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_bool
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C42738
add	esp, 28h
pop	ebx
jmp	sub_61C420AC
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
cmp	[esp+3Ch+arg_8], 2
jz	loc_61C42828
mov	[esp+3Ch+var_24], 0
lea	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	jabber_parse_error
mov	edi, eax
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+3Ch+var_38], offset aError	
mov	[esp+3Ch+var_3C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C427CC
mov	[esp+3Ch+var_38], offset aCode 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C427CC
mov	[esp+3Ch+var_38], offset a401 
mov	[esp+3Ch+var_3C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C42800
			
mov	[esp+3Ch+var_34], edi
mov	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_error_reason
mov	[esp+3Ch+var_3C], edi
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C42842
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_24], 2
mov	[esp+3Ch+var_3C], ebp
call	purple_account_get_remember_password
test	eax, eax
jnz	short loc_61C427CC
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebp
call	purple_account_set_password
jmp	short loc_61C427CC
align 4
mov	[esp+3Ch+var_38], 5
mov	[esp+3Ch+var_3C], ebx
call	jabber_stream_set_state
mov	[esp+3Ch+var_3C], ebx
call	jabber_disco_items_server
jmp	short loc_61C427EB
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+4], ebx
mov	[esp], eax
call	g_list_find
test	eax, eax
jz	short loc_61C42894
call	purple_core_get_ui
mov	esi, eax
mov	[esp], ebx
call	purple_connection_get_account
mov	dword ptr [esp+8], 0
mov	[esp+4], esi
mov	[esp], eax
call	purple_account_set_enabled
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C428A6
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_auth_start
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	[esp+4Ch+var_28], 0
mov	[esp+4Ch+var_24], 0
mov	edx, [edi+6Ch]
test	edx, edx
jz	short loc_61C42900
mov	[esp+4Ch+var_4C], edi
call	jabber_register_start
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C42AE6
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_48], offset aMechanisms 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	loc_61C42A4C
mov	[esp+4Ch+var_48], offset aMechanism 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	esi, eax
xor	ebx, ebx
test	eax, eax
jnz	short loc_61C42952
jmp	short loc_61C4297F
align 4
			
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jz	short loc_61C4297F
			
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_data
test	eax, eax
jz	short loc_61C4293C
cmp	byte ptr [eax],	0
jz	short loc_61C4293C
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_slist_prepend
mov	ebx, eax
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	short loc_61C42952
			
mov	esi, ds:dword_61C96020
test	esi, esi
jnz	short loc_61C429AE
jmp	short loc_61C429E8
align 4
mov	[esp+4Ch+var_44], offset strcmp
mov	eax, [ebp+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_slist_find_custom
test	eax, eax
jnz	short loc_61C429C7
mov	esi, [esi+4]
test	esi, esi
jz	short loc_61C429E8
mov	ebp, [esi]
mov	[esp+4Ch+var_48], offset asc_61C7B339 
mov	eax, [ebp+4]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4298C
mov	[edi+14h], ebp
test	ebx, ebx
jz	short loc_61C429EC
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_slist_delete_link
mov	ebx, eax
			
test	ebx, ebx
jnz	short loc_61C429D0
mov	eax, [edi+14h]
test	eax, eax
jz	loc_61C42AA0
lea	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_40], edx
lea	edx, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], edx
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	dword ptr [eax+8]
inc	eax
jz	short loc_61C42A7C
mov	eax, [esp+4Ch+var_28]
test	eax, eax
jz	short loc_61C42A38
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	jabber_send
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
			
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_free
jmp	loc_61C428E6
align 4
mov	[esp+4Ch+var_48], offset aInvalidRespons 
mov	[esp+4Ch+var_4C], offset aPidgin 
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	eax, [edi+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
jmp	loc_61C428E6
mov	eax, [esp+4Ch+var_24]
test	eax, eax
jz	short loc_61C42AD0
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 3
mov	eax, [edi+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
jmp	short loc_61C42A38
align 10h
mov	[esp+4Ch+var_48], offset aServerDoesNotU 
mov	[esp+4Ch+var_4C], offset aPidgin 
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 3
mov	eax, [edi+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
jmp	loc_61C428E6
mov	[esp+4Ch+var_48], offset aUnknownError 
mov	[esp+4Ch+var_4C], offset aPidgin 
call	libintl_dgettext
jmp	short loc_61C42A84
call	__stack_chk_fail
align 4
public jabber_auth_start_old
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_stream_is_ssl
test	eax, eax
jz	loc_61C42C00
mov	ecx, [ebx+6Ch]
test	ecx, ecx
jnz	loc_61C42C70
mov	eax, [ebx+5Ch]
mov	edx, [eax+8]
test	edx, edx
jz	loc_61C42BE0
cmp	byte ptr [edx],	0
jz	loc_61C42BE0
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_password
test	eax, eax
jz	loc_61C42C8C
mov	[esp+2Ch+var_24], offset aJabberIqAuth 
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+2Ch+var_28], offset aQuery_0 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	[esp+2Ch+var_28], offset aUsername 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+5Ch]
mov	edx, [edx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C421AC
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C42CAD
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
align 10h
			
mov	[esp+2Ch+var_2C], edx
call	g_free
mov	edi, [ebx+5Ch]
mov	[esp+2Ch+var_2C], offset aHome 
call	g_strdup
mov	[edi+8], eax
jmp	loc_61C42B40
align 10h
mov	[esp+2Ch+var_24], offset aRequire_startt 
mov	[esp+2Ch+var_28], offset aConnection_sec 
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_string
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aRequire_tls 
call	g_str_equal
test	eax, eax
jz	loc_61C42B1E
mov	[esp+2Ch+var_28], offset aYouRequireEncr 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 5
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C42CAD
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C42CAD
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_register_start
align 4
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], offset loc_61C42848
mov	[esp+2Ch+var_28], offset sub_61C42CB4
mov	[esp+2Ch+var_2C], esi
call	purple_account_request_password
jmp	short loc_61C42C5B
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_list_find
test	eax, eax
jz	loc_61C42DA4
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_account
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aPassword 
mov	[esp+4Ch+var_4C], esi
call	purple_request_fields_get_string
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aRemember 
mov	[esp+4Ch+var_4C], esi
call	purple_request_fields_get_bool
test	ebx, ebx
jz	short loc_61C42D5C
cmp	byte ptr [ebx],	0
jz	short loc_61C42D5C
test	eax, eax
jnz	loc_61C42DB8
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], edi
call	purple_account_set_password
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C42DCD
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_auth_start_old
align 4
			
mov	[esp+4Ch+var_48], offset aPasswordIsRequ 
mov	[esp+4Ch+var_4C], offset aPidgin 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], edi
call	purple_notify_message
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C42DCD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	purple_account_set_remember_password
jmp	loc_61C42D2E
			
call	__stack_chk_fail
align 4
public jabber_auth_handle_challenge
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_namespace
mov	[esp+2Ch+var_28], offset aUrnIetfParamsX 
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C42EA4
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C42E8C
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_61C42E8C
mov	[esp+2Ch+var_18], 0
mov	[esp+2Ch+var_14], 0
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], edx
lea	edx, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	eax
inc	eax
jz	loc_61C42ED4
mov	eax, [esp+2Ch+var_18]
test	eax, eax
jz	short loc_61C42E6A
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_send
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
			
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C42F0E
add	esp, 24h
pop	ebx
pop	esi
retn
			
mov	[esp+2Ch+var_28], offset aReceivedUnexpe 
mov	[esp+2Ch+var_2C], offset aJabber 
call	purple_debug_warning
jmp	short loc_61C42E76
align 4
mov	[esp+2Ch+var_28], offset aInvalidRespons 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
jmp	short loc_61C42E76
align 4
mov	eax, [esp+2Ch+var_14]
test	eax, eax
jz	short loc_61C42EF8
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 3
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
jmp	loc_61C42E6A
mov	[esp+2Ch+var_28], offset aInvalidChallen 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
jmp	short loc_61C42EDC
call	__stack_chk_fail
align 4
public jabber_auth_handle_success
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_namespace
mov	[esp+2Ch+var_28], offset aUrnIetfParamsX 
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C42FB8
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C42F87
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_61C42F87
mov	[esp+2Ch+var_14], 0
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	eax
cmp	eax, 0FFFFFFFFh
jz	loc_61C43008
dec	eax
mov	eax, [esp+2Ch+var_14]
jz	short loc_61C42FE8
mov	[esp+2Ch+var_2C], eax
call	g_free
			
mov	dword ptr [ebx+88h], 1
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], ebx
call	jabber_stream_set_state
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4303E
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_28], offset aInvalidRespons 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
jmp	short loc_61C42FA1
align 4
test	eax, eax
jz	short loc_61C43028
			
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 3
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
jmp	short loc_61C42FA1
align 4
mov	eax, [esp+2Ch+var_14]
test	eax, eax
jnz	short loc_61C42FEC
mov	[esp+2Ch+var_28], offset aInvalidRespons 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
jmp	short loc_61C42FEC
align 4
mov	[esp+2Ch+var_28], offset aServerThinksAu 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
jmp	short loc_61C42FEC
call	__stack_chk_fail
align 4
public jabber_auth_handle_failure
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_1C], 0
mov	[esp+2Ch+var_18], 0
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C430DC
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_61C430DC
mov	[esp+2Ch+var_14], 0
lea	edx, [esp+2Ch+var_18]
mov	[esp+2Ch+var_20], edx
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	eax
inc	eax
jz	short loc_61C430D4
mov	eax, [esp+2Ch+var_14]
test	eax, eax
jz	short loc_61C430BE
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_send
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C43150
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [esp+2Ch+var_18]
test	eax, eax
jnz	short loc_61C430F8
			
lea	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jabber_parse_error
mov	[esp+2Ch+var_18], eax
test	eax, eax
jz	short loc_61C43120
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_61C430BE
align 10h
mov	[esp+2Ch+var_28], offset aInvalidRespons 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
jmp	loc_61C430BE
call	__stack_chk_fail
align 4
public jabber_auth_add_mech
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset sub_61C4206C
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96020
mov	[esp+2Ch+var_2C], eax
call	g_slist_insert_sorted
mov	ds:dword_61C96020, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C43198
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_auth_remove_mech
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96020
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	ds:dword_61C96020, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C431D8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_auth_init
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jabber_auth_get_plain_mech
mov	[esp+2Ch+var_2C], eax
call	jabber_auth_add_mech
call	jabber_auth_get_digest_md5_mech
mov	[esp+2Ch+var_2C], eax
call	jabber_auth_add_mech
call	jabber_auth_get_cyrus_mech
mov	[esp+2Ch+var_2C], eax
call	jabber_auth_add_mech
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	jabber_auth_get_scram_mechs
mov	esi, eax
xor	ebx, ebx
mov	eax, [esp+2Ch+var_14]
test	eax, eax
jle	short loc_61C43242
nop
mov	edx, [esi+ebx*4]
mov	[esp+2Ch+var_2C], edx
call	jabber_auth_add_mech
inc	ebx
cmp	[esp+2Ch+var_14], ebx
jg	short loc_61C43230
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C43254
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_auth_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C96020
mov	[esp+2Ch+var_2C], eax
call	g_slist_free
mov	ds:dword_61C96020, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C43291
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
cmp	[esp+1Ch+arg_4], 4008h
jnz	short loc_61C432D8
test	eax, eax
jz	short loc_61C432D8
mov	edx, [edx+5Ch]
mov	edx, [edx+4]
mov	[eax], edx
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C432DF
add	esp, 1Ch
retn
align 4
			
mov	eax, 0FFFFFFF9h
jmp	short loc_61C432C7
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aServerMayRequi 
mov	[esp+2Ch+var_2C], offset aPidgin_0 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4333C
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	short loc_61C4338F
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_account
mov	ebx, eax
call	purple_core_get_ui
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_enabled
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C433A0
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0A8h]
test	eax, eax
jz	loc_61C43470
mov	dword ptr [eax], 4008h
mov	dword ptr [eax+4], offset sub_61C43298
mov	[eax+8], ebx
mov	dword ptr [eax+0Ch], 4002h
mov	dword ptr [eax+10h], offset loc_61C43890
mov	[eax+14h], ebx
mov	dword ptr [eax+18h], 4001h
mov	dword ptr [eax+1Ch], offset loc_61C43890
mov	[eax+20h], ebx
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_password
test	eax, eax
jz	short loc_61C4345C
mov	eax, [ebx+0A8h]
mov	dword ptr [eax+24h], 4004h
mov	dword ptr [eax+28h], offset sub_61C4348C
mov	[eax+2Ch], ebx
mov	ecx, 3Ch
mov	edx, 30h
add	edx, eax
mov	dword ptr [edx], 2
mov	dword ptr [edx+4], offset sub_61C440D8
mov	[edx+8], ebx
mov	dword ptr [eax+ecx], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C43487
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, 30h
mov	edx, 24h
mov	eax, [ebx+0A8h]
jmp	short loc_61C43431
align 10h
mov	[esp+2Ch+var_2C], 48h
call	g_malloc0
mov	[ebx+0A8h], eax
jmp	loc_61C433C7
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+4Ch+Size],	eax
call	purple_connection_get_account
mov	[esp+4Ch+Size],	eax
call	purple_account_get_password
test	edi, edi
jz	short loc_61C43530
test	esi, esi
jz	short loc_61C43530
cmp	[esp+4Ch+var_30], 4004h
jnz	short loc_61C43530
mov	ebp, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
lea	edi, [ecx-1]
add	ecx, 7
mov	[esp+4Ch+Size],	ecx 
call	malloc
mov	[ebx+0ACh], eax
test	eax, eax
jz	short loc_61C43537
mov	[eax], edi
mov	[esp+4Ch+Source], ebp 
add	eax, 4
mov	[esp+4Ch+Size],	eax 
call	strcpy
mov	eax, [ebx+0ACh]
mov	[esi], eax
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4353E
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 0FFFFFFF9h
jmp	short loc_61C43519
mov	eax, 0FFFFFFFEh
jmp	short loc_61C43519
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	ecx, [ebx+0B8h]
test	ecx, ecx
jnz	short loc_61C435DC
mov	eax, [ebx+0A4h]
test	eax, eax
jz	short loc_61C435BF
lea	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], eax
mov	esi, ds:sasl_getprop
call	esi 
mov	eax, [esp+4Ch+var_2C]
mov	eax, [eax]
test	eax, eax
jle	short loc_61C435BF
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], 2
mov	eax, [ebx+0A4h]
mov	[esp+4Ch+var_4C], eax
call	esi 
mov	eax, [esp+4Ch+var_2C]
mov	eax, [eax]
mov	[ebx+0BCh], eax
			
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C43691
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_data
mov	esi, eax
mov	[esp+4Ch+var_24], 0
test	eax, eax
jz	loc_61C43688
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_base64_decode
mov	ebp, eax
mov	edx, [esp+4Ch+var_24]
lea	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_38], eax
lea	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], ebp
mov	eax, [ebx+0A4h]
mov	[esp+4Ch+var_4C], eax
call	ds:sasl_client_step
mov	[ebx+0B8h], eax
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	edx, [ebx+0B8h]
test	edx, edx
jz	loc_61C4356D
mov	[esp+4Ch+var_48], offset aInvalidRespo_0 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[edi], eax
mov	eax, 0FFFFFFFFh
jmp	loc_61C435C1
align 4
xor	edx, edx
xor	ebp, ebp
jmp	loc_61C4360C
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_8]
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	ebp, eax
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebp
call	purple_base64_decode
mov	esi, eax
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_48], eax
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 0
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], esi
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Str], eax
call	ds:sasl_client_step
mov	[ebx+0B8h], eax
mov	[esp+5Ch+Str], ebp
call	g_free
mov	[esp+5Ch+Str], esi
call	g_free
cmp	dword ptr [ebx+0B8h], 1
ja	loc_61C437E4
mov	[esp+5Ch+Str], offset aResponse	
call	xmlnode_new
mov	esi, eax
mov	[esp+5Ch+SubStr], offset aUrnIetfParam_0 
mov	[esp+5Ch+Str], eax
call	xmlnode_set_namespace
mov	ebp, [esp+5Ch+var_28]
test	ebp, ebp
jnz	short loc_61C43778
mov	[edi], esi
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4388A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+SubStr], offset aDigestMd5 
mov	eax, [ebx+0B0h]
mov	[esp+5Ch+Str], eax
call	purple_strequal
mov	ebx, [esp+5Ch+var_2C]
test	eax, eax
jz	short loc_61C437AE
mov	[esp+5Ch+SubStr], offset aCharset 
mov	[esp+5Ch+Str], ebx 
call	strstr
test	eax, eax
jz	loc_61C43856
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebx
call	purple_base64_encode
mov	ebx, eax
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+SubStr], ebx
mov	[esp+5Ch+Str], esi
call	xmlnode_insert_data
mov	[esp+5Ch+Str], ebx
call	g_free
jmp	loc_61C43756
align 4
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Str], eax
mov	esi, ds:sasl_errdetail
call	esi 
mov	edi, eax
mov	[esp+5Ch+SubStr], offset aSaslErrorS 
mov	[esp+5Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+5Ch+SubStr], edi
mov	[esp+5Ch+Str], eax
call	g_strdup_printf
mov	edi, eax
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Str], eax
call	esi 
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0B8h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], offset aErrorIsDS 
mov	[esp+5Ch+Str], offset aJabber_0	
call	purple_debug_error
mov	edx, [esp+5Ch+var_30]
mov	[edx], edi
mov	eax, 0FFFFFFFFh
jmp	loc_61C4375D
mov	[esp+5Ch+SubStr], ebx
mov	[esp+5Ch+Str], offset aSCharsetUtf8 
call	g_strdup_printf
mov	ebp, eax
mov	eax, [esp+5Ch+var_28]
add	eax, 0Eh
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebp
call	purple_base64_encode
mov	ebx, eax
mov	[esp+5Ch+Str], ebp
call	g_free
jmp	loc_61C437C0
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	ebx, [esp+20h]
mov	eax, [esp+24h]
mov	ecx, [esp+28h]
mov	edx, [esp+2Ch]
mov	esi, ds:__stack_chk_guard
mov	[esp+0Ch], esi
xor	esi, esi
cmp	eax, 4001h
jz	short loc_61C438D8
cmp	eax, 4002h
jz	short loc_61C438F8
mov	eax, 0FFFFFFF9h
			
mov	edx, [esp+0Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C43908
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
mov	dword ptr [ecx], offset	byte_61C7B58F
test	edx, edx
jz	short loc_61C43904
mov	edi, [ecx]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
dec	ecx
mov	[edx], ecx
xor	eax, eax
jmp	short loc_61C438C5
align 4
mov	eax, [ebx+5Ch]
mov	eax, [eax]
mov	[ecx], eax
jmp	short loc_61C438DE
align 4
xor	eax, eax
jmp	short loc_61C438C5
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	esi, [edx]
mov	[esp+4Ch+SubStr], edi 
mov	[esp+4Ch+Str], esi 
mov	[esp+4Ch+var_34], edx
call	strstr
mov	ebx, eax
test	eax, eax
mov	edx, [esp+4Ch+var_34]
jz	short loc_61C439B8
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	ebp, [ecx-1]
mov	[esp+4Ch+var_30], ebp
cmp	esi, ebx
jnb	short loc_61C4395C
cmp	byte ptr [ebx-1], 20h
jz	short loc_61C439B0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ebp, ecx
jb	short loc_61C439A0
			
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
sub	ebx, esi
mov	[esp+4Ch+SubStr], ebx
mov	[esp+4Ch+Str], edx
call	g_string_erase
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C439BC
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
cmp	byte ptr [ebx+ebp], 20h
jnz	short loc_61C4396E
inc	ebp
mov	[esp+4Ch+var_30], ebp
jmp	short loc_61C4396E
align 10h
dec	ebx
mov	[esp+4Ch+var_30], ecx
jmp	short loc_61C4396E
align 4
xor	eax, eax
jmp	short loc_61C43989
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 9Ch
mov	ebx, eax
mov	[esp+0ACh+var_50], edx
mov	[esp+0ACh+var_54], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+0ACh+var_20], eax
xor	eax, eax
mov	[esp+0ACh+var_40], 0
mov	[esp+0ACh+var_3C], 0
mov	[esp+0ACh+var_38], 0
mov	[esp+0ACh+var_2C], 10h
mov	eax, [ebx+64h]
mov	[esp+0ACh+var_AC], eax
call	purple_connection_get_account
mov	[esp+0ACh+var_5C], eax
mov	[esp+0ACh+var_AC], ebx
call	jabber_stream_is_ssl
test	eax, eax
jz	loc_61C43D21
mov	[esp+0ACh+var_34], 0
mov	[esp+0ACh+var_30], 0
mov	[esp+0ACh+var_58], 1
			
mov	[esp+0ACh+var_28], 0
mov	[esp+0ACh+var_24], 0
lea	esi, [ebx+0A4h]
mov	edi, ds:sasl_client_new
lea	ebp, [esp+0ACh+var_38]
mov	[esp+0ACh+var_94], esi
mov	[esp+0ACh+var_98], 0
mov	eax, [ebx+0A8h]
mov	[esp+0ACh+var_9C], eax
mov	[esp+0ACh+var_A0], 0
mov	[esp+0ACh+var_A4], 0
mov	eax, [ebx+0A0h]
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], offset aXmpp	
call	edi 
mov	[ebx+0B8h], eax
test	eax, eax
jz	loc_61C43C3C
lea	edx, [eax+7]
cmp	edx, 8		
jbe	loc_61C43BC4
			
mov	[esp+0ACh+var_A4], eax 
mov	[esp+0ACh+var_A8], offset aSasl_stateIsDF 
mov	[esp+0ACh+var_AC], offset aSasl	
call	purple_debug_info
inc	dword ptr [ebx+0B4h]
mov	eax, [ebx+0B0h]
test	eax, eax
jz	short loc_61C43AEA
cmp	byte ptr [eax],	0
jnz	loc_61C43D08
mov	[esp+0ACh+var_AC], esi
call	ds:sasl_dispose
mov	eax, [ebx+0B8h]
			
cmp	eax, 1		
ja	loc_61C43C0F
xchg	ax, ax
mov	[esp+0ACh+var_AC], offset aAuth	
call	xmlnode_new
mov	esi, eax
mov	[esp+0ACh+var_A8], offset aUrnIetfParam_0 
mov	[esp+0ACh+var_AC], eax
call	xmlnode_set_namespace
mov	eax, [ebx+0B0h]
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aMechanism_0 
mov	[esp+0ACh+var_AC], esi
call	xmlnode_set_attrib
mov	[esp+0ACh+var_A4], offset aHttpWww_google 
mov	[esp+0ACh+var_A8], offset aXmlnsGa 
mov	[esp+0ACh+var_AC], esi
call	xmlnode_set_attrib
mov	[esp+0ACh+var_A4], offset aTrue	
mov	[esp+0ACh+var_A8], offset aGaClientUsesFu 
mov	[esp+0ACh+var_AC], esi
call	xmlnode_set_attrib
mov	eax, [esp+0ACh+var_40]
test	eax, eax
jz	short loc_61C43B98
mov	edx, [esp+0ACh+var_3C]
test	edx, edx
jnz	loc_61C43D66
mov	[esp+0ACh+var_A4], 0FFFFFFFFh
mov	[esp+0ACh+var_A8], offset asc_61C7B714 
mov	[esp+0ACh+var_AC], esi
call	xmlnode_insert_data
			
mov	edx, [esp+0ACh+var_50]
mov	[edx], esi
mov	eax, 1
			
mov	edx, [esp+0ACh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C43EBB
add	esp, 9Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jmp	ds:off_61C7B718[edx*4] 
align 4
			
mov	eax, [esp+0ACh+var_5C] 
mov	[esp+0ACh+var_AC], eax
call	purple_account_get_password
test	eax, eax
jz	loc_61C43D95
mov	eax, [esp+0ACh+var_58]
test	eax, eax
jz	loc_61C43DC2
mov	eax, [ebx+0B4h]
inc	eax
mov	[ebx+0B4h], eax
dec	eax
jz	loc_61C43CC4
			
mov	eax, [ebx+0B8h]
cmp	eax, 1
jbe	loc_61C43B04
mov	eax, 0FFFFFFFFh
jmp	short loc_61C43BA3
align 4
			
mov	[esp+0ACh+var_A8], offset aSaslAuthentica 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+0ACh+var_AC], eax
call	g_strdup
mov	edx, [esp+0ACh+var_54]
mov	[edx], eax
jmp	short loc_61C43C00
mov	[esp+0ACh+var_A4], ebp
mov	[esp+0ACh+var_A8], 65h
mov	eax, [ebx+0A4h]
mov	[esp+0ACh+var_AC], eax
mov	edx, ds:sasl_setprop
call	edx 
mov	eax, [ebx+0C0h]
mov	eax, [eax]
mov	[esp+0ACh+var_A4], eax
mov	[esp+0ACh+var_A8], offset aMechsFoundS 
mov	[esp+0ACh+var_AC], offset aSasl	
call	purple_debug_info
lea	eax, [ebx+0B0h]
mov	[esp+0ACh+var_98], eax
lea	eax, [esp+0ACh+var_3C]
mov	[esp+0ACh+var_9C], eax
lea	eax, [esp+0ACh+var_40]
mov	[esp+0ACh+var_A0], eax
mov	[esp+0ACh+var_A4], 0
mov	eax, [ebx+0C0h]
mov	eax, [eax]
mov	[esp+0ACh+var_A8], eax
mov	eax, [ebx+0A4h]
mov	[esp+0ACh+var_AC], eax
call	ds:sasl_client_start
mov	[ebx+0B8h], eax
jmp	loc_61C43AAD
align 4
mov	eax, [ebx+0C0h]
mov	eax, [eax]
test	eax, eax
jz	loc_61C43C00
mov	[esp+0ACh+var_A8], offset aGssapi 
mov	[esp+0ACh+var_AC], eax
call	g_str_equal
test	eax, eax
jz	loc_61C43C00
mov	dword ptr [ebx+14h], 0
mov	[esp+0ACh+var_AC], ebx
call	jabber_auth_start_old
mov	eax, 1
jmp	loc_61C43BA3
align 4
mov	edx, [ebx+0C0h]
call	sub_61C43910
mov	[esp+0ACh+var_AC], esi
call	ds:sasl_dispose
jmp	loc_61C43A66
mov	[esp+0ACh+var_34], 0FFFFFFFFh
mov	[esp+0ACh+var_30], 1000h
mov	[esp+0ACh+var_A4], 0
mov	[esp+0ACh+var_A8], offset aAuth_plain_i_0 
mov	eax, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_AC], eax
call	purple_account_get_bool
mov	[esp+0ACh+var_58], eax
test	eax, eax
jnz	loc_61C43A40
or	[esp+0ACh+var_2C], 1
jmp	loc_61C43A40
mov	[esp+0ACh+var_A8], edx
mov	[esp+0ACh+var_AC], eax
call	purple_base64_encode
mov	ebx, eax
mov	[esp+0ACh+var_A4], 0FFFFFFFFh
mov	[esp+0ACh+var_A8], eax
mov	[esp+0ACh+var_AC], esi
call	xmlnode_insert_data
mov	[esp+0ACh+var_AC], ebx
call	g_free
jmp	loc_61C43B98
mov	eax, [ebx+64h]
mov	[esp+0ACh+var_A0], eax
mov	[esp+0ACh+var_A4], offset sub_61C43344
mov	[esp+0ACh+var_A8], offset sub_61C43FB4
mov	eax, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_AC], eax
call	purple_account_request_password
mov	eax, 1
jmp	loc_61C43BA3
mov	eax, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_AC], eax
call	purple_account_get_username
mov	esi, eax
mov	[esp+0ACh+var_A8], offset aSMayRequirePla 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+0ACh+var_A8], esi
mov	[esp+0ACh+var_AC], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+0ACh+var_A8], offset a_no_0 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+0ACh+var_A8], offset a_yes_0 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
mov	[esp+0ACh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0ACh+var_A8], offset aPlaintextAut_0 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0ACh+var_A8], offset aPlaintextAut_0 
mov	[esp+0ACh+var_AC], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+0ACh+var_78], offset sub_61C432E4
mov	edx, [esp+0ACh+var_60]
mov	[esp+0ACh+var_7C], edx
mov	[esp+0ACh+var_80], offset sub_61C43F54
mov	[esp+0ACh+var_84], ebp
mov	[esp+0ACh+var_88], 2
mov	edx, [esp+0ACh+var_5C]
mov	[esp+0ACh+var_8C], edx
mov	[esp+0ACh+var_90], 0
mov	[esp+0ACh+var_94], 0
mov	[esp+0ACh+var_98], edx
mov	[esp+0ACh+var_9C], 1
mov	[esp+0ACh+var_A0], esi
mov	[esp+0ACh+var_A4], edi
mov	[esp+0ACh+var_A8], eax
mov	eax, [ebx+64h]
mov	[esp+0ACh+var_AC], eax
call	purple_request_action
mov	[esp+0ACh+var_AC], esi
call	g_free
mov	eax, 1
jmp	loc_61C43BA3
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+0D8h+var_BC], eax
xor	eax, eax
mov	[esp+0D8h+var_C4], 0
mov	[esp+0D8h+var_C0], 0
lea	ecx, [esp+0D8h+var_C4]
lea	edx, [esp+0D8h+var_C0]
mov	eax, ebx
call	sub_61C439C4
inc	eax
jz	short loc_61C43F24
mov	eax, [esp+0D8h+var_C0]
test	eax, eax
jz	short loc_61C43F13
mov	[esp+0D8h+var_D4], eax
mov	[esp+0D8h+var_D8], ebx
call	jabber_send
mov	eax, [esp+0D8h+var_C0]
mov	[esp+0D8h+var_D8], eax
call	xmlnode_free
			
mov	eax, [esp+0D8h+var_BC]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C43F4D
add	esp, 28h
pop	ebx
retn
mov	eax, [esp+0D8h+var_C4]
mov	[esp+0D8h+var_D0], eax
mov	[esp+0D8h+var_D4], 3
mov	eax, [ebx+64h]
mov	[esp+0D8h+var_D8], eax
call	purple_connection_error_reason
mov	eax, [esp+0D8h+var_C4]
mov	[esp+0D8h+var_D8], eax
call	g_free
jmp	short loc_61C43F13
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_connection
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+var_38], offset aAuth_plain_i_0 
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	purple_account_set_bool
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
mov	eax, [esp+3Ch+var_20]
jnz	short loc_61C43FAC
add	esp, 38h
pop	ebx
jmp	loc_61C43EC0
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_list_find
test	eax, eax
jz	loc_61C440A8
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_account
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_protocol_data
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aPassword_0 
mov	[esp+4Ch+var_4C], esi
call	purple_request_fields_get_string
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aRemember_0 
mov	[esp+4Ch+var_4C], esi
call	purple_request_fields_get_bool
test	ebx, ebx
jz	short loc_61C44060
cmp	byte ptr [ebx],	0
jz	short loc_61C44060
test	eax, eax
jnz	loc_61C440BC
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], edi
call	purple_account_set_password
mov	eax, ebp
call	sub_61C433A8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C440D1
mov	eax, ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C43EC0
align 10h
			
mov	[esp+4Ch+var_48], offset aPasswordIsRe_0 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], edi
call	purple_notify_message
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C440D1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], edi
call	purple_account_set_remember_password
jmp	loc_61C4402E
			
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	[esp+2Ch+arg_4], 6
jg	short loc_61C4410A
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aS 
mov	[esp+2Ch+var_2C], offset aSasl 
call	purple_debug_info
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4411C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0B4h]
lea	edx, [eax+1]
mov	[ebx+0B4h], edx
cmp	eax, 4
jg	loc_61C44238
mov	eax, [ebx+0B0h]
test	eax, eax
jz	short loc_61C4416C
cmp	byte ptr [eax],	0
jnz	loc_61C441F0
mov	eax, [ebx+0C0h]
mov	eax, [eax]
cmp	byte ptr [eax],	0
jnz	loc_61C4420C
cmp	dword ptr [ebx+0B4h], 1
jnz	loc_61C44238
mov	eax, [ebx+0B0h]
test	eax, eax
jz	loc_61C44238
mov	[esp+2Ch+var_28], offset aGssapi 
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C44238
lea	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
call	ds:sasl_dispose
mov	dword ptr [ebx+0A4h], 0
mov	dword ptr [ebx+14h], 0
mov	[esp+2Ch+var_2C], ebx
call	jabber_auth_start_old
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4423F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	edx, [ebx+0C0h]
call	sub_61C43910
mov	eax, [ebx+0C0h]
mov	eax, [eax]
cmp	byte ptr [eax],	0
jz	loc_61C4417D
lea	eax, [ebx+0A4h]
mov	[esp+2Ch+var_2C], eax
call	ds:sasl_dispose
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4423F
mov	ecx, edi
mov	edx, esi
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C439C4
			
mov	eax, 0FFFFFFFFh
jmp	short loc_61C441DD
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset byte_61C7B58F
call	g_string_new
mov	[edi+0C0h], eax
mov	[esp+4Ch+var_48], offset aMechanism_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	short loc_61C44310
mov	[esp+4Ch+var_34], ebp
jmp	short loc_61C442AE
			
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jz	short loc_61C4430C
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_61C44298
cmp	byte ptr [eax],	0
jz	short loc_61C44298
mov	[esp+4Ch+var_48], offset aExternal 
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C44298
mov	[esp+4Ch+var_48], ebx
mov	eax, [edi+0C0h]
mov	[esp+4Ch+var_4C], eax
call	g_string_append
mov	eax, [edi+0C0h]
mov	edx, [eax+4]
lea	ecx, [edx+1]
cmp	ecx, [eax+8]
jnb	short loc_61C4435C
mov	ebp, [eax]
mov	byte ptr [ebp+edx+0], 20h
mov	[eax+4], ecx
mov	eax, [eax]
mov	byte ptr [eax+edx+1], 0
jmp	short loc_61C44298
align 4
mov	ebp, [esp+4Ch+var_34]
mov	eax, [edi+0C0h]
mov	edx, [eax+4]
cmp	edx, 1
jbe	short loc_61C4432B
dec	edx
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_string_truncate
mov	eax, edi
call	sub_61C433A8
mov	ecx, ebp
mov	edx, [esp+4Ch+var_30]
mov	eax, edi
call	sub_61C439C4
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_61C4437C
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C443A4
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], 20h
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], eax
call	g_string_insert_c
jmp	loc_61C44298
align 4
mov	eax, [ebp+0]
test	eax, eax
jnz	short loc_61C44346
mov	[esp+4Ch+var_48], offset aServerDoesNo_0 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebp+0], eax
jmp	short loc_61C44346
call	__stack_chk_fail
align 4
public jabber_auth_get_cyrus_mech
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C7A000
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C443CF
add	esp, 1Ch
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+18h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4440A
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aAuth_0 
call	xmlnode_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aUrnIetfParam_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], offset aDigestMd5_0 
mov	[esp+2Ch+var_28], offset aMechanism_1 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	[esi], ebx
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C44473
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, eax
mov	ebp, edx
mov	[esp+8Ch+var_5C], ecx
mov	edx, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_4C], edx
mov	ecx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_48], ecx
mov	esi, [esp+8Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], offset aUtf8 
mov	[esp+8Ch+var_84], offset aIso88591 
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	eax, [ebx]
mov	[esp+8Ch+var_8C], eax
call	g_convert
mov	[esp+8Ch+var_54], eax
test	eax, eax
jz	loc_61C447EC
test	ebp, ebp
jz	loc_61C447BC
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], offset aUtf8 
mov	[esp+8Ch+var_84], offset aIso88591 
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	[esp+8Ch+var_8C], ebp
call	g_convert
mov	edi, eax
test	eax, eax
jz	loc_61C44800
mov	[esp+8Ch+var_8C], offset aMd5_0	
call	purple_ciphers_find_cipher
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	[esp+8Ch+var_40], edi
			
mov	[esp+8Ch+var_80], edi
mov	[esp+8Ch+var_84], esi
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aSSS 
call	g_strdup_printf
mov	[esp+8Ch+var_50], eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_84], ecx
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_append
mov	[esp+8Ch+var_80], 0
lea	ebp, [esp+8Ch+var_30]
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_digest
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_84], edx
mov	ecx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], ecx
mov	[esp+8Ch+var_8C], offset aXxxxxxxxxxxxxx 
call	g_strdup_printf
mov	[esp+8Ch+var_58], eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_44], ecx
mov	ecx, 4
mov	edi, [esp+8Ch+var_58]
mov	esi, ebp
rep movsd
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_reset
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_84], edx
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_88], ecx
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_append
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_digest
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebp
call	purple_base16_encode
mov	esi, eax
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_reset
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+var_48]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_84], ecx
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_append
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_digest
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebp
call	purple_base16_encode
mov	[esp+8Ch+var_7C], eax
mov	ecx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_80], ecx
mov	ecx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], offset aSS00000001SAut 
mov	[esp+8Ch+var_64], eax
call	g_strdup_printf
mov	[esp+8Ch+var_5C], eax
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_reset
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+var_5C]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_84], ecx
mov	ecx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], ecx
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_append
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_digest
mov	[esp+8Ch+var_8C], ebx
call	purple_cipher_context_destroy
mov	[esp+8Ch+var_88], 10h
mov	[esp+8Ch+var_8C], ebp
call	purple_base16_encode
mov	ecx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_8C], ecx
mov	[esp+8Ch+var_60], eax
call	g_free
mov	ecx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], ecx
call	g_free
mov	ecx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], ecx
call	g_free
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], ecx
call	g_free
mov	[esp+8Ch+var_8C], esi
call	g_free
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], edx
call	g_free
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_8C], edx
call	g_free
mov	eax, [esp+8Ch+var_60]
mov	ecx, [esp+8Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C44835
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+8Ch+var_8C], offset aMd5_0	
call	purple_ciphers_find_cipher
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	[esp+8Ch+var_40], 0
mov	edi, offset byte_61C7B7FA
jmp	loc_61C44561
mov	eax, [ebx]
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	[esp+8Ch+var_54], eax
jmp	loc_61C444F5
align 10h
mov	[esp+8Ch+var_8C], ebp
call	g_strdup
mov	edi, eax
mov	[esp+8Ch+var_8C], offset aMd5_0	
call	purple_ciphers_find_cipher
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_new
mov	ebx, eax
test	edi, edi
jz	short loc_61C447DA
mov	[esp+8Ch+var_40], edi
jmp	loc_61C44561
call	__stack_chk_fail
align 4
public jabber_auth_digest_md5_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_30], offset g_free
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+Val], offset g_str_equal
mov	[esp+3Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	edi, eax
mov	dl, [ebx]
xchg	ax, ax
test	dl, dl
jz	loc_61C4496B
mov	esi, ebx
xor	eax, eax
jmp	short loc_61C44893
align 4
inc	esi
mov	dl, [esi]
test	dl, dl
jz	short loc_61C448AC
			
test	eax, eax
jnz	short loc_61C4489C
cmp	dl, 2Ch
jz	short loc_61C448AC
cmp	dl, 22h
jnz	short loc_61C4488C
xor	eax, 1
inc	esi
mov	dl, [esi]
test	dl, dl
jnz	short loc_61C44893
nop
			
mov	[esp+3Ch+Val], 3Dh 
mov	[esp+3Ch+Str], ebx 
call	strchr
mov	ebp, esi
test	eax, eax
jz	short loc_61C448C8
cmp	esi, eax
jbe	short loc_61C448C8
mov	ebp, eax
			
cmp	ebp, ebx
jz	loc_61C44966
mov	eax, ebp
sub	eax, ebx
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], ebx
call	g_strndup
mov	ebx, eax
cmp	ebp, esi
jz	loc_61C449AC
lea	edx, [ebp+1]
cmp	edx, esi
jz	short loc_61C44918
lea	esi, [esi+0]
mov	cl, [edx]
cmp	cl, 20h
jz	short loc_61C44913
cmp	cl, 9
jz	short loc_61C44913
cmp	cl, 0Dh
jz	short loc_61C44913
cmp	cl, 0Ah
jz	short loc_61C44913
cmp	cl, 22h
jnz	loc_61C449B0
			
inc	edx
cmp	edx, esi
jnz	short loc_61C448F4
			
mov	eax, esi
xchg	ax, ax
mov	cl, [eax]
cmp	cl, 20h
jz	short loc_61C44940
cmp	cl, 2Ch
jz	short loc_61C44940
cmp	cl, 9
jz	short loc_61C44940
cmp	cl, 0Dh
jz	short loc_61C44940
cmp	cl, 0Ah
jz	short loc_61C44940
cmp	cl, 22h
jz	short loc_61C44940
test	cl, cl
jnz	short loc_61C44945
			
dec	eax
cmp	eax, edx
jnb	short loc_61C4491C
			
inc	eax
sub	eax, edx
js	short loc_61C449AC
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], edx
call	g_strndup
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Val], ebx
mov	[esp+3Ch+Str], edi
call	g_hash_table_replace
cmp	byte ptr [esi],	0
jnz	short loc_61C44984
mov	eax, edi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C449BC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	ebx, [esi+1]
nop
mov	dl, [ebx]
cmp	dl, 20h
jz	short loc_61C449A7
cmp	dl, 2Ch
jz	short loc_61C449A7
cmp	dl, 9
jz	short loc_61C449A7
cmp	dl, 0Dh
jz	short loc_61C449A7
cmp	dl, 0Ah
jnz	loc_61C4487C
			
inc	ebx
jmp	short loc_61C44988
align 4
			
xor	eax, eax
jmp	short loc_61C44956
cmp	edx, esi
jbe	loc_61C44918
mov	eax, esi
jmp	short loc_61C44945
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], eax
mov	ebp, [esp+6Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+Time],	eax
call	xmlnode_get_data
mov	[esp+6Ch+var_44], eax
test	eax, eax
jz	loc_61C44DFD
mov	[esp+6Ch+var_68], 0
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_base64_decode
mov	[esp+6Ch+var_48], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
repne scasb
not	ecx
dec	ecx
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aDecodedChallen 
mov	[esp+6Ch+Time],	offset aJabber_1 
call	purple_debug_misc
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+Time],	ecx 
call	jabber_auth_digest_md5_parse
mov	esi, eax
mov	[esp+6Ch+var_68], offset aRspauth 
mov	[esp+6Ch+Time],	eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_61C44B34
mov	[esp+6Ch+var_68], offset aRspauth 
mov	[esp+6Ch+Time],	esi
call	g_hash_table_lookup
mov	edx, [ebx+18h]
test	eax, eax
jz	short loc_61C44A94
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Time],	eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C44B0C
mov	[esp+6Ch+var_68], offset aInvalidChall_0 
mov	[esp+6Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+6Ch+Time],	eax
call	g_strdup
mov	[ebp+0], eax
mov	ebp, 0FFFFFFFFh
xor	edi, edi
mov	eax, [ebx+18h]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	dword ptr [ebx+18h], 0
			
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+Time],	edx
call	g_free
mov	[esp+6Ch+Time],	esi
call	g_hash_table_destroy
mov	ecx, [esp+6Ch+var_40]
mov	[ecx], edi
mov	eax, ebp
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C44E26
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+Time],	offset aResponse_0 
call	xmlnode_new
mov	edi, eax
mov	[esp+6Ch+var_68], offset aUrnIetfParam_1 
mov	[esp+6Ch+Time],	eax
call	xmlnode_set_namespace
mov	ebp, 1
jmp	short loc_61C44ABA
align 4
mov	[esp+6Ch+var_68], offset aNonce	
mov	[esp+6Ch+Time],	esi
call	g_hash_table_lookup
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+var_68], offset aRealm	
mov	[esp+6Ch+Time],	esi
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	loc_61C44DBC
cmp	[esp+6Ch+var_34], 0
jz	loc_61C44DD2
lea	esi, [esi+0]
mov	[esp+6Ch+Time],	offset byte_61C7B7FA
call	g_string_new
mov	ebp, eax
call	g_random_int
mov	[esp+6Ch+Time],	0 
mov	[esp+6Ch+var_50], eax
call	time
mov	[esp+6Ch+var_4C], eax
call	g_random_int
mov	edx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_60], edx
mov	ecx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	offset aXUX 
call	g_strdup_printf
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	offset aAuthenticateXm 
call	g_strdup_printf
mov	[esp+6Ch+var_3C], eax
mov	eax, [ebx+64h]
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_password
mov	edx, eax
mov	eax, [ebx+5Ch]
mov	[esp+6Ch+var_64], edi
mov	ecx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], ecx
mov	ecx, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	ecx
mov	ecx, [esp+6Ch+var_34]
call	sub_61C44478
mov	[esp+6Ch+var_30], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	offset aXmppS 
call	g_strdup_printf
mov	[esp+6Ch+var_3C], eax
mov	eax, [ebx+64h]
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_password
mov	edx, eax
mov	eax, [ebx+5Ch]
mov	[esp+6Ch+var_64], edi
mov	ecx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], ecx
mov	ecx, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	ecx
mov	ecx, [esp+6Ch+var_34]
call	sub_61C44478
mov	[ebx+18h], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	eax, [ebx+5Ch]
mov	eax, [eax]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aUsernameS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aRealmS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aNonceS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aCnonceS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	[esp+6Ch+var_68], offset aNc00000001 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	[esp+6Ch+var_68], offset aQopAuth 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aDigestUriXmppS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aResponseS 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	[esp+6Ch+var_68], offset aCharsetUtf8 
mov	[esp+6Ch+Time],	ebp
call	g_string_append_printf
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	eax, [ebp+4]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+0]
mov	[esp+6Ch+Time],	eax
call	purple_base64_encode
mov	ebx, eax
mov	eax, [ebp+0]
mov	[esp+6Ch+var_60], eax
mov	eax, [ebp+4]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aDecodedRespons 
mov	[esp+6Ch+Time],	offset aJabber_1 
call	purple_debug_misc
mov	[esp+6Ch+Time],	offset aResponse_0 
call	xmlnode_new
mov	edi, eax
mov	[esp+6Ch+var_68], offset aUrnIetfParam_1 
mov	[esp+6Ch+Time],	eax
call	xmlnode_set_namespace
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	edi
call	xmlnode_insert_data
mov	[esp+6Ch+Time],	ebx
call	g_free
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+Time],	ebp
call	g_string_free
mov	ebp, 1
jmp	loc_61C44ACC
align 4
mov	eax, [ebx+5Ch]
mov	edi, [eax+4]
mov	eax, [esp+6Ch+var_34]
test	eax, eax
jz	short loc_61C44DD2
test	edi, edi
jnz	loc_61C44B70
			
mov	[esp+6Ch+var_68], offset aInvalidChall_0 
mov	[esp+6Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+6Ch+Time],	eax
call	g_strdup
mov	[ebp+0], eax
mov	ebp, 0FFFFFFFFh
xor	edi, edi
jmp	loc_61C44ACC
mov	[esp+6Ch+var_68], offset aInvalidRespo_1 
mov	[esp+6Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+6Ch+Time],	eax
call	g_strdup
mov	[ebp+0], eax
mov	ebp, 0FFFFFFFFh
jmp	loc_61C44AF2
call	__stack_chk_fail
align 4
public jabber_auth_get_digest_md5_mech
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C7A01C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C44E4F
add	esp, 1Ch
retn
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aServerRequir_0 
mov	[esp+2Ch+var_2C], offset aPidgin_2 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C44EAC
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], offset aAuth_1 
call	xmlnode_new
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aUrnIetfParam_2 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_namespace
mov	[esp+3Ch+var_34], offset aHttpWww_goog_0 
mov	[esp+3Ch+var_38], offset aXmlnsGa_0 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset aTrue_0 
mov	[esp+3Ch+var_38], offset aGaClientUses_0 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_3C], offset byte_61C7BA54
call	g_string_new
mov	esi, eax
mov	edx, [eax+4]
lea	eax, [edx+1]
cmp	eax, [esi+8]
jnb	loc_61C44FFC
mov	ecx, [esi]
mov	byte ptr [ecx+edx], 0
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_string_append
mov	esi, eax
mov	edx, [eax+4]
lea	eax, [edx+1]
cmp	eax, [esi+8]
jnb	loc_61C4501C
mov	ecx, [esi]
mov	byte ptr [ecx+edx], 0
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
mov	eax, [edi]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_password
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_string_append
mov	esi, eax
mov	eax, [eax+4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esi]
mov	[esp+3Ch+var_3C], eax
call	purple_base64_encode
mov	edi, eax
mov	[esp+3Ch+var_34], offset aPlain	
mov	[esp+3Ch+var_38], offset aMechanism_2 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_insert_data
mov	[esp+3Ch+var_3C], edi
call	g_free
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], esi
call	g_string_free
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C45039
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_string_insert_c
jmp	loc_61C44F44
align 4
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_string_insert_c
jmp	loc_61C44F75
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	edi, [esp+7Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_account
mov	esi, eax
mov	[esp+7Ch+var_7C], ebx
call	jabber_stream_is_ssl
test	eax, eax
jnz	short loc_61C45095
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aAuth_plain_i_1 
mov	[esp+7Ch+var_7C], esi
call	purple_account_get_bool
test	eax, eax
jz	short loc_61C450BC
lea	edx, [ebx+64h]
lea	eax, [ebx+5Ch]
call	sub_61C44EB4
mov	[edi], eax
xor	eax, eax
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C451B3
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+7Ch+var_7C], esi
call	purple_account_get_username
mov	edi, eax
mov	[esp+7Ch+var_78], offset aSRequiresPla_0 
mov	[esp+7Ch+var_7C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+var_78], offset a_no_1	
mov	[esp+7Ch+var_7C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_yes_1 
mov	[esp+7Ch+var_7C], offset aPidgin_2 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aPlaintextAut_1 
mov	[esp+7Ch+var_7C], offset aPidgin_2 
mov	[esp+7Ch+var_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aPlaintextAut_1 
mov	[esp+7Ch+var_7C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset sub_61C44E54
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], offset sub_61C451B8
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], esi
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], esi
mov	[esp+7Ch+var_6C], 1
mov	[esp+7Ch+var_70], edi
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_action
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	eax, 1
jmp	loc_61C450A4
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset aAuth_plain_i_1 
mov	[esp+2Ch+var_2C], esi
call	purple_account_set_bool
lea	edx, [ebx+64h]
lea	eax, [ebx+5Ch]
call	sub_61C44EB4
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C45229
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	xmlnode_free
call	__stack_chk_fail
align 10h
public jabber_auth_get_plain_mech
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C7A038
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C45253
add	esp, 1Ch
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+5Ch]
mov	eax, [eax]
mov	[esp+5Ch+Str], eax
call	jabber_saslprep
mov	edi, eax
test	eax, eax
jz	loc_61C454F2
mov	[esp+5Ch+var_54], offset a3d 
mov	[esp+5Ch+SubStr], offset asc_61C7BB37 
mov	[esp+5Ch+Str], eax
call	purple_strreplace
mov	ebx, eax
mov	[esp+5Ch+var_54], offset a2c 
mov	[esp+5Ch+SubStr], offset asc_61C7BB3D 
mov	[esp+5Ch+Str], eax
call	purple_strreplace
mov	ebp, eax
mov	[esp+5Ch+Str], ebx
call	g_free
mov	[esp+5Ch+Str], edi
call	g_free
mov	eax, [esi+64h]
mov	[esp+5Ch+Str], eax
call	purple_connection_get_password
mov	[esp+5Ch+Str], eax
call	jabber_saslprep
mov	[esp+5Ch+var_38], eax
test	eax, eax
jz	loc_61C4551B
mov	[esp+5Ch+Str], 20h
call	g_malloc0
mov	ebx, eax
mov	[esi+18h], eax
mov	eax, [esi+14h]
mov	edi, [eax+4]
test	edi, edi
jz	loc_61C454C4
cmp	byte ptr [edi],	0
jz	loc_61C454C4
mov	[esp+5Ch+SubStr], offset aSha1_0 
mov	[esp+5Ch+Str], edi 
call	strstr
test	eax, eax
jnz	loc_61C454E8
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+SubStr], offset aUnknownScramMe 
mov	[esp+5Ch+Str], offset aJabber_2	
call	purple_debug_error
mov	[esp+5Ch+var_48], offset aMech_to_hash 
mov	[esp+5Ch+var_4C], 2Fh
mov	[esp+5Ch+var_50], offset aAuth_scram_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSSho 
mov	[esp+5Ch+SubStr], 8
mov	[esp+5Ch+Str], 0
call	g_log
xor	eax, eax
			
mov	[ebx], eax
mov	eax, [esp+5Ch+var_38]
mov	[ebx+14h], eax
call	g_random_int
mov	edi, eax
call	g_random_int
mov	[esp+5Ch+var_2C], eax
mov	[esp+5Ch+var_28], edi
mov	[esp+5Ch+SubStr], 8
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+Str], eax
call	purple_base64_encode
mov	[ebx+4], eax
mov	[esp+5Ch+Str], 0
call	g_string_new
mov	[ebx+8], eax
mov	edx, [ebx+4]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+SubStr], offset aNSRS 
mov	[esp+5Ch+Str], eax
call	g_string_printf
mov	[esp+5Ch+Str], ebp
call	g_free
mov	dword ptr [ebx+1Ch], 1
mov	[esp+5Ch+Str], offset aAuth_2 
call	xmlnode_new
mov	ebp, eax
mov	[esp+5Ch+SubStr], offset aUrnIetfParam_3 
mov	[esp+5Ch+Str], eax
call	xmlnode_set_namespace
mov	eax, [esi+14h]
mov	eax, [eax+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], offset aMechanism_3 
mov	[esp+5Ch+Str], ebp
call	xmlnode_set_attrib
mov	eax, [ebx+8]
mov	eax, [eax]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], 6Eh
mov	[esp+5Ch+Str], offset aCS 
call	g_strdup_printf
mov	ebx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
mov	[esp+5Ch+SubStr], ecx
mov	[esp+5Ch+Str], ebx
call	purple_base64_encode
mov	esi, eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+SubStr], offset aInitialScramMe 
mov	[esp+5Ch+Str], offset aJabber_2	
call	purple_debug_misc
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+SubStr], esi
mov	[esp+5Ch+Str], ebp
call	xmlnode_insert_data
mov	[esp+5Ch+Str], esi
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_free
mov	edx, [esp+5Ch+var_34]
mov	[edx], ebp
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4552D
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+5Ch+var_54], offset aMechNullMech0	
mov	[esp+5Ch+SubStr], offset aMech_to_hash 
mov	[esp+5Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_61C45386
align 4
mov	eax, offset off_61C7BDF4
jmp	loc_61C45386
mov	[esp+5Ch+SubStr], offset aUnableToCanoni 
mov	[esp+5Ch+Str], offset aPidgin_3	
call	libintl_dgettext
mov	[esp+5Ch+Str], eax
call	g_strdup
mov	edx, [esp+5Ch+var_30]
mov	[edx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_61C454AD
mov	[esp+5Ch+Str], ebp
call	g_free
mov	[esp+5Ch+SubStr], offset aUnableToCano_0 
jmp	short loc_61C454FA
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	esi, edx
mov	edx, ecx
mov	ecx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], offset aHmac_0 
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_30], ecx
call	purple_cipher_context_new_by_name
mov	ebx, eax
mov	eax, [edi]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aHash_0 
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_set_option
mov	eax, [esi]
mov	[esp+4Ch+var_44], eax
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_set_key_with_len
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_append
mov	[esp+4Ch+var_40], 0
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	eax, [esi]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C455F6
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_cipher_context_destroy
call	__stack_chk_fail
align 4
public jabber_scram_hi
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], eax
mov	esi, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_61C458A6
mov	ecx, [esp+5Ch+var_34]
test	ecx, ecx
jz	short loc_61C45674
mov	ecx, [esp+5Ch+var_34]
mov	edi, [ecx+4]
test	edi, edi
jz	short loc_61C45674
test	esi, esi
jz	short loc_61C456AC
mov	ebx, [esi+4]
test	ebx, ebx
jz	short loc_61C456AC
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jnz	short loc_61C456CC
mov	[esp+5Ch+var_54], offset aIterations0 
mov	[esp+5Ch+var_58], offset aJabber_scram_h 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C45692
			
mov	[esp+5Ch+var_54], offset aStrNullStrLen0 
mov	[esp+5Ch+var_58], offset aJabber_scram_h 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C458C9
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+5Ch+var_54], offset aSaltNullSaltLe 
mov	[esp+5Ch+var_58], offset aJabber_scram_h 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C45692
mov	eax, [edx+8]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_44], edx
call	g_malloc0
mov	[esp+5Ch+var_3C], eax
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+8]
mov	[esp+5Ch+var_5C], eax
call	g_malloc0
mov	ebp, eax
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+8]
mov	[esp+5Ch+var_5C], eax
call	g_malloc0
mov	ebx, eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], offset aHmac_0 
call	purple_cipher_context_new_by_name
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+var_58], offset dword_61C7BCA0
mov	[esp+5Ch+var_5C], esi
call	g_string_append_len
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aHash_0 
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_set_option
mov	ecx, [esp+5Ch+var_34]
mov	eax, [ecx+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [ecx]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_set_key_with_len
mov	eax, [esi+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [esi]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_append
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebx
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+8]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_digest
mov	edx, [esp+5Ch+var_44]
mov	ecx, [edx+8]
mov	edi, [esp+5Ch+var_3C]
mov	esi, ebx
rep movsb
mov	[esp+5Ch+var_38], 1
cmp	[esp+5Ch+var_30], 1
jbe	loc_61C45881
nop
mov	eax, [edx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aHash_0 
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_44], edx
call	purple_cipher_context_set_option
mov	ecx, [esp+5Ch+var_34]
mov	eax, [ecx+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [ecx]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_set_key_with_len
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+8]
mov	[esp+5Ch+var_54], eax
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], ecx
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_append
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebp
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx+8]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_digest
mov	edx, [esp+5Ch+var_44]
mov	ecx, [edx+8]
test	ecx, ecx
jz	short loc_61C45867
xor	eax, eax
nop
mov	cl, [ebp+eax+0]
xor	[ebx+eax], cl
inc	eax
mov	ecx, [edx+8]
cmp	ecx, eax
ja	short loc_61C45858
mov	edi, [esp+5Ch+var_3C]
mov	esi, ebp
rep movsb
inc	[esp+5Ch+var_38]
mov	eax, [esp+5Ch+var_30]
cmp	[esp+5Ch+var_38], eax
jnz	loc_61C457CC
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_destroy
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	g_free
jmp	loc_61C45692
mov	[esp+5Ch+var_54], offset aHashNull 
mov	[esp+5Ch+var_58], offset aJabber_scram_h 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_61C45692
call	__stack_chk_fail
align 10h
public jabber_scram_calc_proofs
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ecx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx]
mov	esi, [eax+8]
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_40], ecx
call	g_string_new
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_44], eax
call	g_malloc0
mov	ebp, eax
mov	[esp+5Ch+var_5C], esi
call	g_malloc0
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_5C], esi
call	g_malloc0
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], esi
call	g_malloc0
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_5C], esi
call	g_string_sized_new
mov	[ebx+0Ch], eax
mov	[eax+4], esi
mov	[esp+5Ch+var_5C], esi
call	g_string_sized_new
mov	[ebx+10h], eax
mov	[eax+4], esi
mov	ecx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edi
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_58], edx
mov	eax, [ebx]
mov	[esp+5Ch+var_5C], eax
call	jabber_scram_hi
mov	[esp+5Ch+var_3C], eax
mov	edx, [esp+5Ch+var_44]
mov	ecx, [edx+8]
xor	eax, eax
mov	edi, [edx]
rep stosb
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edx
call	g_string_free
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jz	loc_61C45AE8
mov	eax, [ebx]
lea	edx, [eax+8]
add	eax, 4
mov	[esp+5Ch+var_58], offset aClientKey 
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], ecx
mov	ecx, ebp
call	sub_61C45534
mov	eax, [ebx]
lea	edx, [eax+8]
add	eax, 4
mov	[esp+5Ch+var_58], offset aServerKey 
mov	edi, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edi
mov	ecx, [esp+5Ch+var_34]
call	sub_61C45534
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	edi, [ebx]
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+4]
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_new_by_name
mov	edx, eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], edx
mov	[esp+5Ch+var_44], edx
call	purple_cipher_context_append
mov	[esp+5Ch+var_50], 0
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	eax, [edi+8]
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	purple_cipher_context_digest
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	purple_cipher_context_destroy
mov	eax, [ebx]
lea	edx, [eax+8]
add	eax, 4
mov	ecx, [ebx+8]
mov	ecx, [ecx]
mov	[esp+5Ch+var_58], ecx
mov	ecx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], ecx
mov	ecx, [esp+5Ch+var_30]
call	sub_61C45534
mov	eax, [ebx]
mov	ecx, [ebx+10h]
lea	edx, [eax+8]
add	eax, 4
mov	edi, [ebx+8]
mov	edi, [edi]
mov	[esp+5Ch+var_58], edi
mov	edi, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edi
mov	ecx, [ecx]
call	sub_61C45534
xor	eax, eax
test	esi, esi
jz	short loc_61C45AA0
mov	edi, [esp+5Ch+var_30]
nop
mov	edx, [ebx+0Ch]
mov	ecx, [edx]
mov	dl, [edi+eax]
xor	dl, [ebp+eax+0]
mov	[ecx+eax], dl
inc	eax
cmp	eax, esi
jnz	short loc_61C45A8C
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	eax, 1
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C45AEC
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_61C45AD1
call	__stack_chk_fail
align 4
public jabber_scram_feed_parser
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C45BE4
mov	eax, [ebx+8]
mov	ecx, [eax+4]
lea	edx, [ecx+1]
cmp	edx, [eax+8]
jnb	short loc_61C45B8C
mov	ebp, [eax]
mov	byte ptr [ebp+ecx+0], 2Ch
mov	[eax+4], edx
mov	eax, [eax]
mov	byte ptr [eax+edx], 0
mov	[esp+4Ch+Str2],	edi
mov	eax, [ebx+8]
mov	[esp+4Ch+Str1],	eax
call	g_string_append
mov	eax, [ebx+1Ch]
cmp	eax, 1
jz	loc_61C45C08
cmp	eax, 2
jz	short loc_61C45BA8
mov	[esp+4Ch+MaxCount], eax
mov	[esp+4Ch+Str2],	offset aScramThereIsNo 
mov	[esp+4Ch+Str1],	offset aJabber_2 
call	purple_debug_error
			
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C45D50
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+MaxCount], 2Ch
mov	[esp+4Ch+Str2],	0FFFFFFFFh
mov	[esp+4Ch+Str1],	eax
call	g_string_insert_c
jmp	short loc_61C45B38
align 4
mov	[esp+4Ch+MaxCount], 0FFFFFFFFh
mov	[esp+4Ch+Str2],	offset asc_61C7BB3D 
mov	[esp+4Ch+Str1],	edi
call	g_strsplit
mov	edi, eax
test	eax, eax
jz	short loc_61C45B70
mov	eax, [eax]
cmp	byte ptr [eax],	76h
jnz	short loc_61C45BD7
cmp	byte ptr [eax+1], 3Dh
jz	loc_61C45CC0
			
mov	[esp+4Ch+Str1],	edi
call	g_strfreev
jmp	short loc_61C45B70
align 4
mov	[esp+4Ch+MaxCount], offset aDataNull 
mov	[esp+4Ch+Str2],	offset aJabber_scram_f 
mov	[esp+4Ch+Str1],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_61C45B72
align 4
mov	[esp+4Ch+MaxCount], 0FFFFFFFFh
mov	[esp+4Ch+Str2],	offset asc_61C7BB3D 
mov	[esp+4Ch+Str1],	edi
call	g_strsplit
mov	ebp, eax
test	eax, eax
jz	loc_61C45B70
mov	edx, [eax]
cmp	byte ptr [edx],	72h
jnz	short loc_61C45C37
cmp	byte ptr [edx+1], 3Dh
jz	short loc_61C45C4E
			
xor	edi, edi
			
mov	[esp+4Ch+Str1],	edi
call	g_free
			
mov	[esp+4Ch+Str1],	ebp
call	g_strfreev
jmp	loc_61C45B70
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [ebx+4]
repne scasb
not	ecx
dec	ecx
lea	edi, [edx+2]
mov	[esp+4Ch+MaxCount], ecx	
mov	[esp+4Ch+Str2],	edi 
mov	edx, [ebx+4]
mov	[esp+4Ch+Str1],	edx 
call	strncmp
test	eax, eax
jnz	short loc_61C45C37
mov	[esp+4Ch+Str1],	edi
call	g_strdup
mov	edi, eax
mov	eax, [ebp+4]
cmp	byte ptr [eax],	73h
jnz	short loc_61C45C39
cmp	byte ptr [eax+1], 3Dh
jnz	short loc_61C45C39
lea	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+Str2],	edx
add	eax, 2
mov	[esp+4Ch+Str1],	eax
call	purple_base64_decode
mov	edx, eax
test	eax, eax
jz	short loc_61C45CB1
cmp	byte ptr [eax],	0
jnz	loc_61C45D55
mov	[esp+4Ch+Str1],	edx
call	g_free
jmp	loc_61C45C39
align 10h
cmp	byte ptr [eax+2], 0
jz	loc_61C45BD7
add	eax, 2
mov	[esp+4Ch+Str1],	eax
call	g_strdup
mov	ebp, eax
mov	[esp+4Ch+Str1],	edi
call	g_strfreev
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	ebp
call	purple_base64_decode
mov	edi, eax
mov	[esp+4Ch+Str1],	ebp
call	g_free
test	edi, edi
jz	short loc_61C45D09
mov	edx, [ebx+10h]
mov	ecx, [edx+4]
cmp	ecx, [esp+4Ch+var_24]
jz	short loc_61C45D18
mov	[esp+4Ch+Str1],	edi
call	g_free
jmp	loc_61C45B70
align 4
mov	[esp+4Ch+MaxCount], ecx	
mov	eax, [edx]
mov	[esp+4Ch+Str2],	eax 
mov	[esp+4Ch+Str1],	edi 
call	memcmp
mov	[esp+4Ch+Str1],	edi
test	eax, eax
jz	short loc_61C45D3B
call	g_free
jmp	loc_61C45B70
call	g_free
mov	dword ptr [esi], 0
mov	eax, 1
jmp	loc_61C45B72
call	__stack_chk_fail
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	edx
mov	[esp+4Ch+var_38], edx
call	g_string_new_len
mov	[esp+4Ch+var_34], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str1],	edx
call	g_free
mov	eax, [ebp+8]
cmp	byte ptr [eax],	69h
jz	short loc_61C45DAD
			
mov	[esp+4Ch+Str1],	edi
call	g_free
cmp	[esp+4Ch+var_34], 0
jz	loc_61C45C41
mov	[esp+4Ch+Str2],	1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax
call	g_string_free
jmp	loc_61C45C41
cmp	byte ptr [eax+1], 3Dh
jnz	short loc_61C45D81
cmp	byte ptr [eax+2], 0
jz	short loc_61C45D81
add	eax, 2
mov	[esp+4Ch+Str], eax
mov	eax, ds:g_ascii_table
mov	ecx, [eax]
mov	eax, [esp+4Ch+Str]
movzx	edx, byte ptr [eax]
test	dl, dl
jz	short loc_61C45DDB
test	byte ptr [ecx+edx*2], 8
jz	short loc_61C45D81
inc	eax
jmp	short loc_61C45DCB
mov	[esp+4Ch+MaxCount], 0Ah	
mov	[esp+4Ch+Str2],	0 
mov	eax, [esp+4Ch+Str]
mov	[esp+4Ch+Str1],	eax 
call	strtoul
mov	[esp+4Ch+Str], eax
mov	[esp+4Ch+Str1],	ebp
call	g_strfreev
mov	eax, [ebx+8]
mov	ebp, [eax+4]
lea	edx, [ebp+1]
cmp	edx, [eax+8]
jnb	short loc_61C45E80
mov	ecx, [eax]
mov	byte ptr [ecx+ebp], 2Ch
mov	[eax+4], edx
mov	eax, [eax]
mov	byte ptr [eax+edx], 0
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+MaxCount], offset aBiws 
mov	[esp+4Ch+Str2],	offset aCSRS 
mov	eax, [ebx+8]
mov	[esp+4Ch+Str1],	eax
call	g_string_append_printf
mov	eax, [esp+4Ch+Str]
mov	[esp+4Ch+MaxCount], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	ebx
call	jabber_scram_calc_proofs
mov	ebp, eax
mov	[esp+4Ch+Str2],	1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax
call	g_string_free
test	ebp, ebp
jnz	short loc_61C45E9C
mov	[esp+4Ch+Str1],	edi
call	g_free
xor	eax, eax
jmp	loc_61C45B72
mov	[esp+4Ch+MaxCount], 2Ch
mov	[esp+4Ch+Str2],	0FFFFFFFFh
mov	[esp+4Ch+Str1],	eax
call	g_string_insert_c
jmp	short loc_61C45E20
align 4
mov	eax, [ebx+0Ch]
mov	edx, [eax+4]
mov	[esp+4Ch+Str2],	edx
mov	eax, [eax]
mov	[esp+4Ch+Str1],	eax
call	purple_base64_encode
mov	ebx, eax
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+MaxCount], edi
mov	[esp+4Ch+Str2],	offset aBiws 
mov	[esp+4Ch+Str1],	offset aCSRSPS 
call	g_strdup_printf
mov	[esi], eax
mov	[esp+4Ch+Str1],	edi
call	g_free
mov	[esp+4Ch+Str1],	ebx
call	g_free
mov	eax, 1
jmp	loc_61C45B72
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	esi, [eax+18h]
mov	[esp+3Ch+var_28], 0
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	edi, eax
mov	eax, [esi+1Ch]
cmp	eax, 3
jz	loc_61C4602C
test	edi, edi
jz	loc_61C4606C
cmp	byte ptr [edi],	0
jz	loc_61C4606C
cmp	eax, 2
jnz	loc_61C46038
lea	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	purple_base64_decode
mov	ebx, eax
mov	[esp+3Ch+var_3C], edi
call	g_free
test	ebx, ebx
jz	loc_61C46018
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ecx, [esp+3Ch+var_24]
jnz	loc_61C46018
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aDecodedSuccess 
mov	[esp+3Ch+var_3C], offset aJabber_2 
call	purple_debug_misc
lea	eax, [esp+3Ch+var_28]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	jabber_scram_feed_parser
test	eax, eax
jz	short loc_61C45FDC
mov	eax, [esp+3Ch+var_28]
test	eax, eax
jnz	short loc_61C45FDC
mov	[esp+3Ch+var_3C], ebx
call	g_free
xor	eax, eax
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C46076
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	eax, [esp+3Ch+var_28]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_38], offset aInvalidChall_1 
mov	[esp+3Ch+var_3C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+0], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_61C45FC1
align 4
			
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	[esp+3Ch+var_38], offset aMaliciousChall 
jmp	short loc_61C45FF8
align 4
mov	[esp+3Ch+var_3C], edi
call	g_free
xor	eax, eax
jmp	short loc_61C45FC1
mov	[esp+3Ch+var_38], offset aUnexpectedResp 
mov	[esp+3Ch+var_3C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebp+0], eax
mov	[esp+3Ch+var_3C], edi
call	g_free
mov	eax, 0FFFFFFFFh
jmp	loc_61C45FC1
align 4
			
mov	[esp+3Ch+var_38], offset aInvalidChall_1 
jmp	short loc_61C46040
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	eax, [eax+18h]
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_28], 0
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C46280
cmp	byte ptr [eax],	0
jz	loc_61C46280
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_base64_decode
mov	ebx, eax
test	eax, eax
jz	loc_61C46210
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ecx, [esp+4Ch+var_24]
jnz	loc_61C46210
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aDecodedChall_0 
mov	[esp+4Ch+var_4C], offset aJabber_2 
call	purple_debug_misc
lea	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebx
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	jabber_scram_feed_parser
test	eax, eax
jz	loc_61C462DC
mov	edx, [esp+4Ch+var_38]
inc	dword ptr [edx+1Ch]
mov	[esp+4Ch+var_4C], offset aResponse_1 
call	xmlnode_new
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aUrnIetfParam_3 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	eax, [esp+4Ch+var_28]
test	eax, eax
jz	loc_61C46274
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aDecodedRespo_0 
mov	[esp+4Ch+var_4C], offset aJabber_2 
call	purple_debug_misc
mov	edx, [esp+4Ch+var_28]
test	edx, edx
jz	loc_61C46268
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edx
call	purple_base64_encode
mov	edi, eax
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_insert_data
mov	eax, 1
			
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_3C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	edx, [esp+4Ch+var_28]
mov	[esp+4Ch+var_4C], edx
call	g_free
mov	edx, [esp+4Ch+var_34]
mov	[edx], ebp
mov	eax, [esp+4Ch+var_3C]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C46312
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+4Ch+var_4C], offset aAbort	
call	xmlnode_new
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aUrnIetfParam_3 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	edx, [esp+4Ch+var_38]
mov	dword ptr [edx+1Ch], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset aMaliciousChall 
mov	[esp+4Ch+var_4C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, 0FFFFFFFFh
xor	edi, edi
jmp	loc_61C461C4
align 4
mov	eax, 1
xor	edi, edi
jmp	loc_61C461C4
mov	eax, offset aNull_6 
jmp	loc_61C4616B
align 10h
			
mov	[esp+4Ch+var_4C], offset aAbort	
call	xmlnode_new
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aUrnIetfParam_3 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	edx, [esp+4Ch+var_38]
mov	dword ptr [edx+1Ch], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset aInvalidChall_1 
mov	[esp+4Ch+var_4C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, 0FFFFFFFFh
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C461C4
align 4
mov	[esp+4Ch+var_4C], offset aAbort	
call	xmlnode_new
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aUrnIetfParam_3 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	edx, [esp+4Ch+var_38]
mov	dword ptr [edx+1Ch], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset aInvalidChall_1 
jmp	loc_61C46241
call	__stack_chk_fail
align 4
public jabber_scram_data_destroy
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C4634E
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_61C46365
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_61C4637C
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	edx, [ebx+14h]
test	edx, edx
jz	short loc_61C463A0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	edi, edx
rep stosb
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C463BA
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	edi
jmp	g_free
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_61C463E9
mov	[esp+2Ch+var_2C], eax
call	jabber_scram_data_destroy
mov	dword ptr [ebx+18h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C463FA
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public jabber_auth_get_scram_mechs
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	dword ptr [eax], 1
mov	eax, offset off_61C7A054
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4642D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4646B
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4649B
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_free
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edi, [esp+7Ch+arg_0]
mov	ebx, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	eax, [esp+7Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], ecx
xor	ecx, ecx
test	ebx, ebx
jz	loc_61C465FC
cmp	edx, 3
jz	loc_61C46560
mov	[esp+7Ch+var_78], offset aQuery_1 
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_61C465FC
mov	[esp+7Ch+var_74], offset aJabberXData 
mov	[esp+7Ch+var_78], offset asc_61C7BE89 
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_child_with_namespace
mov	ebp, eax
test	eax, eax
jz	loc_61C46614
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C46955
mov	[esp+7Ch+arg_C], eax
mov	[esp+7Ch+arg_8], offset	sub_61C4706C
mov	[esp+7Ch+arg_4], ebp
mov	[esp+7Ch+arg_0], edi
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_x_data_request
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	jabber_parse_error
mov	ebx, eax
test	eax, eax
jz	loc_61C4690C
mov	[esp+7Ch+var_78], offset aCouldNotQueryT 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	esi, eax
mov	[esp+7Ch+var_78], offset aDirectoryQuery 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	eax, [edi+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_notify_message
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C46955
mov	[esp+7Ch+arg_0], ebx
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C46955
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	purple_request_fields_new
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_7C], 0
call	purple_request_field_group_new
mov	ebp, eax
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_7C], eax
call	purple_request_fields_add_group
mov	[esp+7Ch+var_78], offset aInstructions 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C46930
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_data
test	eax, eax
jz	loc_61C46930
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_3C], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aServerInstruct 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_78], ecx
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	[esp+7Ch+var_34], eax
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	g_free
mov	eax, [esp+7Ch+var_34]
test	eax, eax
jz	loc_61C46930
mov	[esp+7Ch+var_78], offset aFirst	
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4670F
mov	[esp+7Ch+var_78], offset aFirstName 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aFirst	
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aLast 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C46763
mov	[esp+7Ch+var_78], offset aLastName 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aLast 
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aNick 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C467B7
mov	[esp+7Ch+var_78], offset aNickname 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aNick 
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aEmail	
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4680B
mov	[esp+7Ch+var_78], offset aEmailAddress 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aEmail	
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_7C], 8
call	g_malloc0
mov	esi, eax
mov	[eax], edi
mov	[esp+7Ch+var_7C], ebx
call	g_strdup
mov	[esi+4], eax
mov	eax, [edi+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aCancel 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aSearch 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_3C], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aSearchForXmppU 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	ebx, eax
mov	[esp+7Ch+var_78], offset aSearchForXmppU 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], esi
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_54], 0
mov	[esp+7Ch+var_58], ebp
mov	[esp+7Ch+var_5C], offset sub_61C46434
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_60], edx
mov	[esp+7Ch+var_64], offset sub_61C4695C
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_68], ecx
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_6C], edx
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_70], ecx
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], eax
mov	eax, [edi+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_fields
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C46955
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+arg_0], eax
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+7Ch+var_78], offset aUnknownError_0 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	ebx, eax
jmp	loc_61C4657E
align 10h
			
mov	[esp+7Ch+var_78], offset aFillInOneOrMor 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[esp+7Ch+var_34], eax
jmp	loc_61C466BB
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], edx
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], offset aJabberIqSearch 
mov	[esp+5Ch+var_58], 0
mov	eax, [edx]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_new_query
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], offset aQuery_1 
mov	eax, [eax+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_get_groups
mov	[esp+5Ch+var_38], eax
test	eax, eax
jz	loc_61C46A86
nop
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx]
mov	[esp+5Ch+var_5C], eax
call	purple_request_field_group_get_fields
mov	ebx, eax
test	eax, eax
jz	loc_61C46A73
mov	esi, [ebx]
mov	[esp+5Ch+var_5C], esi
call	purple_request_field_get_id
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+var_5C], esi
call	purple_request_field_string_get_value
mov	ebp, eax
test	eax, eax
jz	short loc_61C46A68
mov	edi, offset aFirst 
mov	esi, [esp+5Ch+var_40]
mov	ecx, 6
repe cmpsb
jz	short loc_61C46A40
mov	edi, offset aLast 
mov	esi, [esp+5Ch+var_40]
mov	ecx, 5
repe cmpsb
jz	short loc_61C46A40
mov	edi, offset aNick 
mov	esi, [esp+5Ch+var_40]
mov	ecx, 5
repe cmpsb
jz	short loc_61C46A40
mov	edi, offset aEmail 
mov	esi, [esp+5Ch+var_40]
mov	ecx, 6
repe cmpsb
jnz	short loc_61C46A68
			
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], edx
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_data
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	loc_61C469DC
mov	eax, [esp+5Ch+var_38]
mov	eax, [eax+4]
mov	[esp+5Ch+var_38], eax
test	eax, eax
jnz	loc_61C469C4
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset sub_61C46B04
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_set_callback
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_0 
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_send
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+4]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C46AFF
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_0], edx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str2],	offset aQuery_1	
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C46D72
call	purple_notify_searchresults_new
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_54], offset aJabberXData 
mov	[esp+5Ch+Str2],	offset asc_61C7BE89 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child_with_namespace
mov	edi, eax
test	eax, eax
jz	loc_61C46DB0
mov	[esp+5Ch+Str2],	offset aNewSkool 
mov	[esp+5Ch+Str1],	offset aJabber_3 
call	purple_debug_info
mov	[esp+5Ch+Str2],	offset aReported 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C46DA3
mov	[esp+5Ch+Str2],	offset aField 
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C46DA3
mov	[esp+5Ch+var_34], 0
xor	ebp, ebp
jmp	short loc_61C46BED
			
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	esi
mov	[esp+5Ch+Str1],	ebp
call	g_slist_append
mov	ebp, eax
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C46C1B
mov	[esp+5Ch+Str2],	offset aVar 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+Str2],	offset aLabel 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
test	esi, esi
jz	short loc_61C46BDF
test	eax, eax
jnz	short loc_61C46BB9
mov	eax, esi
jmp	short loc_61C46BB9
mov	[esp+5Ch+var_34], ebp
mov	[esp+5Ch+Str2],	offset aItem_0 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_child
mov	ebp, eax
test	eax, eax
jz	loc_61C46CFB
mov	edx, [esp+5Ch+var_34]
xor	edi, edi
test	edx, edx
jz	loc_61C46CD9
mov	esi, [esp+5Ch+var_34]
xor	edi, edi
lea	esi, [esi+0]
mov	[esp+5Ch+Str2],	offset aField 
mov	[esp+5Ch+Str1],	ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C46C7E
jmp	loc_61C46D8C
align 4
			
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C46D8C
mov	[esp+5Ch+Str2],	offset aVar 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C46C6C
mov	edx, [esi]
mov	[esp+5Ch+Str2],	edx 
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_61C46C6C
mov	[esp+5Ch+Str2],	offset aValue 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C46C6C
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	edi
call	g_list_append
mov	edi, eax
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C46C50
mov	[esp+5Ch+Str2],	edi
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_row_add
mov	[esp+5Ch+Str1],	ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jnz	loc_61C46C39
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	g_slist_free
			
mov	[esp+5Ch+var_54], offset loc_61C47004
mov	[esp+5Ch+Str2],	2
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_button_add
mov	[esp+5Ch+Str2],	offset aTheFollowingAr 
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	0
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+64h]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C46FFC
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Str1],	edi
call	g_list_append
mov	edi, eax
jmp	loc_61C46CCE
			
mov	[esp+5Ch+var_34], 0
jmp	loc_61C46C1F
mov	[esp+5Ch+Str2],	offset aOldSkool 
mov	[esp+5Ch+Str1],	offset aJabber_3 
call	purple_debug_info
mov	[esp+5Ch+Str2],	offset aJid_0 
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	offset aFirstName 
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	offset aLastName 
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	offset aNickname 
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	offset aEmail_0	
mov	[esp+5Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_new
mov	[esp+5Ch+Str2],	eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_column_add
mov	[esp+5Ch+Str2],	offset aItem_0 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	loc_61C46F9A
jmp	loc_61C46D07
align 10h
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+Str2],	offset aLast 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C46FEE
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+Str2],	offset aNick 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C46FF5
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+Str2],	offset aEmail 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C46FE7
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aRowP 
mov	[esp+5Ch+Str1],	offset aJabber_3 
call	purple_debug_info
mov	[esp+5Ch+Str2],	esi
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	purple_notify_searchresults_row_add
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C46D07
mov	[esp+5Ch+Str2],	offset aJid_1 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C46F88
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	0
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+Str2],	offset aFirst 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jnz	loc_61C46EC0
xor	eax, eax
jmp	loc_61C46EC8
xor	eax, eax
jmp	loc_61C46F52
xor	eax, eax
jmp	loc_61C46EF6
xor	eax, eax
jmp	loc_61C46F24
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], 0
mov	eax, [esp+34h]
mov	[esp], eax
call	g_list_nth_data
mov	ebx, eax
mov	[esp], esi
call	purple_connection_get_account
mov	dword ptr [esp+0Ch], 0
mov	dword ptr [esp+8], 0
mov	[esp+4], ebx
mov	[esp], eax
call	purple_blist_request_add_buddy
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47064
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	ebx, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aType 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C470B2
mov	edi, offset aCancel_0 
mov	ecx, 7
mov	esi, eax
repe cmpsb
jz	short loc_61C47126
mov	[esp+4Ch+var_44], offset aJabberIqSearch 
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+4Ch+var_48], offset aQuery_1 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_61C46B04
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_set_callback
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTo_0 
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_send
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47142
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	dword ptr [esp+8], offset aUnsubscribed	
mov	[esp+4], eax
mov	[esp], esi
call	jabber_presence_subscription_set
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C471A4
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_7C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C47208
mov	[esp+7Ch+var_74], offset aPurple_blist_n 
mov	[esp+7Ch+var_78], offset aJabber_buddy_c 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4730D
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_7C], ebx
call	purple_buddy_get_name
mov	esi, eax
mov	[esp+7Ch+var_7C], ebx
call	purple_buddy_get_account
mov	edi, eax
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_connection
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aSWillNoLongerB 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+var_78], offset a_no_2	
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_yes_2 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aCancelPresence 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_48], 0
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], offset loc_61C47148
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], ebx
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], esi
mov	[esp+7Ch+var_68], edi
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], ebp
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_7C], eax
call	purple_request_action
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4730D
mov	[esp+7Ch+arg_0], ebp
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C47347
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_strequal
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C4736C
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_destroy
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C473B1
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C473E8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C473FA
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_str_hash
align 4
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C473FA
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	esi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	short loc_61C4746C
mov	[esp+4Ch+Str2],	edx
mov	[esp+4Ch+Str1],	edi
mov	[esp+4Ch+var_30], edx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
mov	edx, [esp+4Ch+var_30]
jz	short loc_61C4749C
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4745C
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C474EB
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edi, ebx
			
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	edi
call	xmlnode_new_child
jmp	short loc_61C47444
mov	ebx, offset vcard_template_data
jmp	short loc_61C4747D
align 4
add	ebx, 0Ch
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_61C4745E
mov	[esp+4Ch+Str2],	esi 
mov	eax, [ebx+4]
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_61C47474
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_61C4745E
jmp	short loc_61C4741A
align 4
mov	[esp+4Ch+Str1],	edx
call	g_strdup
mov	ebx, eax
mov	[esp+4Ch+Str2],	2Fh 
mov	[esp+4Ch+Str1],	eax 
call	strrchr
test	eax, eax
jz	short loc_61C474DB
mov	byte ptr [eax],	0
lea	ecx, [eax+1]
mov	edx, ebx
mov	eax, edi
call	sub_61C47400
mov	ebp, eax
mov	[esp+4Ch+Str1],	ebx
call	g_free
test	ebp, ebp
jz	short loc_61C4745E
mov	edi, ebp
jmp	short loc_61C4745E
mov	[esp+4Ch+Str2],	ebx
mov	[esp+4Ch+Str1],	edi
call	xmlnode_new_child
mov	ebp, eax
jmp	short loc_61C474CB
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset aVcard	
call	xmlnode_new
mov	esi, eax
mov	eax, offset aProdid 
mov	ebx, offset vcard_tag_attr_list
xchg	ax, ax
mov	edx, [ebx+4]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
add	ebx, 8
mov	eax, [ebx]
test	eax, eax
jnz	short loc_61C47528
mov	eax, offset aFullName 
mov	ebx, offset vcard_template_data
jmp	short loc_61C47559
			
add	ebx, 0Ch
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C475CC
			
cmp	byte ptr [eax],	0
jz	short loc_61C47550
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_request_fields_get_field
mov	[esp+4Ch+var_4C], eax
call	purple_request_field_string_get_value
mov	edi, eax
test	eax, eax
jz	short loc_61C47550
cmp	byte ptr [eax],	0
jz	short loc_61C47550
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aSettingSToS 
mov	[esp+4Ch+var_4C], offset aJabber_3 
call	purple_debug_info
mov	ecx, [ebx+4]
xor	edx, edx
mov	eax, esi
call	sub_61C47400
test	eax, eax
jz	short loc_61C47550
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
add	ebx, 0Ch
mov	eax, [ebx]
test	eax, eax
jnz	short loc_61C47559
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	xmlnode_to_str
mov	ebx, eax
mov	[esp+4Ch+var_4C], esi
call	xmlnode_free
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	purple_account_set_user_info
mov	[esp+4Ch+var_48], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	serv_set_info
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4762A
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C47728
mov	esi, [ebx]
mov	[esp+2Ch+var_28], ebx
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	[esi], eax
mov	eax, [ebx+3Ch]
test	eax, eax
jz	short loc_61C476A4
nop
mov	esi, [eax]
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	[ebx+3Ch], eax
test	eax, eax
jnz	short loc_61C47664
mov	eax, [ebx+38h]
test	eax, eax
jz	short loc_61C476CC
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	[ebx+38h], eax
test	eax, eax
jnz	short loc_61C476AC
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47746
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aJbrNull 
mov	[esp+2Ch+var_28], offset aJabber_buddy_r 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C47716
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [eax+8]
cmp	[edx+8], ecx
jz	short loc_61C4778C
setle	al
movzx	eax, al
lea	eax, [eax+eax-1]
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4781B
add	esp, 18h
pop	ebx
retn
align 4
mov	ecx, [edx+0Ch]
cmp	ecx, 5
ja	short loc_61C477D0
mov	ecx, ds:dword_61C7C844[ecx*4]
mov	ebx, [eax+0Ch]
cmp	ebx, 5
ja	short loc_61C477DD
mov	ebx, ds:dword_61C7C85C[ebx*4]
cmp	ecx, ebx
jz	short loc_61C477FC
cmp	ecx, 1
jz	short loc_61C477F0
cmp	ecx, 3
jz	short loc_61C477E4
cmp	ecx, 4
jz	short loc_61C477E9
test	ecx, ecx
jnz	short loc_61C477C6
cmp	ebx, 0FFFFFFFEh
jz	short loc_61C477F0
			
mov	eax, 1
jmp	short loc_61C47776
align 10h
mov	ecx, 0FFFFFFFEh
mov	ebx, [eax+0Ch]
cmp	ebx, 5
jbe	short loc_61C477A3
mov	ebx, 0FFFFFFFEh
jmp	short loc_61C477AA
cmp	ebx, 4
jz	short loc_61C477F0
test	ebx, ebx
jnz	short loc_61C477C1
lea	esi, [esi+0]
			
mov	eax, 0FFFFFFFFh
jmp	loc_61C47776
align 4
mov	edx, [edx+14h]
mov	eax, [eax+14h]
cmp	edx, eax
jz	short loc_61C47814
test	edx, edx
jz	short loc_61C477F0
test	eax, eax
jz	short loc_61C477C6
cmp	edx, eax
jl	short loc_61C477C6
jmp	short loc_61C477F0
xor	eax, eax
jmp	loc_61C47776
call	__stack_chk_fail
public jabber_user_search
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C478EC
cmp	byte ptr [ebx],	0
jz	loc_61C478EC
mov	eax, [esi+38h]
test	eax, eax
jz	short loc_61C4786A
mov	eax, [eax]
test	eax, eax
jz	short loc_61C4786A
mov	[esp+3Ch+Str2],	eax 
mov	[esp+3Ch+Str1],	ebx 
call	strcmp
test	eax, eax
jz	loc_61C4795C
			
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+Str2],	offset aUser_directory 
mov	eax, [esi+64h]
mov	eax, [eax+0Ch]
mov	[esp+3Ch+Str1],	eax
call	purple_account_set_string
mov	[esp+3Ch+var_34], offset aJabberIqSearch 
mov	[esp+3Ch+Str2],	1
mov	[esp+3Ch+Str1],	esi
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+Str2],	offset aTo_0 
mov	eax, [eax+8]
mov	[esp+3Ch+Str1],	eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Str2],	offset sub_61C464A0
mov	[esp+3Ch+Str1],	esi
call	jabber_iq_set_callback
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C47969
mov	[esp+3Ch+arg_0], esi
add	esp, 34h
pop	ebx
pop	esi
jmp	jabber_iq_send
align 4
			
mov	[esp+3Ch+Str2],	offset aInvalidDirecto 
mov	[esp+3Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+3Ch+Str2],	offset aInvalidDirecto 
mov	[esp+3Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Str2],	0
mov	eax, [esi+64h]
mov	[esp+3Ch+Str1],	eax
call	purple_notify_message
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47969
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset byte_61C7C0EF
jmp	loc_61C4786E
			
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C479AC
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C47A2B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	dword ptr [esp+0Ch], 0
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	[esp], eax
call	jabber_presence_create_js
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aTo_0	
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp+4], esi
mov	[esp], edi
call	jabber_send
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47A2B
mov	[esp+30h], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	xmlnode_free
			
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C47A6C
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C47B23
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	esi, eax
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp], esi
call	purple_connection_get_account
mov	[esp], eax
call	purple_account_get_presence
mov	[esp], eax
call	purple_presence_get_active_status
lea	edx, [esp+18h]
mov	[esp+0Ch], edx
lea	edx, [esp+14h]
mov	[esp+8], edx
lea	edx, [esp+10h]
mov	[esp+4], edx
mov	[esp], eax
call	purple_status_to_jabber
mov	eax, [esp+18h]
mov	[esp+0Ch], eax
mov	eax, [esp+14h]
mov	[esp+8], eax
mov	eax, [esp+10h]
mov	[esp+4], eax
mov	[esp], edi
call	jabber_presence_create_js
mov	esi, eax
mov	eax, [esp+14h]
mov	[esp], eax
call	g_free
mov	[esp], ebx
call	purple_buddy_get_name
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aTo_0	
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp+4], esi
mov	[esp], edi
call	jabber_send
mov	[esp], esi
call	xmlnode_free
jmp	loc_61C47A52
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C47B78
mov	dword ptr [esp+8], offset aPurple_blist_n 
mov	dword ptr [esp+4], offset aJabber_buddy_u 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47BB0
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	dword ptr [esp+8], offset aUnsubscribe 
mov	[esp+4], eax
mov	[esp], esi
call	jabber_presence_subscription_set
jmp	short loc_61C47B65
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C47C08
mov	dword ptr [esp+8], offset aPurple_blist_n 
mov	dword ptr [esp+4], offset aJabber_buddy_0 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47C40
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	dword ptr [esp+8], offset aSubscribe 
mov	[esp+4], eax
mov	[esp], esi
call	jabber_presence_subscription_set
jmp	short loc_61C47BF5
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+var_30]
mov	edi, [eax]
test	edx, edx
jz	short loc_61C47CA7
test	edi, edi
jz	short loc_61C47CA7
mov	ebx, edi
jmp	short loc_61C47C7B
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C47CA7
mov	ebp, [ebx]
mov	[esp+4Ch+Str2],	ebp 
mov	[esp+4Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_61C47C74
mov	[esp+4Ch+Str2],	ebp
mov	[esp+4Ch+Str1],	edi
call	g_slist_remove
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	[esp+4Ch+Str1],	ebp
call	g_free
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C47CBB
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, edx
mov	ebx, [esp+6Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+Time],	eax
call	g_hash_table_lookup
mov	edi, eax
mov	esi, [esi]
test	ebx, ebx
jz	loc_61C47E64
mov	eax, [ebx+28h]
test	eax, eax
jz	loc_61C47D7D
mov	edx, [ebx+24h]
test	edx, edx
jz	loc_61C48038
mov	ecx, offset asc_61C7C115 
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	offset aSSS_0 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+6Ch+var_68], offset aClient 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	ebp, [ebx+2Ch]
test	ebp, ebp
jz	short loc_61C47D7D
mov	[esp+6Ch+var_68], offset aOperatingSyste 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
			
cmp	dword ptr [ebx+30h], 0FFF85EE0h
jz	loc_61C47E64
lea	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+Time],	ebp 
call	time
mov	eax, [ebx+30h]
add	[esp+6Ch+var_30], eax
mov	[esp+6Ch+Time],	ebp 
call	gmtime
mov	[esp+6Ch+var_40], eax
mov	ecx, [ebx+30h]
mov	eax, ecx
mov	ebp, 0E10h
cdq
idiv	ebp
mov	[esp+6Ch+var_48], edx
mov	eax, 88888889h
imul	edx
mov	eax, [esp+6Ch+var_48]
add	eax, edx
sar	eax, 5
mov	ebp, [esp+6Ch+var_48]
sar	ebp, 1Fh
sub	eax, ebp
mov	[esp+6Ch+var_48], eax
js	loc_61C48050
mov	eax, 91A2B3C5h
imul	ecx
lea	ebp, [ecx+edx]
sar	ebp, 0Bh
mov	eax, ecx
sar	eax, 1Fh
sub	ebp, eax
mov	[esp+6Ch+var_44], ebp
js	loc_61C48044
mov	ebp, ecx
sar	ebp, 1Fh
and	ebp, 2
add	ebp, 2Bh
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	eax
call	purple_time_format
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_5C], edx
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	offset aSC02d02d 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+6Ch+var_68], offset aLocalTime 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
mov	[esp+6Ch+Time],	ebp
call	g_free
			
test	edi, edi
jz	short loc_61C47EA4
mov	eax, [edi]
test	eax, eax
jle	short loc_61C47EA4
mov	[esp+6Ch+Time],	eax
call	purple_str_seconds_to_string
mov	edi, eax
mov	[esp+6Ch+var_68], offset aIdle 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
mov	[esp+6Ch+Time],	edi
call	g_free
			
test	ebx, ebx
jz	loc_61C47FE4
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+Time],	eax
call	jabber_buddy_state_get_name
mov	edx, eax
mov	eax, [ebx+10h]
test	eax, eax
jz	loc_61C48020
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_4C], edx
call	purple_markup_escape_text
mov	ebp, eax
mov	[esp+6Ch+Time],	eax
call	purple_strdup_withhtml
mov	edi, eax
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	[esp+6Ch+var_68], edi
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+Time],	edx
call	purple_strequal
test	eax, eax
mov	edx, [esp+6Ch+var_4C]
jz	loc_61C47FCC
mov	ebp, edi
test	edi, edi
jnz	short loc_61C47F17
xchg	ax, ax
xor	ebp, ebp
mov	edi, offset byte_61C7C0EF
			
mov	eax, offset byte_61C7C0EF
mov	edx, eax
			
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Time],	offset aSSS_0 
call	g_strdup_printf
mov	edi, eax
mov	[esp+6Ch+var_68], offset aStatus 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
mov	eax, [ebx+8]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset aD 
mov	[esp+6Ch+var_68], 0Ch
lea	ebx, [esp+6Ch+var_2C]
mov	[esp+6Ch+Time],	ebx
call	g_snprintf
mov	[esp+6Ch+var_68], offset aPriority 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
mov	[esp+6Ch+Time],	edi
call	g_free
mov	[esp+6Ch+Time],	ebp
call	g_free
mov	ebp, [esp+6Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	loc_61C4805B
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	edi, edi
jz	short loc_61C48020
mov	ebp, edi
mov	eax, offset asc_61C7C117 
test	edx, edx
jnz	loc_61C47F1E
jmp	loc_61C47F17
mov	[esp+6Ch+var_68], offset aUnknown 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+6Ch+var_68], offset aStatus 
mov	[esp+6Ch+Time],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	esi
call	purple_notify_user_info_prepend_pair
jmp	short loc_61C47FB3
			
test	edx, edx
jz	loc_61C47F10
xor	ebp, ebp
mov	edi, offset byte_61C7C0EF
mov	eax, edi
jmp	loc_61C47F1E
align 4
mov	edx, offset byte_61C7C0EF
mov	ecx, edx
jmp	loc_61C47D0C
neg	ebp
mov	[esp+6Ch+var_44], ebp
jmp	loc_61C47DFB
align 10h
neg	eax
mov	[esp+6Ch+var_48], eax
jmp	loc_61C47DDD
call	__stack_chk_fail
public jabber_buddy_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C480B0
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C48095
mov	eax, [eax]
call	sub_61C47630
mov	eax, [ebx]
test	eax, eax
jnz	short loc_61C48088
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C480DD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 10h
mov	[esp+2Ch+var_24], offset aJbNull 
mov	[esp+2Ch+var_28], offset aJabber_buddy_f 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C480DD
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public jabber_buddy_find
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	ebx, [esi+24h]
test	ebx, ebx
jz	short loc_61C48180
mov	[esp+3Ch+var_3C], eax
call	jabber_get_bare_jid
mov	ebx, eax
test	eax, eax
jz	short loc_61C48180
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C48150
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C48184
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
test	edi, edi
jz	short loc_61C4812A
mov	[esp+3Ch+var_3C], 10h
call	g_malloc0
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	edx, [esi+24h]
mov	[esp+3Ch+var_3C], edx
mov	[esp+3Ch+var_20], eax
call	g_hash_table_insert
mov	eax, [esp+3Ch+var_20]
jmp	short loc_61C4813A
align 10h
			
xor	eax, eax
jmp	short loc_61C4813A
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	dword ptr [esp+8], 1
mov	[esp+4], edx
mov	[esp], ebx
mov	[esp+1Ch], ecx
call	jabber_buddy_find
mov	ebp, eax
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_connection_get_account
mov	[esp], eax
call	purple_account_get_presence
mov	[esp], eax
call	purple_presence_get_active_status
lea	edx, [esp+28h]
mov	[esp+0Ch], edx
lea	edx, [esp+24h]
mov	[esp+8], edx
lea	edx, [esp+20h]
mov	[esp+4], edx
mov	[esp], eax
call	purple_status_to_jabber
mov	eax, [esp+28h]
mov	[esp+0Ch], eax
mov	eax, [esp+24h]
mov	[esp+8], eax
mov	eax, [esp+20h]
mov	[esp+4], eax
mov	[esp], ebx
call	jabber_presence_create_js
mov	esi, eax
mov	eax, [esp+24h]
mov	[esp], eax
call	g_free
mov	[esp+8], edi
mov	dword ptr [esp+4], offset aTo_0	
mov	[esp], esi
call	xmlnode_set_attrib
mov	ecx, [esp+1Ch]
test	ecx, ecx
jnz	loc_61C48274
and	dword ptr [ebp+8], 0FFFFFFFBh
mov	[esp+4], esi
mov	[esp], ebx
call	jabber_send
mov	[esp], esi
call	xmlnode_free
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C48292
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword ptr [esp+8], offset aInvisible 
mov	dword ptr [esp+4], offset aType	
mov	[esp], esi
call	xmlnode_set_attrib
or	dword ptr [ebp+8], 4
jmp	short loc_61C48249
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C482E8
mov	dword ptr [esp+8], offset aPurple_blist_n 
mov	dword ptr [esp+4], offset aJabber_buddy_m 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C48329
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C48329
mov	ecx, 1
mov	edx, eax
mov	eax, esi
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_61C4818C
			
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C48380
mov	dword ptr [esp+8], offset aPurple_blist_n 
mov	dword ptr [esp+4], offset aJabber_buddy_1 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C483BE
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp], ebx
call	purple_buddy_get_account
mov	[esp], eax
call	purple_account_get_connection
mov	[esp], eax
call	purple_connection_get_protocol_data
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C483BE
xor	ecx, ecx
mov	edx, eax
mov	eax, esi
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_61C4818C
			
call	__stack_chk_fail
align 4
public jabber_buddy_find_resource
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C4840C
test	edi, edi
jz	short loc_61C48424
mov	ebx, [eax]
test	ebx, ebx
jz	short loc_61C4840C
mov	esi, [ebx]
mov	edx, [esi+4]
test	edx, edx
jz	short loc_61C48405
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], edi
call	g_str_equal
test	eax, eax
jnz	short loc_61C4840E
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C483EC
			
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4842E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [eax]
test	eax, eax
jz	short loc_61C4840C
mov	esi, [eax]
jmp	short loc_61C4840E
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+0Ch]
test	ebp, ebp
jz	short loc_61C48468
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C486FD
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, [ebx+1Ch]
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	jabber_get_resource
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_get_entries
test	eax, eax
jz	short loc_61C4848E
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_prepend_section_break
mov	edi, [esp+5Ch+var_30]
test	edi, edi
jz	loc_61C4855C
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find_resource
lea	edx, [ebx+1Ch]
mov	[esp+5Ch+var_5C], eax
mov	ecx, [esp+5Ch+var_30]
mov	eax, [ebx+10h]
call	sub_61C47CC0
mov	eax, [ebx+4]
mov	esi, [eax]
test	esi, esi
jz	loc_61C485CB
			
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], ebp
mov	eax, [ebx+8]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_userinfo
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_61C48528
nop
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	purple_imgstore_unref_by_id
mov	eax, [ebx+18h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], eax
call	g_slist_delete_link
mov	[ebx+18h], eax
test	eax, eax
jnz	short loc_61C48508
mov	esi, [ebx]
mov	[esp+5Ch+var_58], ebx
mov	eax, [esi+7Ch]
mov	[esp+5Ch+var_5C], eax
call	g_slist_remove
mov	[esi+7Ch], eax
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C486FD
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C4734C
align 4
mov	eax, [ebx+4]
mov	esi, [eax]
test	esi, esi
jz	short loc_61C485CB
mov	edi, [esi]
lea	eax, [ebx+1Ch]
mov	[esp+5Ch+var_34], eax
xchg	ax, ax
			
mov	ecx, [edi+4]
mov	eax, [ebx+10h]
mov	[esp+5Ch+var_5C], edi
mov	edx, [esp+5Ch+var_34]
call	sub_61C47CC0
mov	edi, [edi+4]
test	edi, edi
jz	short loc_61C485AD
mov	[esp+5Ch+var_58], offset aResource_0 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_prepend_pair
mov	esi, [esi+4]
test	esi, esi
jz	loc_61C484BF
mov	edi, [esi]
mov	eax, [ebx+4]
cmp	[eax], esi
jz	short loc_61C48570
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_prepend_section_break
jmp	short loc_61C48570
			
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	jabber_jid_is_domain
mov	esi, eax
mov	eax, [ebx+20h]
test	eax, eax
jle	short loc_61C48633
mov	[esp+5Ch+var_5C], eax
call	purple_str_seconds_to_string
mov	edi, eax
test	esi, esi
jz	loc_61C486AA
mov	[esp+5Ch+var_58], offset aUptime 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_dgettext
mov	edx, eax
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_prepend_pair
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], ecx
call	g_free
mov	[esp+5Ch+var_5C], edi
call	g_free
test	esi, esi
jnz	loc_61C484CC
mov	esi, [ebx+24h]
test	esi, esi
jz	loc_61C486F1
mov	edi, offset asc_61C7C117 
mov	[esp+5Ch+var_58], offset aOffline 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSSS_0	
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_58], offset aStatus 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_notify_user_info_prepend_pair
mov	[esp+5Ch+var_5C], esi
call	g_free
jmp	loc_61C484CC
mov	[esp+5Ch+var_58], offset aLoggedOff 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+5Ch+var_58], offset aSAgo 
mov	[esp+5Ch+var_5C], offset aPidgin_4 
mov	[esp+5Ch+var_38], eax
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	[esp+5Ch+var_34], edi
mov	edi, eax
mov	edx, [esp+5Ch+var_38]
jmp	loc_61C4860F
mov	esi, offset byte_61C7C0EF
mov	edi, esi
jmp	loc_61C4864B
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+88h+var_58]
mov	eax, ds:__stack_chk_guard
mov	[esp+88h+var_6C], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_61C48751
nop
mov	esi, [eax]
mov	[esp+4], esi
mov	eax, [ebx]
mov	[esp+0], eax
call	jabber_iq_remove_callback_by_id
mov	[esp+4], esi
mov	eax, [ebx+0Ch]
mov	[esp+0], eax
call	g_slist_remove
mov	[ebx+0Ch], eax
mov	[esp+0], esi
call	g_free
mov	eax, [ebx+0Ch]
test	eax, eax
jnz	short loc_61C48720
mov	esi, [ebx]
mov	[esp+4], ebx
mov	eax, [esi+7Ch]
mov	[esp+0], eax
call	g_slist_remove
mov	[esi+7Ch], eax
mov	dword ptr [ebx+14h], 0
mov	eax, ebx
call	sub_61C48434
xor	eax, eax
mov	edx, [esp+88h+var_6C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C48787
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_8]
mov	edx, [esp+2Ch+arg_C]
mov	edi, [esp+2Ch+arg_10]
mov	ebx, [esp+2Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C487DC
lea	eax, [ebx+0Ch]
call	sub_61C47C48
cmp	esi, 2
jz	short loc_61C487FC
			
mov	eax, ebx
call	sub_61C48434
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C48861
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+Radix], offset	aJbiNull 
mov	[esp+2Ch+EndPtr], offset aJabber_last_of 
mov	[esp+2Ch+Str], 0
call	g_return_if_fail_warning
jmp	short loc_61C487C5
align 4
mov	[esp+2Ch+EndPtr], offset aQuery_1 
mov	[esp+2Ch+Str], edi
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	short loc_61C487BE
mov	[esp+2Ch+EndPtr], offset aSeconds 
mov	[esp+2Ch+Str], eax
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	short loc_61C48851
mov	[esp+2Ch+var_14], 0
mov	[esp+2Ch+Radix], 0Ah 
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+EndPtr], eax 
mov	[esp+2Ch+Str], edi 
call	strtol
cmp	[esp+2Ch+var_14], edi
jz	short loc_61C48851
mov	[ebx+20h], eax
			
mov	[esp+2Ch+Str], esi
call	xmlnode_get_data
mov	[ebx+24h], eax
jmp	loc_61C487BE
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_40], eax
mov	ebx, [esp+7Ch+arg_4]
mov	esi, [esp+7Ch+arg_8]
mov	edx, [esp+7Ch+arg_C]
mov	edi, [esp+7Ch+arg_10]
mov	eax, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_50], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ebp, [esp+7Ch+var_50]
test	ebp, ebp
jz	loc_61C48F48
mov	eax, [esp+7Ch+var_50]
add	eax, 0Ch
call	sub_61C47C48
cmp	esi, 3
jz	loc_61C48E4C
mov	eax, [esp+7Ch+var_50]
mov	eax, [eax+1Ch]
mov	[esp+7Ch+var_48], eax
mov	edx, [esp+7Ch+var_40]
mov	eax, [edx+64h]
mov	[esp+7Ch+Str1],	eax
call	purple_connection_get_account
mov	[esp+7Ch+var_38], eax
test	ebx, ebx
jz	loc_61C48FE7
mov	[esp+7Ch+Str1],	ebx
call	jabber_get_bare_jid
mov	[esp+7Ch+Str], eax
mov	[esp+7Ch+Str2],	offset aVcard 
mov	[esp+7Ch+Str1],	edi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C48FC2
mov	ebp, [eax+18h]
test	ebp, ebp
jz	loc_61C48ABA
mov	[esp+7Ch+var_4C], 0
mov	ebx, ebp
jmp	short loc_61C4893B
align 10h
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_61C48A57
			
mov	esi, [ebx+8]
test	esi, esi
jnz	short loc_61C48930
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_data
mov	[esp+7Ch+SubStr], eax
mov	ebp, [ebx]
test	eax, eax
jz	loc_61C4922C
mov	edi, offset aFn	
mov	ecx, 3
mov	esi, ebp
repe cmpsb
jz	loc_61C48A08
mov	[esp+7Ch+Str2],	offset Str2 
mov	[esp+7Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jnz	loc_61C48AE7
mov	ebp, [ebx+18h]
test	ebp, ebp
jz	loc_61C48A40
mov	[esp+7Ch+var_3C], ebx
jmp	short loc_61C4899F
align 4
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	short loc_61C48A02
			
mov	edx, [ebp+8]
test	edx, edx
jnz	short loc_61C48998
mov	[esp+7Ch+Str1],	ebp
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_61C489F3
mov	eax, [ebp+0]
mov	edi, offset aFamily 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jz	loc_61C48C1C
mov	edi, offset aGiven 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jz	loc_61C48C4C
mov	edi, offset aMiddle 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jz	loc_61C48C58
			
mov	[esp+7Ch+Str1],	ebx
call	g_free
mov	ebp, [ebp+20h]
test	ebp, ebp
jnz	short loc_61C4899F
			
mov	ebx, [esp+7Ch+var_3C]
jmp	short loc_61C48A40
mov	ecx, [esp+7Ch+var_4C]
test	ecx, ecx
jz	loc_61C48FAD
mov	[esp+7Ch+Str2],	offset aFullName 
			
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	edx, [esp+7Ch+SubStr]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair_plaintext
			
mov	eax, [esp+7Ch+SubStr]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	loc_61C4893B
mov	eax, [esp+7Ch+var_4C]
test	eax, eax
jz	short loc_61C48ABA
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	eax, [esp+7Ch+Str]
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_40]
mov	eax, [edx+64h]
mov	[esp+7Ch+Str1],	eax
call	serv_got_alias
mov	eax, [esp+7Ch+Str]
mov	[esp+7Ch+Str2],	eax
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str1],	eax
call	purple_find_buddy
test	eax, eax
jz	short loc_61C48AAE
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+Str2],	offset aServernick 
mov	[esp+7Ch+Str1],	eax
call	purple_blist_node_set_string
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str1],	eax
call	g_free
			
mov	eax, [esp+7Ch+Str]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	eax, [esp+7Ch+var_50]
call	sub_61C48434
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C49249
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edi, offset aNickname_0	
mov	ecx, 9
mov	esi, ebp
repe cmpsb
jz	loc_61C48BD4
mov	edi, offset aBday 
mov	ecx, 5
mov	esi, ebp
repe cmpsb
jz	loc_61C48FA0
mov	edi, offset aAdr 
mov	esi, ebp
mov	ecx, 4
repe cmpsb
jnz	loc_61C48C64
mov	ebp, [ebx+18h]
test	ebp, ebp
jz	loc_61C48A40
mov	[esp+7Ch+var_3C], 0
mov	[esp+7Ch+var_34], ebx
jmp	short loc_61C48B43
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	short loc_61C48BB2
			
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_61C48B3C
mov	[esp+7Ch+Str1],	ebp
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_61C48B3C
mov	eax, [esp+7Ch+var_3C]
test	eax, eax
jz	loc_61C48F6C
mov	eax, [ebp+0]
mov	edi, offset aPobox 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jnz	loc_61C48E70
mov	[esp+7Ch+Str2],	offset aP_o_Box	
			
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair_plaintext
mov	[esp+7Ch+Str1],	ebx
call	g_free
mov	ebp, [ebp+20h]
test	ebp, ebp
jnz	short loc_61C48B43
mov	ebx, [esp+7Ch+var_34]
mov	eax, [esp+7Ch+var_3C]
test	eax, eax
jz	loc_61C48A40
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_section_break
jmp	loc_61C48A40
align 4
mov	eax, [esp+7Ch+SubStr]
mov	[esp+7Ch+Str2],	eax 
mov	eax, [esp+7Ch+Str]
mov	[esp+7Ch+Str1],	eax 
call	strstr
test	eax, eax
jnz	loc_61C48A40
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	eax, [esp+7Ch+SubStr]
mov	[esp+7Ch+Str1],	eax
call	g_strdup
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+Str2],	offset aNickname 
jmp	loc_61C48A1C
align 4
mov	[esp+7Ch+Str2],	offset aFamilyName 
			
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair_plaintext
jmp	loc_61C489F3
align 4
mov	[esp+7Ch+Str2],	offset aGivenName 
jmp	short loc_61C48C24
align 4
mov	[esp+7Ch+Str2],	offset aMiddleName 
jmp	short loc_61C48C24
align 4
mov	edi, offset aTel 
mov	esi, ebp
mov	ecx, 4
repe cmpsb
jz	loc_61C4905D
mov	edi, offset aEmail_1 
mov	ecx, 6
mov	esi, ebp
repe cmpsb
jz	loc_61C490BC
mov	edi, offset aOrg 
mov	esi, ebp
mov	ecx, 4
repe cmpsb
jz	loc_61C48FF6
mov	eax, [esp+7Ch+SubStr]
test	eax, eax
jz	short loc_61C48CE4
mov	edi, offset aTitle 
mov	ecx, 6
mov	esi, ebp
repe cmpsb
jz	loc_61C491A4
mov	edi, offset aRole 
mov	ecx, 5
mov	esi, ebp
repe cmpsb
jz	loc_61C491B1
mov	edi, offset aDesc 
mov	ecx, 5
mov	esi, ebp
repe cmpsb
jz	loc_61C491E2
mov	ecx, 6
mov	esi, ebp
mov	edi, offset aPhoto 
repe cmpsb
jz	short loc_61C48D08
mov	edi, offset aLogo 
mov	ecx, 5
mov	esi, ebp
repe cmpsb
jnz	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aBinval 
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C48A40
mov	[esp+7Ch+Str1],	eax
call	xmlnode_get_data
mov	[esp+7Ch+var_3C], eax
test	eax, eax
jz	loc_61C48A40
mov	esi, [ebx]
mov	ecx, 6
mov	edi, offset aPhoto 
repe cmpsb
setnbe	dl
setb	al
sub	edx, eax
movsx	edi, dl
lea	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str2],	eax
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+Str1],	eax
call	purple_base64_decode
mov	esi, eax
test	eax, eax
jz	loc_61C48E3B
mov	ebp, [esp+7Ch+var_24]
mov	[esp+7Ch+Str2],	ebp
mov	[esp+7Ch+Str1],	eax
call	g_memdup
mov	[esp+7Ch+var_74], offset aLogo_png 
mov	[esp+7Ch+Str2],	ebp
mov	[esp+7Ch+Str1],	eax
call	purple_imgstore_add_with_id
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_50]
mov	eax, [edx+18h]
mov	[esp+7Ch+Str1],	eax
call	g_slist_prepend
mov	edx, [esp+7Ch+var_50]
mov	[edx+18h], eax
mov	eax, [eax]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	offset aImgIdD 
call	g_strdup_printf
mov	ebp, eax
test	edi, edi
jnz	loc_61C49213
mov	[esp+7Ch+Str2],	offset aPhoto_0	
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair
mov	[esp+7Ch+var_74], offset aSha1_1 
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	esi
call	jabber_calculate_data_hash
mov	edi, eax
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], esi
mov	eax, [esp+7Ch+Str]
mov	[esp+7Ch+Str2],	eax
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str1],	eax
call	purple_buddy_icons_set_for_user
mov	[esp+7Ch+Str1],	edi
call	g_free
mov	[esp+7Ch+Str1],	ebp
call	g_free
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+Str1],	eax
call	g_free
jmp	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aGotErrorRespon 
mov	[esp+7Ch+Str1],	offset aJabber_3 
call	purple_debug_info
mov	eax, [esp+7Ch+var_50]
call	sub_61C48434
jmp	loc_61C48ACF
align 10h
mov	[esp+7Ch+Str2],	offset aExtadd 
mov	[esp+7Ch+Str1],	eax
call	g_str_equal
test	eax, eax
jnz	loc_61C48F38
mov	[esp+7Ch+Str2],	offset aExtadr 
mov	eax, [ebp+0]
mov	[esp+7Ch+Str1],	eax
call	g_str_equal
test	eax, eax
jnz	loc_61C48F38
mov	eax, [ebp+0]
mov	[esp+7Ch+var_30], eax
mov	edi, offset aStreet 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jz	loc_61C4918A
mov	edi, offset aLocality 
mov	ecx, 9
mov	esi, [esp+7Ch+var_30]
repe cmpsb
jz	loc_61C49197
mov	edi, offset aRegion 
mov	esi, [esp+7Ch+var_30]
mov	ecx, 7
repe cmpsb
jz	loc_61C491BE
mov	edi, offset aPcode 
mov	esi, [esp+7Ch+var_30]
mov	ecx, 6
repe cmpsb
jz	loc_61C49206
mov	edi, offset aCtry 
mov	ecx, 5
mov	esi, [esp+7Ch+var_30]
repe cmpsb
jz	short loc_61C48F28
mov	edi, offset aCountry 
mov	ecx, 8
mov	esi, [esp+7Ch+var_30]
repe cmpsb
jnz	loc_61C48BA3
mov	[esp+7Ch+Str2],	offset aCountry_0 
jmp	loc_61C48B83
align 4
			
mov	[esp+7Ch+Str2],	offset aExtendedAddres 
jmp	loc_61C48B83
align 4
mov	[esp+7Ch+var_74], offset aJbiNull 
mov	[esp+7Ch+Str2],	offset aJabber_vcard_p 
mov	[esp+7Ch+Str1],	0
call	g_return_if_fail_warning
jmp	loc_61C48ACF
align 4
mov	[esp+7Ch+Str2],	offset aAddress	
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_section_header
mov	[esp+7Ch+var_3C], 1
jmp	loc_61C48B64
align 10h
mov	[esp+7Ch+Str2],	offset aBirthday 
jmp	loc_61C48A1C
mov	eax, [esp+7Ch+SubStr]
mov	[esp+7Ch+Str1],	eax
call	g_strdup
mov	[esp+7Ch+var_4C], eax
jmp	loc_61C48A14
mov	[esp+7Ch+var_74], offset aVcardTemp 
mov	[esp+7Ch+Str2],	offset aQuery_1	
mov	[esp+7Ch+Str1],	edi
call	xmlnode_get_child_with_namespace
test	eax, eax
jnz	loc_61C48917
jmp	loc_61C48ABA
mov	[esp+7Ch+Str1],	eax
call	purple_account_get_username
mov	ebx, eax
jmp	loc_61C488F3
mov	ebp, [ebx+18h]
test	ebp, ebp
jz	loc_61C48A40
mov	[esp+7Ch+var_3C], ebx
jmp	short loc_61C49013
align 4
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	loc_61C48A02
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_61C49008
mov	[esp+7Ch+Str1],	ebp
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_61C49053
mov	eax, [ebp+0]
mov	edi, offset aOrgname 
mov	esi, eax
mov	ecx, 8
repe cmpsb
jz	loc_61C49153
mov	edi, offset aOrgunit 
mov	esi, eax
mov	ecx, 8
repe cmpsb
jz	loc_61C49180
			
mov	[esp+7Ch+Str1],	ebx
call	g_free
jmp	short loc_61C49008
mov	[esp+7Ch+Str2],	offset aNumber 
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C491CB
mov	[esp+7Ch+Str1],	eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aTelephone 
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair_plaintext
mov	[esp+7Ch+Str1],	esi
call	g_free
jmp	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aUserid 
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C491EF
mov	[esp+7Ch+Str1],	eax
call	xmlnode_get_data
mov	ebp, eax
test	eax, eax
jz	loc_61C48A40
mov	[esp+7Ch+Str2],	0FFFFFFFFh
mov	[esp+7Ch+Str1],	ebp
call	g_markup_escape_text
mov	edi, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	offset aAHrefMailtoSSA 
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+Str2],	offset aEmail_0	
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair
mov	[esp+7Ch+Str1],	esi
call	g_free
mov	[esp+7Ch+Str1],	edi
call	g_free
mov	[esp+7Ch+Str1],	ebp
call	g_free
jmp	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aOrganizationNa 
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+Str2],	eax
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str1],	edx
call	purple_notify_user_info_add_pair_plaintext
jmp	loc_61C49053
mov	[esp+7Ch+Str2],	offset aOrganizationUn 
jmp	short loc_61C4915B
mov	[esp+7Ch+Str2],	offset aStreetAddress 
jmp	loc_61C48B83
mov	[esp+7Ch+Str2],	offset aLocality_0 
jmp	loc_61C48B83
mov	[esp+7Ch+Str2],	offset aJobTitle 
jmp	loc_61C48A1C
mov	[esp+7Ch+Str2],	offset aRole_0 
jmp	loc_61C48A1C
mov	[esp+7Ch+Str2],	offset aRegion_0 
jmp	loc_61C48B83
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jnz	loc_61C49087
jmp	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aDescription 
jmp	loc_61C48A1C
mov	[esp+7Ch+Str1],	ebx
call	xmlnode_get_data
mov	ebp, eax
test	eax, eax
jnz	loc_61C490E6
jmp	loc_61C48A40
mov	[esp+7Ch+Str2],	offset aPostalCode 
jmp	loc_61C48B83
mov	[esp+7Ch+Str2],	offset aLogo_0 
mov	[esp+7Ch+Str1],	offset aPidgin_4 
call	libintl_dgettext
jmp	loc_61C48DD9
mov	[esp+7Ch+Str2],	offset Str2 
mov	[esp+7Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jz	loc_61C48984
jmp	loc_61C48B0F
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], eax
mov	ebx, [esp+4Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C492EC
lea	eax, [ebx+0Ch]
call	sub_61C47C48
test	edi, edi
jz	short loc_61C492C1
mov	[esp+4Ch+Src], edi
call	jabber_get_resource
mov	ebp, eax
test	eax, eax
jz	short loc_61C492DC
mov	[esp+4Ch+Format], eax
mov	eax, [ebx+4]
mov	[esp+4Ch+Src], eax
call	jabber_buddy_find_resource
mov	edi, eax
mov	[esp+4Ch+Src], ebp
call	g_free
test	edi, edi
jz	short loc_61C492BA
cmp	esi, 2
jz	short loc_61C4930C
			
mov	eax, ebx
call	sub_61C48434
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C493F7
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+Src], 0
call	g_free
jmp	short loc_61C492BA
align 4
mov	[esp+4Ch+var_44], offset aJbiNull 
mov	[esp+4Ch+Format], offset aJabber_time_pa 
mov	[esp+4Ch+Src], 0
call	g_return_if_fail_warning
jmp	short loc_61C492C1
align 4
mov	[esp+4Ch+Format], offset aTime 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C492BA
mov	[esp+4Ch+Format], offset aTzo 
mov	[esp+4Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C492BA
mov	[esp+4Ch+Src], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C492BA
mov	dl, [eax]
cmp	dl, 5Ah
jz	loc_61C493E4
cmp	dl, 2Bh
jz	short loc_61C49384
cmp	dl, 2Dh
jz	short loc_61C49384
			
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Format], offset aIgnoringMalfor 
mov	[esp+4Ch+Src], offset aJabber_3	
call	purple_debug_info
			
mov	[esp+4Ch+Src], esi
call	g_free
jmp	loc_61C492BA
			
mov	eax, esi
inc	eax
jz	short loc_61C4935F
lea	ecx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_40], ecx
lea	ecx, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+Format], offset Format	
mov	[esp+4Ch+Src], eax 
mov	[esp+4Ch+var_34], dl
call	sscanf
cmp	eax, 2
mov	dl, [esp+4Ch+var_34]
jnz	short loc_61C4935F
mov	eax, [esp+4Ch+var_24]
lea	eax, [eax+eax*2]
lea	ebp, [eax+eax*4]
mov	eax, [esp+4Ch+var_28]
lea	eax, [eax+eax*2]
lea	ecx, [eax+eax*4]
mov	eax, ecx
shl	eax, 4
sub	eax, ecx
shl	eax, 4
lea	eax, [eax+ebp*4]
cmp	dl, 2Bh
jz	short loc_61C493DE
neg	eax
mov	[edi+30h], eax
jmp	short loc_61C49377
align 4
cmp	byte ptr [eax+1], 0
jnz	loc_61C4935F
mov	dword ptr [edi+30h], 0
jmp	short loc_61C49377
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ecx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], ecx
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	ebx, [esp+4Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C49474
lea	eax, [ebx+0Ch]
call	sub_61C47C48
test	esi, esi
jz	short loc_61C4945C
mov	[esp+4Ch+Str], esi
call	jabber_get_resource
mov	edx, eax
test	eax, eax
jz	short loc_61C49455
cmp	edi, 2
jz	short loc_61C49494
			
mov	[esp+4Ch+Str], edx
call	g_free
mov	eax, ebx
call	sub_61C48434
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C49614
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Radix], offset	aJbiNull 
mov	[esp+4Ch+EndPtr], offset aJabber_last_pa 
mov	[esp+4Ch+Str], 0
call	g_return_if_fail_warning
jmp	short loc_61C4945C
align 4
mov	[esp+4Ch+EndPtr], offset aQuery_1 
mov	[esp+4Ch+Str], ebp
mov	[esp+4Ch+var_3C], eax
call	xmlnode_get_child
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C4944D
mov	[esp+4Ch+EndPtr], offset aSeconds 
mov	[esp+4Ch+Str], eax
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C4944D
mov	[esp+4Ch+var_24], 0
mov	[esp+4Ch+Radix], 0Ah 
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+EndPtr], eax 
mov	[esp+4Ch+Str], edi 
call	strtol
mov	[esp+4Ch+var_30], eax
cmp	[esp+4Ch+var_24], edi
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C49515
mov	[esp+4Ch+EndPtr], edx
mov	eax, [ebx+10h]
mov	[esp+4Ch+Str], eax
call	g_hash_table_lookup
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C49515
mov	ecx, [esp+4Ch+var_30]
mov	[eax], ecx
			
mov	[esp+4Ch+Radix], 0
mov	[esp+4Ch+EndPtr], esi
mov	ecx, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], ecx
mov	[esp+4Ch+var_3C], edx
call	jabber_buddy_find
mov	ebp, eax
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jz	loc_61C4944D
mov	[esp+4Ch+Str], esi
call	jabber_get_resource
mov	edi, eax
mov	[esp+4Ch+Str], esi
call	jabber_get_bare_jid
mov	esi, eax
test	edi, edi
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C495AF
test	eax, eax
jz	short loc_61C495AF
mov	[esp+4Ch+EndPtr], edi
mov	[esp+4Ch+Str], ebp
call	jabber_buddy_find_resource
mov	ecx, eax
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C495AF
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_61C495AF
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jnz	short loc_61C495CC
mov	dword ptr [ecx+14h], 0
mov	[esp+4Ch+EndPtr], 0
mov	[esp+4Ch+Str], ebp
mov	[esp+4Ch+var_3C], edx
mov	[esp+4Ch+var_38], ecx
call	jabber_buddy_find_resource
mov	ecx, [esp+4Ch+var_38]
cmp	eax, ecx
mov	edx, [esp+4Ch+var_3C]
jz	short loc_61C495ED
			
mov	[esp+4Ch+Str], edi
mov	[esp+4Ch+var_3C], edx
call	g_free
mov	[esp+4Ch+Str], esi
call	g_free
mov	edx, [esp+4Ch+var_3C]
jmp	loc_61C4944D
mov	[esp+4Ch+Str], 0 
mov	[esp+4Ch+var_38], ecx
call	time
sub	eax, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_38]
mov	[ecx+14h], eax
mov	edx, [esp+4Ch+var_3C]
jmp	short loc_61C4958B
mov	eax, [ecx+14h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+Radix], eax
mov	[esp+4Ch+EndPtr], esi
mov	ecx, [esp+4Ch+var_34]
mov	eax, [ecx+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+Str], eax
call	purple_prpl_got_user_idle
mov	edx, [esp+4Ch+var_3C]
jmp	short loc_61C495AF
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	edx, [esp+3Ch+arg_C]
mov	ebp, [esp+3Ch+arg_10]
mov	ebx, [esp+3Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C49690
lea	eax, [ebx+0Ch]
call	sub_61C47C48
test	esi, esi
jz	loc_61C4975C
mov	[esp+3Ch+var_3C], esi
call	jabber_get_resource
mov	esi, eax
test	eax, eax
jz	short loc_61C49671
cmp	edi, 2
jz	short loc_61C496C4
			
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C49770
mov	eax, ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C48434
align 10h
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C49770
mov	[esp+3Ch+arg_8], offset	aJbiNull 
mov	[esp+3Ch+arg_4], offset	aJabber_version	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+3Ch+var_38], offset aQuery_1 
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jz	short loc_61C49669
mov	[esp+3Ch+var_38], esi
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_find_resource
mov	ebp, eax
test	eax, eax
jz	loc_61C49669
mov	[esp+3Ch+var_38], offset aName_0 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C49712
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	[ebp+28h], eax
mov	[esp+3Ch+var_38], offset aVersion 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C49731
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	[ebp+24h], eax
mov	[esp+3Ch+var_38], offset aOs 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C49669
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	[ebp+2Ch], eax
jmp	loc_61C49669
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C49770
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public jabber_buddy_track_resource
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	jabber_buddy_find_resource
mov	edi, eax
test	eax, eax
jz	short loc_61C4981C
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_list_remove
mov	[ebx], eax
mov	[edi+8], ebp
mov	edx, [esp+4Ch+var_34]
mov	[edi+0Ch], edx
mov	eax, [edi+10h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[edi+10h], eax
mov	[esp+4Ch+var_44], offset sub_61C4774C
mov	[esp+4Ch+var_48], edi
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_list_insert_sorted
mov	[ebx], eax
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C49847
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], 44h
call	g_malloc0
mov	edi, eax
mov	[eax], ebx
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[edi+4], eax
mov	dword ptr [edi+18h], 0
mov	dword ptr [edi+30h], 0FFF85EE0h
jmp	short loc_61C497C8
call	__stack_chk_fail
public jabber_buddy_remove_resource
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C49888
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C49898
add	esp, 2Ch
jmp	sub_61C47630
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C49898
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public jabber_set_info
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], edi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	eax, [eax+0D0h]
test	eax, eax
jz	loc_61C49AAC
mov	eax, [ebx+0D4h]
test	eax, eax
jnz	loc_61C49AC0
mov	eax, [ebx+74h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebx+74h], 0
test	esi, esi
jz	loc_61C49A98
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], esi
call	xmlnode_from_str
mov	esi, eax
test	eax, eax
jz	loc_61C49A98
mov	eax, [eax]
test	eax, eax
jz	loc_61C49A90
mov	[esp+4Ch+var_44], 5
mov	[esp+4Ch+var_48], offset aVcard	
mov	[esp+4Ch+var_4C], eax
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_61C49A90
mov	eax, [edi+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_icons_find_account_icon
mov	edi, eax
test	eax, eax
jz	loc_61C49AD7
nop
mov	[esp+4Ch+var_4C], edi
call	purple_imgstore_get_data
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_4C], edi
call	purple_imgstore_get_size
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aPhoto	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C49986
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
mov	[esp+4Ch+var_48], offset aPhoto	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aType_0 
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset aImagePng 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_48], offset aBinval 
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	xmlnode_new_child
mov	edx, eax
mov	[esp+4Ch+var_48], ebp
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], edx
call	purple_base64_encode
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_44], offset aSha1_1 
mov	[esp+4Ch+var_48], ebp
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	jabber_calculate_data_hash
mov	[ebx+74h], eax
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	xmlnode_insert_data
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], edi
call	purple_imgstore_unref
test	esi, esi
jz	short loc_61C49AAC
			
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new
mov	edi, eax
mov	[esp+4Ch+var_48], esi
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_send
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C49AFC
mov	[esp+4Ch+arg_4], 0
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_presence_send
			
mov	[esp+4Ch+var_4C], esi
call	xmlnode_free
			
mov	eax, [edi+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_icons_find_account_icon
mov	edi, eax
test	eax, eax
jnz	short loc_61C49B01
lea	esi, [esi+0]
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C49AFC
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+0D4h], 0
jmp	loc_61C498E0
mov	[esp+4Ch+var_48], offset aPhoto	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C49A3F
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
jmp	loc_61C49A3F
			
call	__stack_chk_fail
mov	[esp+4Ch+var_4C], offset aVcard	
call	xmlnode_new
mov	esi, eax
mov	eax, offset aProdid 
mov	ebp, offset vcard_tag_attr_list
lea	esi, [esi+0]
mov	edx, [ebp+4]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
add	ebp, 8
mov	eax, [ebp+0]
test	eax, eax
jnz	short loc_61C49B1C
jmp	loc_61C49954
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
cmp	[esp+3Ch+arg_8], 3
jz	loc_61C49D00
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+3Ch+var_38], offset aVcard	
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_61C49C88
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], esi
call	xmlnode_to_str
mov	ebp, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	purple_account_set_user_info
mov	[esp+3Ch+var_3C], ebp
call	g_free
mov	dword ptr [ebx+0D0h], 1
mov	[esp+3Ch+var_38], offset aPhoto	
mov	[esp+3Ch+var_3C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C49CB4
mov	[esp+3Ch+var_38], offset aBinval 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C49CB4
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C49CB4
lea	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	purple_base64_decode
mov	ebp, eax
mov	[esp+3Ch+var_3C], esi
call	g_free
test	ebp, ebp
jz	loc_61C49CB4
mov	[esp+3Ch+var_34], offset aSha1_1 
mov	eax, [esp+3Ch+var_24]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	jabber_calculate_data_hash
mov	esi, eax
mov	[esp+3Ch+var_3C], ebp
call	g_free
mov	eax, [ebx+70h]
test	eax, eax
jnz	short loc_61C49CBD
lea	esi, [esi+0]
			
test	esi, esi
jz	short loc_61C49C65
mov	[ebx+74h], esi
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	jabber_presence_send
xor	esi, esi
			
mov	[esp+3Ch+var_3C], esi
call	g_free
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C49D68
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aVcardTemp 
mov	[esp+3Ch+var_38], offset aQuery_1 
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_child_with_namespace
mov	esi, eax
test	eax, eax
jnz	loc_61C49B8C
mov	dword ptr [ebx+0D0h], 1
			
xor	esi, esi
mov	eax, [ebx+70h]
test	eax, eax
jz	short loc_61C49C4C
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jnz	loc_61C49C4C
mov	eax, [ebx+90h]
test	eax, eax
jz	short loc_61C49D4C
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset sub_61C49D70
mov	[esp+3Ch+var_3C], 0Ah
call	purple_timeout_add_seconds
mov	[ebx+0D4h], eax
jmp	loc_61C49C65
align 10h
mov	[esp+3Ch+var_38], offset aServerReturned 
mov	[esp+3Ch+var_3C], offset aJabber_3 
call	purple_debug_warning
mov	[esp+3Ch+var_38], offset aError_9 
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C49C6D
mov	[esp+3Ch+var_38], offset aItemNotFound_5 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
test	eax, eax
jnz	loc_61C49B65
jmp	loc_61C49C6D
align 4
mov	[esp+3Ch+var_3C], edi
call	purple_account_get_user_info
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	jabber_set_info
jmp	loc_61C49C65
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	dword ptr [ebx+0D4h], 0
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_user_info
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	jabber_set_info
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C49DC2
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_set_buddy_icon
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_account
mov	edi, eax
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_avatar_set
mov	[esp+2Ch+var_2C], edi
call	purple_account_get_user_info
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C49E21
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_set_info
call	__stack_chk_fail
align 4
public jabber_setup_set_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+8Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+8Ch+var_34], eax
call	purple_request_fields_new
mov	[esp+8Ch+var_30], eax
mov	[esp+8Ch+var_8C], 0
call	purple_request_field_group_new
mov	[esp+8Ch+var_38], eax
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields_add_group
mov	edx, [esp+8Ch+var_34]
mov	eax, [edx+0Ch]
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_user_info
test	eax, eax
jz	loc_61C4A098
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	[esp+8Ch+var_8C], eax
call	xmlnode_from_str
mov	[esp+8Ch+var_3C], eax
mov	eax, offset aFullName 
mov	ebx, offset vcard_template_data
jmp	short loc_61C49EEF
call	libintl_dgettext
mov	[esp+8Ch+var_80], 1
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+4]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_string_new
mov	esi, eax
mov	[esp+8Ch+var_8C], ebp
call	g_free
mov	[esp+8Ch+var_88], esi
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
add	ebx, 0Ch
mov	eax, [ebx]
test	eax, eax
jz	loc_61C49F84
cmp	byte ptr [eax],	0
jz	short loc_61C49EE2
mov	eax, [esp+8Ch+var_3C]
test	eax, eax
jz	loc_61C49F80
mov	eax, [ebx+8]
test	eax, eax
jz	loc_61C4A07C
mov	edx, [ebx+4]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aSS_1 
call	g_strdup_printf
mov	edi, eax
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_child
mov	esi, eax
mov	[esp+8Ch+var_8C], edi
call	g_free
test	esi, esi
jz	short loc_61C49F80
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_data
mov	ebp, eax
mov	esi, [ebx+4]
mov	edi, offset aDesc 
mov	ecx, 5
repe cmpsb
mov	eax, [ebx]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aPidgin_4 
jz	loc_61C49EA8
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
jmp	loc_61C49EB5
			
xor	ebp, ebp
jmp	short loc_61C49F4C
mov	eax, [esp+8Ch+var_3C]
test	eax, eax
jz	short loc_61C49F98
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_free
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], edx
call	purple_connection_get_account
mov	[esp+8Ch+var_88], offset aCancel 
mov	[esp+8Ch+var_8C], offset aPidgin_4 
mov	[esp+8Ch+var_40], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+8Ch+var_88], offset aSave 
mov	[esp+8Ch+var_8C], offset aPidgin_4 
call	libintl_dgettext
mov	edi, eax
mov	[esp+8Ch+var_88], offset aAllItemsBelowA 
mov	[esp+8Ch+var_8C], offset aPidgin_4 
call	libintl_dgettext
mov	esi, eax
mov	[esp+8Ch+var_88], offset aEditXmppVcard	
mov	[esp+8Ch+var_8C], offset aPidgin_4 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aEditXmppVcard	
mov	[esp+8Ch+var_8C], offset aPidgin_4 
call	libintl_dgettext
mov	ecx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_5C], ecx
mov	[esp+8Ch+var_60], 0
mov	[esp+8Ch+var_64], 0
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_68], edx
mov	[esp+8Ch+var_6C], 0
mov	[esp+8Ch+var_70], ebp
mov	[esp+8Ch+var_74], offset sub_61C474F0
mov	[esp+8Ch+var_78], edi
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ecx
call	purple_request_fields
mov	ecx, [esp+8Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C4A0A5
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [ebx+4]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_child
mov	esi, eax
jmp	loc_61C49F3E
align 4
mov	[esp+8Ch+var_3C], 0
jmp	loc_61C49E9C
call	__stack_chk_fail
align 4
public jabber_vcard_fetch_mine
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aVcard	
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], offset aVcardTemp 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C49B40
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4A125
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_buddy_remove_all_pending_buddy_info_requests
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [edi+7Ch]
test	ebx, ebx
jz	short loc_61C4A175
mov	esi, [ebx]
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_slist_free
mov	eax, esi
call	sub_61C4734C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4A148
mov	eax, [edi+7Ch]
mov	[esp+2Ch+var_2C], eax
call	g_slist_free
mov	dword ptr [edi+7Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4A188
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public jabber_blist_node_menu
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Str], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	loc_61C4A337
mov	[esp+3Ch+Str], ebx
call	purple_buddy_get_account
mov	[esp+3Ch+Str], eax
call	purple_account_get_connection
mov	[esp+3Ch+Str], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+3Ch+Str], ebx
call	purple_buddy_get_name
mov	ebp, eax
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], edi
call	jabber_buddy_find
mov	ebx, eax
test	eax, eax
jz	loc_61C4A337
cmp	word ptr [edi+10h], 900h
jz	loc_61C4A33B
xor	esi, esi
mov	eax, [ebx+0Ch]
test	al, 8
jz	short loc_61C4A258
cmp	ebx, [edi+60h]
jz	short loc_61C4A258
mov	[esp+3Ch+Val], offset aCancelPresence 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset sub_61C471AC
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
mov	eax, [ebx+0Ch]
			
test	al, 4
jz	loc_61C4A3E0
cmp	ebx, [edi+60h]
jz	short loc_61C4A2A7
mov	[esp+3Ch+Val], offset aUnsubscribe_0 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C47B28
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
mov	edx, [edi+90h]
test	edx, edx
jnz	loc_61C4A399
mov	[esp+3Ch+Val], 40h 
mov	[esp+3Ch+Str], ebp 
call	strchr
test	eax, eax
jz	loc_61C4A44A
mov	edi, [ebx]
test	edi, edi
jz	short loc_61C4A31D
nop
mov	eax, [edi]
mov	ebx, [eax+3Ch]
test	ebx, ebx
jz	short loc_61C4A316
lea	esi, [esi+0]
mov	edx, [ebx]
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+Val], offset jabber_adhoc_execute_action
mov	eax, [edx+8]
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4A2E0
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_61C4A2D4
			
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4A4D3
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
xor	esi, esi
jmp	short loc_61C4A31D
cmp	eax, [edi+60h]
jz	loc_61C4A205
test	byte ptr [eax+8], 4
jz	loc_61C4A411
mov	[esp+3Ch+Val], offset aUnHideFrom 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C48330
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], 0
call	g_list_append
mov	esi, eax
jmp	loc_61C4A207
mov	[esp+3Ch+Val], offset aInitiate_chat 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset google_buddy_node_chat
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
jmp	loc_61C4A2B5
mov	[esp+3Ch+Val], offset aReRequestAutho 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C47BB8
jmp	loc_61C4A291
mov	[esp+3Ch+Val], offset aTemporarilyHid 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C48298
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
jmp	loc_61C4A382
mov	[esp+3Ch+Val], offset aLogIn 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C47A30
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
mov	[esp+3Ch+Val], offset aLogOut 
mov	[esp+3Ch+Str], offset aPidgin_4	
call	libintl_dgettext
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset loc_61C47970
mov	[esp+3Ch+Str], eax
call	purple_menu_action_new
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], esi
call	g_list_append
mov	esi, eax
jmp	loc_61C4A2CD
call	__stack_chk_fail
public jabber_user_search_begin
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	edi, [eax+0Ch]
mov	[esp+7Ch+var_7C], edi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+7Ch+var_74], offset byte_61C7C0EF
mov	[esp+7Ch+var_78], offset aUser_directory 
mov	eax, [eax+64h]
mov	eax, [eax+0Ch]
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_string
mov	esi, eax
cmp	byte ptr [eax],	0
jnz	short loc_61C4A52C
mov	eax, [ebx+38h]
test	eax, eax
jz	short loc_61C4A52C
mov	esi, [eax]
			
mov	[esp+7Ch+var_78], offset aCancel 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aSearchDirector 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aSelectAUserDir 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aEnterAUserDire 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aEnterAUserDire 
mov	[esp+7Ch+var_7C], offset aPidgin_4 
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
mov	[esp+7Ch+var_4C], 0
mov	[esp+7Ch+var_50], 0
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_54], ecx
mov	[esp+7Ch+var_58], offset jabber_user_search
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_5C], edx
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+var_70], ebp
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_request_input
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4A622
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jabber_resource_know_capabilities
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [eax+34h]
xor	eax, eax
test	ecx, ecx
setnz	al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4A654
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_resource_has_capability
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edi+34h]
test	eax, eax
jz	loc_61C4A718
mov	[esp+2Ch+var_24], offset strcmp
mov	[esp+2Ch+var_28], esi
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_list_find_custom
test	eax, eax
jz	short loc_61C4A6B8
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4A73B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	ebx, [edi+38h]
test	ebx, ebx
jz	short loc_61C4A734
mov	eax, [edi+34h]
mov	edi, [eax+0Ch]
test	edi, edi
jnz	short loc_61C4A6EB
jmp	short loc_61C4A734
align 4
mov	[esp+2Ch+var_24], offset strcmp
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_list_find_custom
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C4A70C
test	eax, eax
jnz	short loc_61C4A69B
			
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	eax, [edi+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_61C4A6CC
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4A6EB
xor	eax, eax
lea	esi, [esi+0]
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_61C4A6A0
align 4
mov	[esp+2Ch+var_28], offset aUnableToFindCa 
mov	[esp+2Ch+var_2C], offset aJabber_3 
call	purple_debug_info
xor	eax, eax
jmp	loc_61C4A6A0
align 4
			
xor	eax, eax
jmp	loc_61C4A6A0
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_34], eax
mov	ebp, edx
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	ecx, ecx
jz	short loc_61C4A78C
mov	edx, [ebx+4]
test	edx, edx
jz	short loc_61C4A78C
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aSS_1 
call	g_strdup_printf
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_30], eax
jmp	short loc_61C4A798
align 4
			
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_4C], 4
call	g_malloc0
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+10h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
mov	esi, [ebx+28h]
test	esi, esi
jz	loc_61C4A95C
mov	eax, [ebx+24h]
mov	edi, offset aTrillian 
mov	ecx, 9
repe cmpsb
jz	loc_61C4A884
			
mov	[esp+4Ch+var_44], offset aJabberIqLast 
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new_query
mov	esi, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_0 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset sub_61C493FC
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_set_callback
mov	eax, [esi+4]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_slist_prepend
mov	[ebp+0Ch], eax
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_send
			
cmp	dword ptr [ebx+30h], 0FFF85EE0h
jz	short loc_61C4A8AC
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4A9E1
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	edi, offset a3_1_0_121 
mov	ecx, 0Ah
mov	esi, eax
repe cmpsb
jz	short loc_61C4A856
mov	edi, offset a3_1_7_0 
mov	ecx, 8
mov	esi, eax
repe cmpsb
jnz	loc_61C4A7E4
jmp	short loc_61C4A856
align 4
mov	esi, [ebx+34h]
test	esi, esi
jz	short loc_61C4A8C7
mov	[esp+4Ch+var_48], offset aUrnXmppTime 
mov	[esp+4Ch+var_4C], ebx
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C4A85F
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_0 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aTime 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aUrnXmppTime 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset sub_61C49250
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_set_callback
mov	eax, [ebx+4]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_slist_prepend
mov	[ebp+0Ch], eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_send
jmp	loc_61C4A85F
align 4
mov	[esp+4Ch+var_44], offset aJabberIqVersio 
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new_query
mov	esi, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_0 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset sub_61C4961C
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_set_callback
mov	eax, [esi+4]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_slist_prepend
mov	[ebp+0Ch], eax
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_send
mov	esi, [ebx+28h]
mov	eax, [ebx+24h]
test	esi, esi
jz	loc_61C4A7E4
jmp	loc_61C4A7D2
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+Val], edx
mov	[esp+4Ch+Str], edi
call	jabber_buddy_find
test	eax, eax
jz	loc_61C4AB6B
mov	[esp+4Ch+Val], 2Fh 
mov	[esp+4Ch+Str], ebp 
mov	[esp+4Ch+var_34], eax
call	strchr
mov	[esp+4Ch+Str], 28h
mov	[esp+4Ch+var_30], eax
call	g_malloc0
mov	esi, eax
mov	[esp+4Ch+Str], ebp
call	g_strdup
mov	[esi+8], eax
mov	[esi], edi
mov	edx, [esp+4Ch+var_34]
mov	[esi+4], edx
mov	[esp+4Ch+var_40], offset sub_61C46470
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+Val], offset sub_61C47314
mov	[esp+4Ch+Str], offset sub_61C473B8
call	g_hash_table_new_full
mov	[esi+10h], eax
call	purple_notify_user_info_new
mov	[esi+1Ch], eax
mov	[esp+4Ch+Val], 1
mov	[esp+4Ch+Str], edi
call	jabber_iq_new
mov	ebx, eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Val], offset aTo_0 
mov	eax, [eax+8]
mov	[esp+4Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+Val], offset aVcard 
mov	eax, [ebx+8]
mov	[esp+4Ch+Str], eax
call	xmlnode_new_child
mov	[esp+4Ch+Val], offset aVcardTemp 
mov	[esp+4Ch+Str], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Val], offset sub_61C48868
mov	[esp+4Ch+Str], ebx
call	jabber_iq_set_callback
mov	eax, [ebx+4]
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	[esp+4Ch+Val], eax
mov	eax, [esi+0Ch]
mov	[esp+4Ch+Str], eax
call	g_slist_prepend
mov	[esi+0Ch], eax
mov	[esp+4Ch+Str], ebx
call	jabber_iq_send
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
mov	edx, [esp+4Ch+var_34]
jnz	short loc_61C4AB84
mov	ebx, [edx]
test	ebx, ebx
jz	loc_61C4ABC6
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+4Ch+Val], eax
mov	[esp+4Ch+Str], ebp
mov	ecx, 1
mov	edx, esi
mov	eax, edi
call	sub_61C4A740
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4AB20
			
mov	[esp+4Ch+Val], esi
mov	eax, [edi+7Ch]
mov	[esp+4Ch+Str], eax
call	g_slist_prepend
mov	[edi+7Ch], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Val], offset loc_61C48704
mov	[esp+4Ch+Str], 1Eh
call	purple_timeout_add_seconds
mov	[esi+14h], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4AC35
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
inc	ecx
mov	[esp+4Ch+Val], ecx
mov	[esp+4Ch+Str], edx
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C4ABA9
mov	[esp+4Ch+Val], eax
mov	[esp+4Ch+Str], ebp
xor	ecx, ecx
mov	edx, esi
mov	eax, edi
call	sub_61C4A740
jmp	short loc_61C4AB3E
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Val], offset aJabber_buddy_g 
mov	[esp+4Ch+Str], offset aJabber_3	
call	purple_debug_warning
jmp	loc_61C4AB3E
mov	[esp+4Ch+var_44], offset aJabberIqLast 
mov	[esp+4Ch+Val], 1
mov	[esp+4Ch+Str], edi
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Val], offset aTo_0 
mov	eax, [eax+8]
mov	[esp+4Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Val], offset sub_61C4878C
mov	[esp+4Ch+Str], ebx
call	jabber_iq_set_callback
mov	eax, [ebx+4]
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	[esp+4Ch+Val], eax
mov	eax, [esi+0Ch]
mov	[esp+4Ch+Str], eax
call	g_slist_prepend
mov	[esi+0Ch], eax
mov	[esp+4Ch+Str], ebx
call	jabber_iq_send
jmp	loc_61C4AB3E
call	__stack_chk_fail
align 4
public jabber_buddy_get_info
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+2Ch+var_2C], esi
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C4ACD0
mov	eax, [eax]
test	eax, eax
jz	short loc_61C4ACB0
mov	edx, [ebx+4]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	jabber_chat_find
test	eax, eax
jz	short loc_61C4ACB0
mov	edx, esi
mov	eax, edi
call	sub_61C4A9E8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4ACE3
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_id_free
align 10h
			
mov	[esp+2Ch+var_2C], esi
call	jabber_get_bare_jid
mov	esi, eax
mov	edx, eax
mov	eax, edi
call	sub_61C4A9E8
mov	[esp+2Ch+var_2C], esi
call	g_free
jmp	short loc_61C4AC93
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4ACE3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_buddy_has_capability
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C4AD30
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4AD57
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	jabber_resource_has_capability
mov	[esp+2Ch+var_28], offset aUnableToFind_0 
mov	[esp+2Ch+var_2C], offset aJabber_3 
call	purple_debug_info
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4AD57
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
public jabber_resource_get_identity_category_type
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+34h]
test	eax, eax
jz	short loc_61C4AD9F
mov	ebx, [eax]
test	ebx, ebx
jz	short loc_61C4AD9F
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+2Ch+Str2],	edi 
mov	eax, [esi]
mov	[esp+2Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_61C4ADB4
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4AD84
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4ADB9
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [esi+4]
jmp	short loc_61C4ADA1
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx]
mov	eax, [esi]
mov	edi, [eax+64h]
mov	[esp+4Ch+var_4C], edi
call	purple_connection_get_account
mov	ebp, eax
mov	dword ptr [ebx+24h], 1
mov	eax, [esi+38h]
test	eax, eax
jz	short loc_61C4AE50
call	purple_ssl_is_supported
test	eax, eax
jz	loc_61C4AEA8
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], offset sub_61C4AFB8
mov	[esp+4Ch+var_40], offset sub_61C4C1A0
movzx	eax, word ptr [esi+30h]
mov	[esp+4Ch+var_44], eax
mov	eax, [esi+28h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_ssl_connect
mov	[ebx+4], eax
test	eax, eax
jz	loc_61C4AED8
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4AEE2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], offset loc_61C4C0E4
movzx	eax, word ptr [esi+30h]
mov	[esp+4Ch+var_40], eax
mov	eax, [esi+28h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	purple_proxy_connect
test	eax, eax
jnz	short loc_61C4AE36
mov	[esp+4Ch+var_48], offset aUnableToConnec 
mov	[esp+4Ch+var_4C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], edi
call	purple_connection_error_reason
jmp	short loc_61C4AE36
align 4
mov	[esp+4Ch+var_48], offset aSslSupportUnav 
mov	[esp+4Ch+var_4C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], edi
call	purple_connection_error_reason
jmp	loc_61C4AE36
align 4
mov	[esp+4Ch+var_48], offset aUnableToEstabl 
jmp	short loc_61C4AEB0
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 34h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	dword ptr [eax+18h], 0FFFFFFFFh
mov	dword ptr [eax+24h], 0
mov	[esp+2Ch+var_2C], 0
call	purple_circ_buffer_new
mov	[ebx+8], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4AF3B
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+4]
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
test	ebx, ebx
jz	short loc_61C4AFA4
mov	[esp+2Ch+var_2C], ebx
call	purple_ssl_write
mov	ebx, eax
call	purple_debug_is_verbose
test	eax, eax
jz	short loc_61C4AF90
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aBoshPWroteDByt 
mov	[esp+2Ch+var_2C], offset aJabber_4 
call	purple_debug_misc
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4AFB3
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [esi+18h]
mov	[esp+2Ch+var_2C], eax
call	wpurple_write
mov	ebx, eax
jmp	short loc_61C4AF6B
call	__stack_chk_fail
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	dword ptr [eax+4], 0
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C4AFF9
mov	[esp+1Ch+arg_4], edx
mov	eax, [eax]
mov	eax, [eax]
mov	eax, [eax+64h]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_connection_ssl_error
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_61C4B088
xor	ebx, ebx
mov	edx, [esi+ebx*4+4]
test	edx, edx
jz	short loc_61C4B068
mov	eax, [edx+28h]
mov	[esp+3Ch+var_24], eax
mov	eax, [edx+24h]
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], edx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aBoshPConnectio 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_misc
inc	ebx
cmp	ebx, 2
jnz	short loc_61C4B018
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4B0A6
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aBoshPConnect_0 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_misc
jmp	short loc_61C4B04E
align 4
mov	[esp+3Ch+var_34], offset aConnNull 
mov	[esp+3Ch+var_38], offset aDebug_dump_htt 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_61C4B054
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	esi, edx
mov	edi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	jabber_stream_restart_inactivity_timer
mov	eax, [ebx]
mov	edx, [esi]
mov	[esp+4Ch+var_38], edx
mov	edx, [edi]
mov	[esp+4Ch+var_3C], edx
mov	edx, ds:dword_61C96024
mov	[esp+4Ch+var_40], edx
mov	edx, [eax+28h]
mov	[esp+4Ch+var_44], edx
mov	eax, [eax+2Ch]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aPostSHttp1_1Ho 
call	g_strdup_printf
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	edi, [ecx-1]
inc	dword ptr [ebx+28h]
mov	eax, [ebx]
inc	dword ptr [eax+4Ch]
call	purple_debug_is_unsafe
test	eax, eax
jz	short loc_61C4B132
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_61C4B270
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_61C4B24C
			
mov	ecx, [ebx+20h]
test	ecx, ecx
jnz	loc_61C4B1D0
mov	ecx, edi
mov	edx, esi
mov	eax, ebx
call	sub_61C4AF40
mov	ebp, eax
test	eax, eax
js	loc_61C4B1E0
cmp	edi, ebp
jbe	short loc_61C4B1B6
test	ebp, ebp
js	loc_61C4B294
mov	edx, [ebx+20h]
test	edx, edx
jnz	short loc_61C4B19F
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C4B2A8
mov	eax, [eax+1Ch]
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], offset loc_61C4B2B8
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[ebx+20h], eax
			
sub	edi, ebp
mov	[esp+4Ch+var_44], edi
add	ebp, esi
mov	[esp+4Ch+var_48], ebp
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	purple_circ_buffer_append
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4B2B0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	_errno
mov	dword ptr [eax], 0Bh
mov	ebp, 0FFFFFFFFh
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_61C4B15F
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+4Ch+var_48], offset aLostConnection 
mov	[esp+4Ch+var_4C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx]
mov	eax, [eax]
mov	eax, [eax+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
mov	[esp+4Ch+var_4C], esi
call	g_free
jmp	loc_61C4B1B6
align 4
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBoshPSendingRe 
mov	[esp+4Ch+var_4C], offset aJabber_4 
call	purple_debug_misc
jmp	loc_61C4B13F
align 10h
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBoshPSendingS	
mov	[esp+4Ch+var_4C], offset aJabber_4 
call	purple_debug_misc
jmp	loc_61C4B13F
align 4
xor	ebp, ebp
mov	edx, [ebx+20h]
test	edx, edx
jnz	loc_61C4B19F
jmp	loc_61C4B172
align 4
mov	eax, [ebx+18h]
jmp	loc_61C4B180
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+8]
mov	[esp], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	short loc_61C4B318
mov	edx, [ebx+8]
mov	edx, [edx+14h]
mov	ecx, eax
mov	eax, ebx
call	sub_61C4AF40
cmp	eax, 0
jl	short loc_61C4B33C
jz	short loc_61C4B346
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4B3AE
mov	[esp+34h], eax
mov	eax, [ebx+8]
mov	[esp+30h], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_circ_buffer_mark_read
align 4
mov	eax, [ebx+20h]
mov	[esp], eax
call	purple_input_remove
mov	dword ptr [ebx+20h], 0
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4B3AE
add	esp, 24h
pop	ebx
pop	esi
retn
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C4B32A
call	_errno
mov	eax, [eax]
mov	[esp], eax
call	wpurple_strerror
mov	esi, eax
mov	dword ptr [esp+4], offset aLostConnection 
mov	dword ptr [esp], offset	aPidgin_5 
call	libintl_dgettext
mov	[esp+4], esi
mov	[esp], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	eax, [ebx]
mov	eax, [eax]
mov	eax, [eax+64h]
mov	[esp], eax
call	purple_connection_error_reason
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4B3AE
mov	[esp+30h], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aType_1 
mov	[esp+3Ch+var_3C], ecx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C4B3EE
mov	edi, offset aTerminate 
mov	ecx, 0Ah
mov	esi, eax
repe cmpsb
jz	short loc_61C4B404
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4B43F
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	dword ptr [ebp+0], 0
mov	[esp+3Ch+var_38], offset aTheBoshConnect 
mov	[esp+3Ch+var_3C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 10h
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_error_reason
mov	eax, 1
jmp	short loc_61C4B3F0
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edi, [esi]
test	ebx, ebx
jz	loc_61C4B62C
lea	edx, [esi+3Ch]
mov	ecx, ebx
mov	eax, esi
call	sub_61C4B3B4
test	eax, eax
jz	short loc_61C4B490
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4B6C1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Val], offset aSid 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+4Ch+Val], offset aVer 
mov	[esp+4Ch+Str], ebx
mov	[esp+4Ch+var_38], eax
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+4Ch+Val], offset aInactivity 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+Val], offset aRequests	
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+4Ch+var_30], eax
mov	edx, [esp+4Ch+var_38]
test	edx, edx
jz	loc_61C4B66C
mov	[esp+4Ch+Str], edx
call	g_strdup
mov	[esi+18h], eax
test	ebp, ebp
jz	loc_61C4B650
mov	[esp+4Ch+Val], 2Eh 
mov	[esp+4Ch+Str], ebp 
call	strchr
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+Val], offset aBoshConnection 
mov	[esp+4Ch+Str], offset aJabber_4	
mov	[esp+4Ch+var_38], eax
call	purple_debug_info
mov	[esp+4Ch+Str], ebp 
call	atoi
mov	ebp, eax
mov	edx, [esp+4Ch+var_38]
test	edx, edx
jz	loc_61C4B5FC
inc	edx
mov	[esp+4Ch+Str], edx 
call	atoi
dec	ebp
jnz	loc_61C4B5FC
cmp	eax, 5
jle	loc_61C4B5FC
mov	ecx, [esp+4Ch+var_34]
test	ecx, ecx
jz	short loc_61C4B592
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], eax 
call	atoi
mov	[edi+118h], eax
cmp	eax, 5
jbe	loc_61C4B678
sub	eax, 5
mov	[edi+118h], eax
mov	edx, [edi+11Ch]
test	edx, edx
jz	loc_61C4B69C
			
mov	ebp, [esp+4Ch+var_30]
test	ebp, ebp
jz	short loc_61C4B5A9
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Str], eax 
call	atoi
mov	[esi+48h], eax
mov	[esp+4Ch+Val], 4
mov	[esp+4Ch+Str], edi
call	jabber_stream_set_state
mov	[esp+4Ch+Val], offset aFeatures	
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_child
mov	dword ptr [esi+3Ch], 2
mov	dword ptr [esi+14h], offset loc_61C4B6C8
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4B6C1
mov	[esp+4Ch+arg_4], eax
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_stream_features_parse
align 4
			
mov	[esp+4Ch+Val], offset aUnsupportedVer 
mov	[esp+4Ch+Str], offset aPidgin_5	
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], 0
mov	eax, [edi+64h]
mov	[esp+4Ch+Str], eax
call	purple_connection_error_reason
jmp	loc_61C4B478
mov	[esp+4Ch+var_44], offset aNodeNull 
mov	[esp+4Ch+Val], offset aBoot_response_ 
mov	[esp+4Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_61C4B478
align 10h
mov	[esp+4Ch+Val], offset aMissingVersion 
mov	[esp+4Ch+Str], offset aJabber_4	
call	purple_debug_info
jmp	loc_61C4B558
align 4
mov	[esp+4Ch+Val], offset aNoSessionIdGiv 
jmp	short loc_61C4B604
align 4
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], offset aIgnoringBogusl 
mov	[esp+4Ch+Str], offset aJabber_4	
call	purple_debug_warning
jmp	loc_61C4B592
align 4
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], offset aStartingBoshIn 
mov	[esp+4Ch+Str], offset aJabber_4	
call	purple_debug_misc
mov	[esp+4Ch+Str], edi
call	jabber_stream_restart_inactivity_timer
jmp	loc_61C4B592
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+78h+Val]
mov	ebx, [esp+78h+var_44]
mov	edx, ds:__stack_chk_guard
mov	[esp+78h+var_5C], edx
xor	edx, edx
mov	esi, [eax]
test	ebx, ebx
jz	loc_61C4B7D8
lea	edx, [eax+3Ch]
mov	ecx, ebx
call	sub_61C4B3B4
test	eax, eax
jz	short loc_61C4B714
			
mov	eax, [esp+78h+var_5C]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4B7F9
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [ebx+18h]
mov	[esp+78h+var_60], eax
lea	edi, [esp+78h+var_60]
test	eax, eax
jz	short loc_61C4B6FA
mov	ebx, [eax+20h]
mov	edx, [eax+8]
test	edx, edx
jz	short loc_61C4B744
lea	esi, [esi+0]
			
mov	[esp+78h+var_60], ebx
mov	eax, ebx
test	ebx, ebx
jz	short loc_61C4B6FA
mov	ebx, [eax+20h]
mov	edx, [eax+8]
test	edx, edx
jnz	short loc_61C4B730
mov	[esp+78h+var_78], eax
call	xmlnode_get_namespace
test	eax, eax
jz	short loc_61C4B764
mov	[esp+78h+var_74], offset aHttpJabber_o_1 
mov	[esp+78h+var_78], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4B792
mov	[esp+78h+var_74], offset aIq 
mov	eax, [esp+78h+var_60]
mov	eax, [eax]
mov	[esp+78h+var_78], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4B7A0
			
mov	[esp+78h+var_74], offset aJabberClient 
mov	eax, [esp+78h+var_60]
mov	[esp+78h+var_78], eax
call	xmlnode_set_namespace
			
mov	[esp+78h+var_74], edi
mov	[esp+78h+var_78], esi
call	jabber_process_packet
jmp	short loc_61C4B730
mov	[esp+78h+var_74], offset aMessage 
mov	eax, [esp+78h+var_60]
mov	eax, [eax]
mov	[esp+78h+var_78], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C4B77E
mov	[esp+78h+var_74], offset aPresence 
mov	eax, [esp+78h+var_60]
mov	eax, [eax]
mov	[esp+78h+var_78], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C4B77E
jmp	short loc_61C4B792
align 4
mov	[esp+78h+var_70], offset aNodeNull 
mov	[esp+78h+var_74], offset aJabber_bosh_co 
mov	[esp+78h+var_78], 0
call	g_return_if_fail_warning
jmp	loc_61C4B6FA
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 38h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+34h]
test	eax, eax
jnz	short loc_61C4B82C
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4B89F
add	esp, 38h
pop	ebx
retn
align 4
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBoshDisablingP 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_info
mov	dword ptr [ebx+34h], 0
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_61C4B880
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset aJabber_bosh_di 
mov	[esp+3Ch+var_34], 1E5h
mov	[esp+3Ch+var_38], offset aBosh_c 
mov	[esp+3Ch+var_3C], 0
call	g_warn_message
jmp	short loc_61C4B818
mov	eax, ebx
call	sub_61C4AEE8
mov	[ebx+8], eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4B89F
add	esp, 38h
pop	ebx
jmp	sub_61C4ADC0
			
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	dword ptr [ebx+24h], 0
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C4B98C
mov	[esp+3Ch+var_3C], eax
call	purple_ssl_close
mov	dword ptr [ebx+4], 0
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	loc_61C4B9B4
mov	eax, [ebx+20h]
test	eax, eax
jnz	loc_61C4B9CE
			
mov	eax, [ebx+28h]
xor	edx, edx
test	eax, eax
setnle	dl
jle	short loc_61C4B907
mov	ecx, [ebx+0Ch]
mov	esi, [ecx+4]
test	esi, esi
jz	loc_61C4B9F8
mov	eax, [ebx]
mov	ecx, [eax+34h]
test	ecx, ecx
jnz	loc_61C4B9E4
test	edx, edx
jz	short loc_61C4B973
mov	edx, [ebx]
mov	al, [edx+40h]
inc	eax
mov	[edx+40h], al
cmp	al, 3
jz	short loc_61C4B944
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4BA39
mov	eax, ebx
add	esp, 34h
pop	ebx
pop	esi
jmp	sub_61C4ADC0
align 4
mov	[esp+3Ch+var_38], offset aUnableToEsta_0 
mov	[esp+3Ch+var_3C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx]
mov	eax, [eax]
mov	eax, [eax+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_error_reason
mov	esi, [esp+3Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	loc_61C4BA39
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+18h]
test	eax, eax
js	loc_61C4B8D7
mov	[esp+3Ch+var_3C], eax
call	wpurple_close
mov	dword ptr [ebx+18h], 0FFFFFFFFh
mov	eax, [ebx+1Ch]
test	eax, eax
jz	loc_61C4B8E2
lea	esi, [esi+0]
mov	[esp+3Ch+var_3C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx+20h]
test	eax, eax
jz	loc_61C4B8ED
mov	[esp+3Ch+var_3C], eax
call	purple_input_remove
mov	dword ptr [ebx+20h], 0
jmp	loc_61C4B8ED
align 4
mov	[esp+3Ch+var_20], edx
call	sub_61C4B800
mov	edx, [esp+3Ch+var_20]
jmp	loc_61C4B914
align 4
mov	ecx, [ebx]
mov	ecx, [ecx+4Ch]
mov	esi, ecx
sub	esi, eax
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], offset aBoshAdjustingB 
mov	[esp+3Ch+var_3C], offset aJabber_4 
mov	[esp+3Ch+var_20], edx
call	purple_debug_error
mov	eax, [ebx]
mov	ecx, [ebx+28h]
sub	[eax+4Ch], ecx
mov	dword ptr [ebx+28h], 0
mov	edx, [esp+3Ch+var_20]
jmp	loc_61C4B909
			
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, eax
mov	esi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
lea	eax, [edx-1]
cmp	eax, 1
jbe	loc_61C4BAF8
test	ecx, ecx
jz	short loc_61C4BA87
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], esi
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_circ_buffer_append
call	purple_debug_is_verbose
test	eax, eax
jnz	short loc_61C4BAB0
mov	eax, [ebx+50h]
test	eax, eax
jz	short loc_61C4BAD9
			
mov	edi, [esp+6Ch+var_20]
xor	edi, ds:__stack_chk_guard
jnz	loc_61C4BE92
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aBoshPHasUBytes 
mov	[esp+6Ch+var_6C], offset aJabber_4 
call	purple_debug_misc
mov	eax, [ebx+50h]
test	eax, eax
jnz	short loc_61C4BA97
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset sub_61C4BE98
mov	[esp+6Ch+var_6C], 1
call	purple_timeout_add_seconds
mov	[ebx+50h], eax
jmp	short loc_61C4BA97
align 4
mov	[esp+6Ch+var_3C], edx
call	purple_debug_is_verbose
test	eax, eax
mov	edx, [esp+6Ch+var_3C]
jnz	loc_61C4BDA4
mov	ebp, [ebx+34h]
test	ebp, ebp
mov	eax, [ebx+4]
mov	[esp+6Ch+var_38], eax
jnz	loc_61C4BD14
test	eax, eax
jz	short loc_61C4BB2D
cmp	dword ptr [eax+24h], 2
jz	loc_61C4BD24
			
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C4BB3E
cmp	dword ptr [eax+24h], 2
jz	loc_61C4BD34
			
mov	ebp, [esp+6Ch+var_38]
test	ebp, ebp
jz	short loc_61C4BB50
mov	ecx, [esp+6Ch+var_38]
cmp	dword ptr [ecx+24h], 1
jz	short loc_61C4BBB4
test	eax, eax
jz	short loc_61C4BB5A
cmp	dword ptr [eax+24h], 1
jz	short loc_61C4BBB4
mov	edi, [esp+6Ch+var_38]
test	edi, edi
jz	loc_61C4BE3D
mov	edi, [esp+6Ch+var_38]
mov	ecx, [edi+24h]
test	ecx, ecx
jz	loc_61C4BD69
mov	edi, 1
test	eax, eax
jz	loc_61C4BE47
mov	ebp, [eax+24h]
test	ebp, ebp
jz	loc_61C4BE84
cmp	[esp+6Ch+var_38], 0
jz	loc_61C4BE45
mov	[esp+6Ch+var_68], offset aCouldNotFindAH 
mov	[esp+6Ch+var_6C], offset aJabber_4 
mov	[esp+6Ch+var_3C], edx
call	purple_debug_warning
mov	edx, [esp+6Ch+var_3C]
			
cmp	edx, 2
jz	loc_61C4BA97
mov	eax, [ebx+4]
mov	[esp+6Ch+var_38], eax
cmp	dword ptr [eax+24h], 2
jnz	loc_61C4BD48
			
mov	eax, [ebx+50h]
test	eax, eax
jnz	loc_61C4BDDC
mov	[esp+6Ch+var_6C], 0
mov	[esp+6Ch+var_3C], edx
call	g_string_new
mov	[esp+6Ch+var_40], eax
mov	eax, [ebx]
mov	eax, [eax+5Ch]
mov	eax, [eax+4]
mov	ecx, [ebx+18h]
mov	edi, [ebx+20h]
mov	ebp, [ebx+24h]
mov	[esp+6Ch+var_34], edi
mov	[esp+6Ch+var_30], ebp
add	[esp+6Ch+var_34], 1
adc	[esp+6Ch+var_30], 0
mov	edi, [esp+6Ch+var_34]
mov	ebp, [esp+6Ch+var_30]
mov	[ebx+20h], edi
mov	[ebx+24h], ebp
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], ecx
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_60], ebp
mov	[esp+6Ch+var_68], offset aBodyRidI64uSid 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_string_printf
mov	eax, [ebx]
mov	edi, [eax+88h]
test	edi, edi
mov	edx, [esp+6Ch+var_3C]
jnz	loc_61C4BDB4
dec	edx
jz	loc_61C4BE20
mov	eax, [esp+6Ch+var_40]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+6Ch+var_40]
cmp	eax, [ecx+8]
jnb	loc_61C4BDF8
mov	edi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
jmp	short loc_61C4BCAF
align 4
mov	[esp+6Ch+var_64], ebp
mov	eax, [ebx+0Ch]
mov	eax, [eax+14h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_string_append_len
mov	edi, eax
mov	[esp+6Ch+var_68], ebp
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_circ_buffer_mark_read
			
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_circ_buffer_get_max_read
mov	ebp, eax
test	eax, eax
jnz	short loc_61C4BC88
mov	[esp+6Ch+var_40], edi
test	esi, esi
jz	short loc_61C4BCD8
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], edi
call	g_string_append
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_68], offset aBody 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_string_append
mov	edx, eax
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C4BE92
lea	ecx, [edx+4]
mov	eax, [esp+6Ch+var_38]
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C4B0AC
align 4
cmp	dword ptr [eax+24h], 2
jnz	loc_61C4BBB4
jmp	loc_61C4BBCE
align 4
mov	edi, [eax+28h]
test	edi, edi
jnz	loc_61C4BB2D
jmp	loc_61C4BBCE
mov	ecx, [eax+28h]
test	ecx, ecx
jnz	loc_61C4BB3E
mov	[esp+6Ch+var_38], eax
jmp	loc_61C4BBCE
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+var_68], offset aUnableToFindAR 
mov	[esp+6Ch+var_6C], offset aJabber_4 
call	purple_debug_warning
jmp	loc_61C4BA97
xor	edi, edi
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aBoshReconnecti 
mov	[esp+6Ch+var_6C], offset aJabber_4 
mov	[esp+6Ch+var_3C], edx
call	purple_debug_info
mov	eax, [ebx+edi*4+4]
call	sub_61C4ADC0
mov	edx, [esp+6Ch+var_3C]
jmp	loc_61C4BBB4
align 4
mov	eax, ebx
call	sub_61C4B000
mov	edx, [esp+6Ch+var_3C]
jmp	loc_61C4BB0D
mov	[esp+6Ch+var_68], offset aXmppRestartTru 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_string_append
mov	edx, eax
mov	eax, [ebx]
mov	dword ptr [eax+88h], 0
jmp	loc_61C4BCEE
align 4
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_3C], edx
call	purple_timeout_remove
mov	dword ptr [ebx+50h], 0
mov	edx, [esp+6Ch+var_3C]
jmp	loc_61C4BBD9
mov	[esp+6Ch+var_64], 3Eh
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_string_insert_c
mov	edi, [esp+6Ch+var_40]
jmp	loc_61C4BCAF
align 10h
mov	[esp+6Ch+var_68], offset aTypeTerminate	
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_string_append
mov	[esp+6Ch+var_40], eax
jmp	loc_61C4BC5D
test	eax, eax
jnz	loc_61C4BB82
xor	edi, edi
mov	eax, ebx
mov	[esp+6Ch+var_3C], edx
call	sub_61C4AEE8
mov	[ebx+edi*4+4], eax
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aBoshCreatingAn 
mov	[esp+6Ch+var_6C], offset aJabber_4 
call	purple_debug_info
mov	eax, [ebx+edi*4+4]
call	sub_61C4ADC0
mov	edx, [esp+6Ch+var_3C]
jmp	loc_61C4BBB4
mov	[esp+6Ch+var_38], eax
mov	edi, 1
jmp	loc_61C4BD6B
			
call	__stack_chk_fail
align 4
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	dword ptr [eax+50h], 0
xor	ecx, ecx
mov	dl, 2
call	sub_61C4BA40
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4BECD
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBoshHttpconnPR 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_misc
mov	dword ptr [ebx+24h], 2
mov	eax, [ebx+28h]
test	eax, eax
jnz	loc_61C4C070
mov	dword ptr [ebx+28h], 0
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_61C4BF36
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	g_string_free
mov	dword ptr [ebx+0Ch], 0
mov	dword ptr [ebx+30h], 0
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+14h], 0
mov	dword ptr [ebx+10h], 0
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_61C4C034
mov	esi, [ebx]
mov	eax, [esi]
mov	edi, [eax+88h]
test	edi, edi
jnz	loc_61C4C04D
cmp	dword ptr [esi+3Ch], 2
jz	loc_61C4C094
mov	[esp+3Ch+var_3C], 0
call	g_string_new
mov	edi, eax
mov	ecx, [esi+20h]
mov	ebx, [esi+24h]
add	ecx, 1
adc	ebx, 0
mov	[esi+20h], ecx
mov	[esi+24h], ebx
mov	[esp+3Ch+var_30], ecx
mov	[esp+3Ch+var_2C], ebx
mov	eax, [esi]
mov	eax, [eax+5Ch]
mov	eax, [eax+4]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aBodyContentTex 
mov	[esp+3Ch+var_3C], edi
call	g_string_printf
mov	ecx, [edi]
mov	edx, [edi+4]
mov	eax, [esi+38h]
test	eax, eax
jnz	short loc_61C4C02C
mov	eax, offset dword_61C7CF28
mov	[esp+3Ch+var_2C], ecx
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aSendboshBootSU 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_misc
mov	dword ptr [esi+14h], offset sub_61C4B444
lea	ecx, [edi+4]
mov	eax, [esi+4]
mov	edx, edi
call	sub_61C4B0AC
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], edi
call	g_string_free
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4C0DD
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, offset aSsl 
jmp	short loc_61C4BFD0
align 4
mov	eax, [ebx]
call	sub_61C4B000
mov	esi, [ebx]
mov	eax, [esi]
mov	edi, [eax+88h]
test	edi, edi
jz	loc_61C4BF71
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4C0DD
xor	ecx, ecx
xor	edx, edx
mov	eax, esi
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C4BA40
align 10h
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBoshHttpconnPH 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_error
jmp	loc_61C4BF11
align 4
mov	[esp+3Ch+var_38], offset aBoshSessionAlr 
mov	[esp+3Ch+var_3C], offset aJabber_4 
call	purple_debug_info
mov	eax, [ebx]
mov	ecx, [eax+4Ch]
test	ecx, ecx
jz	short loc_61C4C0BF
mov	edx, [eax+0Ch]
mov	edx, [edx+0Ch]
test	edx, edx
jz	loc_61C4C014
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4C0DD
xor	ecx, ecx
mov	edx, 2
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C4BA40
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, [esp+34h]
mov	edi, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edx, [ebx]
mov	edx, [edx]
mov	esi, [edx+64h]
test	eax, eax
js	short loc_61C4C148
mov	[ebx+18h], eax
mov	[esp+0Ch], ebx
mov	dword ptr [esp+8], offset sub_61C4C6BC
mov	dword ptr [esp+4], 1
mov	[esp], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4C199
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C4BED4
mov	dword ptr [esp+4], offset aUnableToEsta_1 
mov	dword ptr [esp], offset	aPidgin_5 
call	libintl_dgettext
mov	[esp+4], edi
mov	[esp], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	[esp], esi
call	purple_connection_error_reason
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4C199
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
			
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_61C4C6E8
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_input_add
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4C1E2
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_61C4BED4
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 44Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+45Ch+var_20], eax
xor	eax, eax
lea	edi, [esp+45Ch+var_421]
mov	ecx, [ebx+0Ch]
test	ecx, ecx
jz	loc_61C4C665
lea	esi, [esi+0]
			
mov	eax, [ebx+4]
mov	[esp+45Ch+var_454], 401h
mov	[esp+45Ch+SubStr], edi
test	eax, eax
jz	loc_61C4C434
mov	[esp+45Ch+Str],	eax
call	purple_ssl_read
mov	esi, eax
cmp	esi, 0
jg	loc_61C4C304
jz	short loc_61C4C288
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C4C2A7
call	_errno
mov	eax, [eax]
mov	[esp+45Ch+Str],	eax
call	wpurple_strerror
mov	edi, eax
call	_errno
mov	[esp+45Ch+var_448], edi
mov	eax, [eax]
mov	[esp+45Ch+var_44C], eax
mov	[esp+45Ch+var_450], esi
mov	[esp+45Ch+var_454], ebx
mov	[esp+45Ch+SubStr], offset aBoshPReadDErrn 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_info
jmp	short loc_61C4C2A0
mov	[esp+45Ch+var_454], ebx
mov	[esp+45Ch+SubStr], offset aBoshServerClos 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_info
mov	eax, ebx
call	sub_61C4B8A4
mov	eax, [ebx+0Ch]
mov	edx, [eax+4]
test	edx, edx
jz	short loc_61C4C2E4
mov	ebp, [ebx+10h]
add	ebp, [eax]
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_61C4C414
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_61C4C31C
mov	eax, [ebx+10h]
mov	ecx, [ebx+0Ch]
mov	edi, [ecx+4]
cmp	edi, eax
jbe	short loc_61C4C2E4
mov	esi, [ebx+14h]
sub	edi, eax
cmp	edi, esi
jnb	loc_61C4C448
			
mov	eax, [esp+45Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4C6B6
add	esp, 44Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+45Ch+var_454], esi
mov	[esp+45Ch+SubStr], edi
mov	eax, [ebx+0Ch]
mov	[esp+45Ch+Str],	eax
call	g_string_append_len
jmp	loc_61C4C214
mov	[esp+45Ch+SubStr], offset aContentLength 
mov	[esp+45Ch+Str],	ebp
call	purple_strcasestr
mov	esi, eax
mov	[esp+45Ch+SubStr], offset aConnection 
mov	[esp+45Ch+Str],	ebp
call	purple_strcasestr
mov	edi, eax
mov	[esp+45Ch+SubStr], offset SubStr 
mov	[esp+45Ch+Str],	ebp 
call	strstr
mov	ebp, eax
test	esi, esi
jz	short loc_61C4C390
test	eax, eax
jz	short loc_61C4C362
cmp	esi, eax
jnb	loc_61C4C68E
mov	[esp+45Ch+SubStr], offset asc_61C7D108 
mov	[esp+45Ch+Str],	esi 
call	strstr
test	eax, eax
jz	loc_61C4C2E4
lea	edx, [esi+11h]
mov	[esp+45Ch+Str],	edx 
call	atoi
test	eax, eax
jz	loc_61C4C644
mov	[ebx+14h], eax
test	edi, edi
jz	short loc_61C4C3F1
test	ebp, ebp
jz	short loc_61C4C39C
cmp	edi, ebp
jnb	short loc_61C4C3F9
mov	[esp+45Ch+SubStr], offset asc_61C7D108 
mov	[esp+45Ch+Str],	edi 
call	strstr
test	eax, eax
jz	loc_61C4C2E4
lea	ecx, [edi+0Dh]
mov	dl, [edi+0Dh]
test	dl, dl
jz	short loc_61C4C3D1
xchg	ax, ax
cmp	dl, 20h
jz	short loc_61C4C3CA
cmp	dl, 9
jnz	short loc_61C4C3D1
inc	ecx
mov	dl, [ecx]
test	dl, dl
jnz	short loc_61C4C3C0
			
mov	[esp+45Ch+var_454], 5
mov	[esp+45Ch+SubStr], offset aClose 
mov	[esp+45Ch+Str],	ecx
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_61C4C620
			
test	ebp, ebp
jz	loc_61C4C636
			
mov	dword ptr [ebx+2Ch], 1
mov	ecx, [ebx+0Ch]
mov	eax, 4
sub	eax, [ecx]
add	eax, ebp
mov	[ebx+10h], eax
jmp	loc_61C4C2D0
mov	[esp+45Ch+var_454], ebp
mov	[esp+45Ch+SubStr], offset aBoshServerSent 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_misc
jmp	loc_61C4C2C3
align 4
mov	eax, [ebx+18h]
mov	[esp+45Ch+Str],	eax
call	wpurple_read
mov	esi, eax
jmp	loc_61C4C235
align 4
dec	dword ptr [ebx+28h]
mov	edi, [ebx]
dec	dword ptr [edi+4Ch]
mov	ecx, [ecx]
add	ecx, eax
cmp	byte ptr [edi+40h], 0
jnz	loc_61C4C548
mov	ebp, [edi+14h]
test	ebp, ebp
jz	loc_61C4C557
mov	[esp+45Ch+SubStr], esi
mov	[esp+45Ch+Str],	ecx
mov	[esp+45Ch+var_430], ecx
call	xmlnode_from_str
mov	ebp, eax
mov	[esp+45Ch+SubStr], esi
mov	ecx, [esp+45Ch+var_430]
mov	[esp+45Ch+Str],	ecx
call	g_strndup
mov	edx, [edi+38h]
test	edx, edx
jnz	loc_61C4C5BC
mov	ecx, offset dword_61C7CF28
mov	[esp+45Ch+var_44C], eax
mov	[esp+45Ch+var_450], esi
mov	[esp+45Ch+var_454], ecx
mov	[esp+45Ch+SubStr], offset aRecvboshSDS 
mov	[esp+45Ch+Str],	offset aJabber_4 
mov	[esp+45Ch+var_430], eax
call	purple_debug_info
mov	eax, [esp+45Ch+var_430]
mov	[esp+45Ch+Str],	eax
call	g_free
test	ebp, ebp
jz	loc_61C4C604
mov	[esp+45Ch+SubStr], ebp
mov	[esp+45Ch+Str],	edi
call	dword ptr [edi+14h]
mov	[esp+45Ch+Str],	ebp
call	xmlnode_free
mov	edx, [ebx+0Ch]
mov	eax, [ebx+10h]
add	eax, [ebx+14h]
cmp	[edx+4], eax
ja	loc_61C4C588
mov	edi, [ebx+30h]
test	edi, edi
jz	short loc_61C4C508
cmp	dword ptr [ebx+24h], 2
jz	loc_61C4C679
			
mov	eax, [ebx]
cmp	dword ptr [eax+3Ch], 2
jz	loc_61C4C5C8
			
mov	[esp+45Ch+SubStr], 1
mov	eax, [ebx+0Ch]
mov	[esp+45Ch+Str],	eax
call	g_string_free
mov	dword ptr [ebx+0Ch], 0
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+14h], 0
mov	dword ptr [ebx+10h], 0
jmp	loc_61C4C2E4
mov	byte ptr [edi+40h], 0
mov	ebp, [edi+14h]
test	ebp, ebp
jnz	loc_61C4C469
mov	[esp+45Ch+var_454], offset aConnReceive_cb 
mov	[esp+45Ch+SubStr], offset aHttp_received_ 
mov	[esp+45Ch+Str],	0
call	g_return_if_fail_warning
mov	edx, [ebx+0Ch]
mov	eax, [ebx+10h]
add	eax, [ebx+14h]
cmp	[edx+4], eax
jbe	loc_61C4C4F7
lea	esi, [esi+0]
mov	[esp+45Ch+var_454], eax
mov	[esp+45Ch+SubStr], 0
mov	[esp+45Ch+Str],	edx
call	g_string_erase
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+14h], 0
mov	dword ptr [ebx+10h], 0
mov	eax, [ebx+0Ch]
xor	ebp, ebp
jmp	loc_61C4C2B4
align 4
mov	ecx, offset aSsl 
jmp	loc_61C4C49B
align 4
mov	esi, [eax+4Ch]
test	esi, esi
jz	short loc_61C4C5DD
mov	eax, [eax+0Ch]
mov	ecx, [eax+0Ch]
test	ecx, ecx
jz	loc_61C4C514
mov	[esp+45Ch+SubStr], offset aBoshSendingAnE 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_misc
xor	ecx, ecx
xor	edx, edx
mov	eax, [ebx]
call	sub_61C4BA40
jmp	loc_61C4C514
align 4
mov	[esp+45Ch+SubStr], offset aBoshReceivedIn 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_warning
jmp	loc_61C4C4E5
align 10h
mov	dword ptr [ebx+30h], 1
mov	eax, [ebx]
call	sub_61C4B800
test	ebp, ebp
jnz	loc_61C4C3F9
mov	eax, [ebx+0Ch]
mov	eax, [eax+4]
mov	[ebx+10h], eax
jmp	loc_61C4C2E4
mov	[esp+45Ch+SubStr], offset aFoundMangledCo 
mov	[esp+45Ch+Str],	offset aJabber_4 
mov	[esp+45Ch+var_430], eax
call	purple_debug_warning
mov	eax, [esp+45Ch+var_430]
jmp	loc_61C4C38D
mov	[esp+45Ch+Str],	0
call	g_string_new
mov	[ebx+0Ch], eax
jmp	loc_61C4C214
call	purple_debug_is_verbose
test	eax, eax
jnz	short loc_61C4C69C
mov	eax, ebx
call	sub_61C4B8A4
jmp	loc_61C4C508
test	edi, edi
jnz	loc_61C4C398
jmp	loc_61C4C3F1
align 4
mov	[esp+45Ch+var_454], ebx
mov	[esp+45Ch+SubStr], offset aBoshPServerSen 
mov	[esp+45Ch+Str],	offset aJabber_4 
call	purple_debug_misc
jmp	short loc_61C4C682
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4C6E3
add	esp, 1Ch
jmp	loc_61C4C1E8
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4C70F
add	esp, 1Ch
jmp	loc_61C4C1E8
call	__stack_chk_fail
public jabber_bosh_init
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_core_get_ui_info
mov	ebx, eax
test	eax, eax
jz	short loc_61C4C790
mov	[esp+2Ch+var_28], offset aName_1 
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+2Ch+var_28], offset aVersion_0 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_lookup
mov	edx, eax
test	esi, esi
jz	short loc_61C4C790
test	eax, eax
jz	short loc_61C4C7A4
mov	eax, offset asc_61C7D23D 
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], offset aSSSLibpurple2_ 
call	g_strdup_printf
mov	ds:dword_61C96024, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4C7AD
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	[esp+2Ch+var_2C], offset aLibpurple2_10_ 
call	g_strdup
mov	ds:dword_61C96024, eax
jmp	short loc_61C4C77D
align 4
mov	edx, offset dword_61C7CF28
mov	eax, edx
jmp	short loc_61C4C760
call	__stack_chk_fail
align 4
public jabber_bosh_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C96024
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_61C96024, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4C7E9
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_bosh_connection_init
			
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+4Ch+var_18]
mov	[esp+4Ch+var_38], eax
lea	eax, [esp+4Ch+var_1C]
mov	[esp+4Ch+var_3C], eax
lea	eax, [esp+4Ch+var_20]
mov	[esp+4Ch+var_40], eax
lea	eax, [esp+4Ch+var_14]
mov	[esp+4Ch+var_44], eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_url_parse
test	eax, eax
jz	loc_61C4C97C
mov	[esp+4Ch+var_4C], 58h
call	g_malloc0
mov	ebx, eax
mov	eax, [esp+4Ch+var_24]
mov	[ebx+28h], eax
mov	eax, [esp+4Ch+var_14]
mov	[ebx+30h], ax
mov	eax, [esp+4Ch+var_20]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS_3 
call	g_strdup_printf
mov	[ebx+2Ch], eax
mov	eax, [esp+4Ch+var_20]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebx+34h], 1
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	purple_ip_address_is_valid
test	eax, eax
jnz	loc_61C4C960
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi+0A0h], eax
mov	eax, [esp+4Ch+var_1C]
test	eax, eax
jz	short loc_61C4C8BB
cmp	byte ptr [eax],	0
jnz	short loc_61C4C8C8
mov	edx, [esp+4Ch+var_18]
test	edx, edx
jz	short loc_61C4C8E0
cmp	byte ptr [edx],	0
jz	short loc_61C4C8E0
mov	[esp+4Ch+var_48], offset aIgnoringUnexpe 
mov	[esp+4Ch+var_4C], offset aJabber_4 
call	purple_debug_info
mov	eax, [esp+4Ch+var_1C]
			
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esp+4Ch+var_18]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[ebx], esi
call	g_random_int
mov	esi, eax
call	g_random_int
mov	[ebx+20h], eax
and	esi, 0FFFFFh
mov	[ebx+24h], esi
mov	[esp+4Ch+var_4C], 0
call	purple_circ_buffer_new
mov	[ebx+0Ch], eax
mov	dword ptr [ebx+3Ch], 0
mov	[esp+4Ch+var_48], offset aHttps	
mov	[esp+4Ch+var_4C], edi
call	purple_strcasestr
test	eax, eax
setnz	al
movzx	eax, al
mov	[ebx+38h], eax
mov	eax, ebx
call	sub_61C4AEE8
mov	[ebx+4], eax
mov	eax, ebx
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4C994
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esi+5Ch]
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi+0A0h], eax
jmp	loc_61C4C8AE
align 4
mov	[esp+4Ch+var_48], offset aUnableToParseG 
mov	[esp+4Ch+var_4C], offset aJabber_4 
call	purple_debug_info
xor	ebx, ebx
jmp	short loc_61C4C949
call	__stack_chk_fail
align 4
public jabber_bosh_connection_destroy
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edi+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [edi+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [edi+50h]
test	eax, eax
jnz	loc_61C4CA88
mov	eax, [edi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
xor	esi, esi
mov	ebx, [edi+esi*4+4]
test	ebx, ebx
jz	short loc_61C4CA49
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_61C4C9FE
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C4CA0D
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	short loc_61C4CA6C
mov	eax, [ebx+20h]
test	eax, eax
jnz	short loc_61C4CA7B
			
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C4CA2A
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_close
mov	eax, [ebx+18h]
test	eax, eax
js	short loc_61C4CA39
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	[esp+2Ch+var_2C], ebx
call	purple_proxy_connect_cancel_with_handle
mov	[esp+2Ch+var_2C], ebx
call	g_free
inc	esi
cmp	esi, 2
jnz	short loc_61C4C9DF
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CA95
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_61C4CA1B
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
jmp	short loc_61C4CA1B
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	loc_61C4C9D2
call	__stack_chk_fail
align 4
public jabber_bosh_connection_is_ssl
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+38h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CAC1
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_bosh_connection_close
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
cmp	dword ptr [eax+3Ch], 2
jz	short loc_61C4CAF4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CB0F
add	esp, 1Ch
retn
align 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CB0F
xor	ecx, ecx
mov	edx, 1
add	esp, 1Ch
jmp	sub_61C4BA40
			
call	__stack_chk_fail
public jabber_bosh_connection_send_keepalive
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+50h]
test	eax, eax
jz	short loc_61C4CB36
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CB4F
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	sub_61C4BE98
call	__stack_chk_fail
public jabber_bosh_connection_send_raw
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CB81
xor	edx, edx
add	esp, 1Ch
jmp	sub_61C4BA40
call	__stack_chk_fail
align 4
public jabber_bosh_connection_connect
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+4]
mov	ecx, [edx+3Ch]
test	ecx, ecx
jz	short loc_61C4CBD0
mov	[esp+2Ch+var_24], offset aBoshStateBosh_ 
mov	[esp+2Ch+var_28], offset aJabber_bosh__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CBEB
add	esp, 2Ch
retn
mov	dword ptr [edx+3Ch], 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CBEB
add	esp, 2Ch
jmp	sub_61C4ADC0
			
call	__stack_chk_fail
			
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+4]
test	edx, edx
jz	short loc_61C4CC32
mov	ecx, [eax+8]
mov	[esp+3Ch+var_34], ecx
mov	ecx, [eax+20h]
mov	[esp+3Ch+var_38], ecx
mov	ecx, [eax+1Ch]
mov	[esp+3Ch+var_3C], ecx
mov	[esp+3Ch+var_20], eax
call	edx
mov	eax, [esp+3Ch+var_20]
mov	dword ptr [eax+1Ch], 0
mov	dword ptr [eax+20h], 0
mov	eax, [eax]
cmp	eax, 1
jz	short loc_61C4CC51
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aLostAReference 
mov	[esp+3Ch+var_3C], offset aJabber_5 
call	purple_debug_warning
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CC61
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+Str1]
mov	edx, [esp+1Ch+Str2]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C4CC9F
mov	edx, [edx]
mov	[esp+1Ch+Str2],	edx 
mov	eax, [eax]
mov	[esp+1Ch+Str1],	eax 
add	esp, 1Ch
jmp	strcmp
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_61C4CCF8
cmp	byte ptr [edx],	0
jz	short loc_61C4CCF8
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], edx
call	g_markup_escape_text
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_append
mov	[esp+2Ch+var_2C], esi
call	g_free
			
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset asc_61C7D3EC 
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_append
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CD23
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+Str1],	eax
call	jabber_x_data_get_formtype
mov	ebx, eax
mov	[esp+3Ch+Str1],	esi
call	jabber_x_data_get_formtype
mov	esi, eax
mov	[esp+3Ch+Str2],	eax 
mov	[esp+3Ch+Str1],	ebx 
call	strcmp
mov	[esp+3Ch+Str1],	ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	[esp+3Ch+Str1],	esi
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CD8A
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C4CDC4
nop
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4CDA8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CDD5
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp], eax
call	g_str_hash
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp], eax
call	g_str_hash
mov	edi, eax
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_61C4CE34
mov	[esp], edx
call	g_str_hash
mov	edx, eax
mov	eax, edi
xor	eax, esi
xor	eax, edx
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CE38
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
xor	edx, edx
jmp	short loc_61C4CE1B
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
mov	[esp+2Ch+var_2C], offset aCapabilities 
call	xmlnode_new
mov	ebx, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_61C4CF6C
mov	eax, ds:dword_61C9602C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_to_formatted_str
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_free
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], offset aXmppCaps_xml 
call	purple_util_write_data_to_file
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	ds:dword_61C96030, 0
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4CED7
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aExt 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aIdentifier 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
test	ebx, ebx
jz	short loc_61C4CF51
nop
mov	[esp+2Ch+var_28], offset aFeature 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
mov	ecx, [ebx]
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], offset aVar_0	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4CF24
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4CF64
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aClient_0 
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebx]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aNode_0 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	eax, [ebx+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aVer_0	
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C4CFE8
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aHash_1 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	edx, [esp+4Ch+var_30]
mov	esi, [edx]
test	esi, esi
jz	loc_61C4D076
xchg	ax, ax
mov	ebx, [esi]
mov	[esp+4Ch+var_48], offset aIdentity 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_new_child
mov	ebp, eax
mov	edx, [ebx]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aCategory 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	edx, [ebx+4]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aType_2 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_61C4D054
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aName_2 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	edx, [ebx+0Ch]
test	edx, edx
jz	short loc_61C4D06F
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aLang 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_61C4CFF8
mov	edx, [esp+4Ch+var_30]
mov	ebx, [edx+4]
test	ebx, ebx
jz	short loc_61C4D0B1
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+4Ch+var_48], offset aFeature 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aVar_0	
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4D084
mov	edx, [esp+4Ch+var_30]
mov	ebx, [edx+8]
test	ebx, ebx
jz	short loc_61C4D0D9
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_copy
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	xmlnode_insert_child
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4D0BC
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_61C4D110
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4D124
mov	[esp+4Ch+arg_8], edi
mov	[esp+4Ch+arg_4], offset	loc_61C4CEDC
mov	eax, [eax+4]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_foreach
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D124
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esi]
mov	[esp+4], eax
mov	eax, [ebx]
mov	[esp], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C4D16C
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4D19E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [esi+4]
mov	[esp+4], eax
mov	eax, [ebx+4]
mov	[esp], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4D158
mov	eax, [esi+8]
mov	[esp+4], eax
mov	eax, [ebx+8]
mov	[esp], eax
call	purple_strequal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_61C4D15A
call	__stack_chk_fail
align 4
			
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C4D1CC
inc	dword ptr [eax]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4D1F2
add	esp, 3Ch
retn
align 4
mov	[esp+3Ch+var_34], offset aDataNull_0 
mov	[esp+3Ch+var_38], offset aCbplususerdata 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_61C4D1B9
call	__stack_chk_fail
align 4
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C4D21C
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C4D230
dec	eax
mov	[ebx], eax
test	eax, eax
jz	short loc_61C4D250
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D274
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aExtsRef0 
mov	[esp+2Ch+var_28], offset aJabber_caps_no 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C4D21C
align 10h
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D274
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
			
call	__stack_chk_fail
align 4
			
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_61C4D364
mov	eax, [esi]
test	eax, eax
jz	short loc_61C4D2E9
xchg	ax, ax
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esi]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	[esi], eax
test	eax, eax
jnz	short loc_61C4D2A0
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	sub_61C4CD90
mov	eax, [esi+8]
test	eax, eax
jz	short loc_61C4D31C
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
mov	eax, [esi+8]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	[esi+8], eax
test	eax, eax
jnz	short loc_61C4D2FC
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	sub_61C4D1F8
mov	eax, [esi+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D376
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D376
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C4D39E
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C4D3B0
dec	eax
mov	[ebx], eax
test	eax, eax
jz	short loc_61C4D3D0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D427
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aDataRef0 
mov	[esp+2Ch+var_28], offset aCbplususerda_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C4D39E
align 10h
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_61C4D40B
mov	[esp+2Ch+var_2C], eax
call	sub_61C4CD90
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_61C4D41A
mov	[esp+2Ch+var_2C], eax
call	sub_61C4D1F8
mov	[esp+2Ch+var_2C], ebx
call	g_free
jmp	loc_61C4D39E
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C4CE40
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_61C96030, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D46B
add	esp, 2Ch
retn
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_61C96028
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	short loc_61C4D4B0
inc	dword ptr [ebx]
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4D506
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_2C], 8
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_20], offset sub_61C4CD90
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+4], eax
inc	dword ptr [ebx]
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96028
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_61C4D499
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_34], offset aHttpJabber_o_2 
mov	[esp+3Ch+var_38], offset aQuery_2 
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child_with_namespace
mov	ebx, eax
test	eax, eax
jz	loc_61C4D631
cmp	esi, 3
jz	loc_61C4D631
mov	edx, [edi+4]
mov	eax, [edx+1Ch]
test	eax, eax
jz	loc_61C4D688
mov	ebp, [eax+0Ch]
test	ebp, ebp
jz	loc_61C4D638
			
dec	dword ptr [edx+24h]
mov	[esp+3Ch+var_38], offset aFeature 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_child
mov	ebx, eax
xor	esi, esi
test	eax, eax
jz	short loc_61C4D5C4
lea	esi, [esi+0]
mov	[esp+3Ch+var_38], offset aVar_0	
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C4D5B6
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_list_prepend
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4D58C
mov	eax, [edi]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], eax
mov	eax, [ebp+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	ebx, ds:dword_61C96030
test	ebx, ebx
jz	short loc_61C4D624
mov	eax, [edi+4]
mov	ecx, [eax+1Ch]
test	ecx, ecx
jz	short loc_61C4D5FC
mov	edx, [eax+24h]
test	edx, edx
jz	short loc_61C4D62C
			
call	sub_61C4D37C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4D6F0
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
call	sub_61C4D42C
jmp	short loc_61C4D5EB
align 4
call	sub_61C4CBF0
			
mov	eax, [edi+4]
jmp	short loc_61C4D5FC
align 4
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aCouldnTFindJab 
mov	[esp+3Ch+var_3C], offset aJabber_5 
call	purple_debug_error
mov	eax, [edi+4]
mov	eax, [eax+10h]
call	sub_61C4D470
mov	ebp, eax
test	eax, eax
jz	short loc_61C4D698
mov	[esp+3Ch+var_38], offset aFoundTheExtsOn 
mov	[esp+3Ch+var_3C], offset aJabber_5 
call	purple_debug_info
mov	edx, [edi+4]
mov	eax, [edx+1Ch]
test	eax, eax
jz	short loc_61C4D690
mov	[eax+0Ch], ebp
jmp	loc_61C4D56E
align 4
mov	ebp, [edx+28h]
jmp	loc_61C4D566
mov	[edx+28h], ebp
jmp	loc_61C4D56E
mov	eax, [edi+4]
call	sub_61C4D37C
mov	[esp+3Ch+var_3C], edi
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4D6F0
mov	[esp+3Ch+arg_14], offset aJabber_caps_ex 
mov	[esp+3Ch+arg_10], 234h
mov	[esp+3Ch+arg_C], offset	aCaps_c	
mov	[esp+3Ch+arg_8], offset	aFileSLineDSS_0	
mov	[esp+3Ch+arg_4], 8
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_log
			
call	__stack_chk_fail
align 4
public jabber_caps_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_50], offset sub_61C4D1F8
mov	[esp+5Ch+var_54], offset g_free
mov	[esp+5Ch+var_58], offset g_str_equal
mov	[esp+5Ch+var_5C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C96028, eax
mov	[esp+5Ch+var_50], offset sub_61C4D27C
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset loc_61C4D12C
mov	[esp+5Ch+var_5C], offset loc_61C4CDDC
call	g_hash_table_new_full
mov	ds:dword_61C9602C, eax
mov	[esp+5Ch+var_58], offset aXmppCapabiliti 
mov	[esp+5Ch+var_5C], offset aXmppCaps_xml 
call	purple_util_read_xml_from_file
mov	ebp, eax
test	eax, eax
jz	loc_61C4D8F4
mov	[esp+5Ch+var_58], offset aCapabilities 
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4D8EC
mov	edi, [ebp+18h]
test	edi, edi
jz	loc_61C4D8EC
mov	[esp+5Ch+var_44], ebp
mov	esi, edi
jmp	short loc_61C4D7B3
align 4
			
mov	esi, [esi+20h]
test	esi, esi
jz	loc_61C4D8E8
			
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_61C4D7A8
mov	[esp+5Ch+var_58], offset aClient_0 
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4D7A8
mov	[esp+5Ch+var_5C], 1Ch
call	g_malloc0
mov	ebp, eax
lea	edx, [eax+10h]
mov	[esp+5Ch+var_3C], edx
mov	[esp+5Ch+var_58], offset aNode_0 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebp+10h], eax
mov	[esp+5Ch+var_58], offset aVer_0	
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebp+14h], eax
mov	[esp+5Ch+var_58], offset aHash_1 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebp+18h], eax
mov	[esp+5Ch+var_40], 0
test	eax, eax
jz	loc_61C4DA57
mov	edi, [esi+18h]
test	edi, edi
jz	short loc_61C4D8BC
mov	[esp+5Ch+var_34], esi
mov	esi, edi
jmp	short loc_61C4D85F
align 4
			
mov	esi, [esi+20h]
test	esi, esi
jz	short loc_61C4D8B8
			
mov	eax, [esi+8]
test	eax, eax
jnz	short loc_61C4D858
mov	[esp+5Ch+var_58], offset aFeature 
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4D90C
mov	[esp+5Ch+var_58], offset aVar_0	
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C4D858
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esp+5Ch+var_58], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[ebp+4], eax
mov	esi, [esi+20h]
test	esi, esi
jnz	short loc_61C4D85F
lea	esi, [esi+0]
mov	esi, [esp+5Ch+var_34]
mov	eax, [esp+5Ch+var_40]
mov	[ebp+0Ch], eax
mov	[esp+5Ch+var_54], ebp
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_replace
mov	esi, [esi+20h]
test	esi, esi
jnz	loc_61C4D7B3
nop
mov	ebp, [esp+5Ch+var_44]
			
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4DB3B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aIdentity 
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4D9E8
mov	[esp+5Ch+var_58], offset aCategory 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_58], offset aName_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], offset aLang 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	ecx, eax
test	edi, edi
jz	loc_61C4D858
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	loc_61C4D858
mov	[esp+5Ch+var_5C], 10h
mov	[esp+5Ch+var_48], ecx
call	g_malloc0
mov	ebx, eax
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[ebx], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebx+8], eax
mov	ecx, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], ecx
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+5Ch+var_58], ebx
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[ebp+0], eax
jmp	loc_61C4D858
align 4
mov	[esp+5Ch+var_58], offset asc_61C7D5A5 
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C4DA38
mov	[esp+5Ch+var_58], offset aExt 
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4D858
mov	eax, [ebp+18h]
test	eax, eax
jz	short loc_61C4DA68
mov	[esp+5Ch+var_58], offset aIgnoringExtsWh 
mov	[esp+5Ch+var_5C], offset aJabber_5 
call	purple_debug_warning
jmp	loc_61C4D858
mov	[esp+5Ch+var_5C], esi
call	xmlnode_copy
mov	[esp+5Ch+var_58], eax
mov	eax, [ebp+8]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[ebp+8], eax
jmp	loc_61C4D858
mov	eax, [ebp+10h]
call	sub_61C4D470
mov	[esp+5Ch+var_40], eax
jmp	loc_61C4D846
mov	[esp+5Ch+var_58], offset aIdentifier 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	loc_61C4D858
mov	edi, [esi+18h]
test	edi, edi
jz	loc_61C4DB1E
mov	[esp+5Ch+var_38], 0
jmp	short loc_61C4DA9F
align 4
			
mov	edi, [edi+20h]
test	edi, edi
jz	short loc_61C4DAEE
mov	eax, [edi+8]
test	eax, eax
jnz	short loc_61C4DA98
mov	[esp+5Ch+var_58], offset aFeature 
mov	eax, [edi]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4DA98
mov	[esp+5Ch+var_58], offset aVar_0	
mov	[esp+5Ch+var_5C], edi
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C4DA98
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	[esp+5Ch+var_38], eax
jmp	short loc_61C4DA98
mov	edi, [esp+5Ch+var_38]
test	edi, edi
jz	short loc_61C4DB1E
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_40]
mov	eax, [edx+4]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_insert
jmp	loc_61C4D858
			
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aCapsExtSHadNoF 
mov	[esp+5Ch+var_5C], offset aJabber_5 
call	purple_debug_warning
jmp	loc_61C4D858
call	__stack_chk_fail
public jabber_caps_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C96030
test	eax, eax
jz	short loc_61C4DB75
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_61C96030, 0
mov	[esp+2Ch+var_2C], 0
call	sub_61C4CE40
mov	eax, ds:dword_61C9602C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_61C96028
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C96028, 0
mov	ds:dword_61C9602C, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4DBB3
add	esp, 2Ch
retn
call	__stack_chk_fail
public jabber_caps_exts_known
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_61C4DC44
test	edi, edi
jz	short loc_61C4DC3C
mov	eax, [edi]
test	eax, eax
jz	short loc_61C4DC3C
lea	ebx, [edi+4]
jmp	short loc_61C4DC09
test	eax, eax
jz	short loc_61C4DBFD
mov	edx, [edi]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C4DC24
mov	edi, ebx
add	ebx, 4
mov	eax, [ebx-4]
test	eax, eax
jz	short loc_61C4DC3C
mov	[esp+2Ch+var_28], offset aVoiceV1 
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
mov	eax, [esi+0Ch]
jnz	short loc_61C4DBE4
test	eax, eax
jnz	short loc_61C4DBE8
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4DC62
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
mov	eax, 1
jmp	short loc_61C4DC26
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aJabber_caps__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C4DC24
call	__stack_chk_fail
align 4
public jabber_caps_get_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_40], edx
mov	edi, [esp+5Ch+arg_C]
mov	ebx, [esp+5Ch+arg_10]
mov	edx, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_44], edx
mov	ebp, [esp+5Ch+arg_18]
mov	edx, [esp+5Ch+arg_1C]
mov	[esp+5Ch+var_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ecx, [esp+5Ch+var_44]
test	ecx, ecx
jz	loc_61C4DD4C
test	ebx, ebx
jz	loc_61C4E093
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aIgnoringExtsIn 
mov	[esp+5Ch+var_5C], offset aJabber_5 
call	purple_debug_misc
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	g_strfreev
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_2C], edx
mov	[esp+5Ch+var_28], edi
mov	[esp+5Ch+var_24], ebx
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	loc_61C4DE00
test	ebp, ebp
jz	short loc_61C4DD32
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edx
call	ebp
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4E08E
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_2C], edx
mov	[esp+5Ch+var_28], edi
mov	[esp+5Ch+var_24], ebx
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	loc_61C4DE00
test	ebx, ebx
jnz	short loc_61C4DD19
mov	[esp+5Ch+var_5C], 2Ch
mov	[esp+5Ch+var_4C], eax
call	g_malloc0
mov	esi, eax
mov	[eax+4], ebp
mov	eax, [esp+5Ch+var_3C]
mov	[esi+8], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esi+0Ch], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esi+10h], eax
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[esi+14h], eax
mov	[esp+5Ch+var_5C], 0
call	g_strdup
mov	[esi+18h], eax
mov	edx, [esp+5Ch+var_4C]
mov	[esi+1Ch], edx
mov	edx, [esi+24h]
test	edx, edx
jnz	loc_61C4DD32
mov	dword ptr [esi], 1
mov	eax, esi
call	sub_61C4CBF0
mov	eax, esi
call	sub_61C4D37C
jmp	loc_61C4DD32
align 10h
			
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_5C], 2Ch
call	g_malloc0
mov	esi, eax
mov	[eax+4], ebp
mov	edx, [esp+5Ch+var_3C]
mov	[eax+8], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esi+0Ch], eax
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esi+10h], eax
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[esi+14h], eax
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	[esi+18h], eax
mov	[esp+5Ch+var_54], offset aHttpJabber_o_2 
mov	[esp+5Ch+var_58], 1
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+5Ch+var_54], offset aHttpJabber_o_2 
mov	[esp+5Ch+var_58], offset aQuery_2 
mov	eax, [eax+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
mov	ebp, eax
mov	[esp+5Ch+var_54], edi
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aSS_2 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aNode_0 
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_set_attrib
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aTo_1 
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, esi
call	sub_61C4D1A4
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset sub_61C4E7B4
mov	[esp+5Ch+var_5C], ebx
call	jabber_iq_set_callback
mov	[esp+5Ch+var_5C], ebx
call	jabber_iq_send
mov	eax, [esp+5Ch+var_44]
test	eax, eax
jz	loc_61C4E086
mov	eax, [esp+5Ch+var_40]
call	sub_61C4D470
mov	ebp, eax
mov	[esi+28h], eax
			
mov	edx, [esp+5Ch+var_44]
mov	eax, [edx]
test	eax, eax
jz	short loc_61C4DF6D
mov	ebx, [esp+5Ch+var_44]
add	ebx, 4
mov	edi, [esp+5Ch+var_44]
xchg	ax, ax
mov	[esp+5Ch+var_58], eax
mov	eax, [esi+20h]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	[esi+20h], eax
mov	eax, [edi]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C4DF8C
mov	dword ptr [edi], 0
mov	edi, ebx
add	ebx, 4
mov	eax, [ebx-4]
test	eax, eax
jnz	short loc_61C4DF34
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	g_free
mov	eax, [esi+1Ch]
test	eax, eax
jnz	loc_61C4DDDA
jmp	loc_61C4DD32
align 4
mov	[esp+5Ch+var_5C], 8
call	g_malloc
mov	[esp+5Ch+var_3C], eax
mov	eax, [edi]
mov	edx, [esp+5Ch+var_3C]
mov	[edx], eax
mov	eax, esi
call	sub_61C4D1A4
mov	edx, [esp+5Ch+var_3C]
mov	[edx+4], eax
mov	[esp+5Ch+var_54], offset aHttpJabber_o_2 
mov	[esp+5Ch+var_58], 1
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	jabber_iq_new_query
mov	edx, eax
mov	[esp+5Ch+var_54], offset aHttpJabber_o_2 
mov	[esp+5Ch+var_58], offset aQuery_2 
mov	eax, [eax+8]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_4C], edx
call	xmlnode_get_child_with_namespace
mov	ecx, eax
mov	eax, [edi]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSS_2 
mov	[esp+5Ch+var_48], ecx
call	g_strdup_printf
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aNode_0 
mov	ecx, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], ecx
mov	[esp+5Ch+var_48], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_1 
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset sub_61C4D50C
mov	edx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_5C], edx
call	jabber_iq_set_callback
mov	edx, [esp+5Ch+var_4C]
mov	[esp+5Ch+var_5C], edx
call	jabber_iq_send
inc	dword ptr [esi+24h]
jmp	loc_61C4DF5B
mov	eax, [esi+1Ch]
jmp	loc_61C4DF7C
call	__stack_chk_fail
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_2C], edx
mov	[esp+5Ch+var_28], edi
mov	[esp+5Ch+var_24], 0
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_61C4DE08
mov	[esp+5Ch+var_5C], 2Ch
call	g_malloc0
mov	esi, eax
mov	[eax+4], ebp
mov	edx, [esp+5Ch+var_3C]
mov	[eax+8], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esi+0Ch], eax
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esi+10h], eax
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[esi+14h], eax
mov	[esp+5Ch+var_5C], 0
call	g_strdup
mov	[esi+18h], eax
mov	eax, [esp+5Ch+var_30]
mov	[esi+1Ch], eax
mov	ebp, [eax+0Ch]
test	ebp, ebp
jnz	loc_61C4DF1D
mov	eax, [esp+5Ch+var_40]
call	sub_61C4D470
mov	ebp, eax
mov	eax, [esp+5Ch+var_30]
mov	[eax+0Ch], ebp
jmp	loc_61C4DF1D
align 4
public jabber_caps_parse_client_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_61C4E364
mov	[esp+4Ch+var_48], offset aQuery_2 
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4E364
mov	[esp+4Ch+var_48], offset aHttpJabber_o_2 
mov	eax, [esi+4]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C4E364
mov	[esp+4Ch+var_4C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	ebp, [esi+18h]
test	ebp, ebp
jnz	short loc_61C4E1BF
jmp	loc_61C4E2A0
align 4
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	loc_61C4E2A0
			
mov	edi, [ebp+8]
test	edi, edi
jnz	short loc_61C4E1B4
mov	[esp+4Ch+var_48], offset aIdentity 
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4E2BC
mov	[esp+4Ch+var_48], offset aCategory 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+4Ch+var_48], offset aType_2 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_48], offset aName_2 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_48], offset aLang 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
test	edi, edi
jz	short loc_61C4E1B4
mov	esi, [esp+4Ch+var_34]
test	esi, esi
jz	loc_61C4E1B4
mov	[esp+4Ch+var_4C], 10h
mov	[esp+4Ch+var_38], eax
call	g_malloc0
mov	esi, eax
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[esi], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi+4], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi+8], eax
mov	ecx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], ecx
call	g_strdup
mov	[esi+0Ch], eax
mov	[esp+4Ch+var_48], esi
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[ebx], eax
mov	ebp, [ebp+20h]
test	ebp, ebp
jnz	loc_61C4E1BF
nop
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4E36B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], offset aFeature 
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4E30C
mov	[esp+4Ch+var_48], offset aVar_0	
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	loc_61C4E1B4
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	[ebx+4], eax
jmp	loc_61C4E1B4
align 4
mov	[esp+4Ch+var_48], offset asc_61C7D5A5 
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	loc_61C4E1B4
mov	[esp+4Ch+var_48], offset aJabberXData_0	
mov	eax, [ebp+4]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C4E1B4
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_copy
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[ebx+8], eax
jmp	loc_61C4E1B4
align 4
			
xor	ebx, ebx
jmp	loc_61C4E2A0
call	__stack_chk_fail
public jabber_caps_calculate_hash
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_40], eax
mov	eax, [esp+8Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], edx
xor	edx, edx
mov	[esp+8Ch+var_38], 14h
mov	ebp, [esp+8Ch+var_40]
test	ebp, ebp
jz	loc_61C4E785
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_new_by_name
mov	[esp+8Ch+var_44], eax
test	eax, eax
jz	loc_61C4E785
mov	[esp+8Ch+var_88], offset jabber_identity_compare
mov	edx, [esp+8Ch+var_40]
mov	eax, [edx]
mov	[esp+8Ch+var_8C], eax
call	g_list_sort
mov	edx, [esp+8Ch+var_40]
mov	[edx], eax
mov	[esp+8Ch+var_88], offset strcmp
mov	eax, [edx+4]
mov	[esp+8Ch+var_8C], eax
call	g_list_sort
mov	edx, [esp+8Ch+var_40]
mov	[edx+4], eax
mov	[esp+8Ch+var_88], offset sub_61C4CD28
mov	eax, [edx+8]
mov	[esp+8Ch+var_8C], eax
call	g_list_sort
mov	edx, [esp+8Ch+var_40]
mov	[edx+8], eax
mov	esi, [edx]
test	esi, esi
jnz	loc_61C4E50A
jmp	loc_61C4E56E
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	[esp+8Ch+var_8C], eax
call	g_markup_escape_text
mov	ebx, eax
mov	eax, [edi+8]
test	eax, eax
jz	loc_61C4E54F
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	[esp+8Ch+var_8C], eax
call	g_markup_escape_text
test	eax, eax
jz	loc_61C4E54F
mov	[esp+8Ch+var_48], eax
test	ebx, ebx
jz	loc_61C4E564
mov	edx, ebx
mov	[esp+8Ch+var_6C], 0
mov	[esp+8Ch+var_70], offset asc_61C7D3EC 
mov	[esp+8Ch+var_74], eax
mov	[esp+8Ch+var_78], offset asc_61C7D649 
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], offset asc_61C7D649 
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset asc_61C7D649 
mov	[esp+8Ch+var_8C], ebp
call	g_strconcat
mov	edx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+var_88], edx
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
mov	[esp+8Ch+var_50], edx
call	purple_cipher_context_append
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], edx
call	g_free
mov	[esp+8Ch+var_8C], ebp
call	g_free
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	[esp+8Ch+var_8C], ebx
call	g_free
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], edx
call	g_free
mov	esi, [esi+4]
test	esi, esi
jz	short loc_61C4E56E
mov	edi, [esi]
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	eax, [edi]
mov	[esp+8Ch+var_8C], eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+8Ch+var_88], 0FFFFFFFFh
mov	eax, [edi+4]
mov	[esp+8Ch+var_8C], eax
call	g_markup_escape_text
mov	[esp+8Ch+var_4C], eax
mov	eax, [edi+0Ch]
test	eax, eax
jnz	loc_61C4E424
xor	ebx, ebx
mov	eax, [edi+8]
test	eax, eax
jnz	loc_61C4E441
			
mov	[esp+8Ch+var_48], 0
mov	eax, offset byte_61C7D648
test	ebx, ebx
jnz	loc_61C4E465
mov	edx, offset byte_61C7D648
jmp	loc_61C4E467
			
mov	eax, [esp+8Ch+var_40]
mov	ebx, [eax+4]
test	ebx, ebx
jz	short loc_61C4E590
mov	esi, [esp+8Ch+var_44]
lea	esi, [esi+0]
mov	edx, [ebx]
mov	eax, esi
call	sub_61C4CCA4
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4E580
mov	eax, [esp+8Ch+var_40]
mov	eax, [eax+8]
mov	[esp+8Ch+var_4C], eax
test	eax, eax
jz	loc_61C4E74F
nop
mov	edx, [esp+8Ch+var_4C]
mov	ebx, [edx]
mov	[esp+8Ch+var_8C], ebx
call	jabber_x_data_get_formtype
mov	[esp+8Ch+var_48], eax
test	ebx, ebx
jz	loc_61C4E720
mov	[esp+8Ch+var_88], offset aField_0 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_get_child
mov	esi, eax
xor	ebp, ebp
test	eax, eax
jz	loc_61C4E67A
xchg	ax, ax
mov	[esp+8Ch+var_8C], 8
call	g_malloc0
mov	edi, eax
mov	[esp+8Ch+var_88], offset aVar_0	
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	[edi], eax
mov	[esp+8Ch+var_88], offset aValue_0 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C4E644
xchg	ax, ax
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_88], eax
mov	eax, [edi+4]
mov	[esp+8Ch+var_8C], eax
call	g_list_append
mov	[edi+4], eax
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4E61C
mov	[esp+8Ch+var_88], offset strcmp
mov	eax, [edi+4]
mov	[esp+8Ch+var_8C], eax
call	g_list_sort
mov	[edi+4], eax
mov	[esp+8Ch+var_88], edi
mov	[esp+8Ch+var_8C], ebp
call	g_list_append
mov	ebp, eax
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	loc_61C4E5DC
mov	[esp+8Ch+var_88], offset sub_61C4CC68
mov	[esp+8Ch+var_8C], ebp
call	g_list_sort
mov	ebx, eax
mov	edx, [esp+8Ch+var_48]
mov	eax, [esp+8Ch+var_44]
call	sub_61C4CCA4
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	g_free
test	ebx, ebx
jz	loc_61C4E73C
mov	ebp, [esp+8Ch+var_44]
jmp	short loc_61C4E6DB
align 4
			
mov	eax, [edi]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	eax, [edi+4]
mov	[esp+8Ch+var_8C], eax
call	g_list_free
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jz	short loc_61C4E73C
mov	edi, [ebx]
mov	[esp+8Ch+var_88], offset aForm_type 
mov	eax, [edi]
mov	[esp+8Ch+var_8C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C4E6B4
mov	edx, [edi]
mov	eax, ebp
call	sub_61C4CCA4
mov	esi, [edi+4]
test	esi, esi
jz	short loc_61C4E6B4
nop
mov	edx, [esi]
mov	eax, ebp
call	sub_61C4CCA4
mov	eax, [esi]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_61C4E704
jmp	short loc_61C4E6B4
mov	edx, [esp+8Ch+var_48]
mov	eax, [esp+8Ch+var_44]
call	sub_61C4CCA4
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	g_free
lea	esi, [esi+0]
			
mov	edx, [esp+8Ch+var_4C]
mov	edx, [edx+4]
mov	[esp+8Ch+var_4C], edx
test	edx, edx
jnz	loc_61C4E5A4
lea	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_80], eax
lea	ebx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_84], ebx
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_digest
mov	esi, eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_8C], eax
call	purple_cipher_context_destroy
test	esi, esi
jnz	short loc_61C4E79B
			
xor	eax, eax
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4E7AD
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebx
call	purple_base64_encode
jmp	short loc_61C4E787
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_10]
mov	ebx, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], offset aHttpJabber_o_2 
mov	[esp+5Ch+var_58], offset aQuery_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C4E850
cmp	edi, 3
jz	short loc_61C4E850
mov	[esp+5Ch+var_5C], eax
call	jabber_caps_parse_client_info
mov	edi, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	loc_61C4E9A0
mov	[esp+5Ch+var_58], offset aSha1_2 
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C4E888
mov	[esp+5Ch+var_58], offset aSha1_3 
mov	[esp+5Ch+var_5C], edi
call	jabber_caps_calculate_hash
mov	ebp, eax
test	ebp, ebp
jz	short loc_61C4E8A3
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	g_str_equal
test	eax, eax
jnz	loc_61C4E924
mov	[esp+5Ch+var_30], ebp
jmp	short loc_61C4E8B0
align 10h
			
mov	eax, [ebx+8]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	dword ptr [ebx+4]
mov	eax, ebx
call	sub_61C4D37C
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4EA15
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aMd5_1	
mov	eax, [ebx+18h]
mov	[esp+5Ch+var_5C], eax
call	g_str_equal
test	eax, eax
jnz	loc_61C4E988
mov	[esp+5Ch+var_30], 0
mov	ebp, offset aNull 
mov	ecx, [ebx+14h]
mov	[esp+5Ch+var_58], offset aFrom 
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], ecx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_4C], ebp
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aCouldNotValida 
mov	[esp+5Ch+var_5C], offset aJabber_5 
call	purple_debug_warning
mov	eax, [ebx+8]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	dword ptr [ebx+4]
mov	[esp+5Ch+var_5C], edi
call	sub_61C4D27C
mov	eax, ebx
call	sub_61C4D37C
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	loc_61C4E870
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	edx, [ebx+18h]
test	edx, edx
jz	short loc_61C4E9A0
			
mov	eax, [ebx+10h]
mov	[esp+5Ch+var_2C], eax
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_28], eax
mov	[esp+5Ch+var_24], edx
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	short loc_61C4E9B8
mov	[esp+5Ch+var_5C], edi
call	sub_61C4D27C
mov	edi, esi
			
mov	[ebx+1Ch], edi
mov	eax, [ebx+24h]
test	eax, eax
jnz	short loc_61C4E97B
mov	eax, ebx
call	sub_61C4CBF0
mov	eax, ebx
call	sub_61C4D37C
jmp	loc_61C4E870
align 4
mov	[esp+5Ch+var_58], offset aMd5_1	
mov	[esp+5Ch+var_5C], edi
call	jabber_caps_calculate_hash
mov	ebp, eax
jmp	loc_61C4E82E
align 10h
			
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_61C4EA0E
mov	[edi+0Ch], eax
mov	dword ptr [ebx+28h], 0
xor	edx, edx
jmp	loc_61C4E933
mov	eax, [ebx+10h]
mov	[edi+10h], eax
mov	eax, [ebx+14h]
mov	[edi+14h], eax
mov	eax, [ebx+18h]
mov	[edi+18h], eax
mov	dword ptr [ebx+18h], 0
mov	dword ptr [ebx+14h], 0
mov	dword ptr [ebx+10h], 0
mov	[esp+5Ch+var_54], edi
lea	eax, [edi+10h]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_61C9602C
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_insert
mov	eax, ds:dword_61C96030
test	eax, eax
jnz	loc_61C4E96A
call	sub_61C4D42C
jmp	loc_61C4E96A
xor	edx, edx
jmp	loc_61C4E933
call	__stack_chk_fail
align 4
public jabber_caps_calculate_own_hash
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:jabber_features
mov	eax, ds:jabber_identities
test	eax, eax
jz	loc_61C4EAF4
test	ebx, ebx
jz	loc_61C4EAF0
xor	edi, edi
nop
mov	esi, [ebx]
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C4EA68
mov	edx, [esi]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	eax
test	eax, eax
jz	short loc_61C4EA78
mov	eax, [esi]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_append
mov	edi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4EA50
mov	[esp+4Ch+var_38], edi
mov	eax, ds:jabber_identities
mov	[esp+4Ch+var_4C], eax
call	g_list_copy
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_34], 0
mov	eax, [ebp+0D8h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_48], offset aSha1_3 
lea	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_4C], eax
call	jabber_caps_calculate_hash
mov	[ebp+0D8h], eax
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4EB2A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	edi, edi
jmp	short loc_61C4EA7F
test	ebx, ebx
jnz	loc_61C4EA4D
mov	[esp+4Ch+var_48], offset aNoFeaturesOrId 
mov	[esp+4Ch+var_4C], offset aJabber_5 
call	purple_debug_warning
mov	eax, [ebp+0D8h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebp+0D8h], 0
jmp	short loc_61C4EADC
call	__stack_chk_fail
align 10h
public jabber_caps_get_own_hash
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0D8h]
test	eax, eax
jz	short loc_61C4EB60
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4EB70
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	jabber_caps_calculate_own_hash
mov	eax, [ebx+0D8h]
jmp	short loc_61C4EB4D
call	__stack_chk_fail
align 4
public jabber_caps_broadcast_change
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_accounts_get_all_active
mov	edi, eax
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4EB9F
jmp	short loc_61C4EBEC
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C4EBEC
			
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_protocol_id
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPrplJabber 
call	g_str_equal
test	eax, eax
jz	short loc_61C4EB98
mov	[esp+2Ch+var_2C], esi
call	purple_account_is_connected
test	eax, eax
jz	short loc_61C4EB98
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_connection
mov	[esp+2Ch+var_28], 1
mov	eax, [eax+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_presence_send
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C4EB9F
nop
			
mov	[esp+2Ch+var_2C], edi
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4EC07
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [eax]
cmp	[edx+14h], ecx
jnz	short loc_61C4EC2D
mov	[eax+4], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4EC3D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_chat_member_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4EC85
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	esi, [eax]
mov	ebx, [eax+4]
mov	edx, [esp+34h]
mov	edx, [edx]
mov	[esp+4], edx
mov	eax, [eax+8]
mov	[esp], eax
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C4ECF0
mov	edx, [ebx]
test	edx, edx
jnz	short loc_61C4ECD8
			
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4ECF8
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+4], esi
mov	[esp], eax
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C4ECC5
mov	dword ptr [ebx], 1
jmp	short loc_61C4ECC5
mov	dword ptr [ebx], 0
jmp	short loc_61C4ECC5
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_61C4ED3C
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	purple_roomlist_set_in_progress
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_roomlist_unref
mov	dword ptr [ebx+34h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4ED4D
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_8]
mov	ebx, [esp+5Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	ecx, [edi+34h]
test	ecx, ecx
jz	loc_61C4EEB1
cmp	eax, 3
jz	loc_61C4EECC
mov	[esp+5Ch+var_58], offset aQuery_3 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C4EF80
mov	[esp+5Ch+var_58], offset aItem_1 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4EDF8
jmp	loc_61C4EE8C
align 4
			
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebp
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_room_add_field
mov	[esp+5Ch+var_58], ebp
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_room_add
mov	[esp+5Ch+var_5C], esi
call	jabber_id_free
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C4EE8C
mov	[esp+5Ch+var_58], offset aJid_2	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_5C], eax
call	jabber_id_new
mov	esi, eax
test	eax, eax
jz	short loc_61C4EDE6
mov	[esp+5Ch+var_58], offset aName_3 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	edx, eax
mov	[esp+5Ch+var_54], 0
mov	eax, [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], 2
mov	[esp+5Ch+var_30], edx
call	purple_roomlist_room_new
mov	ebp, eax
mov	eax, [esi]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_room_add_field
mov	eax, [esi+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_room_add_field
mov	edx, [esp+5Ch+var_30]
test	edx, edx
jnz	loc_61C4EDBC
mov	edx, offset byte_61C7D770
jmp	loc_61C4EDBC
align 4
			
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_set_in_progress
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_unref
mov	dword ptr [edi+34h], 0
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4F024
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	jabber_parse_error
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aErrorRetrievin 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aError_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_set_in_progress
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_unref
mov	dword ptr [edi+34h], 0
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4F024
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	jabber_parse_error
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aErrorRetrievin 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aError_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	[esp+5Ch+var_58], 0
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_set_in_progress
mov	eax, [edi+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_roomlist_unref
mov	dword ptr [edi+34h], 0
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_61C4EF70
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	edi, [esp+34h]
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edx, [eax+8]
mov	[esp+8], edx
mov	eax, [eax+4]
mov	[esp+4], eax
mov	dword ptr [esp], offset	aS@S_0 
call	g_strdup_printf
mov	esi, eax
mov	dword ptr [esp+8], offset aJabberIqRegist 
mov	dword ptr [esp+4], 0
mov	[esp], ebx
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aTo_2	
mov	eax, [eax+8]
mov	[esp], eax
call	xmlnode_set_attrib
mov	[esp], esi
call	g_free
mov	dword ptr [esp+4], offset aQuery_3 
mov	eax, [ebx+8]
mov	[esp], eax
call	xmlnode_get_child
mov	[esp+4], edi
mov	[esp], eax
call	xmlnode_insert_child
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], offset loc_61C4F348
mov	[esp], ebx
call	jabber_iq_set_callback
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4F0F1
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	edi, [esp+34h]
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edx, [eax+8]
mov	[esp+8], edx
mov	eax, [eax+4]
mov	[esp+4], eax
mov	dword ptr [esp], offset	aS@S_0 
call	g_strdup_printf
mov	esi, eax
mov	dword ptr [esp+8], offset aHttpJabber_o_3 
mov	dword ptr [esp+4], 0
mov	[esp], ebx
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aTo_2	
mov	eax, [eax+8]
mov	[esp], eax
call	xmlnode_set_attrib
mov	[esp], esi
call	g_free
mov	dword ptr [esp+4], offset aQuery_3 
mov	eax, [ebx+8]
mov	[esp], eax
call	xmlnode_get_child
mov	[esp+4], edi
mov	[esp], eax
call	xmlnode_insert_child
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4F1A5
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+34h]
mov	[esp], eax
call	g_strdup
mov	edi, eax
mov	[esp], ebx
call	g_strdup
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4F1FE
mov	[esp+38h], edi
mov	[esp+34h], eax
mov	[esp+30h], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_hash_table_insert
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+40h]
mov	esi, [esp+44h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	eax, [ebx+34h]
test	eax, eax
jz	loc_61C4F330
test	esi, esi
jz	short loc_61C4F234
cmp	byte ptr [esi],	0
jnz	loc_61C4F2BC
mov	dword ptr [esp+4], offset aInvalidServer 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	dword ptr [esp+4], offset aInvalidServer 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], esi
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_notify_message
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4F342
mov	dword ptr [esp+44h], 0
mov	eax, [ebx+34h]
mov	[esp+40h], eax
add	esp, 34h
pop	ebx
pop	esi
jmp	purple_roomlist_set_in_progress
align 4
mov	dword ptr [esp+4], 1
mov	[esp], eax
call	purple_roomlist_set_in_progress
mov	dword ptr [esp+8], offset aHttpJabber_o_4 
mov	dword ptr [esp+4], 1
mov	[esp], ebx
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aTo_2	
mov	eax, [eax+8]
mov	[esp], eax
call	xmlnode_set_attrib
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], offset sub_61C4ED54
mov	[esp], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4F342
mov	[esp+40h], ebx
add	esp, 34h
pop	ebx
pop	esi
jmp	jabber_iq_send
align 10h
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4F342
add	esp, 34h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+40h]
mov	eax, [esp+50h]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch], edx
xor	edx, edx
cmp	dword ptr [esp+48h], 3
jz	short loc_61C4F380
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4F412
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	dword ptr [esp+8], 0
mov	[esp+4], eax
mov	[esp], ebx
call	jabber_parse_error
mov	esi, eax
mov	dword ptr [esp+4], offset aRegistrationEr 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	dword ptr [esp+4], offset aRegistrationEr 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], esi
mov	[esp+0Ch], edi
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_notify_message
test	esi, esi
jz	loc_61C4F369
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4F412
mov	[esp+40h], esi
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
			
call	__stack_chk_fail
align 4
public jabber_chat_info
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_room	
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aRoom	
mov	dword ptr [ebx+8], 1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 0
call	g_list_append
mov	esi, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_server 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aServer 
mov	dword ptr [ebx+8], 1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_list_append
mov	esi, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_handle 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aHandle 
mov	dword ptr [ebx+8], 1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_list_append
mov	esi, eax
mov	[esp+2Ch+var_2C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_28], offset a_password 
mov	[esp+2Ch+var_2C], offset aPidgin_6 
call	libintl_dgettext
mov	[ebx], eax
mov	dword ptr [ebx+4], offset aPassword_1 
mov	dword ptr [ebx+18h], 1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_list_append
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4F53C
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_chat_info_defaults
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	esi, [eax+1Ch]
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ebx, eax
mov	eax, [esi+5Ch]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aHandle 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_insert
mov	eax, [esi+30h]
test	eax, eax
jz	short loc_61C4F5CC
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aServer 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_insert
test	edi, edi
jz	short loc_61C4F64A
mov	[esp+2Ch+var_2C], edi
call	jabber_id_new
mov	esi, eax
test	eax, eax
jz	short loc_61C4F64A
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aRoom 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_insert
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C4F61F
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aServer 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_replace
mov	eax, [esi+8]
test	eax, eax
jz	short loc_61C4F642
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aHandle 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_replace
mov	[esp+2Ch+var_2C], esi
call	jabber_id_free
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4F65F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public jabber_chat_find
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_61C4F6DC
test	edx, edx
jz	short loc_61C4F6FC
mov	esi, [ebx+2Ch]
test	esi, esi
jz	short loc_61C4F6D8
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aS@S_0	
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4F71C
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_61C4F6C5
mov	[esp+3Ch+var_34], offset aRoomNull 
mov	[esp+3Ch+var_38], offset aJabber_chat_fi 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C4F6C5
mov	[esp+3Ch+var_34], offset aServerNull 
mov	[esp+3Ch+var_38], offset aJabber_chat_fi 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C4F6C5
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	eax, [esp+5Ch+arg_8]
mov	ebx, [esp+5Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	edx, [esp+5Ch+var_34]
test	edx, edx
jz	loc_61C4F7F8
cmp	eax, 2
jz	loc_61C4F810
cmp	eax, 3
jz	loc_61C4F8E0
			
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aUnableToConfig 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aUnableToConf_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aUnableToConf_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 2
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4F967
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4F967
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	jabber_id_new
mov	esi, eax
test	eax, eax
jz	short loc_61C4F7F8
mov	eax, [eax+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_chat_find
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], esi
call	jabber_id_free
mov	edi, [esp+5Ch+var_30]
test	edi, edi
jz	short loc_61C4F7F8
mov	[esp+5Ch+var_58], offset aQuery_3 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4F7F8
mov	[esp+5Ch+var_58], offset asc_61C7D896 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4F88E
jmp	loc_61C4F769
align 4
			
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C4F769
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_namespace
test	eax, eax
jz	short loc_61C4F87C
mov	edi, offset aJabberXData_1 
mov	esi, eax
mov	ecx, 0Eh
repe cmpsb
jnz	short loc_61C4F87C
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4F967
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_C], eax
mov	[esp+5Ch+arg_8], offset	loc_61C4F02C
mov	[esp+5Ch+arg_4], ebx
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_x_data_request
align 10h
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	jabber_parse_error
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aRegistrationEr 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aRegistrationEr 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
test	ebx, ebx
jz	loc_61C4F7F8
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_61C4F7E8
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	eax, [esp+5Ch+arg_8]
mov	ebx, [esp+5Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	esi, [esp+5Ch+var_34]
test	esi, esi
jz	loc_61C4FB0C
cmp	eax, 2
jz	loc_61C4FA40
cmp	eax, 3
jz	loc_61C4FB24
			
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aUnableToConfig 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aUnableToConf_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aUnableToConf_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 2
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4FBA0
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	jabber_id_new
mov	esi, eax
test	eax, eax
jz	loc_61C4FB0C
mov	eax, [eax+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [esi]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_chat_find
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], esi
call	jabber_id_free
mov	ecx, [esp+5Ch+var_30]
test	ecx, ecx
jz	loc_61C4FB0C
mov	[esp+5Ch+var_58], offset aQuery_3 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C4FB0C
mov	[esp+5Ch+var_58], offset asc_61C7D896 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4FAC6
jmp	loc_61C4F9B1
align 4
			
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C4F9B1
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_namespace
test	eax, eax
jz	short loc_61C4FAB4
mov	edi, offset aJabberXData_1 
mov	esi, eax
mov	ecx, 0Eh
repe cmpsb
jnz	short loc_61C4FAB4
mov	eax, [esp+5Ch+var_30]
mov	dword ptr [eax+24h], 3
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset loc_61C4F0F8
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	jabber_x_data_request
mov	edx, [esp+5Ch+var_30]
mov	[edx+28h], eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C4FBA0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	jabber_parse_error
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aConfigurationE 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aConfigurationE 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
test	ebx, ebx
jnz	loc_61C4FA20
jmp	loc_61C4FB0C
			
call	__stack_chk_fail
align 4
public jabber_chat_find_by_id
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 8
call	g_malloc0
mov	ebx, eax
mov	[eax], edi
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_61C4EC0C
mov	eax, [esi+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	esi, [ebx+4]
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C4FC08
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_14]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_id
test	eax, eax
jz	short loc_61C4FC3D
mov	dword ptr [eax+20h], 1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4FC4D
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+Time],	eax
call	jabber_chat_find_by_id
mov	ebp, eax
test	eax, eax
jz	loc_61C4FD9C
cmp	ebx, 3
jz	loc_61C4FD9C
mov	[esp+4Ch+var_48], offset aQuery_3 
mov	[esp+4Ch+Time],	esi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C4FD9C
mov	[esp+4Ch+var_48], offset aRoles	
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+Time],	eax
call	g_string_new
mov	edi, eax
mov	[esp+4Ch+var_48], offset aItem_1 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C4FDB0
nop
mov	[esp+4Ch+var_48], offset aJid_2	
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aRole_1 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_attrib
test	esi, esi
jz	short loc_61C4FD2A
test	eax, eax
jz	short loc_61C4FD2A
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aSS_3 
mov	[esp+4Ch+Time],	edi
call	g_string_append_printf
			
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4FCE8
mov	[esp+4Ch+Time],	0 
call	time
mov	esi, eax
mov	ebx, [edi]
mov	eax, [ebp+18h]
mov	[esp+4Ch+Time],	eax
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], 44h
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset byte_61C7D770
mov	[esp+4Ch+Time],	eax
call	purple_conv_chat_write
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4FE13
mov	[esp+4Ch+arg_4], 1
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
align 4
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4FE13
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [edi+4]
lea	eax, [edx+1]
cmp	eax, [edi+8]
jnb	short loc_61C4FDF9
mov	ecx, [edi]
mov	byte ptr [ecx+edx], 0Ah
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
mov	[esp+4Ch+var_48], offset aNoUsersFound 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	edi
call	g_string_append_len
mov	edi, eax
jmp	loc_61C4FD38
mov	[esp+4Ch+var_44], 0Ah
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	edi
call	g_string_insert_c
jmp	short loc_61C4FDCA
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+Time],	eax
call	jabber_chat_find_by_id
mov	ebp, eax
test	eax, eax
jz	loc_61C4FF60
cmp	ebx, 3
jz	loc_61C4FF60
mov	[esp+4Ch+var_48], offset aQuery_3 
mov	[esp+4Ch+Time],	esi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C4FF60
mov	[esp+4Ch+var_48], offset aAffiliations 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+Time],	eax
call	g_string_new
mov	edi, eax
mov	[esp+4Ch+var_48], offset aItem_1 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C4FF74
nop
mov	[esp+4Ch+var_48], offset aJid_2	
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aAffiliation 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_attrib
test	esi, esi
jz	short loc_61C4FEEE
test	eax, eax
jz	short loc_61C4FEEE
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aSS_3 
mov	[esp+4Ch+Time],	edi
call	g_string_append_printf
			
mov	[esp+4Ch+Time],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C4FEAC
mov	[esp+4Ch+Time],	0 
call	time
mov	esi, eax
mov	ebx, [edi]
mov	eax, [ebp+18h]
mov	[esp+4Ch+Time],	eax
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], 44h
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset byte_61C7D770
mov	[esp+4Ch+Time],	eax
call	purple_conv_chat_write
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C4FFD7
mov	[esp+4Ch+arg_4], 1
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
align 10h
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C4FFD7
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [edi+4]
lea	eax, [edx+1]
cmp	eax, [edi+8]
jnb	short loc_61C4FFBD
mov	ecx, [edi]
mov	byte ptr [ecx+edx], 0Ah
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
mov	[esp+4Ch+var_48], offset aNoUsersFound 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	edi
call	g_string_append_len
mov	edi, eax
jmp	loc_61C4FEFC
mov	[esp+4Ch+var_44], 0Ah
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	edi
call	g_string_insert_c
jmp	short loc_61C4FF8E
			
call	__stack_chk_fail
public jabber_chat_find_by_conv
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	short loc_61C50038
mov	esi, [eax+1Ch]
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_chat_data
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_get_id
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jabber_chat_find_by_id
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5003C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_61C50023
call	__stack_chk_fail
align 4
public jabber_chat_invite
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	esi, [eax+1Ch]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	jabber_chat_find_by_id
mov	ebp, eax
test	eax, eax
jz	loc_61C50230
mov	[esp+4Ch+var_4C], offset aMessage_0 
call	xmlnode_new
mov	ebx, eax
mov	eax, [ebp+8]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebp+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS@S_0	
call	g_strdup_printf
mov	[esp+4Ch+var_34], eax
mov	ebp, [ebp+1Ch]
test	ebp, ebp
jnz	loc_61C50190
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_2 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
test	edi, edi
jz	loc_61C50244
mov	[esp+4Ch+var_48], offset aBody_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_48], offset asc_61C7D896 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aJid_2	
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aReason 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], offset aJabberXConfere 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	jabber_send
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C50279
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aTo_2 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset asc_61C7D896 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aHttpJabber_o_5 
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_48], offset aInvite 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_2 
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], eax
call	xmlnode_set_attrib
test	edi, edi
mov	eax, [esp+4Ch+var_38]
jz	loc_61C50156
mov	[esp+4Ch+var_48], offset aReason 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	loc_61C50156
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50279
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], offset asc_61C7D896 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aJid_2	
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_38]
jmp	loc_61C50146
			
call	__stack_chk_fail
align 10h
public jabber_get_chat_name
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aRoom 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+2Ch+var_28], offset aServer 
mov	[esp+2Ch+var_2C], ebx
call	g_hash_table_lookup
test	esi, esi
jz	short loc_61C502E4
test	eax, eax
jz	short loc_61C502E4
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C502E8
add	esp, 24h
pop	ebx
pop	esi
retn
			
xor	eax, eax
jmp	short loc_61C502D2
call	__stack_chk_fail
align 10h
public jabber_join_chat
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	ebx, [esp+9Ch+arg_0]
mov	esi, [esp+9Ch+arg_4]
mov	ebp, [esp+9Ch+arg_8]
mov	edx, [esp+9Ch+arg_C]
mov	[esp+9Ch+var_68], edx
mov	ecx, [esp+9Ch+arg_10]
mov	[esp+9Ch+var_60], ecx
mov	edi, [esp+9Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], esi
mov	[esp+9Ch+var_9C], ebx
call	jabber_chat_find
test	eax, eax
jz	short loc_61C50374
mov	[esp+9Ch+var_6C], 0
mov	eax, [esp+9Ch+var_6C]
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C50816
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+9Ch+var_9C], 38h
call	g_malloc0
mov	[esp+9Ch+var_6C], eax
mov	[eax], ebx
mov	dword ptr [eax+34h], 0
mov	[esp+9Ch+var_9C], esi
call	g_strdup
mov	edx, [esp+9Ch+var_6C]
mov	[edx+4], eax
mov	[esp+9Ch+var_9C], ebp
call	g_strdup
mov	ecx, [esp+9Ch+var_6C]
mov	[ecx+8], eax
mov	edx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_9C], edx
call	g_strdup
mov	ecx, [esp+9Ch+var_6C]
mov	[ecx+0Ch], eax
mov	[esp+9Ch+var_90], offset g_free
mov	[esp+9Ch+var_94], offset g_free
mov	[esp+9Ch+var_98], offset g_str_equal
mov	[esp+9Ch+var_9C], offset g_str_hash
call	g_hash_table_new_full
mov	edx, [esp+9Ch+var_6C]
mov	[edx+10h], eax
test	edi, edi
jz	loc_61C50774
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], offset loc_61C4F1AC
mov	[esp+9Ch+var_9C], edi
call	g_hash_table_foreach
mov	[esp+9Ch+var_90], offset jabber_chat_member_free
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], offset g_str_equal
mov	[esp+9Ch+var_9C], offset g_str_hash
call	g_hash_table_new_full
mov	ecx, [esp+9Ch+var_6C]
mov	[ecx+2Ch], eax
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], esi
mov	[esp+9Ch+var_9C], offset aS@S_0	
call	g_strdup_printf
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	eax, [ebx+2Ch]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_insert
mov	eax, [ebx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_get_account
mov	[esp+9Ch+var_9C], eax
call	purple_account_get_active_status
lea	edx, [esp+9Ch+var_48]
mov	[esp+9Ch+var_90], edx
lea	edx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_94], edx
lea	edx, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], eax
call	purple_status_to_jabber
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_90], eax
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	jabber_presence_create_js
mov	[esp+9Ch+var_64], eax
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_9C], eax
call	g_free
mov	ecx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_90], ecx
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], esi
mov	[esp+9Ch+var_9C], offset aS@SS 
call	g_strdup_printf
mov	esi, eax
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], offset aTo_2 
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_9C], eax
call	xmlnode_set_attrib
mov	[esp+9Ch+var_9C], esi
call	g_free
mov	[esp+9Ch+var_98], offset aHistory_maxcha 
mov	[esp+9Ch+var_9C], edi
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+9Ch+var_98], offset aHistory_maxsta 
mov	[esp+9Ch+var_9C], edi
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+9Ch+var_98], offset aHistory_second 
mov	[esp+9Ch+var_9C], edi
call	g_hash_table_lookup
mov	[esp+9Ch+var_68], eax
mov	[esp+9Ch+var_98], offset aHistory_since	
mov	[esp+9Ch+var_9C], edi
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	loc_61C5076C
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
lea	edx, [esp+9Ch+var_44]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], 1
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], edx
call	purple_str_to_time
test	eax, eax
mov	edx, [esp+9Ch+var_70]
jz	loc_61C506B4
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], offset aYMDtHMSz 
call	purple_utf8_strftime
mov	edi, eax
			
mov	[esp+9Ch+var_98], offset asc_61C7D896 
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_9C], eax
call	xmlnode_new_child
mov	[esp+9Ch+var_98], offset aHttpJabber_o_6 
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], eax
call	xmlnode_set_namespace
mov	eax, [esp+9Ch+var_60]
test	eax, eax
mov	edx, [esp+9Ch+var_70]
jz	short loc_61C505D9
mov	ecx, [esp+9Ch+var_60]
cmp	byte ptr [ecx],	0
jnz	loc_61C506D4
			
test	esi, esi
jz	short loc_61C5064C
cmp	byte ptr [esi],	0
jz	short loc_61C5064C
mov	[esp+9Ch+var_98], offset aHistory 
mov	[esp+9Ch+var_9C], edx
call	xmlnode_new_child
cmp	byte ptr [esi],	0
jnz	loc_61C50691
			
test	ebp, ebp
jz	short loc_61C50609
cmp	byte ptr [ebp+0], 0
jnz	loc_61C50748
			
mov	edx, [esp+9Ch+var_68]
test	edx, edx
jz	short loc_61C5061E
mov	edx, [esp+9Ch+var_68]
cmp	byte ptr [edx],	0
jnz	loc_61C50708
			
test	edi, edi
jz	short loc_61C5062B
cmp	byte ptr [edi],	0
jnz	loc_61C5072C
			
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	jabber_send
mov	eax, [esp+9Ch+var_64]
mov	[esp+9Ch+var_9C], eax
call	xmlnode_free
jmp	loc_61C50353
			
test	ebp, ebp
jz	short loc_61C50656
cmp	byte ptr [ebp+0], 0
jnz	short loc_61C50670
mov	ecx, [esp+9Ch+var_68]
test	ecx, ecx
jz	short loc_61C50667
mov	eax, [esp+9Ch+var_68]
cmp	byte ptr [eax],	0
jnz	short loc_61C50670
test	edi, edi
jz	short loc_61C5062B
cmp	byte ptr [edi],	0
jz	short loc_61C5062B
			
mov	[esp+9Ch+var_98], offset aHistory 
mov	[esp+9Ch+var_9C], edx
call	xmlnode_new_child
test	esi, esi
jz	loc_61C505FB
cmp	byte ptr [esi],	0
jz	loc_61C505FB
mov	[esp+9Ch+var_94], esi
mov	[esp+9Ch+var_98], offset aMaxchars 
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], eax
call	xmlnode_set_attrib
mov	eax, [esp+9Ch+var_70]
jmp	loc_61C505FB
align 4
mov	[esp+9Ch+var_94], edi
mov	[esp+9Ch+var_98], offset aInvalidDateFor 
mov	[esp+9Ch+var_9C], offset aJabber_6 
call	purple_debug_error
xor	edi, edi
jmp	loc_61C50598
align 4
mov	[esp+9Ch+var_98], offset aPassword_1 
mov	[esp+9Ch+var_9C], edx
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	ecx, [esp+9Ch+var_60]
mov	[esp+9Ch+var_98], ecx
mov	[esp+9Ch+var_9C], eax
call	xmlnode_insert_data
mov	edx, [esp+9Ch+var_70]
jmp	loc_61C505D9
align 4
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], offset aSeconds_0 
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], eax
call	xmlnode_set_attrib
mov	eax, [esp+9Ch+var_70]
jmp	loc_61C5061E
align 4
mov	[esp+9Ch+var_94], edi
mov	[esp+9Ch+var_98], offset aSince	
mov	[esp+9Ch+var_9C], eax
call	xmlnode_set_attrib
jmp	loc_61C5062B
align 4
mov	[esp+9Ch+var_94], ebp
mov	[esp+9Ch+var_98], offset aMaxstanzas 
mov	[esp+9Ch+var_9C], eax
mov	[esp+9Ch+var_70], eax
call	xmlnode_set_attrib
mov	eax, [esp+9Ch+var_70]
jmp	loc_61C50609
align 4
xor	edi, edi
jmp	loc_61C50598
align 4
mov	ecx, [esp+9Ch+var_68]
mov	[esp+9Ch+var_9C], ecx
call	g_strdup
mov	[esp+9Ch+var_9C], offset aHandle 
mov	[esp+9Ch+var_70], eax
call	g_strdup
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx+10h]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_insert
mov	[esp+9Ch+var_9C], esi
call	g_strdup
mov	[esp+9Ch+var_9C], offset aRoom 
mov	[esp+9Ch+var_70], eax
call	g_strdup
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	ecx, [esp+9Ch+var_6C]
mov	eax, [ecx+10h]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_insert
mov	[esp+9Ch+var_9C], ebp
call	g_strdup
mov	[esp+9Ch+var_9C], offset aServer 
mov	[esp+9Ch+var_70], eax
call	g_strdup
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx+10h]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_insert
jmp	loc_61C50405
call	__stack_chk_fail
align 4
public jabber_chat_join
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edx, [edi+1Ch]
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_58], offset aRoom 
mov	[esp+5Ch+var_5C], ebx
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+5Ch+var_58], offset aServer 
mov	[esp+5Ch+var_5C], ebx
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aHandle 
mov	[esp+5Ch+var_5C], ebx
call	g_hash_table_lookup
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_58], offset aPassword_1 
mov	[esp+5Ch+var_5C], ebx
call	g_hash_table_lookup
mov	[esp+5Ch+var_30], eax
test	esi, esi
jz	loc_61C50A30
test	ebp, ebp
jz	loc_61C50A30
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	loc_61C50B30
mov	[esp+5Ch+var_5C], esi
call	jabber_nodeprep_validate
test	eax, eax
jz	loc_61C50958
mov	[esp+5Ch+var_5C], ebp
call	jabber_domain_validate
test	eax, eax
jz	loc_61C50A94
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	jabber_resourceprep_validate
test	eax, eax
jz	loc_61C50A48
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], offset aS@S_0	
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_5C], eax
call	jabber_id_new
mov	esi, eax
mov	[esp+5Ch+var_5C], edi
call	g_free
test	esi, esi
jz	loc_61C509FC
mov	[esp+5Ch+var_48], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], eax
mov	eax, [esi+4]
mov	[esp+5Ch+var_54], eax
mov	eax, [esi]
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	jabber_join_chat
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C50B28
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_id_free
align 4
mov	[esp+5Ch+var_58], offset aSIsNotAValidRo 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_58], offset aInvalidRoomNam 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aInvalidRoomNam 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	purple_notify_message
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	purple_serv_got_join_chat_failed
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C50B28
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+var_48], offset aJabber_chat_jo 
mov	[esp+5Ch+var_4C], 198h
mov	[esp+5Ch+var_50], offset aChat_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_1 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C50B28
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aSIsNotAValid_0 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_58], offset aInvalidRoomHan 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aInvalidRoomHan 
jmp	loc_61C50998
align 4
mov	[esp+5Ch+var_58], offset aSIsNotAValidSe 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_58], offset aInvalidServerN 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aInvalidServerN 
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	purple_notify_message
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	purple_serv_got_join_chat_failed
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_61C509EC
			
call	__stack_chk_fail
align 10h
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+5Ch]
mov	eax, [eax]
mov	[esp+5Ch+var_38], eax
jmp	loc_61C508A5
align 4
public jabber_chat_destroy
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	esi, [eax]
mov	edx, [eax+8]
mov	[esp+2Ch+var_24], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	ebx, eax
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50BA0
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 4
public jabber_chat_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_61C50BD1
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	purple_request_close
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50C21
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public jabber_chat_find_buddy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_chat_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C50C64
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_conv_chat_find_user
call	__stack_chk_fail
align 4
public jabber_chat_buddy_real_name
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_id
mov	ebx, eax
test	eax, eax
jz	short loc_61C50D04
mov	[esp+2Ch+var_28], esi
mov	eax, [eax+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C50CD4
mov	eax, [eax+4]
test	eax, eax
jz	short loc_61C50CD4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C50D08
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	g_strdup
align 4
			
mov	[esp+2Ch+var_20], esi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@SS 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C50D08
add	esp, 24h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_61C50CF2
			
call	__stack_chk_fail
align 10h
public jabber_chat_request_room_configure
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C50E41
mov	dword ptr [ebx+28h], 0
mov	eax, [ebx+1Ch]
test	eax, eax
jz	loc_61C50DD0
mov	[esp+3Ch+var_34], offset aHttpJabber_o_3 
mov	[esp+3Ch+var_38], 1
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aS@S_0	
call	g_strdup_printf
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aTo_2 
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset sub_61C4F96C
mov	[esp+3Ch+var_3C], esi
call	jabber_iq_set_callback
mov	[esp+3Ch+var_3C], esi
call	jabber_iq_send
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C50E54
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 10h
mov	[esp+3Ch+var_38], offset aThisRoomIsNotC 
mov	[esp+3Ch+var_3C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+3Ch+var_38], offset aRoomConfigurat 
mov	[esp+3Ch+var_3C], offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	[esp+3Ch+var_38], offset aRoomConfigurat 
mov	[esp+3Ch+var_3C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], edi
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_notify_message
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50E54
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public jabber_chat_create_instant_room
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C50F40
mov	dword ptr [ebx+28h], 0
mov	[esp+2Ch+var_24], offset aHttpJabber_o_3 
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+2Ch+var_28], offset aQuery_3 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	[esp+2Ch+var_28], offset asc_61C7D896 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	ebx, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_2 
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aJabberXData_1	
mov	[esp+2Ch+var_2C], edi
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], offset aSubmit 
mov	[esp+2Ch+var_28], offset aType_3 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50F53
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C50F53
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_chat_register
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C51000
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_24], offset aJabberIqRegist 
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aTo_2 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C4F724
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51012
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_iq_send
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51012
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public jabber_chat_change_topic
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 44h
call	g_malloc0
mov	ebx, eax
mov	eax, [esi]
mov	[ebx], eax
mov	dword ptr [ebx+4], 2
mov	eax, [esi+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	[ebx+1Ch], eax
test	edi, edi
jz	short loc_61C51070
cmp	byte ptr [edi],	0
jnz	short loc_61C510A4
mov	[esp+2Ch+var_2C], offset byte_61C7D770
call	g_strdup
mov	[ebx+20h], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_message_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C510B1
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_message_free
align 4
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+20h], eax
jmp	short loc_61C5107F
call	__stack_chk_fail
align 4
public jabber_chat_set_topic
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_id
test	eax, eax
jz	short loc_61C5110C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5111E
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_chat_change_topic
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5111E
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public jabber_chat_change_nick
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+1Ch]
test	eax, eax
jz	loc_61C5121C
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+3Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+3Ch+Time],	eax
call	purple_account_get_active_status
lea	edx, [esp+3Ch+var_14]
mov	[esp+3Ch+var_30], edx
lea	edx, [esp+3Ch+var_18]
mov	[esp+3Ch+var_34], edx
lea	edx, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+Time],	eax
call	purple_status_to_jabber
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx]
mov	[esp+3Ch+Time],	eax
call	jabber_presence_create_js
mov	esi, eax
mov	[esp+3Ch+var_30], edi
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	offset aS@SS 
call	g_strdup_printf
mov	edi, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aTo_2 
mov	[esp+3Ch+Time],	esi
call	xmlnode_set_attrib
mov	[esp+3Ch+Time],	edi
call	g_free
mov	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+Time],	eax
call	g_free
mov	[esp+3Ch+var_38], esi
mov	eax, [ebx]
mov	[esp+3Ch+Time],	eax
call	jabber_send
mov	[esp+3Ch+Time],	esi
call	xmlnode_free
mov	eax, 1
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5126F
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+Time],	0 
call	time
mov	edi, eax
mov	[esp+3Ch+var_38], offset aNickChangingNo 
mov	[esp+3Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	esi, eax
mov	eax, [ebx+18h]
mov	[esp+3Ch+Time],	eax
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_2C], edi
mov	[esp+3Ch+var_30], 4
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset byte_61C7D770
mov	[esp+3Ch+Time],	eax
call	purple_conv_chat_write
xor	eax, eax
jmp	short loc_61C51204
call	__stack_chk_fail
public jabber_chat_part
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+0Ch]
mov	[esp+3Ch+var_30], eax
mov	eax, [esi+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esi+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aS@SS 
call	g_strdup_printf
mov	edi, eax
mov	[esp+3Ch+var_3C], offset aPresence_0 
call	xmlnode_new
mov	ebx, eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aTo_2 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset aUnavailable 
mov	[esp+3Ch+var_38], offset aType_3 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
test	ebp, ebp
jz	short loc_61C51313
mov	[esp+3Ch+var_38], offset aStatus_0 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_data
mov	[esp+3Ch+var_38], ebx
mov	eax, [esi]
mov	[esp+3Ch+var_3C], eax
call	jabber_send
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51345
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
align 4
public jabber_chat_leave
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_id
mov	ebx, eax
test	eax, eax
jz	short loc_61C5138F
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_part
mov	dword ptr [ebx+30h], 1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C513A0
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_roomlist_room_serialize
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+8]
mov	edx, [eax+4]
mov	edx, [edx]
mov	[esp+2Ch+var_24], edx
mov	eax, [eax]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C513E8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_roomlist_get_list
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	esi, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+1Ch]
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_61C5141B
mov	[esp+7Ch+var_7C], eax
call	purple_roomlist_unref
mov	eax, [ebx+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_account
mov	[esp+7Ch+var_7C], eax
call	purple_roomlist_new
mov	[ebx+34h], eax
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], offset aRoom 
mov	[esp+7Ch+var_78], offset byte_61C7D770
mov	[esp+7Ch+var_7C], 2
call	purple_roomlist_field_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], 0
call	g_list_append
mov	edi, eax
mov	[esp+7Ch+var_70], 1
mov	[esp+7Ch+var_74], offset aServer 
mov	[esp+7Ch+var_78], offset byte_61C7D770
mov	[esp+7Ch+var_7C], 2
call	purple_roomlist_field_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	g_list_append
mov	edi, eax
mov	[esp+7Ch+var_78], offset aDescription_0	
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset aDescription_1	
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], 2
call	purple_roomlist_field_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	g_list_append
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+34h]
mov	[esp+7Ch+var_7C], eax
call	purple_roomlist_set_fields
mov	[esp+7Ch+var_7C], esi
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aCancel_1 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aFindRooms 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	ecx, eax
mov	eax, [ebx+30h]
test	eax, eax
jz	loc_61C51600
mov	eax, [eax]
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aSelectAConfere 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_3C], ecx
call	libintl_dgettext
mov	[esp+7Ch+var_34], eax
mov	[esp+7Ch+var_78], offset aEnterAConferen 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aEnterAConferen 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
mov	[esp+7Ch+var_4C], ebp
mov	[esp+7Ch+var_50], offset sub_61C4ED00
mov	[esp+7Ch+var_54], edi
mov	[esp+7Ch+var_58], offset loc_61C4F204
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_5C], ecx
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	ecx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_6C], ecx
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_70], ecx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_input
mov	eax, [ebx+34h]
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5160D
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+7Ch+var_30], 0
jmp	loc_61C5152F
call	__stack_chk_fail
align 4
public jabber_roomlist_cancel
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	esi, [eax+1Ch]
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	purple_roomlist_set_in_progress
mov	eax, [esi+34h]
cmp	eax, ebx
jz	short loc_61C51660
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51681
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	dword ptr [esi+34h], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51681
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_roomlist_unref
			
call	__stack_chk_fail
align 4
public jabber_chat_track_handle
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], 8
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx], eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C516F2
mov	[esp+3Ch+arg_8], ebx
mov	eax, [ebx]
mov	[esp+3Ch+arg_4], eax
mov	eax, [ebp+2Ch]
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_replace
call	__stack_chk_fail
align 4
public jabber_chat_remove_handle
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5172E
mov	[esp+1Ch+arg_4], edx
mov	eax, [eax+2Ch]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_hash_table_remove
call	__stack_chk_fail
align 4
public jabber_chat_ban_user
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Val], esi
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+Str], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_61C51868
mov	ebp, [eax+4]
test	ebp, ebp
jz	loc_61C51868
mov	[esp+3Ch+var_34], offset aHttpJabber_o_7 
mov	[esp+3Ch+Val], 0
mov	eax, [ebx]
mov	[esp+3Ch+Str], eax
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], offset aS@S_0 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Val], offset aTo_2 
mov	eax, [esi+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+Str], ebx
call	g_free
mov	[esp+3Ch+Val], offset aQuery_3 
mov	eax, [esi+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_get_child
mov	[esp+3Ch+Val], offset aItem_1 
mov	[esp+3Ch+Str], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Val], offset aJid_2 
mov	[esp+3Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset aOutcast 
mov	[esp+3Ch+Val], offset aAffiliation 
mov	[esp+3Ch+Str], ebx
call	xmlnode_set_attrib
test	edi, edi
jz	short loc_61C51844
mov	[esp+3Ch+Val], offset aReason 
mov	[esp+3Ch+Str], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+Val], edi
mov	[esp+3Ch+Str], eax
call	xmlnode_insert_data
mov	[esp+3Ch+Str], esi
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51888
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+3Ch+Val], 40h 
mov	[esp+3Ch+Str], esi 
call	strchr
test	eax, eax
jz	short loc_61C51884
mov	ebp, esi
jmp	loc_61C51774
align 4
xor	eax, eax
jmp	short loc_61C51851
call	__stack_chk_fail
align 10h
public jabber_chat_affiliate_user
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Val], esi
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+Str], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_61C51998
mov	edi, [eax+4]
test	edi, edi
jz	loc_61C51998
mov	[esp+3Ch+var_34], offset aHttpJabber_o_7 
mov	[esp+3Ch+Val], 0
mov	eax, [ebx]
mov	[esp+3Ch+Str], eax
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+Val], eax
mov	[esp+3Ch+Str], offset aS@S_0 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Val], offset aTo_2 
mov	eax, [esi+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+Str], ebx
call	g_free
mov	[esp+3Ch+Val], offset aQuery_3 
mov	eax, [esi+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_get_child
mov	[esp+3Ch+Val], offset aItem_1 
mov	[esp+3Ch+Str], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+Val], offset aJid_2 
mov	[esp+3Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Val], offset aAffiliation 
mov	[esp+3Ch+Str], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+Str], esi
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C519B8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+3Ch+Val], 40h 
mov	[esp+3Ch+Str], esi 
call	strchr
test	eax, eax
jz	short loc_61C519B4
mov	edi, esi
jmp	loc_61C518D0
align 4
xor	eax, eax
jmp	short loc_61C51981
call	__stack_chk_fail
align 10h
public jabber_chat_affiliation_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_o_7 
mov	[esp+2Ch+var_28], 1
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aQuery_3 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	[esp+2Ch+var_28], offset aItem_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aAffiliation 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esi+14h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_61C4FE18
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51A94
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public jabber_chat_role_user
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+2Ch]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	loc_61C51BD8
mov	eax, [eax]
test	eax, eax
jz	loc_61C51BD8
mov	[esp+4Ch+var_44], offset aHttpJabber_o_7 
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS@S_0	
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aTo_2 
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_48], offset aQuery_3 
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_48], offset aItem_1 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aNick_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aRole_1 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
test	edi, edi
jz	short loc_61C51BB7
mov	[esp+4Ch+var_48], offset aReason 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51BDC
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
xor	eax, eax
jmp	short loc_61C51BC4
call	__stack_chk_fail
align 4
public jabber_chat_role_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_o_7 
mov	[esp+2Ch+var_28], 1
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aQuery_3 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	[esp+2Ch+var_28], offset aItem_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aRole_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esi+14h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_61C4FC54
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51CB8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public jabber_chat_disco_traffic
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aS@S_0	
call	g_strdup_printf
mov	edi, eax
mov	[esp+2Ch+var_24], offset aHttpJabber_o_8 
mov	[esp+2Ch+var_28], 1
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aTo_2 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aQuery_3 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	[esp+2Ch+var_24], offset aHttpJabber_o_9 
mov	[esp+2Ch+var_28], offset aNode_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esi+14h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_61C4FC10
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51D89
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
call	__stack_chk_fail
align 10h
public jabber_chat_all_participants_have_capability
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_20], 1
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aS@S_0	
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C51E34
mov	[esp+3Ch+var_1C], edi
lea	edx, [esp+3Ch+var_20]
mov	[esp+3Ch+var_18], edx
mov	[esp+3Ch+var_14], eax
lea	eax, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset loc_61C4EC8C
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_foreach
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51E3E
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_20], 0
jmp	short loc_61C51E12
call	__stack_chk_fail
align 4
public jabber_chat_get_num_participants
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C51E72
mov	eax, [eax+2Ch]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_hash_table_size
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C51EC4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public jabber_data_create_from_data
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 13Ch
mov	edi, [esp+14Ch+arg_0]
mov	esi, [esp+14Ch+arg_4]
mov	ecx, [esp+14Ch+arg_8]
mov	edx, [esp+14Ch+arg_C]
mov	[esp+14Ch+var_130], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+14Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_61C51FE8
test	esi, esi
jnz	short loc_61C51F50
mov	[esp+14Ch+var_144], offset aSize0 
mov	[esp+14Ch+var_148], offset aJabber_data_cr 
mov	[esp+14Ch+var_14C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+14Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5202F
add	esp, 13Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
test	ecx, ecx
jz	loc_61C5200C
mov	[esp+14Ch+var_14C], 14h
mov	[esp+14Ch+var_138], ecx
call	g_malloc0
mov	ebx, eax
mov	[esp+14Ch+var_144], offset aSha1_4 
mov	[esp+14Ch+var_148], esi
mov	[esp+14Ch+var_14C], edi
call	jabber_calculate_data_hash
mov	[esp+14Ch+var_140], eax
mov	[esp+14Ch+var_144], offset aSha1S@bob_xmpp 
mov	[esp+14Ch+var_148], 100h
lea	ebp, [esp+14Ch+var_120]
mov	[esp+14Ch+var_14C], ebp
mov	[esp+14Ch+var_134], eax
call	g_snprintf
mov	edx, [esp+14Ch+var_134]
mov	[esp+14Ch+var_14C], edx
call	g_free
mov	[esp+14Ch+var_14C], ebp
call	g_strdup
mov	[ebx], eax
mov	ecx, [esp+14Ch+var_138]
mov	[esp+14Ch+var_14C], ecx
call	g_strdup
mov	[ebx+4], eax
mov	[ebx+8], esi
mov	edx, [esp+14Ch+var_130]
mov	[ebx+10h], edx
mov	[esp+14Ch+var_148], esi
mov	[esp+14Ch+var_14C], edi
call	g_memdup
mov	[ebx+0Ch], eax
jmp	loc_61C51F2E
align 4
mov	[esp+14Ch+var_144], offset aRawdataNull	
mov	[esp+14Ch+var_148], offset aJabber_data_cr 
mov	[esp+14Ch+var_14C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_61C51F2E
align 4
mov	[esp+14Ch+var_144], offset aTypeNull 
mov	[esp+14Ch+var_148], offset aJabber_data_cr 
mov	[esp+14Ch+var_14C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_61C51F2E
call	__stack_chk_fail
public jabber_data_create_from_xml
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C52130
mov	esi, [ebx]
mov	edi, offset aData 
mov	ecx, 5
repe cmpsb
jnz	loc_61C52150
mov	[esp+3Ch+var_38], offset aCid 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+3Ch+var_38], offset aType_4 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	edi, eax
test	esi, esi
jz	loc_61C52168
test	eax, eax
jz	loc_61C52168
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_data
mov	ebp, eax
test	eax, eax
jz	short loc_61C52110
cmp	byte ptr [eax],	0
jz	short loc_61C52110
mov	[esp+3Ch+var_3C], 14h
call	g_malloc0
mov	ebx, eax
lea	eax, [eax+8]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	purple_base64_decode
mov	[ebx+0Ch], eax
mov	[esp+3Ch+var_3C], ebp
call	g_free
mov	eax, [ebx+0Ch]
test	eax, eax
jz	loc_61C52183
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx], eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+4], eax
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C521A6
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+3Ch+var_38], offset aDataElementWas 
mov	[esp+3Ch+var_3C], offset aJabber_7 
call	purple_debug_error
mov	[esp+3Ch+var_3C], ebp
call	g_free
xor	ebx, ebx
jmp	short loc_61C520F5
mov	[esp+3Ch+var_34], offset aTagNull 
mov	[esp+3Ch+var_38], offset aJabber_data__0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C520F5
mov	[esp+3Ch+var_38], offset aInvalidDataEle 
mov	[esp+3Ch+var_3C], offset aJabber_7 
call	purple_debug_error
xor	ebx, ebx
jmp	short loc_61C520F5
			
mov	[esp+3Ch+var_38], offset aCidOrTypeMissi 
mov	[esp+3Ch+var_3C], offset aJabber_7 
call	purple_debug_error
xor	ebx, ebx
jmp	loc_61C520F5
mov	[esp+3Ch+var_38], offset aMalformedBase6 
mov	[esp+3Ch+var_3C], offset aJabber_7 
call	purple_debug_error
mov	[esp+3Ch+var_3C], ebx
call	g_free
xor	ebx, ebx
jmp	loc_61C520F5
call	__stack_chk_fail
align 4
public jabber_data_destroy
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C521DC
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52208
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	sub_61C51E78
align 4
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data_de 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C52208
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public jabber_data_get_cid
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C5223C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5225C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C52229
call	__stack_chk_fail
align 4
public jabber_data_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C52290
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C522B0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C5227E
call	__stack_chk_fail
align 4
public jabber_data_get_size
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C522E4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52304
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C522D2
call	__stack_chk_fail
align 4
public jabber_data_get_data
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C52338
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52358
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C52326
call	__stack_chk_fail
align 10h
public jabber_data_get_xml_definition
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_61C52410
mov	[esp+2Ch+var_2C], offset aData 
call	xmlnode_new
mov	ebx, eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_base64_encode
mov	edi, eax
mov	[esp+2Ch+var_28], offset aUrnXmppBob 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_namespace
mov	eax, [esi]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCid 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	eax, [esi+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aType_4 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_insert_data
mov	[esp+2Ch+var_2C], edi
call	g_free
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52430
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C523F8
call	__stack_chk_fail
align 4
public jabber_data_get_xhtml_im
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_61C524CC
test	edi, edi
jz	loc_61C524EC
mov	[esp+2Ch+var_2C], offset aImg_2	
call	xmlnode_new
mov	ebx, eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aAlt_0	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	eax, [esi]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aCid_0	
call	g_strconcat
mov	esi, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSrc 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], esi
call	g_free
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5250C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data__5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C524B7
mov	[esp+2Ch+var_24], offset aAltNull 
mov	[esp+2Ch+var_28], offset aJabber_data__5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_61C524B7
call	__stack_chk_fail
align 4
public jabber_data_request
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	ecx, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_34], ecx
mov	ebx, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_30], ebx
mov	ecx, [esp+4Ch+arg_18]
mov	ebx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ebx
xor	ebx, ebx
test	edi, edi
jz	loc_61C52630
test	ebp, ebp
jz	loc_61C52660
test	edx, edx
jz	loc_61C52678
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_3C], ecx
call	jabber_iq_new
mov	ebx, eax
mov	[esp+4Ch+var_4C], offset aData 
call	xmlnode_new
mov	esi, eax
mov	[esp+4Ch+var_48], offset aUrnXmppBob 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aCid 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], 10h
call	g_malloc0
mov	edi, eax
mov	ecx, [esp+4Ch+var_3C]
mov	[eax], ecx
mov	edx, [esp+4Ch+var_38]
mov	[eax+4], edx
mov	ecx, [esp+4Ch+var_34]
mov	[eax+8], ecx
mov	ecx, [esp+4Ch+var_30]
mov	[eax+0Ch], ecx
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTo_3 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset sub_61C52CA0
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_set_callback
mov	[esp+4Ch+var_48], esi
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5268E
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5268E
mov	[esp+4Ch+arg_8], offset	aCidNull 
			
mov	[esp+4Ch+arg_4], offset	aJabber_data_re	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5268E
mov	[esp+4Ch+arg_8], offset	aWhoNull 
jmp	short loc_61C52644
align 4
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5268E
mov	[esp+4Ch+arg_8], offset	aAltNull 
jmp	short loc_61C52644
			
call	__stack_chk_fail
align 4
public jabber_data_find_local_by_alt
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aLookingUpLocal 
mov	[esp+2Ch+var_2C], offset aJabber_7 
call	purple_debug_info
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C96034
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C526E1
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_data_find_local_by_cid
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aLookupLocalDat 
mov	[esp+2Ch+var_2C], offset aJabber_7 
call	purple_debug_info
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C96038
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52735
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_data_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aCid 
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	loc_61C52824
mov	[esp+4Ch+var_4C], eax
call	jabber_data_find_local_by_cid
mov	ebx, eax
test	eax, eax
jz	loc_61C52824
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], ebp
call	jabber_iq_new
mov	ebp, eax
test	edi, edi
jz	short loc_61C527BB
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aTo_3 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aId 
mov	eax, [ebp+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebx
call	jabber_data_get_xml_definition
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	edx, [ebx+10h]
test	edx, edx
jz	short loc_61C52805
mov	[esp+4Ch+var_48], esi
mov	eax, ds:dword_61C96038
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5288E
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
			
mov	[esp+4Ch+var_4C], offset aItemNotFound 
call	xmlnode_new
mov	ebx, eax
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebp
call	jabber_iq_new
mov	ebp, eax
test	edi, edi
jz	short loc_61C5285F
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aTo_3 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aId 
mov	eax, [ebp+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], ebx
mov	eax, [ebp+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
jmp	loc_61C52805
call	__stack_chk_fail
align 4
public jabber_data_find_remote_by_cid
			
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_61C9603C
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aLookupRemoteDa 
mov	[esp+4Ch+var_4C], offset aJabber_7 
mov	[esp+4Ch+var_20], eax
call	purple_debug_info
mov	eax, [esp+4Ch+var_20]
test	eax, eax
jz	short loc_61C528FC
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C52964
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [edi+5Ch]
mov	[esp+4Ch+var_38], ebx
mov	[esp+4Ch+var_3C], esi
mov	edx, [eax+8]
mov	[esp+4Ch+var_40], edx
mov	edx, [eax+4]
mov	[esp+4Ch+var_44], edx
mov	eax, [eax]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS@SSSS 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aDidnTFindBobOb 
mov	[esp+4Ch+var_4C], offset aJabber_7 
call	purple_debug_info
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_61C9603C
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_20], eax
call	g_free
mov	eax, [esp+4Ch+var_20]
jmp	short loc_61C528E6
call	__stack_chk_fail
align 4
public jabber_data_associate_local
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C52A04
mov	[esp+2Ch+var_2C], ebx
call	jabber_data_get_cid
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aAssociatingLoc 
mov	[esp+2Ch+var_2C], offset aJabber_7 
call	purple_debug_info
test	esi, esi
jz	short loc_61C529CD
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96034
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	[esp+2Ch+var_2C], ebx
call	jabber_data_get_cid
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96038
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C52A22
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aDataNull_1 
mov	[esp+2Ch+var_28], offset aJabber_data_as 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C529F2
call	__stack_chk_fail
align 4
public jabber_data_associate_remote
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_3C], edx
mov	ebp, [esp+6Ch+arg_4]
mov	ebx, [esp+6Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], ecx
xor	ecx, ecx
test	ebx, ebx
jz	loc_61C52B84
mov	[esp+6Ch+var_6C], ebx
call	jabber_data_get_cid
mov	esi, eax
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset a@_0 
mov	[esp+6Ch+var_6C], eax
call	g_strsplit
mov	edi, eax
test	eax, eax
jz	short loc_61C52A8C
mov	[esp+6Ch+var_6C], edi
call	g_strv_length
cmp	eax, 2
jz	loc_61C52B14
			
mov	[esp+6Ch+var_6C], edi
call	g_strfreev
mov	[esp+6Ch+var_6C], ebx
call	jabber_data_get_cid
mov	ecx, [esp+6Ch+var_3C]
mov	edx, [ecx+5Ch]
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], ebp
mov	eax, [edx+8]
mov	[esp+6Ch+var_60], eax
mov	eax, [edx+4]
mov	[esp+6Ch+var_64], eax
mov	eax, [edx]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], offset aS@SSSS 
call	g_strdup_printf
mov	esi, eax
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], offset aAssociatingRem 
mov	[esp+6Ch+var_6C], offset aJabber_7 
call	purple_debug_info
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C52C9A
mov	[esp+6Ch+arg_8], ebx
mov	[esp+6Ch+arg_4], esi
mov	eax, ds:dword_61C9603C
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_insert
align 4
mov	[esp+6Ch+var_68], offset aBob_xmpp_org 
mov	eax, [edi+4]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C52A8C
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset asc_61C7DF1C 
mov	eax, [edi]
mov	[esp+6Ch+var_6C], eax
call	g_strsplit
mov	[esp+6Ch+var_38], eax
test	eax, eax
jz	short loc_61C52B5E
mov	[esp+6Ch+var_6C], eax
call	g_strv_length
cmp	eax, 2
jz	short loc_61C52BB8
mov	[esp+6Ch+var_68], offset aMalformedBobCi 
mov	[esp+6Ch+var_6C], offset aJabber_7 
call	purple_debug_warning
			
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_strfreev
jmp	loc_61C52A8C
align 4
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C52C9A
mov	[esp+6Ch+arg_8], offset	aDataNull_1 
mov	[esp+6Ch+arg_4], offset	aJabber_data__6	
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+6Ch+var_38]
mov	eax, [eax]
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+var_38]
mov	eax, [eax+4]
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_6C], ebx
call	jabber_data_get_size
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_40], eax
call	jabber_data_get_data
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], eax
call	jabber_calculate_data_hash
test	eax, eax
jz	short loc_61C52C79
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_40], eax
call	purple_strequal
test	eax, eax
mov	ecx, [esp+6Ch+var_40]
jz	short loc_61C52C4C
mov	[esp+6Ch+var_6C], ecx
call	g_free
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_strfreev
mov	[esp+6Ch+var_6C], edi
call	g_strfreev
mov	[esp+6Ch+var_6C], ebx
call	jabber_data_get_cid
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	esi, eax
jmp	loc_61C52ACD
mov	[esp+6Ch+var_60], ecx
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], offset aUnableToValida 
mov	[esp+6Ch+var_6C], offset aJabber_7 
call	purple_debug_warning
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], ecx
call	g_free
jmp	loc_61C52B72
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aUnableToVali_0 
mov	[esp+6Ch+var_6C], offset aJabber_7 
call	purple_debug_warning
jmp	loc_61C52B72
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_3C], edx
mov	edi, [esp+5Ch+arg_10]
mov	ebx, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edx, [ebx]
mov	[esp+5Ch+var_44], edx
mov	ebp, [ebx+4]
mov	edx, [ebx+8]
mov	[esp+5Ch+var_38], edx
mov	edx, [ebx+0Ch]
mov	[esp+5Ch+var_40], edx
mov	[esp+5Ch+var_58], offset aData 
mov	[esp+5Ch+var_5C], edi
call	xmlnode_get_child
mov	esi, eax
mov	[esp+5Ch+var_58], offset aItemNotFound 
mov	[esp+5Ch+var_5C], edi
call	xmlnode_get_child
test	esi, esi
jz	short loc_61C52D16
cmp	[esp+5Ch+var_3C], 2
jz	short loc_61C52D7C
test	eax, eax
jz	short loc_61C52D64
mov	[esp+5Ch+var_58], offset aResponderDidnT 
mov	[esp+5Ch+var_5C], offset aJabber_7 
call	purple_debug_info
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], 0
mov	edx, [esp+5Ch+var_40]
call	edx
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C52DC7
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_58], offset aUnknownRespons 
mov	[esp+5Ch+var_5C], offset aJabber_7 
call	purple_debug_warning
jmp	short loc_61C52D2E
align 4
mov	[esp+5Ch+var_5C], esi
call	jabber_data_create_from_xml
test	eax, eax
jz	short loc_61C52DB0
mov	ecx, [esp+5Ch+var_38]
test	ecx, ecx
jnz	short loc_61C52DB0
mov	[esp+5Ch+var_54], eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
mov	[esp+5Ch+var_48], eax
call	jabber_data_associate_remote
mov	eax, [esp+5Ch+var_48]
			
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], eax
mov	edx, [esp+5Ch+var_40]
call	edx
jmp	short loc_61C52D47
call	__stack_chk_fail
public jabber_data_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aCreatingHashTa 
mov	[esp+2Ch+var_2C], offset aJabber_7 
call	purple_debug_info
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C96034, eax
mov	[esp+2Ch+var_20], offset sub_61C51E78
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C96038, eax
mov	[esp+2Ch+var_20], offset sub_61C51E78
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C9603C, eax
mov	[esp+2Ch+var_24], offset jabber_data_parse
mov	[esp+2Ch+var_28], offset aUrnXmppBob 
mov	[esp+2Ch+var_2C], offset aData 
call	jabber_iq_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C52E95
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_data_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aDestroyingHash 
mov	[esp+2Ch+var_2C], offset aJabber_7 
call	purple_debug_info
mov	eax, ds:dword_61C96034
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_61C96038
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_61C9603C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C9603C, 0
mov	ds:dword_61C96038, 0
mov	ds:dword_61C96034, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C52F13
add	esp, 2Ch
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_38], edx
mov	ebx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_3C], ebx
mov	ebx, [esp+5Ch+arg_8]
mov	edx, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_40], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ecx
xor	ecx, ecx
mov	[esp+5Ch+var_54], offset aHttpJabber__10 
mov	[esp+5Ch+var_58], offset aQuery_4 
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
cmp	ebx, 2
jz	loc_61C5302C
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C53028
mov	edx, [eax+8]
test	edx, edx
jz	loc_61C53020
mov	[esp+5Ch+var_54], 1
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C53020
mov	edx, [ebx+8]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find_resource
mov	esi, eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_id_free
test	esi, esi
jz	short loc_61C53028
mov	edx, [esi+18h]
mov	eax, [esp+5Ch+var_40]
test	eax, eax
jz	short loc_61C52FFB
mov	ebx, [esp+5Ch+var_40]
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C52FFB
mov	ecx, [ebx]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	ebx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], ebx
call	eax
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C53445
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+arg_0], edx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
			
mov	[esp+5Ch+var_5C], ebx
call	jabber_id_free
			
xor	edx, edx
jmp	short loc_61C52FCD
mov	esi, eax
test	eax, eax
jz	loc_61C52F6C
mov	ebx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], ebx
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C53240
mov	ebp, [eax+8]
test	ebp, ebp
jz	loc_61C53238
mov	[esp+5Ch+var_54], 1
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	jabber_buddy_find
test	eax, eax
jz	loc_61C53238
mov	edx, [ebx+8]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find_resource
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_id_free
mov	edi, [esp+5Ch+var_30]
test	edi, edi
jz	loc_61C5344A
mov	eax, [esp+5Ch+var_30]
mov	eax, [eax+18h]
mov	[esp+5Ch+var_34], eax
			
mov	ebp, [esi+18h]
test	ebp, ebp
jnz	short loc_61C530DB
jmp	loc_61C53290
align 4
mov	edi, offset aFeature_0 
mov	esi, eax
mov	ecx, 8
repe cmpsb
jz	loc_61C53258
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	loc_61C53290
			
mov	esi, [ebp+8]
test	esi, esi
jnz	short loc_61C530D0
mov	eax, [ebp+0]
mov	edi, offset aIdentity_0	
mov	esi, eax
mov	ecx, 9
repe cmpsb
jnz	short loc_61C530BC
mov	[esp+5Ch+var_58], offset aCategory_0 
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aType_5 
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_attrib
test	ebx, ebx
jz	short loc_61C530D0
test	eax, eax
jz	short loc_61C530D0
mov	edi, offset aConference	
mov	ecx, 0Bh
mov	esi, ebx
repe cmpsb
jnz	short loc_61C53143
mov	edi, offset aText 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jz	loc_61C53344
mov	edi, offset aDirectory 
mov	ecx, 0Ah
mov	esi, ebx
repe cmpsb
jnz	short loc_61C53167
mov	edi, offset aUser 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jz	loc_61C53378
mov	edi, offset aProxy 
mov	ecx, 6
mov	esi, ebx
repe cmpsb
jnz	loc_61C530D0
mov	edi, offset aBytestreams 
mov	ecx, 0Ch
mov	esi, eax
repe cmpsb
jnz	loc_61C530D0
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aFoundBytestrea 
mov	[esp+5Ch+var_5C], offset aJabber_8 
call	purple_debug_info
mov	[esp+5Ch+var_5C], 10h
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[ebx], eax
mov	[esp+5Ch+var_58], ebx
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx+44h]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	edx, [esp+5Ch+var_38]
mov	[edx+44h], eax
mov	[esp+5Ch+var_54], offset aHttpJabber__11 
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edx
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_4 
mov	eax, [esi+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_61C53458
mov	[esp+5Ch+var_5C], esi
call	jabber_iq_set_callback
mov	[esp+5Ch+var_5C], esi
call	jabber_iq_send
jmp	loc_61C530D0
align 4
			
mov	[esp+5Ch+var_5C], ebx
call	jabber_id_free
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_34], 0
jmp	loc_61C530AD
align 4
mov	[esp+5Ch+var_58], offset aVar_1	
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	loc_61C530D0
mov	edi, offset aHttpJabber__12 
mov	ecx, 1Eh
mov	esi, eax
repe cmpsb
jnz	short loc_61C532F8
or	[esp+5Ch+var_34], 4
mov	ebp, [ebp+20h]
test	ebp, ebp
jnz	loc_61C530DB
			
mov	ebx, [esp+5Ch+var_38]
mov	eax, [ebx+30h]
mov	[esp+5Ch+var_5C], eax
call	g_list_reverse
mov	[ebx+30h], eax
mov	eax, [esp+5Ch+var_34]
or	eax, 80000000h
mov	ebx, [esp+5Ch+var_30]
test	ebx, ebx
jz	short loc_61C532BA
mov	edx, [esp+5Ch+var_30]
mov	[edx+18h], eax
mov	ecx, [esp+5Ch+var_40]
test	ecx, ecx
jz	loc_61C52FFB
mov	ebx, [esp+5Ch+var_40]
mov	edx, [ebx+4]
test	edx, edx
jz	loc_61C52FFB
mov	ecx, [ebx]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], eax
mov	ebx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], ebx
mov	ebx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], ebx
call	edx
jmp	loc_61C52FFB
align 4
mov	edi, offset aHttpJabber__13 
mov	ecx, 34h
mov	esi, eax
repe cmpsb
jnz	short loc_61C53314
or	[esp+5Ch+var_34], 8
jmp	loc_61C530D0
align 4
mov	edi, offset aHttpJabber__11 
mov	ecx, 27h
mov	esi, eax
repe cmpsb
jz	short loc_61C5336C
mov	edi, offset aJabberIqSear_0 
mov	ecx, 11h
mov	esi, eax
repe cmpsb
jnz	short loc_61C5339F
or	[esp+5Ch+var_34], 80h
jmp	loc_61C530D0
align 4
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esp+5Ch+var_58], eax
mov	ebx, [esp+5Ch+var_38]
mov	eax, [ebx+30h]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	[ebx+30h], eax
jmp	loc_61C530D0
align 4
or	[esp+5Ch+var_34], 10h
jmp	loc_61C530D0
align 4
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[esp+5Ch+var_58], eax
mov	ebx, [esp+5Ch+var_38]
mov	eax, [ebx+38h]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	[ebx+38h], eax
jmp	loc_61C530D0
mov	edi, offset aJabberIqRegi_0 
mov	ecx, 13h
mov	esi, eax
repe cmpsb
jnz	short loc_61C533BC
or	[esp+5Ch+var_34], 100h
jmp	loc_61C530D0
mov	edi, offset aUrnXmppPing 
mov	ecx, 0Eh
mov	esi, eax
repe cmpsb
jnz	short loc_61C533D9
or	[esp+5Ch+var_34], 800h
jmp	loc_61C530D0
mov	edi, offset aHttpJabber__14 
mov	ecx, 27h
mov	esi, eax
repe cmpsb
jnz	short loc_61C533F6
or	[esp+5Ch+var_34], 4000h
jmp	loc_61C530D0
mov	edi, offset aHttpJabber__15 
mov	ecx, 24h
mov	esi, eax
repe cmpsb
jnz	short loc_61C53413
or	[esp+5Ch+var_34], 1000h
jmp	loc_61C530D0
mov	edi, offset aHttpJabber__16 
mov	ecx, 1Fh
mov	esi, eax
repe cmpsb
jnz	loc_61C530D0
mov	[esp+5Ch+var_58], offset aRemoteSupports 
mov	[esp+5Ch+var_5C], offset aJabber_8 
call	purple_debug_info
or	[esp+5Ch+var_34], 20h
jmp	loc_61C530D0
call	__stack_chk_fail
mov	[esp+5Ch+var_34], 0
jmp	loc_61C530AD
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], offset aHttpJabber__11 
mov	[esp+5Ch+Str2],	offset aQuery_4	
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child_with_namespace
test	ebx, ebx
jz	short loc_61C534AF
mov	edi, eax
mov	eax, [ebp+0]
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Str1],	ebx 
call	strcmp
test	eax, eax
jz	loc_61C53530
			
mov	ecx, [ebp+0Ch]
mov	eax, [ebp+8]
test	ecx, ecx
jz	loc_61C53614
mov	edi, [ebp+4]
test	edi, edi
jz	loc_61C53624
test	ebx, ebx
jz	loc_61C53634
			
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	offset aDiscoveredByte 
mov	[esp+5Ch+Str1],	offset aJabber_8 
call	purple_debug_info
mov	eax, [ebp+0]
test	eax, eax
jz	loc_61C53640
mov	eax, [ebp+4]
test	eax, eax
jz	loc_61C53640
mov	eax, [ebp+8]
test	eax, eax
jle	loc_61C53640
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C536A5
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
test	edi, edi
jz	loc_61C534AF
mov	[esp+5Ch+Str2],	offset aStreamhost_0 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jz	loc_61C534AF
mov	[esp+5Ch+Str2],	offset aJid_10 
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_attrib
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Str2],	offset aPort_3 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_attrib
mov	[esp+5Ch+Str], eax
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_61C53698
mov	[esp+5Ch+Str2],	ebx 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_61C535B6
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aInvalidJidSFor 
mov	[esp+5Ch+Str1],	offset aJabber_8 
call	purple_debug_error
mov	[esp+5Ch+Str2],	offset aHost_1 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_attrib
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	[ebp+4], eax
mov	[esp+5Ch+Str2],	offset aZeroconf_0 
mov	[esp+5Ch+Str1],	edi
call	xmlnode_get_attrib
mov	[esp+5Ch+Str1],	eax
call	g_strdup
mov	ecx, eax
mov	[ebp+0Ch], eax
mov	eax, [esp+5Ch+Str]
test	eax, eax
jz	loc_61C53690
mov	eax, [esp+5Ch+Str]
mov	[esp+5Ch+Str1],	eax 
call	atoi
mov	[ebp+8], eax
mov	ecx, [ebp+0Ch]
test	ecx, ecx
jnz	loc_61C534BD
mov	ecx, offset byte_61C7E37F
mov	edi, [ebp+4]
test	edi, edi
jnz	loc_61C534C8
mov	edi, offset byte_61C7E37F
test	ebx, ebx
jnz	loc_61C534D0
lea	esi, [esi+0]
mov	ebx, offset byte_61C7E37F
jmp	loc_61C534D0
align 10h
			
mov	[esp+5Ch+Str2],	ebp
mov	eax, [esi+44h]
mov	[esp+5Ch+Str1],	eax
call	g_list_remove
mov	[esi+44h], eax
mov	eax, [ebp+0]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [ebp+4]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [ebp+0Ch]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C536A5
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
mov	eax, [ebp+8]
jmp	loc_61C534B5
mov	[esp+5Ch+var_34], offset aNull_5 
jmp	loc_61C5359A
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+0A8h+var_7C], eax
xor	eax, eax
mov	[esp+0A8h+var_A8], edi
call	jabber_vcard_fetch_mine
mov	eax, [edi+0DCh]
test	eax, eax
jnz	loc_61C53830
mov	[esp+0A8h+var_A8], edi
call	jabber_roster_request
mov	eax, [edi+8Ch]
test	ah, 10h
jnz	loc_61C53850
test	ah, 20h
jnz	loc_61C53840
mov	[esp+0A8h+var_A0], 0
mov	[esp+0A8h+Val],	offset aFt_proxies_0 
mov	eax, [edi+64h]
mov	eax, [eax+0Ch]
mov	[esp+0A8h+var_A8], eax
call	purple_account_get_string
test	eax, eax
jz	loc_61C5381B
mov	[esp+0A8h+var_A0], 0
mov	[esp+0A8h+Val],	offset asc_61C7E41F 
mov	[esp+0A8h+var_A8], eax
call	g_strsplit
mov	[esp+0A8h+var_8C], eax
mov	eax, [eax]
test	eax, eax
jz	loc_61C5380F
mov	ebx, [esp+0A8h+var_8C]
add	ebx, 4
mov	esi, [esp+0A8h+var_8C]
lea	esi, [esi+0]
mov	[esp+0A8h+var_A8], eax
call	g_strchug
mov	[esp+0A8h+var_A8], eax
call	g_strchomp
mov	eax, [esi]
cmp	byte ptr [eax],	0
jz	loc_61C537FF
mov	[esp+0A8h+Val],	3Ah 
mov	[esp+0A8h+var_A8], eax 
call	strchr
test	eax, eax
jz	short loc_61C53782
mov	byte ptr [eax],	0
mov	[esp+0A8h+var_A8], 10h
call	g_malloc0
mov	ebp, eax
mov	eax, [esi]
mov	[esp+0A8h+var_A8], eax
call	g_strdup
mov	[ebp+0], eax
mov	[esp+0A8h+Val],	ebp
mov	eax, [edi+44h]
mov	[esp+0A8h+var_A8], eax
call	g_list_prepend
mov	[edi+44h], eax
mov	[esp+0A8h+var_A0], offset aHttpJabber__11 
mov	[esp+0A8h+Val],	1
mov	[esp+0A8h+var_A8], edi
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebp+0]
mov	[esp+0A8h+var_A0], eax
mov	[esp+0A8h+Val],	offset aTo_4 
mov	eax, [esi+8]
mov	[esp+0A8h+var_A8], eax
call	xmlnode_set_attrib
mov	[esp+0A8h+var_A0], ebp
mov	[esp+0A8h+Val],	offset sub_61C53458
mov	[esp+0A8h+var_A8], esi
call	jabber_iq_set_callback
mov	[esp+0A8h+var_A8], esi
call	jabber_iq_send
mov	esi, ebx
add	ebx, 4
mov	eax, [ebx-4]
test	eax, eax
jnz	loc_61C53750
mov	eax, [esp+0A8h+var_8C]
mov	[esp+0A8h+var_A8], eax
call	g_strfreev
mov	edx, [esp+0A8h+var_7C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C53863
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+0A8h+var_A8], edi
call	jabber_avatar_fetch_mine
jmp	loc_61C536D6
align 10h
mov	[esp+0A8h+var_A8], edi
call	jabber_request_block_list
jmp	loc_61C536F6
align 10h
mov	[esp+0A8h+var_A8], edi
call	jabber_adhoc_server_get_list
mov	eax, [edi+8Ch]
jmp	loc_61C536ED
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	ebx, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_61C53ABC
mov	edx, [ebp+5Ch]
mov	edx, [edx+4]
mov	[esp+5Ch+Str2],	edx 
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C53ABC
cmp	ebx, 3
jz	loc_61C53ABC
mov	[esp+5Ch+Str2],	offset aQuery_4	
mov	[esp+5Ch+Str1],	esi
call	xmlnode_get_child
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_61C53ABC
mov	[esp+5Ch+Str2],	offset aIdentity_0 
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C53A22
mov	[esp+5Ch+var_34], ebp
mov	[esp+5Ch+Str2],	offset aCategory_0 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+5Ch+Str2],	offset aType_5 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	edx, eax
test	ebp, ebp
jz	loc_61C53A0C
test	eax, eax
jz	loc_61C53A0C
mov	edi, offset aPubsub_0 
mov	esi, ebp
mov	ecx, 7
repe cmpsb
jz	loc_61C53ADC
			
mov	[esp+5Ch+Str2],	offset aServer_3 
mov	[esp+5Ch+Str1],	ebp 
mov	[esp+5Ch+var_38], edx
call	strcmp
test	eax, eax
mov	edx, [esp+5Ch+var_38]
jnz	loc_61C53A0C
mov	edi, offset aIm	
mov	esi, edx
mov	ecx, 3
repe cmpsb
jnz	loc_61C53A0C
mov	[esp+5Ch+Str2],	offset aName_4 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	loc_61C53A0C
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+94h]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	[esp+5Ch+Str1],	esi
call	g_strdup
mov	ecx, [esp+5Ch+var_34]
mov	[ecx+94h], eax
mov	edi, offset aGoogleTalk	
mov	ecx, 0Ch
repe cmpsb
jnz	loc_61C53B4C
mov	[esp+5Ch+Str2],	offset aGoogleTalk_0 
mov	[esp+5Ch+Str1],	offset aJabber_8 
call	purple_debug_info
mov	eax, [esp+5Ch+var_34]
mov	dword ptr [eax+90h], 1
call	purple_network_get_stun_ip
test	eax, eax
jz	short loc_61C53A00
call	purple_network_get_stun_ip
mov	[esp+5Ch+Str2],	offset byte_61C7E37F
mov	[esp+5Ch+Str1],	eax
call	purple_strequal
test	eax, eax
jz	short loc_61C53A0C
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	jabber_google_send_jingle_info
			
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	loc_61C538F0
mov	ebp, [esp+5Ch+var_34]
mov	[esp+5Ch+Str2],	offset aFeature_0 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C53A58
jmp	short loc_61C53ABC
align 10h
or	dword ptr [ebp+8Ch], 400h
			
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C53ABC
			
mov	[esp+5Ch+Str2],	offset aVar_1 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C53A4A
mov	esi, offset aGoogleMailNo_1 
mov	edi, eax
mov	ecx, 13h
repe cmpsb
jz	loc_61C53B10
mov	esi, offset aGoogleRoster_1 
mov	edi, eax
mov	ecx, 0Eh
repe cmpsb
jz	short loc_61C53A40
mov	esi, offset aHttpJabber__15 
mov	ecx, 24h
mov	edi, eax
repe cmpsb
jnz	loc_61C53B28
or	dword ptr [ebp+8Ch], 1000h
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C53A58
			
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C53BBF
mov	eax, ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C536AC
align 4
mov	edi, offset aPep 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jnz	loc_61C53938
mov	ecx, [esp+5Ch+var_34]
mov	eax, [ecx+64h]
mov	dword ptr [ecx+0DCh], 1
or	dword ptr [eax+4], 600h
jmp	loc_61C53938
align 10h
or	dword ptr [ebp+8Ch], 200h
mov	[esp+5Ch+Str1],	ebp
call	jabber_gmail_init
jmp	loc_61C53A4A
align 4
mov	esi, offset aUrnXmppBlock_1 
mov	ecx, 12h
mov	edi, eax
repe cmpsb
jnz	loc_61C53A4A
or	dword ptr [ebp+8Ch], 2000h
jmp	loc_61C53A4A
align 4
call	purple_network_get_stun_ip
test	eax, eax
jz	short loc_61C53B72
call	purple_network_get_stun_ip
mov	[esp+5Ch+Str2],	offset byte_61C7E37F
mov	[esp+5Ch+Str1],	eax
call	purple_strequal
test	eax, eax
jz	loc_61C53A0C
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+5Ch]
mov	esi, [eax+4]
mov	eax, [edx+64h]
mov	[esp+5Ch+Str1],	eax
call	purple_connection_get_account
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], offset sub_61C53BC4
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], offset aUdp_0	
mov	[esp+5Ch+Str2],	offset aStun_0 
mov	[esp+5Ch+Str1],	eax
call	purple_srv_resolve_account
mov	edx, [esp+5Ch+var_34]
mov	[edx+4], eax
jmp	loc_61C53A0C
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aGotDSrvRespons 
mov	[esp+3Ch+var_3C], offset aJabber_8 
call	purple_debug_info
mov	dword ptr [ebx+4], 0
test	edi, edi
jle	short loc_61C53C59
mov	eax, [esi+100h]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aLookingUpIpFor 
mov	[esp+3Ch+var_3C], offset aJabber_8 
call	purple_debug_info
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	[esp+3Ch+var_2C], ebx
mov	[esp+3Ch+var_30], offset sub_61C53C74
mov	edx, [esi+100h]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	purple_dnsquery_a_account
mov	[ebx+140h], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C53C6C
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	eax, [esp+6Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C53CDC
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aStunLookupFail 
mov	dword ptr [esp+6Ch+netshort], offset aJabber_8 
call	purple_debug_error
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_free
mov	dword ptr [esi+140h], 0
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C53DBB
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	ebx, ebx
jz	short loc_61C53CC1
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C53D78
mov	ebp, [eax]
movzx	eax, word ptr [ebp+0]
mov	[esp+6Ch+var_60], 2Eh
lea	edi, [esp+6Ch+var_4E]
mov	[esp+6Ch+var_64], edi
cmp	ax, 17h
jz	loc_61C53DA8
lea	edx, [ebp+4]
mov	[esp+6Ch+var_68], edx
mov	dword ptr [esp+6Ch+netshort], eax
call	wpurple_inet_ntop
movzx	eax, word ptr [ebp+2]
mov	dword ptr [esp+6Ch+netshort], eax 
call	ntohs
push	edx
movzx	ebp, ax
mov	eax, [esi+138h]
test	eax, eax
jz	short loc_61C53D3C
mov	dword ptr [esp+6Ch+netshort], eax
call	g_free
mov	dword ptr [esp+6Ch+netshort], edi
call	g_strdup
mov	[esi+138h], eax
mov	[esi+13Ch], ebp
mov	[esp+6Ch+var_60], ebp
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aSetStunIpPortA 
mov	dword ptr [esp+6Ch+netshort], offset aJabber_8 
call	purple_debug_info
mov	dword ptr [esi+140h], 0
xchg	ax, ax
			
mov	[esp+6Ch+var_68], ebx
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_delete_link
mov	ebx, eax
mov	eax, [eax]
mov	dword ptr [esp+6Ch+netshort], eax
call	g_free
mov	[esp+6Ch+var_68], ebx
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C53D78
jmp	loc_61C53CC1
align 4
lea	eax, [ebp+8]
mov	[esp+6Ch+var_68], eax
mov	dword ptr [esp+6Ch+netshort], 17h
jmp	loc_61C53D15
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebx, [esp+3Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_61C53E98
mov	edx, [esi+5Ch]
mov	edx, [edx+4]
mov	[esp+3Ch+Str2],	edx 
mov	[esp+3Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C53E98
cmp	edi, 3
jz	loc_61C53E98
mov	eax, [esi+30h]
test	eax, eax
jz	short loc_61C53E38
lea	esi, [esi+0]
mov	eax, [eax]
mov	[esp+3Ch+Str1],	eax
call	g_free
mov	eax, [esi+30h]
mov	[esp+3Ch+Str2],	eax
mov	[esp+3Ch+Str1],	eax
call	g_list_delete_link
mov	[esi+30h], eax
test	eax, eax
jnz	short loc_61C53E18
mov	[esp+3Ch+Str2],	offset aQuery_4	
mov	[esp+3Ch+Str1],	ebx
call	xmlnode_get_child
mov	[esp+3Ch+Str2],	offset aItem_12	
mov	[esp+3Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C53E98
xchg	ax, ax
mov	[esp+3Ch+Str2],	offset aJid_10 
mov	[esp+3Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	short loc_61C53E8A
mov	[esp+3Ch+Str2],	offset aNode_2 
mov	[esp+3Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C53EAC
			
mov	[esp+3Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C53E60
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C53EFF
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aHttpJabber__10 
mov	[esp+3Ch+Str2],	1
mov	[esp+3Ch+Str1],	esi
call	jabber_iq_new_query
mov	ebp, eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+Str2],	offset aTo_4 
mov	eax, [eax+8]
mov	[esp+3Ch+Str1],	eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Str2],	offset sub_61C52F18
mov	[esp+3Ch+Str1],	ebp
call	jabber_iq_set_callback
mov	[esp+3Ch+Str1],	ebp
call	jabber_iq_send
jmp	short loc_61C53E8A
call	__stack_chk_fail
public jabber_disco_info_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
cmp	eax, 1
jz	loc_61C54014
test	eax, eax
jz	short loc_61C53F50
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C5429C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_new
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aQuery_4 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
mov	[esp+4Ch+var_48], offset aError_1 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+4Ch+var_44], offset aModify 
mov	[esp+4Ch+var_48], offset aType_5 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aBadRequest 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aUrnIetfParam_4 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_set_id
test	esi, esi
jz	short loc_61C53FF1
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aTo_4 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5429C
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	[esp+4Ch+var_48], offset aNode_2 
mov	[esp+4Ch+var_4C], edx
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+4Ch+var_4C], edi
call	jabber_caps_get_own_hash
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset asc_61C7E513 
mov	[esp+4Ch+var_4C], offset aHttpPidgin_im	
call	g_strconcat
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_44], offset aHttpJabber__10 
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_new_query
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_set_id
test	esi, esi
jz	short loc_61C54099
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aTo_4 
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aQuery_4 
mov	ecx, [esp+4Ch+var_3C]
mov	eax, [ecx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_38], eax
test	ebx, ebx
jz	short loc_61C540E8
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aNode_2 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_str_equal
test	eax, eax
jz	loc_61C54208
mov	esi, ds:jabber_identities
test	esi, esi
jz	loc_61C54182
mov	ebp, [esp+4Ch+var_38]
mov	[esp+4Ch+var_30], edi
xchg	ax, ax
mov	ebx, [esi]
mov	[esp+4Ch+var_48], offset aIdentity_0 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
mov	edi, eax
mov	edx, [ebx]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aCategory_0 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	edx, [ebx+4]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aType_5 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	edx, [ebx+0Ch]
test	edx, edx
jz	short loc_61C5415C
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aXmlLang 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_61C54177
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aName_4 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_61C54100
mov	edi, [esp+4Ch+var_30]
mov	ebx, ds:jabber_features
test	ebx, ebx
jz	short loc_61C541D5
mov	ebp, [esp+4Ch+var_38]
mov	esi, [ebx]
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C541A8
mov	edx, [esi]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	eax
test	eax, eax
jz	short loc_61C541CE
mov	[esp+4Ch+var_48], offset aFeature_0 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
mov	edx, [esi]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aVar_1	
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C54190
			
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5429C
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	[esp+4Ch+var_44], offset aError_1 
mov	[esp+4Ch+var_48], offset aType_5 
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_3C]
mov	dword ptr [eax], 3
mov	[esp+4Ch+var_48], offset aError_1 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+4Ch+var_44], offset a404 
mov	[esp+4Ch+var_48], offset aCode_0 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], offset aCancel_2 
mov	[esp+4Ch+var_48], offset aType_5 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aItemNotFound_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aUrnIetfParam_4 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
jmp	loc_61C541D5
			
call	__stack_chk_fail
align 4
public jabber_disco_items_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
cmp	[esp+4Ch+arg_8], 1
jz	short loc_61C542E8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C54388
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aHttpJabber__14 
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new_query
mov	edi, eax
mov	[esp+4Ch+var_48], offset aQuery_4 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_48], offset aNode_2 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C54345
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aNode_2 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_set_id
test	ebx, ebx
jz	short loc_61C5436C
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aTo_4 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C54388
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
			
call	__stack_chk_fail
align 10h
public jabber_disco_items_server
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aHttpJabber__14 
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_4 
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C53DC0
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_send
mov	[esp+2Ch+var_24], offset aHttpJabber__10 
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_4 
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C53868
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C54464
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_disco_info_do
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_id_new
mov	edi, eax
test	eax, eax
jz	short loc_61C544F5
mov	ecx, [eax+8]
test	ecx, ecx
jz	loc_61C54570
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	jabber_buddy_find
test	eax, eax
jz	loc_61C54570
mov	ecx, [edi+8]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], eax
call	jabber_buddy_find_resource
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_34], eax
call	jabber_id_free
mov	eax, [esp+4Ch+var_34]
test	eax, eax
jz	short loc_61C544F5
mov	eax, [eax+18h]
test	eax, eax
js	loc_61C54580
			
mov	[esp+4Ch+var_4C], 8
call	g_malloc0
mov	edi, eax
mov	[eax], ebp
mov	edx, [esp+4Ch+var_30]
mov	[eax+4], edx
mov	[esp+4Ch+var_44], offset aHttpJabber__10 
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aTo_4 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset sub_61C52F18
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_set_callback
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C545A9
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 10h
			
mov	[esp+4Ch+var_4C], edi
call	jabber_id_free
jmp	loc_61C544F5
align 10h
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C545A9
mov	[esp+4Ch+arg_C], ebp
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], ebx
mov	[esp+4Ch+arg_0], esi
mov	edx, [esp+4Ch+var_30]
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
			
call	__stack_chk_fail
align 10h
public jabber_facebook_roster_cleanup
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	edx, [ebx+150h]
test	edx, edx
jz	short loc_61C545F8
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C547B2
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, eax
mov	dword ptr [ebx+150h], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset g_free
mov	[esp+6Ch+var_68], offset g_str_equal
mov	[esp+6Ch+var_6C], offset g_str_hash
call	g_hash_table_new_full
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], edi
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_61C54694
mov	ebp, [esp+6Ch+var_54]
mov	[esp+6Ch+var_50], esi
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+6Ch+var_40], esi
mov	[esp+6Ch+var_6C], esi
call	purple_buddy_get_name
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	jabber_normalize
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	g_hash_table_insert
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C5464C
mov	esi, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], offset aItem_2 
mov	[esp+6Ch+var_6C], esi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C546EA
mov	ebp, [esp+6Ch+var_54]
xchg	ax, ax
mov	[esp+6Ch+var_68], offset aJid_3	
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_get_attrib
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	jabber_normalize
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	g_hash_table_remove
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C546B0
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_68], eax
lea	edi, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], edi
call	g_hash_table_iter_init
jmp	short loc_61C54768
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	purple_buddy_get_local_buddy_alias
mov	ebp, eax
mov	[esp+6Ch+var_68], offset aItem_2 
mov	[esp+6Ch+var_6C], esi
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+6Ch+var_6C], esi
call	xmlnode_get_namespace
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_set_namespace
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aJid_3	
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_set_attrib
mov	[esp+6Ch+var_64], offset aRemove 
mov	[esp+6Ch+var_68], offset aSubscription 
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_set_attrib
test	ebp, ebp
jnz	short loc_61C5479C
			
lea	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], eax
lea	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_hash_table_iter_next
test	eax, eax
jnz	loc_61C54700
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_destroy
jmp	loc_61C545DF
align 4
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aName_5 
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_set_attrib
jmp	short loc_61C54768
call	__stack_chk_fail
align 4
public jabber_facebook_roster_incoming
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	eax, [eax+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	esi, eax
mov	[esp+3Ch+var_38], offset aSubscription 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	[esp+3Ch+var_38], offset aRemove 
mov	[esp+3Ch+var_3C], eax
call	g_strcmp0
test	eax, eax
jnz	short loc_61C54820
			
mov	eax, 1
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C54941
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_38], offset aJid_3	
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	jabber_normalize
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	ebp, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_find_buddy
mov	esi, eax
mov	[esp+3Ch+var_3C], ebp
call	g_free
jmp	short loc_61C54868
mov	[esp+3Ch+var_3C], eax
call	xmlnode_free
mov	[esp+3Ch+var_38], offset aGroup	
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_child
test	eax, eax
jnz	short loc_61C54860
mov	[esp+3Ch+var_38], offset aGroup	
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	edi, eax
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_namespace
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	xmlnode_set_namespace
test	esi, esi
jz	short loc_61C54924
mov	[esp+3Ch+var_3C], esi
call	purple_buddy_get_local_buddy_alias
test	eax, eax
jz	short loc_61C548C6
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aName_5 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_3C], esi
call	purple_buddy_get_group
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aBuddies 
mov	[esp+3Ch+var_3C], offset aPidgin_7 
call	libintl_dgettext
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_group_get_name
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	g_strcmp0
test	eax, eax
jz	short loc_61C54924
test	ebx, ebx
jz	short loc_61C54924
mov	[esp+3Ch+var_3C], ebx
call	purple_group_get_name
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	xmlnode_insert_data
jmp	loc_61C54803
align 4
			
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], offset aBuddies 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_insert_data
jmp	loc_61C54803
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_58], edx
mov	ebx, [esp+9Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], ecx
xor	ecx, ecx
cmp	[esp+9Ch+arg_8], 3
jz	loc_61C54C54
mov	[esp+9Ch+Str2],	offset aMailbox	
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_child
mov	[esp+9Ch+var_4C], eax
test	eax, eax
jz	loc_61C54C54
mov	[esp+9Ch+Str2],	offset aTotalMatched 
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C549B7
cmp	byte ptr [eax],	0
jnz	loc_61C54D5B
mov	[esp+9Ch+Str2],	offset aTo_5 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+9Ch+Str2],	offset aMailThreadInfo 
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C54E10
mov	[esp+9Ch+var_30], 1
mov	[esp+9Ch+var_34], 0
xor	esi, esi
nop
inc	esi
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_next_twin
test	eax, eax
jnz	short loc_61C549F8
mov	[esp+9Ch+var_34], esi
lea	esi, ds:4[esi*4]
mov	[esp+9Ch+Str1],	esi
call	g_malloc0
mov	[esp+9Ch+var_40], eax
mov	[esp+9Ch+Str1],	esi
call	g_malloc0
mov	[esp+9Ch+var_3C], eax
mov	[esp+9Ch+Str1],	esi
call	g_malloc0
mov	[esp+9Ch+var_48], eax
mov	[esp+9Ch+Str1],	esi
call	g_malloc0
mov	[esp+9Ch+var_38], eax
mov	[esp+9Ch+Str2],	offset aTo_5 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	[esp+9Ch+Str1],	eax
call	jabber_get_bare_jid
mov	[esp+9Ch+var_50], eax
mov	[esp+9Ch+Str2],	offset aUrl 
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_attrib
mov	[esp+9Ch+var_44], eax
test	eax, eax
jz	short loc_61C54A7D
cmp	byte ptr [eax],	0
jnz	short loc_61C54A85
mov	[esp+9Ch+var_44], offset aHttpWww_gmail_ 
mov	[esp+9Ch+Str2],	offset aMailThreadInfo 
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
mov	ebp, eax
mov	[esp+9Ch+var_5C], 0
test	eax, eax
jz	loc_61C54BA9
nop
mov	[esp+9Ch+Str2],	offset aSubject	
mov	[esp+9Ch+Str1],	ebp
call	xmlnode_get_child
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+Str2],	offset aSenders	
mov	[esp+9Ch+Str1],	ebp
call	xmlnode_get_child
mov	[esp+9Ch+Str2],	offset aSender 
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C54B2E
xchg	ax, ax
mov	[esp+9Ch+Str2],	offset aUnread 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C54B20
mov	[esp+9Ch+Str2],	offset aUnread 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	edi, offset a0	
mov	esi, eax
mov	ecx, 2
repe cmpsb
jnz	loc_61C54C70
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C54AE8
dec	[esp+9Ch+var_5C]
			
mov	[esp+9Ch+Str1],	ebp
call	xmlnode_get_next_twin
mov	ebp, eax
inc	[esp+9Ch+var_5C]
test	eax, eax
jnz	loc_61C54AAC
mov	edx, [esp+9Ch+var_5C]
test	edx, edx
jle	short loc_61C54BA9
mov	[esp+9Ch+var_7C], 0
mov	[esp+9Ch+var_80], 0
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+var_84], eax
mov	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_88], eax
mov	eax, [esp+9Ch+var_40]
mov	[esp+9Ch+var_8C], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_90], eax
mov	eax, [esp+9Ch+var_30]
cmp	[esp+9Ch+var_5C], eax
setz	al
movzx	eax, al
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_30]
mov	[esp+9Ch+Str2],	eax
mov	edx, [esp+9Ch+var_58]
mov	eax, [edx+64h]
mov	[esp+9Ch+Str1],	eax
call	purple_notify_emails
			
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+Str1],	eax
call	g_free
mov	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+Str1],	eax
call	g_free
mov	eax, [esp+9Ch+var_40]
mov	[esp+9Ch+Str1],	eax
call	g_free
xor	ebx, ebx
mov	eax, [esp+9Ch+var_34]
test	eax, eax
jle	short loc_61C54BF0
mov	esi, [esp+9Ch+var_34]
mov	edi, [esp+9Ch+var_48]
nop
mov	eax, [edi+ebx*4]
mov	[esp+9Ch+Str1],	eax
call	g_free
inc	ebx
cmp	ebx, esi
jnz	short loc_61C54BE0
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+Str1],	eax
call	g_free
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+Str1],	eax
call	g_free
mov	[esp+9Ch+Str2],	offset aResultTime 
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C54C54
cmp	byte ptr [eax],	0
jz	short loc_61C54C54
mov	ecx, [esp+9Ch+var_58]
mov	edx, [ecx+98h]
mov	[esp+9Ch+Str1],	edx
mov	[esp+9Ch+var_60], eax
call	g_free
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+Str1],	eax
call	g_strdup
mov	edx, [esp+9Ch+var_58]
mov	[edx+98h], eax
lea	esi, [esi+0]
			
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C54E83
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+9Ch+Str2],	offset aName_6 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	short loc_61C54C8B
cmp	byte ptr [esi],	0
jnz	short loc_61C54C9D
mov	[esp+9Ch+Str2],	offset aAddress_0 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_data
mov	ebx, [esp+9Ch+var_5C]
shl	ebx, 2
mov	edx, [esp+9Ch+var_3C]
add	edx, ebx
mov	ecx, [esp+9Ch+var_50]
test	ecx, ecx
jz	loc_61C54D51
mov	ecx, [esp+9Ch+var_50]
mov	[edx], ecx
mov	edx, [esp+9Ch+var_40]
add	edx, ebx
test	esi, esi
jz	short loc_61C54D4A
mov	[edx], esi
mov	esi, [esp+9Ch+var_48]
add	esi, ebx
test	eax, eax
jz	loc_61C54DFF
mov	[esi], eax
mov	edx, [esp+9Ch+var_44]
mov	eax, [esp+9Ch+var_38]
mov	[eax+ebx], edx
mov	[esp+9Ch+Str2],	offset aTid 
mov	[esp+9Ch+Str1],	ebp
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	loc_61C54B32
mov	edx, [esp+9Ch+var_58]
mov	esi, [edx+9Ch]
test	esi, esi
jz	short loc_61C54D2B
mov	[esp+9Ch+Str2],	esi 
mov	[esp+9Ch+Str1],	eax 
call	strcmp
test	eax, eax
jle	loc_61C54B32
mov	[esp+9Ch+Str1],	esi
call	g_free
mov	[esp+9Ch+Str1],	ebx
call	g_strdup
mov	edx, [esp+9Ch+var_58]
mov	[edx+9Ch], eax
jmp	loc_61C54B32
mov	esi, offset byte_61C7E5DD
jmp	short loc_61C54CD2
mov	ecx, offset byte_61C7E5DD
jmp	loc_61C54CC6
mov	[esp+9Ch+Str1],	eax 
call	atoi
mov	[esp+9Ch+var_30], eax
mov	[esp+9Ch+Str2],	offset aTo_5 
mov	[esp+9Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+9Ch+Str2],	offset aMailThreadInfo 
mov	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
mov	edi, [esp+9Ch+var_30]
test	edi, edi
jnz	short loc_61C54DE9
mov	[esp+9Ch+var_7C], 0
mov	[esp+9Ch+var_80], 0
mov	[esp+9Ch+var_84], 0
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], 0
mov	eax, [esp+9Ch+var_30]
mov	[esp+9Ch+Str2],	eax
mov	edx, [esp+9Ch+var_58]
mov	eax, [edx+64h]
mov	[esp+9Ch+Str1],	eax
call	purple_notify_emails
jmp	loc_61C54C54
test	eax, eax
jnz	loc_61C549ED
mov	ebx, [esp+9Ch+var_30]
test	ebx, ebx
jle	short loc_61C54D95
mov	edi, [esp+9Ch+var_30]
jmp	short loc_61C54E15
mov	[esp+9Ch+Str1],	offset byte_61C7E5DD
call	g_strdup
jmp	loc_61C54CE2
mov	edi, 1
mov	[esp+9Ch+Str1],	esi
call	jabber_get_bare_jid
mov	ebx, eax
mov	[esp+9Ch+var_24], 0
mov	[esp+9Ch+var_28], eax
mov	[esp+9Ch+var_7C], 0
mov	[esp+9Ch+var_80], 0
mov	[esp+9Ch+var_84], 0
lea	eax, [esp+9Ch+var_28]
mov	[esp+9Ch+var_88], eax
mov	[esp+9Ch+var_8C], 0
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+Str2],	edi
mov	edx, [esp+9Ch+var_58]
mov	eax, [edx+64h]
mov	[esp+9Ch+Str1],	eax
call	purple_notify_emails
mov	[esp+9Ch+Str1],	ebx
call	g_free
jmp	loc_61C54C54
call	__stack_chk_fail
public jabber_gmail_poke
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_check_mail
test	eax, eax
jz	short loc_61C54EC0
test	esi, esi
jz	short loc_61C54ED8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C54FDD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new
mov	esi, eax
test	edi, edi
jz	short loc_61C54F05
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aTo_5 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aId_0 
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_send
mov	[esp+4Ch+var_48], offset aGotNewMailNoti 
mov	[esp+4Ch+var_4C], offset aJabber_9 
call	purple_debug_misc
mov	[esp+4Ch+var_44], offset aGoogleMailNoti 
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_61C54948
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_set_callback
mov	[esp+4Ch+var_48], offset aQuery_5 
mov	eax, [esi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	edx, [ebx+98h]
test	edx, edx
jz	short loc_61C54FA3
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aNewerThanTime	
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_30]
mov	edx, [ebx+9Ch]
test	edx, edx
jz	short loc_61C54FC1
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aNewerThanTid 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C54FDD
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
			
call	__stack_chk_fail
align 4
public jabber_gmail_init
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_check_mail
test	eax, eax
jnz	short loc_61C55028
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C550DC
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new
mov	esi, eax
mov	[esp+2Ch+var_28], offset aUsersetting 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+2Ch+var_28], offset aGoogleSetting	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_28], offset aMailnotificati 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], offset aTrue_1 
mov	[esp+2Ch+var_28], offset aValue_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_send
mov	[esp+2Ch+var_24], offset aGoogleMailNoti 
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C54948
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C550DC
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
			
call	__stack_chk_fail
align 4
public jabber_google_format_to_html
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
cmp	byte ptr [edx],	0
jz	loc_61C5562D
mov	eax, ds:g_utf8_skip
mov	esi, [eax]
mov	ebp, edx
mov	[esp+5Ch+var_38], 0
mov	[esp+5Ch+var_3C], 0
xor	ebx, ebx
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_40], 0
mov	edi, 1
jmp	short loc_61C55174
align 4
cmp	eax, 5Fh
jz	loc_61C55338
cmp	eax, 3Ch
jz	loc_61C55314
cmp	eax, 3Eh
jnz	loc_61C55310
test	ebx, ebx
jz	loc_61C55320
xor	ebx, ebx
lea	esi, [esi+0]
			
movzx	eax, byte ptr [ebp+0]
movsx	eax, byte ptr [esi+eax]
add	ebp, eax
cmp	byte ptr [ebp+0], 0
jz	short loc_61C551D4
			
mov	[esp+5Ch+var_5C], ebp
call	g_utf8_get_char
cmp	eax, 2Ah
jnz	short loc_61C5513C
test	ebx, ebx
jnz	loc_61C55314
mov	eax, [esp+5Ch+var_40]
test	eax, eax
jnz	loc_61C554D0
test	edi, edi
jz	loc_61C55623
movsx	eax, byte ptr [ebp+1]
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jnz	loc_61C55623
inc	[esp+5Ch+var_3C]
mov	[esp+5Ch+var_40], 1
mov	edi, 1
movzx	eax, byte ptr [ebp+0]
movsx	eax, byte ptr [esi+eax]
add	ebp, eax
cmp	byte ptr [ebp+0], 0
jnz	short loc_61C55174
xchg	ax, ax
			
mov	[esp+5Ch+var_5C], 0
call	g_string_new
mov	edi, eax
mov	edx, [esp+5Ch+var_44]
cmp	byte ptr [edx],	0
jz	loc_61C554A8
mov	esi, edx
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_40], 1
mov	ebp, ds:g_utf8_skip
jmp	short loc_61C55280
align 4
cmp	ebx, 5Fh
jz	loc_61C553E0
cmp	ebx, 3Ch
jz	loc_61C5537C
cmp	ebx, 3Eh
jnz	loc_61C55474
mov	edx, [esp+5Ch+var_44]
test	edx, edx
jnz	loc_61C55488
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
mov	[esp+5Ch+var_5C], ebx
call	g_unichar_isspace
mov	[esp+5Ch+var_44], 0
cmp	eax, 1
sbb	edx, edx
inc	edx
mov	[esp+5Ch+var_40], edx
			
movzx	eax, byte ptr [esi]
mov	edx, [ebp+0]
movsx	eax, byte ptr [edx+eax]
add	esi, eax
cmp	byte ptr [esi],	0
jz	loc_61C554A8
mov	[esp+5Ch+var_5C], esi
call	g_utf8_get_char
mov	ebx, eax
cmp	[esp+5Ch+var_3C], 1
jle	loc_61C5539C
			
cmp	ebx, 2Ah
jnz	short loc_61C5521C
mov	eax, [esp+5Ch+var_44]
test	eax, eax
jnz	loc_61C55388
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	short loc_61C552CD
mov	bl, [esi+1]
movsx	eax, bl
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jnz	loc_61C55504
cmp	bl, 3Ch
jz	loc_61C55504
mov	eax, [esp+5Ch+var_40]
test	eax, eax
jz	short loc_61C552F0
cmp	[esp+5Ch+var_3C], 1
jle	short loc_61C552F0
movsx	eax, byte ptr [esi+1]
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jz	loc_61C555CC
			
mov	[esp+5Ch+var_58], 2Ah
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
align 10h
test	ebx, ebx
jz	short loc_61C55320
			
mov	ebx, 1
jmp	loc_61C55164
align 10h
			
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
xor	ebx, ebx
cmp	eax, 1
sbb	edi, edi
inc	edi
jmp	loc_61C55164
align 4
test	ebx, ebx
jnz	short loc_61C55314
mov	ecx, [esp+5Ch+var_34]
test	ecx, ecx
jnz	loc_61C55530
test	edi, edi
jz	loc_61C55642
movsx	eax, byte ptr [ebp+1]
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jnz	loc_61C55623
inc	[esp+5Ch+var_38]
mov	[esp+5Ch+var_34], 1
mov	edi, 1
jmp	loc_61C55164
align 4
mov	ecx, [esp+5Ch+var_44]
test	ecx, ecx
jz	loc_61C55454
			
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
jmp	loc_61C5526B
align 4
cmp	[esp+5Ch+var_38], 1
jg	loc_61C55295
mov	edx, [esp+5Ch+var_34]
test	edx, edx
jnz	loc_61C55295
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jnz	loc_61C55295
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], edi
call	g_string_append
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	g_string_free
jmp	loc_61C554B8
mov	eax, [esp+5Ch+var_44]
test	eax, eax
jnz	short loc_61C55388
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jz	short loc_61C5540F
mov	bl, [esi+1]
movsx	eax, bl
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jnz	loc_61C55560
cmp	bl, 3Ch
jz	loc_61C55560
mov	ebx, [esp+5Ch+var_40]
test	ebx, ebx
jz	short loc_61C55432
cmp	[esp+5Ch+var_38], 1
jle	short loc_61C55432
movsx	eax, byte ptr [esi+1]
mov	[esp+5Ch+var_5C], eax
call	g_unichar_isspace
test	eax, eax
jz	loc_61C555F8
			
mov	[esp+5Ch+var_58], 5Fh
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
align 4
mov	[esp+5Ch+var_58], 3Ch
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
mov	[esp+5Ch+var_44], 1
jmp	loc_61C5526B
align 4
mov	eax, [esp+5Ch+var_44]
test	eax, eax
jz	loc_61C55243
jmp	loc_61C55388
align 4
mov	[esp+5Ch+var_58], 3Eh
mov	[esp+5Ch+var_5C], edi
call	g_string_append_unichar
mov	edi, eax
mov	[esp+5Ch+var_44], 0
jmp	loc_61C5526B
align 4
			
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	g_string_free
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5564B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	cl, [ebp+1]
movsx	eax, cl
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_48], cl
call	g_unichar_isspace
test	eax, eax
mov	cl, [esp+5Ch+var_48]
jz	loc_61C5558C
			
inc	[esp+5Ch+var_3C]
mov	[esp+5Ch+var_40], 0
mov	edi, 1
jmp	loc_61C55164
			
mov	[esp+5Ch+var_58], offset aB 
mov	[esp+5Ch+var_5C], edi
call	g_string_append
mov	edi, eax
dec	[esp+5Ch+var_3C]
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
align 10h
mov	cl, [ebp+1]
movsx	eax, cl
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_48], cl
call	g_unichar_isspace
test	eax, eax
mov	cl, [esp+5Ch+var_48]
jz	short loc_61C555B0
			
inc	[esp+5Ch+var_38]
mov	[esp+5Ch+var_34], 0
mov	edi, 1
jmp	loc_61C55164
			
mov	[esp+5Ch+var_58], offset aI 
mov	[esp+5Ch+var_5C], edi
call	g_string_append
mov	edi, eax
dec	[esp+5Ch+var_38]
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
align 4
test	cl, cl
jz	loc_61C554EE
cmp	cl, 3Ch
jz	loc_61C554EE
mov	[esp+5Ch+var_40], 1
mov	edi, 1
jmp	loc_61C55164
align 10h
test	cl, cl
jz	short loc_61C5554A
cmp	cl, 3Ch
jz	short loc_61C5554A
mov	[esp+5Ch+var_34], 1
mov	edi, 1
jmp	loc_61C55164
align 4
mov	[esp+5Ch+var_58], offset aB_0 
mov	[esp+5Ch+var_5C], edi
call	g_string_append
mov	edi, eax
dec	[esp+5Ch+var_3C]
mov	[esp+5Ch+var_34], 1
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
align 4
mov	[esp+5Ch+var_58], offset aI_0 
mov	[esp+5Ch+var_5C], edi
call	g_string_append
mov	edi, eax
dec	[esp+5Ch+var_38]
mov	[esp+5Ch+var_30], 1
mov	[esp+5Ch+var_40], 1
jmp	loc_61C5526B
			
mov	edi, 1
jmp	loc_61C55164
mov	[esp+5Ch+var_38], 0
mov	[esp+5Ch+var_3C], 0
jmp	loc_61C551D4
mov	di, 1
jmp	loc_61C55164
call	__stack_chk_fail
public google_buddy_node_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	purple_uuid_random
mov	esi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_61C556B0
mov	[esp+5Ch+var_54], offset aPurple_blist_0 
mov	[esp+5Ch+var_58], offset aGoogle_buddy_n 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C55799
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_5C], ebx
call	purple_buddy_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_connection
mov	ebp, eax
test	eax, eax
jz	loc_61C55778
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_protocol_data
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], offset aPrivateChatS 
mov	[esp+5Ch+var_30], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+5Ch]
mov	eax, [eax]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aGroupchat_goog 
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], edx
call	jabber_join_chat
mov	edx, eax
test	eax, eax
jz	short loc_61C55751
mov	dword ptr [edx+1Ch], 1
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], edx
call	purple_buddy_get_name
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset word_61C7E712
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+14h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_chat_invite
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C55799
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_54], offset aGcNull 
mov	[esp+5Ch+var_58], offset aGoogle_buddy_n 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_61C55696
			
call	__stack_chk_fail
align 10h
public jabber_google_presence_incoming
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+90h]
test	eax, eax
jz	loc_61C5585A
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_61C557E6
mov	[esp+3Ch+var_38], offset aTsl 
mov	[esp+3Ch+var_3C], eax
call	purple_str_has_prefix
test	eax, eax
jnz	short loc_61C55814
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5586D
mov	[esp+3Ch+arg_8], offset	aTune 
mov	[esp+3Ch+arg_4], edi
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+3Ch+arg_0], eax
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	purple_prpl_got_user_status_deactive
align 4
mov	[esp+3Ch+var_28], 0
mov	eax, [esi+10h]
add	eax, 4
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], offset aTune_title 
mov	[esp+3Ch+var_34], offset aTune 
mov	[esp+3Ch+var_38], edi
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_prpl_got_user_status
mov	eax, [esi+10h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [esi+10h], 0
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5586D
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public jabber_google_presence_outgoing
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aTune_title 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_string
test	eax, eax
jz	short loc_61C558BC
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aTslS 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C558D8
add	esp, 2Ch
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C558D8
mov	[esp+2Ch+arg_0], offset	dword_61C7E798
add	esp, 2Ch
jmp	g_strdup
			
call	__stack_chk_fail
align 10h
public jabber_google_roster_outgoing
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	eax, [eax+64h]
mov	[esp+3Ch+Str1],	eax
call	purple_connection_get_account
mov	esi, eax
mov	ebx, [eax+34h]
mov	[esp+3Ch+Str2],	offset aJid_4 
mov	[esp+3Ch+Str1],	edi
call	xmlnode_get_attrib
mov	[esp+3Ch+Str2],	eax
mov	[esp+3Ch+Str1],	esi
call	jabber_normalize
mov	esi, eax
test	ebx, ebx
jnz	short loc_61C5593B
jmp	short loc_61C559AC
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C559AC
mov	eax, [ebx]
mov	[esp+3Ch+Str2],	eax 
mov	[esp+3Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_61C55934
mov	[esp+3Ch+var_34], offset aGoogleRoster 
mov	[esp+3Ch+Str2],	offset aXmlnsGr	
mov	[esp+3Ch+Str1],	ebp
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset a2 
mov	[esp+3Ch+Str2],	offset aGrExt 
mov	[esp+3Ch+Str1],	ebp
call	xmlnode_set_attrib
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C559C0
mov	[esp+3Ch+arg_8], offset	aB_1 
mov	[esp+3Ch+arg_4], offset	aGrT 
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_set_attrib
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C559C0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public jabber_google_roster_incoming
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	eax, [eax+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aJid_4	
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_44], offset aGoogleRoster 
mov	[esp+4Ch+var_48], offset aT 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib_with_namespace
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aSubscription_0 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aAsk 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib
test	esi, esi
jz	loc_61C55AC8
mov	edi, offset aNone 
mov	ecx, 5
repe cmpsb
jz	short loc_61C55AC8
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	esi, eax
mov	[esp+4Ch+var_44], offset strcmp
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	g_slist_find_custom
xor	edx, edx
test	eax, eax
setnz	dl
test	ebp, ebp
jz	loc_61C55BAE
mov	al, [ebp+0]
cmp	al, 48h
jz	short loc_61C55AD0
cmp	al, 68h
jz	short loc_61C55AD0
test	edx, edx
jnz	loc_61C55B36
cmp	al, 42h
jz	loc_61C55B78
cmp	al, 62h
jz	loc_61C55B78
			
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, 1
jmp	short loc_61C55B22
align 4
			
test	eax, eax
jnz	short loc_61C55A55
xor	eax, eax
jmp	short loc_61C55B22
			
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_61C55B18
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aRemovingSFromL 
mov	[esp+4Ch+var_4C], offset aJabber_10 
call	purple_debug_info
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	purple_blist_remove_buddy
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C55AFC
mov	[esp+4Ch+var_4C], esi
call	g_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C55BA9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
cmp	al, 42h
jz	loc_61C55AB8
cmp	al, 62h
jz	loc_61C55AB8
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aUnblockingS 
mov	[esp+4Ch+var_4C], offset aJabber_10 
call	purple_debug_info
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_privacy_deny_remove
jmp	loc_61C55AB8
align 4
			
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aBlockingS 
mov	[esp+4Ch+var_4C], offset aJabber_10 
call	purple_debug_info
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_privacy_deny_add
jmp	loc_61C55AB8
call	__stack_chk_fail
test	edx, edx
jz	loc_61C55AB8
jmp	short loc_61C55B46
public jabber_google_roster_add_deny
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_40], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	jabber_buddy_find
mov	[esp+5Ch+var_38], eax
mov	eax, [esi+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_34], eax
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	loc_61C55DBF
mov	[esp+5Ch+var_54], offset aJabberIqRoster 
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	jabber_iq_new_query
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], offset aQuery_6 
mov	eax, [eax+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_58], offset aItem_3 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_44], eax
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_group
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aGroup_0 
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_roster_group_get_global_name
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	xmlnode_insert_data
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C55C60
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_local_buddy_alias
mov	ebx, eax
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aJid_4	
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
test	ebx, ebx
jz	loc_61C55DD4
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aName_7 
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aB_1 
mov	[esp+5Ch+var_58], offset aGrT 
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aGoogleRoster 
mov	[esp+5Ch+var_58], offset aXmlnsGr 
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset a2 
mov	[esp+5Ch+var_58], offset aGrExt	
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_send
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	short loc_61C55D9B
mov	eax, [esp+5Ch+var_38]
mov	ebx, [eax]
test	ebx, ebx
jz	short loc_61C55D9B
mov	edi, eax
nop
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C55D94
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C55D94
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aRemovingResour 
mov	[esp+5Ch+var_5C], offset aJabber_10 
call	purple_debug_misc
mov	eax, [esi+4]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_remove_resource
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C55D60
			
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset aOffline_0 
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], edx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C55DDE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, offset byte_61C7E826
jmp	loc_61C55CD3
call	__stack_chk_fail
align 4
public jabber_google_roster_rem_deny
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_3C], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+64h]
mov	[esp+5Ch+Str], eax
call	purple_connection_get_account
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Str], eax
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	loc_61C55F67
mov	[esp+5Ch+var_54], offset aJabberIqRoster 
mov	[esp+5Ch+var_58], 0
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], edx
call	jabber_iq_new_query
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], offset aQuery_6 
mov	eax, [eax+8]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], offset aItem_3 
mov	[esp+5Ch+Str], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_40], eax
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+5Ch+Str], esi
call	purple_buddy_get_group
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aGroup_0 
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+5Ch+Str], ebp
call	jabber_roster_group_get_global_name
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	xmlnode_insert_data
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C55E7C
mov	[esp+5Ch+Str], esi
call	purple_buddy_get_local_buddy_alias
mov	ebx, eax
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aJid_4	
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str], eax
call	xmlnode_set_attrib
test	ebx, ebx
jz	loc_61C55F7C
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aName_7 
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aGoogleRoster 
mov	[esp+5Ch+var_58], offset aXmlnsGr 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset a2 
mov	[esp+5Ch+var_58], offset aGrExt	
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	jabber_iq_send
mov	[esp+5Ch+var_54], offset aProbe	
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], edx
call	jabber_presence_subscription_set
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C55F86
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, offset byte_61C7E826
jmp	loc_61C55EEF
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, eax
mov	ebx, edx
mov	[esp+5Ch+var_34], ecx
mov	ebp, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aStun 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], offset aRelay	
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	ebp, eax
test	ebx, ebx
jz	short loc_61C5600E
mov	eax, [esi+5Ch]
mov	edx, [eax+4]
mov	[esp+5Ch+var_54], edx
mov	eax, [eax]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], offset aS@S_1 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], ebx
call	purple_strequal
test	eax, eax
jz	loc_61C56144
mov	[esp+5Ch+Str], edi
call	g_free
cmp	[esp+5Ch+var_34], 3
jz	loc_61C5612D
cmp	[esp+5Ch+var_34], 1
jz	loc_61C5612D
mov	[esp+5Ch+var_58], offset aGotGoogleJingl 
mov	[esp+5Ch+Str], offset aJabber_11 
call	purple_debug_info
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jz	loc_61C560D1
mov	[esp+5Ch+var_58], offset aServer_0 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C560D1
mov	[esp+5Ch+var_58], offset aHost 
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+5Ch+var_58], offset aUdp 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
test	edi, edi
jz	short loc_61C560D1
test	eax, eax
jz	short loc_61C560D1
mov	[esp+5Ch+Str], eax 
call	atoi
mov	ebx, eax
mov	eax, [esi+140h]
test	eax, eax
jz	short loc_61C560A4
mov	[esp+5Ch+Str], eax
call	purple_dnsquery_destroy
mov	eax, [esi+64h]
mov	[esp+5Ch+Str], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], offset sub_61C5620C
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+Str], eax
call	purple_dnsquery_a_account
mov	[esi+140h], eax
			
test	ebp, ebp
jz	short loc_61C5612D
mov	[esp+5Ch+var_58], offset aToken	
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	edi, eax
mov	[esp+5Ch+var_58], offset aServer_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	ebx, eax
test	edi, edi
jz	short loc_61C5610B
mov	[esp+5Ch+Str], edi
call	xmlnode_get_data
mov	[esi+144h], eax
test	ebx, ebx
jz	short loc_61C5612D
mov	[esp+5Ch+var_58], offset aHost 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+Str], eax
call	g_strdup
mov	[esi+148h], eax
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C56178
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aGotGoogleJin_0 
mov	[esp+5Ch+Str], offset aJabber_11 
call	purple_debug_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C56178
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	edi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+8], offset aGoogleJinglein 
mov	dword ptr [esp+4], offset aQuery_7 
mov	edx, [esp+40h]
mov	[esp], edx
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C561E0
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56207
mov	[esp+30h], eax
mov	ecx, edi
mov	edx, esi
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C55F8C
align 10h
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C56207
mov	dword ptr [esp+34h], offset aGotInvalidGoog 
mov	dword ptr [esp+30h], offset aJabber_11 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_warning
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	eax, [esp+6Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C56274
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aGoogleStunLook 
mov	dword ptr [esp+6Ch+netshort], offset aJabber_11	
call	purple_debug_error
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_free
mov	dword ptr [esi+140h], 0
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C56353
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	ebx, ebx
jz	short loc_61C56259
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C56310
mov	ebp, [eax]
movzx	eax, word ptr [ebp+0]
mov	[esp+6Ch+var_60], 2Eh
lea	edi, [esp+6Ch+var_4E]
mov	[esp+6Ch+var_64], edi
cmp	ax, 17h
jz	loc_61C56340
lea	edx, [ebp+4]
mov	[esp+6Ch+var_68], edx
mov	dword ptr [esp+6Ch+netshort], eax
call	wpurple_inet_ntop
movzx	eax, word ptr [ebp+2]
mov	dword ptr [esp+6Ch+netshort], eax 
call	ntohs
push	edx
movzx	ebp, ax
mov	eax, [esi+138h]
test	eax, eax
jz	short loc_61C562D4
mov	dword ptr [esp+6Ch+netshort], eax
call	g_free
mov	dword ptr [esp+6Ch+netshort], edi
call	g_strdup
mov	[esi+138h], eax
mov	[esi+13Ch], ebp
mov	[esp+6Ch+var_60], ebp
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aSetGoogleStunI 
mov	dword ptr [esp+6Ch+netshort], offset aJabber_11	
call	purple_debug_info
mov	dword ptr [esi+140h], 0
xchg	ax, ax
			
mov	[esp+6Ch+var_68], ebx
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_delete_link
mov	ebx, eax
mov	eax, [eax]
mov	dword ptr [esp+6Ch+netshort], eax
call	g_free
mov	[esp+6Ch+var_68], ebx
mov	dword ptr [esp+6Ch+netshort], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C56310
jmp	loc_61C56259
align 10h
lea	eax, [ebp+8]
mov	[esp+6Ch+var_68], eax
mov	dword ptr [esp+6Ch+netshort], 17h
jmp	loc_61C562AD
call	__stack_chk_fail
public jabber_google_handle_jingle_info
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_10]
mov	esi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], esi
xor	esi, esi
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_61C56393
mov	[esp+1Ch+arg_0], ebx
add	esp, 14h
pop	ebx
pop	esi
jmp	loc_61C55F8C
call	__stack_chk_fail
public jabber_google_send_jingle_info
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aGoogleJinglein 
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset loc_61C56180
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_set_callback
mov	[esp+2Ch+var_28], offset aSendingGoogleJ 
mov	[esp+2Ch+var_2C], offset aJabber_11 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5640A
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	jabber_iq_send
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	ebx, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	edx, [eax]
mov	[esp+6Ch+var_48], edx
mov	esi, [edx+0Ch]
mov	edx, [eax+4]
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+Str], eax
call	g_free
test	edi, edi
jz	short loc_61C56472
mov	eax, [esi+14Ch]
test	eax, eax
jz	short loc_61C56472
cmp	edi, [eax]
jz	short loc_61C56460
jmp	short loc_61C5645D
align 10h
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], eax
call	g_list_delete_link
mov	[esi+14Ch], eax
			
mov	[esp+6Ch+var_68], offset aGotResponseOnH 
mov	[esp+6Ch+Str], offset aJabber_12 
call	purple_debug_info
test	ebx, ebx
jz	short loc_61C56492
test	ebp, ebp
jnz	loc_61C56528
mov	[esp+6Ch+var_40], 0
xor	edi, edi
mov	[esp+6Ch+var_34], 0
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_3C], 0
xor	esi, esi
mov	eax, [esp+6Ch+var_44]
test	eax, eax
jz	short loc_61C564F3
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], edi
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], esi
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+Str], edx
mov	edx, [esp+6Ch+var_44]
call	edx
mov	[esp+6Ch+Str], esi
call	g_free
mov	[esp+6Ch+Str], edi
call	g_free
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C56706
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aGotGoogleRelay 
mov	[esp+6Ch+Str], offset aJabber_12 
call	purple_debug_info
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset asc_61C7E9EF 
mov	[esp+6Ch+Str], ebx
call	g_strsplit
mov	[esp+6Ch+var_30], eax
mov	edx, eax
mov	eax, [eax]
test	eax, eax
jz	loc_61C5665E
mov	ebx, edx
add	ebx, 4
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_34], 0
xor	esi, esi
mov	[esp+6Ch+var_3C], 0
xor	edi, edi
mov	[esp+6Ch+var_40], 0
jmp	short loc_61C565B7
align 4
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax
call	g_strdup
mov	esi, eax
			
mov	[esp+6Ch+Str], ebp
call	g_strfreev
add	ebx, 4
mov	eax, [ebx-4]
test	eax, eax
jz	loc_61C56684
mov	[esp+6Ch+var_64], 2
mov	[esp+6Ch+var_68], offset asc_61C7E9F1 
mov	[esp+6Ch+Str], eax
call	g_strsplit
mov	ebp, eax
mov	eax, [eax]
test	eax, eax
jz	short loc_61C565A1
mov	edx, [ebp+4]
test	edx, edx
jz	short loc_61C565A1
mov	[esp+6Ch+var_68], offset aRelay_ip 
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C56594
mov	[esp+6Ch+var_68], offset aRelay_udp_port 
mov	eax, [ebp+0]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C5661C
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax 
call	atoi
mov	[esp+6Ch+var_3C], eax
jmp	short loc_61C565A1
align 4
mov	[esp+6Ch+var_68], offset aRelay_tcp_port 
mov	eax, [ebp+0]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C56698
mov	[esp+6Ch+var_68], offset aRelay_ssltcp_p 
mov	eax, [ebp+0]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C566AC
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax 
call	atoi
mov	[esp+6Ch+var_34], eax
jmp	loc_61C565A1
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_34], 0
xor	esi, esi
mov	[esp+6Ch+var_3C], 0
xor	edi, edi
mov	[esp+6Ch+var_40], 0
xchg	ax, ax
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], eax
call	g_strfreev
jmp	loc_61C564B6
align 4
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax 
call	atoi
mov	[esp+6Ch+var_38], eax
jmp	loc_61C565A1
mov	[esp+6Ch+var_68], offset aUsername_0 
mov	eax, [ebp+0]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C566F4
mov	[esp+6Ch+var_68], offset aPassword_2 
mov	eax, [ebp+0]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_61C565A1
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax
call	g_strdup
mov	[esp+6Ch+var_40], eax
jmp	loc_61C565A1
align 4
mov	eax, [ebp+4]
mov	[esp+6Ch+Str], eax
call	g_strdup
mov	edi, eax
jmp	loc_61C565A1
call	__stack_chk_fail
align 4
public jabber_google_do_relay_request
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+148h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aHttpS	
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_30], ecx
call	g_strdup_printf
mov	edi, eax
mov	eax, [ebx+144h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+148h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aGetCreate_sess 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_5C], 8
call	g_malloc0
mov	esi, eax
mov	ecx, [esp+5Ch+var_30]
mov	[eax], ecx
mov	edx, [esp+5Ch+var_34]
mov	[eax+4], edx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aSendingGoogleR 
mov	[esp+5Ch+var_5C], offset aJabber_12 
call	purple_debug_info
mov	[esp+5Ch+var_40], esi
mov	[esp+5Ch+var_44], offset sub_61C56410
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	purple_util_fetch_url_request
test	eax, eax
jz	short loc_61C56820
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+14Ch]
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	[ebx+14Ch], eax
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5685E
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
mov	[esp+5Ch+var_58], offset aUnableToCreate 
mov	[esp+5Ch+var_5C], offset aJabber_12 
call	purple_debug_error
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], 0
call	sub_61C56410
jmp	short loc_61C567FB
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
xor	eax, eax
cmp	[esp+1Ch+arg_8], 3
setz	al
lea	eax, [eax+eax+1]
mov	[edx+18h], eax
mov	eax, [edx+20h]
test	eax, eax
jz	short loc_61C568A4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C568B4
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C568B4
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], ecx
call	jabber_iq_new
mov	ebx, eax
mov	[esp+4Ch+var_4C], offset aError_2 
call	xmlnode_new
mov	esi, eax
mov	[esp+4Ch+var_4C], offset aItemNotFound_1 
call	xmlnode_new
mov	edi, eax
mov	[esp+4Ch+var_48], offset aUrnIetfParam_5 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], offset a440 
mov	[esp+4Ch+var_48], offset aCode_1 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], offset aCancel_3 
mov	[esp+4Ch+var_48], offset aType_6 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_set_id
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTo_6 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	xmlnode_insert_child
mov	[esp+4Ch+var_48], esi
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_send
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C569A1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jabber_ibb_parse
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], eax
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_3C], eax
mov	ebx, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx]
mov	[esp+4Ch+Str2],	offset aData_0 
mov	[esp+4Ch+Str1],	ebp
call	g_str_equal
mov	edi, eax
mov	[esp+4Ch+Str2],	offset aClose_0	
mov	[esp+4Ch+Str1],	ebp
call	g_str_equal
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+Str2],	offset aOpen 
mov	[esp+4Ch+Str1],	ebp
call	g_str_equal
mov	[esp+4Ch+var_30], eax
test	edi, edi
jnz	short loc_61C56A70
mov	ebp, [esp+4Ch+var_38]
test	ebp, ebp
jnz	short loc_61C56A70
			
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_61C56A5C
mov	edi, ds:dword_61C96044
test	edi, edi
jz	short loc_61C56A5C
mov	ebp, [esp+4Ch+var_34]
mov	eax, ebx
mov	ebx, edi
mov	edi, eax
xchg	ax, ax
mov	[esp+4Ch+var_40], edi
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	ebp
call	dword ptr [ebx]
test	eax, eax
jnz	loc_61C56B90
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C56A38
			
mov	ecx, [esp+4Ch+var_3C]
mov	edx, esi
mov	eax, [esp+4Ch+var_34]
call	sub_61C568BC
jmp	short loc_61C56AC2
align 10h
			
mov	[esp+4Ch+Str2],	offset aSid_0 
mov	[esp+4Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C56A1A
mov	[esp+4Ch+Str2],	eax
mov	eax, ds:dword_61C96040
mov	[esp+4Ch+Str1],	eax
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
jz	loc_61C56A1A
mov	eax, [eax+4]
mov	[esp+4Ch+Str2],	eax 
mov	[esp+4Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	loc_61C56B74
test	edi, edi
jnz	short loc_61C56ADC
mov	ecx, [esp+4Ch+var_38]
test	ecx, ecx
jnz	short loc_61C56B2C
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C56D05
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+Str2],	offset aSeq 
mov	[esp+4Ch+Str1],	ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C56B02
mov	[esp+4Ch+Str1],	eax 
call	atoi
cmp	[ebp+12h], ax
jz	loc_61C56BDC
mov	[esp+4Ch+Str2],	offset aReceivedAnOutO 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_error
mov	dword ptr [ebp+18h], 3
mov	eax, [ebp+30h]
test	eax, eax
jz	short loc_61C56AC2
mov	[esp+4Ch+Str1],	ebp
call	eax
jmp	short loc_61C56AC2
align 4
mov	dword ptr [ebp+18h], 2
mov	[esp+4Ch+Str2],	offset aIbbReceivedClo 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_info
mov	edx, [ebp+28h]
test	edx, edx
jz	loc_61C56AC2
mov	[esp+4Ch+Str2],	offset aIbbCallingClos 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_info
mov	[esp+4Ch+Str1],	ebp
call	dword ptr [ebp+28h]
jmp	loc_61C56AC2
align 4
mov	[esp+4Ch+Str2],	offset aGotIbbIqFromWr 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_error
jmp	loc_61C56AC2
align 10h
mov	[esp+4Ch+Str2],	2
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Str2],	offset aTo_6 
mov	eax, [eax+8]
mov	[esp+4Ch+Str1],	eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	ebx
call	jabber_iq_set_id
mov	[esp+4Ch+Str1],	ebx
call	jabber_iq_send
jmp	loc_61C56AC2
align 4
mov	[esp+4Ch+Str2],	2
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax
call	jabber_iq_new
mov	edi, eax
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	edi
call	jabber_iq_set_id
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+Str2],	offset aTo_6 
mov	eax, [edi+8]
mov	[esp+4Ch+Str1],	eax
call	xmlnode_set_attrib
mov	esi, [ebp+2Ch]
test	esi, esi
jz	loc_61C56CD0
mov	[esp+4Ch+Str1],	ebx
call	xmlnode_get_data
mov	esi, eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	esi
call	purple_base64_decode
mov	ebx, eax
mov	[esp+4Ch+Str1],	esi
call	g_free
test	ebx, ebx
jz	loc_61C56CE1
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	offset aGotUBytesOfDat 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_info
mov	eax, [ebp+14h]
cmp	[esp+4Ch+var_24], eax
jbe	short loc_61C56CA2
mov	[esp+4Ch+Str2],	offset aIbbReceivedATo 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_error
mov	eax, [ebp+30h]
test	eax, eax
jz	short loc_61C56C95
mov	[esp+4Ch+Str1],	ebp
call	eax
mov	[esp+4Ch+Str1],	ebx
call	g_free
jmp	loc_61C56AC2
mov	[esp+4Ch+Str2],	offset aCallingIbbCall 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_info
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	ebx
mov	[esp+4Ch+Str1],	ebp
call	dword ptr [ebp+2Ch]
mov	[esp+4Ch+Str1],	ebx
call	g_free
inc	word ptr [ebp+12h]
mov	[esp+4Ch+Str1],	edi
call	jabber_iq_send
jmp	loc_61C56AC2
mov	[esp+4Ch+Str2],	offset aIbbInvalidBase 
mov	[esp+4Ch+Str1],	offset aJabber_13 
call	purple_debug_error
mov	eax, [ebp+30h]
test	eax, eax
jnz	loc_61C56B24
jmp	loc_61C56AC2
call	__stack_chk_fail
align 4
public jabber_ibb_session_create
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 38h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[eax], edx
test	esi, esi
jz	short loc_61C56DA0
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+8], eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+4], eax
mov	dword ptr [ebx+14h], 1000h
mov	dword ptr [ebx+18h], 0
mov	[ebx+1Ch], edi
mov	[esp+4Ch+var_44], ebx
mov	eax, [ebx+8]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_61C96040
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56DAD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_4C], edx
call	jabber_get_next_id
mov	[ebx+8], eax
jmp	short loc_61C56D55
call	__stack_chk_fail
align 4
public jabber_ibb_session_create_from_xmlnode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	ebx, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aSid_0	
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aBlockSize 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
test	ebx, ebx
jz	loc_61C56E94
test	esi, esi
jz	short loc_61C56E70
test	eax, eax
jz	short loc_61C56E70
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], esi
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], edx
mov	[esp+4Ch+var_38], eax
call	jabber_ibb_session_create
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+Str], edx
call	g_strdup
mov	[ebx+0Ch], eax
mov	ecx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str], ecx 
call	atoi
mov	[ebx+14h], eax
mov	dword ptr [ebx+18h], 1
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56E98
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+4Ch+var_48], offset aIbbSessionOpen 
mov	[esp+4Ch+Str], offset aJabber_13 
call	purple_debug_error
mov	[esp+4Ch+Str], 0
call	g_free
xor	ebx, ebx
jmp	short loc_61C56E57
xor	ebx, ebx
jmp	short loc_61C56E57
call	__stack_chk_fail
align 10h
public jabber_ibb_session_get_sid
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56EC5
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_js
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56EF0
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_who
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+4]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56F1D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_send_seq
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+10h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56F49
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_get_recv_seq
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ax, [eax+12h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56F76
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_state
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+18h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56FA1
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_block_size
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+14h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C56FCD
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_set_block_size
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [eax+18h]
test	ecx, ecx
jnz	short loc_61C57008
mov	[eax+14h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5702C
add	esp, 1Ch
retn
align 4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5702C
mov	[esp+1Ch+arg_4], offset	aCanTSetBlockSi	
mov	[esp+1Ch+arg_0], offset	aJabber_13 
add	esp, 1Ch
jmp	purple_debug_error
			
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_max_data_size
			
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	eax, [eax+14h]
sub	eax, 2
xor	edx, edx
mov	dword ptr [esp+3Ch+var_24], eax
mov	dword ptr [esp+3Ch+var_24+4], edx
fild	[esp+3Ch+var_24]
fmul	ds:flt_61C7EF24
fmul	ds:flt_61C7EF28
fstp	[esp+3Ch+var_3C]
call	floor
fnstcw	[esp+3Ch+var_26]
mov	ax, [esp+3Ch+var_26]
mov	ah, 0Ch
mov	[esp+3Ch+var_28], ax
fldcw	[esp+3Ch+var_28]
fistp	[esp+3Ch+var_24]
fldcw	[esp+3Ch+var_26]
mov	eax, dword ptr [esp+3Ch+var_24]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5709E
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_get_user_data
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+1Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C570C9
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_set_opened_callback
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+20h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C570F9
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_set_data_sent_callback
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+24h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57129
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_set_closed_callback
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+28h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57159
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_set_data_received_callback
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+2Ch], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57189
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_set_error_callback
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+30h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C571B9
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_ibb_session_open
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx+18h]
test	esi, esi
jnz	loc_61C572BC
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_new
mov	esi, eax
mov	[esp+3Ch+var_3C], offset aOpen 
call	xmlnode_new
mov	edi, eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aTo_6 
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], offset aHttpJabber__17 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_set_namespace
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aSid_0	
mov	[esp+3Ch+var_3C], edi
call	xmlnode_set_attrib
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aU 
mov	[esp+3Ch+var_38], 0Ah
lea	ebp, [esp+3Ch+var_2A]
mov	[esp+3Ch+var_3C], ebp
call	g_snprintf
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aBlockSize 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], edi
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_child
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset sub_61C56864
mov	[esp+3Ch+var_3C], esi
call	jabber_iq_set_callback
mov	[esp+3Ch+var_3C], esi
call	jabber_iq_send
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C572D2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_38], offset aJabber_ibb_ses 
mov	[esp+3Ch+var_3C], offset aJabber_13 
call	purple_debug_error
jmp	short loc_61C572A6
call	__stack_chk_fail
align 4
public jabber_ibb_session_close
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+18h]
cmp	eax, 1
jz	short loc_61C572FE
cmp	eax, 3
jnz	loc_61C57394
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	edi, eax
mov	[esp+2Ch+var_2C], offset aClose_0 
call	xmlnode_new
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_6 
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aHttpJabber__17 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_namespace
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSid_0	
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], esi
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_child
mov	[esp+2Ch+var_2C], edi
call	jabber_iq_send
mov	dword ptr [ebx+18h], 2
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C573AA
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], offset aJabber_ibb_s_0 
mov	[esp+2Ch+var_2C], offset aJabber_13 
call	purple_debug_error
jmp	short loc_61C5737F
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+38h]
mov	ebx, [esp+44h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C57434
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_61C573E2
mov	[esp], eax
call	g_free
mov	dword ptr [ebx+34h], 0
cmp	esi, 3
jz	short loc_61C57408
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_61C57420
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5745A
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
mov	[esp], ebx
call	jabber_ibb_session_close
mov	dword ptr [ebx+18h], 3
mov	eax, [ebx+30h]
test	eax, eax
jnz	short loc_61C573EE
xchg	ax, ax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5745A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5745A
mov	dword ptr [esp+34h], offset aGotResponseFro 
mov	dword ptr [esp+30h], offset aJabber_13 
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_debug_info
			
call	__stack_chk_fail
align 10h
public jabber_ibb_session_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aIbbDestroyingS 
mov	[esp+2Ch+var_2C], offset aJabber_13 
call	purple_debug_info
cmp	dword ptr [ebx+18h], 1
jz	loc_61C5752C
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_61C574DE
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aIbbRemovingCal 
mov	[esp+2Ch+var_2C], offset aJabber_13 
call	purple_debug_info
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_remove_callback_by_id
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+34h], 0
mov	eax, [ebx+8]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96040
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57539
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_2C], ebx
call	jabber_ibb_session_close
jmp	loc_61C5749C
call	__stack_chk_fail
align 10h
public jabber_ibb_session_accept
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 2
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_6 
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_set_id
mov	[esp+2Ch+var_2C], esi
call	jabber_iq_send
mov	dword ptr [ebx+18h], 1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C575B2
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_ibb_session_send_data
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], eax
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edi, [ebx+18h]
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aSendingDataBlo 
mov	[esp+4Ch+var_4C], offset aJabber_13 
call	purple_debug_info
dec	edi
jnz	loc_61C57790
mov	[esp+4Ch+var_4C], ebx
call	jabber_ibb_session_get_max_data_size
cmp	esi, eax
ja	loc_61C57778
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new
mov	edi, eax
mov	[esp+4Ch+var_4C], offset aData_0 
call	xmlnode_new
mov	ebp, eax
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_base64_encode
mov	esi, eax
movzx	eax, word ptr [ebx+10h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], offset aU 
mov	[esp+4Ch+var_48], 0Ah
lea	edx, [esp+4Ch+var_2A]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_34], edx
call	g_snprintf
mov	eax, [ebx+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aTo_6 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aHttpJabber__17 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_namespace
mov	eax, [ebx+8]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aSid_0	
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aSeq 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_insert_data
mov	[esp+4Ch+var_48], ebp
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	eax, [ebx+8]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aIbbSettingSend 
mov	[esp+4Ch+var_4C], offset aJabber_13 
call	purple_debug_info
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset loc_61C573B0
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_set_callback
mov	[esp+4Ch+var_48], offset aId_1 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_attrib
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebx+34h], eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aIbbSetSessLast 
mov	[esp+4Ch+var_4C], offset aJabber_13 
call	purple_debug_info
mov	[esp+4Ch+var_4C], edi
call	jabber_iq_send
mov	[esp+4Ch+var_4C], esi
call	g_free
inc	word ptr [ebx+10h]
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C577A6
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], offset aTryingToSendAT 
mov	[esp+4Ch+var_4C], offset aJabber_13 
call	purple_debug_error
jmp	short loc_61C57761
align 10h
mov	[esp+4Ch+var_48], offset aTryingToSendDa 
mov	[esp+4Ch+var_4C], offset aJabber_13 
call	purple_debug_error
jmp	short loc_61C57761
call	__stack_chk_fail
align 4
public jabber_ibb_register_open_handler
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96044
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_61C96044, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C577E4
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_unregister_open_handler
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C96044
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_61C96044, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57824
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_ibb_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new
mov	ds:dword_61C96040, eax
mov	[esp+2Ch+var_28], 0 
mov	[esp+2Ch+var_2C], offset aHttpJabber__17 
call	jabber_add_feature
mov	[esp+2Ch+var_24], offset jabber_ibb_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__17 
mov	[esp+2Ch+var_2C], offset aClose_0 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_ibb_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__17 
mov	[esp+2Ch+var_2C], offset aData_0 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_ibb_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__17 
mov	[esp+2Ch+var_2C], offset aOpen 
call	jabber_iq_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C578CB
add	esp, 2Ch
retn
call	__stack_chk_fail
public jabber_ibb_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C96040
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_61C96044
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	ds:dword_61C96040, 0
mov	ds:dword_61C96044, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5791C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_iq_callbackdata_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	jabber_id_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5795B
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
public jabber_iq_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[esp+2Ch+var_2C], offset byte_61C7EF2C
call	xmlnode_new
mov	[ebx+8], eax
mov	edx, [ebx]
cmp	edx, 1
jz	loc_61C57A30
jnb	short loc_61C579E0
mov	[esp+2Ch+var_24], offset byte_61C7EF2F
mov	[esp+2Ch+var_28], offset aType_7 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
			
mov	[ebx+14h], edi
cmp	esi, 1
jbe	short loc_61C57A0C
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C57A6D
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
cmp	edx, 2
jz	short loc_61C57A50
cmp	edx, 3
jnz	short loc_61C579BD
mov	[esp+2Ch+var_24], offset aError_3 
mov	[esp+2Ch+var_28], offset aType_7 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[ebx+14h], edi
cmp	esi, 1
ja	short loc_61C579C5
xchg	ax, ax
mov	[esp+2Ch+var_2C], edi
call	jabber_get_next_id
mov	[ebx+4], eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aId_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
jmp	short loc_61C579C5
mov	[esp+2Ch+var_24], offset aGet 
mov	[esp+2Ch+var_28], offset aType_7 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
jmp	loc_61C579BD
align 10h
mov	[esp+2Ch+var_24], offset aResult 
mov	[esp+2Ch+var_28], offset aType_7 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
jmp	loc_61C579BD
call	__stack_chk_fail
align 4
public jabber_iq_new_query
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aQuery_8 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C57AD1
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_iq_set_callback
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+arg_4]
mov	[eax+0Ch], edx
mov	edx, [esp+1Ch+arg_8]
mov	[eax+10h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57B09
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_iq_set_id
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
test	esi, esi
jz	short loc_61C57B6C
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aId_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57B88
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_28], offset aId_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_remove_attrib
mov	dword ptr [ebx+4], 0
jmp	short loc_61C57B59
call	__stack_chk_fail
align 10h
public jabber_iq_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C57BD8
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57C05
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aIqNull 
mov	[esp+2Ch+var_28], offset aJabber_iq_free 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57C05
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public jabber_iq_send
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C57CBC
mov	eax, [ebx+8]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	jabber_send
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C57CA0
mov	edx, [ebx+0Ch]
test	edx, edx
jz	short loc_61C57CA0
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	esi, eax
mov	eax, [ebx+0Ch]
mov	[esi], eax
mov	eax, [ebx+10h]
mov	[esi+4], eax
mov	[esp+2Ch+var_28], offset aTo_7 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_attrib
mov	[esp+2Ch+var_2C], eax
call	jabber_id_new
mov	[esi+8], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+14h]
mov	eax, [eax+3Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57CEA
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_iq_free
align 4
mov	[esp+2Ch+var_24], offset aIqNull 
mov	[esp+2Ch+var_28], offset aJabber_iq_send 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57CEA
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], eax
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], eax
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
lea	ebx, [esp+4Ch+var_24]
mov	[esp+4Ch+Time],	ebx 
call	time
dec	esi
jz	short loc_61C57D48
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C57E36
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], 2
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Time],	eax
call	jabber_iq_new
mov	esi, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	esi
call	jabber_iq_set_id
test	edi, edi
jz	short loc_61C57D89
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aTo_7 
mov	eax, [esi+8]
mov	[esp+4Ch+Time],	eax
call	xmlnode_set_attrib
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+8]
mov	[esp+4Ch+Time],	eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+4Ch+var_48], offset aUrnXmppTime_0	
mov	[esp+4Ch+Time],	eax
call	xmlnode_set_namespace
mov	[esp+4Ch+Time],	ebx 
call	localtime
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+Time],	eax
call	purple_get_tzoff_str
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aTzo_0	
mov	[esp+4Ch+Time],	edi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	eax
call	xmlnode_insert_data
mov	[esp+4Ch+Time],	ebx 
call	gmtime
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aYMDtHMSz_0 
call	purple_utf8_strftime
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aUtc 
mov	[esp+4Ch+Time],	edi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	eax
call	xmlnode_insert_data
mov	[esp+4Ch+Time],	esi
call	jabber_iq_send
jmp	loc_61C57D2D
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
cmp	[esp+3Ch+arg_8], 1
jz	short loc_61C57E7C
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C57FE6
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aJabberIqVers_0 
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_new_query
mov	edi, eax
test	ebx, ebx
jz	short loc_61C57EB1
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aTo_7 
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	jabber_iq_set_id
mov	[esp+3Ch+var_38], offset aQuery_8 
mov	eax, [edi+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
mov	ebx, eax
call	purple_core_get_ui_info
mov	esi, eax
test	eax, eax
jz	loc_61C57F94
mov	[esp+3Ch+var_38], offset aName_8 
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+3Ch+var_38], offset aVersion_1 
mov	[esp+3Ch+var_3C], esi
call	g_hash_table_lookup
test	ebp, ebp
jz	loc_61C57F94
test	eax, eax
jz	loc_61C57F94
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aSLibpurple2_10 
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_38], offset aName_8 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_data
mov	[esp+3Ch+var_38], offset aVersion_1 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_data
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C57FE6
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
			
mov	[esp+3Ch+var_38], offset aName_8 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], offset aLibpurple 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_data
mov	[esp+3Ch+var_38], offset aVersion_1 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], offset a2_10_11 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_insert_data
jmp	short loc_61C57F75
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
cmp	[esp+3Ch+arg_8], 1
jz	short loc_61C5802C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C580E9
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aJabberIqLast_0 
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+Time],	ebx
call	jabber_iq_new_query
mov	ebp, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+Time],	eax
call	jabber_iq_set_id
test	esi, esi
jz	short loc_61C5806D
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aTo_7 
mov	eax, [ebp+8]
mov	[esp+3Ch+Time],	eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], offset aQuery_8 
mov	eax, [ebp+8]
mov	[esp+3Ch+Time],	eax
call	xmlnode_get_child
mov	esi, eax
mov	ecx, [ebx+50h]
test	ecx, ecx
jnz	short loc_61C580D8
xor	eax, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	offset aLd 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aSeconds_1 
mov	[esp+3Ch+Time],	esi
call	xmlnode_set_attrib
mov	[esp+3Ch+Time],	ebx
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C580E9
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	[esp+3Ch+Time],	0 
call	time
sub	eax, [ebx+50h]
jmp	short loc_61C5808B
			
call	__stack_chk_fail
align 10h
public jabber_iq_remove_callback_by_id
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C58126
mov	[esp+1Ch+arg_4], edx
mov	eax, [eax+3Ch]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_hash_table_remove
call	__stack_chk_fail
align 4
public jabber_iq_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_34], edx
mov	ebp, [esp+6Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], ecx
xor	ecx, ecx
mov	[esp+6Ch+var_68], offset aFrom_0 
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_get_attrib
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_68], offset aId_2 
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_get_attrib
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+var_68], offset aType_7 
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_get_attrib
mov	[esp+6Ch+var_44], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	jabber_id_new
mov	[esp+6Ch+var_3C], eax
mov	edi, [esp+6Ch+var_40]
test	edi, edi
jz	short loc_61C581A7
test	eax, eax
jz	loc_61C5860F
mov	ebx, [ebp+18h]
test	ebx, ebx
jnz	short loc_61C581B7
jmp	short loc_61C581BE
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_61C581BE
mov	esi, [ebx+8]
test	esi, esi
jnz	short loc_61C581B0
			
mov	ecx, [esp+6Ch+var_44]
test	ecx, ecx
jz	loc_61C58294
mov	edi, offset aGet 
mov	ecx, 4
mov	esi, [esp+6Ch+var_44]
repe cmpsb
jnz	short loc_61C58240
mov	esi, 1
			
mov	edi, [esp+6Ch+var_38]
test	edi, edi
jz	short loc_61C581F6
mov	eax, [esp+6Ch+var_38]
cmp	byte ptr [eax],	0
jnz	loc_61C582D0
cmp	esi, 1
jbe	loc_61C58424
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aIqOfTypeSMissi 
mov	[esp+6Ch+var_6C], offset aJabber_14 
call	purple_debug_error
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5841D
			
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_id_free
align 10h
mov	edi, offset byte_61C7EF2F
mov	ecx, 4
mov	esi, [esp+6Ch+var_44]
repe cmpsb
jz	short loc_61C58280
mov	edi, offset aResult 
mov	ecx, 7
mov	esi, [esp+6Ch+var_44]
repe cmpsb
jz	short loc_61C58287
mov	edi, offset aError_3 
mov	ecx, 6
mov	esi, [esp+6Ch+var_44]
repe cmpsb
jnz	short loc_61C5829C
mov	esi, 3
jmp	loc_61C581E1
xor	esi, esi
jmp	loc_61C581E1
mov	esi, 2
jmp	loc_61C581E1
align 4
mov	[esp+6Ch+var_44], offset aNull_0 
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aIqWithInvalidT 
mov	[esp+6Ch+var_6C], offset aJabber_14 
call	purple_debug_error
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jz	loc_61C5822B
jmp	loc_61C5841D
align 10h
mov	edx, [esp+6Ch+var_34]
mov	edi, [edx+64h]
mov	[esp+6Ch+var_6C], edi
call	purple_connection_get_prpl
mov	[esp+6Ch+var_54], ebp
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_58], ecx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_5C], edx
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_60], ecx
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aJabberReceivin 
mov	[esp+6Ch+var_6C], eax
call	purple_signal_emit_return_1
test	eax, eax
jnz	loc_61C5821B
lea	eax, [esi-2]
cmp	eax, 1
jbe	loc_61C58643
			
test	ebx, ebx
jz	loc_61C5851E
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_get_namespace
test	eax, eax
jz	loc_61C5851E
mov	[esp+6Ch+var_64], eax
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], offset aSS_4 
call	g_strdup_printf
mov	edi, eax
mov	[esp+6Ch+var_68], eax
mov	eax, ds:dword_61C96048
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_68], edi
mov	eax, ds:dword_61C9604C
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
mov	[esp+6Ch+var_6C], edi
mov	[esp+6Ch+var_48], eax
call	g_free
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jle	short loc_61C583DC
mov	eax, [esp+6Ch+var_34]
mov	edx, [eax+64h]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_48], edx
call	purple_connection_get_prpl
mov	[esp+6Ch+var_54], ebx
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_58], ecx
mov	ecx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_5C], ecx
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_60], ecx
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aJabberWatchedI 
mov	[esp+6Ch+var_6C], eax
call	purple_signal_emit_return_1
test	eax, eax
jnz	loc_61C5821B
mov	eax, [esp+6Ch+var_30]
test	eax, eax
jz	loc_61C5851E
mov	[esp+6Ch+var_5C], ebx
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
mov	eax, [esp+6Ch+var_30]
call	eax
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_61C5822B
			
call	__stack_chk_fail
align 4
mov	[esp+6Ch+var_68], 3
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	jabber_iq_new
mov	ebx, eax
mov	eax, [eax+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_free
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_copy
mov	[ebx+8], eax
mov	edx, [esp+6Ch+var_40]
test	edx, edx
jz	short loc_61C58486
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aTo_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aFrom_0 
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_remove_attrib
mov	eax, [ebx+8]
mov	[esp+6Ch+var_64], offset aError_3 
mov	[esp+6Ch+var_68], offset aType_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	jabber_get_next_id
mov	[ebx+4], eax
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aId_2 
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aError_3 
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+6Ch+var_64], offset aModify_0 
mov	[esp+6Ch+var_68], offset aType_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aBadRequest_0 
mov	[esp+6Ch+var_6C], esi
call	xmlnode_new_child
mov	[esp+6Ch+var_68], offset aUrnIetfParam_6 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_namespace
mov	[esp+6Ch+var_6C], ebx
call	jabber_iq_send
jmp	loc_61C5821B
			
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aUnhandledIqWit 
mov	[esp+6Ch+var_6C], offset aJabber_14 
call	purple_debug_misc
cmp	esi, 1
ja	loc_61C5821B
mov	[esp+6Ch+var_68], 3
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	jabber_iq_new
mov	ebx, eax
mov	eax, [eax+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_free
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_copy
mov	[ebx+8], eax
mov	ebp, [esp+6Ch+var_40]
test	ebp, ebp
jz	short loc_61C585A5
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aTo_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aFrom_0 
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_remove_attrib
mov	eax, [ebx+8]
mov	[esp+6Ch+var_64], offset aError_3 
mov	[esp+6Ch+var_68], offset aType_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aError_3 
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+6Ch+var_64], offset aCancel_4 
mov	[esp+6Ch+var_68], offset aType_7 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_64], offset a501 
mov	[esp+6Ch+var_68], offset aCode_2 
mov	[esp+6Ch+var_6C], esi
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aFeatureNotImpl 
jmp	loc_61C584F9
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aReceivedAnIqWi 
mov	[esp+6Ch+var_6C], offset aJabber_14 
call	purple_debug_error
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5841D
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	eax, [edx+3Ch]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	loc_61C58323
mov	edx, [eax+8]
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_48], edx
call	jabber_id_equal
test	eax, eax
mov	edx, [esp+6Ch+var_48]
jnz	loc_61C58768
mov	eax, [esp+6Ch+var_3C]
test	eax, eax
jz	loc_61C587DA
test	edx, edx
jz	short loc_61C586F3
			
mov	eax, [edi+8]
test	eax, eax
jz	loc_61C587C6
mov	[esp+6Ch+var_6C], eax
call	jabber_id_get_full_jid
mov	edx, [esp+6Ch+var_40]
test	edx, edx
jz	loc_61C587BC
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], edx
mov	ecx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aGotAResultIqWi 
mov	[esp+6Ch+var_6C], offset aJabber_14 
mov	[esp+6Ch+var_48], eax
call	purple_debug_error
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	loc_61C58323
mov	edx, [esp+6Ch+var_34]
mov	eax, [edx+5Ch]
mov	eax, [eax+4]
mov	[esp+6Ch+var_68], eax
mov	ecx, [esp+6Ch+var_3C]
mov	eax, [ecx+4]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C58697
mov	edx, [esp+6Ch+var_3C]
mov	eax, [edx]
test	eax, eax
jz	loc_61C58823
mov	ecx, [esp+6Ch+var_34]
mov	edx, [ecx+5Ch]
mov	edx, [edx]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C58697
mov	edx, [esp+6Ch+var_3C]
mov	eax, [edx+8]
test	eax, eax
jz	short loc_61C58768
mov	ecx, [esp+6Ch+var_34]
mov	edx, [ecx+5Ch]
mov	edx, [edx+8]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C58697
			
mov	eax, [edi+4]
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], ebp
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	dword ptr [edi]
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	jabber_iq_remove_callback_by_id
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jz	loc_61C5822B
jmp	loc_61C5841D
align 4
mov	edx, offset aNull_0 
jmp	loc_61C586BA
mov	edx, [esp+6Ch+var_34]
mov	eax, [edx+5Ch]
mov	[esp+6Ch+var_6C], eax
call	jabber_id_get_bare_jid
jmp	loc_61C586AA
mov	ecx, [esp+6Ch+var_34]
mov	eax, [ecx+5Ch]
mov	eax, [eax]
mov	[esp+6Ch+var_68], eax
mov	eax, [edx]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
mov	edx, [esp+6Ch+var_48]
jz	loc_61C58697
mov	ecx, [esp+6Ch+var_34]
mov	eax, [ecx+5Ch]
mov	eax, [eax+4]
mov	[esp+6Ch+var_68], eax
mov	eax, [edx+4]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C58697
jmp	loc_61C58768
mov	ecx, [edx+8]
test	ecx, ecx
jnz	loc_61C58722
jmp	loc_61C58768
align 4
public jabber_iq_register_handler
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSS_4 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C58889
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], eax
mov	eax, ds:dword_61C96048
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_hash_table_replace
call	__stack_chk_fail
align 10h
public jabber_iq_signal_register
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_61C5891C
cmp	byte ptr [eax],	0
jz	short loc_61C5891C
test	edx, edx
jz	loc_61C5894C
cmp	byte ptr [edx],	0
jz	loc_61C5894C
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSS_4 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C5896C
inc	eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C58987
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
			
mov	[esp+2Ch+var_24], offset aNodeNullNode0	
mov	[esp+2Ch+var_28], offset aJabber_iq_sign 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C58987
add	esp, 28h
pop	ebx
retn
align 4
			
mov	[esp+2Ch+var_24], offset aXmlnsNullXmlns 
mov	[esp+2Ch+var_28], offset aJabber_iq_sign 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C58938
align 4
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_61C58938
			
call	__stack_chk_fail
public jabber_iq_signal_unregister
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_61C58A20
cmp	byte ptr [eax],	0
jz	short loc_61C58A20
test	edx, edx
jz	loc_61C58A50
cmp	byte ptr [edx],	0
jz	loc_61C58A50
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSS_4 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
cmp	eax, 1
jz	loc_61C58A70
jle	short loc_61C58A06
dec	eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C58A83
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 10h
			
mov	[esp+2Ch+var_24], offset aNodeNullNode0	
mov	[esp+2Ch+var_28], offset aJabber_iq_si_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C58A83
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	[esp+2Ch+var_24], offset aXmlnsNullXmlns 
mov	[esp+2Ch+var_28], offset aJabber_iq_si_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C58A3C
align 10h
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
jmp	short loc_61C58A06
			
call	__stack_chk_fail
public jabber_iq_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C96048, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C9604C, eax
mov	[esp+2Ch+var_24], offset jingle_parse
mov	[esp+2Ch+var_28], offset aUrnXmppJingle1 
mov	[esp+2Ch+var_2C], offset aJingle 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_gmail_poke
mov	[esp+2Ch+var_28], offset aGoogleMailNo_0 
mov	[esp+2Ch+var_2C], offset aMailbox_0 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_gmail_poke
mov	[esp+2Ch+var_28], offset aGoogleMailNo_0 
mov	[esp+2Ch+var_2C], offset aNewMail 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_ping_parse
mov	[esp+2Ch+var_28], offset aUrnXmppPing_0	
mov	[esp+2Ch+var_2C], offset aPing 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_google_handle_jingle_info
mov	[esp+2Ch+var_28], offset aGoogleJingle_0 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_bytestreams_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__18 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_disco_info_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__19 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_disco_items_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__20 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset sub_61C57FEC
mov	[esp+2Ch+var_28], offset aJabberIqLast_0 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_oob_parse
mov	[esp+2Ch+var_28], offset aJabberIqOob 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_register_parse
mov	[esp+2Ch+var_28], offset aJabberIqRegi_1 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_roster_parse
mov	[esp+2Ch+var_28], offset aJabberIqRost_0 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset sub_61C57E3C
mov	[esp+2Ch+var_28], offset aJabberIqVers_0 
mov	[esp+2Ch+var_2C], offset aQuery_8 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_blocklist_parse_push
mov	[esp+2Ch+var_28], offset aUrnXmppBlockin 
mov	[esp+2Ch+var_2C], offset aBlock	
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset jabber_blocklist_parse_push
mov	[esp+2Ch+var_28], offset aUrnXmppBlockin 
mov	[esp+2Ch+var_2C], offset aUnblock 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_24], offset sub_61C57CF0
mov	[esp+2Ch+var_28], offset aUrnXmppTime_0	
mov	[esp+2Ch+var_2C], offset aTime_0 
call	jabber_iq_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C58CB8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_iq_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C96048
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_61C9604C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C9604C, 0
mov	ds:dword_61C96048, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C58D0C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_61C58D48
nop
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_cmd_unregister
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C58D2C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C58D59
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C58DE8
mov	edx, [esi]
mov	[esp+0Ch], edx
mov	edx, [eax+8]
mov	[esp+8], edx
mov	eax, [eax+4]
mov	[esp+4], eax
mov	dword ptr [esp], offset	aS@SS_0	
call	g_strdup_printf
mov	edi, eax
mov	esi, [esi+4]
mov	[esp], ebx
call	purple_conversation_get_gc
mov	dword ptr [esp+0Ch], 0
mov	[esp+8], esi
mov	[esp+4], edi
mov	[esp], eax
call	jabber_message_send_im
mov	[esp], edi
call	g_free
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C58DEF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, 1
jmp	short loc_61C58DD4
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Str], ebp
call	jabber_chat_find_by_conv
mov	ecx, eax
test	eax, eax
jz	loc_61C58F54
test	esi, esi
jz	loc_61C58F54
mov	eax, [esi]
test	eax, eax
jz	loc_61C58F54
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Val], offset g_str_equal
mov	[esp+4Ch+Str], offset g_str_hash
mov	[esp+4Ch+var_38], ecx
call	g_hash_table_new_full
mov	ebx, eax
mov	edx, [esi]
mov	[esp+4Ch+Val], 40h 
mov	[esp+4Ch+Str], edx 
mov	[esp+4Ch+var_34], edx
call	strchr
test	eax, eax
mov	edx, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_38]
jz	loc_61C58F64
mov	[esp+4Ch+Str], edx
call	jabber_id_new
mov	edi, eax
test	eax, eax
mov	ecx, [esp+4Ch+var_38]
jz	loc_61C58F7A
mov	edx, [eax]
mov	eax, [eax+4]
mov	[esp+4Ch+var_30], eax
mov	eax, [edi+8]
test	eax, eax
jz	loc_61C58F5C
			
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+Val], offset aRoom_0 
mov	[esp+4Ch+Str], ebx
mov	[esp+4Ch+var_34], eax
call	g_hash_table_insert
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+Val], offset aServer_1	
mov	[esp+4Ch+Str], ebx
call	g_hash_table_insert
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], offset aHandle_0	
mov	[esp+4Ch+Str], ebx
call	g_hash_table_insert
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C58F17
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], offset aPassword_3 
mov	[esp+4Ch+Str], ebx
call	g_hash_table_insert
mov	[esp+4Ch+Str], ebp
call	purple_conversation_get_gc
mov	[esp+4Ch+Val], ebx
mov	[esp+4Ch+Str], eax
call	jabber_chat_join
mov	[esp+4Ch+Str], ebx
call	g_hash_table_destroy
mov	[esp+4Ch+Str], edi
call	jabber_id_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C58F75
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, 1
jmp	short loc_61C58F3D
align 4
mov	eax, [ecx+0Ch]
jmp	loc_61C58EB4
			
mov	eax, [ecx+8]
mov	[esp+4Ch+var_30], eax
mov	eax, [ecx+0Ch]
xor	edi, edi
jmp	loc_61C58EB4
call	__stack_chk_fail
mov	edx, [esi]
mov	[esp+4Ch+Val], 40h 
mov	[esp+4Ch+Str], edx 
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
call	strchr
test	eax, eax
mov	edx, [esp+4Ch+var_34]
mov	ecx, [esp+4Ch+var_38]
jz	short loc_61C58F64
mov	[esp+4Ch+Val], offset aInvalidXmppId 
mov	[esp+4Ch+Str], offset aPidgin_8	
call	libintl_dgettext
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, 1
jmp	loc_61C58F3D
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C5903C
mov	esi, [eax]
test	esi, esi
jz	short loc_61C5903C
mov	edi, [eax+4]
test	edi, edi
jz	short loc_61C59044
mov	[esp+3Ch+var_3C], ebx
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_get_id
mov	ebp, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_conversation_get_gc
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	jabber_chat_invite
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5904B
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, 1
jmp	short loc_61C59028
align 4
mov	edi, offset byte_61C7F35C
jmp	short loc_61C58FF8
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	jabber_chat_find_by_conv
mov	ebp, eax
test	eax, eax
jz	loc_61C591F8
test	ebx, ebx
jz	loc_61C591F8
mov	edx, [ebx]
test	edx, edx
jz	loc_61C591F8
mov	edi, offset aModerator_0 
mov	ecx, 0Ah
mov	esi, edx
repe cmpsb
jnz	loc_61C59170
			
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C59204
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset asc_61C7F393 
mov	[esp+4Ch+var_4C], eax
call	g_strsplit
mov	[esp+4Ch+var_34], eax
mov	eax, [eax]
test	eax, eax
jz	loc_61C591E4
mov	edi, [esp+4Ch+var_34]
add	edi, 4
mov	esi, [esp+4Ch+var_34]
jmp	short loc_61C590F8
mov	esi, edi
add	edi, 4
mov	eax, [edi-4]
test	eax, eax
jz	loc_61C591E4
mov	[esp+4Ch+var_40], 0
mov	edx, [ebx]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	jabber_chat_role_user
test	eax, eax
jnz	short loc_61C590E8
mov	esi, [esi]
mov	ebx, [ebx]
mov	[esp+4Ch+var_48], offset aUnableToSetRol 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strfreev
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C59217
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	edi, offset aParticipant_0 
mov	ecx, 0Ch
mov	esi, edx
repe cmpsb
jz	loc_61C590AA
mov	edi, offset aVisitor 
mov	ecx, 8
mov	esi, edx
repe cmpsb
jz	loc_61C590AA
mov	edi, offset aNone_0 
mov	ecx, 5
mov	esi, edx
repe cmpsb
jz	loc_61C590AA
mov	[esp+4Ch+var_48], offset aUnknownRoleS 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
mov	[esp+4Ch+var_38], edx
call	libintl_dgettext
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, 1
jmp	loc_61C59155
			
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strfreev
xor	eax, eax
jmp	loc_61C59155
align 4
			
mov	eax, 1
jmp	loc_61C59155
align 4
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	jabber_chat_role_list
xor	eax, eax
jmp	loc_61C59155
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	jabber_chat_find_by_conv
mov	ebp, eax
test	eax, eax
jz	loc_61C593D0
test	ebx, ebx
jz	loc_61C593D0
mov	edx, [ebx]
test	edx, edx
jz	loc_61C593D0
mov	edi, offset aOwner_0 
mov	ecx, 6
mov	esi, edx
repe cmpsb
jnz	loc_61C59334
			
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C593DC
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset asc_61C7F393 
mov	[esp+4Ch+var_4C], eax
call	g_strsplit
mov	[esp+4Ch+var_34], eax
mov	eax, [eax]
test	eax, eax
jz	loc_61C593BC
mov	edi, [esp+4Ch+var_34]
add	edi, 4
mov	esi, [esp+4Ch+var_34]
jmp	short loc_61C592C4
mov	esi, edi
add	edi, 4
mov	eax, [edi-4]
test	eax, eax
jz	loc_61C593BC
mov	edx, [ebx]
mov	[esp+4Ch+var_44], edx 
mov	[esp+4Ch+var_48], eax 
mov	[esp+4Ch+var_4C], ebp 
call	jabber_chat_affiliate_user
test	eax, eax
jnz	short loc_61C592B4
mov	ebp, [ebx]
mov	ebx, [esi]
mov	[esp+4Ch+var_48], offset aUnableToAffili 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strfreev
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C593EF
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, offset aAdmin 
mov	ecx, 6
mov	esi, edx
repe cmpsb
jz	loc_61C59276
mov	edi, offset aMember 
mov	ecx, 7
mov	esi, edx
repe cmpsb
jz	loc_61C59276
mov	edi, offset aOutcast_0 
mov	ecx, 8
mov	esi, edx
repe cmpsb
jz	loc_61C59276
mov	edi, offset aNone_0 
mov	ecx, 5
mov	esi, edx
repe cmpsb
jz	loc_61C59276
mov	[esp+4Ch+var_48], offset aUnknownAffilia 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
mov	[esp+4Ch+var_38], edx
call	libintl_dgettext
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, 1
jmp	loc_61C59319
			
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strfreev
xor	eax, eax
jmp	loc_61C59319
align 10h
			
mov	eax, 1
jmp	loc_61C59319
align 4
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	jabber_chat_affiliation_list
xor	eax, eax
jmp	loc_61C59319
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Time],	ebx
call	jabber_chat_find_by_conv
test	eax, eax
jz	loc_61C59520
test	esi, esi
jz	short loc_61C59431
mov	edx, [esi]
test	edx, edx
jz	short loc_61C59431
cmp	byte ptr [edx],	0
jnz	loc_61C594EC
			
mov	[esp+4Ch+Time],	ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+Time],	eax
call	purple_conv_chat_get_topic
test	eax, eax
jz	loc_61C594FC
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+4Ch+Time],	eax
call	purple_markup_linkify
mov	edi, eax
mov	[esp+4Ch+var_48], offset aCurrentTopicIs 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+Time],	ebp
call	g_free
mov	[esp+4Ch+Time],	edi
call	g_free
mov	[esp+4Ch+Time],	0 
call	time
mov	edi, eax
mov	[esp+4Ch+Time],	ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], 44h
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset byte_61C7F35C
mov	[esp+4Ch+Time],	eax
call	purple_conv_chat_write
mov	[esp+4Ch+Time],	esi
call	g_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C59527
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	eax
call	jabber_chat_change_topic
xor	eax, eax
jmp	short loc_61C594D7
mov	[esp+4Ch+var_48], offset aNoTopicIsSet 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+Time],	eax
call	g_strdup
mov	esi, eax
jmp	loc_61C59497
align 10h
mov	eax, 1
jmp	short loc_61C594D7
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C59564
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_register
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5956B
add	esp, 2Ch
retn
mov	eax, 1
jmp	short loc_61C59554
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C595BC
test	ebx, ebx
jz	short loc_61C595B8
mov	edx, [ebx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_part
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C595C3
add	esp, 28h
pop	ebx
retn
xor	edx, edx
jmp	short loc_61C59599
mov	eax, 1
jmp	short loc_61C595A7
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C59600
mov	[esp+2Ch+var_2C], eax
call	jabber_chat_request_room_configure
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C59607
add	esp, 2Ch
retn
mov	eax, 1
jmp	short loc_61C595F0
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_connection
mov	edi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_61C59658
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C596C9
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, [edi+1Ch]
mov	[esp+3Ch+var_3C], esi
call	jabber_get_resource
mov	ebx, eax
test	eax, eax
jz	short loc_61C596BC
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C596BC
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_find_resource
mov	esi, eax
test	eax, eax
jz	short loc_61C596BC
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C596C9
mov	[esp+3Ch+arg_4], ebp
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_resource_has_capability
align 4
			
mov	[esp+3Ch+var_3C], ebx
call	g_free
jmp	loc_61C59640
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+arg_0]
mov	edx, [eax+0Ch]
mov	esi, [edx+1Ch]
mov	[esp+7Ch+var_38], edx
call	purple_request_fields_new
mov	ebx, eax
mov	[esp+7Ch+var_7C], 0
call	purple_request_field_group_new
mov	edi, eax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_request_fields_add_group
mov	[esp+7Ch+var_78], offset aPassword_4 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset byte_61C7F35C
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aPassword1 
call	purple_request_field_string_new
mov	ebp, eax
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_string_set_masked
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_set_required
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], edi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aPasswordAgain	
mov	[esp+7Ch+var_7C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset byte_61C7F35C
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aPassword2 
call	purple_request_field_string_new
mov	ebp, eax
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_string_set_masked
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], ebp
call	purple_request_field_set_required
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], edi
call	purple_request_field_group_add_field
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], edx
call	purple_connection_get_account
mov	[esp+7Ch+var_78], offset aCancel_5 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aOk_0 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aPleaseEnterYou 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aChangeXmppPass 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aChangeXmppPass 
mov	[esp+7Ch+var_7C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], esi
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_54], 0
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_58], ecx
mov	[esp+7Ch+var_5C], 0
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_60], edx
mov	[esp+7Ch+var_64], offset sub_61C598C8
mov	[esp+7Ch+var_68], ebp
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], edi
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	eax, [esi+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_fields
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C598C3
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Str2],	offset aPassword1 
mov	[esp+4Ch+Str1],	edi
call	purple_request_fields_get_string
mov	ebx, eax
mov	[esp+4Ch+Str2],	offset aPassword2 
mov	[esp+4Ch+Str1],	edi
call	purple_request_fields_get_string
mov	[esp+4Ch+Str2],	eax 
mov	[esp+4Ch+Str1],	ebx 
call	strcmp
test	eax, eax
jnz	loc_61C599EC
mov	[esp+4Ch+var_44], offset aJabberIqRegi_2 
mov	[esp+4Ch+Str2],	0
mov	[esp+4Ch+Str1],	esi
call	jabber_iq_new_query
mov	edi, eax
mov	eax, [esi+5Ch]
mov	eax, [eax+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	offset aTo_8 
mov	eax, [edi+8]
mov	[esp+4Ch+Str1],	eax
call	xmlnode_set_attrib
mov	[esp+4Ch+Str2],	offset aQuery_9	
mov	eax, [edi+8]
mov	[esp+4Ch+Str1],	eax
call	xmlnode_get_child
mov	ebp, eax
mov	[esp+4Ch+Str2],	offset aUsername_1 
mov	[esp+4Ch+Str1],	eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [esi+5Ch]
mov	edx, [edx]
mov	[esp+4Ch+Str2],	edx
mov	[esp+4Ch+Str1],	eax
call	xmlnode_insert_data
mov	[esp+4Ch+Str2],	offset aPassword_3 
mov	[esp+4Ch+Str1],	ebp
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+Str2],	ebx
mov	[esp+4Ch+Str1],	eax
call	xmlnode_insert_data
mov	[esp+4Ch+Str1],	ebx
call	g_strdup
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Str2],	offset sub_61C60C60
mov	[esp+4Ch+Str1],	edi
call	jabber_iq_set_callback
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C59A4B
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	[esp+4Ch+Str2],	offset aNewPasswordsDo 
mov	[esp+4Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Str2],	0
mov	eax, [esi+64h]
mov	[esp+4Ch+Str1],	eax
call	purple_notify_message
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C59A4B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_30], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+10h]
test	eax, eax
jz	loc_61C59C2C
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	eax
call	g_markup_escape_text
mov	ebx, eax
mov	eax, [esi+4]
test	eax, eax
jz	loc_61C59C24
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aS_0 
call	g_strdup_printf
mov	edi, eax
mov	eax, [esi+0Ch]
mov	[esp+4Ch+Time],	eax
call	jabber_buddy_state_get_name
mov	[esp+4Ch+var_38], eax
test	ebx, ebx
jz	short loc_61C59ACD
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	eax
call	purple_utf8_strcasecmp
test	eax, eax
jz	loc_61C59C08
test	edi, edi
jz	loc_61C59C1A
mov	ebp, edi
mov	[esp+4Ch+var_48], offset aStatus_1 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aSS_6 
call	g_strdup_printf
mov	ebp, eax
test	ebx, ebx
jz	loc_61C59C34
mov	edx, ebx
mov	eax, offset asc_61C7F4ED 
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aSSS_1 
call	g_strdup_printf
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebp
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+Time],	edx
mov	[esp+4Ch+var_3C], eax
call	purple_notify_user_info_add_pair
mov	[esp+4Ch+Time],	ebp
call	g_free
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+Time],	eax
call	g_free
mov	[esp+4Ch+Time],	ebx
call	g_free
mov	ecx, [esi+14h]
test	ecx, ecx
jz	short loc_61C59B6F
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jnz	short loc_61C59B90
			
mov	[esp+4Ch+Time],	edi
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C59C4A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+Time],	0 
call	time
sub	eax, [esi+14h]
mov	[esp+4Ch+Time],	eax
call	purple_str_seconds_to_string
mov	ebx, eax
test	edi, edi
jz	loc_61C59C40
mov	esi, edi
mov	[esp+4Ch+var_48], offset aIdle_0 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aSS_6 
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+Time],	edx
call	purple_notify_user_info_add_pair
mov	[esp+4Ch+Time],	ebx
call	g_free
mov	[esp+4Ch+Time],	esi
call	g_free
jmp	loc_61C59B6F
align 4
mov	[esp+4Ch+Time],	ebx
call	g_free
xor	ebx, ebx
test	edi, edi
jnz	loc_61C59AD5
mov	ebp, offset byte_61C7F35C
jmp	loc_61C59AD7
xor	edi, edi
jmp	loc_61C59AA6
align 4
xor	ebx, ebx
jmp	loc_61C59A89
align 4
mov	edx, offset byte_61C7F35C
mov	eax, edx
jmp	loc_61C59B10
mov	esi, offset byte_61C7F35C
jmp	loc_61C59BB3
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+78h+var_48]
mov	edi, [esp+78h+var_40]
mov	eax, ds:__stack_chk_guard
mov	[esp+78h+var_5C], eax
xor	eax, eax
mov	[esp+78h+var_70], offset aUrnXmppBlock_0 
mov	[esp+78h+var_74], offset aBlocklist 
mov	eax, [esp+78h+var_38]
mov	[esp+78h+var_78], eax
call	xmlnode_get_child_with_namespace
mov	ebx, eax
mov	eax, [esi+64h]
mov	[esp+78h+var_78], eax
call	purple_connection_get_account
cmp	edi, 3
jz	short loc_61C59D12
test	ebx, ebx
jz	short loc_61C59D12
mov	esi, eax
cmp	dword ptr [eax+38h], 4
jz	short loc_61C59CC2
mov	dword ptr [eax+38h], 4
jmp	short loc_61C59CC2
mov	[esp+78h+var_70], 1
mov	edx, [edx]
mov	[esp+78h+var_74], edx
mov	[esp+78h+var_78], esi
call	purple_privacy_deny_remove
			
mov	edx, [esi+34h]
test	edx, edx
jnz	short loc_61C59CAC
mov	[esp+78h+var_74], offset aItem_4 
mov	[esp+78h+var_78], ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C59D12
nop
mov	[esp+78h+var_74], offset aJid_5	
mov	[esp+78h+var_78], ebx
call	xmlnode_get_attrib
mov	[esp+78h+var_70], 1
mov	[esp+78h+var_74], eax
mov	[esp+78h+var_78], esi
call	purple_privacy_deny_add
mov	[esp+78h+var_78], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C59CE0
			
mov	eax, [esp+78h+var_5C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C59D25
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx+1Ch]
mov	dword ptr [esp+4], offset aPingTimedOut	
mov	dword ptr [esp], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+8], eax
mov	dword ptr [esp+4], 0
mov	[esp], ebx
call	purple_connection_error_reason
mov	dword ptr [esi+114h], 0
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C59D89
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Str], edi
call	purple_account_get_connection
mov	ebp, eax
mov	[esp+4Ch+Str], 154h
call	g_malloc0
mov	ebx, eax
mov	[ebp+1Ch], eax
mov	[eax+64h], ebp
mov	dword ptr [eax], 0FFFFFFFFh
mov	[esp+4Ch+Str], edi
call	purple_account_get_protocol_id
mov	[esp+4Ch+Val], eax
mov	[esp+4Ch+Str], offset aPrplFacebookXm 
call	g_strcmp0
test	eax, eax
jnz	short loc_61C59DEE
or	dword ptr [ebx+8Ch], 10000h
mov	[esp+4Ch+Str], edi
call	purple_account_get_username
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	esi, eax
mov	[esp+4Ch+Val], 2Fh 
mov	[esp+4Ch+Str], eax 
call	strchr
test	eax, eax
jz	short loc_61C59E1E
cmp	byte ptr [eax+1], 0
jz	loc_61C59FC4
			
mov	[esp+4Ch+Str], esi
call	jabber_id_new
mov	[ebx+5Ch], eax
test	eax, eax
jz	loc_61C5A07D
mov	edx, [eax]
test	edx, edx
jz	loc_61C5A010
cmp	byte ptr [edx],	0
jz	loc_61C5A010
mov	eax, [eax+4]
test	eax, eax
jz	loc_61C59FDC
cmp	byte ptr [eax],	0
jz	loc_61C59FDC
mov	[esp+4Ch+var_40], offset jabber_buddy_free
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+Val], offset g_str_equal
mov	[esp+4Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+24h], eax
mov	[esp+4Ch+Val], esi
mov	[esp+4Ch+Str], ebp
call	purple_connection_set_display_name
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+Val], esi
mov	[esp+4Ch+Str], ebx
call	jabber_buddy_find
mov	[ebx+60h], eax
mov	[esp+4Ch+Str], esi
call	g_free
mov	eax, [ebx+60h]
test	eax, eax
jz	loc_61C5A01A
or	dword ptr [eax+0Ch], 0Ch
mov	[esp+4Ch+var_40], offset jabber_iq_callbackdata_free
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+Val], offset g_str_equal
mov	[esp+4Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+3Ch], eax
mov	[esp+4Ch+var_40], offset jabber_chat_free
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+Val], offset g_str_equal
mov	[esp+4Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+2Ch], eax
call	g_random_int
mov	[ebx+40h], eax
mov	[esp+4Ch+Str], 200h
call	purple_circ_buffer_new
mov	[ebx+80h], eax
mov	dword ptr [ebx+108h], 0
mov	dword ptr [ebx+114h], 0
mov	dword ptr [ebx+118h], 78h
mov	byte ptr [ebx+10h], 1
mov	byte ptr [ebx+11h], 0
mov	dword ptr [ebx+134h], 0
mov	dword ptr [ebx+138h], 0
mov	dword ptr [ebx+13Ch], 0
mov	dword ptr [ebx+140h], 0
mov	dword ptr [ebx+144h], 0
mov	dword ptr [ebx+148h], 0
mov	dword ptr [ebx+14Ch], 0
mov	[esp+4Ch+Str], edi
call	purple_account_get_presence
mov	esi, eax
mov	[esp+4Ch+Str], eax
call	purple_presence_is_idle
test	eax, eax
jnz	loc_61C59FCC
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5A08A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	byte ptr [eax],	0
jmp	loc_61C59E1E
mov	[esp+4Ch+Str], esi
call	purple_presence_get_idle_time
mov	[ebx+50h], eax
jmp	short loc_61C59FA7
align 4
			
mov	[esp+4Ch+Val], offset aInvalidXmppId_ 
			
mov	[esp+4Ch+Str], offset aPidgin_8	
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], 7
mov	[esp+4Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+4Ch+Str], esi
call	g_free
xor	ebx, ebx
jmp	short loc_61C59FA7
			
mov	[esp+4Ch+Val], offset aInvalidXmppI_0 
jmp	short loc_61C59FE4
mov	[esp+4Ch+Val], offset aInvalidXmppId 
mov	[esp+4Ch+Str], offset aPidgin_8	
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+Val], 7
mov	[esp+4Ch+Str], ebp
call	purple_connection_error_reason
mov	[esp+4Ch+var_38], offset aJabber_strea_0 
mov	[esp+4Ch+var_3C], 3E1h
mov	[esp+4Ch+var_40], offset aJabber_c 
mov	[esp+4Ch+var_44], offset aFileSLineDSS_2 
mov	[esp+4Ch+Val], 8
mov	[esp+4Ch+Str], 0
call	g_log
xor	ebx, ebx
jmp	loc_61C59FA7
mov	[esp+4Ch+Val], offset aInvalidXmppId 
jmp	loc_61C59FE4
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
mov	dword ptr [edx+4], 0
test	ebx, ebx
jnz	short loc_61C5A0E6
jmp	loc_61C5A1E4
align 10h
mov	[esp+4Ch+var_4C], eax
call	g_strfreev
mov	[esp+4Ch+var_4C], ebp
call	purple_txt_response_destroy
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jz	loc_61C5A1E4
mov	ebp, [ebx]
mov	[esp+4Ch+var_4C], ebp
call	purple_txt_response_get_content
mov	[esp+4Ch+var_44], 2
mov	[esp+4Ch+var_48], offset asc_61C7F5E5 
mov	[esp+4Ch+var_4C], eax
call	g_strsplit
mov	edx, [eax]
mov	esi, edx
mov	edi, offset a_xmppClientXbo 
mov	ecx, 13h
repe cmpsb
setnbe	[esp+4Ch+var_31]
setb	cl
cmp	[esp+4Ch+var_31], cl
jnz	short loc_61C5A0C0
mov	ecx, eax
mov	eax, edx
mov	edx, ecx
mov	ecx, [ecx+4]
mov	[esp+4Ch+var_40], ecx
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aFoundAlternati 
mov	[esp+4Ch+var_4C], offset aJabber_15 
mov	[esp+4Ch+var_38], edx
call	purple_debug_info
mov	edx, [esp+4Ch+var_38]
mov	eax, [edx+4]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jabber_bosh_connection_init
mov	ecx, [esp+4Ch+var_30]
mov	[ecx+12Ch], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], edx
call	g_strfreev
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+12Ch]
test	eax, eax
jnz	short loc_61C5A1F4
mov	[esp+4Ch+var_48], offset aUnableToFindAl 
mov	[esp+4Ch+var_4C], offset aJabber_15 
call	purple_debug_warning
mov	[esp+4Ch+var_48], offset aUnableToConn_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_error_reason
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5A234
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	ebx, ebx
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+12Ch]
test	eax, eax
jz	short loc_61C5A18A
mov	[esp+4Ch+var_4C], eax
call	jabber_bosh_connection_connect
test	ebx, ebx
jz	short loc_61C5A1CD
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset purple_txt_response_destroy
mov	[esp+4Ch+var_4C], ebx
call	g_list_foreach
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5A234
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
			
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset loc_61C5A2F4
mov	[esp+2Ch+var_2C], 0
call	purple_timeout_add
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5A273
add	esp, 2Ch
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
test	eax, eax
jz	short loc_61C5A2C9
mov	edx, [ebx]
mov	ecx, [edx+6Ch]
test	ecx, ecx
jz	short loc_61C5A2C9
mov	ecx, [eax+4Ch]
test	ecx, ecx
jz	short loc_61C5A2C2
mov	edx, [eax+50h]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	ecx
mov	edx, [ebx]
mov	eax, edx
call	sub_61C5A23C
			
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5A2ED
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_connection_get_account
mov	esi, eax
mov	[esp], ebx
call	jabber_parser_free
mov	[esp], esi
call	purple_account_disconnect
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5A339
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_6C], edx
mov	ebx, [esp+9Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], ecx
xor	ecx, ecx
mov	[esp+9Ch+var_94], offset aJabberIqRegi_2 
mov	[esp+9Ch+Str2],	0
mov	eax, [edx]
mov	[esp+9Ch+Str1],	eax
call	jabber_iq_new_query
mov	[esp+9Ch+var_60], eax
mov	[esp+9Ch+Str2],	offset aQuery_9	
mov	eax, [eax+8]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
mov	[esp+9Ch+var_68], eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx+4]
test	eax, eax
jz	short loc_61C5A3C3
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Str2],	offset aTo_8 
mov	ecx, [esp+9Ch+var_60]
mov	eax, [ecx+8]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_set_attrib
mov	[esp+9Ch+Str1],	ebx
call	purple_request_fields_get_groups
mov	[esp+9Ch+var_64], eax
test	eax, eax
jz	loc_61C5A517
lea	ecx, [esp+9Ch+var_5C]
mov	[esp+9Ch+var_74], ecx
mov	edx, [esp+9Ch+var_64]
mov	eax, [edx]
mov	[esp+9Ch+Str1],	eax
call	purple_request_field_group_get_fields
mov	ebp, eax
test	eax, eax
jnz	short loc_61C5A417
jmp	loc_61C5A504
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+Str1],	edx
call	purple_request_field_bool_get_value
test	eax, eax
jnz	loc_61C5A5F6
			
mov	ebp, [ebp+4]
test	ebp, ebp
jz	loc_61C5A504
			
mov	edx, [ebp+0]
mov	[esp+9Ch+var_70], edx
mov	[esp+9Ch+Str1],	edx
call	purple_request_field_get_id
mov	ebx, eax
mov	esi, eax
mov	edi, offset aUnregister	
mov	ecx, 0Bh
repe cmpsb
jz	short loc_61C5A3F8
mov	esi, offset off_61C7A080
mov	ecx, 0Fh
mov	edi, [esp+9Ch+var_74]
rep movsd
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+Str1],	edx
call	purple_request_field_string_get_value
mov	[esp+9Ch+var_70], eax
mov	esi, [esp+9Ch+var_5C]
test	esi, esi
jz	short loc_61C5A40C
lea	edi, [esp+9Ch+var_58]
jmp	short loc_61C5A472
align 4
add	edi, 4
mov	esi, [edi-4]
test	esi, esi
jz	short loc_61C5A40C
mov	[esp+9Ch+Str2],	esi 
mov	[esp+9Ch+Str1],	ebx 
call	strcmp
test	eax, eax
jnz	short loc_61C5A468
mov	[esp+9Ch+Str2],	esi
mov	eax, [esp+9Ch+var_68]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_new_child
mov	[esp+9Ch+var_94], 0FFFFFFFFh
mov	edx, [esp+9Ch+var_70]
mov	[esp+9Ch+Str2],	edx
mov	[esp+9Ch+Str1],	eax
call	xmlnode_insert_data
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	esi, [eax+6Ch]
test	esi, esi
jz	loc_61C5A40C
mov	edi, offset aUsername_1	
mov	ecx, 9
mov	esi, ebx
repe cmpsb
jz	loc_61C5A5BC
mov	edi, offset aPassword_3	
mov	ecx, 9
mov	esi, ebx
repe cmpsb
jnz	loc_61C5A40C
mov	ecx, [esp+9Ch+var_70]
mov	[esp+9Ch+Str2],	ecx
mov	eax, [eax+64h]
mov	eax, [eax+0Ch]
mov	[esp+9Ch+Str1],	eax
call	purple_account_set_password
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	loc_61C5A417
			
mov	eax, [esp+9Ch+var_64]
mov	eax, [eax+4]
mov	[esp+9Ch+var_64], eax
test	eax, eax
jnz	loc_61C5A3DF
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	ebp, [eax+6Ch]
test	ebp, ebp
jz	short loc_61C5A57A
mov	eax, [eax+5Ch]
mov	edx, [eax+8]
test	edx, edx
jz	loc_61C5A6BC
mov	ecx, offset asc_61C7F6A1 
mov	[esp+9Ch+var_8C], edx
mov	[esp+9Ch+var_90], ecx
mov	edx, [eax+4]
mov	[esp+9Ch+var_94], edx
mov	eax, [eax]
mov	[esp+9Ch+Str2],	eax
mov	[esp+9Ch+Str1],	offset aS@SSS 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+9Ch+Str2],	eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	eax, [eax+64h]
mov	eax, [eax+0Ch]
mov	[esp+9Ch+Str1],	eax
call	purple_account_set_username
mov	[esp+9Ch+Str1],	ebx
call	g_free
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx+4]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Str2],	offset sub_61C60F48
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+Str1],	eax
call	jabber_iq_set_callback
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+Str1],	eax
call	jabber_iq_send
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_61C5A6A2
call	__stack_chk_fail
align 4
mov	eax, [eax+5Ch]
mov	eax, [eax]
mov	[esp+9Ch+Str1],	eax
call	g_free
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	esi, [eax+5Ch]
mov	eax, [esp+9Ch+var_70]
mov	[esp+9Ch+Str1],	eax
call	g_strdup
mov	[esi], eax
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	edi, [eax+6Ch]
test	edi, edi
jz	loc_61C5A40C
jmp	loc_61C5A4CF
mov	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+Str1],	eax
call	jabber_iq_free
mov	[esp+9Ch+var_94], offset aJabberIqRegi_2 
mov	[esp+9Ch+Str2],	0
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx]
mov	[esp+9Ch+Str1],	eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+9Ch+Str2],	offset aQuery_9	
mov	eax, [eax+8]
mov	[esp+9Ch+Str1],	eax
call	xmlnode_get_child
mov	ecx, [esp+9Ch+var_6C]
mov	edx, [ecx+4]
test	edx, edx
jz	short loc_61C5A65F
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+Str2],	offset aTo_8 
mov	edx, [ebx+8]
mov	[esp+9Ch+Str1],	edx
mov	[esp+9Ch+var_78], eax
call	xmlnode_set_attrib
mov	eax, [esp+9Ch+var_78]
mov	[esp+9Ch+Str2],	offset aRemove_0 
mov	[esp+9Ch+Str1],	eax
call	xmlnode_new_child
mov	edx, [esp+9Ch+var_6C]
mov	eax, [edx+4]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Str2],	offset sub_61C611D8
mov	[esp+9Ch+Str1],	ebx
call	jabber_iq_set_callback
mov	[esp+9Ch+Str1],	ebx
call	jabber_iq_send
mov	ecx, [esp+9Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C5A5B5
mov	edx, [esp+9Ch+var_6C]
mov	[esp+9Ch+arg_0], edx
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	edx, offset byte_61C7F35C
mov	ecx, edx
jmp	loc_61C5A537
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_34], offset aJabberIqRegi_2 
mov	[esp+3Ch+var_38], 0
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aQuery_9 
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
mov	ebp, eax
test	esi, esi
jz	short loc_61C5A730
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aTo_8 
mov	eax, [ebx+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_insert_child
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset sub_61C60F48
mov	[esp+3Ch+var_3C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5A76C
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_identity_compare
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esi]
mov	[esp+2Ch+Str2],	eax 
mov	eax, [ebx]
mov	[esp+2Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_61C5A7F0
mov	eax, [esi+4]
mov	[esp+2Ch+Str2],	eax 
mov	eax, [ebx+4]
mov	[esp+2Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_61C5A7F0
mov	edx, [ebx+0Ch]
test	edx, edx
jz	short loc_61C5A7E4
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_61C5A804
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C5A80B
mov	[esp+2Ch+arg_4], eax 
mov	[esp+2Ch+arg_0], edx 
add	esp, 24h
pop	ebx
pop	esi
jmp	strcmp
align 4
mov	edx, [esi+0Ch]
test	edx, edx
jz	short loc_61C5A7F0
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5A80B
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, 1
jmp	short loc_61C5A7F0
			
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [ebx+4]
mov	edx, [edx+1Ch]
mov	edx, [edx+1Ch]
mov	ecx, [edx+0DCh]
test	ecx, ecx
jz	short loc_61C5A884
test	eax, eax
jz	loc_61C5A8D0
mov	ecx, [eax]
test	ecx, ecx
jz	loc_61C5A8D0
mov	eax, [eax+4]
test	eax, eax
jz	loc_61C5A8F0
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ecx
mov	[esp+3Ch+Time],	edx
call	jabber_mood_set
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5A90B
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+Time],	0 
call	time
mov	esi, eax
mov	[esp+3Ch+var_38], offset aAccountDoesNot 
mov	[esp+3Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+Str1],	esi
mov	[esp+3Ch+var_30], 200h
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+Time],	ebx
call	purple_conversation_write
mov	eax, 1
jmp	short loc_61C5A86B
align 10h
			
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+Time],	edx
call	jabber_mood_set
xor	eax, eax
jmp	loc_61C5A86B
align 10h
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], ecx
mov	[esp+3Ch+Time],	edx
call	jabber_mood_set
xor	eax, eax
jmp	loc_61C5A86B
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_61C5A9A4
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C5A9A4
mov	[esp+2Ch+Str1],	eax
call	purple_conversation_get_account
mov	[esp+2Ch+Str1],	eax
call	purple_account_get_connection
mov	esi, [ebx]
mov	[esp+2Ch+Str1],	eax
call	purple_connection_get_protocol_data
mov	[esp+2Ch+Str2],	esi
mov	[esp+2Ch+Str1],	eax
call	jabber_ping_jid
test	eax, eax
jz	short loc_61C5A978
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5A9AB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	ebx, [ebx]
mov	[esp+2Ch+Str2],	offset aUnableToPingUs 
mov	[esp+2Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+Str2],	ebx
mov	[esp+2Ch+Str1],	eax
call	g_strdup_printf
mov	[edi], eax
mov	eax, 1
jmp	short loc_61C5A964
align 4
			
mov	eax, 1
jmp	short loc_61C5A964
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+Str1],	eax
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C5AA44
test	ebx, ebx
jz	short loc_61C5AA44
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C5AA44
mov	ecx, [ebx+4]
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], offset aNone_0 
mov	[esp+2Ch+Str2],	edx
mov	[esp+2Ch+Str1],	eax
call	jabber_chat_role_user
test	eax, eax
jz	short loc_61C5AA18
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5AA4B
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	ebx, [ebx]
mov	[esp+2Ch+Str2],	offset aUnableToKickUs 
mov	[esp+2Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+Str2],	ebx
mov	[esp+2Ch+Str1],	eax
call	g_strdup_printf
mov	[esi], eax
mov	eax, 1
jmp	short loc_61C5AA03
align 4
			
mov	eax, 1
jmp	short loc_61C5AA03
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+Str1],	eax
call	jabber_chat_find_by_conv
test	eax, eax
jz	short loc_61C5AADC
test	ebx, ebx
jz	short loc_61C5AADC
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C5AADC
mov	ecx, [ebx+4]
mov	[esp+2Ch+var_24], ecx 
mov	[esp+2Ch+Str2],	edx 
mov	[esp+2Ch+Str1],	eax 
call	jabber_chat_ban_user
test	eax, eax
jz	short loc_61C5AAB0
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5AAE3
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	ebx, [ebx]
mov	[esp+2Ch+Str2],	offset aUnableToBanUse 
mov	[esp+2Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+Str2],	ebx
mov	[esp+2Ch+Str1],	eax
call	g_strdup_printf
mov	[esi], eax
mov	eax, 1
jmp	short loc_61C5AA9B
align 4
			
mov	eax, 1
jmp	short loc_61C5AA9B
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+Str1],	eax
call	jabber_chat_find_by_conv
mov	esi, eax
test	eax, eax
jz	short loc_61C5AB7C
test	ebx, ebx
jz	short loc_61C5AB7C
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C5AB7C
mov	[esp+2Ch+Str1],	eax
call	jabber_resourceprep_validate
test	eax, eax
jz	short loc_61C5AB54
mov	eax, [ebx]
mov	[esp+2Ch+Str2],	eax
mov	[esp+2Ch+Str1],	esi
call	jabber_chat_change_nick
test	eax, eax
setz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5AB83
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+Str2],	offset aInvalidNicknam 
mov	[esp+2Ch+Str1],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+Str1],	eax
call	g_strdup
mov	[edi], eax
mov	eax, 1
jmp	short loc_61C5AB3F
align 4
			
mov	eax, 1
jmp	short loc_61C5AB3F
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0C4h]
test	eax, eax
jz	loc_61C5AC3C
mov	[esp+2Ch+var_24], offset aJabberIqRegi_2 
mov	[esp+2Ch+Str2],	0
mov	[esp+2Ch+Str1],	ebx
call	jabber_iq_new_query
mov	esi, eax
mov	[esp+2Ch+var_24], offset aJabberIqRegi_2 
mov	[esp+2Ch+Str2],	offset aQuery_9	
mov	eax, [eax+8]
mov	[esp+2Ch+Str1],	eax
call	xmlnode_get_child_with_namespace
mov	[esp+2Ch+Str2],	offset aRemove_0 
mov	[esp+2Ch+Str1],	eax
call	xmlnode_new_child
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+Str2],	offset aTo_8 
mov	eax, [esi+8]
mov	[esp+2Ch+Str1],	eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+Str2],	offset sub_61C60DB0
mov	[esp+2Ch+Str1],	esi
call	jabber_iq_set_callback
mov	[esp+2Ch+Str1],	esi
call	jabber_iq_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AC5A
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aJsUnregistrati 
mov	[esp+2Ch+Str2],	offset aJabber_unregis 
mov	[esp+2Ch+Str1],	0
call	g_return_if_fail_warning
jmp	short loc_61C5AC2A
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, eax
mov	ebp, edx
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_34], ecx
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	purple_ip_address_is_valid
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jz	short loc_61C5ACFC
mov	[esp+5Ch+var_5C], ecx
call	g_strdup
mov	[ebp+0], eax
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	edx, [esi]
mov	[esp+5Ch+var_48], edx
mov	[esp+5Ch+var_4C], offset sub_61C5DFC4
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edx
call	purple_proxy_connect
test	eax, eax
jz	short loc_61C5AD0C
mov	eax, 1
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5AD46
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	[ebp+0], eax
jmp	short loc_61C5ACB0
align 4
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jnz	short loc_61C5AD18
xor	eax, eax
jmp	short loc_61C5ACE5
mov	[esp+5Ch+var_58], offset aUnableToConn_0 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_error_reason
xor	eax, eax
jmp	short loc_61C5ACE5
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+98h+var_7C], eax
xor	eax, eax
lea	ebp, [esi+0A0h]
lea	edi, [esi+64h]
jmp	short loc_61C5ADB0
align 4
mov	ebx, [esi+124h]
cmp	ebx, [esi+128h]
jnb	short loc_61C5ADBA
mov	edx, ebx
shl	edx, 5
add	edx, ebx
lea	edx, [ebx+edx*2]
lea	ecx, [eax+edx*4]
inc	ebx
mov	[esi+124h], ebx
mov	[esp+98h+var_90], 0
mov	eax, [ecx+100h]
mov	[esp+98h+var_94], eax
mov	[esp+98h+var_98], ecx
mov	edx, ebp
mov	eax, edi
call	sub_61C5AC60
test	eax, eax
jnz	short loc_61C5AE0D
mov	eax, [esi+120h]
test	eax, eax
jnz	short loc_61C5AD6C
mov	[esp+98h+var_98], eax
call	g_free
mov	dword ptr [esi+120h], 0
mov	eax, [esi+64h]
mov	[esp+98h+var_98], eax
call	purple_connection_get_account
mov	[esp+98h+var_90], 1466h
mov	[esp+98h+var_94], offset aPort 
mov	[esp+98h+var_98], eax
call	purple_account_get_int
mov	edx, [esi+5Ch]
mov	ecx, [edx+4]
mov	[esp+98h+var_90], 1
mov	[esp+98h+var_94], eax
mov	[esp+98h+var_98], ecx
mov	edx, ebp
mov	eax, edi
call	sub_61C5AC60
mov	eax, [esp+98h+var_7C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AE21
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+30h]
mov	eax, [esp+34h]
mov	ebx, [esp+38h]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch], ecx
xor	ecx, ecx
mov	dword ptr [ebx+4], 0
test	eax, eax
jnz	short loc_61C5AEAC
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_connection_get_account
mov	dword ptr [esp+8], 1466h
mov	dword ptr [esp+4], offset aPort	
mov	[esp], eax
call	purple_account_get_int
mov	esi, eax
mov	edx, [ebx+5Ch]
mov	ecx, [edx+4]
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AEDA
lea	edx, [ebx+0A0h]
lea	eax, [ebx+64h]
mov	dword ptr [esp+38h], 1
mov	[esp+34h], esi
mov	[esp+30h], ecx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_61C5AC60
align 4
mov	[ebx+120h], edx
mov	dword ptr [ebx+124h], 0
mov	[ebx+128h], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AEDA
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_61C5AD4C
			
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+34h]
mov	ebx, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+4], ebx
mov	[esp], eax
call	g_list_find
test	eax, eax
jz	short loc_61C5AF38
mov	eax, [ebx+1Ch]
mov	dword ptr [eax+68h], 0
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AF66
mov	[esp+34h], esi
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_connection_ssl_error
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AF66
mov	dword ptr [esp+38h], offset aPurple_connect 
mov	dword ptr [esp+34h], offset aJabber_ssl_con 
mov	dword ptr [esp+30h], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	[esp+2Ch+arg_8], 2
jz	short loc_61C5AFB4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AFEF
mov	[esp+2Ch+arg_8], offset	aErrorInitializ	
mov	[esp+2Ch+arg_4], 0
mov	eax, [ebx+64h]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_connection_error_reason
align 4
mov	[esp+2Ch+var_2C], ebx
call	jabber_disco_items_server
mov	eax, [ebx+0C4h]
test	eax, eax
jnz	short loc_61C5AFD8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AFEF
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5AFEF
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_61C5AB88
			
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jz	short loc_61C5B06C
mov	edx, [ebx+80h]
mov	ecx, [edx+14h]
mov	esi, [ebx]
mov	edx, [ebx+68h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ecx
test	edx, edx
jz	short loc_61C5B09C
mov	[esp+2Ch+var_2C], edx
call	purple_ssl_write
cmp	eax, 0
jl	short loc_61C5B0A8
jz	short loc_61C5B0B2
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5B116
mov	[esp+2Ch+arg_4], eax
mov	eax, [ebx+80h]
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_circ_buffer_mark_read
align 4
mov	eax, [ebx+84h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+84h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5B116
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_2C], esi
call	wpurple_write
jmp	short loc_61C5B03C
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C5B084
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+2Ch+var_28], offset aLostConnecti_0 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5B116
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
			
call	__stack_chk_fail
align 4
public jabber_send
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_20], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [eax+64h]
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
lea	edx, [esp+3Ch+var_20]
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aJabberSendingX 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5B16F
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	ebx, edx
mov	edi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	purple_find_buddy
test	eax, eax
jz	loc_61C5B2E8
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_get_contact_alias
mov	[esp+4Ch+var_30], eax
test	ebx, ebx
jz	loc_61C5B2F4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	jabber_buddy_find
test	eax, eax
jz	loc_61C5B2FC
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	jabber_buddy_find_resource
mov	ebp, eax
test	eax, eax
jz	loc_61C5B30C
mov	[esp+4Ch+var_48], offset aUrnXmppAttenti 
mov	[esp+4Ch+var_4C], eax
call	jabber_resource_has_capability
test	eax, eax
jnz	short loc_61C5B24C
mov	[esp+4Ch+var_48], offset aUnableToBuzzBe 
			
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	[edi], eax
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5B319
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], offset aMessage_1 
call	xmlnode_new
mov	edi, eax
mov	eax, [ebp+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], offset aSS_5 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aTo_8 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_44], offset aHeadline 
mov	[esp+4Ch+var_48], offset aType_8 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aAttention 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aUrnXmppAttenti 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	jabber_send
mov	[esp+4Ch+var_4C], edi
call	xmlnode_free
mov	eax, 1
jmp	loc_61C5B231
align 4
mov	[esp+4Ch+var_30], ebx
test	ebx, ebx
jnz	loc_61C5B1BF
xor	eax, eax
jmp	loc_61C5B231
align 4
mov	[esp+4Ch+var_48], offset aUnableToBuzz_0 
jmp	loc_61C5B211
align 4
mov	[esp+4Ch+var_48], offset aUnableToBuzz_1 
jmp	loc_61C5B211
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	eax, [ebx+4]
mov	edx, [eax+1Ch]
mov	edx, [edx+1Ch]
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	eax
call	purple_get_attention_type_from_code
mov	edi, eax
test	ebp, ebp
jz	loc_61C5B410
mov	esi, [ebp+0]
test	esi, esi
jz	loc_61C5B410
mov	[esp+5Ch+var_58], esi
mov	eax, [ebx+4]
mov	[esp+5Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_61C5B40C
mov	[esp+5Ch+Time],	eax
call	purple_buddy_get_contact_alias
mov	ebp, eax
mov	[esp+5Ch+Time],	edi
call	purple_attention_type_get_outgoing_desc
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2004h
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_write
mov	[esp+5Ch+Time],	edi
call	g_free
mov	ecx, [esp+5Ch+var_30]
mov	edx, esi
mov	eax, [esp+5Ch+var_34]
call	sub_61C5B174
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5B433
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, esi
jmp	short loc_61C5B396
			
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_type
dec	eax
jz	short loc_61C5B424
mov	eax, 1
jmp	short loc_61C5B3F7
align 4
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_name
mov	esi, eax
jmp	loc_61C5B375
call	__stack_chk_fail
public jabber_keepalive
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+Time],	esi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+Time],	0 
call	time
mov	edx, [ebx+114h]
test	edx, edx
jnz	short loc_61C5B476
mov	edx, eax
sub	edx, [ebx+58h]
cmp	edx, 3Bh
jg	short loc_61C5B488
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5B4B3
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[ebx+58h], eax
mov	[esp+2Ch+Time],	ebx
call	jabber_keepalive_ping
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset loc_61C59D2C
mov	[esp+2Ch+Time],	78h
call	purple_timeout_add_seconds
mov	[ebx+114h], eax
jmp	short loc_61C5B476
call	__stack_chk_fail
public jabber_register_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_40], edx
mov	edi, [esp+8Ch+arg_8]
mov	esi, [esp+8Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_account
cmp	edi, 2
jz	short loc_61C5B514
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5BD39
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, eax
mov	eax, [ebx+6Ch]
test	eax, eax
jnz	loc_61C5B5B8
mov	[esp+8Ch+var_88], offset aRegistered 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C5BA58
mov	eax, [ebx+6Ch]
test	eax, eax
jnz	loc_61C5B5D0
mov	[esp+8Ch+var_38], 1
mov	[esp+8Ch+var_84], offset aJabberXData_2	
mov	[esp+8Ch+var_88], offset asc_61C7F937 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child_with_namespace
mov	edi, eax
test	eax, eax
jz	loc_61C5B668
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], edx
call	g_strdup
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5BD39
mov	[esp+8Ch+arg_C], eax
mov	[esp+8Ch+arg_8], offset	sub_61C5A6C8
mov	[esp+8Ch+arg_4], edi
mov	[esp+8Ch+arg_0], ebx
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_x_data_request
align 4
mov	[esp+8Ch+var_88], 1
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_set_state
jmp	loc_61C5B521
mov	[esp+8Ch+var_88], offset aAlreadyRegiste 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+8Ch+var_88], offset aAlreadyRegiste 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], 0
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], 0
call	purple_notify_message
mov	eax, [ebp+4Ch]
test	eax, eax
jz	short loc_61C5B649
mov	edx, [ebp+50h]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], ebp
call	eax
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5BD39
mov	eax, ebx
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C5A23C
align 4
mov	[esp+8Ch+var_84], offset aJabberXOob 
mov	[esp+8Ch+var_88], offset asc_61C7F937 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C5B6F8
mov	[esp+8Ch+var_88], offset aUrl_3	
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5B6F8
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_61C5B6F8
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], 0
call	purple_notify_uri
mov	[esp+8Ch+var_8C], edi
call	g_free
mov	eax, [ebx+6Ch]
test	eax, eax
jz	loc_61C5B4FA
mov	eax, [ebx+64h]
mov	dword ptr [eax+28h], 1
mov	eax, [ebp+4Ch]
test	eax, eax
jz	loc_61C5B649
mov	edx, [ebp+50h]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], 1
mov	[esp+8Ch+var_8C], ebp
call	eax
jmp	loc_61C5B649
align 4
			
call	purple_request_fields_new
mov	[esp+8Ch+var_34], eax
mov	[esp+8Ch+var_8C], 0
call	purple_request_field_group_new
mov	[esp+8Ch+var_3C], eax
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields_add_group
mov	[esp+8Ch+var_88], offset aUsername_1 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5B79C
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	edi, eax
mov	ebp, [ebx+6Ch]
test	ebp, ebp
jz	loc_61C5BCB7
test	eax, eax
jz	loc_61C5BD2F
mov	ebp, eax
mov	[esp+8Ch+var_88], offset aUsername_2 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aUsername_1 
call	purple_request_field_string_new
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	[esp+8Ch+var_8C], edi
call	g_free
mov	[esp+8Ch+var_88], offset aPassword_3 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5B81A
mov	ecx, [ebx+6Ch]
test	ecx, ecx
jz	loc_61C5BA68
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_password
mov	edi, eax
mov	[esp+8Ch+var_88], offset aPassword_4 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aPassword_3 
call	purple_request_field_string_new
mov	ebp, eax
mov	[esp+8Ch+var_88], 1
mov	[esp+8Ch+var_8C], ebp
call	purple_request_field_string_set_masked
mov	[esp+8Ch+var_88], ebp
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	[esp+8Ch+var_88], offset aName_9 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5B889
mov	edx, [ebx+6Ch]
test	edx, edx
jz	loc_61C5BAB4
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+8Ch+var_8C], eax
call	purple_account_get_alias
mov	edi, eax
mov	[esp+8Ch+var_88], offset aName_10 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aName_9 
call	purple_request_field_string_new
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	ebp, offset aEmail_2 
xor	edi, edi
mov	[esp+8Ch+var_30], ebx
mov	[esp+8Ch+var_88], ebp
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5B8F5
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	ebx, eax
mov	eax, ds:off_61C816E4[edi*8]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebp
call	purple_request_field_string_new
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	[esp+8Ch+var_8C], ebx
call	g_free
inc	edi
mov	ebp, ds:off_61C816E0[edi*8]
test	ebp, ebp
jnz	short loc_61C5B894
mov	ebx, [esp+8Ch+var_30]
mov	eax, [esp+8Ch+var_38]
test	eax, eax
jnz	loc_61C5BC40
mov	[esp+8Ch+var_88], offset aInstructions_0 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C5BCEC
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	esi, eax
mov	[esp+8Ch+var_8C], 8
call	g_malloc0
mov	edi, eax
mov	[eax], ebx
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], edx
call	g_strdup
mov	[edi+4], eax
mov	eax, [ebx+6Ch]
test	eax, eax
jnz	loc_61C5BB74
mov	ebp, [esp+8Ch+var_40]
test	ebp, ebp
jz	loc_61C5BCF6
mov	ecx, [esp+8Ch+var_38]
test	ecx, ecx
jz	loc_61C5BB04
mov	[esp+8Ch+var_88], offset aChangeAccountR 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], eax
call	g_strdup_printf
mov	ebp, eax
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_88], offset aCancel_5 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_48], eax
call	libintl_dgettext
mov	[esp+8Ch+var_88], offset aChangeRegistra 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_44], eax
call	libintl_dgettext
mov	edx, [esp+8Ch+var_44]
mov	ecx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_5C], edi
mov	[esp+8Ch+var_60], 0
mov	[esp+8Ch+var_64], 0
mov	[esp+8Ch+var_68], ecx
mov	[esp+8Ch+var_6C], offset sub_61C5A278
mov	[esp+8Ch+var_70], edx
mov	[esp+8Ch+var_74], offset sub_61C5A340
mov	[esp+8Ch+var_78], eax
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], ebp
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields
mov	[esp+8Ch+var_8C], ebp
call	g_free
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5BD39
mov	[esp+8Ch+arg_0], esi
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+8Ch+var_38], 0
jmp	loc_61C5B54C
align 4
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	edi, eax
mov	[esp+8Ch+var_88], offset aPassword_4 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aPassword_3 
call	purple_request_field_string_new
mov	ebp, eax
mov	[esp+8Ch+var_8C], edi
call	g_free
jmp	loc_61C5B7FA
align 4
mov	[esp+8Ch+var_8C], eax
call	xmlnode_get_data
mov	edi, eax
mov	[esp+8Ch+var_88], offset aName_10 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aName_9 
call	purple_request_field_string_new
mov	[esp+8Ch+var_8C], edi
mov	[esp+8Ch+var_44], eax
call	g_free
mov	eax, [esp+8Ch+var_44]
jmp	loc_61C5B879
align 4
mov	[esp+8Ch+var_88], offset aRegisterNewAcc 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], eax
call	g_strdup_printf
mov	ebp, eax
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_88], offset aCancel_5 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_48], eax
call	libintl_dgettext
mov	[esp+8Ch+var_88], offset aRegister 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_44], eax
call	libintl_dgettext
mov	ecx, [esp+8Ch+var_48]
mov	edx, [esp+8Ch+var_44]
jmp	loc_61C5B9DE
align 4
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_get_account
mov	[esp+8Ch+var_88], offset aCancel_5 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_48], eax
call	libintl_dgettext
mov	[esp+8Ch+var_88], offset aRegister 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
mov	[esp+8Ch+var_44], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+8Ch+var_88], offset aRegisterNewXmp 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_40], eax
mov	[esp+8Ch+var_88], offset aRegisterNewXmp 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_5C], edi
mov	[esp+8Ch+var_60], 0
mov	[esp+8Ch+var_64], 0
mov	ecx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_68], ecx
mov	[esp+8Ch+var_6C], offset sub_61C5A278
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_70], edx
mov	[esp+8Ch+var_74], offset sub_61C5A340
mov	[esp+8Ch+var_78], ebp
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], esi
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], eax
mov	eax, [ebx+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields
jmp	loc_61C5BA35
align 10h
mov	[esp+8Ch+var_88], offset aUnregister_0 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aUnregister 
call	purple_request_field_bool_new
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	[esp+8Ch+var_88], offset aInstructions_0 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_get_child
test	eax, eax
jnz	loc_61C5B929
mov	[esp+8Ch+var_88], offset aPleaseFillOutT 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	esi, eax
jmp	loc_61C5B933
mov	[esp+8Ch+var_88], offset aUsername_2 
mov	[esp+8Ch+var_8C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+8Ch+var_80], 0
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aUsername_1 
call	purple_request_field_string_new
jmp	loc_61C5B784
mov	[esp+8Ch+var_88], offset aPleaseFillOu_0 
jmp	short loc_61C5BC9C
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5BD39
mov	[esp+8Ch+arg_8], offset	aFromNull 
mov	[esp+8Ch+arg_4], offset	aJabber_registe	
mov	[esp+8Ch+arg_0], 0
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [ebx+5Ch]
mov	ebp, [eax]
jmp	loc_61C5B754
			
call	__stack_chk_fail
align 10h
public jabber_register_start
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aJabberIqRegi_2 
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5BD82
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_register_gateway
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset aJabberIqRegi_2 
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aTo_8 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5BDEB
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_iq_send
call	__stack_chk_fail
public jabber_get_next_id
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+40h]
lea	ecx, [eax+1]
mov	[edx+40h], ecx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleX 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5BE2B
add	esp, 2Ch
retn
call	__stack_chk_fail
public jabber_idle_set
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	esi, [eax+1Ch]
test	ebx, ebx
jz	short loc_61C5BE5F
mov	[esp+2Ch+Time],	0 
call	time
sub	eax, ebx
mov	ebx, eax
mov	[esi+50h], ebx
mov	[esp+2Ch+var_28], offset aSendingUpdated 
mov	[esp+2Ch+Time],	offset aJabber_15 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5BE98
mov	[esp+2Ch+arg_4], 0
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	jabber_presence_send
call	__stack_chk_fail
align 10h
public jabber_blocklist_parse_push
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], eax
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	jabber_is_own_account
test	eax, eax
jnz	loc_61C5BF90
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new
mov	ebx, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aId_3 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
test	esi, esi
jz	short loc_61C5BF22
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aTo_8 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aError_4 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_44], offset aCancel_6 
mov	[esp+4Ch+var_48], offset aType_8 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aNotAllowed 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aUrnIetfParam_7 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5C067
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 10h
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+4Ch+var_48], offset aBlock_0 
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
mov	esi, eax
mov	[esp+4Ch+var_48], offset aItem_4 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_child
mov	ebp, eax
test	esi, esi
jz	loc_61C5C06C
test	eax, eax
jnz	short loc_61C5BFEB
jmp	loc_61C5C0B2
align 4
call	purple_privacy_deny_add
			
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jz	short loc_61C5C02A
			
mov	[esp+4Ch+var_48], offset aJid_5	
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C5BFDD
cmp	byte ptr [eax],	0
jz	short loc_61C5BFDD
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
test	esi, esi
jnz	short loc_61C5BFD8
call	purple_privacy_deny_remove
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jnz	short loc_61C5BFEB
			
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new
mov	ebx, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aId_3 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jz	loc_61C5BF7F
call	__stack_chk_fail
test	eax, eax
jnz	loc_61C5BFEB
mov	[esp+4Ch+var_48], offset aReceivedUnbloc 
mov	[esp+4Ch+var_4C], offset aJabber_15 
call	purple_debug_info
mov	eax, [edi+34h]
test	eax, eax
jz	short loc_61C5C02A
nop
mov	[esp+4Ch+var_44], 1
mov	eax, [eax]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_privacy_deny_remove
mov	eax, [edi+34h]
test	eax, eax
jnz	short loc_61C5C090
jmp	loc_61C5C02A
mov	[esp+4Ch+var_48], 3
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_new
mov	ebx, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aId_3 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aError_4 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_44], offset aModify_1 
mov	[esp+4Ch+var_48], offset aType_8 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aBadRequest_1 
jmp	loc_61C5BF57
align 4
public jabber_request_block_list
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aBlocklist 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], offset aUrnXmppBlock_0 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset loc_61C59C50
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C195
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_add_deny
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	loc_61C5C26C
cmp	byte ptr [ebx],	0
jz	loc_61C5C26C
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
test	eax, eax
jz	loc_61C5C288
mov	edx, [eax+8Ch]
test	dh, 4
jnz	loc_61C5C300
and	dh, 20h
jz	loc_61C5C2A0
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_new
mov	esi, eax
mov	[esp+3Ch+var_38], offset aBlock_0 
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+3Ch+var_38], offset aUrnXmppBlock_0 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_namespace
mov	[esp+3Ch+var_38], offset aItem_4 
mov	[esp+3Ch+var_3C], edi
call	xmlnode_new_child
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aJid_5	
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5C31F
mov	[esp+3Ch+arg_0], esi
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
align 4
			
mov	[esp+3Ch+var_34], offset aWhoNullWho0 
mov	[esp+3Ch+var_38], offset aJabber_add_den 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5C31F
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+3Ch+var_38], offset aServerDoesnTSu 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aServerDoesnTSu 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], 0
call	purple_notify_message
jmp	short loc_61C5C288
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5C31F
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], eax
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	jabber_google_roster_add_deny
			
call	__stack_chk_fail
public jabber_rem_deny
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	loc_61C5C3F0
cmp	byte ptr [ebx],	0
jz	loc_61C5C3F0
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
test	eax, eax
jz	loc_61C5C40C
mov	edx, [eax+8Ch]
test	dh, 4
jnz	loc_61C5C420
and	dh, 20h
jz	loc_61C5C40C
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	esi, eax
mov	[esp+2Ch+var_28], offset aUnblock_0 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+2Ch+var_28], offset aUrnXmppBlock_0 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_28], offset aItem_4 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aJid_5	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C43F
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
align 10h
			
mov	[esp+2Ch+var_24], offset aWhoNullWho0 
mov	[esp+2Ch+var_28], offset aJabber_rem_den 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5C43F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5C43F
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_google_roster_rem_deny
			
call	__stack_chk_fail
public jabber_remove_feature
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:jabber_features
test	ebx, ebx
jnz	short loc_61C5C46F
jmp	short loc_61C5C4AB
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C5C4AB
mov	eax, [ebx]
mov	esi, [eax]
mov	[esp+2Ch+Str2],	edi 
mov	[esp+2Ch+Str1],	esi 
call	strcmp
test	eax, eax
jnz	short loc_61C5C468
mov	[esp+2Ch+Str1],	esi
call	g_free
mov	eax, [ebx]
mov	[esp+2Ch+Str1],	eax
call	g_free
mov	[esp+2Ch+Str2],	ebx
mov	eax, ds:jabber_features
mov	[esp+2Ch+Str1],	eax
call	g_list_delete_link
mov	ds:jabber_features, eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C4BE
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public jabber_add_feature
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C5C530
mov	[esp+2Ch+var_2C], 8
call	g_malloc0
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esi], eax
mov	[esi+4], edi
mov	[esp+2Ch+var_2C], ebx 
call	jabber_remove_feature
mov	[esp+2Ch+var_28], esi
mov	eax, ds:jabber_features
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:jabber_features, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C54E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aNamespaceNull	
mov	[esp+2Ch+var_28], offset aJabber_add_fea 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C5C51A
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C5C590
mov	[esp+2Ch+var_28], 0 
mov	[esp+2Ch+var_2C], eax 
call	jabber_add_feature
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C5A0
add	esp, 2Ch
jmp	jabber_caps_broadcast_change
align 10h
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5C5A0
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public jabber_add_identity
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], eax
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C5C6B1
test	esi, esi
jz	loc_61C5C6E1
mov	edi, ds:jabber_identities
test	edi, edi
jnz	short loc_61C5C5F7
jmp	short loc_61C5C650
align 10h
			
mov	edi, [edi+4]
test	edi, edi
jz	short loc_61C5C650
mov	ebp, [edi]
mov	[esp+4Ch+var_48], ebx
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C5C5F0
mov	[esp+4Ch+var_48], esi
mov	eax, [ebp+4]
mov	[esp+4Ch+var_4C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C5C5F0
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C5C5F0
xchg	ax, ax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5C6F7
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+4Ch+var_4C], 10h
call	g_malloc0
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	g_strdup
mov	[edi], eax
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[edi+4], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[edi+0Ch], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[edi+8], eax
mov	[esp+4Ch+var_44], offset jabber_identity_compare
mov	[esp+4Ch+var_48], edi
mov	eax, ds:jabber_identities
mov	[esp+4Ch+var_4C], eax
call	g_list_insert_sorted
mov	ds:jabber_identities, eax
jmp	short loc_61C5C638
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C6F7
mov	[esp+4Ch+arg_8], offset	aCategoryNull 
mov	[esp+4Ch+arg_4], offset	aJabber_add_ide	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C6F7
mov	[esp+4Ch+arg_8], offset	aTypeNull_0 
jmp	short loc_61C5C6C5
			
call	__stack_chk_fail
public jabber_stream_is_ssl
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+12Ch]
test	eax, eax
jz	short loc_61C5C748
mov	[esp+2Ch+var_2C], eax
call	jabber_bosh_connection_is_ssl
test	eax, eax
jnz	short loc_61C5C740
mov	edx, [ebx+12Ch]
test	edx, edx
jz	short loc_61C5C748
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5C754
add	esp, 28h
pop	ebx
retn
mov	eax, 1
jmp	short loc_61C5C72F
align 4
			
xor	eax, eax
mov	ecx, [ebx+68h]
test	ecx, ecx
setnz	al
jmp	short loc_61C5C72F
call	__stack_chk_fail
align 4
public jabber_stream_restart_inactivity_timer
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+11Ch]
test	eax, eax
jnz	short loc_61C5C7D0
mov	eax, [ebx+118h]
test	eax, eax
jz	short loc_61C5C7B0
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_61C5CDEC
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_add_seconds
mov	[ebx+11Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5C7E4
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aJsMax_inactivi 
mov	[esp+2Ch+var_28], offset aJabber_stream_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C5C79D
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+11Ch], 0
jmp	short loc_61C5C779
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	esi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ecx, ecx
jle	loc_61C5C900
mov	ebp, edx
cmp	dword ptr [ebx+20h], 6
jz	loc_61C5C924
mov	eax, [ebx+84h]
test	eax, eax
jnz	short loc_61C5C864
mov	edx, [ebx]
mov	eax, [ebx+68h]
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebp
test	eax, eax
jz	loc_61C5C934
mov	[esp+3Ch+var_3C], eax
call	purple_ssl_write
mov	edi, eax
test	edi, edi
js	short loc_61C5C874
cmp	esi, edi
jg	short loc_61C5C898
mov	eax, 1
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5C9AC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	_errno
mov	dword ptr [eax], 0Bh
mov	edi, 0FFFFFFFFh
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C5C898
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_account
mov	eax, [eax+20h]
test	eax, eax
jz	loc_61C5C953
xor	eax, eax
jmp	short loc_61C5C84C
			
test	edi, edi
js	loc_61C5C944
mov	eax, [ebx+84h]
test	eax, eax
jnz	short loc_61C5C8DA
mov	eax, [ebx+68h]
test	eax, eax
jz	loc_61C5C94C
mov	eax, [eax+1Ch]
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset sub_61C5AFF4
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], eax
call	purple_input_add
mov	[ebx+84h], eax
sub	esi, edi
mov	[esp+3Ch+var_34], esi
add	edi, ebp
mov	[esp+3Ch+var_38], edi
mov	eax, [ebx+80h]
mov	[esp+3Ch+var_3C], eax
call	purple_circ_buffer_append
mov	eax, 1
jmp	loc_61C5C84C
align 10h
mov	[esp+3Ch+var_34], offset aLen0 
mov	[esp+3Ch+var_38], offset aDo_jabber_send 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_61C5C84C
align 4
mov	[esp+3Ch+var_3C], ebx
call	jabber_stream_restart_inactivity_timer
jmp	loc_61C5C816
align 4
mov	[esp+3Ch+var_3C], edx
call	wpurple_write
mov	edi, eax
jmp	loc_61C5C83F
align 4
xor	edi, edi
jmp	loc_61C5C8A0
align 4
mov	eax, [ebx]
jmp	loc_61C5C8B8
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+3Ch+var_38], offset aLostConnecti_0 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_error_reason
mov	[esp+3Ch+var_3C], esi
call	g_free
xor	eax, eax
jmp	loc_61C5C84C
call	__stack_chk_fail
align 4
public jabber_send_raw
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_38], eax
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	eax, [ebx+64h]
mov	[esp+6Ch+var_34], eax
mov	[esp+6Ch+Str], eax
call	purple_connection_get_account
mov	esi, [esp+6Ch+var_30]
test	esi, esi
jz	loc_61C5CCF8
mov	ebp, eax
mov	edi, offset asc_61C7FBDF 
mov	ecx, 2
repe cmpsb
jnz	loc_61C5CBBC
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	purple_connection_get_prpl
lea	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], edx
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+SubStr], offset aJabberSendingT 
mov	[esp+6Ch+Str], eax
call	purple_signal_emit
mov	edx, [esp+6Ch+var_30]
test	edx, edx
jz	loc_61C5CB68
cmp	[esp+6Ch+var_38], 0FFFFFFFFh
jz	loc_61C5CB80
mov	ecx, [ebx+0BCh]
test	ecx, ecx
jle	loc_61C5CB9F
mov	eax, [ebx+68h]
test	eax, eax
jz	loc_61C5CD28
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jle	loc_61C5CB68
xor	ebp, ebp
lea	edi, [esp+6Ch+var_28]
jmp	short loc_61C5CAA9
align 4
add	ebp, esi
mov	ecx, [esp+6Ch+var_24]
mov	edx, [esp+6Ch+var_28]
mov	eax, ebx
call	sub_61C5C7EC
test	eax, eax
jz	loc_61C5CB68
cmp	[esp+6Ch+var_38], ebp
jle	loc_61C5CB68
mov	ecx, [ebx+0BCh]
mov	edx, [esp+6Ch+var_30]
mov	eax, [esp+6Ch+var_38]
sub	eax, ebp
mov	esi, ecx
cmp	ecx, eax
jle	short loc_61C5CAB7
mov	esi, eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], esi
add	edx, ebp
mov	[esp+6Ch+SubStr], edx
mov	eax, [ebx+0A4h]
mov	[esp+6Ch+Str], eax
mov	edx, ds:sasl_encode
call	edx 
test	eax, eax
jz	short loc_61C5CA7C
mov	edx, eax
mov	eax, [ebx+0A4h]
mov	[esp+6Ch+Str], eax
mov	edi, ds:sasl_errdetail
mov	[esp+6Ch+var_40], edx
call	edi 
mov	esi, eax
mov	[esp+6Ch+SubStr], offset aSaslErrorS_0 
mov	[esp+6Ch+Str], offset aPidgin_8	
call	libintl_dgettext
mov	[esp+6Ch+SubStr], esi
mov	[esp+6Ch+Str], eax
call	g_strdup_printf
mov	esi, eax
mov	eax, [ebx+0A4h]
mov	[esp+6Ch+Str], eax
call	edi 
mov	[esp+6Ch+var_60], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+SubStr], offset aSasl_encodeErr 
mov	[esp+6Ch+Str], offset aJabber_15 
call	purple_debug_error
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+SubStr], 0
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	purple_connection_error_reason
mov	[esp+6Ch+Str], esi
call	g_free
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5CDE7
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	eax, eax
mov	ecx, [esp+6Ch+var_38]
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_38], ecx
mov	ecx, [ebx+0BCh]
test	ecx, ecx
jg	loc_61C5CA5B
mov	eax, [ebx+12Ch]
test	eax, eax
jz	loc_61C5CCE8
mov	[esp+6Ch+SubStr], edx
mov	[esp+6Ch+Str], eax
call	jabber_bosh_connection_send_raw
jmp	short loc_61C5CB68
align 4
call	purple_debug_is_unsafe
test	eax, eax
jz	loc_61C5CC54
			
xor	edi, edi
xor	esi, esi
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], edx
call	purple_connection_get_display_name
mov	edx, eax
test	eax, eax
jz	loc_61C5CDD1
test	edi, edi
jz	loc_61C5CD74
mov	ebp, offset aPasswordRemove 
test	esi, esi
jz	loc_61C5CD6B
mov	ecx, esi
mov	[esp+6Ch+Str], ebx
mov	[esp+6Ch+var_40], edx
mov	[esp+6Ch+var_3C], ecx
call	jabber_stream_is_ssl
test	eax, eax
mov	edx, [esp+6Ch+var_40]
mov	ecx, [esp+6Ch+var_3C]
jz	loc_61C5CD1C
mov	eax, offset aSsl_0 
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], ebp
mov	[esp+6Ch+var_5C], ecx
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+SubStr], offset aSendingSSSSS 
mov	[esp+6Ch+Str], offset aJabber_15 
call	purple_debug_misc
mov	[esp+6Ch+Str], esi
call	g_free
jmp	loc_61C5CA0A
cmp	dword ptr [ebx+20h], 6
jz	loc_61C5CBC9
mov	esi, [esp+6Ch+var_30]
mov	[esp+6Ch+SubStr], offset aAuth_3 
mov	[esp+6Ch+Str], esi 
call	strstr
mov	edi, eax
test	eax, eax
jz	loc_61C5CD80
mov	[esp+6Ch+SubStr], offset aXmlnsUrnIetfPa 
mov	[esp+6Ch+Str], esi 
call	strstr
test	eax, eax
jz	loc_61C5CD80
mov	[esp+6Ch+SubStr], 3Eh 
mov	[esp+6Ch+Str], edi 
call	strchr
mov	[esp+6Ch+Str], esi
mov	[esp+6Ch+var_40], eax
call	g_strdup
mov	esi, eax
mov	edx, [esp+6Ch+var_40]
test	edx, edx
jz	loc_61C5CDE0
sub	edx, [esp+6Ch+var_30]
lea	edx, [esi+edx+1]
mov	[esp+6Ch+SubStr], 3Ch 
mov	[esp+6Ch+Str], edx 
mov	[esp+6Ch+var_40], edx
call	strchr
mov	edi, eax
mov	edx, [esp+6Ch+var_40]
mov	byte ptr [edx],	0
jmp	loc_61C5CBCD
mov	ecx, [esp+6Ch+var_38]
mov	eax, ebx
call	sub_61C5C7EC
jmp	loc_61C5CB68
mov	[esp+6Ch+var_64], offset aDataNull_2 
mov	[esp+6Ch+SubStr], offset aJabber_send_ra 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_61C5CB68
align 4
mov	eax, offset byte_61C7F35C
jmp	loc_61C5CC1F
align 4
mov	eax, [ebx]
test	eax, eax
jns	loc_61C5CA66
mov	[esp+6Ch+var_58], offset aJabber_send_ra 
mov	[esp+6Ch+var_5C], 212h
mov	[esp+6Ch+var_60], offset aJabber_c 
mov	[esp+6Ch+var_64], offset aFileSLineDSS_2 
mov	[esp+6Ch+SubStr], 8
mov	[esp+6Ch+Str], 0
call	g_log
jmp	loc_61C5CB68
mov	ecx, [esp+6Ch+var_30]
jmp	loc_61C5CBFA
mov	edi, offset byte_61C7F35C
mov	ebp, edi
jmp	loc_61C5CBF0
			
mov	[esp+6Ch+SubStr], offset aQuery_10 
mov	[esp+6Ch+Str], esi 
call	strstr
mov	edi, eax
test	eax, eax
jz	loc_61C5CBC9
mov	[esp+6Ch+SubStr], offset aXmlnsJabberIqA 
mov	[esp+6Ch+Str], esi 
call	strstr
test	eax, eax
jz	loc_61C5CBC9
mov	[esp+6Ch+SubStr], offset aPassword_5 
mov	[esp+6Ch+Str], edi 
call	strstr
mov	edi, eax
test	eax, eax
jnz	loc_61C5CC94
jmp	loc_61C5CBC9
mov	[esp+6Ch+Str], ebp
call	purple_account_get_username
mov	edx, eax
jmp	loc_61C5CBE3
mov	edx, edi
jmp	loc_61C5CCBE
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	dword ptr [eax+11Ch], 0
mov	edx, [eax+12Ch]
test	edx, edx
jz	short loc_61C5CE30
mov	[esp+2Ch+var_2C], edx
call	jabber_bosh_connection_send_keepalive
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5CE4A
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset asc_61C7FBDF 
mov	[esp+2Ch+var_2C], eax
call	jabber_send_raw
jmp	short loc_61C5CE1B
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_61C5CE78
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aStreamStreamTo 
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_parser_setup
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jabber_send_raw
mov	dword ptr [ebx+88h], 0
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5CED0
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Time],	esi
call	purple_connection_get_protocol_data
mov	ebx, eax
call	purple_connections_get_all
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	eax
call	g_list_find
test	eax, eax
jz	loc_61C5D088
mov	[esp+5Ch+var_54], 0FFFh
mov	[esp+5Ch+var_58], offset byte_61C97080
mov	eax, [ebx]
mov	[esp+5Ch+Time],	eax
call	wpurple_read
mov	edi, eax
cmp	eax, 0
jle	loc_61C5CFE0
mov	[esp+5Ch+Time],	0 
call	time
mov	[esi+30h], eax
mov	ebp, [ebx+0BCh]
test	ebp, ebp
jle	loc_61C5D03C
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_4C], eax
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset byte_61C97080
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Time],	eax
call	ds:sasl_decode
mov	edi, eax
test	eax, eax
jnz	loc_61C5D0AC
mov	eax, [esp+5Ch+var_24]
test	eax, eax
jz	loc_61C5D023
mov	edx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aRecvsaslUS 
mov	[esp+5Ch+Time],	offset aJabber_15 
call	purple_debug_info
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	ebx
call	jabber_parser_process
mov	ecx, [ebx+88h]
test	ecx, ecx
jz	short loc_61C5D023
mov	eax, ebx
call	sub_61C5CE50
jmp	short loc_61C5D023
align 10h
jnz	loc_61C5D130
mov	[esp+5Ch+var_58], offset aServerClosedTh 
mov	[esp+5Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+Time],	eax
call	g_strdup
mov	esi, eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], 0
mov	eax, [ebx+64h]
mov	[esp+5Ch+Time],	eax
call	purple_connection_error_reason
mov	[esp+5Ch+Time],	esi
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5D176
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ds:byte_61C97080[edi], 0
mov	[esp+5Ch+var_50], offset byte_61C97080
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aRecvDS 
mov	[esp+5Ch+Time],	offset aJabber_15 
call	purple_debug_info
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset byte_61C97080
mov	[esp+5Ch+Time],	ebx
call	jabber_parser_process
mov	edx, [ebx+88h]
test	edx, edx
jz	short loc_61C5D023
jmp	loc_61C5CFD6
align 4
mov	[esp+5Ch+var_54], offset aPurple_connect 
mov	[esp+5Ch+var_58], offset aJabber_recv_cb 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_61C5D023
align 4
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Time],	eax
mov	ebp, ds:sasl_errdetail
call	ebp 
mov	[esp+5Ch+var_58], offset aSaslErrorS_0 
mov	[esp+5Ch+Time],	offset aPidgin_8 
mov	[esp+5Ch+var_30], eax
call	libintl_dgettext
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	edx, eax
mov	eax, [ebx+0A4h]
mov	[esp+5Ch+Time],	eax
mov	[esp+5Ch+var_30], edx
call	ebp 
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aSasl_decode_er 
mov	[esp+5Ch+Time],	offset aJabber_15 
call	purple_debug_error
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	esi
call	purple_connection_error_reason
jmp	loc_61C5D023
align 10h
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_61C5D023
call	_errno
mov	eax, [eax]
mov	[esp+5Ch+Time],	eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+5Ch+var_58], offset aLostConnecti_0 
mov	[esp+5Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_61C5D004
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	esi, [edi+1Ch]
call	purple_connections_get_all
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	eax
call	g_list_find
test	eax, eax
jz	loc_61C5D2C6
xchg	ax, ax
			
mov	[esp+4Ch+var_44], 0FFFh
mov	[esp+4Ch+var_48], offset byte_61C96080
mov	[esp+4Ch+Time],	ebp
call	purple_ssl_read
mov	ebx, eax
cmp	eax, 0
jle	short loc_61C5D230
mov	[esp+4Ch+Time],	0 
call	time
mov	[edi+30h], eax
mov	ds:byte_61C96080[ebx], 0
mov	[esp+4Ch+var_40], offset byte_61C96080
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aRecvSslDS 
mov	[esp+4Ch+Time],	offset aJabber_15 
call	purple_debug_info
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset byte_61C96080
mov	[esp+4Ch+Time],	esi
call	jabber_parser_process
mov	eax, [esi+88h]
test	eax, eax
jz	short loc_61C5D1B4
mov	eax, esi
call	sub_61C5CE50
jmp	short loc_61C5D1B4
jnz	short loc_61C5D287
mov	[esp+4Ch+var_48], offset aServerClosedTh 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+Time],	eax
call	g_strdup
mov	ebx, eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 0
mov	eax, [esi+64h]
mov	[esp+4Ch+Time],	eax
call	purple_connection_error_reason
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5D316
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C5D302
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+Time],	eax
call	wpurple_strerror
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aLostConnecti_0 
mov	[esp+4Ch+Time],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	eax
call	g_strdup_printf
mov	ebx, eax
jmp	short loc_61C5D250
mov	[esp+4Ch+Time],	ebp
call	purple_ssl_close
mov	[esp+4Ch+var_38], offset aJabber_recv__0 
mov	[esp+4Ch+var_3C], 28Eh
mov	[esp+4Ch+var_40], offset aJabber_c 
mov	[esp+4Ch+var_44], offset aFileSLineDSS_2 
mov	[esp+4Ch+var_48], 8
mov	[esp+4Ch+Time],	0
call	g_log
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5D316
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public jabber_close
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+Memory], edi
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+Memory], eax
call	jingle_terminate_sessions
mov	eax, [ebx+12Ch]
test	eax, eax
jz	loc_61C5D740
mov	[esp+2Ch+Memory], eax
call	jabber_bosh_connection_close
			
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C5D368
mov	[esp+2Ch+Memory], eax
call	purple_srv_cancel
mov	eax, [ebx+68h]
test	eax, eax
jz	loc_61C5D774
mov	[esp+2Ch+Memory], eax
call	purple_ssl_close
			
mov	eax, [ebx+12Ch]
test	eax, eax
jz	short loc_61C5D38D
mov	[esp+2Ch+Memory], eax
call	jabber_bosh_connection_destroy
mov	[esp+2Ch+Memory], ebx
call	jabber_buddy_remove_all_pending_buddy_info_requests
mov	[esp+2Ch+Memory], ebx
call	jabber_parser_free
mov	eax, [ebx+3Ch]
test	eax, eax
jz	short loc_61C5D3AC
mov	[esp+2Ch+Memory], eax
call	g_hash_table_destroy
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_61C5D3BB
mov	[esp+2Ch+Memory], eax
call	g_hash_table_destroy
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_61C5D3CA
mov	[esp+2Ch+Memory], eax
call	g_hash_table_destroy
mov	eax, [ebx+30h]
test	eax, eax
jz	short loc_61C5D3F4
lea	esi, [esi+0]
mov	eax, [eax]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_list_delete_link
mov	[ebx+30h], eax
test	eax, eax
jnz	short loc_61C5D3D4
mov	eax, [ebx+38h]
test	eax, eax
jz	short loc_61C5D41C
nop
mov	eax, [eax]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_list_delete_link
mov	[ebx+38h], eax
test	eax, eax
jnz	short loc_61C5D3FC
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_61C5D464
nop
mov	esi, [eax]
mov	eax, [esi]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [esi+0Ch]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	[esp+2Ch+Memory], esi
call	g_free
mov	eax, [ebx+44h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_list_delete_link
mov	[ebx+44h], eax
test	eax, eax
jnz	short loc_61C5D424
mov	eax, [ebx+130h]
test	eax, eax
jz	short loc_61C5D496
xchg	ax, ax
mov	eax, [eax]
mov	[esp+2Ch+Memory], eax
call	purple_util_fetch_url_cancel
mov	eax, [ebx+130h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_slist_delete_link
mov	[ebx+130h], eax
test	eax, eax
jnz	short loc_61C5D470
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+5Ch]
test	eax, eax
jz	short loc_61C5D4B0
mov	[esp+2Ch+Memory], eax
call	jabber_id_free
mov	eax, [ebx+70h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+74h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0D8h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+80h]
test	eax, eax
jz	short loc_61C5D4E6
mov	[esp+2Ch+Memory], eax
call	purple_circ_buffer_destroy
mov	eax, [ebx+84h]
test	eax, eax
jnz	loc_61C5D798
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C5D507
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_61C5D507
mov	[esp+2Ch+Memory], ebx
call	eax
			
mov	eax, [ebx+0A4h]
test	eax, eax
jz	short loc_61C5D520
lea	eax, [ebx+0A4h]
mov	[esp+2Ch+Memory], eax
call	ds:sasl_dispose
mov	eax, [ebx+0C0h]
test	eax, eax
jz	short loc_61C5D53A
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+Memory], eax
call	g_string_free
mov	eax, [ebx+0A8h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0ACh]
mov	[esp+2Ch+Memory], eax 
call	free
mov	eax, [ebx+0A0h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0E4h]
test	eax, eax
jz	short loc_61C5D5B6
xchg	ax, ax
mov	esi, [eax]
mov	eax, [esi]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [esi+8]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	[esp+2Ch+Memory], esi
call	g_free
mov	eax, [ebx+0E4h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_list_delete_link
mov	[ebx+0E4h], eax
test	eax, eax
jnz	short loc_61C5D570
mov	eax, [ebx+94h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+110h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+98h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+9Ch]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0ECh]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0F4h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0F8h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0FCh]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+100h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+104h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+10Ch]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+0D4h]
test	eax, eax
jnz	loc_61C5D7C8
mov	eax, [ebx+114h]
test	eax, eax
jnz	loc_61C5D7B8
mov	eax, [ebx+11Ch]
test	eax, eax
jnz	loc_61C5D7A8
mov	eax, [ebx+120h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	dword ptr [ebx+120h], 0
mov	eax, [ebx+138h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	dword ptr [ebx+138h], 0
mov	eax, [ebx+140h]
test	eax, eax
jz	short loc_61C5D6C6
mov	[esp+2Ch+Memory], eax
call	purple_dnsquery_destroy
mov	dword ptr [ebx+140h], 0
mov	eax, [ebx+144h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+148h]
mov	[esp+2Ch+Memory], eax
call	g_free
mov	eax, [ebx+14Ch]
test	eax, eax
jz	short loc_61C5D71A
mov	esi, [eax]
mov	[esp+2Ch+Memory], esi
call	purple_util_fetch_url_cancel
mov	[esp+2Ch+Memory], esi
call	g_free
mov	eax, [ebx+14Ch]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+Memory], eax
call	g_list_delete_link
mov	[ebx+14Ch], eax
test	eax, eax
jnz	short loc_61C5D6EC
mov	[esp+2Ch+Memory], ebx
call	g_free
mov	dword ptr [edi+1Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5D7F3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [ebx+68h]
test	eax, eax
jz	loc_61C5D7D8
mov	eax, [eax+1Ch]
test	eax, eax
jle	loc_61C5D7D8
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	[esp+2Ch+var_28], offset aStreamStream 
mov	[esp+2Ch+Memory], ebx
call	jabber_send_raw
jmp	loc_61C5D359
align 4
mov	eax, [ebx]
test	eax, eax
jle	loc_61C5D37B
mov	edx, [ebx+64h]
mov	edx, [edx+14h]
test	edx, edx
jnz	short loc_61C5D7E7
mov	[esp+2Ch+Memory], eax
call	wpurple_close
jmp	loc_61C5D37B
align 4
mov	[esp+2Ch+Memory], eax
call	purple_input_remove
jmp	loc_61C5D4F4
align 4
mov	[esp+2Ch+Memory], eax
call	purple_timeout_remove
jmp	loc_61C5D67A
align 4
mov	[esp+2Ch+Memory], eax
call	purple_timeout_remove
jmp	loc_61C5D66C
align 4
mov	[esp+2Ch+Memory], eax
call	purple_timeout_remove
jmp	loc_61C5D65E
align 4
			
mov	eax, [ebx]
test	eax, eax
jg	loc_61C5D756
jmp	loc_61C5D359
mov	[esp+2Ch+Memory], edx
call	purple_input_remove
mov	eax, [ebx]
jmp	short loc_61C5D788
call	__stack_chk_fail
public jabber_send_signal_cb
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C5D8BB
call	purple_connections_get_all
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	loc_61C5D8EC
mov	[esp+2Ch+var_2C], esi
call	purple_connection_get_protocol_data
mov	esi, eax
test	eax, eax
jz	short loc_61C5D8BB
mov	eax, [esi+12Ch]
test	eax, eax
jz	short loc_61C5D88B
mov	[esp+2Ch+var_28], offset aMessage_1 
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C5D879
mov	[esp+2Ch+var_28], offset aIq_0 
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C5D8D0
			
mov	[esp+2Ch+var_28], offset aJabberClient_0 
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
			
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_to_str
mov	ebx, eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	jabber_send_raw
mov	[esp+2Ch+var_2C], ebx
call	g_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5D90A
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_28], offset aPresence_1 
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
jnz	short loc_61C5D879
jmp	short loc_61C5D88B
align 4
mov	[esp+2Ch+var_24], offset aPurple_conne_0 
mov	[esp+2Ch+var_28], offset aJabber_send_si 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C5D8BB
call	__stack_chk_fail
align 10h
public jabber_prpl_send_raw
push	edi
push	ebx
sub	esp, 24h
mov	edi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
test	eax, eax
jz	short loc_61C5D970
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	jabber_send_raw
test	ebx, ebx
js	short loc_61C5D960
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5D993
add	esp, 24h
pop	ebx
pop	edi
retn
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	ebx, [ecx-1]
jmp	short loc_61C5D94C
mov	[esp+2Ch+var_24], offset aJsNull 
mov	[esp+2Ch+var_28], offset aJabber_prpl_se 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	ebx, 0FFFFFFFFh
jmp	short loc_61C5D94C
call	__stack_chk_fail
public jabber_stream_set_state
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[ebx+20h], eax
cmp	eax, 6		
ja	short loc_61C5DA07 
jmp	ds:off_61C7FE28[eax*4] 
align 4
			
cmp	dword ptr [ebx+68h], 1 
sbb	edi, edi
and	edi, 0FFFFFFFCh
add	edi, 9
cmp	dword ptr [ebx+68h], 1
sbb	esi, esi
and	esi, 0FFFFFFFCh
add	esi, 8
mov	[esp+2Ch+var_28], offset aReInitializing 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_update_progress
			
mov	eax, [esp+2Ch+var_10] 
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5DB5D
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
mov	[esp+2Ch+var_28], 1 
mov	[esp+2Ch+var_2C], ebx
call	jabber_presence_send
mov	[esp+2Ch+var_2C], ebx
call	jabber_stream_restart_inactivity_timer
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5DB5D
mov	[esp+2Ch+arg_4], 1
mov	eax, [ebx+64h]
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_connection_set_state
align 4
			
cmp	dword ptr [ebx+68h], 1 
sbb	esi, esi
and	esi, 0FFFFFFFCh
add	esi, 9
mov	[esp+2Ch+var_28], offset aConnecting 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_update_progress
jmp	loc_61C5DA07	
			
cmp	dword ptr [ebx+68h], 1 
sbb	edi, edi
and	edi, 0FFFFFFFCh
add	edi, 9
cmp	dword ptr [ebx+68h], 1
sbb	esi, esi
and	esi, 0FFFFFFFDh
add	esi, 5
mov	[esp+2Ch+var_28], offset aInitializingSt 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_update_progress
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5DB5D
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C5CE50
			
mov	[esp+2Ch+var_28], offset aInitializingSs 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_20], 9
mov	[esp+2Ch+var_24], 6
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_update_progress
jmp	loc_61C5DA07	
			
cmp	dword ptr [ebx+68h], 1 
sbb	edi, edi
and	edi, 0FFFFFFFCh
add	edi, 9
cmp	dword ptr [ebx+68h], 1
sbb	esi, esi
and	esi, 0FFFFFFFCh
add	esi, 7
mov	[esp+2Ch+var_28], offset aAuthenticating 
jmp	loc_61C5D9E4
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+64h]
mov	[esp+5Ch+var_5C], ebp
call	purple_connection_get_account
mov	esi, eax
mov	[esp+5Ch+var_54], offset byte_61C7F35C
mov	[esp+5Ch+var_58], offset aConnect_server 
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_string
mov	edi, eax
mov	[esp+5Ch+var_54], offset byte_61C7F35C
mov	[esp+5Ch+var_58], offset aBosh_url 
mov	[esp+5Ch+var_5C], esi
call	purple_account_get_string
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], eax
call	jabber_stream_set_state
mov	eax, [esp+5Ch+var_30]
cmp	byte ptr [eax],	0
jnz	loc_61C5DC80
cmp	byte ptr [edi],	0
jz	loc_61C5DC74
mov	eax, edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebx+110h], eax
mov	[esp+5Ch+var_54], offset aRequire_star_0 
mov	[esp+5Ch+var_58], offset aConnection_s_0 
mov	[esp+5Ch+var_5C], esi
call	purple_account_get_string
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aOld_ssl 
call	g_str_equal
test	eax, eax
jnz	loc_61C5DCA4
cmp	byte ptr [edi],	0
jnz	loc_61C5DD34
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset loc_61C5AE28
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aTcp 
mov	[esp+5Ch+var_58], offset aXmppClient 
mov	[esp+5Ch+var_5C], esi
call	purple_srv_resolve_account
mov	[ebx+4], eax
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5DDA5
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebx+5Ch]
mov	eax, [eax+4]
jmp	loc_61C5DBE3
align 10h
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_bosh_connection_init
mov	[ebx+12Ch], eax
test	eax, eax
jz	loc_61C5DD78
mov	[esp+5Ch+var_5C], eax
call	jabber_bosh_connection_connect
jmp	short loc_61C5DC5B
call	purple_ssl_is_supported
test	eax, eax
jz	short loc_61C5DD04
mov	[esp+5Ch+var_54], 1467h
mov	[esp+5Ch+var_58], offset aPort 
mov	[esp+5Ch+var_5C], esi
call	purple_account_get_int
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], offset loc_61C5AEE0
mov	[esp+5Ch+var_50], offset loc_61C5E11C
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+110h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_ssl_connect
mov	[ebx+68h], eax
test	eax, eax
jnz	loc_61C5DC5B
mov	[esp+5Ch+var_58], offset aUnableToEsta_2 
jmp	short loc_61C5DD0C
mov	[esp+5Ch+var_58], offset aSslSupportUn_0 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 4
mov	[esp+5Ch+var_5C], ebp
call	purple_connection_error_reason
jmp	loc_61C5DC5B
align 4
mov	[esp+5Ch+var_54], 1466h
mov	[esp+5Ch+var_58], offset aPort 
mov	[esp+5Ch+var_5C], esi
call	purple_account_get_int
mov	edx, [ebx+5Ch]
mov	ecx, [edx+4]
lea	edx, [ebx+0A0h]
add	ebx, 64h
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
mov	eax, ebx
call	sub_61C5AC60
jmp	loc_61C5DC5B
align 4
mov	[esp+5Ch+var_58], offset aMalformedBoshU 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 7
mov	[esp+5Ch+var_5C], ebp
call	purple_connection_error_reason
jmp	loc_61C5DC5B
call	__stack_chk_fail
align 4
public jabber_register_account
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_61C59D90
test	eax, eax
jz	short loc_61C5DDE4
mov	dword ptr [eax+6Ch], 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5DDF4
add	esp, 1Ch
jmp	loc_61C5DB64
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5DDF4
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public jabber_login
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
or	dword ptr [eax+4], 101h
mov	eax, ebx
call	sub_61C59D90
mov	esi, eax
test	eax, eax
jz	loc_61C5DED4
mov	[esp+2Ch+var_24], offset byte_61C7F35C
mov	[esp+2Ch+var_28], offset aFt_proxies 
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_string
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aProxy_jabber_o 
call	g_str_equal
test	eax, eax
jnz	short loc_61C5DEB8
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icons_find_account_icon
mov	ebx, eax
test	eax, eax
jz	short loc_61C5DE9C
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_size
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_imgstore_get_data
mov	[esp+2Ch+var_24], offset aSha1_5 
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	jabber_calculate_data_hash
mov	[esi+70h], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_imgstore_unref
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5DEE7
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C5DB64
align 4
mov	[esp+2Ch+var_24], offset aProxy_eu_jabbe 
mov	[esp+2Ch+var_28], offset aFt_proxies 
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_string
jmp	short loc_61C5DE5D
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5DEE7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_unregister_account
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], edi
call	purple_account_get_connection
mov	edx, [eax+8]
cmp	edx, 1
jz	short loc_61C5DF5C
cmp	edx, 2
jz	short loc_61C5DF2E
mov	[esp+3Ch+var_3C], edi
mov	[esp+3Ch+var_20], eax
call	jabber_login
mov	eax, [esp+3Ch+var_20]
mov	eax, [eax+1Ch]
mov	dword ptr [eax+0C4h], 1
mov	[eax+0C8h], esi
mov	[eax+0CCh], ebx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5DFBF
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [eax+1Ch]
mov	edx, [eax+0C4h]
test	edx, edx
jnz	short loc_61C5DF98
mov	dword ptr [eax+0C4h], 1
mov	[eax+0C8h], esi
mov	[eax+0CCh], ebx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5DFBF
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C5AB88
align 4
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5DFBF
mov	[esp+3Ch+arg_4], offset	aUnregistration	
mov	[esp+3Ch+arg_0], offset	aJabber_15 
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_error
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_protocol_data
mov	ebx, eax
test	edi, edi
js	short loc_61C5E060
mov	eax, [eax+120h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebx+120h], 0
mov	[ebx], edi
cmp	dword ptr [ebx+20h], 1
jz	loc_61C5E0A0
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], ebx
call	jabber_stream_set_state
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], offset sub_61C5CED8
mov	[esp+4Ch+var_48], 1
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[esi+14h], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5E114
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ecx, [eax+120h]
test	ecx, ecx
jz	short loc_61C5E0C0
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aUnableToConn_1 
mov	[esp+4Ch+var_4C], offset aJabber_15 
call	purple_debug_error
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5E114
mov	eax, ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C5AD4C
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], offset a?xmlVersion1_0 
mov	[esp+4Ch+var_4C], ebx
call	jabber_send_raw
jmp	loc_61C5E014
align 10h
mov	eax, [eax+5Ch]
mov	eax, [eax+4]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aCouldnTConnect 
mov	[esp+4Ch+var_4C], offset aJabber_15 
call	purple_debug_info
mov	eax, [ebx+5Ch]
mov	edi, [eax+4]
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_account
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_40], offset sub_61C5A090
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset a_xmppconnect 
mov	[esp+4Ch+var_4C], eax
call	purple_txt_resolve_account
mov	[ebx+4], eax
jmp	loc_61C5E045
			
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+40h]
mov	edi, [esp+44h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
call	purple_connections_get_all
mov	[esp+4], esi
mov	[esp], eax
call	g_list_find
test	eax, eax
jz	short loc_61C5E1BC
mov	ebx, [esi+1Ch]
cmp	dword ptr [ebx+20h], 1
jz	short loc_61C5E1A0
mov	dword ptr [esp+4], 2
mov	[esp], ebx
call	jabber_stream_set_state
mov	[esp+8], esi
mov	dword ptr [esp+4], offset sub_61C5D17C
mov	[esp], edi
call	purple_ssl_input_add
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5E20B
mov	dword ptr [esp+44h], 3
mov	[esp+40h], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	jabber_stream_set_state
align 10h
mov	dword ptr [esp+8], 0FFFFFFFFh
mov	dword ptr [esp+4], offset a?xmlVersion1_0 
mov	[esp], ebx
call	jabber_send_raw
jmp	short loc_61C5E153
align 4
mov	[esp], edi
call	purple_ssl_close
mov	dword ptr [esp+14h], offset aJabber_login_c 
mov	dword ptr [esp+10h], 2EDh
mov	dword ptr [esp+0Ch], offset aJabber_c 
mov	dword ptr [esp+8], offset aFileSLineDSS_2 
mov	dword ptr [esp+4], 8
mov	dword ptr [esp], 0
call	g_log
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C5E20B
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_stream_features_parse
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 12Ch
mov	ebx, [esp+13Ch+arg_0]
mov	esi, [esp+13Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+13Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+13Ch+Str],	eax
call	purple_connection_get_account
mov	[esp+13Ch+var_134], offset aRequire_star_0 
mov	[esp+13Ch+SubStr], offset aConnection_s_0 
mov	[esp+13Ch+Str],	eax
call	purple_account_get_string
mov	edi, eax
mov	[esp+13Ch+SubStr], offset aStarttls 
mov	[esp+13Ch+Str],	esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C5E3BC
mov	eax, [ebx+64h]
mov	[esp+13Ch+Str],	eax
call	purple_connection_get_account
mov	edi, eax
call	purple_ssl_is_supported
test	eax, eax
jnz	loc_61C5E320
mov	[esp+13Ch+SubStr], offset aNoLibpurpleTls 
mov	[esp+13Ch+Str],	offset aJabber_15 
call	purple_debug_warning
mov	[esp+13Ch+SubStr], offset aStarttls 
mov	[esp+13Ch+Str],	esi
call	xmlnode_get_child
mov	[esp+13Ch+SubStr], offset aRequired 
mov	[esp+13Ch+Str],	eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C5E33C
mov	[esp+13Ch+SubStr], offset aServerRequir_1 
mov	[esp+13Ch+Str],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+13Ch+var_134], eax
mov	[esp+13Ch+SubStr], 4
mov	eax, [ebx+64h]
mov	[esp+13Ch+Str],	eax
call	purple_connection_error_reason
mov	[esp+13Ch+SubStr], 3
mov	[esp+13Ch+Str],	ebx
call	jabber_stream_set_state
			
mov	eax, [esp+13Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5E5DB
add	esp, 12Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+13Ch+var_134], 0FFFFFFFFh
mov	[esp+13Ch+SubStr], offset aStarttlsXmlnsU 
mov	[esp+13Ch+Str],	ebx
call	jabber_send_raw
jmp	short loc_61C5E2F0
align 4
mov	[esp+13Ch+var_134], offset aRequire_star_0 
mov	[esp+13Ch+SubStr], offset aConnection_s_0 
mov	[esp+13Ch+Str],	edi
call	purple_account_get_string
mov	[esp+13Ch+SubStr], eax
mov	[esp+13Ch+Str],	offset aRequire_tls_0 
call	g_str_equal
test	eax, eax
jnz	loc_61C5E530
			
mov	edi, [ebx+6Ch]
test	edi, edi
jnz	short loc_61C5E3AC
mov	[esp+13Ch+SubStr], offset aMechanisms_0	
mov	[esp+13Ch+Str],	esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C5E40C
mov	[esp+13Ch+SubStr], 4
mov	[esp+13Ch+Str],	ebx
call	jabber_stream_set_state
mov	[esp+13Ch+SubStr], esi
mov	[esp+13Ch+Str],	ebx
call	jabber_auth_start
jmp	loc_61C5E300
mov	[esp+13Ch+Str],	ebx
call	jabber_register_start
jmp	loc_61C5E300
align 4
mov	[esp+13Ch+SubStr], offset aRequire_tls_0 
mov	[esp+13Ch+Str],	edi
call	g_str_equal
test	eax, eax
jz	short loc_61C5E36C
mov	[esp+13Ch+Str],	ebx
call	jabber_stream_is_ssl
test	eax, eax
jnz	short loc_61C5E36C
mov	[esp+13Ch+SubStr], offset aYouRequireEn_0 
mov	[esp+13Ch+Str],	offset aPidgin_8 
call	libintl_dgettext
mov	[esp+13Ch+var_134], eax
mov	[esp+13Ch+SubStr], 5
mov	eax, [ebx+64h]
mov	[esp+13Ch+Str],	eax
call	purple_connection_error_reason
jmp	loc_61C5E300
mov	[esp+13Ch+SubStr], offset aBind	
mov	[esp+13Ch+Str],	esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C5E584
mov	[esp+13Ch+SubStr], 0
mov	[esp+13Ch+Str],	ebx
call	jabber_iq_new
mov	esi, eax
mov	[esp+13Ch+SubStr], offset aBind	
mov	eax, [eax+8]
mov	[esp+13Ch+Str],	eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+13Ch+SubStr], offset aUrnIetfParam_8 
mov	[esp+13Ch+Str],	eax
call	xmlnode_set_namespace
mov	eax, [ebx+5Ch]
mov	ebx, [eax+8]
test	ebx, ebx
jz	loc_61C5E50B
cmp	byte ptr [ebx],	0
jz	loc_61C5E50B
mov	[esp+13Ch+SubStr], offset a__hostname__	
mov	[esp+13Ch+Str],	ebx 
call	strstr
test	eax, eax
jz	loc_61C5E5AF
mov	[esp+13Ch+SubStr], 0FFh
lea	ebp, [esp+13Ch+var_120]
mov	[esp+13Ch+Str],	ebp
call	wpurple_gethostname
test	eax, eax
jnz	loc_61C5E540
mov	[esp+13Ch+var_21], 0
mov	[esp+13Ch+SubStr], 2Eh 
mov	[esp+13Ch+Str],	ebp 
call	strchr
test	eax, eax
jz	short loc_61C5E4C5
mov	byte ptr [eax],	0
mov	[esp+13Ch+var_134], ebp
mov	[esp+13Ch+SubStr], offset a__hostname__	
mov	[esp+13Ch+Str],	ebx
call	purple_strreplace
mov	ebx, eax
test	ebx, ebx
jz	short loc_61C5E50B
mov	[esp+13Ch+SubStr], offset aResource_1 
mov	[esp+13Ch+Str],	edi
call	xmlnode_new_child
mov	[esp+13Ch+var_134], 0FFFFFFFFh
mov	[esp+13Ch+SubStr], ebx
mov	[esp+13Ch+Str],	eax
call	xmlnode_insert_data
mov	[esp+13Ch+Str],	ebx
call	g_free
			
mov	[esp+13Ch+var_134], 0
mov	[esp+13Ch+SubStr], offset sub_61C616DC
mov	[esp+13Ch+Str],	esi
call	jabber_iq_set_callback
mov	[esp+13Ch+Str],	esi
call	jabber_iq_send
jmp	loc_61C5E300
mov	[esp+13Ch+SubStr], offset aYouRequireEn_1 
jmp	loc_61C5E2CD
align 10h
call	_errno
mov	eax, [eax]
mov	[esp+13Ch+Str],	eax
call	wpurple_strerror
mov	[esp+13Ch+var_134], eax
mov	[esp+13Ch+SubStr], offset aGethostnameS	
mov	[esp+13Ch+Str],	offset aJabber_15 
call	purple_debug_warning
mov	[esp+13Ch+var_134], 100h
mov	[esp+13Ch+SubStr], offset aLocalhost 
mov	[esp+13Ch+Str],	ebp
call	g_strlcpy
jmp	loc_61C5E4A6
mov	[esp+13Ch+var_134], offset aUrnXmppFeature 
mov	[esp+13Ch+SubStr], offset aVer_1 
mov	[esp+13Ch+Str],	esi
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C5E5BE
or	dword ptr [ebx+8Ch], 8000h
jmp	loc_61C5E300
mov	[esp+13Ch+Str],	ebx
call	g_strdup
mov	ebx, eax
jmp	loc_61C5E4DB
mov	[esp+13Ch+SubStr], 4
mov	[esp+13Ch+Str],	ebx
call	jabber_stream_set_state
mov	[esp+13Ch+Str],	ebx
call	jabber_auth_start_old
jmp	loc_61C5E300
call	__stack_chk_fail
public jabber_list_icon
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset aJabber_15 
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5E603
add	esp, 1Ch
retn
call	__stack_chk_fail
public jabber_list_emblem
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	loc_61C5E74C
mov	esi, [eax+1Ch]
test	esi, esi
jz	loc_61C5E738
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_name
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jabber_buddy_find
mov	esi, eax
test	ebx, ebx
jz	short loc_61C5E676
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_61C5E6A8
			
test	esi, esi
jz	loc_61C5E74C
mov	eax, [esi+0Ch]
and	eax, 6
cmp	eax, 4
jz	short loc_61C5E6C4
mov	eax, offset aNotAuthorized 
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5E76A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_presence
mov	[esp+2Ch+var_2C], eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_61C5E676
test	esi, esi
jz	loc_61C5E74C
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C5E74C
mov	[esp+2Ch+var_28], offset aClient_1 
mov	[esp+2Ch+var_2C], eax 
call	jabber_resource_get_identity_category_type
test	eax, eax
jz	short loc_61C5E74C
mov	edi, offset aPhone 
mov	ecx, 6
mov	esi, eax
repe cmpsb
jz	short loc_61C5E754
mov	edi, offset aWeb 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jz	short loc_61C5E740
mov	edi, offset aHandheld 
mov	ecx, 9
mov	esi, eax
repe cmpsb
jz	short loc_61C5E760
mov	ecx, 4
mov	edi, offset aBot 
mov	esi, eax
repe cmpsb
jnz	short loc_61C5E74C
mov	eax, offset aBot 
jmp	loc_61C5E68E
align 4
xor	esi, esi
jmp	loc_61C5E65E
align 10h
mov	eax, offset aExternal_0	
jmp	loc_61C5E68E
align 4
			
xor	eax, eax
jmp	loc_61C5E68E
align 4
mov	eax, offset aMobile 
jmp	loc_61C5E68E
align 10h
mov	eax, offset aHiptop 
jmp	loc_61C5E68E
call	__stack_chk_fail
align 10h
public jabber_status_text
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	loc_61C5E864
mov	eax, [eax+1Ch]
test	eax, eax
jz	loc_61C5E864
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_name
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+1Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_buddy_find
mov	esi, eax
test	eax, eax
jz	loc_61C5E864
test	ebx, ebx
jz	loc_61C5E8AD
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_61C5E803
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_presence
mov	[esp+2Ch+var_2C], eax
call	purple_presence_is_online
test	eax, eax
jnz	short loc_61C5E814
mov	eax, [esi+0Ch]
and	eax, 6
cmp	eax, 4
jnz	loc_61C5E8BC
xchg	ax, ax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_61C5E850
			
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C5E864
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5E8E0
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_strdup
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_presence
mov	[esp+2Ch+var_2C], eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_61C5E828
			
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_presence
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_active_status
mov	[esp+2Ch+var_28], offset aMessage_1 
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_string
test	eax, eax
jz	short loc_61C5E8E8
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	g_markup_escape_text
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5E8E0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [eax+0Ch]
and	eax, 6
cmp	eax, 4
jz	loc_61C5E828
mov	[esp+2Ch+var_28], offset aNotAuthorize_0 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jz	loc_61C5E83F
			
call	__stack_chk_fail
align 4
mov	[esp+2Ch+var_28], 8
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_is_status_primitive_active
test	eax, eax
jz	short loc_61C5E960
mov	[esp+2Ch+var_28], offset aTune_0 
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_status
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aTune_title_0 
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_string
mov	esi, eax
mov	[esp+2Ch+var_28], offset aTune_artist 
mov	[esp+2Ch+var_2C], ebx
call	purple_status_get_attr_string
mov	edi, eax
mov	[esp+2Ch+var_28], offset aTune_album 
mov	[esp+2Ch+var_2C], ebx
call	purple_status_get_attr_string
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	purple_util_format_song_info
jmp	loc_61C5E89A
align 10h
xor	eax, eax
jmp	loc_61C5E89A
align 4
public jabber_tooltip_text
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_44], eax
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_61C5ED50
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_account
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	loc_61C5ED84
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_connection
mov	ebx, eax
test	eax, eax
jz	loc_61C5EDA0
mov	eax, [eax+1Ch]
test	eax, eax
jz	loc_61C5EDBC
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_name
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+1Ch]
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find
mov	edi, eax
test	eax, eax
jz	loc_61C5ED38
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_presence
mov	[esp+5Ch+var_30], eax
mov	eax, [edi]
test	eax, eax
jz	loc_61C5EDD8
xor	edx, edx
mov	eax, [eax+4]
test	eax, eax
setnz	dl
mov	[esp+5Ch+var_3C], edx
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_find_resource
mov	esi, eax
test	eax, eax
jz	short loc_61C5EA3B
mov	ecx, [esp+5Ch+var_3C]
mov	edx, [esp+5Ch+var_44]
call	sub_61C59A50
mov	ebx, [edi]
test	ebx, ebx
jz	short loc_61C5EA68
mov	[esp+5Ch+var_34], edi
mov	edi, [esp+5Ch+var_3C]
lea	esi, [esi+0]
mov	eax, [ebx]
cmp	eax, esi
jz	short loc_61C5EA5D
mov	ecx, edi
mov	edx, [esp+5Ch+var_44]
call	sub_61C59A50
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C5EA4C
mov	edi, [esp+5Ch+var_34]
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jnz	short loc_61C5EAD4
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_61C5ED20
mov	ebx, [edi+4]
test	ebx, ebx
jz	loc_61C5ED38
mov	[esp+5Ch+var_58], offset aError_5 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5EE9B
mov	[esp+5Ch+arg_8], ebx
mov	[esp+5Ch+arg_4], eax
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_notify_user_info_add_pair
align 4
mov	[esp+5Ch+var_58], offset aMood 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_status
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_58], offset aMood 
mov	[esp+5Ch+var_5C], eax
call	purple_status_get_attr_string
mov	ebx, eax
test	eax, eax
jz	loc_61C5EBD4
cmp	byte ptr [eax],	0
jz	loc_61C5EBD4
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	jabber_get_moods
mov	esi, eax
mov	eax, [eax]
test	eax, eax
jnz	short loc_61C5EB35
jmp	loc_61C5EE94
add	esi, 0Ch
mov	eax, [esi]
test	eax, eax
jz	loc_61C5EE94
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C5EB28
mov	edx, [esi+4]
mov	[esp+5Ch+var_58], offset aMoodtext 
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_48], edx
call	purple_status_get_attr_string
mov	esi, eax
test	eax, eax
mov	edx, [esp+5Ch+var_48]
jz	loc_61C5EE51
cmp	byte ptr [eax],	0
jz	loc_61C5EE51
test	edx, edx
jz	short loc_61C5EB8D
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], offset aSS_7 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aMood_0 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+var_5C], ebx
call	g_free
nop
			
mov	[esp+5Ch+var_58], 8
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_is_status_primitive_active
test	eax, eax
jnz	loc_61C5EC78
			
mov	eax, [edi+0Ch]
test	al, 8
jz	short loc_61C5EC50
test	al, 4
jnz	loc_61C5EE1B
test	al, 2
jnz	loc_61C5EDE5
mov	[esp+5Ch+var_58], offset aFrom_1 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
lea	esi, [esi+0]
			
mov	[esp+5Ch+var_58], offset aSubscription_1 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_user_info_add_pair
jmp	loc_61C5EA70
align 10h
test	al, 4
jnz	loc_61C5EE36
test	al, 2
jz	loc_61C5EE00
mov	[esp+5Ch+var_58], offset aNoneToPending	
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
jmp	short loc_61C5EC20
mov	[esp+5Ch+var_58], offset aTune_0 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_status
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aTune_title_0 
mov	[esp+5Ch+var_5C], eax
call	purple_status_get_attr_string
mov	esi, eax
mov	[esp+5Ch+var_58], offset aTune_artist 
mov	[esp+5Ch+var_5C], ebx
call	purple_status_get_attr_string
mov	[esp+5Ch+var_58], offset aTune_album 
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_48], eax
call	purple_status_get_attr_string
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], eax
mov	edx, [esp+5Ch+var_48]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	purple_util_format_song_info
mov	ebx, eax
test	eax, eax
jz	loc_61C5EBF0
mov	[esp+5Ch+var_58], offset aNowListening 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], edx
call	purple_notify_user_info_add_pair
mov	[esp+5Ch+var_5C], ebx
call	g_free
jmp	loc_61C5EBF0
align 10h
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_get_presence
mov	[esp+5Ch+var_5C], eax
call	purple_presence_is_online
test	eax, eax
jz	loc_61C5EA88
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5EE9B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5EE9B
mov	[esp+5Ch+arg_8], offset	aBNull 
			
mov	[esp+5Ch+arg_4], offset	aJabber_tooltip	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5EE9B
mov	[esp+5Ch+arg_8], offset	aAccountNull 
jmp	short loc_61C5ED68
align 10h
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C5EE9B
mov	[esp+5Ch+arg_8], offset	aGcNull_0 
jmp	short loc_61C5ED68
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C5EE9B
mov	[esp+5Ch+arg_8], offset	aGcProto_dataNu	
jmp	short loc_61C5ED68
align 4
mov	[esp+5Ch+var_3C], 0
jmp	loc_61C5EA18
mov	[esp+5Ch+var_58], offset aFromToPending	
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
jmp	loc_61C5EC20
mov	[esp+5Ch+var_58], offset aNone_1 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
jmp	loc_61C5EC20
mov	[esp+5Ch+var_58], offset aBoth 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
jmp	loc_61C5EC20
mov	[esp+5Ch+var_58], offset aTo_9 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
jmp	loc_61C5EC20
			
test	edx, edx
jz	short loc_61C5EE67
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aMood_0 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_user_info_add_pair
jmp	loc_61C5EBD4
			
xor	edx, edx
jmp	loc_61C5EB48
			
call	__stack_chk_fail
public jabber_status_types
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0ECh
mov	eax, ds:__stack_chk_guard
mov	[esp+0FCh+var_20], eax
xor	eax, eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_int
mov	[esp+0FCh+var_FC], 4
call	purple_value_new
mov	esi, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_boolean
mov	[esp+0FCh+var_F8], offset aAllowBuzz 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_FC], 0Dh
mov	[esp+0FCh+var_64], eax
call	purple_value_new
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_F8], offset aNickname_1 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_F8], offset aMoodText 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_F8], offset aMood_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aPriority_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_FC], 1
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_9C], 0
mov	[esp+0FCh+var_A0], esi
mov	ecx, [esp+0FCh+var_64]
mov	[esp+0FCh+var_A4], ecx
mov	[esp+0FCh+var_A8], offset aBuzz	
mov	ecx, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_AC], ecx
mov	esi, [esp+0FCh+var_58]
mov	[esp+0FCh+var_B0], esi
mov	[esp+0FCh+var_B4], offset aNick_1 
mov	ecx, [esp+0FCh+var_54]
mov	[esp+0FCh+var_B8], ecx
mov	esi, [esp+0FCh+var_50]
mov	[esp+0FCh+var_BC], esi
mov	[esp+0FCh+var_C0], offset aMoodtext 
mov	ecx, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_C4], ecx
mov	esi, [esp+0FCh+var_48]
mov	[esp+0FCh+var_C8], esi
mov	[esp+0FCh+var_CC], offset aMood	
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_D0], edx
mov	[esp+0FCh+var_D4], ebp
mov	[esp+0FCh+var_D8], offset aMessage_1 
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], edi
mov	[esp+0FCh+var_E4], offset aPriority_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 2
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 0
call	g_list_prepend
mov	ebx, eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aMoodComment 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+0FCh+var_F8], offset aMoodName 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_CC], 0
mov	[esp+0FCh+var_D0], ebp
mov	[esp+0FCh+var_D4], edi
mov	[esp+0FCh+var_D8], offset aMoodtext 
mov	[esp+0FCh+var_DC], esi
mov	[esp+0FCh+var_E0], eax
mov	[esp+0FCh+var_E4], offset aMood	
mov	[esp+0FCh+var_E8], 1
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], offset aMood	
mov	[esp+0FCh+var_FC], 9
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], ebx
call	g_list_prepend
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_int
mov	[esp+0FCh+var_FC], 4
call	purple_value_new
mov	esi, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_boolean
mov	[esp+0FCh+var_F8], offset aAllowBuzz 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_F8], offset aNickname_1 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_F8], offset aMoodText 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_44], eax
mov	[esp+0FCh+var_F8], offset aMood_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_40], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_64], eax
call	libintl_dgettext
mov	[esp+0FCh+var_F8], offset aPriority_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aChatty 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_FC], 2
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_9C], 0
mov	[esp+0FCh+var_A0], esi
mov	esi, [esp+0FCh+var_58]
mov	[esp+0FCh+var_A4], esi
mov	[esp+0FCh+var_A8], offset aBuzz	
mov	esi, [esp+0FCh+var_54]
mov	[esp+0FCh+var_AC], esi
mov	esi, [esp+0FCh+var_50]
mov	[esp+0FCh+var_B0], esi
mov	[esp+0FCh+var_B4], offset aNick_1 
mov	esi, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_B8], esi
mov	esi, [esp+0FCh+var_48]
mov	[esp+0FCh+var_BC], esi
mov	[esp+0FCh+var_C0], offset aMoodtext 
mov	esi, [esp+0FCh+var_44]
mov	[esp+0FCh+var_C4], esi
mov	esi, [esp+0FCh+var_40]
mov	[esp+0FCh+var_C8], esi
mov	[esp+0FCh+var_CC], offset aMood	
mov	ecx, [esp+0FCh+var_64]
mov	[esp+0FCh+var_D0], ecx
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_D4], edx
mov	[esp+0FCh+var_D8], offset aMessage_1 
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], ebp
mov	[esp+0FCh+var_E4], offset aPriority_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], edi
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 2
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	eax, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_FC], eax
call	g_list_prepend
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], 0
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_int
mov	[esp+0FCh+var_FC], 4
call	purple_value_new
mov	esi, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_boolean
mov	[esp+0FCh+var_F8], offset aAllowBuzz 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_FC], 0Dh
mov	[esp+0FCh+var_64], eax
call	purple_value_new
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_F8], offset aNickname_1 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_F8], offset aMoodText 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_F8], offset aMood_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_44], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aPriority_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_FC], 3
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_9C], 0
mov	[esp+0FCh+var_A0], esi
mov	ecx, [esp+0FCh+var_64]
mov	[esp+0FCh+var_A4], ecx
mov	[esp+0FCh+var_A8], offset aBuzz	
mov	ecx, [esp+0FCh+var_58]
mov	[esp+0FCh+var_AC], ecx
mov	esi, [esp+0FCh+var_54]
mov	[esp+0FCh+var_B0], esi
mov	[esp+0FCh+var_B4], offset aNick_1 
mov	ecx, [esp+0FCh+var_50]
mov	[esp+0FCh+var_B8], ecx
mov	esi, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_BC], esi
mov	[esp+0FCh+var_C0], offset aMoodtext 
mov	ecx, [esp+0FCh+var_48]
mov	[esp+0FCh+var_C4], ecx
mov	esi, [esp+0FCh+var_44]
mov	[esp+0FCh+var_C8], esi
mov	[esp+0FCh+var_CC], offset aMood	
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_D0], edx
mov	[esp+0FCh+var_D4], ebp
mov	[esp+0FCh+var_D8], offset aMessage_1 
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], edi
mov	[esp+0FCh+var_E4], offset aPriority_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 5
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	eax, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_FC], eax
call	g_list_prepend
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], 0
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_int
mov	[esp+0FCh+var_FC], 4
call	purple_value_new
mov	esi, eax
mov	[esp+0FCh+var_F8], 1
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_boolean
mov	[esp+0FCh+var_F8], offset aAllowBuzz 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_FC], 0Dh
mov	[esp+0FCh+var_64], eax
call	purple_value_new
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_F8], offset aNickname_1 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_F8], offset aMoodText 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_F8], offset aMood_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_44], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aPriority_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_FC], 4
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_9C], 0
mov	[esp+0FCh+var_A0], esi
mov	ecx, [esp+0FCh+var_64]
mov	[esp+0FCh+var_A4], ecx
mov	[esp+0FCh+var_A8], offset aBuzz	
mov	ecx, [esp+0FCh+var_58]
mov	[esp+0FCh+var_AC], ecx
mov	esi, [esp+0FCh+var_54]
mov	[esp+0FCh+var_B0], esi
mov	[esp+0FCh+var_B4], offset aNick_1 
mov	ecx, [esp+0FCh+var_50]
mov	[esp+0FCh+var_B8], ecx
mov	esi, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_BC], esi
mov	[esp+0FCh+var_C0], offset aMoodtext 
mov	ecx, [esp+0FCh+var_48]
mov	[esp+0FCh+var_C4], ecx
mov	esi, [esp+0FCh+var_44]
mov	[esp+0FCh+var_C8], esi
mov	[esp+0FCh+var_CC], offset aMood	
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_D0], edx
mov	[esp+0FCh+var_D4], ebp
mov	[esp+0FCh+var_D8], offset aMessage_1 
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], edi
mov	[esp+0FCh+var_E4], offset aPriority_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 6
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	eax, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_FC], eax
call	g_list_prepend
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], 0
mov	[esp+0FCh+var_FC], eax
call	purple_value_set_int
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aNickname_1 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_64], eax
call	libintl_dgettext
mov	[esp+0FCh+var_FC], 0Dh
mov	[esp+0FCh+var_60], eax
call	purple_value_new
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_F8], offset aMoodText 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_F8], offset aMood_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_F8], offset aPriority_0 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+0FCh+var_F8], offset aDoNotDisturb	
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+0FCh+var_FC], 5
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_A8], 0
mov	ecx, [esp+0FCh+var_64]
mov	[esp+0FCh+var_AC], ecx
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_B0], edx
mov	[esp+0FCh+var_B4], offset aNick_1 
mov	edx, [esp+0FCh+var_58]
mov	[esp+0FCh+var_B8], edx
mov	ecx, [esp+0FCh+var_54]
mov	[esp+0FCh+var_BC], ecx
mov	[esp+0FCh+var_C0], offset aMoodtext 
mov	edx, [esp+0FCh+var_50]
mov	[esp+0FCh+var_C4], edx
mov	ecx, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_C8], ecx
mov	[esp+0FCh+var_CC], offset aMood	
mov	edx, [esp+0FCh+var_48]
mov	[esp+0FCh+var_D0], edx
mov	[esp+0FCh+var_D4], ebp
mov	[esp+0FCh+var_D8], offset aMessage_1 
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], edi
mov	[esp+0FCh+var_E4], offset aPriority_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], esi
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 3
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	eax, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_FC], eax
call	g_list_prepend
mov	ebx, eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+0FCh+var_F8], offset aMessage_2 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+0FCh+var_FC], 0
call	jabber_buddy_state_get_status_id
mov	[esp+0FCh+var_D8], 0
mov	[esp+0FCh+var_DC], edi
mov	[esp+0FCh+var_E0], esi
mov	[esp+0FCh+var_E4], offset aMessage_1 
mov	[esp+0FCh+var_E8], 0
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 1
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], 1
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	[esp+0FCh+var_FC], ebx
call	g_list_prepend
mov	[esp+0FCh+var_5C], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_58], eax
mov	[esp+0FCh+var_F8], offset aTuneUrl 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_54], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	[esp+0FCh+var_50], eax
mov	[esp+0FCh+var_F8], offset aTuneYear 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_4C], eax
mov	[esp+0FCh+var_FC], 7
call	purple_value_new
mov	[esp+0FCh+var_48], eax
mov	[esp+0FCh+var_F8], offset aTuneTime 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_44], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_40], eax
mov	[esp+0FCh+var_F8], offset aTuneTrack 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_3C], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_38], eax
mov	[esp+0FCh+var_F8], offset aTuneComment 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_34], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_30], eax
mov	[esp+0FCh+var_F8], offset aTuneGenre 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_68], eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	[esp+0FCh+var_F8], offset aTuneAlbum 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
mov	[esp+0FCh+var_60], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+0FCh+var_F8], offset aTuneTitle 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+0FCh+var_FC], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+0FCh+var_F8], offset aTuneArtist 
mov	[esp+0FCh+var_FC], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+0FCh+var_78], 0
mov	ecx, [esp+0FCh+var_58]
mov	[esp+0FCh+var_7C], ecx
mov	ecx, [esp+0FCh+var_54]
mov	[esp+0FCh+var_80], ecx
mov	[esp+0FCh+var_84], offset aTune_url 
mov	ecx, [esp+0FCh+var_50]
mov	[esp+0FCh+var_88], ecx
mov	ecx, [esp+0FCh+var_4C]
mov	[esp+0FCh+var_8C], ecx
mov	[esp+0FCh+var_90], offset aTune_year 
mov	ecx, [esp+0FCh+var_48]
mov	[esp+0FCh+var_94], ecx
mov	ecx, [esp+0FCh+var_44]
mov	[esp+0FCh+var_98], ecx
mov	[esp+0FCh+var_9C], offset aTune_time 
mov	ecx, [esp+0FCh+var_40]
mov	[esp+0FCh+var_A0], ecx
mov	ecx, [esp+0FCh+var_3C]
mov	[esp+0FCh+var_A4], ecx
mov	[esp+0FCh+var_A8], offset aTune_track 
mov	ecx, [esp+0FCh+var_38]
mov	[esp+0FCh+var_AC], ecx
mov	ecx, [esp+0FCh+var_34]
mov	[esp+0FCh+var_B0], ecx
mov	[esp+0FCh+var_B4], offset aTune_comment	
mov	ecx, [esp+0FCh+var_30]
mov	[esp+0FCh+var_B8], ecx
mov	ecx, [esp+0FCh+var_68]
mov	[esp+0FCh+var_BC], ecx
mov	[esp+0FCh+var_C0], offset aTune_genre 
mov	edx, [esp+0FCh+var_60]
mov	[esp+0FCh+var_C4], edx
mov	[esp+0FCh+var_C8], ebp
mov	[esp+0FCh+var_CC], offset aTune_album 
mov	[esp+0FCh+var_D0], edi
mov	[esp+0FCh+var_D4], esi
mov	[esp+0FCh+var_D8], offset aTune_title_0	
mov	[esp+0FCh+var_DC], ebx
mov	[esp+0FCh+var_E0], eax
mov	[esp+0FCh+var_E4], offset aTune_artist 
mov	[esp+0FCh+var_E8], 1
mov	[esp+0FCh+var_EC], 1
mov	[esp+0FCh+var_F0], 0
mov	[esp+0FCh+var_F4], 0
mov	[esp+0FCh+var_F8], offset aTune_0 
mov	[esp+0FCh+var_FC], 8
call	purple_status_type_new_with_attrs
mov	[esp+0FCh+var_F8], eax
mov	eax, [esp+0FCh+var_5C]
mov	[esp+0FCh+var_FC], eax
call	g_list_prepend
mov	edx, [esp+0FCh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5FD21
mov	[esp+0FCh+arg_0], eax
add	esp, 0ECh
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
call	__stack_chk_fail
align 4
public jabber_actions
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [eax+1Ch]
mov	[esp+2Ch+var_14], 0
mov	[esp+2Ch+var_28], offset aSetUserInfo___ 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset jabber_setup_set_info
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esp+2Ch+var_14], eax
mov	[esp+2Ch+var_28], offset aChangePassword 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_61C596D0
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esp+2Ch+var_14], eax
mov	[esp+2Ch+var_28], offset aSearchForUsers 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset jabber_user_search_begin
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esp+2Ch+var_14], eax
mov	edx, [ebx+0DCh]
test	edx, edx
jz	loc_61C5FE54
mov	eax, offset aYes 
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aJabber_actions 
mov	[esp+2Ch+var_2C], offset aJabber_15 
call	purple_debug_info
mov	eax, [ebx+0DCh]
test	eax, eax
jnz	short loc_61C5FE5C
mov	eax, [ebx+0E4h]
test	eax, eax
jz	short loc_61C5FE3D
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_adhoc_init_server_commands
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5FE6A
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, offset aNo	
jmp	short loc_61C5FE01
align 4
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	jabber_pep_init_actions
jmp	short loc_61C5FE23
call	__stack_chk_fail
align 10h
public jabber_find_blist_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_4C], eax
call	jabber_id_new
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	loc_61C5FFB0
call	purple_blist_get_root
mov	esi, eax
test	eax, eax
jz	loc_61C5FF8E
lea	esi, [esi+0]
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_get_first_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C5FED6
jmp	loc_61C5FF7C
align 4
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_sibling_next
mov	ebx, eax
test	eax, eax
jz	loc_61C5FF7C
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jnz	short loc_61C5FEC4
mov	[esp+4Ch+var_4C], ebx
call	purple_chat_get_account
cmp	eax, edi
jnz	short loc_61C5FEC4
mov	[esp+4Ch+var_4C], ebx
call	purple_chat_get_components
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aRoom_0 
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C5FEC4
mov	[esp+4Ch+var_48], offset aServer_1 
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_34], eax
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
mov	edx, [esp+4Ch+var_34]
jz	short loc_61C5FEC4
mov	ecx, [esp+4Ch+var_30]
mov	eax, [ecx]
test	eax, eax
jz	short loc_61C5FEC4
mov	ecx, [ecx+4]
mov	[esp+4Ch+var_38], ecx
test	ecx, ecx
jz	short loc_61C5FEC4
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edx
call	g_utf8_collate
test	eax, eax
jnz	loc_61C5FEC4
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	g_utf8_collate
test	eax, eax
jnz	loc_61C5FEC4
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jabber_id_free
mov	eax, ebx
jmp	short loc_61C5FF9C
			
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_get_sibling_next
mov	esi, eax
test	eax, eax
jnz	loc_61C5FEB0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jabber_id_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C5FFB4
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	eax, eax
jmp	short loc_61C5FF9C
call	__stack_chk_fail
align 4
public jabber_convo_closed
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	edi, [eax+1Ch]
mov	[esp+3Ch+var_3C], esi
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C6004C
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C6002F
mov	edx, [ebx+8]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C6002F
mov	edx, [eax+1Ch]
test	edx, edx
jz	short loc_61C6002F
mov	[esp+3Ch+var_3C], edx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	dword ptr [eax+1Ch], 0
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6005F
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	jabber_id_free
align 4
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6005F
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_parse_error
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	ebx, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_namespace
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_48], offset aError_4 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_61C60174
mov	[esp+4Ch+var_44], offset aUrnIetfParam_7 
mov	[esp+4Ch+var_48], offset aText_0 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C6016C
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_data
mov	edi, eax
mov	[esp+4Ch+var_48], offset aCode_3 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aBadRequest_1 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60274
mov	[esp+4Ch+var_48], offset aBadRequest_2 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
			
test	eax, eax
jz	loc_61C60258
test	ebx, ebx
jz	loc_61C60268
mov	edx, offset asc_61C7F4ED 
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], offset aSSS_1	
call	g_strdup_printf
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_38], eax
call	g_free
mov	eax, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C603F8
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	edi, edi
jmp	loc_61C600D6
align 4
mov	esi, [esp+4Ch+var_34]
test	esi, esi
jz	short loc_61C601D0
mov	edi, offset aUrnIetfParam_9 
mov	ecx, 21h
mov	esi, [esp+4Ch+var_34]
repe cmpsb
jnz	short loc_61C601D0
test	ebp, ebp
jz	short loc_61C60199
mov	dword ptr [ebp+0], 0
mov	[esp+4Ch+var_48], offset aAborted 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C602B7
mov	[esp+4Ch+var_48], offset aAuthorizationA 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
align 10h
			
mov	eax, [ebx]
mov	edi, offset aStreamError 
mov	ecx, 0Dh
mov	esi, eax
repe cmpsb
jz	short loc_61C60218
mov	edi, offset aError_4 
mov	ecx, 6
mov	esi, eax
repe cmpsb
jnz	loc_61C602B0
mov	ecx, [esp+4Ch+var_34]
test	ecx, ecx
jz	loc_61C602B0
mov	edi, offset aHttpEtherx_jab 
mov	ecx, 21h
mov	esi, [esp+4Ch+var_34]
repe cmpsb
jnz	loc_61C602B0
test	ebp, ebp
jz	short loc_61C60223
mov	dword ptr [ebp+0], 0
mov	[esp+4Ch+var_48], offset aBadFormat 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C602EC
mov	[esp+4Ch+var_48], offset aBadFormat_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
			
test	edi, edi
jz	short loc_61C602B0
mov	eax, edi
test	ebx, ebx
jnz	loc_61C60124
xchg	ax, ax
mov	edx, offset byte_61C7F35C
mov	ebx, edx
jmp	loc_61C60129
mov	[esp+4Ch+var_48], offset aConflict 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60321
test	ebp, ebp
jz	short loc_61C60297
mov	dword ptr [ebp+0], 6
mov	[esp+4Ch+var_48], offset aConflict_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
			
xor	eax, eax
jmp	loc_61C60151
mov	[esp+4Ch+var_48], offset aIncorrectEncod 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60352
mov	[esp+4Ch+var_48], offset aIncorrectEnc_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aBadNamespacePr 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60387
mov	[esp+4Ch+var_48], offset aBadNamespace_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aFeatureNotIm_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C603C7
mov	[esp+4Ch+var_48], offset aFeatureNotIm_1 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInvalidAuthzid 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C603FD
mov	[esp+4Ch+var_48], offset aInvalidAuthz_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aConflict 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60432
test	ebp, ebp
jz	short loc_61C603AA
mov	dword ptr [ebp+0], 6
mov	[esp+4Ch+var_48], offset aResourceConfli 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aForbidden 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60467
mov	[esp+4Ch+var_48], offset aForbidden_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
call	__stack_chk_fail
mov	[esp+4Ch+var_48], offset aInvalidMechani 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60498
mov	[esp+4Ch+var_48], offset aInvalidAuthori 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aConnectionTime 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60571
mov	[esp+4Ch+var_48], offset aConnectionTi_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aGone 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C605A2
mov	[esp+4Ch+var_48], offset aGone_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aMechanismTooWe 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C604D4
test	ebp, ebp
jz	short loc_61C604B7
mov	dword ptr [ebp+0], 3
mov	[esp+4Ch+var_48], offset aAuthorizationM 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNotAuthorized	
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60540
test	ebp, ebp
jz	short loc_61C604F3
mov	dword ptr [ebp+0], 2
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_remember_password
test	eax, eax
jnz	short loc_61C60523
mov	[esp+4Ch+var_48], 0
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_account_set_password
			
mov	[esp+4Ch+var_48], offset aNotAuthorize_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aTemporaryAuthF 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C605CF
mov	[esp+4Ch+var_48], offset aTemporaryAuthe 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aHostGone 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C605F7
mov	[esp+4Ch+var_48], offset aHostGone_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInternalServer 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60628
mov	[esp+4Ch+var_48], offset aInternalServ_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
test	ebp, ebp
jz	short loc_61C605DA
mov	dword ptr [ebp+0], 2
mov	[esp+4Ch+var_48], offset aAuthentication 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aHostUnknown 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60655
mov	[esp+4Ch+var_48], offset aHostUnknown_0	
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aItemNotFound_2 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60686
mov	[esp+4Ch+var_48], offset aItemNotFound_3 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aImproperAddres 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C606B3
mov	[esp+4Ch+var_48], offset aImproperAddr_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aJidMalformed 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C606E4
mov	[esp+4Ch+var_48], offset aMalformedXmppI 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInternalServer 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60711
mov	[esp+4Ch+var_48], offset aInternalServ_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNotAcceptable	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60742
mov	[esp+4Ch+var_48], offset aNotAcceptabl_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInvalidId 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C6076F
mov	[esp+4Ch+var_48], offset aInvalidId_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNotAllowed 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C607A0
mov	[esp+4Ch+var_48], offset aNotAllowed_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInvalidNamespa 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C607CD
mov	[esp+4Ch+var_48], offset aInvalidNames_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNotAuthorized	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C607FE
mov	[esp+4Ch+var_48], offset aNotAuthorize_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aInvalidXml 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C6082B
mov	[esp+4Ch+var_48], offset aInvalidXml_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aPaymentRequire 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C6085C
mov	[esp+4Ch+var_48], offset aPaymentRequi_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNonmatchingHos 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60889
mov	[esp+4Ch+var_48], offset aNonMatchingHos 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRecipientUnava 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C608D2
mov	[esp+4Ch+var_48], offset aRecipientUna_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aNotAuthorized	
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jnz	loc_61C60523
mov	[esp+4Ch+var_48], offset aPolicyViolatio 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60917
mov	[esp+4Ch+var_48], offset aPolicyViolat_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRedirect 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jnz	loc_61C60258
mov	[esp+4Ch+var_48], offset aRegistrationRe 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60948
mov	[esp+4Ch+var_48], offset aRegistration_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRemoteConnecti 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60975
mov	[esp+4Ch+var_48], offset aRemoteConnec_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRemoteServerNo 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C609A6
mov	[esp+4Ch+var_48], offset aRemoteServer_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aResourceConstr 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C609D3
mov	[esp+4Ch+var_48], offset aResourceCons_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRemoteServerTi 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60A04
mov	[esp+4Ch+var_48], offset aRemoteServer_1 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aRestrictedXml	
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60A31
mov	[esp+4Ch+var_48], offset aRestrictedXm_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aResourceConstr 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60A62
mov	[esp+4Ch+var_48], offset aServerOverload 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aSeeOtherHost 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60A8F
mov	[esp+4Ch+var_48], offset aSeeOtherHost_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aServiceUnavail 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60AC0
mov	[esp+4Ch+var_48], offset aServiceUnava_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aSystemShutdown 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60AED
mov	[esp+4Ch+var_48], offset aSystemShutdo_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aSubscriptionRe 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60B1E
mov	[esp+4Ch+var_48], offset aSubscription_2 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUndefinedCondi 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60B4B
mov	[esp+4Ch+var_48], offset aUndefinedCon_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUnexpectedRequ 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60B7C
mov	[esp+4Ch+var_48], offset aUnexpectedRe_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUnsupportedEnc 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60BAD
mov	[esp+4Ch+var_48], offset aUnsupportedE_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUndefinedCondi 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C60258
mov	[esp+4Ch+var_48], offset aUnknownError_1 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUnsupportedSta 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60BDE
mov	[esp+4Ch+var_48], offset aUnsupportedS_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aUnsupportedV_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60C0F
mov	[esp+4Ch+var_48], offset aUnsupportedV_1 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aXmlNotWellForm 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C60C40
mov	[esp+4Ch+var_48], offset aXmlNotWellFo_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
mov	[esp+4Ch+var_48], offset aStreamError_0	
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
xor	edi, edi
xor	ebx, ebx
jmp	loc_61C60114
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_10]
mov	edi, [esp+4Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
cmp	[esp+4Ch+arg_8], 2
jz	loc_61C60D24
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_parse_error
mov	esi, eax
mov	[esp+4Ch+var_48], offset aErrorChangingP 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aErrorChangingP 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C60DAA
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+4Ch+var_48], offset aYourPasswordHa 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aPasswordChange 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+4Ch+var_48], offset aPasswordChange 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 2
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	[esp+4Ch+var_48], edi
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_account_set_password
jmp	loc_61C60D01
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	edi, eax
cmp	esi, 3
jz	loc_61C60E80
mov	[esp+4Ch+var_48], offset aAccountSuccess 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+4Ch+var_48], offset aAccountSuccess 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 2
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	edx, [ebx+0C8h]
test	edx, edx
jz	loc_61C60F2C
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C60F40
mov	eax, [ebx+0CCh]
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], 1
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
align 10h
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	jabber_parse_error
mov	esi, eax
mov	[esp+4Ch+var_48], offset aErrorUnregiste 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aErrorUnregiste 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 0
mov	eax, [ebx+64h]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_message
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [ebx+0C8h]
test	eax, eax
jz	short loc_61C60F2C
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C60F40
mov	edx, [ebx+0CCh]
mov	[esp+4Ch+arg_8], edx
mov	[esp+4Ch+arg_4], 0
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C60F40
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_10]
mov	esi, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	edx, eax
cmp	edi, 2
jz	loc_61C61058
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_30], eax
call	jabber_parse_error
mov	edi, eax
test	eax, eax
mov	edx, [esp+5Ch+var_30]
jz	loc_61C611AC
mov	[esp+5Ch+var_58], offset aRegistrationFa 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
mov	[esp+5Ch+var_30], edx
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aRegistrationFa 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+4Ch]
test	eax, eax
jz	short loc_61C6102B
mov	ecx, [edx+50h]
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edx
call	eax
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	edi, [ebx+6Ch]
test	edi, edi
jnz	loc_61C61102
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C611D3
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, [ebx+6Ch]
test	ebp, ebp
jnz	loc_61C61120
test	esi, esi
jz	loc_61C6117C
mov	[esp+5Ch+var_58], offset aRegistrationTo 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
			
mov	[esp+5Ch+var_58], offset aRegistrationSu 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aRegistrationSu 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	edi, [ebx+6Ch]
test	edi, edi
jz	loc_61C6103E
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C611D3
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C5A23C
mov	eax, [ebx+5Ch]
mov	ebp, [eax+4]
mov	edi, [eax]
mov	[esp+5Ch+var_58], offset aRegistrationOf 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
mov	[esp+5Ch+var_30], edx
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+4Ch]
test	eax, eax
jz	loc_61C6108D
mov	ecx, [edx+50h]
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edx
call	eax
jmp	loc_61C6108D
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C611D3
mov	[esp+5Ch+arg_8], offset	aToNull	
mov	[esp+5Ch+arg_4], offset	aJabber_registr	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+5Ch+var_58], offset aUnknownError_1 
mov	[esp+5Ch+var_5C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	edi, eax
mov	edx, [esp+5Ch+var_30]
jmp	loc_61C60FA6
			
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_8]
mov	ecx, [esp+3Ch+arg_10]
mov	ebx, [esp+3Ch+arg_14]
mov	esi, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], esi
xor	esi, esi
test	ebx, ebx
jz	loc_61C61338
cmp	eax, 2
jz	loc_61C612AC
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], ecx
mov	[esp+3Ch+var_3C], edx
call	jabber_parse_error
mov	esi, eax
test	eax, eax
jz	loc_61C61368
mov	[esp+3Ch+var_38], offset aUnregistrati_0 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+3Ch+var_38], offset aUnregistrati_0 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], 0
call	purple_notify_message
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6138B
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	[esp+3Ch+var_38], offset aRegistrationFr 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_38], offset aUnregistrati_1 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	edi, eax
mov	[esp+3Ch+var_38], offset aUnregistrati_1 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], 0
call	purple_notify_message
mov	[esp+3Ch+var_3C], esi
call	g_free
jmp	loc_61C6128B
align 4
mov	esi, [esp+3Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_61C6138B
mov	[esp+3Ch+arg_8], offset	aToNull	
mov	[esp+3Ch+arg_4], offset	aJabber_unreg_0	
mov	[esp+3Ch+arg_0], 0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	[esp+3Ch+var_38], offset aUnknownError_1 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	esi, eax
jmp	loc_61C61229
			
call	__stack_chk_fail
public jabber_process_packet
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	esi, [ebp+64h]
mov	[esp+5Ch+var_5C], esi
call	purple_connection_get_prpl
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aJabberReceiv_0 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_emit
mov	eax, [ebx]
test	eax, eax
jz	loc_61C6148C
mov	edx, [eax]
mov	[esp+5Ch+var_30], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_namespace
mov	[esp+5Ch+var_34], eax
mov	eax, [ebx]
mov	edx, [eax]
mov	[esp+5Ch+var_38], edx
mov	edi, offset aIq_0 
mov	ecx, 3
mov	esi, edx
repe cmpsb
jz	loc_61C61544
mov	edi, offset aPresence_1	
mov	ecx, 9
mov	esi, [esp+5Ch+var_38]
repe cmpsb
jz	loc_61C6151C
mov	edi, offset aMessage_1 
mov	ecx, 8
mov	esi, [esp+5Ch+var_38]
repe cmpsb
jz	loc_61C61530
mov	[esp+5Ch+var_58], offset aHttpEtherx_jab 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C614A4
mov	[esp+5Ch+var_58], offset aUrnIetfParam_9 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C6156C
cmp	dword ptr [ebp+20h], 4
jz	loc_61C615BC
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aIgnoringSpurio 
mov	[esp+5Ch+var_5C], offset aJabber_15 
call	purple_debug_warning
nop
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C616D7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aFeatures_0 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jnz	loc_61C61558
mov	[esp+5Ch+var_58], offset aError_4 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jz	short loc_61C6148C
mov	eax, [ebx]
mov	[esp+5Ch+var_24], 0
lea	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_parse_error
mov	ebx, eax
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_error_reason
mov	[esp+5Ch+var_5C], ebx
call	g_free
jmp	loc_61C6148C
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_presence_parse
jmp	loc_61C6148C
align 10h
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_message_parse
jmp	loc_61C6148C
align 4
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_iq_parse
jmp	loc_61C6148C
align 4
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_stream_features_parse
jmp	loc_61C6148C
align 4
mov	[esp+5Ch+var_58], offset aUrnIetfPara_10 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_strequal
test	eax, eax
jz	loc_61C61630
cmp	dword ptr [ebp+20h], 3
jnz	short loc_61C61599
mov	eax, [ebp+68h]
test	eax, eax
jz	loc_61C61664
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aIgnoringSpur_0 
mov	[esp+5Ch+var_5C], offset aJabber_15 
call	purple_debug_warning
jmp	loc_61C6148C
align 4
mov	[esp+5Ch+var_58], offset aChallenge_0 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jnz	short loc_61C6161C
mov	[esp+5Ch+var_58], offset aSuccess 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jnz	short loc_61C61651
mov	[esp+5Ch+var_58], offset aFailure 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jz	loc_61C6148C
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_auth_handle_failure
jmp	loc_61C6148C
align 4
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_auth_handle_challenge
jmp	loc_61C6148C
align 10h
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aUnknownPacketS 
mov	[esp+5Ch+var_5C], offset aJabber_15 
call	purple_debug_warning
jmp	loc_61C6148C
mov	eax, [ebx]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_auth_handle_success
jmp	loc_61C6148C
mov	[esp+5Ch+var_58], offset aProceed 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_str_equal
test	eax, eax
jz	loc_61C6148C
mov	eax, [ebp+64h]
mov	eax, [eax+14h]
mov	[esp+5Ch+var_5C], eax
call	purple_input_remove
mov	eax, [ebp+64h]
mov	dword ptr [eax+14h], 0
mov	[esp+5Ch+var_48], eax
mov	edx, [ebp+110h]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], offset loc_61C5AEE0
mov	[esp+5Ch+var_54], offset loc_61C5E11C
mov	edx, [ebp+0]
mov	[esp+5Ch+var_58], edx
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_5C], eax
call	purple_ssl_connect_with_host_fd
mov	[ebp+68h], eax
mov	dword ptr [ebp+0], 0FFFFFFFFh
jmp	loc_61C6148C
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	[esp+2Ch+arg_8], 2
jz	short loc_61C61750
mov	[esp+2Ch+var_14], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jabber_parse_error
mov	esi, eax
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_error_reason
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6185D
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aUrnIetfParam_8 
mov	[esp+2Ch+var_28], offset aBind 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C616FB
mov	[esp+2Ch+var_28], offset aJid_5	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C617DE
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	short loc_61C617DE
mov	eax, [ebx+5Ch]
mov	[esp+2Ch+var_2C], eax
call	jabber_id_free
mov	[esp+2Ch+var_2C], esi
call	jabber_id_new
mov	[ebx+5Ch], eax
test	eax, eax
jz	loc_61C61838
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jabber_buddy_find
mov	[ebx+60h], eax
or	dword ptr [eax+0Ch], 0Ch
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_set_display_name
mov	[esp+2Ch+var_2C], esi
call	g_free
			
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C5AF6C
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_set_callback
mov	[esp+2Ch+var_28], offset aSession 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], offset aUrnIetfPara_11 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
jmp	loc_61C61738
mov	[esp+2Ch+var_28], offset aInvalidRespo_2 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
jmp	loc_61C61725
call	__stack_chk_fail
align 4
public jabber_attention_types
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C98080
test	eax, eax
jz	short loc_61C61890
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C61903
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_28], offset aBuzzingS___ 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	[esp+2Ch+var_28], offset aSHasBuzzedYou	
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aBuzz_0 
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aBuzz_0 
call	purple_attention_type_new
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C98080
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_61C98080, eax
jmp	loc_61C6187D
call	__stack_chk_fail
public jabber_send_attention
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esi+1Ch]
mov	[esp+3Ch+var_14], 0
lea	ecx, [esp+3Ch+var_14]
mov	edx, ebx
call	sub_61C5B174
test	eax, eax
jz	short loc_61C61958
mov	eax, 1
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C619E3
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+Time],	esi
call	purple_connection_get_account
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	4
call	purple_find_conversation_with_account
mov	esi, eax
mov	edx, [esp+3Ch+var_14]
test	edx, edx
jz	short loc_61C619DC
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aJabber_send_at 
mov	[esp+3Ch+Time],	offset aJabber_15 
call	purple_debug_error
test	esi, esi
jz	short loc_61C619C6
mov	[esp+3Ch+Time],	0 
call	time
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 200h
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	esi
call	purple_conversation_write
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+Time],	eax
call	g_free
xor	eax, eax
jmp	loc_61C6193F
align 4
mov	edx, offset aNull_1 
jmp	short loc_61C6197E
call	__stack_chk_fail
public jabber_offline_message
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C61A08
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_initiate_media
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C61A2E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_get_media_caps
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C61A52
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_can_receive_file
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+1Ch]
test	eax, eax
jz	loc_61C61B14
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	jabber_buddy_find
mov	edi, eax
test	eax, eax
jz	short loc_61C61B14
mov	ebx, [eax]
test	ebx, ebx
jz	loc_61C61B2C
xor	esi, esi
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_resource_know_capabilities
test	eax, eax
jnz	short loc_61C61AB7
mov	esi, 1
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C61AA4
test	esi, esi
jnz	short loc_61C61B14
mov	ebx, [edi]
test	ebx, ebx
jnz	short loc_61C61AD3
jmp	short loc_61C61B2C
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_61C61B2C
mov	esi, [ebx]
mov	[esp+2Ch+var_28], offset aHttpJabber__21 
mov	[esp+2Ch+var_2C], esi
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C61ACC
mov	[esp+2Ch+var_28], offset aHttpJabber__22 
mov	[esp+2Ch+var_2C], esi
call	jabber_resource_has_capability
test	eax, eax
jnz	short loc_61C61B14
mov	[esp+2Ch+var_28], offset aHttpJabber__23 
mov	[esp+2Ch+var_2C], esi
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C61ACC
lea	esi, [esi+0]
			
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C61B30
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	eax, eax
jmp	short loc_61C61B19
call	__stack_chk_fail
align 4
public jabber_plugin_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_61C98084
inc	eax
mov	ds:dword_61C98084, eax
dec	eax
jz	loc_61C627B0
mov	[esp+6Ch+var_68], offset aConfigConfigur 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C595C8
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset byte_61C7F35C
mov	[esp+6Ch+uMode], offset	aConfig	
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], 0
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aConfigureConfi 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C595C8
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset byte_61C7F35C
mov	[esp+6Ch+uMode], offset	aConfigure 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aNickLtNewNickn 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C5AAE8
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aS_1 
mov	[esp+6Ch+uMode], offset	aNick_1	
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aPartMessageLea 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C59570
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aS_1 
mov	[esp+6Ch+uMode], offset	aPart 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aRegisterRegist 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C5952C
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset byte_61C7F35C
mov	[esp+6Ch+uMode], offset	aRegister_0 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aTopicNewTopicV 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C593F4
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aS_1 
mov	[esp+6Ch+uMode], offset	aTopic 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aBanLtUserGtRea 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C5AA50
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aBan 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aAffiliateLtOwn 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C5921C
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aAffiliate 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aRoleLtModerato 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C59050
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aRole_2	
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aInviteLtUserGt 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C58FCC
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aInvite_0 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aJoinLtRoom@ser 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C58DF4
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aJoin 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aKickLtUserGtRe 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C5A9B0
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Eh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aKick 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aMsgLtUserGtLtM 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C58D60
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 6
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aMsg 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aPingLtJidGtPin 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C5A910
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 7
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aW 
mov	[esp+6Ch+uMode], offset	aPing_0	
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aBuzzBuzzAUserT 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset sub_61C5B320
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Dh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aW 
mov	[esp+6Ch+uMode], offset	aBuzz 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	esi, eax
mov	[esp+6Ch+var_68], offset aMoodSetCurrent 
mov	[esp+6Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], offset loc_61C5A810
mov	[esp+6Ch+var_5C], offset aPrplJabber_0 
mov	[esp+6Ch+var_60], 0Fh
mov	[esp+6Ch+var_64], 7D0h
mov	[esp+6Ch+var_68], offset aWs 
mov	[esp+6Ch+uMode], offset	aMood 
call	purple_cmd_register
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], esi
call	g_slist_prepend
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ebx
mov	eax, ds:dword_61C9808C
mov	[esp+6Ch+uMode], eax
call	g_hash_table_insert
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 4
call	purple_value_new
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], 3
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], offset loc_61C78484
mov	[esp+6Ch+var_64], offset sub_61C5960C
mov	[esp+6Ch+var_68], offset aContact_has_fe 
mov	[esp+6Ch+uMode], ebx
call	purple_plugin_ipc_register
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], 1
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset loc_61C7848C
mov	[esp+6Ch+var_64], offset sub_61C5C554
mov	[esp+6Ch+var_68], offset aAdd_feature 
mov	[esp+6Ch+uMode], ebx
call	purple_plugin_ipc_register
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], 2
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset loc_61C78494
mov	[esp+6Ch+var_64], offset jabber_iq_signal_register
mov	[esp+6Ch+var_68], offset aRegister_names 
mov	[esp+6Ch+uMode], ebx
call	purple_plugin_ipc_register
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], 2
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset loc_61C78494
mov	[esp+6Ch+var_64], offset jabber_iq_signal_unregister
mov	[esp+6Ch+var_68], offset aUnregister_nam 
mov	[esp+6Ch+uMode], ebx
call	purple_plugin_ipc_register
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset loc_61C78494
mov	[esp+6Ch+var_68], offset aJabberRegister 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset loc_61C78494
mov	[esp+6Ch+var_68], offset aJabberUnregist 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset jabber_iq_signal_register
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aJabberRegister 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_connect
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset jabber_iq_signal_unregister
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aJabberUnregist 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_connect
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset loc_61C78494
mov	[esp+6Ch+var_68], offset aJabberReceiv_0 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset loc_61C78494
mov	[esp+6Ch+var_68], offset aJabberSendingX 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_58], 270Fh
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset jabber_send_signal_cb
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aJabberSendingX 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_connect_priority
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset loc_61C78494
mov	[esp+6Ch+var_68], offset aJabberSendingT 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_34], eax
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_38], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+uMode], 4
call	purple_value_new
mov	ecx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_44], ecx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], 6
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset loc_61C7849C
mov	[esp+6Ch+var_68], offset aJabberReceiv_1 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_34], eax
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_38], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 4
call	purple_value_new
mov	ecx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_48], ecx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_4C], edx
mov	[esp+6Ch+var_50], ebp
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset loc_61C784A4
mov	[esp+6Ch+var_68], offset aJabberReceiv_2 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_34], eax
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_38], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 4
call	purple_value_new
mov	ecx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_48], ecx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_4C], edx
mov	[esp+6Ch+var_50], ebp
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset loc_61C784A4
mov	[esp+6Ch+var_68], offset aJabberWatche_0 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	[esp+6Ch+uMode], 0Dh
mov	[esp+6Ch+var_38], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+uMode], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+uMode], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+uMode], 4
call	purple_value_new
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_4C], edx
mov	[esp+6Ch+var_50], ebp
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], 4
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset loc_61C784AC
mov	[esp+6Ch+var_68], offset aJabberReceiv_3 
mov	[esp+6Ch+uMode], ebx
call	purple_signal_register
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C62B0E
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	purple_core_get_ui_info
mov	ebp, eax
mov	ecx, ds:dword_61C98088
test	ecx, ecx
jz	loc_61C62A84
mov	[esp+6Ch+var_60], offset sub_61C58D14
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], offset loc_61C77B24
mov	[esp+6Ch+uMode], offset	loc_61C77B2C
call	g_hash_table_new_full
mov	ds:dword_61C9808C, eax
test	ebp, ebp
jz	loc_61C62A74
mov	[esp+6Ch+var_68], offset aClient_type 
mov	[esp+6Ch+uMode], ebp
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	short loc_61C6286C
mov	ecx, 3
mov	edi, offset aPc	
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edi, offset aConsole 
mov	ecx, 8
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edi, offset aPhone 
mov	ecx, 6
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edi, offset aHandheld 
mov	ecx, 9
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edi, offset aWeb 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edi, offset aBot 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jz	short loc_61C62874
mov	edx, offset aPc	
lea	esi, [esi+0]
			
mov	[esp+6Ch+var_68], offset aName_9 
mov	[esp+6Ch+uMode], ebp
mov	[esp+6Ch+var_38], edx
call	g_hash_table_lookup
test	eax, eax
mov	edx, [esp+6Ch+var_38]
jz	loc_61C62B13
			
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+uMode], offset	aClient_1 
call	jabber_add_identity
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aJabberIqLast_1	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aJabberIqOob_0 
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aUrnXmppTime_1 
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aJabberIqVers_1	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aJabberXConfe_0	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__22	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__24	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__25	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__26	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__27	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__23	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__28	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__29	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__30	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__21	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aHttpJabber__31	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aUrnXmppPing_1 
call	jabber_add_feature
mov	[esp+6Ch+var_68], offset jabber_buzz_isenabled 
mov	[esp+6Ch+uMode], offset	aUrnXmppAttenti	
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aUrnXmppBob_0 
call	jabber_add_feature
mov	[esp+6Ch+var_68], 0 
mov	[esp+6Ch+uMode], offset	aUrnXmppJingl_0	
call	jabber_add_feature
call	jabber_iq_init
call	jabber_presence_init
call	jabber_caps_init
call	jabber_pep_init
call	jabber_data_init
call	jabber_bosh_init
call	jabber_ibb_init
call	jabber_si_init
call	jabber_auth_init
jmp	loc_61C61B60
align 4
mov	edx, offset aPc	
mov	eax, offset aPidgin_8 
jmp	loc_61C62894
align 4
mov	ds:dword_61C98088, 1
call	wpurple_install_dir
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], offset aSasl2	
mov	[esp+6Ch+uMode], eax
call	g_build_filename
mov	esi, eax
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+uMode], 0
call	ds:sasl_set_path
mov	[esp+6Ch+uMode], esi
call	g_free
mov	[esp+6Ch+uMode], 1 
call	SetErrorMode
push	edx
mov	esi, eax
mov	[esp+6Ch+uMode], 0
call	ds:sasl_client_init
test	eax, eax
jnz	short loc_61C62AF4
mov	[esp+6Ch+uMode], esi 
call	SetErrorMode
push	eax
jmp	loc_61C627C5
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aErrorDInitiali 
mov	[esp+6Ch+uMode], offset	aXmpp_0	
call	purple_debug_error
jmp	short loc_61C62AE6
call	__stack_chk_fail
mov	eax, offset aPidgin_8 
jmp	loc_61C62894
align 10h
public jabber_plugin_uninit
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C98084
test	eax, eax
jle	loc_61C62C5C
mov	[esp+2Ch+var_2C], ebx
call	purple_signals_unregister_by_instance
mov	[esp+2Ch+var_2C], ebx
call	purple_plugin_ipc_unregister_all
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_61C9808C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
dec	ds:dword_61C98084
jz	short loc_61C62B80
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C62C7D
add	esp, 28h
pop	ebx
retn
align 10h
call	jabber_bosh_uninit
call	jabber_data_uninit
call	jabber_si_uninit
call	jabber_ibb_uninit
call	jabber_pep_uninit
call	jabber_caps_uninit
call	jabber_presence_uninit
call	jabber_iq_uninit
call	jabber_auth_uninit
mov	eax, ds:jabber_features
test	eax, eax
jz	short loc_61C62BE6
xchg	ax, ax
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, ds:jabber_features
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:jabber_features, eax
test	eax, eax
jnz	short loc_61C62BB8
mov	eax, ds:jabber_identities
test	eax, eax
jz	short loc_61C62C3F
nop
mov	ebx, [eax]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, ds:jabber_identities
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:jabber_identities, eax
test	eax, eax
jnz	short loc_61C62BF0
mov	eax, ds:dword_61C9808C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C9808C, 0
jmp	loc_61C62B69
align 4
mov	[esp+2Ch+var_24], offset aPlugin_ref0 
mov	[esp+2Ch+var_28], offset aJabber_plugin_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_61C62B69
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C62CA2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C62CD3
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_object_unref
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_session_create_ack
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C62D12
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_session_create_ack
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C62D52
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aContent 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jingle_session_create_ack
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C62E10
mov	[esp+4Ch+var_48], offset aName_11 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+4Ch+var_48], offset aCreator 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aTransport 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_child
mov	[esp+4Ch+var_4C], eax
call	jingle_transport_parse
mov	esi, eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], edi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jingle_session_find_content
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	jingle_content_set_pending_transport
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C62DA4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C62E24
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C62EB8
nop
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_find_content
mov	[esp+2Ch+var_2C], eax
call	jingle_content_remove_pending_transport
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C62E70
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C62ECB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jnz	short loc_61C62F3A
jmp	loc_61C62FAC
mov	[esp+2Ch+var_24], 0Dh
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	jingle_content_handle_action
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C62FAC
			
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_find_content
test	eax, eax
jnz	short loc_61C62F18
mov	[esp+2Ch+var_28], offset aErrorParsingCo 
mov	[esp+2Ch+var_2C], offset aJingle_0 
call	purple_debug_error
mov	[esp+2Ch+var_28], offset aUnsupportedApp 
mov	[esp+2Ch+var_2C], edi
call	jingle_session_terminate_packet
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C62F3A
xchg	ax, ax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C62FBF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C63050
nop
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_find_content
mov	[esp+2Ch+var_2C], eax
call	jingle_content_accept_transport
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C63008
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63063
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_24], 0Bh
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	jingle_session_handle_action
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C630C2
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_object_unref
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aContent 
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C6312A
jmp	short loc_61C63174
align 4
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	jingle_session_add_content
mov	[esp+3Ch+var_34], 0Ah
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	jingle_content_handle_action
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C63174
			
mov	[esp+3Ch+var_3C], ebx
call	jingle_content_parse
mov	esi, eax
test	eax, eax
jnz	short loc_61C630FC
mov	[esp+3Ch+var_38], offset aErrorParsingCo 
mov	[esp+3Ch+var_3C], offset aJingle_0 
call	purple_debug_error
mov	[esp+3Ch+var_38], offset aUnsupportedApp 
mov	[esp+3Ch+var_3C], edi
call	jingle_session_terminate_packet
mov	[esp+3Ch+var_3C], eax
call	jabber_iq_send
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C6312A
xchg	ax, ax
			
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	jingle_session_create_ack
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6319C
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], edi
call	jingle_session_accept_session
test	ebx, ebx
jnz	short loc_61C63216
jmp	loc_61C63288
mov	[esp+2Ch+var_24], 8
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	jingle_content_handle_action
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C63288
			
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_find_content
test	eax, eax
jnz	short loc_61C631F4
mov	[esp+2Ch+var_28], offset aErrorParsingCo 
mov	[esp+2Ch+var_2C], offset aJingle_0 
call	purple_debug_error
mov	[esp+2Ch+var_28], offset aUnsupportedApp 
mov	[esp+2Ch+var_2C], edi
call	jingle_session_terminate_packet
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C63216
xchg	ax, ax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6329B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], edi
call	jingle_session_accept_session
test	ebx, ebx
jnz	short loc_61C63312
jmp	loc_61C63384
mov	[esp+2Ch+var_24], 6
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	jingle_content_handle_action
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C63384
			
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_find_content
test	eax, eax
jnz	short loc_61C632F0
mov	[esp+2Ch+var_28], offset aErrorParsingCo 
mov	[esp+2Ch+var_2C], offset aJingle_0 
call	purple_debug_error
mov	[esp+2Ch+var_28], offset aUnsupportedApp 
mov	[esp+2Ch+var_2C], edi
call	jingle_session_terminate_packet
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C63312
xchg	ax, ax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63397
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C63420
nop
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_remove_content
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C633E0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63433
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C634BC
nop
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_remove_pending_content
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C6347C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C634CF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aContent 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jingle_session_create_ack
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_send
test	ebx, ebx
jnz	short loc_61C63542
jmp	loc_61C63604
align 4
			
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C63604
			
mov	[esp+4Ch+var_48], offset aName_11 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aCreator 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jingle_session_find_content
mov	esi, eax
test	eax, eax
jz	short loc_61C635C0
mov	[esp+4Ch+var_48], offset aSenders_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+4Ch+var_4C], esi
call	jingle_content_get_senders
mov	ebp, eax
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_strequal
test	eax, eax
jnz	loc_61C63528
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	jingle_content_modify
jmp	loc_61C63528
align 10h
mov	[esp+4Ch+var_48], offset aContent_modify 
mov	[esp+4Ch+var_4C], offset aJingle_0 
call	purple_debug_error
mov	[esp+4Ch+var_48], offset aUnknownApplica 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	jingle_session_terminate_packet
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_send
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	loc_61C63542
xchg	ax, ax
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63618
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jnz	short loc_61C63682
jmp	short loc_61C636C8
align 4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jingle_session_add_pending_content
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C636C8
			
mov	[esp+2Ch+var_2C], ebx
call	jingle_content_parse
test	eax, eax
jnz	short loc_61C63668
mov	[esp+2Ch+var_28], offset aErrorParsing_0 
mov	[esp+2Ch+var_2C], offset aJingle_0 
call	purple_debug_error
mov	[esp+2Ch+var_28], offset aUnsupportedApp 
mov	[esp+2Ch+var_2C], esi
call	jingle_session_terminate_packet
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C63682
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C636DB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aContent 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_create_ack
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_send
test	ebx, ebx
jz	short loc_61C63764
nop
mov	[esp+2Ch+var_28], offset aName_11 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+2Ch+var_28], offset aCreator 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	jingle_session_accept_content
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C63724
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63777
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public jingle_get_type
			
push	edi
push	esi
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C637B5
mov	edi, offset aUrnXmppJingleT 
mov	ecx, 25h
mov	esi, eax
repe cmpsb
jz	short loc_61C637E4
mov	edi, offset aUrnXmppJingl_1 
mov	ecx, 25h
mov	esi, eax
repe cmpsb
jz	short loc_61C637CC
mov	eax, 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C637FA
add	esp, 14h
pop	esi
pop	edi
retn
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C637FA
add	esp, 14h
pop	esi
pop	edi
jmp	jingle_iceudp_get_type
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C637FA
add	esp, 14h
pop	esi
pop	edi
jmp	jingle_rawudp_get_type
			
call	__stack_chk_fail
align 10h
public jingle_get_action_name
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, ds:off_61C81B00[eax*8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63829
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jingle_get_action_type
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, 1
lea	esi, [esi+0]
mov	eax, ds:off_61C81B00[ebx*8]
mov	[esp+2Ch+Str2],	eax 
mov	[esp+2Ch+Str1],	esi 
call	strcmp
test	eax, eax
jz	short loc_61C63880
inc	ebx
cmp	ebx, 10h
jnz	short loc_61C6384C
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63884
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	eax, ebx
jmp	short loc_61C6386B
call	__stack_chk_fail
align 4
public jingle_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	ebx, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_8]
test	eax, eax
jz	short loc_61C638D0
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C63A47
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_58], offset aAction_0 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	short loc_61C638B6
mov	[esp+5Ch+var_5C], eax
call	jingle_get_action_type
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aGotJinglePacka 
mov	[esp+5Ch+var_5C], offset aJabber_16 
call	purple_debug_info
mov	[esp+5Ch+var_58], offset aSid_1	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C638B6
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
mov	[esp+5Ch+var_3C], eax
call	jingle_session_find_by_sid
test	eax, eax
mov	edx, [esp+5Ch+var_3C]
jz	short loc_61C6399C
cmp	[esp+5Ch+var_34], 0Ah
jz	short loc_61C6396C
lea	esi, [esi+0]
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C63A47
mov	[esp+5Ch+arg_4], ebx
mov	[esp+5Ch+arg_0], eax
mov	edx, [esp+5Ch+var_34]
mov	eax, ds:off_61C81B04[edx*8]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C63A47
mov	[esp+5Ch+arg_8], edx
mov	[esp+5Ch+arg_4], offset	aJingleSessionW	
mov	[esp+5Ch+arg_0], offset	aJingle_0 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
mov	edi, offset aSessionInitiat 
mov	ecx, 11h
repe cmpsb
setnbe	cl
setb	[esp+5Ch+var_2D]
cmp	cl, [esp+5Ch+var_2D]
jnz	short loc_61C63A1F
cmp	[esp+5Ch+var_34], 0Ah
jnz	short loc_61C63940
mov	eax, [ebp+5Ch]
mov	ecx, [eax+8]
mov	[esp+5Ch+var_50], ecx
mov	ecx, [eax+4]
mov	[esp+5Ch+var_54], ecx
mov	eax, [eax]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aS@SS_1 
mov	[esp+5Ch+var_3C], edx
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_4C], 0
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebp
call	jingle_session_create
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_3C], eax
call	g_free
mov	eax, [esp+5Ch+var_3C]
jmp	loc_61C63940
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63A47
mov	[esp+5Ch+arg_4], offset	aJabber_jingle_	
mov	[esp+5Ch+arg_0], offset	aJingle_0 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
			
call	__stack_chk_fail
public jingle_terminate_sessions
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+134h]
test	eax, eax
jz	short loc_61C63A80
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C62CA8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63A90
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_class_peek_parent
mov	ds:dword_61C980A4, eax
mov	dword ptr [ebx+18h], offset sub_61C641A8
mov	dword ptr [ebx+0Ch], offset sub_61C63F5C
mov	dword ptr [ebx+10h], offset sub_61C63D68
mov	dword ptr [ebx+44h], offset sub_61C64718
mov	dword ptr [ebx+48h], offset sub_61C64320
call	jingle_session_get_type
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aTheJingleSessi 
mov	[esp+3Ch+var_38], offset aJingleSession	
mov	[esp+3Ch+var_3C], offset aSession_0 
call	g_param_spec_object
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheParticipant 
mov	[esp+3Ch+var_38], offset aCreator_0 
mov	[esp+3Ch+var_3C], offset aCreator_1 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheDisposition 
mov	[esp+3Ch+var_38], offset aDisposition 
mov	[esp+3Ch+var_3C], offset aDisposition_0	
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheNameOfThisC 
mov	[esp+3Ch+var_38], offset aName_12 
mov	[esp+3Ch+var_3C], offset aName_13 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 7
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheSenderOfThi 
mov	[esp+3Ch+var_38], offset aSenders_1 
mov	[esp+3Ch+var_3C], offset aSenders_2 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 5
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
call	jingle_transport_get_type
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aTheTransportOf 
mov	[esp+3Ch+var_38], offset aTransport_0 
mov	[esp+3Ch+var_3C], offset aTransport_0 
call	g_param_spec_object
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 6
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
call	jingle_transport_get_type
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aThePendingTran 
mov	[esp+3Ch+var_38], offset aPendingTranspo 
mov	[esp+3Ch+var_3C], offset aPendingTrans_0 
call	g_param_spec_object
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_38], 20h
mov	[esp+3Ch+var_3C], ebx
call	g_type_class_add_private
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63CBF
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
public jingle_content_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980A0
test	eax, eax
jnz	short loc_61C63D04
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aT_0 
mov	[esp+2Ch+var_28], offset aJinglecontent	
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_61C980A0, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63D14
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_content_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_instance_get_private
mov	edx, eax
mov	[ebx+0Ch], eax
mov	ecx, 20h
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C63D63
add	esp, 24h
pop	ebx
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C63F3C
call	jingle_content_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C63DA1
cmp	[edx], eax
jz	short loc_61C63DE8
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C63DE8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C63F55
mov	[esp+5Ch+arg_8], offset	aJingle_is_cont	
mov	[esp+5Ch+arg_4], offset	aJingle_content	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_content_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	esi, 7		
jbe	short loc_61C63E70
			
mov	eax, [ebx]	
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], offset aProperty 
mov	[esp+5Ch+var_50], offset aJingleContent_ 
mov	[esp+5Ch+var_54], offset aSInvalidSIdUFo 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C63F55
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_61C81D94[esi*4] 
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+1Ch]
			
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_object
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+18h]
jmp	short loc_61C63E8E
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+14h]
			
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_string
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+10h]
jmp	short loc_61C63ED2
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+0Ch]
jmp	short loc_61C63ED2
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax+8]
jmp	short loc_61C63ED2
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63F55
mov	eax, [eax+0Ch]
mov	eax, [eax]
jmp	loc_61C63E8E
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C63F55
mov	[esp+5Ch+arg_8], offset	aObjectNull 
jmp	loc_61C63DC9
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	edi, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C64188
call	jingle_content_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C63F95
cmp	[edx], eax
jz	short loc_61C63FDC
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C63FDC
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C641A1
mov	[esp+6Ch+arg_8], offset	aJingle_is_cont	
mov	[esp+6Ch+arg_4], offset	aJingle_conte_0	
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_content_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_type_check_instance_cast
cmp	esi, 7		
jbe	short loc_61C64064
			
mov	eax, [ebx]	
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_50], eax
mov	eax, [ebp+4]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], offset aProperty 
mov	[esp+6Ch+var_60], offset aJingleConten_0 
mov	[esp+6Ch+var_64], offset aSInvalidSIdUFo 
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], 0
call	g_log
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C641A1
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_61C81DCC[esi*4] 
align 4
			
mov	ebx, [eax+0Ch]	
mov	edx, [ebx+1Ch]
test	edx, edx
jz	short loc_61C64089
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_object_unref
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_get_object
mov	[ebx+1Ch], eax
jmp	short loc_61C6404C
align 4
			
mov	ebx, [eax+0Ch]	
mov	edx, [ebx+18h]
test	edx, edx
jz	short loc_61C640B5
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_object_unref
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_get_object
mov	[ebx+18h], eax
jmp	short loc_61C6404C
align 4
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+14h]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_dup_string
mov	[ebx+14h], eax
jmp	loc_61C6404C
align 10h
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+10h]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_dup_string
mov	[ebx+10h], eax
jmp	loc_61C6404C
align 4
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+0Ch]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_dup_string
mov	[ebx+0Ch], eax
jmp	loc_61C6404C
align 4
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+8]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], edi
call	g_value_dup_string
mov	[ebx+8], eax
jmp	loc_61C6404C
align 4
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], edi
call	g_value_get_object
mov	[ebx], eax
jmp	loc_61C6404C
align 4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C641A1
mov	[esp+6Ch+arg_8], offset	aObjectNull 
jmp	loc_61C63FBD
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_content_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_type_instance_get_private
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aJingle_conte_1 
mov	[esp+2Ch+var_2C], offset aJingle_1 
call	purple_debug_info
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_object_unref
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_61C64234
mov	[esp+2Ch+var_2C], eax
call	g_object_unref
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64253
mov	[esp+2Ch+arg_0], esi
mov	eax, ds:dword_61C980A4
mov	eax, [eax+18h]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
call	__stack_chk_fail
public jingle_content_create
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	esi, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_C]
mov	ebx, [esp+6Ch+arg_10]
mov	edx, [esp+6Ch+arg_14]
mov	ecx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], ecx
xor	ecx, ecx
test	ebx, ebx
jz	short loc_61C64304
test	esi, esi
jz	short loc_61C64310
			
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_30], edx
call	jingle_get_type
mov	[esp+6Ch+var_40], 0
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_48], offset aTransport_0 
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_50], offset aSenders_2 
mov	[esp+6Ch+var_54], ebp
mov	[esp+6Ch+var_58], offset aName_13 
mov	[esp+6Ch+var_5C], esi
mov	[esp+6Ch+var_60], offset aDisposition_0	
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aCreator_1 
mov	[esp+6Ch+var_6C], eax
call	g_object_new
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6431A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, offset aBoth_0 
test	esi, esi
jnz	short loc_61C64291
lea	esi, [esi+0]
mov	esi, offset aSession_0 
jmp	loc_61C64291
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aDescription_2	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_namespace
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], offset aCreator_1 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], offset aDisposition_0	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+5Ch+var_58], offset aSenders_2 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+var_58], offset aName_13 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aTransport_0 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
mov	[esp+5Ch+var_5C], eax
call	jingle_transport_parse
test	eax, eax
jz	short loc_61C643FB
test	esi, esi
jz	short loc_61C643F4
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], edi
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	jingle_content_create
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C643FF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	esi, offset aBoth_0 
jmp	short loc_61C643BC
xor	eax, eax
jmp	short loc_61C643E0
call	__stack_chk_fail
public jingle_content_get_session
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSession_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6444A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_content_get_description_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
mov	eax, [eax+50h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64477
add	esp, 1Ch
retn
call	__stack_chk_fail
public jingle_content_get_creator
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCreator_1 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C644C2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_content_get_disposition
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aDisposition_0	
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6450E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_content_get_name
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aName_13 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6455A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_content_get_senders
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSenders_2 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C645A6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_content_get_transport
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTransport_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C645F2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_content_set_session
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_content_get_type
test	ebx, ebx
jz	short loc_61C64623
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C64623
cmp	[edx], eax
jz	short loc_61C64664
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C64664
mov	[esp+2Ch+var_24], offset aJingle_is_co_0 
mov	[esp+2Ch+var_28], offset aJingle_conte_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C646C6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
call	jingle_session_get_type
test	esi, esi
jz	short loc_61C64677
mov	edx, [esi]
test	edx, edx
jz	short loc_61C64677
cmp	[edx], eax
jz	short loc_61C646A8
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C646A8
mov	[esp+2Ch+var_24], offset aJingle_is_sess 
mov	[esp+2Ch+var_28], offset aJingle_conte_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_61C6464F
align 4
			
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aSession_0 
mov	[esp+2Ch+var_2C], ebx
call	g_object_set
jmp	short loc_61C6464F
call	__stack_chk_fail
align 4
public jingle_content_get_pending_transport
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aPending_transp 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64712
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aContent_0 
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_creator
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_name
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_senders
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_disposition
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aCreator_1 
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_40], eax
call	xmlnode_set_attrib
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aName_13 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_set_attrib
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aSenders_2 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_set_attrib
mov	esi, offset aSession_0 
mov	ecx, 8
mov	eax, [esp+5Ch+var_40]
mov	edi, eax
repe cmpsb
jnz	loc_61C6486C
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_free
cmp	[esp+5Ch+var_3C], 5
jz	short loc_61C64848
mov	eax, [esp+5Ch+var_3C]
sub	eax, 0Ch
cmp	eax, 3
ja	short loc_61C6488C
cmp	[esp+5Ch+var_3C], 0Fh
jz	short loc_61C64860
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_transport
mov	esi, eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	jingle_transport_to_xml
mov	[esp+5Ch+var_5C], esi
call	g_object_unref
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C648B3
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_5C], ebp
call	jingle_content_get_pending_transport
mov	esi, eax
jmp	short loc_61C6482C
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aDisposition_0	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_40]
jmp	loc_61C647DC
align 4
mov	[esp+5Ch+var_58], offset aDescription_2	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_new_child
mov	edx, [ebp+0]
mov	edx, [edx+50h]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_namespace
jmp	loc_61C64822
call	__stack_chk_fail
public jingle_content_set_pending_transport
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aPendingTrans_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_set
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C648FA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_content_accept_transport
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
mov	edx, [eax+18h]
test	edx, edx
jz	short loc_61C64928
mov	[esp+2Ch+var_2C], edx
call	g_object_unref
mov	eax, [ebx+0Ch]
mov	edx, [eax+1Ch]
mov	[eax+18h], edx
mov	dword ptr [eax+1Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64946
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jingle_content_remove_pending_transport
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_61C6497B
mov	[esp+2Ch+var_2C], eax
call	g_object_unref
mov	eax, [ebx+0Ch]
mov	dword ptr [eax+1Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6498C
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jingle_content_modify
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSenders_2 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_set
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C649D6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_content_parse
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aDescription_2	
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_child
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_namespace
mov	[esp+2Ch+var_2C], eax
call	jingle_get_type
mov	ebx, eax
cmp	eax, 4
jz	short loc_61C64A50
call	jingle_content_get_type
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_ref
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	g_type_check_class_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64A65
mov	[esp+2Ch+arg_0], esi
mov	eax, [eax+48h]
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 10h
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64A65
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public jingle_content_to_xml
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C64B04
call	jingle_content_get_type
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C64A9D
cmp	[esi], eax
jz	short loc_61C64AE0
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C64AE0
mov	[esp+3Ch+var_34], offset aJingle_is_co_0 
mov	[esp+3Ch+var_38], offset aJingle_conte_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64B22
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64B22
mov	[esp+3Ch+arg_8], ebp
mov	[esp+3Ch+arg_4], edi
mov	[esp+3Ch+arg_0], ebx
mov	eax, [esi+44h]
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	[esp+3Ch+var_34], offset aContentNull 
mov	[esp+3Ch+var_38], offset aJingle_conte_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_61C64AC9
			
call	__stack_chk_fail
align 4
public jingle_content_handle_action
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C64BC0
call	jingle_content_get_type
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C64B59
cmp	[esi], eax
jz	short loc_61C64B9C
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C64B9C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64BD6
mov	[esp+3Ch+arg_8], offset	aJingle_is_co_0	
mov	[esp+3Ch+arg_4], offset	aJingle_conte_4	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64BD6
mov	[esp+3Ch+arg_8], ebp
mov	[esp+3Ch+arg_4], edi
mov	[esp+3Ch+arg_0], ebx
mov	eax, [esi+4Ch]
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64BD6
mov	[esp+3Ch+arg_8], offset	aContentNull 
jmp	short loc_61C64B7D
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_peek_parent
mov	ds:dword_61C980B0, eax
mov	dword ptr [ebx+18h], offset sub_61C64D40
mov	dword ptr [ebx+0Ch], offset sub_61C65870
mov	dword ptr [ebx+10h], offset sub_61C65708
mov	dword ptr [ebx+48h], offset sub_61C653F4
mov	dword ptr [ebx+4Ch], offset sub_61C65080
mov	dword ptr [ebx+44h], offset aUrnXmppJingl_2 
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], offset aTheLocalCandid 
mov	[esp+2Ch+var_28], offset aLocalCandidate 
mov	[esp+2Ch+var_2C], offset aLocalCandida_0 
call	g_param_spec_pointer
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	g_object_class_install_property
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], offset aTheRemoteCandi 
mov	[esp+2Ch+var_28], offset aRemoteCandidat 
mov	[esp+2Ch+var_2C], offset aRemoteCandid_0 
call	g_param_spec_pointer
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	g_object_class_install_property
mov	[esp+2Ch+var_28], 8
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_add_private
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64CB7
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C64D38
mov	eax, [ebx+34h]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aJingle_iceudp_ 
mov	[esp+2Ch+var_2C], offset aJingle_2 
call	purple_debug_info
mov	[esp+2Ch+var_28], 50h
mov	eax, ds:dword_61C980B0
mov	[esp+2Ch+var_2C], eax
call	g_type_check_class_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64D95
mov	[esp+2Ch+arg_0], ebx
mov	eax, [eax+18h]
add	esp, 28h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp], 3Ch
call	g_malloc0
mov	ebx, eax
mov	eax, [esi]
mov	[ebx], eax
mov	eax, [esi+4]
mov	[esp], eax
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esi+8]
mov	[ebx+8], eax
mov	eax, [esi+0Ch]
mov	[esp], eax
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esi+10h]
mov	[esp], eax
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esi+14h]
mov	[ebx+14h], eax
mov	eax, [esi+18h]
mov	[ebx+18h], eax
mov	eax, [esi+1Ch]
mov	[ebx+1Ch], eax
mov	eax, [esi+20h]
mov	[esp], eax
call	g_strdup
mov	[ebx+20h], eax
mov	eax, [esi+2Ch]
mov	[esp], eax
call	g_strdup
mov	[ebx+2Ch], eax
mov	eax, [esi+30h]
mov	[esp], eax
call	g_strdup
mov	[ebx+30h], eax
mov	eax, [esi+34h]
mov	[esp], eax
call	g_strdup
mov	[ebx+34h], eax
mov	eax, [esi+38h]
mov	[ebx+38h], eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64E56
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jingle_iceudp_candidate_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980A8
test	eax, eax
jnz	short loc_61C64E94
mov	[esp+2Ch+var_24], offset sub_61C64CBC
mov	[esp+2Ch+var_28], offset loc_61C64D9C
mov	[esp+2Ch+var_2C], offset aJingleiceudpca 
call	g_boxed_type_register_static
mov	ds:dword_61C980A8, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64EA4
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_iceudp_candidate_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ecx, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	edi, [esp+6Ch+arg_C]
mov	esi, [esp+6Ch+arg_10]
mov	eax, [esp+6Ch+arg_14]
mov	[esp+6Ch+var_48], eax
mov	eax, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_44], eax
mov	eax, [esp+6Ch+arg_1C]
mov	[esp+6Ch+var_40], eax
mov	eax, [esp+6Ch+arg_20]
mov	[esp+6Ch+var_3C], eax
mov	eax, [esp+6Ch+arg_24]
mov	[esp+6Ch+var_38], eax
mov	eax, [esp+6Ch+arg_28]
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+arg_2C]
mov	[esp+6Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], 3Ch
mov	[esp+6Ch+var_50], edx
mov	[esp+6Ch+var_4C], ecx
call	g_malloc0
mov	ebx, eax
mov	ecx, [esp+6Ch+var_4C]
mov	[eax], ecx
mov	edx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+4], eax
mov	[ebx+8], ebp
mov	[esp+6Ch+var_6C], edi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+6Ch+var_6C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	edx, [esp+6Ch+var_48]
mov	[ebx+14h], edx
mov	edx, [esp+6Ch+var_44]
mov	[ebx+18h], edx
mov	edx, [esp+6Ch+var_40]
mov	[ebx+1Ch], edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+20h], eax
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+2Ch], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+30h], eax
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+34h], eax
mov	dword ptr [ebx+38h], 0
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C64FD4
mov	eax, ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jingle_iceudp_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980AC
test	eax, eax
jnz	short loc_61C6501D
call	jingle_transport_get_type
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset asc_61C82160 
mov	[esp+2Ch+var_28], offset aJingleiceudp 
mov	[esp+2Ch+var_2C], eax
call	g_type_register_static
mov	ds:dword_61C980AC, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6502D
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_iceudp_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_instance_get_private
mov	[ebx+10h], eax
mov	dword ptr [eax], 0
mov	dword ptr [eax+4], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65079
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+Str], ebx
mov	eax, ds:dword_61C980B0
call	dword ptr [eax+4Ch]
mov	[esp+8Ch+var_38], eax
mov	[esp+8Ch+Str2],	offset aCandidate 
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_child
mov	esi, eax
mov	[esp+8Ch+Str2],	offset aUfrag 
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+8Ch+var_34], eax
mov	[esp+8Ch+Str2],	offset aPwd 
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+8Ch+var_30], eax
test	esi, esi
jz	loc_61C6539E
xchg	ax, ax
mov	[esp+8Ch+Str2],	offset aRelPort	
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_3C], eax
mov	[esp+8Ch+Str2],	offset aComponent 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+8Ch+Str2],	offset aFoundation 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+8Ch+Str2],	offset aGeneration 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+8Ch+Str2],	offset aId_4 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_54], eax
mov	[esp+8Ch+Str2],	offset aIp 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_50], eax
mov	[esp+8Ch+Str2],	offset aNetwork	
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_4C], eax
mov	[esp+8Ch+Str2],	offset aPort_0 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Str2],	offset aPriority_2 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_48], eax
mov	[esp+8Ch+Str2],	offset aProtocol 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+var_40], eax
mov	[esp+8Ch+Str2],	offset aType_9 
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	edx, eax
test	ebx, ebx
jz	loc_61C6538C
test	ebp, ebp
jz	loc_61C6538C
test	edi, edi
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_4C]
test	eax, eax
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_44]
test	eax, eax
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jz	loc_61C6538C
mov	ecx, [esp+8Ch+var_40]
test	ecx, ecx
jz	loc_61C6538C
test	edx, edx
jz	loc_61C6538C
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax 
mov	[esp+8Ch+var_5C], edx
call	atoi
mov	[esp+8Ch+var_48], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax 
call	atoi
mov	ecx, eax
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax 
mov	[esp+8Ch+var_58], ecx
call	atoi
mov	[esp+8Ch+var_4C], eax
mov	[esp+8Ch+Str], edi 
call	atoi
mov	edi, eax
mov	[esp+8Ch+Str], ebx 
call	atoi
mov	ebx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_60], ebx
mov	ebx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_64], ebx
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_68], edx
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_6C], edx
mov	ebx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_70], ebx
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_74], ecx
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_78], edx
mov	ebx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_7C], ebx
mov	edx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_80], edx
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+Str2],	ebp
mov	[esp+8Ch+Str], eax
call	jingle_iceudp_candidate_new
mov	[esp+8Ch+var_54], eax
mov	[esp+8Ch+Str2],	offset aRelAddr	
mov	[esp+8Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+8Ch+Str], eax
call	g_strdup
mov	ebx, [esp+8Ch+var_54]
mov	[ebx+24h], eax
mov	eax, [esp+8Ch+var_3C]
test	eax, eax
jz	loc_61C653E8
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax 
call	atoi
mov	edx, [esp+8Ch+var_54]
mov	[edx+28h], eax
mov	dword ptr [edx+38h], 1
call	jingle_iceudp_get_type
mov	[esp+8Ch+Str2],	eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+Str], eax
call	g_type_check_instance_cast
mov	ebp, eax
call	jingle_iceudp_get_type
mov	[esp+8Ch+Str2],	eax
mov	[esp+8Ch+Str], ebp
call	g_type_instance_get_private
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_54]
mov	ebx, [eax+0Ch]
mov	eax, [ebp+10h]
mov	ebp, [eax+4]
test	ebp, ebp
jz	short loc_61C6536D
xchg	ax, ax
mov	edi, [ebp+0]
mov	[esp+8Ch+Str2],	ebx 
mov	eax, [edi+0Ch]
mov	[esp+8Ch+Str], eax 
call	strcmp
test	eax, eax
jz	short loc_61C653B8
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C65350
			
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str2],	eax
mov	edx, [esp+8Ch+var_50]
mov	eax, [edx+4]
mov	[esp+8Ch+Str], eax
call	g_list_append
mov	ebx, [esp+8Ch+var_50]
mov	[ebx+4], eax
nop
			
mov	[esp+8Ch+Str], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	loc_61C650EC
mov	eax, [esp+8Ch+var_38]
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C653EF
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+Str2],	edi
mov	edx, [esp+8Ch+var_50]
mov	eax, [edx+4]
mov	[esp+8Ch+Str], eax
call	g_list_remove
mov	ebx, [esp+8Ch+var_50]
mov	[ebx+4], eax
call	jingle_iceudp_candidate_get_type
mov	[esp+8Ch+Str2],	edi
mov	[esp+8Ch+Str], eax
call	g_boxed_free
jmp	short loc_61C6536D
align 4
xor	eax, eax
jmp	loc_61C65303
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], ebx
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
mov	eax, ds:dword_61C980B0
call	dword ptr [eax+48h]
mov	[esp+5Ch+var_34], eax
cmp	ebx, 0Ah
jz	short loc_61C65448
cmp	ebx, 8
jz	short loc_61C65448
cmp	ebx, 0Dh
jz	short loc_61C65448
cmp	ebx, 2
jz	short loc_61C65448
cmp	ebx, 0Fh
jnz	loc_61C656A8
xchg	ax, ax
			
call	jingle_iceudp_get_type
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	g_type_instance_get_private
mov	[esp+5Ch+var_30], eax
mov	esi, [eax]
test	esi, esi
jz	loc_61C656A8
xor	eax, eax
lea	esi, [esi+0]
mov	edi, [esi]
cmp	dword ptr [edi+38h], 1
jz	loc_61C6569A
mov	dword ptr [edi+38h], 1
mov	[esp+5Ch+Str2],	offset aCandidate 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_new_child
mov	ebx, eax
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	[esp+5Ch+var_44], eax
mov	eax, [edi+8]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+14h]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	[esp+5Ch+var_3C], eax
mov	eax, [edi+18h]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	ebp, eax
mov	eax, [edi+1Ch]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	[esp+5Ch+var_38], eax
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aComponent 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [edi+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aFoundation 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aGeneration 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [edi+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aId_4 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [edi+10h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aIp 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aNetwork	
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+Str2],	offset aPort_0 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aPriority_2 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [edi+20h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aProtocol 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [edi+24h]
test	eax, eax
jz	short loc_61C65646
mov	[esp+5Ch+Str2],	eax 
mov	eax, [edi+10h]
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
mov	eax, [edi+28h]
jnz	short loc_61C655F7
cmp	[edi+18h], eax
jz	short loc_61C65646
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aD_0 
call	g_strdup_printf
mov	edx, [edi+24h]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Str2],	offset aRelAddr	
mov	[esp+5Ch+Str1],	ebx
mov	[esp+5Ch+var_48], eax
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aRelPort	
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+Str1],	eax
call	g_free
			
mov	eax, [edi+2Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aType_9 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	[esp+5Ch+Str1],	ebp
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str1],	eax
call	g_free
mov	eax, 1
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C6546C
dec	eax
jz	short loc_61C656C0
			
mov	eax, [esp+5Ch+var_34]
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65700
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx]
mov	ebx, [eax]
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aPwd 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_set_attrib
mov	eax, [ebx+30h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aUfrag 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_set_attrib
jmp	short loc_61C656A8
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C65850
call	jingle_iceudp_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C65741
cmp	[edx], eax
jz	short loc_61C65788
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C65788
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C65869
mov	[esp+5Ch+arg_8], offset	aJingle_is_iceu	
mov	[esp+5Ch+arg_4], offset	aJingle_iceud_0	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_iceudp_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	esi, 1
jz	short loc_61C65814
cmp	esi, 2
jz	loc_61C6583C
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], offset aProperty_0 
mov	[esp+5Ch+var_50], offset aJingleIceudp_c 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_0 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65869
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65869
mov	eax, [eax+10h]
mov	eax, [eax]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_pointer
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65869
mov	eax, [eax+10h]
mov	eax, [eax+4]
jmp	short loc_61C65825
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65869
mov	[esp+5Ch+arg_8], offset	aObjectNull_0 
jmp	loc_61C65769
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C659A0
call	jingle_iceudp_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C658A9
cmp	[edx], eax
jz	short loc_61C658F0
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C658F0
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C659B9
mov	[esp+5Ch+arg_8], offset	aJingle_is_iceu	
mov	[esp+5Ch+arg_4], offset	aJingle_iceud_1	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 10h
			
call	jingle_iceudp_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	esi, 1
jz	short loc_61C65980
cmp	esi, 2
jz	loc_61C65990
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], offset aProperty_0 
mov	[esp+5Ch+var_50], offset aJingleIceudp_0 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_0 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C659B9
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ebx, [eax+10h]
mov	[esp+5Ch+var_5C], edi
call	g_value_get_pointer
mov	[ebx], eax
jmp	short loc_61C65969
align 10h
mov	ebx, [eax+10h]
mov	[esp+5Ch+var_5C], edi
call	g_value_get_pointer
mov	[ebx+4], eax
jmp	short loc_61C65969
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C659B9
mov	[esp+5Ch+arg_8], offset	aObjectNull_0 
jmp	loc_61C658D1
			
call	__stack_chk_fail
align 10h
public jingle_iceudp_add_local_candidate
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, [edx+10h]
mov	[esp+4Ch+var_30], edx
mov	edx, [edx]
mov	[esp+4Ch+var_38], edx
test	edx, edx
jz	short loc_61C65A11
mov	ebx, [edi+0Ch]
mov	ebp, edx
mov	esi, [ebp+0]
mov	[esp+4Ch+Str2],	ebx 
mov	eax, [esi+0Ch]
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_61C65A3C
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C659F4
mov	[esp+4Ch+Str2],	edi
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str1],	edx
call	g_list_append
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65A84
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, [esi+8]
inc	ebx
call	jingle_iceudp_candidate_get_type
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	eax
call	g_boxed_free
mov	edx, [esp+4Ch+var_34]
mov	esi, [edx+10h]
mov	[esp+4Ch+Str2],	ebp
mov	eax, [esi]
mov	[esp+4Ch+Str1],	eax
call	g_list_delete_link
mov	[esi], eax
mov	[edi+8], ebx
mov	edx, [esp+4Ch+var_34]
mov	ebx, [edx+10h]
mov	[esp+4Ch+Str2],	edi
mov	eax, [ebx]
mov	[esp+4Ch+Str1],	eax
call	g_list_append
mov	[ebx], eax
jmp	short loc_61C65A27
call	__stack_chk_fail
align 4
public jingle_iceudp_get_remote_candidates
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65ABD
mov	eax, [eax+10h]
mov	eax, [eax+4]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_list_copy
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_peek_parent
mov	ds:dword_61C980BC, eax
mov	dword ptr [ebx+18h], offset sub_61C65BE4
mov	dword ptr [ebx+0Ch], offset sub_61C66390
mov	dword ptr [ebx+10h], offset sub_61C66228
mov	dword ptr [ebx+48h], offset sub_61C660A4
mov	dword ptr [ebx+4Ch], offset sub_61C65ED8
mov	dword ptr [ebx+44h], offset aUrnXmppJingl_3 
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], offset aTheLocalCand_0 
mov	[esp+2Ch+var_28], offset aLocalCandida_1 
mov	[esp+2Ch+var_2C], offset aLocalCandida_2 
call	g_param_spec_pointer
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	g_object_class_install_property
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], offset aTheRemoteCan_0 
mov	[esp+2Ch+var_28], offset aRemoteCandid_1 
mov	[esp+2Ch+var_2C], offset aRemoteCandid_2 
call	g_param_spec_pointer
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	g_object_class_install_property
mov	[esp+2Ch+var_28], 8
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_add_private
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65B9F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65BDE
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aJingle_rawudp_ 
mov	[esp+2Ch+var_2C], offset aJingle_3 
call	purple_debug_info
mov	[esp+2Ch+var_28], 50h
mov	eax, ds:dword_61C980BC
mov	[esp+2Ch+var_2C], eax
call	g_type_check_class_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65C39
mov	[esp+2Ch+arg_0], ebx
mov	eax, [eax+18h]
add	esp, 28h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp], 18h
call	g_malloc0
mov	ebx, eax
mov	eax, [esi]
mov	[ebx], eax
mov	eax, [esi+4]
mov	[ebx+4], eax
mov	eax, [esi+8]
mov	[esp], eax
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esi+0Ch]
mov	[esp], eax
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esi+10h]
mov	[ebx+10h], eax
mov	eax, [esi+14h]
mov	[ebx+14h], eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65CA8
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public jingle_rawudp_candidate_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980B4
test	eax, eax
jnz	short loc_61C65CE8
mov	[esp+2Ch+var_24], offset sub_61C65BA4
mov	[esp+2Ch+var_28], offset loc_61C65C40
mov	[esp+2Ch+var_2C], offset aJinglerawudpca 
call	g_boxed_type_register_static
mov	ds:dword_61C980B4, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65CF8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_rawudp_candidate_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	ecx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	esi, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 18h
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_30], ecx
call	g_malloc0
mov	ebx, eax
mov	ecx, [esp+4Ch+var_30]
mov	[eax], ecx
mov	edx, [esp+4Ch+var_34]
mov	[eax+4], edx
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+8], eax
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[ebx+10h], esi
mov	dword ptr [ebx+14h], 0
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65D7F
mov	eax, ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public jingle_rawudp_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980B8
test	eax, eax
jnz	short loc_61C65DC5
call	jingle_transport_get_type
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset asc_61C82380 
mov	[esp+2Ch+var_28], offset aJinglerawudp 
mov	[esp+2Ch+var_2C], eax
call	g_type_register_static
mov	ds:dword_61C980B8, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C65DD5
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_rawudp_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_instance_get_private
mov	[ebx+10h], eax
mov	dword ptr [eax], 0
mov	dword ptr [eax+4], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65E21
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	jingle_rawudp_get_type
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	ebx
call	g_type_instance_get_private
mov	edi, eax
mov	eax, [esp+4Ch+var_30]
mov	esi, [eax+8]
mov	eax, [ebx+10h]
mov	ebx, [eax+4]
test	ebx, ebx
jz	short loc_61C65E80
mov	ebp, [ebx]
mov	[esp+4Ch+Str2],	esi 
mov	eax, [ebp+8]
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_61C65EAC
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C65E64
			
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Str2],	eax
mov	eax, [edi+4]
mov	[esp+4Ch+Str1],	eax
call	g_list_append
mov	[edi+4], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C65ED1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+Str2],	ebp
mov	eax, [edi+4]
mov	[esp+4Ch+Str1],	eax
call	g_list_remove
mov	[edi+4], eax
call	jingle_rawudp_candidate_get_type
mov	[esp+4Ch+Str2],	ebp
mov	[esp+4Ch+Str1],	eax
call	g_boxed_free
jmp	short loc_61C65E80
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+Str], ebx
mov	eax, ds:dword_61C980BC
call	dword ptr [eax+4Ch]
mov	[esp+6Ch+var_34], eax
call	jingle_rawudp_get_type
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	g_type_instance_get_private
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_68], offset aCandidate_0 
mov	[esp+6Ch+Str], ebx
call	xmlnode_get_child
mov	ebp, eax
mov	[esp+6Ch+var_38], 0
test	eax, eax
jz	loc_61C6603D
mov	[esp+6Ch+var_68], offset aId_5 
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+6Ch+var_68], offset aGeneration_0 
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+var_68], offset aComponent_0 
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+6Ch+var_68], offset aIp_0 
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_attrib
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_68], offset aPort_1 
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_attrib
test	ebx, ebx
jz	short loc_61C66011
test	esi, esi
jz	short loc_61C66011
test	edi, edi
jz	short loc_61C66011
mov	edx, [esp+6Ch+var_3C]
test	edx, edx
jz	short loc_61C66011
test	eax, eax
jz	short loc_61C66011
mov	[esp+6Ch+Str], eax 
call	atoi
mov	[esp+6Ch+Str], edi 
mov	[esp+6Ch+var_40], eax
call	atoi
mov	edi, eax
mov	[esp+6Ch+Str], esi 
call	atoi
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_5C], edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Str], ebx
call	jingle_rawudp_candidate_new
mov	[esp+6Ch+var_38], eax
mov	dword ptr [eax+14h], 1
call	jingle_rawudp_get_type
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	g_type_check_instance_cast
mov	edx, [esp+6Ch+var_38]
call	sub_61C65E28
			
mov	[esp+6Ch+Str], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jnz	loc_61C65F38
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jz	short loc_61C6603D
mov	edx, [esp+6Ch+var_30]
mov	eax, [edx+4]
mov	[esp+6Ch+Str], eax
call	g_list_length
dec	eax
jz	short loc_61C66058
			
mov	eax, [esp+6Ch+var_34]
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6609E
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	jingle_rawudp_candidate_get_type
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Str], eax
call	g_boxed_copy
mov	ebx, eax
mov	dword ptr [eax+4], 2
inc	dword ptr [eax+10h]
mov	dword ptr [eax+14h], 1
call	jingle_rawudp_get_type
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	g_type_check_instance_cast
mov	edx, ebx
call	sub_61C65E28
jmp	short loc_61C6603D
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_44], ebx
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
mov	eax, ds:dword_61C980BC
call	dword ptr [eax+48h]
mov	[esp+4Ch+var_30], eax
cmp	ebx, 0Ah
jz	short loc_61C66104
cmp	ebx, 0Dh
jz	short loc_61C66104
cmp	ebx, 8
jz	short loc_61C66104
			
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C66220
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	jingle_rawudp_get_type
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_type_instance_get_private
mov	ebp, [eax]
test	ebp, ebp
jz	short loc_61C660E8
nop
mov	ebx, [ebp+0]
cmp	dword ptr [ebx+14h], 1
jz	loc_61C66210
mov	dword ptr [ebx+14h], 1
mov	[esp+4Ch+var_48], offset aCandidate_0 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	eax, [ebx]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aD_1 
call	g_strdup_printf
mov	edi, eax
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aD_1 
call	g_strdup_printf
mov	ecx, eax
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aD_1 
mov	[esp+4Ch+var_34], ecx
call	g_strdup_printf
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aGeneration_0 
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_38], eax
call	xmlnode_set_attrib
mov	ecx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], offset aComponent_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ecx, [ebx+8]
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], offset aId_5 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ecx, [ebx+0Ch]
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], offset aIp_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aPort_1 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	loc_61C6611C
jmp	loc_61C660E8
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C66370
call	jingle_rawudp_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C66261
cmp	[edx], eax
jz	short loc_61C662A8
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C662A8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C66389
mov	[esp+5Ch+arg_8], offset	aJingle_is_rawu	
mov	[esp+5Ch+arg_4], offset	aJingle_rawud_0	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_rawudp_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	esi, 1
jz	short loc_61C66334
cmp	esi, 2
jz	loc_61C6635C
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], offset aProperty_1 
mov	[esp+5Ch+var_50], offset aJingleRawudp_c 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_1 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C66389
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66389
mov	eax, [eax+10h]
mov	eax, [eax]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_pointer
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66389
mov	eax, [eax+10h]
mov	eax, [eax+4]
jmp	short loc_61C66345
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66389
mov	[esp+5Ch+arg_8], offset	aObjectNull_1 
jmp	loc_61C66289
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C664C0
call	jingle_rawudp_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C663C9
cmp	[edx], eax
jz	short loc_61C66410
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C66410
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C664D9
mov	[esp+5Ch+arg_8], offset	aJingle_is_rawu	
mov	[esp+5Ch+arg_4], offset	aJingle_rawud_1	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 10h
			
call	jingle_rawudp_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	esi, 1
jz	short loc_61C664A0
cmp	esi, 2
jz	loc_61C664B0
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], offset aProperty_1 
mov	[esp+5Ch+var_50], offset aJingleRawudp_0 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_1 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C664D9
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ebx, [eax+10h]
mov	[esp+5Ch+var_5C], edi
call	g_value_get_pointer
mov	[ebx], eax
jmp	short loc_61C66489
align 10h
mov	ebx, [eax+10h]
mov	[esp+5Ch+var_5C], edi
call	g_value_get_pointer
mov	[ebx+4], eax
jmp	short loc_61C66489
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C664D9
mov	[esp+5Ch+arg_8], offset	aObjectNull_1 
jmp	loc_61C663F1
			
call	__stack_chk_fail
align 10h
public jingle_rawudp_add_local_candidate
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, [edx+10h]
mov	[esp+4Ch+var_30], edx
mov	edx, [edx]
mov	[esp+4Ch+var_38], edx
test	edx, edx
jz	short loc_61C66531
mov	ebx, [edi+8]
mov	ebp, edx
mov	esi, [ebp+0]
mov	[esp+4Ch+Str2],	ebx 
mov	eax, [esi+8]
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	short loc_61C6655C
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C66514
mov	[esp+4Ch+Str2],	edi
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str1],	edx
call	g_list_append
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C665A2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, [esi]
inc	ebx
call	jingle_rawudp_candidate_get_type
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	eax
call	g_boxed_free
mov	edx, [esp+4Ch+var_34]
mov	esi, [edx+10h]
mov	[esp+4Ch+Str2],	ebp
mov	eax, [esi]
mov	[esp+4Ch+Str1],	eax
call	g_list_delete_link
mov	[esi], eax
mov	[edi], ebx
mov	edx, [esp+4Ch+var_34]
mov	ebx, [edx+10h]
mov	[esp+4Ch+Str2],	edi
mov	eax, [ebx]
mov	[esp+4Ch+Str1],	eax
call	g_list_append
mov	[ebx], eax
jmp	short loc_61C66547
call	__stack_chk_fail
align 4
public jingle_rawudp_get_remote_candidates
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C665D9
mov	eax, [eax+10h]
mov	eax, [eax+4]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_list_copy
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_class_peek_parent
mov	ds:dword_61C980C4, eax
mov	dword ptr [ebx+18h], offset loc_61C66CEC
mov	dword ptr [ebx+0Ch], offset sub_61C66AE8
mov	dword ptr [ebx+10h], offset sub_61C668C8
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheUniqueSessi 
mov	[esp+3Ch+var_38], offset aSessionId 
mov	[esp+3Ch+var_3C], offset aSid_2	
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_30], 0Bh
mov	[esp+3Ch+var_34], offset aTheJabberStrea 
mov	[esp+3Ch+var_38], offset aJabberstream 
mov	[esp+3Ch+var_3C], offset aJs 
call	g_param_spec_pointer
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheJidOfTheRem 
mov	[esp+3Ch+var_38], offset aRemoteJid 
mov	[esp+3Ch+var_3C], offset aRemoteJid_0 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheJidOfTheLoc 
mov	[esp+3Ch+var_38], offset aLocalJid 
mov	[esp+3Ch+var_3C], offset aLocalJid_0 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aWhetherOrNotTh 
mov	[esp+3Ch+var_38], offset aIsInitiator 
mov	[esp+3Ch+var_3C], offset aIsInitiator_0	
call	g_param_spec_boolean
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 5
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheStateOfTheS 
mov	[esp+3Ch+var_38], offset aState	
mov	[esp+3Ch+var_3C], offset aState_0 
call	g_param_spec_boolean
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 6
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_30], 1
mov	[esp+3Ch+var_34], offset aTheActiveConte 
mov	[esp+3Ch+var_38], offset aContents 
mov	[esp+3Ch+var_3C], offset aContents_0 
call	g_param_spec_pointer
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_30], 1
mov	[esp+3Ch+var_34], offset aThePendingCont 
mov	[esp+3Ch+var_38], offset aPendingContent 
mov	[esp+3Ch+var_3C], offset aPendingConte_0 
call	g_param_spec_pointer
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_38], 20h
mov	[esp+3Ch+var_3C], ebx
call	g_type_class_add_private
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6681E
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jingle_session_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980C0
test	eax, eax
jnz	short loc_61C66864
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aD_4 
mov	[esp+2Ch+var_28], offset aJinglesession	
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_61C980C0, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66874
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_session_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_instance_get_private
mov	edx, eax
mov	[ebx+0Ch], eax
mov	ecx, 20h
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C668C3
add	esp, 24h
pop	ebx
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	esi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C66AC8
call	jingle_session_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C66901
cmp	[edx], eax
jz	short loc_61C66948
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C66948
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C66AE1
mov	[esp+5Ch+arg_8], offset	aJingle_is_se_0	
mov	[esp+5Ch+arg_4], offset	aJingle_session	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_session_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_cast
cmp	edi, 8		
jbe	short loc_61C669D0
			
mov	eax, [ebx]	
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], edi
mov	[esp+5Ch+var_4C], offset aProperty_2 
mov	[esp+5Ch+var_50], offset aJingleSession_ 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_2 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C66AE1
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_61C82690[edi*4] 
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+1Ch]
			
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_pointer
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+18h]
jmp	short loc_61C669EE
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+14h]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_boolean
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+10h]
jmp	short loc_61C66A32
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+0Ch]
			
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_string
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+8]
jmp	short loc_61C66A72
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax+4]
jmp	loc_61C669EE
align 4
			
mov	edx, [esp+5Ch+var_20] 
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66AE1
mov	eax, [eax+0Ch]
mov	eax, [eax]
jmp	short loc_61C66A72
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66AE1
mov	[esp+5Ch+arg_8], offset	aObjectNull_2 
jmp	loc_61C66929
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	esi, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C66CCC
call	jingle_session_get_type
mov	edx, [ebx]
test	edx, edx
jz	short loc_61C66B21
cmp	[edx], eax
jz	short loc_61C66B68
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C66B68
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C66CE5
mov	[esp+6Ch+arg_8], offset	aJingle_is_se_0	
mov	[esp+6Ch+arg_4], offset	aJingle_sessi_0	
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	jingle_session_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_type_check_instance_cast
cmp	edi, 8		
jbe	short loc_61C66BF0
			
mov	eax, [ebx]	
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	ebx, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	[esp+6Ch+var_4C], ebx
mov	[esp+6Ch+var_50], eax
mov	eax, [ebp+4]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], offset aProperty_2 
mov	[esp+6Ch+var_60], offset aJingleSessio_0 
mov	[esp+6Ch+var_64], offset aSInvalidSIdU_2 
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], 0
call	g_log
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C66CE5
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_61C826CC[edi*4] 
align 4
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], esi
call	g_value_get_pointer
mov	[ebx+1Ch], eax
jmp	short loc_61C66BD8
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], esi
call	g_value_get_pointer
mov	[ebx+18h], eax
jmp	short loc_61C66BD8
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], esi
call	g_value_get_boolean
mov	[ebx+14h], eax
jmp	short loc_61C66BD8
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], esi
call	g_value_get_boolean
mov	[ebx+10h], eax
jmp	short loc_61C66BD8
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+0Ch]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], esi
call	g_value_dup_string
mov	[ebx+0Ch], eax
jmp	loc_61C66BD8
align 4
			
mov	edx, [eax+0Ch]	
mov	edx, [edx+8]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], esi
call	g_value_dup_string
mov	[ebx+8], eax
jmp	loc_61C66BD8
align 10h
			
mov	ebx, [eax+0Ch]	
mov	[esp+6Ch+var_6C], esi
call	g_value_get_pointer
mov	[ebx+4], eax
jmp	loc_61C66BD8
align 4
			
mov	edx, [eax+0Ch]	
mov	edx, [edx]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	ebx, [eax+0Ch]
mov	[esp+6Ch+var_6C], esi
call	g_value_dup_string
mov	[ebx], eax
jmp	loc_61C66BD8
align 4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C66CE5
mov	[esp+6Ch+arg_8], offset	aObjectNull_2 
jmp	loc_61C66B49
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+6Ch+var_3C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_50], eax
xor	eax, eax
call	jingle_session_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	g_type_instance_get_private
mov	ebx, eax
mov	[esp+6Ch+var_68], offset aJingle_sessi_1 
mov	[esp+6Ch+var_6C], offset aJingle_4 
call	purple_debug_info
mov	eax, [ebx]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx+4]
mov	eax, [eax+134h]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_remove
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_61C66D88
lea	esi, [esi+0]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_object_unref
mov	eax, [ebx+18h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], eax
call	g_list_delete_link
mov	[ebx+18h], eax
test	eax, eax
jnz	short loc_61C66D68
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_61C66DB0
nop
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_object_unref
mov	eax, [ebx+1Ch]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], eax
call	g_list_delete_link
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_61C66D90
mov	eax, [esp+6Ch+var_50]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C66DCF
mov	[esp+6Ch+var_3C], esi
mov	eax, ds:dword_61C980C4
mov	eax, [eax+18h]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
call	__stack_chk_fail
public jingle_session_create
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	edi, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_C]
mov	edx, [esp+6Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_30], edx
call	jingle_session_get_type
mov	[esp+6Ch+var_40], 0
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_48], offset aIs_initiator 
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], offset aRemoteJid_0 
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], offset aLocalJid_0 
mov	[esp+6Ch+var_5C], esi
mov	[esp+6Ch+var_60], offset aSid_2	
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aJs 
mov	[esp+6Ch+var_6C], eax
call	g_object_new
mov	edi, eax
mov	eax, [ebx+134h]
test	eax, eax
jz	short loc_61C66EB0
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], offset aInsertingSessi 
mov	[esp+6Ch+var_6C], offset aJingle_4 
call	purple_debug_info
mov	[esp+6Ch+var_6C], esi
call	g_strdup
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx+134h]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_insert
mov	eax, edi
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66EF3
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+6Ch+var_68], offset aCreatingHash_0 
mov	[esp+6Ch+var_6C], offset aJingle_4 
call	purple_debug_info
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset g_free
mov	[esp+6Ch+var_68], offset g_str_equal
mov	[esp+6Ch+var_6C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+134h], eax
jmp	loc_61C66E62
call	__stack_chk_fail
public jingle_session_get_js
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aJs 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66F3E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_get_sid
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSid_2	
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66F8A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_session_get_local_jid
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aLocalJid_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C66FD6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_get_remote_jid
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aRemoteJid_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67022
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+34h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], 2Fh
mov	[esp], esi
call	strchr
mov	ebx, eax
mov	[esp], edi
call	jingle_session_get_remote_jid
mov	edi, eax
mov	[esp], eax
test	ebx, ebx
jz	short loc_61C670AC
call	g_strdup
mov	ebx, eax
mov	[esp], edi
call	g_free
mov	[esp+4], ebx
mov	[esp], esi
call	g_str_equal
mov	[esp], ebx
test	eax, eax
jnz	short loc_61C670A0
call	g_free
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C670B5
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	g_free
mov	eax, 1
jmp	short loc_61C6708D
call	jabber_get_bare_jid
mov	ebx, eax
jmp	short loc_61C6706B
call	__stack_chk_fail
align 4
public jingle_session_is_initiator
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aIsInitiator_0	
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67102
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_get_state
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aState_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6714E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_get_contents
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aContents_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6719A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jingle_session_get_pending_contents
			
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aPendingConte_0 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_object_get
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C671E6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_find_by_sid
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+134h]
test	eax, eax
jz	short loc_61C67260
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aFind_by_idS 
mov	[esp+2Ch+var_2C], offset aJingle_4 
call	purple_debug_info
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aLookupP 
mov	[esp+2Ch+var_2C], offset aJingle_4 
call	purple_debug_info
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67264
add	esp, 24h
pop	ebx
pop	esi
retn
xor	ebx, ebx
jmp	short loc_61C6721C
call	__stack_chk_fail
align 4
public jingle_session_find_by_jid
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+134h]
test	eax, eax
jz	short loc_61C672B0
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset loc_61C67028
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_find
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C672B4
add	esp, 2Ch
retn
xor	eax, eax
jmp	short loc_61C672A0
call	__stack_chk_fail
align 4
public jingle_session_create_ack
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_session_get_js
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_parent
mov	esi, eax
mov	[esp+2Ch+var_28], offset aId_6 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_attrib
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_id
mov	[esp+2Ch+var_28], offset aTo_10	
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aFrom_2 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aFrom_2 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_attrib
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_10	
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67376
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jingle_session_to_xml
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	esi, 9
jz	short loc_61C673D9
cmp	esi, 0Bh
jz	short loc_61C673D9
lea	edx, [esi-1]
mov	[esp+2Ch+var_2C], eax
cmp	edx, 1
jbe	short loc_61C673F0
cmp	esi, 5
jz	short loc_61C673F0
call	jingle_session_get_contents
mov	ebx, eax
test	ebx, ebx
jz	short loc_61C673D9
nop
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], edi
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	jingle_content_to_xml
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C673C0
			
mov	eax, edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C673F9
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
call	jingle_session_get_pending_contents
mov	ebx, eax
jmp	short loc_61C673BB
call	__stack_chk_fail
align 10h
public jingle_session_to_packet
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_js
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_local_jid
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_remote_jid
mov	ebp, eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aFrom_2 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTo_10	
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	[esp+4Ch+var_48], offset aJingle_4 
mov	eax, [edi+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_local_jid
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_remote_jid
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_get_sid
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_48], offset aUrnXmppJingl_4 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_namespace
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	jingle_get_action_name
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aAction_1 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_is_initiator
test	eax, eax
jnz	loc_61C67590
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aInitiator 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aResponder 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aSid_2	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	jingle_session_to_xml
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C675C1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aInitiator 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aResponder 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
jmp	loc_61C6752D
call	__stack_chk_fail
align 4
public jingle_session_handle_action
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_2C], eax
cmp	esi, 2
jz	short loc_61C67614
cmp	esi, 5
jz	short loc_61C67614
call	jingle_session_get_contents
mov	ebx, eax
test	ebx, ebx
jnz	short loc_61C67620
xchg	ax, ax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6763B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
call	jingle_session_get_pending_contents
mov	ebx, eax
jmp	short loc_61C67635
align 10h
			
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], edi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jingle_content_handle_action
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C67620
jmp	short loc_61C67600
call	__stack_chk_fail
public jingle_session_find_content
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	short loc_61C676EC
mov	eax, [eax+0Ch]
mov	ebx, [eax+18h]
test	ebx, ebx
jz	short loc_61C676EC
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+4Ch+Str1],	esi
call	jingle_content_get_name
mov	ebp, eax
mov	[esp+4Ch+Str2],	eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+Str1],	edx
call	g_str_equal
mov	edi, eax
mov	[esp+4Ch+Str1],	ebp
call	g_free
mov	edx, [esp+4Ch+var_34]
test	edx, edx
jz	short loc_61C676E2
mov	[esp+4Ch+Str1],	esi
call	jingle_content_get_creator
mov	edx, eax
test	edi, edi
jz	short loc_61C676DA
mov	[esp+4Ch+Str2],	eax 
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax 
mov	[esp+4Ch+var_38], edx
call	strcmp
test	eax, eax
setz	al
movzx	eax, al
mov	edi, eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str1],	edx
call	g_free
dec	edi
jz	short loc_61C676EE
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C6767C
			
xor	esi, esi
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67704
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jingle_session_find_pending_content
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	short loc_61C677B8
mov	eax, [eax+0Ch]
mov	ebx, [eax+1Ch]
test	ebx, ebx
jz	short loc_61C677B8
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+4Ch+Str1],	esi
call	jingle_content_get_name
mov	ebp, eax
mov	[esp+4Ch+Str2],	eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+Str1],	edx
call	g_str_equal
mov	edi, eax
mov	[esp+4Ch+Str1],	ebp
call	g_free
mov	ebp, [esp+4Ch+var_34]
test	ebp, ebp
jz	short loc_61C677AE
mov	[esp+4Ch+Str1],	esi
call	jingle_content_get_creator
mov	edx, eax
test	edi, edi
jz	short loc_61C677A6
mov	[esp+4Ch+Str2],	eax 
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str1],	eax 
mov	[esp+4Ch+var_38], edx
call	strcmp
test	eax, eax
setz	al
movzx	eax, al
mov	edi, eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str1],	edx
call	g_free
dec	edi
jz	short loc_61C677BA
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C67748
			
xor	esi, esi
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C677D0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jingle_session_add_content
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [edi+0Ch]
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67825
mov	[esp+2Ch+arg_4], edi
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jingle_content_set_session
call	__stack_chk_fail
align 4
public jingle_session_remove_content
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jingle_session_find_content
mov	ebx, eax
test	eax, eax
jz	short loc_61C67890
mov	esi, [esi+0Ch]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+18h]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	[esi+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C678A2
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_object_unref
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C678A2
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public jingle_session_add_pending_content
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [edi+0Ch]
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+1Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C678F5
mov	[esp+2Ch+arg_4], edi
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jingle_content_set_session
call	__stack_chk_fail
align 4
public jingle_session_remove_pending_content
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	jingle_session_find_pending_content
mov	ebx, eax
test	eax, eax
jz	short loc_61C67960
mov	esi, [esi+0Ch]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	[esi+1Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67972
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_object_unref
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67972
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public jingle_session_accept_content
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebx
call	jingle_session_find_pending_content
mov	esi, eax
test	eax, eax
jz	short loc_61C679E4
mov	[esp+3Ch+var_3C], eax
call	g_object_ref
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebx
call	jingle_session_remove_pending_content
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C679F8
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jingle_session_add_content
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C679F8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public jingle_session_accept_session
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0Ch]
mov	dword ptr [eax+14h], 1
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67A2C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jingle_session_terminate_packet
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0Bh
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_session_to_packet
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aJingle_4 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
test	esi, esi
jz	short loc_61C67A91
mov	[esp+2Ch+var_28], offset aReason_0 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67AA5
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jingle_session_redirect_packet
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aAlternativeSes 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_session_terminate_packet
mov	ebx, eax
test	esi, esi
jz	short loc_61C67B15
mov	[esp+2Ch+var_28], offset aJingleReasonAl 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C67B15
mov	[esp+2Ch+var_28], offset aSid_2	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67B29
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public jingle_transport_to_xml_internal
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aTransport_1 
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_new_child
mov	edx, [ebx]
mov	edx, [edx+44h]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	xmlnode_set_namespace
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67B81
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_peek_parent
mov	ds:dword_61C980CC, eax
mov	dword ptr [ebx+18h], offset sub_61C67BF4
mov	dword ptr [ebx+0Ch], offset sub_61C67DE4
mov	dword ptr [ebx+10h], offset sub_61C67CDC
mov	dword ptr [ebx+48h], offset jingle_transport_to_xml_internal
mov	dword ptr [ebx+4Ch], offset jingle_transport_parse_internal
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_add_private
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67BEC
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aJingle_transpo 
mov	[esp+2Ch+var_2C], offset aJingle_5 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67C39
mov	[esp+2Ch+arg_0], ebx
mov	eax, ds:dword_61C980CC
mov	eax, [eax+18h]
add	esp, 28h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 10h
public jingle_transport_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C980C8
test	eax, eax
jnz	short loc_61C67C80
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aP 
mov	[esp+2Ch+var_28], offset aJingletranspor 
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_61C980C8, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67C90
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	jingle_transport_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_instance_get_private
mov	[ebx+0Ch], eax
mov	dword ptr [eax], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67CD6
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C67DC4
call	jingle_transport_get_type
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C67D13
mov	edx, [esi]
cmp	edx, eax
jz	short loc_61C67D5A
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C67D58
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C67DDD
mov	[esp+5Ch+arg_8], offset	aJingle_is_tran	
mov	[esp+5Ch+arg_4], offset	aJingle_trans_0	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
mov	edx, [esi]
mov	[esp+5Ch+var_5C], edx
call	g_type_name
mov	ebx, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], offset aProperty_3 
mov	[esp+5Ch+var_50], offset aJingleTranspor 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_3 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67DDD
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67DDD
mov	[esp+5Ch+arg_8], offset	aObjectNull_3 
jmp	loc_61C67D3B
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_61C67ECC
call	jingle_transport_get_type
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C67E1B
mov	edx, [esi]
cmp	edx, eax
jz	short loc_61C67E62
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C67E60
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C67EE5
mov	[esp+5Ch+arg_8], offset	aJingle_is_tran	
mov	[esp+5Ch+arg_4], offset	aJingle_trans_1	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 10h
mov	edx, [esi]
mov	[esp+5Ch+var_5C], edx
call	g_type_name
mov	ebx, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], ebx
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], offset aProperty_3 
mov	[esp+5Ch+var_50], offset aJingleTransp_0 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_3 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67EE5
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C67EE5
mov	[esp+5Ch+arg_8], offset	aObjectNull_3 
jmp	loc_61C67E43
			
call	__stack_chk_fail
align 4
public jingle_transport_create
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jingle_get_type
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_object_new
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67F26
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jingle_transport_parse_internal
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_namespace
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67F5B
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	short jingle_transport_create
call	__stack_chk_fail
public jingle_transport_get_transport_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
mov	eax, [eax+44h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C67F87
add	esp, 1Ch
retn
call	__stack_chk_fail
public jingle_transport_parse
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_get_namespace
mov	[esp+2Ch+var_2C], eax
call	jingle_get_type
mov	ebx, eax
cmp	eax, 4
jz	short loc_61C67FF0
call	jingle_transport_get_type
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_ref
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	g_type_check_class_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68005
mov	[esp+2Ch+arg_0], esi
mov	eax, [eax+4Ch]
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 10h
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68005
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public jingle_transport_to_xml
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C680A4
call	jingle_transport_get_type
mov	esi, [ebx]
test	esi, esi
jz	short loc_61C6803D
cmp	[esi], eax
jz	short loc_61C68080
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_61C68080
mov	[esp+3Ch+var_34], offset aJingle_is_tr_0 
mov	[esp+3Ch+var_38], offset aJingle_trans_2 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C680C2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C680C2
mov	[esp+3Ch+arg_8], ebp
mov	[esp+3Ch+arg_4], edi
mov	[esp+3Ch+arg_0], ebx
mov	eax, [esi+48h]
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	[esp+3Ch+var_34], offset aTransportNull	
mov	[esp+3Ch+var_38], offset aJingle_trans_2 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_61C68069
			
call	__stack_chk_fail
align 4
public jabber_nodeprep_validate
			
push	edi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	loc_61C68168
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 3FFh
ja	short loc_61C68154
cmp	byte ptr [edx],	0
jz	short loc_61C68168
mov	eax, ds:g_utf8_skip
mov	ebx, [eax]
mov	edi, edx
jmp	short loc_61C68145
cmp	eax, 26h
jz	short loc_61C68154
cmp	eax, 27h
jz	short loc_61C68154
cmp	eax, 2Fh
jz	short loc_61C68154
cmp	eax, 3Ah
jz	short loc_61C68154
cmp	eax, 3Ch
jz	short loc_61C68154
cmp	eax, 3Eh
jz	short loc_61C68154
cmp	eax, 40h
jz	short loc_61C68154
mov	[esp+2Ch+var_2C], eax
call	g_unichar_isgraph
test	eax, eax
jz	short loc_61C68154
movzx	eax, byte ptr [edi]
movsx	eax, byte ptr [ebx+eax]
add	edi, eax
cmp	byte ptr [edi],	0
jz	short loc_61C68168
mov	[esp+2Ch+var_2C], edi
call	g_utf8_get_char
cmp	eax, 22h
jnz	short loc_61C68108
xchg	ax, ax
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6816F
add	esp, 24h
pop	ebx
pop	edi
retn
			
mov	eax, 1
jmp	short loc_61C68156
call	__stack_chk_fail
public jabber_domain_validate
			
push	edi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	loc_61C6821C
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
lea	eax, [ecx-1]
cmp	eax, 3FFh
ja	short loc_61C68208
mov	al, [edx]
cmp	al, 5Bh
jz	short loc_61C68224
test	al, al
jz	short loc_61C6821C
mov	eax, ds:g_utf8_skip
mov	ebx, [eax]
mov	edi, edx
jmp	short loc_61C681EE
align 4
lea	edx, [eax-61h]
cmp	edx, 19h
jbe	short loc_61C681E0
lea	edx, [eax-30h]
cmp	edx, 9
jbe	short loc_61C681E0
lea	edx, [eax-41h]
cmp	edx, 19h
jbe	short loc_61C681E0
cmp	eax, 2Eh
jz	short loc_61C681E0
cmp	eax, 2Dh
jnz	short loc_61C68208
xchg	ax, ax
			
movzx	eax, byte ptr [edi]
movsx	eax, byte ptr [ebx+eax]
add	edi, eax
cmp	byte ptr [edi],	0
jz	short loc_61C6821C
mov	[esp+2Ch+var_2C], edi
call	g_utf8_get_char
cmp	eax, 7Fh
jbe	short loc_61C681BC
mov	[esp+2Ch+var_2C], eax
call	g_unichar_isgraph
test	eax, eax
jnz	short loc_61C681E0
nop
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6823E
add	esp, 24h
pop	ebx
pop	edi
retn
			
mov	eax, 1
jmp	short loc_61C6820A
align 4
lea	ebx, [edx+ecx-2]
cmp	byte ptr [ebx],	5Dh
jnz	short loc_61C68208
mov	byte ptr [ebx],	0
inc	edx
mov	[esp+2Ch+var_2C], edx
call	purple_ipv6_address_is_valid
mov	byte ptr [ebx],	5Dh
jmp	short loc_61C6820A
call	__stack_chk_fail
align 4
public jabber_resourceprep_validate
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_61C682A9
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 3FFh
ja	short loc_61C682C4
cmp	byte ptr [edx],	0
jz	short loc_61C682A9
mov	eax, ds:g_utf8_skip
mov	esi, [eax]
mov	edi, edx
nop
mov	[esp+2Ch+var_2C], edi
call	g_utf8_get_char
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	g_unichar_isgraph
test	eax, eax
jnz	short loc_61C6829B
cmp	ebx, 20h
jnz	short loc_61C682C4
movzx	eax, byte ptr [edi]
movsx	eax, byte ptr [esi+eax]
add	edi, eax
cmp	byte ptr [edi],	0
jnz	short loc_61C68280
			
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C682C8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
xor	eax, eax
jmp	short loc_61C682AE
call	__stack_chk_fail
align 10h
public jabber_saslprep
			
sub	esp, 1Ch
mov	ecx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, [ecx]
test	al, al
jz	short loc_61C6830B
cmp	al, 7Eh
ja	short loc_61C68324
mov	edx, ecx
jmp	short loc_61C682F4
cmp	al, 7Eh
ja	short loc_61C68324
cmp	al, 1Fh
ja	short loc_61C68304
cmp	al, 9
jz	short loc_61C68304
cmp	al, 0Ah
jz	short loc_61C68304
cmp	al, 0Dh
jnz	short loc_61C68324
			
inc	edx
mov	al, [edx]
test	al, al
jnz	short loc_61C682F0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68336
mov	[esp+1Ch+arg_0], ecx
add	esp, 1Ch
jmp	g_strdup
align 4
			
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68336
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public jabber_id_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C6838C
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6839D
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6839D
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, eax
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_61C685D8
mov	cl, [edi]
test	cl, cl
jz	loc_61C6869D
mov	ebx, edi
xor	eax, eax
xor	esi, esi
xor	ebp, ebp
jmp	short loc_61C6840D
cmp	cl, 40h
jz	short loc_61C6841C
lea	edx, [ecx-61h]
cmp	dl, 19h
jbe	short loc_61C68416
lea	edx, [ecx-30h]
cmp	dl, 9
jbe	short loc_61C68416
lea	edx, [ecx-41h]
cmp	dl, 19h
jbe	short loc_61C68416
cmp	cl, 2Eh
jz	short loc_61C68416
cmp	cl, 2Dh
mov	cl, [ebx+1]
jz	short loc_61C68408
mov	eax, 1
nop
			
inc	ebx
test	cl, cl
jz	short loc_61C68461
			
cmp	cl, 2Fh
jnz	short loc_61C683D8
test	esi, esi
jz	short loc_61C68440
			
mov	cl, [ebx+1]
jmp	short loc_61C68408
align 4
test	esi, esi
jnz	short loc_61C68416
test	ebp, ebp
jnz	loc_61C685D8
cmp	ebx, edi
jz	loc_61C685D8
mov	cl, [ebx+1]
test	cl, cl
jz	loc_61C685D8
mov	ebp, ebx
inc	ebx
jmp	short loc_61C6840D
cmp	ebx, edi
jz	loc_61C685D8
mov	cl, [ebx+1]
test	cl, cl
jnz	loc_61C68574
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	loc_61C685D8
mov	esi, ebx
test	eax, eax
jz	loc_61C6857C
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], edi
call	g_utf8_validate
test	eax, eax
jz	loc_61C685D8
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc0
mov	ebx, eax
test	ebp, ebp
jz	loc_61C68606
mov	eax, ebp
sub	eax, edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_utf8_casefold
mov	edi, eax
test	esi, esi
jz	loc_61C6866C
inc	ebp
mov	eax, esi
sub	eax, ebp
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	g_utf8_casefold
mov	ebp, eax
cmp	byte ptr [esi+1], 0
jnz	loc_61C6864B
			
test	edi, edi
jz	short loc_61C684FC
mov	[esp+4Ch+var_44], 3
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], edi
call	g_utf8_normalize
mov	[ebx], eax
mov	[esp+4Ch+var_4C], edi
call	g_free
			
test	ebp, ebp
jz	short loc_61C68523
mov	[esp+4Ch+var_44], 3
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], ebp
call	g_utf8_normalize
mov	[ebx+4], eax
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	jabber_nodeprep_validate
test	eax, eax
jz	loc_61C685D0
mov	eax, [ebx+4]
mov	[esp+4Ch+var_4C], eax
call	jabber_domain_validate
test	eax, eax
jz	loc_61C685D0
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	jabber_resourceprep_validate
test	eax, eax
jz	short loc_61C685D0
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C686DA
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	esi, ebx
inc	ebx
jmp	loc_61C6840D
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc0
mov	ebx, eax
test	ebp, ebp
jz	short loc_61C685DF
mov	eax, ebp
sub	eax, edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_ascii_strdown
mov	[ebx], eax
test	esi, esi
jz	loc_61C68684
inc	ebp
mov	eax, esi
sub	eax, ebp
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	g_ascii_strdown
mov	[ebx+4], eax
cmp	byte ptr [esi+1], 0
jz	short loc_61C68557
inc	esi
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+8], eax
jmp	short loc_61C68557
			
mov	[esp+4Ch+var_4C], ebx
call	jabber_id_free
			
xor	ebx, ebx
jmp	loc_61C68557
test	esi, esi
jz	loc_61C686AB
mov	eax, esi
sub	eax, edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_ascii_strdown
mov	[ebx+4], eax
cmp	byte ptr [esi+1], 0
jz	loc_61C68557
jmp	short loc_61C685C2
test	esi, esi
jz	loc_61C686C3
mov	eax, esi
sub	eax, edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_utf8_casefold
mov	ebp, eax
cmp	byte ptr [esi+1], 0
jz	loc_61C684FC
mov	[esp+4Ch+var_44], 3
mov	[esp+4Ch+var_48], 0FFFFFFFFh
inc	esi
mov	[esp+4Ch+var_4C], esi
call	g_utf8_normalize
mov	[ebx+8], eax
jmp	loc_61C684FC
mov	[esp+4Ch+var_44], 3
mov	[esp+4Ch+var_48], 0FFFFFFFFh
inc	esi
mov	[esp+4Ch+var_4C], esi
call	g_utf8_normalize
mov	[ebx+8], eax
jmp	loc_61C684D6
mov	[esp+4Ch+var_48], 0FFFFFFFFh
inc	ebp
mov	[esp+4Ch+var_4C], ebp
call	g_utf8_casefold
mov	ebp, eax
jmp	loc_61C684D6
mov	[esp+4Ch+var_48], 0FFFFFFFFh
inc	ebp
mov	[esp+4Ch+var_4C], ebp
call	g_ascii_strdown
mov	[ebx+4], eax
jmp	loc_61C68557
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], edi
call	g_ascii_strdown
mov	[ebx+4], eax
jmp	loc_61C68557
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], edi
call	g_utf8_casefold
mov	ebp, eax
jmp	loc_61C684FC
call	__stack_chk_fail
align 10h
public jabber_id_equal
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_61C6875C
test	ebx, ebx
jz	short loc_61C68714
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C68728
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68765
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C68714
mov	eax, [ebx+8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_61C68716
align 4
xor	eax, eax
test	ebx, ebx
setz	al
jmp	short loc_61C68716
call	__stack_chk_fail
align 4
public jabber_id_to_bare_jid
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx+4], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C687BC
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_id_get_bare_jid
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C68814
mov	edx, [eax+4]
mov	eax, [eax]
test	eax, eax
jz	short loc_61C68834
mov	ecx, offset a@	
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], eax
call	g_strconcat
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6883D
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aJidNull 
mov	[esp+2Ch+var_28], offset aJabber_id_get_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C68801
mov	ecx, offset byte_61C82A22
mov	eax, ecx
jmp	short loc_61C687E9
call	__stack_chk_fail
align 4
public jabber_id_get_full_jid
push	esi
push	ebx
sub	esp, 34h
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C688AC
mov	edx, [eax+8]
test	edx, edx
jz	short loc_61C688D8
mov	esi, offset asc_61C82A2F 
mov	ecx, [eax+4]
mov	eax, [eax]
test	eax, eax
jz	short loc_61C688CC
mov	ebx, offset a@	
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], edx
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	g_strconcat
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C688E1
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aJidNull 
mov	[esp+3Ch+var_38], offset aJabber_id_ge_0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_61C68897
mov	ebx, offset byte_61C82A22
mov	eax, ebx
jmp	short loc_61C68877
align 4
mov	edx, offset byte_61C82A22
mov	esi, edx
jmp	short loc_61C68869
call	__stack_chk_fail
align 4
public jabber_jid_is_domain
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, [edx]
test	al, al
jnz	short loc_61C6890F
jmp	short loc_61C68928
align 4
cmp	al, 2Fh
jz	short loc_61C68913
inc	edx
mov	al, [edx]
test	al, al
jz	short loc_61C68928
cmp	al, 40h
jnz	short loc_61C68904
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6892F
add	esp, 1Ch
retn
align 4
			
mov	eax, 1
jmp	short loc_61C68915
call	__stack_chk_fail
public jabber_id_new
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6895D
xor	edx, edx
add	esp, 1Ch
jmp	sub_61C683A4
call	__stack_chk_fail
align 4
public jabber_get_bare_jid
			
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C689B0
mov	[esp+3Ch+var_3C], eax
call	jabber_id_get_bare_jid
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	jabber_id_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C689B4
add	esp, 38h
pop	ebx
retn
align 10h
xor	eax, eax
jmp	short loc_61C6899D
call	__stack_chk_fail
align 4
public jabber_get_resource
			
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C68A0C
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	jabber_id_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68A10
add	esp, 38h
pop	ebx
retn
align 4
xor	eax, eax
jmp	short loc_61C689F8
call	__stack_chk_fail
align 4
public jabber_get_domain
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C68A68
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	jabber_id_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68A6C
add	esp, 38h
pop	ebx
retn
align 4
xor	eax, eax
jmp	short loc_61C68A54
call	__stack_chk_fail
align 4
public jabber_normalize
			
push	esi
push	ebx
sub	esp, 34h
mov	edx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	loc_61C68B6E
mov	edx, [edx+1Ch]
test	edx, edx
jz	loc_61C68B6E
mov	esi, [edx+1Ch]
mov	edx, 1
call	sub_61C683A4
mov	ebx, eax
test	eax, eax
jz	loc_61C68B98
test	esi, esi
jz	loc_61C68B80
mov	eax, [eax]
test	eax, eax
jz	loc_61C68B8C
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_61C68B3C
mov	edx, [ebx+4]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	jabber_chat_find
test	eax, eax
jz	loc_61C68B80
mov	eax, [ebx+8]
mov	[esp+3Ch+var_28], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aS@SS_2 
mov	[esp+3Ch+var_38], 0C00h
mov	[esp+3Ch+var_3C], offset dword_61C980E0
call	g_snprintf
mov	[esp+3Ch+var_3C], ebx
call	jabber_id_free
mov	eax, offset dword_61C980E0
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68B9C
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	ecx, [ebx+4]
mov	edx, offset a@	
mov	[esp+3Ch+var_28], ecx
mov	[esp+3Ch+var_2C], edx
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aSSS_2	
mov	[esp+3Ch+var_38], 0C00h
mov	[esp+3Ch+var_3C], offset dword_61C980E0
call	g_snprintf
jmp	short loc_61C68B1B
			
mov	edx, 1
call	sub_61C683A4
mov	ebx, eax
test	eax, eax
jz	short loc_61C68B98
xchg	ax, ax
			
mov	ecx, [ebx+4]
mov	eax, [ebx]
test	eax, eax
jnz	short loc_61C68B3F
jmp	short loc_61C68B8F
align 4
mov	ecx, [ebx+4]
mov	edx, offset byte_61C82A22
mov	eax, edx
jmp	short loc_61C68B44
			
xor	eax, eax
jmp	short loc_61C68B28
call	__stack_chk_fail
align 4
public jabber_is_own_server
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C68C04
cmp	byte ptr [eax],	0
jz	short loc_61C68BE8
mov	[esp+2Ch+var_2C], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C68C04
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C68C1C
xor	esi, esi
mov	[esp+2Ch+var_2C], ebx
call	jabber_id_free
jmp	short loc_61C68C06
align 4
mov	[esp+2Ch+var_24], offset aStr0 
mov	[esp+2Ch+var_28], offset aJabber_is_own_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	esi, esi
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68C43
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esi+5Ch]
mov	eax, [eax+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C68BDA
xor	eax, eax
mov	esi, [ebx+8]
test	esi, esi
setz	al
mov	esi, eax
jmp	short loc_61C68BDC
call	__stack_chk_fail
public jabber_is_own_account
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_61C68D1C
cmp	byte ptr [eax],	0
jnz	short loc_61C68CA4
mov	[esp+3Ch+var_34], offset aStr0 
mov	[esp+3Ch+var_38], offset aJabber_is_ow_0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C68D37
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_3C], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C68D28
mov	eax, [esi+5Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C68CE0
xor	eax, eax
			
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	jabber_id_free
mov	eax, [esp+3Ch+var_20]
jmp	short loc_61C68C8C
align 10h
mov	eax, [esi+5Ch]
mov	eax, [eax+4]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	g_str_equal
test	eax, eax
jz	short loc_61C68CC9
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C68D30
mov	edx, [esi+5Ch]
mov	edx, [edx+8]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	g_str_equal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_61C68CCB
mov	eax, 1
jmp	loc_61C68C8C
align 4
xor	eax, eax
jmp	loc_61C68C8C
align 10h
mov	eax, 1
jmp	short loc_61C68CCB
call	__stack_chk_fail
public jabber_buddy_state_get_name
			
sub	esp, 2Ch
mov	ecx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C82C0C
xor	edx, edx
lea	esi, [esi+0]
cmp	[eax], ecx
jz	short loc_61C68D8C
inc	edx
add	eax, 10h
cmp	edx, 7
jnz	short loc_61C68D58
mov	[esp+2Ch+var_28], offset aUnknown_0 
mov	[esp+2Ch+var_2C], offset aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68DA7
add	esp, 2Ch
retn
align 4
shl	edx, 4
mov	eax, ds:off_61C82C08[edx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_9 
call	libintl_dgettext
jmp	short loc_61C68D79
call	__stack_chk_fail
public jabber_buddy_status_id_get_state
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_61C68DE7
mov	ebx, offset off_61C82C00
xor	esi, esi
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_str_equal
test	eax, eax
jnz	short loc_61C68E00
inc	esi
add	ebx, 10h
cmp	esi, 7
jnz	short loc_61C68DCC
mov	eax, 0FFFFFFFEh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68E0B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
shl	esi, 4
mov	eax, ds:dword_61C82C0C[esi]
jmp	short loc_61C68DEC
call	__stack_chk_fail
public jabber_buddy_show_get_state
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_61C68E8C
mov	ebx, offset dword_61C82C04
xor	esi, esi
mov	eax, [ebx]
test	eax, eax
jz	short loc_61C68E46
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_str_equal
test	eax, eax
jnz	short loc_61C68E80
inc	esi
add	ebx, 10h
cmp	esi, 7
jnz	short loc_61C68E30
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aInvalidValueOf 
mov	[esp+2Ch+var_2C], offset aJabber_17 
call	purple_debug_warning
mov	eax, 0FFFFFFFEh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68EAF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
shl	esi, 4
mov	eax, ds:dword_61C82C0C[esi]
jmp	short loc_61C68E6C
align 4
mov	[esp+2Ch+var_24], offset aIdNull 
mov	[esp+2Ch+var_28], offset aJabber_buddy_s 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFEh
jmp	short loc_61C68E6C
call	__stack_chk_fail
public jabber_buddy_state_get_show
sub	esp, 1Ch
mov	ecx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C82C0C
xor	edx, edx
lea	esi, [esi+0]
cmp	[eax], ecx
jz	short loc_61C68EF0
inc	edx
add	eax, 10h
cmp	edx, 7
jnz	short loc_61C68ED0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68EFB
add	esp, 1Ch
retn
align 10h
shl	edx, 4
mov	eax, ds:dword_61C82C04[edx]
jmp	short loc_61C68EDF
call	__stack_chk_fail
public jabber_buddy_state_get_status_id
			
sub	esp, 1Ch
mov	ecx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_61C82C0C
xor	edx, edx
lea	esi, [esi+0]
cmp	[eax], ecx
jz	short loc_61C68F3C
inc	edx
add	eax, 10h
cmp	edx, 7
jnz	short loc_61C68F1C
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C68F47
add	esp, 1Ch
retn
align 4
shl	edx, 4
mov	eax, ds:off_61C82C00[edx]
jmp	short loc_61C68F2B
call	__stack_chk_fail
public jabber_calculate_data_hash
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	purple_cipher_context_new_by_name
mov	ebx, eax
test	eax, eax
jz	loc_61C69048
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_append
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset dword_61C98CE0
mov	[esp+4Ch+var_48], 81h
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest_to_str
test	eax, eax
jz	short loc_61C68FE4
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_destroy
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C69072
mov	[esp+4Ch+arg_0], offset	dword_61C98CE0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aFailedToGetDig 
mov	[esp+4Ch+var_4C], offset aJabber_17 
call	purple_debug_error
mov	[esp+4Ch+var_38], offset aJabber_calcula 
mov	[esp+4Ch+var_3C], 31Bh
mov	[esp+4Ch+var_40], offset aJutil_c 
mov	[esp+4Ch+var_44], offset aFileSLineDSS_3 
mov	[esp+4Ch+var_48], 8
mov	[esp+4Ch+var_4C], 0
call	g_log
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C69072
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aCouldNotFindSC 
mov	[esp+4Ch+var_4C], offset aJabber_17 
call	purple_debug_error
mov	[esp+4Ch+var_38], offset aJabber_calcula 
mov	[esp+4Ch+var_3C], 312h
jmp	short loc_61C6900C
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C690B5
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	[esp+4Ch+var_4C], eax
call	purple_unescape_html
mov	[esp+4Ch+var_34], eax
mov	edx, 1
xor	ebp, ebp
mov	ebx, [esp+4Ch+var_30]
			
lea	eax, [edx-1]
mov	esi, [esp+4Ch+var_34]
add	esi, ebp
mov	cl, [esi]
test	cl, cl
jz	short loc_61C69165
mov	al, [ebx+edx-1]
test	al, al
jz	short loc_61C69148
cmp	cl, al
jz	short loc_61C69144
cmp	al, 0Ah
jnz	short loc_61C69120
mov	edi, offset aBr	
mov	ecx, 5
repe cmpsb
jnz	short loc_61C69120
add	ebp, 5
inc	edx
jmp	short loc_61C690EA
align 10h
			
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_free
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C69160
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
inc	ebp
inc	edx
jmp	short loc_61C690EA
xor	eax, eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_38], eax
call	g_free
mov	eax, [esp+4Ch+var_38]
jmp	short loc_61C6912E
call	__stack_chk_fail
mov	edx, [esp+4Ch+var_30]
cmp	byte ptr [edx+eax], 0
setz	al
movzx	eax, al
jmp	short loc_61C6914A
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C691CC
mov	[esp+3Ch+var_3C], ebx
call	jabber_data_get_size
mov	ebp, eax
mov	[esp+3Ch+var_3C], ebx
call	jabber_data_get_data
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	purple_conv_custom_smiley_write
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	purple_conv_custom_smiley_close
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C691E8
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_34], eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], offset aImg_1	
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jnz	short loc_61C6923A
jmp	loc_61C692E0
align 4
			
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_next_twin
mov	edi, eax
test	eax, eax
jz	loc_61C692E0
			
mov	[esp+4Ch+var_48], offset aSrc_0	
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aCid_1	
mov	[esp+4Ch+var_4C], eax
call	g_str_has_prefix
test	eax, eax
jz	short loc_61C69228
lea	ebp, [ebx+4]
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_61C69228
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], 8
call	g_malloc0
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aAlt 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_attrib
mov	ecx, eax
mov	eax, [esp+4Ch+var_30]
mov	[ebp+0], eax
test	ecx, ecx
jz	short loc_61C692AF
cmp	byte ptr [ecx],	0
jnz	short loc_61C69310
mov	[esp+4Ch+var_4C], ebx
call	g_strdup
mov	[ebp+4], eax
			
mov	[esp+4Ch+var_44], ebp
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_hash_table_insert
mov	[esp+4Ch+var_4C], edi
call	xmlnode_get_next_twin
mov	edi, eax
test	eax, eax
jnz	loc_61C6923A
			
mov	eax, [esp+4Ch+var_34]
mov	ebx, [eax+18h]
test	ebx, ebx
jz	short loc_61C692FC
nop
mov	edx, esi
mov	eax, ebx
call	sub_61C691F0
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_61C692EC
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C69349
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], ecx
mov	[esp+4Ch+var_38], ecx
call	purple_email_is_valid
test	eax, eax
mov	ecx, [esp+4Ch+var_38]
jz	short loc_61C69339
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], offset aSmileyS 
call	g_strdup_printf
mov	[ebp+4], eax
jmp	short loc_61C692BA
mov	[esp+4Ch+var_4C], ecx
call	g_strdup
mov	[ebp+4], eax
jmp	loc_61C692BA
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	[esp+7Ch+var_3C], eax
mov	ebx, edx
mov	[esp+7Ch+var_40], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	edx, [esp+7Ch+var_3C]
mov	eax, [edx]
mov	eax, [eax+64h]
mov	[esp+7Ch+Str], eax
call	purple_connection_get_account
mov	[esp+7Ch+var_74], eax
mov	eax, [ebx]
mov	[esp+7Ch+SubStr], eax
mov	[esp+7Ch+Str], 4
call	purple_find_conversation_with_account
mov	[esp+7Ch+var_38], eax
mov	esi, [ebx]
mov	eax, [esp+7Ch+var_3C]
mov	ebx, [eax]
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str], eax
call	purple_conversation_get_type
cmp	eax, 1
jz	short loc_61C69404
cmp	eax, 2
jz	short loc_61C693CF
			
xor	eax, eax
mov	ebx, [esp+7Ch+var_20]
xor	ebx, ds:__stack_chk_guard
jnz	loc_61C69879
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str], eax
call	jabber_chat_find_by_conv
mov	ebx, eax
test	eax, eax
jz	short loc_61C693B5
mov	[esp+7Ch+Str], eax
call	jabber_chat_get_num_participants
cmp	eax, 0Ah
ja	short loc_61C693B5
mov	[esp+7Ch+SubStr], offset aUrnXmppBob_1 
mov	[esp+7Ch+Str], ebx
call	jabber_chat_all_participants_have_capability
test	eax, eax
jnz	short loc_61C69430
jmp	short loc_61C693B5
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+SubStr], esi
mov	[esp+7Ch+Str], ebx
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C693B5
mov	[esp+7Ch+SubStr], offset aUrnXmppBob_1 
mov	[esp+7Ch+Str], eax
call	jabber_buddy_has_capability
test	eax, eax
jz	short loc_61C693B5
call	purple_smileys_get_all
mov	ebx, eax
xor	ebp, ebp
test	eax, eax
jz	loc_61C693B5
lea	esi, [esi+0]
mov	esi, [ebx]
mov	[esp+7Ch+Str], esi
call	purple_smiley_get_shortcut
mov	edx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+SubStr], ecx
mov	[esp+7Ch+Str], edx
call	g_markup_escape_text
mov	edi, eax
mov	[esp+7Ch+SubStr], eax 
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+Str], edx 
call	strstr
test	eax, eax
jz	short loc_61C6948E
mov	[esp+7Ch+SubStr], esi
mov	[esp+7Ch+Str], ebp
call	g_list_append
mov	ebp, eax
mov	[esp+7Ch+Str], edi
call	g_free
mov	[esp+7Ch+SubStr], ebx
mov	[esp+7Ch+Str], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C69444
mov	[esp+7Ch+var_34], ebp
test	ebp, ebp
jz	loc_61C693B5
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
jmp	short loc_61C694EB
align 4
test	esi, esi
jz	loc_61C69722
mov	[esp+7Ch+SubStr], ebx
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], eax
call	g_list_append
mov	[esp+7Ch+var_48], eax
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_61C69556
			
mov	ebx, [ebp+0]
mov	[esp+7Ch+Str], ebx
call	purple_smiley_get_shortcut
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+Str], eax
call	jabber_data_find_local_by_alt
mov	esi, eax
mov	[esp+7Ch+Str], ebx
call	purple_smiley_get_stored_image
mov	[esp+7Ch+var_50], eax
mov	[esp+7Ch+Str], eax
call	purple_imgstore_get_size
cmp	eax, 2000h
jbe	short loc_61C694C8
mov	[esp+7Ch+Str], ebx
call	purple_smiley_get_shortcut
mov	[esp+7Ch+var_70], 2000h
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+SubStr], offset aRefusingToSend 
mov	[esp+7Ch+Str], offset aJabber_18 
call	purple_debug_warning
mov	[esp+7Ch+var_44], 1
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C694EB
mov	edx, [esp+7Ch+var_44]
test	edx, edx
jnz	loc_61C69806
mov	[esp+7Ch+Str], 0
call	g_string_new
mov	[esp+7Ch+var_44], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_40]
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_3C], ecx
mov	[esp+7Ch+var_50], 0
mov	edx, [esp+7Ch+var_3C]
cmp	[esp+7Ch+var_50], edx
jge	loc_61C69688
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jz	loc_61C696C1
mov	ebx, [esp+7Ch+var_40]
add	ebx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_4C], ebx
mov	ebx, [esp+7Ch+var_48]
mov	esi, [esp+7Ch+var_4C]
jmp	short loc_61C695D3
align 10h
mov	[esp+7Ch+Str], edi
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_61C696D0
mov	eax, [ebx]
mov	[esp+7Ch+Str], eax
call	purple_smiley_get_shortcut
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+SubStr], ecx
mov	[esp+7Ch+Str], ebp
call	g_markup_escape_text
mov	edi, eax
mov	[esp+7Ch+SubStr], eax
mov	[esp+7Ch+Str], esi
call	g_str_has_prefix
test	eax, eax
jz	short loc_61C695C0
mov	esi, ebp
mov	ebp, edi
mov	[esp+7Ch+Str], esi
call	jabber_data_find_local_by_alt
mov	[esp+7Ch+SubStr], esi
mov	[esp+7Ch+Str], eax
call	jabber_data_get_xhtml_im
mov	ebx, eax
lea	edx, [esp+7Ch+var_24]
mov	[esp+7Ch+SubStr], edx
mov	[esp+7Ch+Str], eax
call	xmlnode_to_str
mov	esi, eax
mov	[esp+7Ch+SubStr], eax
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	g_string_append
mov	[esp+7Ch+var_44], eax
mov	[esp+7Ch+Str], esi
call	g_free
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
mov	edx, [esp+7Ch+var_50]
lea	edx, [edx+ecx-1]
mov	[esp+7Ch+var_50], edx
mov	[esp+7Ch+Str], ebp
call	g_free
mov	[esp+7Ch+Str], ebx
call	xmlnode_free
mov	ebx, [esp+7Ch+var_50]
cmp	[esp+7Ch+var_3C], ebx
jg	loc_61C6959C
mov	[esp+7Ch+SubStr], 0
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	g_string_free
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+Str], edx
mov	[esp+7Ch+var_54], eax
call	g_list_free
mov	ecx, [esp+7Ch+var_48]
mov	[esp+7Ch+Str], ecx
call	g_list_free
mov	eax, [esp+7Ch+var_54]
jmp	loc_61C693B7
mov	ecx, [esp+7Ch+var_40]
add	ecx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_4C], ecx
lea	esi, [esi+0]
mov	esi, [esp+7Ch+var_4C]
movsx	ecx, byte ptr [esi]
mov	eax, [esp+7Ch+var_44]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ebx, [esp+7Ch+var_44]
cmp	eax, [ebx+8]
jnb	short loc_61C69708
mov	esi, [esp+7Ch+var_44]
mov	ebx, [esi]
mov	[ebx+edx], cl
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
inc	[esp+7Ch+var_50]
jmp	loc_61C6958E
align 4
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+SubStr], 0FFFFFFFFh
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Str], eax
call	g_string_insert_c
jmp	short loc_61C696FC
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], eax
call	purple_imgstore_get_extension
mov	edx, [esp+7Ch+var_3C]
mov	edx, [edx]
mov	[esp+7Ch+var_30], edx
mov	edi, offset aPng 
mov	esi, eax
mov	ecx, 4
repe cmpsb
jz	loc_61C6985B
mov	edi, offset aGif 
mov	esi, eax
mov	ecx, 4
repe cmpsb
jz	loc_61C69851
mov	edi, offset aJpg 
mov	esi, eax
mov	ecx, 4
repe cmpsb
jz	loc_61C69865
mov	edi, offset aTif 
mov	esi, eax
mov	ecx, 4
repe cmpsb
jz	loc_61C6986F
mov	esi, offset aImageXIcon	
			
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], eax
call	purple_imgstore_get_size
mov	edi, eax
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], eax
call	purple_imgstore_get_data
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+SubStr], edi
mov	[esp+7Ch+Str], eax
call	jabber_data_create_from_data
mov	esi, eax
mov	[esp+7Ch+Str], eax
call	jabber_data_get_cid
mov	[esp+7Ch+var_70], eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+SubStr], offset aCacheLocalSmil 
mov	[esp+7Ch+Str], offset aJabber_18 
call	purple_debug_info
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+SubStr], eax
mov	[esp+7Ch+Str], esi
call	jabber_data_associate_local
jmp	loc_61C694D0
mov	[esp+7Ch+Str], 0 
call	time
mov	ebx, eax
mov	[esp+7Ch+SubStr], offset aACustomSmileyI 
mov	[esp+7Ch+Str], offset aPidgin_10 
call	libintl_dgettext
mov	[esp+7Ch+var_6C], ebx
mov	[esp+7Ch+var_70], 200h
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+SubStr], 0
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+Str], eax
call	purple_conversation_write
jmp	loc_61C69562
mov	esi, offset aImageGif 
jmp	loc_61C6978D
mov	esi, offset aImagePng_0	
jmp	loc_61C6978D
mov	esi, offset aImageJpeg 
jmp	loc_61C6978D
mov	esi, offset aImageTif 
jmp	loc_61C6978D
call	__stack_chk_fail
align 10h
public jabber_message_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C69925
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public jabber_message_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 17Ch
mov	eax, [esp+18Ch+arg_0]
mov	[esp+18Ch+var_158], eax
mov	ebp, [esp+18Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+18Ch+var_20], edx
xor	edx, edx
mov	[esp+18Ch+Str2], offset	aFrom_3	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	[esp+18Ch+var_154], eax
mov	[esp+18Ch+Str2], offset	aId_7 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+18Ch+Str2], offset	aTo_11 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	[esp+18Ch+var_150], eax
mov	[esp+18Ch+Str2], offset	aType_10 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	[esp+18Ch+var_160], eax
mov	ecx, [esp+18Ch+var_158]
mov	esi, [ecx+64h]
mov	[esp+18Ch+Time], esi
call	purple_connection_get_prpl
mov	[esp+18Ch+var_170], ebp
mov	edx, [esp+18Ch+var_150]
mov	[esp+18Ch+var_174], edx
mov	ecx, [esp+18Ch+var_154]
mov	[esp+18Ch+var_178], ecx
mov	[esp+18Ch+var_17C], ebx
mov	edx, [esp+18Ch+var_160]
mov	[esp+18Ch+var_180], edx
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], offset	aJabberReceiv_4	
mov	[esp+18Ch+Time], eax
call	purple_signal_emit_return_1
test	eax, eax
jz	short loc_61C69A0C
mov	ebp, [esp+18Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	loc_61C6AFE2
add	esp, 17Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+18Ch+Time], 44h
call	g_malloc0
mov	[esp+18Ch+var_15C], eax
mov	ecx, [esp+18Ch+var_158]
mov	[eax], ecx
mov	[esp+18Ch+Time], 0 
call	time
mov	edx, [esp+18Ch+var_15C]
mov	[edx+8], eax
mov	dword ptr [edx+0Ch], 0
mov	dword ptr [edx+38h], 0
mov	edx, [esp+18Ch+var_160]
test	edx, edx
jz	short loc_61C69A61
mov	edi, offset aNormal 
mov	ecx, 7
mov	esi, [esp+18Ch+var_160]
repe cmpsb
jnz	loc_61C6A1D4
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 0
			
mov	eax, [esp+18Ch+var_154]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	edx, [esp+18Ch+var_15C]
mov	[edx+18h], eax
mov	eax, [esp+18Ch+var_150]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	edx, [esp+18Ch+var_15C]
mov	[edx+1Ch], eax
mov	[esp+18Ch+Time], ebx
call	g_strdup
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+14h], eax
mov	ebx, [ebp+18h]
test	ebx, ebx
jz	loc_61C6A004
mov	[esp+18Ch+var_14C], ebp
mov	ebp, ebx
jmp	short loc_61C69ADF
mov	edi, offset aJabberClient_1 
mov	ecx, 0Eh
mov	esi, ebx
repe cmpsb
jnz	short loc_61C69B1F
mov	eax, [esp+18Ch+var_15C]
mov	eax, [eax+20h]
test	eax, eax
jz	loc_61C6A9EE
nop
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	loc_61C6A004
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_namespace
mov	ebx, eax
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_61C69AD4
mov	eax, [ebp+0]
mov	edi, offset aError_6 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jz	loc_61C69F90
test	ebx, ebx
jz	loc_61C6A1A0
mov	edi, offset aSubject_0 
mov	ecx, 8
mov	esi, eax
repe cmpsb
jz	short loc_61C69AB4
mov	edi, offset aThread 
mov	ecx, 7
mov	esi, eax
repe cmpsb
jnz	short loc_61C69B60
mov	edi, offset aJabberClient_1 
mov	ecx, 0Eh
mov	esi, ebx
repe cmpsb
jnz	short loc_61C69B60
mov	eax, [esp+18Ch+var_15C]
mov	eax, [eax+34h]
test	eax, eax
jnz	short loc_61C69AD4
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_data
mov	edx, [esp+18Ch+var_15C]
mov	[edx+34h], eax
jmp	loc_61C69AD4
align 10h
			
mov	edi, offset aBody_1 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jnz	short loc_61C69BC0
mov	edi, offset aJabberClient_1 
mov	ecx, 0Eh
mov	esi, ebx
repe cmpsb
jnz	short loc_61C69BC0
mov	eax, [esp+18Ch+var_15C]
mov	eax, [eax+24h]
test	eax, eax
jnz	loc_61C69AD4
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+18Ch+Str2], 0FFFFFFFFh
mov	[esp+18Ch+Time], eax
call	purple_markup_escape_text
mov	esi, eax
mov	[esp+18Ch+Time], eax
call	purple_strdup_withhtml
mov	edx, [esp+18Ch+var_15C]
mov	[edx+24h], eax
jmp	loc_61C69FED
align 10h
			
mov	edi, offset aHtml 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jnz	loc_61C69EE4
mov	edi, offset aHttpJabber__32 
mov	ecx, 24h
mov	esi, ebx
repe cmpsb
jnz	loc_61C69EE4
mov	eax, [esp+18Ch+var_15C]
mov	edi, [eax+28h]
test	edi, edi
jnz	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aBody_1	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C69AD4
mov	edx, [esp+18Ch+var_158]
mov	eax, [edx+64h]
mov	[esp+18Ch+Time], eax
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+18Ch+var_184], 1
mov	[esp+18Ch+Str2], offset	aCustom_smileys	
mov	[esp+18Ch+Time], eax
call	purple_account_get_bool
test	eax, eax
jnz	loc_61C6AFE7
mov	[esp+18Ch+var_134], 0
mov	[esp+18Ch+var_13C], 0
			
mov	[esp+18Ch+Str2], 0
mov	[esp+18Ch+Time], ebp
call	xmlnode_to_str
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	[esp+18Ch+Time], 0
call	g_string_new
mov	[esp+18Ch+var_144], eax
test	edi, edi
jle	loc_61C69D92
mov	[esp+18Ch+var_148], 0
mov	[esp+18Ch+var_130], ebp
xchg	ax, ax
mov	ecx, [esp+18Ch+var_148]
add	ecx, esi
mov	[esp+18Ch+var_140], ecx
mov	[esp+18Ch+Str2], offset	aImg 
mov	[esp+18Ch+Time], ecx
call	g_str_has_prefix
test	eax, eax
jz	loc_61C6AB6C
mov	ebx, [esp+18Ch+var_148]
cmp	edi, [esp+18Ch+var_148]
jg	short loc_61C69CE5
jmp	short loc_61C69CFF
align 4
mov	[esp+18Ch+Str2], offset	aImg_0 
mov	[esp+18Ch+Time], ebp
call	g_str_has_prefix
test	eax, eax
jnz	loc_61C6AC44
inc	ebx
cmp	edi, ebx
jle	short loc_61C69CFF
lea	ebp, [esi+ebx]
mov	[esp+18Ch+Str2], offset	asc_61C82EBF 
mov	[esp+18Ch+Time], ebp
call	g_str_has_prefix
test	eax, eax
jz	short loc_61C69CC8
add	ebx, 2
			
mov	eax, ebx
sub	eax, [esp+18Ch+var_148]
mov	[esp+18Ch+Str2], eax
mov	ebp, [esp+18Ch+var_140]
mov	[esp+18Ch+Time], ebp
call	xmlnode_from_str
mov	ebp, eax
mov	[esp+18Ch+Str2], offset	aSrc_0 
mov	[esp+18Ch+Time], eax
call	xmlnode_get_attrib
mov	[esp+18Ch+var_138], eax
mov	[esp+18Ch+Str2], offset	aCid_1 
mov	[esp+18Ch+Time], eax
call	g_str_has_prefix
test	eax, eax
jz	loc_61C6A983
mov	[esp+18Ch+Str2], offset	aAlt 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C69D60
cmp	byte ptr [eax],	0
jnz	loc_61C6AEC0
mov	eax, [esp+18Ch+var_138]
mov	[esp+18Ch+Str2], eax
mov	eax, [esp+18Ch+var_144]
mov	[esp+18Ch+Time], eax
call	g_string_append
mov	[esp+18Ch+var_144], eax
mov	[esp+18Ch+var_148], ebx
			
mov	[esp+18Ch+Time], ebp
call	xmlnode_free
cmp	[esp+18Ch+var_148], edi
jl	loc_61C69C98
mov	ebp, [esp+18Ch+var_130]
mov	[esp+18Ch+Time], esi
call	g_free
mov	[esp+18Ch+Str2], 0
mov	eax, [esp+18Ch+var_144]
mov	[esp+18Ch+Time], eax
call	g_string_free
mov	edx, [esp+18Ch+var_15C]
mov	[edx+28h], eax
mov	esi, [esp+18Ch+var_13C]
test	esi, esi
jz	loc_61C6AF6D
mov	ebx, [esp+18Ch+var_134]
test	ebx, ebx
jz	loc_61C6AF6D
mov	ebx, [esp+18Ch+var_134]
mov	[esp+18Ch+var_148], ebp
jmp	short loc_61C69E0C
align 4
			
mov	eax, [ebp+0]
mov	[esp+18Ch+Time], eax
call	g_free
mov	eax, [ebp+4]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], ebp
call	g_free
mov	[esp+18Ch+Str2], ebx
mov	[esp+18Ch+Time], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jz	loc_61C6AF69
mov	ebp, [ebx]
mov	edi, [ebp+0]
mov	eax, [ebp+4]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	esi, eax
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aAboutToAddCust	
mov	[esp+18Ch+Time], offset	aJabber_18 
call	purple_debug_info
mov	[esp+18Ch+var_17C], 1
mov	[esp+18Ch+var_180], edi
mov	[esp+18Ch+var_184], offset aCid_2 
mov	[esp+18Ch+Str2], esi
mov	eax, [esp+18Ch+var_13C]
mov	[esp+18Ch+Time], eax
call	purple_conv_custom_smiley_add
test	eax, eax
jz	loc_61C69DD8
mov	[esp+18Ch+var_184], edi
mov	eax, [esp+18Ch+var_154]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_158]
mov	[esp+18Ch+Time], edx
call	jabber_data_find_remote_by_cid
test	eax, eax
jz	loc_61C6AF95
mov	[esp+18Ch+Str2], offset	aDataIsAlreadyK	
mov	[esp+18Ch+Time], offset	aJabber_18 
mov	[esp+18Ch+var_168], eax
call	purple_debug_info
mov	ecx, [esp+18Ch+var_168]
mov	[esp+18Ch+Time], ecx
call	jabber_data_get_size
mov	edi, eax
mov	ecx, [esp+18Ch+var_168]
mov	[esp+18Ch+Time], ecx
call	jabber_data_get_data
mov	[esp+18Ch+var_180], edi
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], esi
mov	eax, [esp+18Ch+var_13C]
mov	[esp+18Ch+Time], eax
call	purple_conv_custom_smiley_write
mov	[esp+18Ch+Str2], esi
mov	eax, [esp+18Ch+var_13C]
mov	[esp+18Ch+Time], eax
call	purple_conv_custom_smiley_close
jmp	loc_61C69DD8
align 4
			
mov	edi, offset aActive 
mov	ecx, 7
mov	esi, eax
repe cmpsb
jnz	short loc_61C69F14
mov	edi, offset aHttpJabber__33 
mov	ecx, 26h
mov	esi, ebx
repe cmpsb
jnz	short loc_61C69F14
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+38h], 1
jmp	loc_61C69AD4
			
mov	edi, offset aComposing 
mov	ecx, 0Ah
mov	esi, eax
repe cmpsb
jnz	short loc_61C69F44
mov	edi, offset aHttpJabber__33 
mov	ecx, 26h
mov	esi, ebx
repe cmpsb
jnz	short loc_61C69F44
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+38h], 2
jmp	loc_61C69AD4
			
mov	edi, offset aPaused 
mov	ecx, 7
mov	esi, eax
repe cmpsb
jz	loc_61C6A1FC
mov	edi, offset aInactive 
mov	ecx, 9
mov	esi, eax
repe cmpsb
jnz	loc_61C6A604
mov	edi, offset aHttpJabber__33 
mov	ecx, 26h
mov	esi, ebx
repe cmpsb
jnz	loc_61C6A604
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+38h], 4
jmp	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aCode_4	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	loc_61C6A95C
			
test	esi, esi
jz	loc_61C6B245
mov	[esp+18Ch+Str2], offset	aCodeS 
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], eax
call	g_strdup_printf
mov	esi, eax
mov	eax, [esp+18Ch+var_15C]
mov	eax, [eax+30h]
test	eax, eax
jz	loc_61C6A6FC
			
mov	[esp+18Ch+Time], esi
call	g_free
mov	[esp+18Ch+Time], ebx
call	g_free
jmp	loc_61C69AD4
align 4
			
mov	eax, [esp+18Ch+var_15C]
mov	eax, [eax+10h]
test	eax, eax
jnz	loc_61C6A638
			
mov	eax, [esp+18Ch+var_15C]
cmp	dword ptr [eax+4], 7 
ja	loc_61C6A18C	
mov	eax, [eax+4]
jmp	ds:off_61C831E0[eax*4] 
			
mov	eax, [esp+18Ch+var_160]	
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aReceivedMessag	
mov	[esp+18Ch+Time], offset	aJabber_18 
call	purple_debug_info
			
mov	edx, [esp+18Ch+var_15C]	
mov	eax, [edx+18h]
mov	[esp+18Ch+Time], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C6A18C	
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx]
mov	eax, [eax+64h]
mov	[esp+18Ch+var_160], eax
mov	[esp+18Ch+Time], eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+18Ch+var_184], 1
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	eax, [ebp+0]
mov	[esp+18Ch+Time], eax
call	jabber_buddy_find
mov	edx, [ebx+8]
mov	[esp+18Ch+Str2], edx
mov	[esp+18Ch+Time], eax
call	jabber_buddy_find_resource
mov	esi, eax
mov	eax, [ebp+28h]
test	eax, eax
jz	loc_61C6ACFC
mov	ebp, [ebx+8]
test	ebp, ebp
jz	short loc_61C6A0FC
mov	[esp+18Ch+var_184], edi
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+18h]
mov	[esp+18Ch+Str2], eax
mov	[esp+18Ch+Time], 1
call	purple_find_conversation_with_account
mov	edi, eax
test	eax, eax
jz	short loc_61C6A0FC
mov	[esp+18Ch+Time], eax
call	purple_conversation_get_name
mov	[esp+18Ch+Str2], eax
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+18h]
mov	[esp+18Ch+Time], eax
call	g_str_equal
test	eax, eax
jz	loc_61C6AE38
			
test	esi, esi
jz	short loc_61C6A137
cmp	dword ptr [esi+20h], 2
jz	short loc_61C6A116
mov	eax, [esp+18Ch+var_15C]
cmp	dword ptr [eax+38h], 1
sbb	eax, eax
add	eax, 2
mov	[esi+20h], eax
mov	eax, [esi+1Ch]
test	eax, eax
jz	loc_61C6AB0E
mov	[esp+18Ch+Time], eax
call	g_free
mov	eax, [esi+1Ch]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	[esi+1Ch], eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx]
mov	edi, [eax+90h]
test	edi, edi
jz	loc_61C6A940
mov	eax, [edx+28h]
test	eax, eax
jz	loc_61C6A926
mov	ecx, [esp+18Ch+var_15C]
mov	edx, [ecx+8]
			
mov	[esp+18Ch+var_17C], edx
mov	[esp+18Ch+var_180], 0
mov	[esp+18Ch+var_184], eax
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], edx
call	serv_got_im
			
mov	[esp+18Ch+Time], ebx
call	jabber_id_free
			
mov	eax, [esp+18Ch+var_15C]	
mov	[esp+18Ch+Time], eax
call	jabber_message_free
jmp	loc_61C699EC
align 10h
mov	edi, offset asc_61C82E40 
mov	ecx, 2
mov	esi, eax
repe cmpsb
jnz	loc_61C69AD4
mov	[esp+18Ch+Str2], ebp
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+3Ch]
mov	[esp+18Ch+Time], eax
call	g_list_append
mov	edx, [esp+18Ch+var_15C]
mov	[edx+3Ch], eax
jmp	loc_61C69AD4
align 4
mov	edi, offset aChat 
mov	ecx, 5
mov	esi, [esp+18Ch+var_160]
repe cmpsb
jnz	loc_61C6A73C
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 1
jmp	loc_61C69A6C
align 4
mov	edi, offset aHttpJabber__33 
mov	ecx, 26h
mov	esi, ebx
repe cmpsb
jnz	loc_61C69F58
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+38h], 3
jmp	loc_61C69AD4
			
mov	edx, [esp+18Ch+var_15C]	
mov	eax, [edx+18h]
mov	[esp+18Ch+Time], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C6A18C	
mov	eax, [eax+4]
mov	[esp+18Ch+var_184], eax
mov	eax, [ebx]
mov	[esp+18Ch+Str2], eax
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx]
mov	[esp+18Ch+Time], eax
call	jabber_chat_find
mov	edi, eax
test	eax, eax
jz	loc_61C6A18C	
mov	eax, [esp+18Ch+var_15C]
mov	esi, [eax+20h]
test	esi, esi
jz	loc_61C6AE17
mov	ebp, [ebx+8]
mov	eax, [edi+18h]
mov	[esp+18Ch+Time], eax
call	purple_conversation_get_chat_data
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], ebp
mov	[esp+18Ch+Time], eax
call	purple_conv_chat_set_topic
mov	eax, [esp+18Ch+var_15C]
mov	esi, [eax+28h]
test	esi, esi
jz	loc_61C6AD56
			
mov	edx, [ebx+8]
test	edx, edx
jz	loc_61C6AF17
mov	eax, [esp+18Ch+var_15C]
mov	ecx, [eax+8]
test	esi, esi
jz	loc_61C6AF61
mov	eax, [esp+18Ch+var_15C]
cmp	dword ptr [eax+0Ch], 1
sbb	eax, eax
not	eax
and	eax, 400h
mov	[esp+18Ch+var_178], ecx
mov	[esp+18Ch+var_17C], esi
mov	[esp+18Ch+var_180], eax
mov	[esp+18Ch+var_184], edx
mov	eax, [edi+14h]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx]
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	serv_got_chat_in
jmp	loc_61C6A184
			
mov	eax, [esp+18Ch+var_15C]	
mov	ecx, [eax+24h]
test	ecx, ecx
jz	loc_61C6A18C	
mov	ebx, [eax+30h]
test	ebx, ebx
jz	loc_61C6AEB6
mov	eax, [esp+18Ch+var_15C]
mov	esi, [eax+18h]
mov	[esp+18Ch+Str2], offset	aMessageDeliver	
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+var_184], ebx
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], eax
call	g_strdup_printf
mov	esi, eax
mov	eax, [esp+18Ch+var_15C]
mov	ebx, [eax+28h]
test	ebx, ebx
jz	loc_61C6AEAE
mov	[esp+18Ch+Str2], offset	aXmppMessageErr	
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	edi, eax
mov	[esp+18Ch+Str2], offset	aXmppMessageErr	
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+var_174], 0
mov	[esp+18Ch+var_178], 0
mov	[esp+18Ch+var_17C], ebx
mov	[esp+18Ch+var_180], esi
mov	[esp+18Ch+var_184], edi
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx]
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	purple_notify_formatted
mov	[esp+18Ch+Time], esi
call	g_free
jmp	loc_61C6A18C	
			
mov	eax, [esp+18Ch+var_15C]	
mov	esi, [eax+28h]
test	esi, esi
jz	loc_61C6ABA4
mov	[esp+18Ch+Time], offset	byte_61C82DD4
call	g_string_new
mov	[esp+18Ch+var_160], eax
mov	eax, [esp+18Ch+var_15C]
mov	ebx, [eax+18h]
mov	[esp+18Ch+Str2], offset	aMessageFromS 
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+Str2], ebx
mov	[esp+18Ch+Time], eax
call	g_strdup_printf
mov	[esp+18Ch+var_158], eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+28h]
test	eax, eax
jz	loc_61C6ABB4
mov	[esp+18Ch+Str2], eax
mov	eax, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], eax
call	g_string_append
mov	eax, [esp+18Ch+var_15C]
mov	ebx, [eax+3Ch]
test	ebx, ebx
jnz	short loc_61C6A437
jmp	loc_61C6A88C
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_61C6A88C
mov	ebp, [ebx]
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_namespace
test	eax, eax
jz	short loc_61C6A42C
mov	edi, offset aJabberXOob_0 
mov	esi, eax
mov	ecx, 0Dh
repe cmpsb
jnz	short loc_61C6A42C
mov	[esp+18Ch+Str2], offset	aUrl_0 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
mov	esi, eax
mov	[esp+18Ch+Str2], offset	aDesc_0	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
mov	edi, eax
test	esi, esi
jz	short loc_61C6A42C
test	eax, eax
jz	short loc_61C6A42C
mov	[esp+18Ch+Time], esi
call	xmlnode_get_data
mov	esi, eax
mov	[esp+18Ch+Time], edi
call	xmlnode_get_data
mov	edi, eax
mov	eax, [esp+18Ch+var_160]
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_61C6A4C5
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+24h]
test	eax, eax
jz	short loc_61C6A4C5
mov	[esp+18Ch+Str2], eax 
mov	ecx, [esp+18Ch+var_160]
mov	eax, [ecx]
mov	[esp+18Ch+Time], eax 
call	strcmp
test	eax, eax
jz	loc_61C6ACDB
			
mov	[esp+18Ch+var_180], edi
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], offset	aBrAHrefSSA 
mov	eax, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], eax
call	g_string_append_printf
mov	[esp+18Ch+Time], esi
call	g_free
mov	[esp+18Ch+Time], edi
call	g_free
jmp	loc_61C6A42C
			
mov	eax, [esp+18Ch+var_15C]	
mov	[esp+18Ch+Time], eax
call	jabber_handle_event
jmp	loc_61C6A18C	
			
mov	edx, [esp+18Ch+var_15C]	
mov	eax, [edx+1Ch]
mov	[esp+18Ch+Time], eax
call	jabber_id_new
mov	esi, eax
test	eax, eax
jz	loc_61C6A18C	
mov	[esp+18Ch+var_180], offset g_free
mov	[esp+18Ch+var_184], 0
mov	[esp+18Ch+Str2], offset	g_str_equal
mov	[esp+18Ch+Time], offset	g_str_hash
call	g_hash_table_new_full
mov	ebx, eax
mov	eax, [esi]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aRoom_1	
mov	[esp+18Ch+Time], ebx
call	g_hash_table_replace
mov	eax, [esi+4]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aServer_2 
mov	[esp+18Ch+Time], ebx
call	g_hash_table_replace
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx]
mov	eax, [eax+5Ch]
mov	eax, [eax]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aHandle_1 
mov	[esp+18Ch+Time], ebx
call	g_hash_table_replace
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+2Ch]
mov	[esp+18Ch+Time], eax
call	g_strdup
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aPassword_6 
mov	[esp+18Ch+Time], ebx
call	g_hash_table_replace
mov	[esp+18Ch+Time], esi
call	jabber_id_free
mov	[esp+18Ch+var_17C], ebx
mov	eax, [ebp+24h]
mov	[esp+18Ch+var_180], eax
mov	eax, [ebp+18h]
mov	[esp+18Ch+var_184], eax
mov	eax, [ebp+1Ch]
mov	[esp+18Ch+Str2], eax
mov	eax, [ebp+0]
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	serv_got_chat_invite
jmp	loc_61C6A18C	
align 4
			
mov	edi, offset aGone_1 
mov	ecx, 5
mov	esi, eax
repe cmpsb
jnz	loc_61C6A6A4
mov	edi, offset aHttpJabber__33 
mov	ecx, 26h
mov	esi, ebx
repe cmpsb
jnz	short loc_61C6A6A4
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+38h], 5
jmp	loc_61C69AD4
mov	eax, [esp+18Ch+var_15C]
mov	ecx, [eax+0Ch]
test	ecx, ecx
jnz	loc_61C6A013
mov	eax, [eax]
mov	edx, [eax+0E0h]
test	edx, edx
jz	loc_61C6A013
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	purple_connection_get_account
mov	ecx, [esp+18Ch+var_15C]
mov	edx, [ecx+18h]
mov	[esp+18Ch+Str2], edx
mov	[esp+18Ch+Time], eax
call	purple_find_buddy
test	eax, eax
jz	loc_61C6A013
mov	[esp+18Ch+var_184], 0
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	eax, [ebp+0]
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	purple_prpl_got_attention
jmp	loc_61C6A013
align 4
			
mov	edi, offset aEvent 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jnz	short loc_61C6A6C8
mov	edi, offset aHttpJabber__34 
mov	ecx, 28h
mov	esi, ebx
repe cmpsb
jz	loc_61C6AC92
mov	edi, offset aAttention_0 
mov	ecx, 0Ah
mov	esi, eax
repe cmpsb
jnz	loc_61C6A764
mov	edi, offset aUrnXmppAtten_0 
mov	ecx, 15h
mov	esi, ebx
repe cmpsb
jnz	short loc_61C6A764
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+10h], 1
jmp	loc_61C69AD4
test	esi, esi
jz	loc_61C6AC7E
mov	ecx, esi
test	ebx, ebx
jz	loc_61C6AC72
mov	eax, ebx
mov	edx, offset asc_61C82DD5 
			
mov	[esp+18Ch+var_180], ecx
mov	[esp+18Ch+var_184], edx
mov	[esp+18Ch+Str2], eax
mov	[esp+18Ch+Time], offset	aSSS_3 
call	g_strdup_printf
mov	edx, [esp+18Ch+var_15C]
mov	[edx+30h], eax
jmp	loc_61C69FED
align 4
mov	edi, offset aGroupchat 
mov	ecx, 0Ah
mov	esi, [esp+18Ch+var_160]
repe cmpsb
jnz	loc_61C6A900
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 2
jmp	loc_61C69A6C
align 4
			
mov	edi, offset aDelay 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jnz	short loc_61C6A788
mov	edi, offset aUrnXmppDelay 
mov	ecx, 0Fh
mov	esi, ebx
repe cmpsb
jz	loc_61C6AB15
mov	edi, offset asc_61C82E40 
mov	ecx, 2
mov	esi, eax
repe cmpsb
jnz	loc_61C6ABC8
mov	edi, offset aJabberXDelay 
mov	ecx, 0Fh
mov	esi, ebx
repe cmpsb
jz	loc_61C6AB15
mov	edi, offset aJabberXConfe_1 
mov	ecx, 14h
mov	esi, ebx
repe cmpsb
jnz	loc_61C6AA20
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+4]
cmp	eax, 5
jz	loc_61C6AA20
cmp	eax, 4
jz	loc_61C6AA20
mov	[esp+18Ch+Str2], offset	aJid_6 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aReason_1 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+18Ch+Str2], offset	aPassword_6 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 5
mov	eax, [eax+1Ch]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], edi
call	g_strdup
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+1Ch], eax
test	esi, esi
jz	short loc_61C6A85E
mov	eax, [ecx+24h]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], esi
call	g_strdup
mov	edx, [esp+18Ch+var_15C]
mov	[edx+24h], eax
test	ebx, ebx
jz	loc_61C69AD4
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+2Ch]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], ebx
call	g_strdup
mov	edx, [esp+18Ch+var_15C]
mov	[edx+2Ch], eax
jmp	loc_61C69AD4
align 4
			
mov	eax, [esp+18Ch+var_160]
mov	edx, [eax]
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+20h]
test	eax, eax
jz	loc_61C6AE88
mov	[esp+18Ch+var_174], 0
mov	[esp+18Ch+var_178], 0
mov	[esp+18Ch+var_17C], edx
mov	[esp+18Ch+var_180], 0
mov	[esp+18Ch+var_184], eax
mov	eax, [esp+18Ch+var_158]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx]
mov	eax, [eax+64h]
mov	[esp+18Ch+Time], eax
call	purple_notify_formatted
mov	eax, [esp+18Ch+var_158]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Str2], 1
mov	eax, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], eax
call	g_string_free
jmp	loc_61C6A18C	
align 10h
mov	edi, offset aHeadline_0	
mov	ecx, 9
mov	esi, [esp+18Ch+var_160]
repe cmpsb
jnz	loc_61C6A9BC
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 3
jmp	loc_61C69A6C
mov	edi, [edx+24h]
mov	[esp+18Ch+Time], edi
call	jabber_google_format_to_html
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+24h], eax
mov	[esp+18Ch+Time], edi
call	g_free
mov	eax, [esp+18Ch+var_15C]
mov	edx, [eax+8]
mov	ecx, eax
mov	eax, [eax+28h]
test	eax, eax
jnz	loc_61C6A15D
mov	eax, [ecx+24h]
jmp	loc_61C6A15D
mov	[esp+18Ch+Str2], offset	aText_1	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C69FB4
mov	[esp+18Ch+Time], eax
call	xmlnode_get_data
mov	ebx, eax
jmp	loc_61C69FB4
mov	edx, [esp+18Ch+var_140]
movsx	ebx, byte ptr [edx]
mov	eax, [esp+18Ch+var_144]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+18Ch+var_144]
cmp	eax, [ecx+8]
jnb	loc_61C6AE6B
mov	ecx, [ecx]
mov	[ecx+edx], bl
mov	edx, [esp+18Ch+var_144]
mov	[edx+4], eax
mov	edx, [edx]
mov	byte ptr [edx+eax], 0
inc	[esp+18Ch+var_148]
jmp	loc_61C69D7C
mov	edi, offset aError_6 
mov	ecx, 6
mov	esi, [esp+18Ch+var_160]
repe cmpsb
setnbe	al
setb	dl
sub	eax, edx
movsx	eax, al
cmp	eax, 1
sbb	eax, eax
and	eax, 0FFFFFFFDh
add	eax, 7
mov	edx, [esp+18Ch+var_15C]
mov	[edx+4], eax
jmp	loc_61C69A6C
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_data
mov	edx, [esp+18Ch+var_15C]
mov	[edx+20h], eax
test	eax, eax
jnz	loc_61C69AD4
mov	[esp+18Ch+Time], offset	byte_61C82DD4
call	g_strdup
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+20h], eax
jmp	loc_61C69AD4
align 10h
			
mov	edi, offset aHttpJabber__35 
mov	ecx, 24h
mov	esi, ebx
repe cmpsb
jnz	loc_61C6AC4C
mov	eax, [esp+18Ch+var_15C]
cmp	dword ptr [eax+4], 4
jz	loc_61C6AC4C
mov	[esp+18Ch+Str2], offset	aInvite_1 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aFrom_3	
mov	[esp+18Ch+Time], eax
call	xmlnode_get_attrib
mov	esi, eax
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+1Ch]
mov	[esp+18Ch+Time], eax
call	g_free
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+18h]
mov	[ecx+1Ch], eax
mov	[esp+18Ch+Time], esi
call	g_strdup
mov	edx, [esp+18Ch+var_15C]
mov	[edx+18h], eax
mov	[esp+18Ch+Str2], offset	aReason_1 
mov	[esp+18Ch+Time], ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C6AACA
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+24h]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], ebx
call	xmlnode_get_data
mov	edx, [esp+18Ch+var_15C]
mov	[edx+24h], eax
mov	[esp+18Ch+Str2], offset	aPassword_6 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C6AAFE
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+2Ch]
mov	[esp+18Ch+Time], eax
call	g_free
mov	[esp+18Ch+Time], ebx
call	xmlnode_get_data
mov	edx, [esp+18Ch+var_15C]
mov	[edx+2Ch], eax
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 5
jmp	loc_61C69AD4
xor	eax, eax
jmp	loc_61C6A12C
			
mov	[esp+18Ch+Str2], offset	aStamp 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	edx, [esp+18Ch+var_15C]
mov	dword ptr [edx+0Ch], 1
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+var_17C], 0
mov	[esp+18Ch+var_180], 0
mov	[esp+18Ch+var_184], 0
mov	[esp+18Ch+Str2], 1
mov	[esp+18Ch+Time], eax
call	purple_str_to_time
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+8], eax
jmp	loc_61C69AD4
mov	edx, [esp+18Ch+var_140]
movsx	ebx, byte ptr [edx]
mov	eax, [esp+18Ch+var_144]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+18Ch+var_144]
cmp	eax, [ecx+8]
jnb	loc_61C6AE91
mov	ebp, ecx
mov	ecx, [ecx]
mov	[ecx+edx], bl
mov	[ebp+4], eax
mov	edx, [ebp+0]
mov	byte ptr [edx+eax], 0
inc	[esp+18Ch+var_148]
jmp	loc_61C69D84
mov	ebx, [eax+24h]
test	ebx, ebx
jnz	loc_61C6A3BF
jmp	loc_61C6A18C	
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+24h]
test	eax, eax
jnz	loc_61C6A409
jmp	loc_61C6A419
mov	[esp+18Ch+Str2], offset	aQuery_11 
mov	[esp+18Ch+Time], eax
call	g_str_equal
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aNode_3	
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+18Ch+Str2], offset	aHttpJabber__36	
mov	[esp+18Ch+Time], ebx
call	purple_strequal
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+Str2], offset	aHttpJabber__37	
mov	[esp+18Ch+Time], esi
call	purple_strequal
test	eax, eax
jz	loc_61C69AD4
mov	[esp+18Ch+var_184], ebp
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+18h]
mov	[esp+18Ch+Str2], eax
mov	ecx, [esp+18Ch+var_158]
mov	[esp+18Ch+Time], ecx
call	jabber_adhoc_got_list
jmp	loc_61C69AD4
align 4
add	ebx, 5
jmp	loc_61C69CFF
			
mov	[esp+18Ch+Str2], ebp
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+3Ch]
mov	[esp+18Ch+Time], eax
call	g_list_append
mov	ecx, [esp+18Ch+var_15C]
mov	[ecx+3Ch], eax
jmp	loc_61C69AD4
xor	esi, esi
mov	ecx, offset byte_61C82DD4
mov	edx, offset byte_61C82DD4
mov	eax, edx
jmp	loc_61C6A715
			
test	ebx, ebx
jz	short loc_61C6AC6B
mov	eax, ebx
xor	esi, esi
mov	ecx, offset byte_61C82DD4
mov	edx, ecx
jmp	loc_61C6A715
mov	eax, [esp+18Ch+var_15C]
mov	dword ptr [eax+4], 6
mov	[esp+18Ch+Str2], offset	aItems 
mov	[esp+18Ch+Time], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C69AD4
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+40h]
mov	esi, edx
mov	[esp+18Ch+Str2], ebx
mov	[esp+18Ch+Time], eax
call	g_list_append
mov	[esi+40h], eax
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_61C6ACC0
jmp	loc_61C69AD4
mov	[esp+18Ch+var_180], edi
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], offset	aAHrefSSA 
mov	eax, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], eax
call	g_string_printf
jmp	loc_61C6A4E1
mov	eax, [ebp+24h]
test	eax, eax
jnz	loc_61C6A0B1
test	esi, esi
jz	short loc_61C6AD18
cmp	dword ptr [ebp+38h], 0
jz	short loc_61C6AD3A
mov	dword ptr [esi+20h], 2
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+38h]
cmp	eax, 2
jz	loc_61C6B215
cmp	eax, 3
jz	loc_61C6B281
cmp	eax, 5
jz	loc_61C6B111
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+18h]
mov	[esp+18Ch+Str2], eax
mov	ebp, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], ebp
call	serv_got_typing_stopped
jmp	loc_61C6A184
mov	edx, [eax+24h]
test	edx, edx
jnz	loc_61C6A29A
mov	[esp+18Ch+Str2], 0FFFFFFFFh
mov	eax, [eax+20h]
mov	[esp+18Ch+Time], eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+18Ch+Time], eax
call	purple_markup_linkify
mov	esi, eax
mov	edx, [ebx+8]
test	edx, edx
jz	loc_61C6B25A
mov	[esp+18Ch+Str2], offset	aSHasSetTheTopi	
mov	[esp+18Ch+Time], offset	aPidgin_10 
mov	[esp+18Ch+var_164], edx
call	libintl_dgettext
mov	[esp+18Ch+var_184], esi
mov	edx, [esp+18Ch+var_164]
mov	[esp+18Ch+Str2], edx
mov	[esp+18Ch+Time], eax
call	g_strdup_printf
mov	edx, eax
mov	eax, [esp+18Ch+var_15C]
mov	ecx, [eax+8]
mov	eax, [edi+18h]
mov	[esp+18Ch+Time], eax
mov	[esp+18Ch+var_164], edx
mov	[esp+18Ch+var_168], ecx
call	purple_conversation_get_chat_data
mov	ecx, [esp+18Ch+var_168]
mov	[esp+18Ch+var_17C], ecx
mov	[esp+18Ch+var_180], 4
mov	edx, [esp+18Ch+var_164]
mov	[esp+18Ch+var_184], edx
mov	[esp+18Ch+Str2], offset	byte_61C82DD4
mov	[esp+18Ch+Time], eax
call	purple_conv_chat_write
mov	[esp+18Ch+Time], ebp
call	g_free
mov	[esp+18Ch+Time], esi
call	g_free
mov	edx, [esp+18Ch+var_164]
mov	[esp+18Ch+Time], edx
call	g_free
mov	eax, [esp+18Ch+var_15C]
mov	esi, [eax+28h]
test	esi, esi
jnz	loc_61C6A29A
cmp	dword ptr [eax+24h], 0
jnz	loc_61C6A29A
jmp	loc_61C6A184
align 4
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aBindingConvers	
mov	[esp+18Ch+Time], offset	aJabber_18 
call	purple_debug_info
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	[esp+18Ch+Time], edi
call	purple_conversation_set_name
jmp	loc_61C6A0FC
mov	[esp+18Ch+var_184], ebx
mov	[esp+18Ch+Str2], 0FFFFFFFFh
mov	eax, [esp+18Ch+var_144]
mov	[esp+18Ch+Time], eax
call	g_string_insert_c
jmp	loc_61C6A9B3
mov	eax, [esp+18Ch+var_158]
jmp	loc_61C6A8A1
mov	[esp+18Ch+var_184], ebx
mov	[esp+18Ch+Str2], 0FFFFFFFFh
mov	eax, [esp+18Ch+var_144]
mov	[esp+18Ch+Time], eax
call	g_string_insert_c
jmp	loc_61C6AB9B
mov	ebx, [eax+24h]
jmp	loc_61C6A348
mov	ebx, offset byte_61C82DD4
jmp	loc_61C6A30C
mov	[esp+18Ch+Time], eax
mov	[esp+18Ch+var_164], eax
call	purple_email_is_valid
test	eax, eax
mov	edx, [esp+18Ch+var_164]
mov	[esp+18Ch+Str2], edx
jz	loc_61C69D68
mov	[esp+18Ch+Time], offset	aSmileyS 
call	g_strdup_printf
mov	edx, eax
mov	[esp+18Ch+Str2], eax
mov	eax, [esp+18Ch+var_144]
mov	[esp+18Ch+Time], eax
mov	[esp+18Ch+var_164], edx
call	g_string_append
mov	[esp+18Ch+var_144], eax
mov	edx, [esp+18Ch+var_164]
mov	[esp+18Ch+Time], edx
call	g_free
mov	[esp+18Ch+var_148], ebx
jmp	loc_61C69D7C
mov	ebp, [edi+1Ch]
test	ebp, ebp
jz	loc_61C6A184
mov	eax, [esp+18Ch+var_15C]
mov	ebp, [eax+8]
test	esi, esi
jz	loc_61C6B23D
mov	eax, [edi+18h]
mov	[esp+18Ch+Time], eax
call	purple_conversation_get_chat_data
mov	[esp+18Ch+var_17C], ebp
mov	[esp+18Ch+var_180], 4
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], offset	byte_61C82DD4
mov	[esp+18Ch+Time], eax
call	purple_conv_chat_write
jmp	loc_61C6A184
mov	esi, [eax+24h]
jmp	loc_61C6A2B4
mov	ebp, [esp+18Ch+var_148]
			
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+28h]
mov	dl, [eax]
test	dl, dl
jnz	short loc_61C6AF8B
jmp	loc_61C69AD4
align 10h
			
inc	eax
mov	dl, [eax]
test	dl, dl
jz	loc_61C69AD4
cmp	dl, 0Ah
jnz	short loc_61C6AF80
mov	byte ptr [eax],	20h
jmp	short loc_61C6AF80
mov	[esp+18Ch+Str2], offset	aDataIsUnknownN	
mov	[esp+18Ch+Time], offset	aJabber_18 
call	purple_debug_info
mov	eax, [esp+18Ch+var_13C]
mov	[esp+18Ch+var_174], eax
mov	[esp+18Ch+var_178], offset sub_61C69178
mov	[esp+18Ch+var_17C], 0
mov	[esp+18Ch+var_180], esi
mov	eax, [esp+18Ch+var_154]
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], edi
mov	edx, [esp+18Ch+var_158]
mov	[esp+18Ch+Time], edx
call	jabber_data_request
jmp	loc_61C69DD8
call	__stack_chk_fail
mov	[esp+18Ch+var_124], 0
mov	[esp+18Ch+Str2], offset	g_str_equal
mov	[esp+18Ch+Time], offset	g_str_hash
call	g_hash_table_new
mov	esi, eax
mov	edx, eax
mov	eax, ebp
call	sub_61C691F0
lea	ecx, [esp+18Ch+var_124]
mov	[esp+18Ch+var_184], ecx
mov	[esp+18Ch+Str2], offset	sub_61C69078
mov	[esp+18Ch+Time], esi
call	g_hash_table_foreach_steal
mov	[esp+18Ch+Time], esi
call	g_hash_table_destroy
mov	eax, [esp+18Ch+var_124]
mov	[esp+18Ch+var_134], eax
mov	[esp+18Ch+Time], eax
call	g_list_length
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], offset	aFoundDSmileys 
mov	[esp+18Ch+Time], offset	aJabber_18 
call	purple_debug_info
cmp	[esp+18Ch+var_134], 0
jz	short loc_61C6B076
mov	edx, [esp+18Ch+var_15C]
mov	eax, [edx+4]
cmp	eax, 2
jz	loc_61C6B2F2
cmp	eax, 1
jbe	loc_61C6B2AD
			
mov	[esp+18Ch+var_13C], 0
			
mov	[esp+18Ch+var_184], offset aUrnXmppBob_1 
mov	[esp+18Ch+Str2], offset	aData_1	
mov	edx, [esp+18Ch+var_14C]
mov	[esp+18Ch+Time], edx
call	xmlnode_get_child_with_namespace
mov	ebx, eax
test	eax, eax
jz	loc_61C69C50
mov	esi, [esp+18Ch+var_150]
mov	[esp+18Ch+var_148], ebp
mov	edi, [esp+18Ch+var_158]
jmp	short loc_61C6B0C0
			
mov	[esp+18Ch+Time], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C6B108
mov	[esp+18Ch+Str2], offset	aCid_2 
mov	[esp+18Ch+Time], ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], edi
call	jabber_data_find_remote_by_cid
test	eax, eax
jnz	short loc_61C6B0B2
test	ebp, ebp
jz	short loc_61C6B0B2
mov	[esp+18Ch+Time], ebx
call	jabber_data_create_from_xml
test	eax, eax
jz	short loc_61C6B0B2
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], edi
call	jabber_data_associate_remote
jmp	short loc_61C6B0B2
mov	ebp, [esp+18Ch+var_148]
jmp	loc_61C69C50
mov	[esp+18Ch+var_184], edi
mov	ecx, [esp+18Ch+var_15C]
mov	eax, [ecx+18h]
mov	[esp+18Ch+Str2], eax
mov	[esp+18Ch+Time], 1
call	purple_find_conversation_with_account
mov	ebp, eax
test	eax, eax
jz	loc_61C6B1F9
mov	eax, [ebx]
test	eax, eax
jz	loc_61C6B1F9
mov	edx, [ebx+4]
test	edx, edx
jz	loc_61C6B1F9
mov	[esp+18Ch+var_17C], edx
mov	[esp+18Ch+var_180], eax
mov	[esp+18Ch+var_184], offset aS@S_2 
mov	[esp+18Ch+Str2], 100h
lea	esi, [esp+18Ch+var_120]
mov	[esp+18Ch+Time], esi
call	g_snprintf
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], edi
call	purple_find_buddy
test	eax, eax
jz	short loc_61C6B1F9
mov	[esp+18Ch+Time], eax
call	purple_buddy_get_alias
mov	[esp+18Ch+Str2], 0FFFFFFFFh
mov	[esp+18Ch+Time], eax
call	g_markup_escape_text
mov	edi, eax
mov	[esp+18Ch+Str2], offset	aSHasLeftTheCon	
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+var_180], edi
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], 100h
mov	[esp+18Ch+Time], esi
call	g_snprintf
mov	[esp+18Ch+Time], edi
call	g_free
mov	[esp+18Ch+Time], 0 
call	time
mov	[esp+18Ch+var_17C], eax
mov	[esp+18Ch+var_180], 4
mov	[esp+18Ch+var_184], esi
mov	[esp+18Ch+Str2], offset	byte_61C82DD4
mov	[esp+18Ch+Time], ebp
call	purple_conversation_write
			
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], edx
call	serv_got_typing_stopped
jmp	loc_61C6A184
mov	[esp+18Ch+var_180], 1
mov	[esp+18Ch+var_184], 0
mov	eax, [edx+18h]
mov	[esp+18Ch+Str2], eax
mov	ecx, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], ecx
call	serv_got_typing
jmp	loc_61C6A184
mov	esi, [eax+24h]
jmp	loc_61C6AF31
mov	eax, [esp+18Ch+var_15C]
cmp	dword ptr [eax+30h], 0
jz	loc_61C6AC7E
xor	esi, esi
jmp	loc_61C69FED
mov	[esp+18Ch+Str2], offset	aTheTopicIsS 
mov	[esp+18Ch+Time], offset	aPidgin_10 
call	libintl_dgettext
mov	[esp+18Ch+Str2], esi
mov	[esp+18Ch+Time], eax
call	g_strdup_printf
mov	edx, eax
jmp	loc_61C6ADB9
mov	[esp+18Ch+var_180], 2
mov	[esp+18Ch+var_184], 0
mov	ebp, [esp+18Ch+var_15C]
mov	eax, [ebp+18h]
mov	[esp+18Ch+Str2], eax
mov	edx, [esp+18Ch+var_160]
mov	[esp+18Ch+Time], edx
call	serv_got_typing
jmp	loc_61C6A184
mov	[esp+18Ch+var_184], ebx
mov	eax, [esp+18Ch+var_154]
mov	[esp+18Ch+Str2], eax
mov	[esp+18Ch+Time], 4
call	purple_find_conversation_with_account
mov	[esp+18Ch+var_13C], eax
test	eax, eax
jnz	loc_61C6B07E
mov	eax, [esp+18Ch+var_154]
mov	[esp+18Ch+var_184], eax
mov	[esp+18Ch+Str2], ebx
mov	[esp+18Ch+Time], 1
call	purple_conversation_new
mov	[esp+18Ch+var_13C], eax
jmp	loc_61C6B07E
mov	eax, [edx+18h]
mov	[esp+18Ch+Time], eax
call	jabber_id_new
mov	ebx, eax
test	eax, eax
jz	loc_61C6B076
mov	eax, [eax+4]
mov	[esp+18Ch+var_184], eax
mov	eax, [ebx]
mov	[esp+18Ch+Str2], eax
mov	ecx, [esp+18Ch+var_158]
mov	[esp+18Ch+Time], ecx
call	jabber_chat_find
test	eax, eax
jz	short loc_61C6B338
mov	eax, [eax+18h]
mov	[esp+18Ch+var_13C], eax
mov	[esp+18Ch+Time], ebx
call	jabber_id_free
jmp	loc_61C6B07E
mov	[esp+18Ch+var_13C], 0
jmp	short loc_61C6B32B
align 4
public jabber_message_send
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aMessage_3 
call	xmlnode_new
mov	esi, eax
mov	eax, [ebx+4]
cmp	eax, 5
ja	short loc_61C6B38D
mov	eax, ds:off_61C832F8[eax*4]
test	eax, eax
jz	short loc_61C6B38D
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aType_10 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
			
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_61C6B3A8
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aId_7 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_11	
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_61C6B3ED
mov	[esp+2Ch+var_28], offset aThread 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+34h]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
cmp	dword ptr [ebx+38h], 5 
ja	short loc_61C6B424 
mov	eax, [ebx+38h]
jmp	ds:off_61C8323C[eax*4] 
align 10h
			
mov	[esp+2Ch+var_28], offset aInactive 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
			
test	eax, eax
jz	short loc_61C6B424 
mov	[esp+2Ch+var_28], offset aHttpJabber__33 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
			
mov	eax, [ebx+20h]	
test	eax, eax
jz	short loc_61C6B452
mov	[esp+2Ch+var_28], offset aSubject_0 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+20h]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
mov	ecx, [ebx+24h]
test	ecx, ecx
jz	short loc_61C6B480
mov	[esp+2Ch+var_28], offset aBody_1 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], 0FFFFFFFFh
mov	edx, [ebx+24h]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_data
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_61C6B4AB
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	xmlnode_from_str
test	eax, eax
jz	loc_61C6B538
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_insert_child
			
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	jabber_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6B558
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	xmlnode_free
align 4
			
mov	[esp+2Ch+var_28], offset aGone_1 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
jmp	loc_61C6B410
align 10h
			
mov	[esp+2Ch+var_28], offset aActive 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
jmp	loc_61C6B410
align 4
			
mov	[esp+2Ch+var_28], offset aComposing 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
jmp	loc_61C6B410
align 10h
			
mov	[esp+2Ch+var_28], offset aPaused 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_new_child
jmp	loc_61C6B410
align 4
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aXhtmlTranslati 
mov	[esp+2Ch+var_2C], offset aJabber_18 
call	purple_debug_error
jmp	loc_61C6B4AB
call	__stack_chk_fail
align 10h
public jabber_message_send_im
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_61C6B70C
test	edx, edx
jz	loc_61C6B70C
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_61C6B6E4
mov	[esp+4Ch+var_4C], edi
call	jabber_get_resource
mov	ebx, eax
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], edi
mov	eax, [ebp+1Ch]
mov	[esp+4Ch+var_4C], eax
call	jabber_buddy_find
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	jabber_buddy_find_resource
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_4C], 44h
call	g_malloc0
mov	ebx, eax
mov	eax, [ebp+1Ch]
mov	[ebx], eax
mov	dword ptr [ebx+4], 1
mov	dword ptr [ebx+38h], 1
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebx+1Ch], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	jabber_get_next_id
mov	[ebx+14h], eax
test	esi, esi
jz	short loc_61C6B627
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_61C6B61D
mov	[ebx+34h], eax
cmp	dword ptr [esi+20h], 1
jz	loc_61C6B710
			
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_utf8_strip_unprintables
mov	edi, eax
lea	eax, [ebx+24h]
mov	[esp+4Ch+var_44], eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_markup_html_to_xhtml
mov	[esp+4Ch+var_4C], edi
call	g_free
lea	edx, [ebx+1Ch]
mov	ecx, [esp+4Ch+var_24]
mov	eax, ebx
call	sub_61C69350
test	eax, eax
jz	short loc_61C6B67E
mov	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_34], eax
call	g_free
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_24], eax
test	esi, esi
jz	short loc_61C6B69D
mov	eax, [esi+34h]
test	eax, eax
jz	short loc_61C6B69D
mov	[esp+4Ch+var_48], offset aHttpJabber__32 
mov	[esp+4Ch+var_4C], esi
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C6B6AD
			
mov	edx, [ebx+24h]
mov	eax, [esp+4Ch+var_24]
call	sub_61C690BC
test	eax, eax
jz	short loc_61C6B71C
			
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_send
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_free
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6B738
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aJabber_message 
mov	[esp+4Ch+var_4C], offset aJabber_18 
call	purple_debug_misc
jmp	loc_61C6B59F
align 4
			
xor	eax, eax
jmp	short loc_61C6B6CE
mov	dword ptr [ebx+38h], 0
jmp	loc_61C6B627
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aHtmlXmlnsHttpJ 
call	g_strdup_printf
mov	[ebx+28h], eax
jmp	loc_61C6B6AD
call	__stack_chk_fail
align 10h
public jabber_message_send_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	ebp, ebp
jz	loc_61C6B858
test	esi, esi
jz	loc_61C6B858
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+1Ch]
mov	[esp+4Ch+var_4C], eax
call	jabber_chat_find_by_id
mov	edi, eax
test	eax, eax
jz	loc_61C6B858
mov	[esp+4Ch+var_4C], 44h
call	g_malloc0
mov	ebx, eax
mov	eax, [esi+1Ch]
mov	[ebx], eax
mov	dword ptr [ebx+4], 2
mov	eax, [edi+8]
mov	[esp+4Ch+var_44], eax
mov	eax, [edi+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS@S_2	
call	g_strdup_printf
mov	[ebx+1Ch], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	jabber_get_next_id
mov	[ebx+14h], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_utf8_strip_unprintables
mov	esi, eax
lea	eax, [ebx+24h]
mov	[esp+4Ch+var_44], eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_markup_html_to_xhtml
mov	[esp+4Ch+var_4C], esi
call	g_free
lea	edx, [ebx+1Ch]
mov	ecx, [esp+4Ch+var_24]
mov	eax, ebx
call	sub_61C69350
test	eax, eax
jz	short loc_61C6B85C
mov	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], eax
call	g_free
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_24], eax
mov	edx, [edi+20h]
test	edx, edx
jnz	short loc_61C6B867
			
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_send
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_free
mov	eax, 1
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6B890
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	eax, eax
jmp	short loc_61C6B843
mov	eax, [esp+4Ch+var_24]
mov	edx, [edi+20h]
test	edx, edx
jz	short loc_61C6B826
mov	edx, [ebx+24h]
call	sub_61C690BC
test	eax, eax
mov	eax, [esp+4Ch+var_24]
jnz	short loc_61C6B826
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aHtmlXmlnsHttpJ 
call	g_strdup_printf
mov	[ebx+28h], eax
mov	eax, [esp+4Ch+var_24]
jmp	short loc_61C6B826
call	__stack_chk_fail
align 4
public jabber_send_typing
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_protocol_data
mov	edi, eax
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	jabber_buddy_find
mov	ebx, eax
test	eax, eax
jz	loc_61C6B96D
mov	[esp+4Ch+var_4C], esi
call	jabber_get_resource
mov	ebp, eax
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_buddy_find_resource
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_34], eax
call	g_free
mov	eax, [esp+4Ch+var_34]
test	eax, eax
jz	loc_61C6B990
cmp	dword ptr [eax+20h], 1
jz	short loc_61C6B96D
mov	[esp+4Ch+var_4C], 44h
call	g_malloc0
mov	ebx, eax
mov	[eax], edi
mov	dword ptr [eax+4], 1
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+1Ch], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	jabber_get_next_id
mov	[ebx+14h], eax
cmp	[esp+4Ch+var_30], 1
jz	short loc_61C6B984
xor	eax, eax
cmp	[esp+4Ch+var_30], 2
setz	al
lea	eax, [eax+eax+1]
mov	[ebx+38h], eax
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_send
mov	[esp+4Ch+var_4C], ebx
call	jabber_message_free
			
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6B998
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword ptr [ebx+38h], 2
jmp	short loc_61C6B95D
align 10h
test	byte ptr [ebx+0Ch], 8
jnz	short loc_61C6B916
jmp	short loc_61C6B96D
call	__stack_chk_fail
align 10h
public jabber_buzz_isenabled
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0E0h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6B9C8
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public jabber_custom_smileys_isenabled
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+64h]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset aCustom_smileys 
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_bool
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6BA15
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	edx, [ebx+18h]
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	eax, [ebx+1Ch]
mov	ecx, edi
sub	ecx, eax
mov	[esp+3Ch+var_34], ecx
add	edx, eax
mov	[esp+3Ch+var_38], edx
mov	eax, [esi+30h]
mov	[esp+3Ch+var_3C], eax
call	wpurple_write
mov	ebp, eax
test	eax, eax
js	short loc_61C6BAA8
add	ebp, [ebx+1Ch]
mov	[ebx+1Ch], ebp
cmp	edi, ebp
jz	short loc_61C6BA88
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BADB
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	purple_input_remove
mov	eax, [ebx+18h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+18h], 0
jmp	short loc_61C6BA72
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C6BA72
mov	[esp+3Ch+var_38], offset aWriteErrorOnOo 
mov	[esp+3Ch+var_3C], offset aJabber_19 
call	purple_debug_error
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	purple_input_remove
mov	[esp+3Ch+var_3C], esi
call	purple_xfer_cancel_local
jmp	short loc_61C6BA68
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, [ebx+7Ch]
mov	eax, [esi+18h]
test	eax, eax
jz	short loc_61C6BB4C
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_61C6BA1C
mov	[esp+2Ch+var_28], 2
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[esi+20h], eax
mov	[esp+2Ch+var_24], 2
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	sub_61C6BA1C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BB71
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esi]
mov	[esp+2Ch+var_24], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aGetSHttp1_1Hos 
call	g_strdup_printf
mov	[esi+18h], eax
mov	dword ptr [esi+1Ch], 0
jmp	short loc_61C6BAFE
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 82Ch
mov	ebp, [esp+83Ch+arg_0]
mov	ebx, [esp+83Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+83Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx+7Ch]
mov	[esp+83Ch+var_834], 800h
lea	edi, [esp+83Ch+var_820]
mov	[esp+83Ch+SubStr], edi
mov	eax, [ebx+30h]
mov	[esp+83Ch+Str],	eax
call	wpurple_read
test	eax, eax
jle	loc_61C6BCA4
mov	[esp+83Ch+var_834], eax
mov	[esp+83Ch+SubStr], edi
mov	eax, [esi+0Ch]
mov	[esp+83Ch+Str],	eax
call	g_string_append_len
mov	[esi+0Ch], eax
mov	[esp+83Ch+SubStr], offset asc_61C83353 
mov	eax, [eax]
mov	[esp+83Ch+Str],	eax 
call	strstr
mov	edi, eax
test	eax, eax
jz	short loc_61C6BC45
mov	byte ptr [eax],	0
mov	[esp+83Ch+SubStr], offset aContentLengt_0 
mov	eax, [esi+0Ch]
mov	eax, [eax]
mov	[esp+83Ch+Str],	eax 
call	strstr
test	eax, eax
jz	short loc_61C6BC74
lea	edx, [esp+83Ch+var_824]
mov	[esp+83Ch+var_834], edx
mov	[esp+83Ch+SubStr], offset aContentLengthU 
mov	[esp+83Ch+Str],	eax 
call	sscanf
dec	eax
jz	short loc_61C6BC64
mov	[esp+83Ch+SubStr], offset aUnableToParseC 
mov	[esp+83Ch+Str],	offset aJabber_19 
call	purple_debug_error
mov	[esp+83Ch+Str],	ebx
call	purple_xfer_cancel_local
			
xor	eax, eax
mov	edx, [esp+83Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6BCBB
add	esp, 82Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+83Ch+var_824]
mov	[esp+83Ch+SubStr], eax
mov	[esp+83Ch+Str],	ebx
call	purple_xfer_set_size
mov	[esp+83Ch+SubStr], 0
mov	[esp+83Ch+Str],	ebx
call	purple_xfer_set_read_fnc
add	edi, 4
mov	[esp+83Ch+Str],	edi
call	g_strdup
mov	[ebp+0], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	eax, [ecx-1]
jmp	short loc_61C6BC47
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C6BC45
mov	[esp+83Ch+SubStr], offset aReadErrorOnOob 
jmp	loc_61C6BC31
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+868h+var_84C], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	edi, [ebx+14h]
mov	[esp+868h+var_864], esi
mov	eax, [edi+48h]
mov	[esp+868h+var_868], eax
call	g_list_remove
mov	[edi+48h], eax
mov	[esp+868h+var_864], 1
mov	eax, [ebx+0Ch]
mov	[esp+868h+var_868], eax
call	g_string_free
mov	eax, [ebx]
mov	[esp+868h+var_868], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+868h+var_868], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+868h+var_868], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+868h+var_868], eax
call	g_free
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_61C6BD38
mov	[esp+868h+var_868], eax
call	purple_input_remove
mov	[esp+868h+var_868], ebx
call	g_free
mov	dword ptr [esi+7Ch], 0
mov	eax, [esp+868h+var_84C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BD5A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, eax
mov	[esp+8B4h+var_898], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+8B4h+var_888], eax
xor	eax, eax
mov	esi, [ebp+7Ch]
mov	[esp+8B4h+var_8B0], 3
mov	eax, [esi+14h]
mov	[esp+8B4h+var_8B4], eax
call	jabber_iq_new
mov	ebx, eax
mov	eax, [ebp+0Ch]
mov	[esp+8B4h+var_8AC], eax
mov	[esp+8B4h+var_8B0], offset aTo_12 
mov	eax, [ebx+8]
mov	[esp+8B4h+var_8B4], eax
call	xmlnode_set_attrib
mov	eax, [esi+10h]
mov	[esp+8B4h+var_8B0], eax
mov	[esp+8B4h+var_8B4], ebx
call	jabber_iq_set_id
mov	[esp+8B4h+var_8B0], offset aError_7 
mov	eax, [ebx+8]
mov	[esp+8B4h+var_8B4], eax
call	xmlnode_new_child
mov	edx, eax
mov	eax, [esp+8B4h+var_898]
mov	[esp+8B4h+var_8AC], eax
mov	[esp+8B4h+var_8B0], offset aCode_5 
mov	[esp+8B4h+var_8B4], edx
mov	[esp+8B4h+var_89C], edx
call	xmlnode_set_attrib
mov	edi, offset a406 
mov	ecx, 4
mov	esi, [esp+8B4h+var_898]
repe cmpsb
mov	edx, [esp+8B4h+var_89C]
jz	short loc_61C6BE78
mov	edi, offset a404_0 
mov	ecx, 4
mov	esi, [esp+8B4h+var_898]
repe cmpsb
jz	short loc_61C6BE34
mov	[esp+8B4h+var_8B4], ebx
call	jabber_iq_send
mov	eax, [esp+8B4h+var_888]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BE94
mov	eax, ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C6BCC0
mov	[esp+8B4h+var_8B0], offset aNotFound 
mov	[esp+8B4h+var_8B4], edx
mov	[esp+8B4h+var_89C], edx
call	xmlnode_new_child
mov	esi, eax
mov	[esp+8B4h+var_8AC], offset aCancel_7 
mov	[esp+8B4h+var_8B0], offset aType_11 
mov	edx, [esp+8B4h+var_89C]
mov	[esp+8B4h+var_8B4], edx
call	xmlnode_set_attrib
mov	[esp+8B4h+var_8B0], offset aUrnIetfPara_12 
mov	[esp+8B4h+var_8B4], esi
call	xmlnode_set_namespace
jmp	short loc_61C6BE12
mov	[esp+8B4h+var_8B0], offset aNotAcceptabl_1 
mov	[esp+8B4h+var_8B4], edx
call	xmlnode_new_child
mov	esi, eax
mov	[esp+8B4h+var_8AC], offset aModify_2 
jmp	short loc_61C6BE52
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6BEC8
mov	edx, offset a404_0 
add	esp, 1Ch
jmp	loc_61C6BD60
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6BEFC
mov	edx, offset a406 
add	esp, 1Ch
jmp	loc_61C6BD60
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edi, [esi+7Ch]
mov	[esp+2Ch+var_28], 2
mov	eax, [edi+14h]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTo_12	
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [edi+10h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_id
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BF7B
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_61C6BCC0
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [eax+7Ch]
mov	ecx, [edx+4]
mov	[esp+2Ch+var_20], ecx
mov	edx, [edx]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_start
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6BFC3
add	esp, 2Ch
retn
call	__stack_chk_fail
public jabber_oob_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, [esp+5Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	edx, [esp+5Ch+arg_8]
test	edx, edx
jnz	loc_61C6C180
test	esi, esi
jz	loc_61C6C180
mov	[esp+5Ch+var_58], offset aUrl_1	
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6C180
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_5C], 24h
call	g_malloc0
mov	ebx, eax
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
lea	eax, [eax+8]
mov	[esp+5Ch+var_50], eax
lea	eax, [ebx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_url_parse
test	eax, eax
jz	loc_61C6C194
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[ebx+14h], edi
mov	[esp+5Ch+var_5C], offset byte_61C83421
call	g_string_new
mov	[ebx+0Ch], eax
mov	[esp+5Ch+var_5C], ebp
call	g_strdup
mov	[ebx+10h], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], 2
mov	eax, [edi+64h]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_5C], eax
call	purple_xfer_new
mov	esi, eax
test	eax, eax
jz	loc_61C6C180
mov	[eax+7Ch], ebx
mov	[esp+5Ch+var_58], offset asc_61C83422 
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	g_strrstr
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	ebp, eax
test	eax, eax
jz	loc_61C6C1B4
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_filename
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	[esp+5Ch+var_58], offset sub_61C6BF80
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_init_fnc
mov	[esp+5Ch+var_58], offset sub_61C6BF04
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_end_fnc
mov	[esp+5Ch+var_58], offset sub_61C6BED0
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_request_denied_fnc
mov	[esp+5Ch+var_58], offset sub_61C6BE9C
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_cancel_recv_fnc
mov	[esp+5Ch+var_58], offset sub_61C6BB78
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_read_fnc
mov	[esp+5Ch+var_58], offset sub_61C6BAE0
mov	[esp+5Ch+var_5C], esi
call	purple_xfer_set_start_fnc
mov	[esp+5Ch+var_58], esi
mov	eax, [edi+48h]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	[edi+48h], eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6C1C6
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_request
align 10h
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C1C6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6C1C6
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	ebp, eax
jmp	loc_61C6C0DC
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+98h+var_58]
mov	ebx, [esp+98h+var_54]
mov	eax, ds:__stack_chk_guard
mov	[esp+98h+Str], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
cmp	eax, 1
jz	short loc_61C6C238
cmp	eax, 3
jz	short loc_61C6C25C
mov	edx, [ebx+8]
mov	ecx, [ebx+4]
test	edx, edx
jz	short loc_61C6C273
mov	[esp+98h+var_80], edx
mov	[esp+98h+var_84], eax
mov	[esp+98h+var_88], ecx
mov	eax, [ebx]
mov	[esp+98h+var_8C], eax
mov	[esp+98h+var_90], esi
mov	[esp+98h+var_94], offset aXmlParserError 
mov	[esp+98h+var_98], offset aJabber_20 
call	purple_debug_error
			
mov	eax, [esp+98h+Str]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C27A
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_61C6C270
mov	[esp+98h+var_94], offset aXmlnsUriVcardT 
mov	[esp+98h+var_98], edx
call	g_str_equal
test	eax, eax
jnz	short loc_61C6C225
mov	eax, [ebx+0Ch]
cmp	eax, 3
jnz	short loc_61C6C1F1
nop
mov	ecx, [ebx+4]
cmp	ecx, 5
jz	short loc_61C6C225
mov	edx, [ebx+8]
mov	eax, 3
jmp	short loc_61C6C1F7
align 10h
mov	ecx, [ebx+4]
mov	edx, offset aNull_2 
jmp	short loc_61C6C1FB
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+0C4h+var_94]
mov	edx, [esp+0C4h+var_90]
mov	eax, ds:__stack_chk_guard
mov	[esp+0C4h+var_A8], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_61C6C2B7
mov	ecx, [eax+14h]
test	ecx, ecx
jz	short loc_61C6C2D4
mov	[esp+0C4h+var_C0], edx
mov	eax, [eax]
mov	[esp+0C4h+var_C4], eax
call	xmlStrcmp
test	eax, eax
jz	short loc_61C6C2C8
			
mov	eax, [esp+0C4h+var_A8]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C301
add	esp, 28h
pop	ebx
retn
mov	eax, [ebx+0Ch]
mov	eax, [eax+14h]
mov	[ebx+0Ch], eax
jmp	short loc_61C6C2B7
align 4
mov	[esp+0C4h+var_AC], eax
mov	dword ptr [ebx+0Ch], 0
lea	eax, [esp+0C4h+var_AC]
mov	[esp+0C4h+var_C0], eax
mov	[esp+0C4h+var_C4], ebx
call	jabber_process_packet
mov	eax, [esp+0C4h+var_AC]
test	eax, eax
jz	short loc_61C6C2B7
mov	[esp+0C4h+var_C4], eax
call	xmlnode_free
jmp	short loc_61C6C2B7
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+130h+var_C0]
mov	[esp+130h+var_F8], edx
mov	edx, [esp+130h+var_BC]
mov	ebp, [esp+130h+var_B8]
mov	edi, [esp+130h+var_B4]
mov	esi, [esp+130h+var_B0]
mov	ebx, [esp+130h+var_AC]
mov	ecx, [esp+130h+var_A8]
mov	[esp+130h+var_104], ecx
mov	ecx, [esp+130h+var_A0]
mov	[esp+130h+var_F4], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+130h+var_E4], eax
xor	eax, eax
test	edx, edx
jz	loc_61C6C44F
mov	ecx, [esp+130h+var_F8]
mov	eax, [ecx+1Ch]
test	eax, eax
jz	loc_61C6C519
mov	ecx, [esp+130h+var_F8]
mov	eax, [ecx+0Ch]
test	eax, eax
jz	loc_61C6C508
mov	[esp+130h+var_12C], edx
mov	[esp+130h+var_130], eax
call	xmlnode_new_child
mov	[esp+130h+var_100], eax
mov	[esp+130h+var_12C], edi
mov	eax, [esp+130h+var_100]
mov	[esp+130h+var_130], eax
call	xmlnode_set_namespace
mov	[esp+130h+var_12C], ebp
mov	eax, [esp+130h+var_100]
mov	[esp+130h+var_130], eax
call	xmlnode_set_prefix
test	esi, esi
jnz	loc_61C6C468
			
mov	edx, [esp+2Ch]
lea	edx, [edx+edx*4]
mov	[esp+140h+var_10C], edx
test	edx, edx
jle	loc_61C6C444
mov	ebx, [esp+140h+var_104]
mov	dword ptr [esp+2Ch], 0
nop
mov	edi, [ebx]
mov	edx, [ebx+4]
mov	ebp, [ebx+8]
mov	ecx, [ebx+0Ch]
mov	eax, [ebx+10h]
sub	eax, ecx
mov	[esp+4], eax
mov	[esp+0], ecx
mov	[esp+24h], edx
call	g_strndup
mov	[esp+0], eax
mov	[esp+28h], eax
call	purple_unescape_text
mov	esi, eax
mov	ecx, [esp+28h]
mov	[esp+0], ecx
call	g_free
mov	[esp+140h+var_130], esi
mov	edx, [esp+24h]
mov	[esp+0Ch], edx
mov	[esp+8], ebp
mov	[esp+4], edi
mov	eax, [esp+30h]
mov	[esp+0], eax
call	xmlnode_set_attrib_full
mov	[esp+0], esi
call	g_free
add	dword ptr [esp+2Ch], 5
add	ebx, 14h
mov	edx, [esp+140h+var_10C]
cmp	[esp+2Ch], edx
jl	short loc_61C6C3D0
mov	eax, [esp+30h]
mov	ecx, [esp+38h]
mov	[ecx+0Ch], eax
			
mov	ecx, [esp+140h+var_F4]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C6C75A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+130h+var_124], offset g_free
mov	[esp+130h+var_128], offset g_free
mov	[esp+130h+var_12C], offset g_str_equal
mov	[esp+130h+var_130], offset g_str_hash
call	g_hash_table_new_full
mov	edx, [esp+130h+var_100]
mov	[edx+28h], eax
test	esi, esi
jle	loc_61C6C3B0
shl	esi, 1
mov	[esp+130h+var_FC], esi
xor	esi, esi
jmp	short loc_61C6C4E2
align 4
mov	[esp+0], eax
call	g_strdup
mov	ebp, eax
test	edi, edi
jz	short loc_61C6C500
			
mov	[esp+0], edi
call	g_strdup
mov	[esp+8], ebp
mov	[esp+4], eax
mov	ecx, [esp+30h]
mov	eax, [ecx+28h]
mov	[esp+0], eax
call	g_hash_table_insert
add	esi, 2
cmp	esi, [esp+34h]
jz	loc_61C6C3B0
mov	edi, [ebx+esi*4]
mov	eax, [ebx+esi*4+4]
test	eax, eax
jnz	short loc_61C6C4A8
mov	eax, offset byte_61C834A2
mov	[esp+0], eax
call	g_strdup
mov	ebp, eax
test	edi, edi
jnz	short loc_61C6C4B6
mov	edi, offset byte_61C834A2
jmp	short loc_61C6C4B6
align 4
mov	[esp+130h+var_130], edx
call	xmlnode_new
mov	[esp+130h+var_100], eax
jmp	loc_61C6C388
mov	[esp+130h+var_12C], offset aStream 
mov	[esp+130h+var_130], edx
mov	[esp+130h+var_10C], edx
call	xmlStrcmp
test	eax, eax
mov	edx, [esp+130h+var_10C]
jnz	loc_61C6C65B
mov	[esp+130h+var_12C], offset aHttpEtherx_j_0 
mov	[esp+130h+var_130], edi
mov	[esp+130h+var_10C], edx
call	xmlStrcmp
test	eax, eax
mov	edx, [esp+130h+var_10C]
jnz	loc_61C6C65B
mov	edx, [esp+130h+var_F8]
mov	byte ptr [edx+10h], 0
mov	byte ptr [edx+11h], 9
mov	ecx, [esp+130h+var_104]
lea	edi, [ecx+ecx*4]
xor	ebx, ebx
test	edi, edi
jle	loc_61C6C6C5
mov	ebp, [esp+130h+var_F8]
mov	[esp+130h+var_104], edi
mov	edi, [esp+130h+var_F4]
jmp	short loc_61C6C601
mov	[esp+130h+var_12C], 2Eh	
mov	[esp+130h+var_130], esi	
call	strchr
mov	[esp+130h+var_130], esi	
mov	[esp+28h], eax
call	atoi
mov	dl, al
mov	[ebp+10h], al
mov	ecx, [esp+28h]
test	ecx, ecx
jz	loc_61C6C6BE
inc	ecx
mov	[esp+130h+var_130], ecx	
call	atoi
mov	dl, [ebp+10h]
mov	[ebp+11h], al
cmp	dl, 1
ja	loc_61C6C70F
test	dl, dl
jnz	short loc_61C6C5EC
cmp	al, 9
jz	short loc_61C6C5EC
mov	[esp+130h+var_128], esi
mov	[esp+130h+var_12C], offset aTreatingVersio 
mov	[esp+130h+var_130], offset aJabber_20 
call	purple_debug_warning
lea	esi, [esi+0]
			
mov	[esp+130h+var_130], esi
call	g_free
add	ebx, 5
cmp	ebx, [esp+130h+var_104]
jge	loc_61C6C6C5
mov	edx, [edi+ebx*4+0Ch]
mov	eax, [edi+ebx*4+10h]
sub	eax, edx
mov	[esp+130h+var_12C], eax
mov	[esp+130h+var_130], edx
call	g_strndup
mov	esi, eax
mov	[esp+130h+var_12C], offset aVersion_2 
mov	eax, [edi+ebx*4]
mov	[esp+130h+var_130], eax
call	xmlStrcmp
test	eax, eax
jz	loc_61C6C584
mov	[esp+130h+var_12C], offset aId_8 
mov	eax, [edi+ebx*4]
mov	[esp+130h+var_130], eax
call	xmlStrcmp
test	eax, eax
jnz	short loc_61C6C5EC
mov	eax, [ebp+1Ch]
mov	[esp+130h+var_130], eax
call	g_free
mov	[ebp+1Ch], esi
jmp	short loc_61C6C5F4
			
mov	[esp+130h+var_124], edi
mov	[esp+130h+var_128], edx
mov	[esp+130h+var_12C], offset aExpectingStrea 
mov	[esp+130h+var_130], offset aJabber_20 
call	purple_debug_error
mov	[esp+130h+var_12C], offset aXmppStreamHead 
mov	[esp+130h+var_130], offset aPidgin_11 
call	libintl_dgettext
mov	edx, [esp+130h+var_E4]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C6C75A
mov	[esp+130h+var_B8], eax
mov	[esp+130h+var_BC], 3
mov	ecx, [esp+130h+var_F8]
mov	eax, [ecx+64h]
mov	[esp+130h+var_C0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_connection_error_reason
xor	eax, eax
jmp	loc_61C6C5BD
			
mov	edx, [esp+130h+var_F8]
mov	ebx, [edx+1Ch]
test	ebx, ebx
jnz	loc_61C6C44F
mov	[esp+130h+var_130], offset byte_61C834A2
call	g_strdup
mov	edx, [esp+130h+var_F8]
mov	[edx+1Ch], eax
mov	ecx, [esp+130h+var_E4]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C6C75A
mov	[esp+130h+var_BC], offset aServerFailedTo 
mov	[esp+130h+var_C0], offset aJabber_20 
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_info
mov	[esp+130h+var_12C], offset aXmppVersionMis 
mov	[esp+130h+var_130], offset aPidgin_11 
call	libintl_dgettext
mov	[esp+130h+var_128], eax
mov	[esp+130h+var_12C], 3
mov	ecx, [esp+130h+var_F8]
mov	eax, [ecx+64h]
mov	[esp+130h+var_130], eax
call	purple_connection_error_reason
mov	eax, [esp+130h+var_E4]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C75A
mov	[esp+130h+var_C0], esi
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_61C6C78A
test	edx, edx
jz	short loc_61C6C78A
test	ecx, ecx
jnz	short loc_61C6C79C
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C7BD
add	esp, 18h
pop	ebx
retn
align 4
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_61C6C7BD
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	xmlnode_insert_data
			
call	__stack_chk_fail
align 4
public jabber_parser_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C6C810
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	xmlParseChunk
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlFreeParserCtxt
mov	dword ptr [ebx+8], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6C821
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_parser_setup
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6C853
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	jabber_parser_free
call	__stack_chk_fail
public jabber_parser_process
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ecx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+8]
test	eax, eax
jz	loc_61C6C940
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	xmlParseChunk
mov	esi, eax
test	eax, eax
jnz	short loc_61C6C900
			
cmp	word ptr [ebx+10h], 900h
jz	short loc_61C6C8BC
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6CA1D
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+64h]
mov	eax, [eax+2Ch]
test	eax, eax
jnz	short loc_61C6C8A5
mov	eax, [ebx+20h]
sub	eax, 2
cmp	eax, 1
ja	short loc_61C6C8A5
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], ebx
call	jabber_stream_set_state
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6CA1D
mov	[esp+3Ch+arg_0], ebx
add	esp, 34h
pop	ebx
pop	esi
jmp	jabber_auth_start_old
align 10h
mov	eax, [ebx+8]
mov	[esp+3Ch+var_3C], eax
call	xmlCtxtGetLastError
test	eax, eax
jz	loc_61C6C9E0
mov	eax, [eax+0Ch]
cmp	eax, 1
jz	loc_61C6C9E0
jnb	short loc_61C6C988
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aXmlparsechunkR 
mov	[esp+3Ch+var_3C], offset aJabber_20 
call	purple_debug_info
jmp	loc_61C6C89D
align 10h
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], ecx
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], offset dword_61C7A0C0
call	xmlCreatePushParserCtxt
mov	[ebx+8], eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset byte_61C834A2
mov	[esp+3Ch+var_3C], eax
call	xmlParseChunk
jmp	loc_61C6C89D
cmp	eax, 2
jz	short loc_61C6CA00
cmp	eax, 3
jnz	loc_61C6C89D
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aXmlparsechun_0 
mov	[esp+3Ch+var_3C], offset aJabber_20 
call	purple_debug_error
mov	[esp+3Ch+var_38], offset aXmlParseError	
mov	[esp+3Ch+var_3C], offset aPidgin_11 
call	libintl_dgettext
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx+64h]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_error_reason
jmp	loc_61C6C89D
align 10h
			
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aXmlparsechun_1 
mov	[esp+3Ch+var_3C], offset aJabber_20 
call	purple_debug_warning
jmp	loc_61C6C89D
align 10h
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aXmlparsechun_2 
mov	[esp+3Ch+var_3C], offset aJabber_20 
call	purple_debug_error
jmp	loc_61C6C89D
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+40h]
mov	esi, [esp+44h]
mov	eax, [esp+50h]
mov	edx, [esp+54h]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch], ecx
xor	ecx, ecx
cmp	dword ptr [esp+48h], 2
jz	short loc_61C6CA70
xor	eax, eax
mov	ecx, [esp+2Ch]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C6CAAA
mov	[esp+48h], eax
mov	[esp+44h], esi
mov	[esp+40h], ebx
add	esp, 34h
pop	ebx
pop	esi
jmp	edx
align 10h
mov	dword ptr [esp+8], offset aHttpJabber__38 
mov	dword ptr [esp+4], offset aPubsub 
mov	[esp], eax
mov	[esp+1Ch], edx
call	xmlnode_get_child_with_namespace
test	eax, eax
mov	edx, [esp+1Ch]
jz	short loc_61C6CA4C
mov	dword ptr [esp+4], offset aItems_0 
mov	[esp], eax
call	xmlnode_get_child
mov	edx, [esp+1Ch]
jmp	short loc_61C6CA4E
call	__stack_chk_fail
align 10h
public jabber_pep_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C98D80
test	eax, eax
jz	short loc_61C6CAD8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CB24
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C98D80, eax
call	jabber_avatar_init
call	jabber_mood_init
call	jabber_tune_init
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CB24
add	esp, 2Ch
jmp	jabber_nick_init
			
call	__stack_chk_fail
align 4
public jabber_pep_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C98D80
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C98D80, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CB61
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_pep_init_actions
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6CB93
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	jabber_nick_init_action
call	__stack_chk_fail
public jabber_pep_register_handler
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], offset aSNotify 
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_28], 0 
mov	[esp+2Ch+var_2C], eax 
call	jabber_add_feature
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_61C98D80
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_replace
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CC0B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public jabber_pep_request_item
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	edi, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 1
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	jabber_iq_new
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	short loc_61C6CC6B
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aTo_13	
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aPubsub 
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aHttpJabber__38 
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_48], offset aItems_0 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aNode_4 
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], eax
call	xmlnode_set_attrib
test	esi, esi
mov	eax, [esp+4Ch+var_30]
jz	short loc_61C6CD1C
mov	[esp+4Ch+var_48], offset aItem_5 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aId_9 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset loc_61C6CA24
mov	[esp+4Ch+var_4C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CD36
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	[esp+4Ch+var_44], offset a1 
mov	[esp+4Ch+var_48], offset aMax_items 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
jmp	short loc_61C6CCEA
call	__stack_chk_fail
align 4
public jabber_pep_namespace_only_when_pep_enabled_cb
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0DCh]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6CD64
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public jabber_handle_event
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
cmp	dword ptr [edi+4], 6
jz	short loc_61C6CD9C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CE0D
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [edi+18h]
mov	[esp+3Ch+var_3C], eax
call	jabber_get_bare_jid
mov	ebp, eax
mov	ebx, [edi+40h]
test	ebx, ebx
jz	short loc_61C6CDF1
mov	esi, [ebx]
mov	[esp+3Ch+var_38], offset aNode_4 
mov	[esp+3Ch+var_3C], esi
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C6CDEA
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_61C98D80
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_61C6CDEA
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebp
mov	edx, [edi]
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C6CDB0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CE0D
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
align 4
public jabber_pep_delete_node
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	loc_61C6CEEC
mov	edx, [eax+0DCh]
test	edx, edx
jnz	short loc_61C6CE74
mov	[esp+2Ch+var_24], offset aJsPep	
mov	[esp+2Ch+var_28], offset aJabber_pep_del 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6CF0D
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	esi, eax
mov	[esp+2Ch+var_28], offset aPubsub 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+2Ch+var_28], offset aHttpJabber__39 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_28], offset aDelete 
mov	[esp+2Ch+var_2C], edi
call	xmlnode_new_child
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aNode_4 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6CF0D
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
align 4
mov	[esp+2Ch+var_24], offset aNodeNull_0 
mov	[esp+2Ch+var_28], offset aJabber_pep_del 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_61C6CE5C
			
call	__stack_chk_fail
align 4
public jabber_pep_publish
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	dword ptr [eax+0DCh], 1
jz	short loc_61C6CF54
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6CFBA
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	xmlnode_free
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	edi, eax
mov	[esp+2Ch+var_2C], offset aPubsub 
call	xmlnode_new
mov	esi, eax
mov	[esp+2Ch+var_28], offset aHttpJabber__38 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	xmlnode_insert_child
mov	[esp+2Ch+var_28], esi
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_insert_child
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6CFBA
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
			
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+114h]
test	eax, eax
jz	short loc_61C6CFEF
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+114h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D000
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
cmp	[esp+1Ch+arg_8], 2
jz	short loc_61C6D044
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D068
mov	[esp+1Ch+arg_4], offset	aPingNotSupport	
mov	[esp+1Ch+arg_0], offset	aJabber_21 
add	esp, 1Ch
jmp	purple_debug_info
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D068
mov	[esp+1Ch+arg_4], offset	aPong 
mov	[esp+1Ch+arg_0], offset	aJabber_21 
add	esp, 1Ch
jmp	purple_debug_info
			
call	__stack_chk_fail
align 10h
public jabber_ping_parse
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	[esp+2Ch+arg_8], 1
jz	short loc_61C6D0A8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6D107
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	edi, eax
test	ebx, ebx
jz	short loc_61C6D0D5
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aTo_14	
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aId_10	
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D107
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_iq_send
			
call	__stack_chk_fail
public jabber_keepalive_ping
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aPing_1 
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], offset aUrnXmppPing_2	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C6CFC0
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D185
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_ping_jid
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_iq_new
mov	ebx, eax
test	esi, esi
jz	short loc_61C6D1D1
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aTo_14	
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], offset aPing_1 
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_28], offset aUrnXmppPing_2	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_namespace
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C6D008
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_set_callback
mov	[esp+2Ch+var_2C], ebx
call	jabber_iq_send
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6D22B
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_8]
mov	eax, [esp+1Ch+arg_4]
mov	[eax+24h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D259
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+38h]
mov	[esp], eax
call	g_free
mov	[esp], esi
call	xmlnode_get_data
mov	[ebx+38h], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D2A0
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+2Ch]
mov	[esp], eax
call	g_free
mov	[esp], esi
call	xmlnode_get_data
mov	[ebx+2Ch], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D2E8
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], offset aPhoto_1 
mov	eax, [esp+38h]
mov	[esp], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C6D338
mov	[esp], eax
call	xmlnode_get_data
mov	esi, eax
mov	eax, [ebx+34h]
mov	[esp], eax
call	g_free
test	esi, esi
jz	short loc_61C6D34C
mov	[ebx+34h], esi
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D35C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [esp], offset	byte_61C837A6
call	g_strdup
mov	esi, eax
jmp	short loc_61C6D335
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], offset aSeconds_2 
mov	eax, [esp+38h]
mov	[esp], eax
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	short loc_61C6D3A1
mov	[esp], eax
call	atoi
mov	[esi+44h], eax
test	eax, eax
js	short loc_61C6D3B4
			
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D3D5
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+8], ebx
mov	dword ptr [esp+4], offset aReceivedBogusI 
mov	dword ptr [esp], offset	aJabber_22 
call	purple_debug_warning
mov	dword ptr [esi+44h], 0
jmp	short loc_61C6D3A1
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [edi+18h]
test	eax, eax
jz	loc_61C6D4C0
mov	edx, [eax+18h]
test	edx, edx
jz	loc_61C6D4B4
mov	[esp+3Ch+var_38], offset aStatus_2 
mov	[esp+3Ch+Str], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C6D444
jmp	short loc_61C6D48C
mov	[esp+3Ch+var_38], eax
mov	eax, [edi+1Ch]
mov	[esp+3Ch+Str], eax
call	g_slist_prepend
mov	[edi+1Ch], eax
mov	[esp+3Ch+Str], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C6D48C
			
mov	[esp+3Ch+var_38], offset aCode_6 
mov	[esp+3Ch+Str], ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	short loc_61C6D436
mov	[esp+3Ch+Str], eax 
call	atoi
test	eax, eax
jg	short loc_61C6D424
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aIgnoringBogusS 
mov	[esp+3Ch+Str], offset aJabber_22 
call	purple_debug_warning
mov	[esp+3Ch+Str], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_61C6D444
			
mov	[esp+3Ch+var_38], offset aItem_6 
mov	[esp+3Ch+Str], ebp
call	xmlnode_get_child
mov	[edi+20h], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D4E8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword ptr [eax+1Ch], 1
jmp	loc_61C6D40C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D4E8
mov	[esp+3Ch+arg_4], offset	aIgnoringMucGlo	
mov	[esp+3Ch+arg_0], offset	aJabber_22 
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_warning
			
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aStamp_0 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_attrib
mov	dword ptr [ebx+3Ch], 1
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	purple_str_to_time
mov	[ebx+40h], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D55A
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_61C6D717
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+SubStr], esi
mov	[esp+5Ch+Str], ebx
call	jabber_buddy_find
mov	[esp+5Ch+SubStr], eax
mov	eax, [ebx+78h]
mov	[esp+5Ch+Str], eax
call	g_slist_remove
mov	[ebx+78h], eax
mov	[esp+5Ch+SubStr], offset aVcard_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jz	loc_61C6D73C
mov	[esp+5Ch+SubStr], offset aFn_0 
mov	[esp+5Ch+Str], edi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6D734
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	ebp, eax
mov	[esp+5Ch+SubStr], offset aNickname_2 
mov	[esp+5Ch+Str], edi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C6D650
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Str], esi
call	jabber_get_bare_jid
mov	[esp+5Ch+var_30], eax
mov	ecx, [esp+5Ch+var_34]
test	ecx, ecx
jz	short loc_61C6D644
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+SubStr], eax 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax 
call	strstr
test	eax, eax
jz	loc_61C6D760
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	g_free
			
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	g_free
test	ebp, ebp
jz	short loc_61C6D66F
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+SubStr], esi
mov	eax, [ebx+64h]
mov	[esp+5Ch+Str], eax
call	serv_got_alias
mov	[esp+5Ch+Str], ebp
call	g_free
mov	[esp+5Ch+SubStr], offset aPhoto_2 
mov	[esp+5Ch+Str], edi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6D717
mov	[esp+5Ch+var_24], 0
mov	[esp+5Ch+SubStr], offset aBinval_0 
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6D72C
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_61C6D72C
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], edi
call	purple_base64_decode
mov	ebp, eax
mov	[esp+5Ch+Str], edi
call	g_free
test	ebp, ebp
jz	short loc_61C6D72C
mov	[esp+5Ch+var_54], offset aSha1_6 
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Str], ebp
call	jabber_calculate_data_hash
mov	edi, eax
mov	[esp+5Ch+var_4C], edi
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+SubStr], esi
mov	eax, [ebx+64h]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+Str], eax
call	purple_buddy_icons_set_for_user
mov	[esp+5Ch+Str], edi
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D771
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	edi, edi
xor	ebp, ebp
jmp	short loc_61C6D6ED
align 4
xor	ebp, ebp
jmp	loc_61C6D5E8
align 4
mov	[esp+5Ch+var_54], offset aVcardTemp_0 
mov	[esp+5Ch+SubStr], offset aQuery_12 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child_with_namespace
mov	edi, eax
test	eax, eax
jnz	loc_61C6D5C6
jmp	short loc_61C6D717
mov	[esp+5Ch+Str], ebp
call	g_free
mov	ebp, [esp+5Ch+var_34]
jmp	loc_61C6D644
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Val], 2Fh 
mov	eax, [ebx+8]
mov	[esp+3Ch+Str], eax 
call	strchr
cmp	eax, 1
sbb	eax, 0FFFFFFFFh
mov	[esp+3Ch+Val], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+Str], eax
call	jabber_buddy_find_resource
mov	esi, eax
test	eax, eax
jz	loc_61C6D8F8
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_61C6D7F2
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset g_free
mov	[esp+3Ch+Str], eax
call	g_list_foreach
mov	eax, [esi+38h]
mov	[esp+3Ch+Str], eax
call	g_list_free
mov	[esi+34h], edi
mov	[esi+38h], ebp
mov	ebp, [ebx+8]
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+3Ch+Str], eax
call	purple_connection_get_account
mov	[esp+3Ch+Val], ebp
mov	[esp+3Ch+Str], eax
call	purple_prpl_got_media_caps
test	edi, edi
jz	short loc_61C6D81F
mov	edi, [esi+40h]
test	edi, edi
jz	short loc_61C6D84C
			
mov	eax, [ebx+8]
mov	[esp+3Ch+Str], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6D958
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+3Ch+Val], offset aHttpJabber__40 
mov	[esp+3Ch+Str], esi
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C6D81F
mov	[esp+3Ch+var_34], offset aHttpJabber__41 
mov	[esp+3Ch+Val], 1
mov	eax, [ebx]
mov	[esp+3Ch+Str], eax
call	jabber_iq_new_query
mov	edi, eax
mov	[esp+3Ch+var_34], offset aHttpJabber__41 
mov	[esp+3Ch+Val], offset aQuery_12	
mov	eax, [eax+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_get_child_with_namespace
mov	ebp, eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+Val], offset aTo_15 
mov	eax, [edi+8]
mov	[esp+3Ch+Str], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset aHttpJabber__40 
mov	[esp+3Ch+Val], offset aNode_5 
mov	[esp+3Ch+Str], ebp
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset jabber_adhoc_disco_result_cb
mov	[esp+3Ch+Str], edi
call	jabber_iq_set_callback
mov	[esp+3Ch+Str], edi
call	jabber_iq_send
mov	dword ptr [esi+40h], 1
jmp	loc_61C6D81F
align 4
mov	eax, [ebx+8]
mov	[esp+3Ch+Str], eax
call	g_free
mov	[esp+3Ch+Str], ebx
call	g_free
test	ebp, ebp
jz	short loc_61C6D944
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+Val], offset g_free
mov	[esp+3Ch+Str], ebp
call	g_list_foreach
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D958
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D958
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+38h]
mov	[esp], eax
call	xmlnode_get_data
mov	ebx, eax
mov	eax, [esi+30h]
test	eax, eax
jnz	short loc_61C6D9B4
test	ebx, ebx
jz	short loc_61C6D9CC
mov	[esp], ebx
call	atoi
mov	[esi+30h], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D9F2
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 4
mov	dword ptr [esp+4], offset aPresenceStanza 
mov	dword ptr [esp], offset	aJabber_22 
call	purple_debug_warning
test	ebx, ebx
jnz	short loc_61C6D98D
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6D9F2
mov	dword ptr [esp+34h], offset aEmptyPriorityI 
mov	dword ptr [esp+30h], offset aJabber_22 
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_debug_warning
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edx, [ebx]
test	edx, edx
jnz	short loc_61C6DA4C
mov	[esp], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	short loc_61C6DA74
mov	[esp], eax
call	jabber_buddy_show_get_state
mov	[ebx+28h], eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6DA8A
mov	[esp+30h], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6DA8A
mov	dword ptr [esp+34h], offset aShowPresentOnP 
mov	dword ptr [esp+30h], offset aJabber_22 
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_debug_warning
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6DA8A
mov	dword ptr [esp+34h], offset aShowPresentO_0 
jmp	short loc_61C6DA60
			
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+34h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	edi, [ebx+18h]
test	edi, edi
jz	short loc_61C6DAB7
mov	ecx, [ebx+30h]
test	ecx, ecx
jz	short loc_61C6DACC
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6DB2C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [ebx+0Ch]
mov	[esp+0Ch], eax
mov	eax, [ebx+8]
mov	[esp+8], eax
mov	eax, [ebx+4]
mov	[esp+4], eax
mov	dword ptr [esp], offset	aS@SS_3	
call	g_strdup_printf
mov	edi, eax
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aTo_15 
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp+4], esi
mov	eax, [ebx]
mov	[esp], eax
call	jabber_send
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6DB2C
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
			
call	__stack_chk_fail
align 4
public jabber_presence_create_js
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Time],	offset aPresence_2 
call	xmlnode_new
mov	ebx, eax
test	esi, esi
jz	loc_61C6DD40
cmp	esi, 1
jz	short loc_61C6DBB7
cmp	esi, 0FFFFFFFEh
jz	short loc_61C6DBB7
cmp	esi, 0FFFFFFFFh
jz	short loc_61C6DBB7
mov	[esp+4Ch+Time],	esi
call	jabber_buddy_state_get_show
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	short loc_61C6DBB7
mov	[esp+4Ch+var_48], offset aShow 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	eax
call	xmlnode_insert_data
			
test	ebp, ebp
jz	short loc_61C6DBDF
mov	[esp+4Ch+var_48], offset aStatus_2 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	eax
call	xmlnode_insert_data
mov	eax, [esp+4Ch+var_34]
test	eax, eax
jnz	loc_61C6DCF8
mov	ebp, [edi+50h]
test	ebp, ebp
jz	short loc_61C6DBFA
test	esi, esi
jnz	loc_61C6DC8C
			
mov	[esp+4Ch+Time],	edi
call	jabber_caps_calculate_own_hash
mov	[esp+4Ch+var_48], offset aC 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_48], offset aHttpJabber__42 
mov	[esp+4Ch+Time],	eax
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], offset aHttpPidgin_i_0 
mov	[esp+4Ch+var_48], offset aNode_5 
mov	[esp+4Ch+Time],	esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], offset aSha1_7 
mov	[esp+4Ch+var_48], offset aHash_2 
mov	[esp+4Ch+Time],	esi
call	xmlnode_set_attrib
mov	[esp+4Ch+Time],	edi
call	jabber_caps_get_own_hash
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aVer_2	
mov	[esp+4Ch+Time],	esi
call	xmlnode_set_attrib
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C6DD5D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], offset aQuery_12 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+Time],	0 
call	time
sub	eax, [edi+50h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], offset aD_2 
mov	[esp+4Ch+var_48], 0Ah
lea	ebp, [esp+4Ch+var_2A]
mov	[esp+4Ch+Time],	ebp
call	g_snprintf
mov	[esp+4Ch+var_48], offset aJabberIqLast_2 
mov	[esp+4Ch+Time],	esi
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aSeconds_2 
mov	[esp+4Ch+Time],	esi
call	xmlnode_set_attrib
jmp	loc_61C6DBFA
align 4
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	offset aD_2 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aPriority_3 
mov	[esp+4Ch+Time],	ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	eax
call	xmlnode_insert_data
mov	[esp+4Ch+Time],	ebp
call	g_free
jmp	loc_61C6DBEB
align 10h
mov	[esp+4Ch+var_44], offset aUnavailable_0	
mov	[esp+4Ch+var_48], offset aType_12 
mov	[esp+4Ch+Time],	eax
call	xmlnode_set_attrib
jmp	loc_61C6DBB7
call	__stack_chk_fail
align 4
public jabber_presence_create
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 0
call	jabber_presence_create_js
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6DDA6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_presence_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0BCh
mov	esi, [esp+0CCh+arg_0]
mov	ebx, [esp+0CCh+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+0CCh+var_20], eax
xor	eax, eax
lea	edx, [esp+0CCh+var_68]
mov	[esp+0CCh+var_84], edx
mov	ecx, 48h
mov	edi, edx
rep stosb
mov	[esp+0CCh+var_40], 0FFFFFFFEh
mov	[esp+0CCh+Time], 0 
call	time
mov	[esp+0CCh+var_28], eax
mov	[esp+0CCh+Str2], offset	aFrom_4	
mov	[esp+0CCh+Time], ebx
call	xmlnode_get_attrib
mov	[esp+0CCh+var_60], eax
mov	[esp+0CCh+Str2], offset	aTo_15 
mov	[esp+0CCh+Time], ebx
call	xmlnode_get_attrib
mov	[esp+0CCh+var_5C], eax
mov	[esp+0CCh+Str2], offset	aType_12 
mov	[esp+0CCh+Time], ebx
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	loc_61C6E09C
xor	ebp, ebp
lea	esi, [esi+0]
mov	eax, ds:off_61C83EC0[ebp*8]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], edi
call	g_str_equal
test	eax, eax
jnz	loc_61C6DF80
inc	ebp
cmp	ebp, 7
jnz	short loc_61C6DE48
mov	[esp+0CCh+var_C4], edi
mov	[esp+0CCh+Str2], offset	aUnknownPresenc	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_warning
xor	eax, eax
			
mov	[esp+0CCh+var_68], eax
mov	[esp+0CCh+var_C4], 1
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], esi
call	jabber_buddy_find
mov	[esp+0CCh+var_54], eax
test	eax, eax
jz	loc_61C6DFAC
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Time], eax
call	jabber_id_new
mov	[esp+0CCh+var_64], eax
test	eax, eax
jz	loc_61C6DF8C
mov	edx, [esp+0CCh+var_60]
mov	ebp, [esi+64h]
mov	[esp+0CCh+Time], ebp
mov	[esp+0CCh+var_8C], edx
call	purple_connection_get_prpl
mov	[esp+0CCh+var_B8], ebx
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+var_BC], edx
mov	[esp+0CCh+var_C0], edi
mov	[esp+0CCh+var_C4], ebp
mov	[esp+0CCh+Str2], offset	aJabberReceiv_5	
mov	[esp+0CCh+Time], eax
call	purple_signal_emit_return_1
test	eax, eax
jz	loc_61C6DFCC
			
mov	eax, [esp+0CCh+var_4C]
test	eax, eax
jz	short loc_61C6DF27
lea	esi, [esi+0]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], eax
call	g_slist_delete_link
mov	[esp+0CCh+var_4C], eax
test	eax, eax
jnz	short loc_61C6DF10
mov	eax, [esp+0CCh+var_3C]
mov	[esp+0CCh+Time], eax
call	g_free
mov	eax, [esp+0CCh+var_34]
mov	[esp+0CCh+Time], eax
call	g_free
mov	eax, [esp+0CCh+var_30]
mov	[esp+0CCh+Time], eax
call	g_free
mov	eax, [esp+0CCh+var_64]
mov	[esp+0CCh+Time], eax
call	jabber_id_free
			
mov	edx, [esp+0CCh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C6F088
add	esp, 0BCh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	eax, ds:dword_61C83EC4[ebp*8]
jmp	loc_61C6DE83
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], offset	aIgnoringPresen	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_error
jmp	short loc_61C6DF60
align 4
mov	[esp+0CCh+var_C4], offset aPresence_jbNul 
mov	[esp+0CCh+Str2], offset	aJabber_presenc	
mov	[esp+0CCh+Time], 0
call	g_return_if_fail_warning
jmp	short loc_61C6DF60
align 4
mov	edx, [esp+0CCh+var_64]
mov	eax, [edx]
test	eax, eax
jz	short loc_61C6DFED
mov	edx, [edx+4]
mov	[esp+0CCh+var_C4], edx
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], esi
call	jabber_chat_find
mov	[esp+0CCh+var_50], eax
mov	eax, [esp+0CCh+var_54]
mov	eax, [eax+4]
test	eax, eax
jz	short loc_61C6E00B
mov	[esp+0CCh+Time], eax
call	g_free
mov	eax, [esp+0CCh+var_54]
mov	dword ptr [eax+4], 0
mov	eax, [esp+0CCh+var_68]
test	eax, eax
jnz	loc_61C6E40C
mov	[esp+0CCh+var_40], 1
			
mov	edi, [ebx+18h]
test	edi, edi
jnz	short loc_61C6E033
jmp	short loc_61C6E0A3
align 4
			
mov	edi, [edi+20h]
test	edi, edi
jz	short loc_61C6E0A3
mov	eax, [edi+8]
test	eax, eax
jnz	short loc_61C6E02C
mov	[esp+0CCh+Time], edi
call	xmlnode_get_namespace
test	eax, eax
jz	loc_61C6E6E0
mov	[esp+0CCh+var_C4], eax
mov	eax, [edi]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], offset	aSS_8 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+0CCh+Str2], eax
mov	eax, ds:dword_61C98D84
mov	[esp+0CCh+Time], eax
call	g_hash_table_lookup
mov	[esp+0CCh+Time], ebp
mov	[esp+0CCh+var_88], eax
call	g_free
mov	eax, [esp+0CCh+var_88]
test	eax, eax
jz	short loc_61C6E02C
mov	[esp+0CCh+var_C4], edi
lea	ecx, [esp+0CCh+var_68]
mov	[esp+0CCh+Str2], ecx
mov	[esp+0CCh+Time], esi
call	eax
jmp	short loc_61C6E02C
align 4
xor	eax, eax
jmp	loc_61C6DE83
			
mov	eax, [esp+0CCh+var_2C]
test	eax, eax
jnz	loc_61C6E45B
			
mov	ebp, [esp+0CCh+var_50]
test	ebp, ebp
jz	loc_61C6E6EA
cmp	[esp+0CCh+var_40], 0FFFFFFFFh
jz	loc_61C6E91D
mov	eax, [esp+0CCh+var_68]
test	eax, eax
jnz	loc_61C6E48D
mov	eax, [esp+0CCh+var_64]
mov	ebx, [eax+8]
test	ebx, ebx
jz	loc_61C6DF02
mov	eax, [esp+0CCh+var_48]
test	eax, eax
jz	loc_61C6EA0F
mov	[esp+0CCh+Str2], offset	aJid_7 
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_84], eax
mov	[esp+0CCh+Str2], offset	aAffiliation_0 
mov	eax, [esp+0CCh+var_48]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_80], eax
mov	[esp+0CCh+Str2], offset	aRole_3	
mov	eax, [esp+0CCh+var_48]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+0CCh+Str2], 6Eh
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	loc_61C6ED97
mov	[esp+0CCh+var_7C], 1
mov	[esp+0CCh+Str2], 0C9h
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	loc_61C6E27D
mov	dword ptr [ebp+24h], 2
mov	[esp+0CCh+Str2], offset	a_acceptDefault	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Str2], offset	a_configureRoom	
mov	[esp+0CCh+Time], offset	aPidgin_12 
mov	[esp+0CCh+var_8C], eax
call	libintl_dgettext
mov	ebx, eax
mov	ecx, [ebp+18h]
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_88], ecx
call	purple_connection_get_account
mov	[esp+0CCh+var_78], eax
mov	[esp+0CCh+Str2], offset	aYouAreCreating	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+var_74], eax
mov	[esp+0CCh+Str2], offset	aCreateNewRoom 
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+var_70], eax
mov	[esp+0CCh+Str2], offset	aCreateNewRoom 
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+var_98], offset jabber_chat_create_instant_room
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+var_9C], edx
mov	[esp+0CCh+var_A0], offset jabber_chat_request_room_configure
mov	[esp+0CCh+var_A4], ebx
mov	[esp+0CCh+var_A8], 2
mov	[esp+0CCh+var_AC], ebp
mov	ecx, [esp+0CCh+var_88]
mov	[esp+0CCh+var_B0], ecx
mov	[esp+0CCh+var_B4], 0
mov	ecx, [esp+0CCh+var_78]
mov	[esp+0CCh+var_B8], ecx
mov	[esp+0CCh+var_BC], 1
mov	edx, [esp+0CCh+var_74]
mov	[esp+0CCh+var_C0], edx
mov	ecx, [esp+0CCh+var_70]
mov	[esp+0CCh+var_C4], ecx
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	purple_request_action
mov	[ebp+28h], eax
mov	[esp+0CCh+Str2], 0D2h
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	short loc_61C6E2B5
mov	eax, [ebp+0Ch]
mov	[esp+0CCh+Time], eax
call	g_free
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Time], eax
call	g_strdup
mov	[ebp+0Ch], eax
mov	[esp+0CCh+Str2], offset	aOwner 
mov	eax, [esp+0CCh+var_80]
mov	[esp+0CCh+Time], eax
call	purple_strequal
cmp	eax, 1
sbb	ebx, ebx
not	ebx
and	ebx, 8
test	edi, edi
jz	short loc_61C6E2F2
mov	[esp+0CCh+Str2], offset	aModerator 
mov	[esp+0CCh+Time], edi
call	g_str_equal
test	eax, eax
jz	loc_61C6EA92
or	ebx, 4
			
mov	ecx, [ebp+18h]
test	ecx, ecx
jz	loc_61C6ECDC
mov	eax, [esp+0CCh+var_3C]
mov	[esp+0CCh+var_BC], eax
mov	eax, [esp+0CCh+var_40]
mov	[esp+0CCh+var_C0], eax
mov	eax, [esp+0CCh+var_38]
mov	[esp+0CCh+var_C4], eax
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_54]
mov	[esp+0CCh+Time], eax
call	jabber_buddy_track_resource
mov	dword ptr [eax+40h], 1
mov	[esp+0CCh+var_BC], edi
mov	eax, [esp+0CCh+var_80]
mov	[esp+0CCh+var_C0], eax
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+var_C4], eax
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], ebp
call	jabber_chat_track_handle
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
call	jabber_chat_find_buddy
test	eax, eax
jnz	loc_61C6EA26
mov	eax, [ebp+34h]
test	eax, eax
jle	loc_61C6E6B8
mov	edx, [esp+0CCh+var_2C]
test	edx, edx
jz	short loc_61C6E3A4
cmp	eax, [esp+0CCh+var_28]
jge	loc_61C6E6B8
mov	edi, 1
mov	eax, [esp+0CCh+var_64]
mov	edx, [eax+8]
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_8C], edx
call	purple_conversation_get_chat_data
mov	[esp+0CCh+var_BC], edi
mov	[esp+0CCh+var_C0], ebx
mov	ecx, [esp+0CCh+var_84]
mov	[esp+0CCh+var_C4], ecx
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_add_user
mov	edi, [esp+0CCh+var_7C]
test	edi, edi
jz	loc_61C6E494
mov	ebx, [ebp+34h]
test	ebx, ebx
jnz	loc_61C6E494
mov	[esp+0CCh+Time], 0 
call	time
mov	[ebp+34h], eax
jmp	loc_61C6E494
align 4
cmp	eax, 0FFFFFFFEh
jz	loc_61C6E9DC
cmp	eax, 2
jz	loc_61C6E5E5
cmp	eax, 3
jz	loc_61C6DF02
cmp	eax, 4
jz	loc_61C6DF02
cmp	eax, 0FFFFFFFFh
jz	loc_61C6EAB2
cmp	eax, 1
jz	loc_61C6EA82
cmp	eax, 5
jnz	loc_61C6EA65
mov	[esp+0CCh+var_40], 0FFFFFFFEh
jmp	loc_61C6E022
mov	edi, [esp+0CCh+var_24]
test	edi, edi
jz	loc_61C6E0B2
mov	[esp+0CCh+Time], 0 
call	time
mov	edx, edi
sub	edx, [esp+0CCh+var_28]
add	eax, edx
mov	[esp+0CCh+var_24], eax
jmp	loc_61C6E0B2
dec	eax
jz	loc_61C6E8CC
			
mov	eax, [esp+0CCh+var_44]
test	eax, eax
jz	loc_61C6DF02
mov	ecx, [esp+0CCh+var_68]
test	ecx, ecx
jnz	loc_61C6DF02
mov	[esp+0CCh+Str2], offset	aNode_5	
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_84], eax
mov	[esp+0CCh+Str2], offset	aVer_2 
mov	eax, [esp+0CCh+var_44]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+0CCh+Str2], offset	aHash_2	
mov	eax, [esp+0CCh+var_44]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_80], eax
mov	[esp+0CCh+Str2], offset	aExt_0 
mov	eax, [esp+0CCh+var_44]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	edx, [esp+0CCh+var_84]
test	edx, edx
jz	loc_61C6DF02
mov	edx, [esp+0CCh+var_84]
cmp	byte ptr [edx],	0
jz	loc_61C6DF02
test	edi, edi
jz	loc_61C6DF02
cmp	byte ptr [edi],	0
jz	loc_61C6DF02
test	eax, eax
jz	short loc_61C6E545
cmp	byte ptr [eax],	0
jnz	loc_61C6E6BF
xor	ebx, ebx
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_54]
mov	[esp+0CCh+Time], eax
call	jabber_buddy_find_resource
mov	ebp, eax
test	eax, eax
jz	short loc_61C6E586
mov	eax, [eax+34h]
test	eax, eax
jz	short loc_61C6E586
mov	eax, [eax+10h]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Time], eax
call	g_str_equal
test	eax, eax
jnz	loc_61C6F08D
			
mov	[esp+0CCh+Time], 0Ch
call	g_malloc0
mov	ebp, eax
mov	[eax], esi
mov	eax, [esp+0CCh+var_54]
mov	[ebp+4], eax
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Time], eax
call	g_strdup
mov	[ebp+8], eax
mov	[esp+0CCh+var_B0], ebp
mov	[esp+0CCh+var_B4], offset sub_61C6D778
mov	[esp+0CCh+var_B8], ebx
mov	eax, [esp+0CCh+var_80]
mov	[esp+0CCh+var_BC], eax
mov	[esp+0CCh+var_C0], edi
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+var_C4], eax
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], esi
call	jabber_caps_get_info
jmp	loc_61C6DF02
mov	[esp+0CCh+Time], 0Ch
call	g_malloc0
mov	ebp, eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	purple_connection_get_account
mov	edi, eax
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], edi
call	purple_find_buddy
mov	[esp+0CCh+var_84], eax
mov	[esp+0CCh+var_C4], offset aHttpJabber__43 
mov	[esp+0CCh+Str2], offset	aNick_2	
mov	[esp+0CCh+Time], ebx
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C6E63F
mov	[esp+0CCh+Time], eax
call	xmlnode_get_data
mov	[esp+0CCh+var_30], eax
mov	eax, [esp+0CCh+var_84]
test	eax, eax
jz	loc_61C6F033
mov	eax, [esp+0CCh+var_54]
xor	ebx, ebx
test	byte ptr [eax+0Ch], 6
setnz	bl
mov	eax, [esi+64h]
mov	[ebp+0], eax
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Time], eax
call	g_strdup
mov	[ebp+8], eax
mov	[ebp+4], esi
mov	[esp+0CCh+var_AC], ebp
mov	[esp+0CCh+var_B0], offset loc_61C6F2C0
mov	[esp+0CCh+var_B4], offset loc_61C6F334
mov	[esp+0CCh+var_B8], ebx
mov	[esp+0CCh+var_BC], 0
mov	eax, [esp+0CCh+var_30]
mov	[esp+0CCh+var_C0], eax
mov	[esp+0CCh+var_C4], 0
mov	eax, [esp+0CCh+var_60]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], edi
call	purple_account_request_authorization
jmp	loc_61C6DF02
			
xor	edi, edi
jmp	loc_61C6E3A9
mov	[esp+0CCh+var_C4], 0FFFFFFFFh
mov	[esp+0CCh+Str2], offset	asc_61C83D26 
mov	[esp+0CCh+Time], eax
call	g_strsplit
mov	ebx, eax
jmp	loc_61C6E547
align 10h
mov	eax, offset byte_61C837A6
jmp	loc_61C6E04A
mov	eax, [esp+0CCh+var_64]
mov	[esp+0CCh+Time], eax
call	jabber_id_get_bare_jid
mov	ebx, eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	purple_connection_get_account
mov	[esp+0CCh+var_84], eax
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], eax
call	purple_find_buddy
mov	edi, eax
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], 1
call	purple_find_conversation_with_account
mov	ebp, eax
test	eax, eax
jz	short loc_61C6E763
mov	[esp+0CCh+Time], eax
call	purple_conversation_get_name
mov	[esp+0CCh+var_C0], ebx
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], offset	aChangedConvers	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_info
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], ebp
call	purple_conversation_set_name
test	edi, edi
jz	loc_61C6EC92
mov	ebp, [esp+0CCh+var_34]
test	ebp, ebp
jz	loc_61C6EC89
cmp	byte ptr [ebp+0], 0
jnz	short loc_61C6E782
xor	ebp, ebp
mov	[esp+0CCh+Time], edi
call	purple_buddy_icons_get_checksum_for_user
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], ebp
call	purple_strequal
test	eax, eax
mov	eax, [esp+0CCh+var_54]
jz	loc_61C6EBF0
			
mov	edx, [esp+0CCh+var_40]
cmp	edx, 0FFFFFFFFh
jz	loc_61C6EA4D
mov	ecx, [esp+0CCh+var_68]
cmp	ecx, 1
jz	loc_61C6EA4D
cmp	ecx, 5
jz	loc_61C6EA4D
mov	ecx, [esp+0CCh+var_3C]
mov	[esp+0CCh+var_BC], ecx
mov	[esp+0CCh+var_C0], edx
mov	edx, [esp+0CCh+var_38]
mov	[esp+0CCh+var_C4], edx
mov	edx, [esp+0CCh+var_64]
mov	edx, [edx+8]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	jabber_buddy_track_resource
mov	edi, eax
mov	ebp, [esp+0CCh+var_24]
test	ebp, ebp
jnz	loc_61C6F070
xor	eax, eax
mov	[edi+14h], eax
mov	[esp+0CCh+Str2], 0
mov	eax, [esp+0CCh+var_54]
mov	[esp+0CCh+Time], eax
call	jabber_buddy_find_resource
mov	edi, eax
test	eax, eax
jz	loc_61C6EACB
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], esi
call	jabber_google_presence_incoming
mov	edx, [edi+10h]
mov	ebp, [edi+8]
mov	eax, [edi+0Ch]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_8C], edx
call	jabber_buddy_state_get_status_id
mov	[esp+0CCh+var_B0], 0
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+var_B4], edx
mov	[esp+0CCh+var_B8], offset aMessage_4 
mov	[esp+0CCh+var_BC], ebp
mov	[esp+0CCh+var_C0], offset aPriority_3 
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Time], eax
call	purple_prpl_got_user_status
mov	eax, [edi+14h]
mov	[esp+0CCh+var_C0], eax
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Time], eax
call	purple_prpl_got_user_idle
mov	eax, [esp+0CCh+var_30]
test	eax, eax
jz	short loc_61C6E8BF
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	serv_got_alias
			
mov	[esp+0CCh+Time], ebx
call	g_free
jmp	loc_61C6E494
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
test	eax, eax
jz	loc_61C6DF02
mov	ecx, [ebp+18h]
test	ecx, ecx
jz	loc_61C6F0F1
mov	edx, [ebp+30h]
test	edx, edx
jz	loc_61C6EB14
mov	edx, [ebp+0Ch]
test	edx, edx
jz	loc_61C6DF02
mov	[esp+0CCh+Str2], edx 
mov	[esp+0CCh+Time], eax 
call	strcmp
test	eax, eax
jnz	loc_61C6DF02
mov	[esp+0CCh+Time], ebp
call	jabber_chat_destroy
jmp	loc_61C6DF02
mov	[esp+0CCh+var_C4], 0
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], esi
call	jabber_parse_error
mov	edi, eax
mov	ebx, [esp+0CCh+var_60]
mov	eax, [ebp+18h]
test	eax, eax
jz	loc_61C6ED5E
mov	[esp+0CCh+Str2], offset	aErrorInChatS 
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	eax, [ebp+2Ch]
mov	[esp+0CCh+Time], eax
call	g_hash_table_size
test	eax, eax
jnz	short loc_61C6E985
mov	eax, [ebp+14h]
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	serv_got_chat_left
			
mov	[esp+0CCh+var_B4], 0
mov	[esp+0CCh+var_B8], 0
mov	[esp+0CCh+var_BC], edi
mov	[esp+0CCh+var_C0], ebx
mov	[esp+0CCh+var_C4], ebx
mov	[esp+0CCh+Str2], 0
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	purple_notify_message
mov	[esp+0CCh+Time], ebx
call	g_free
mov	[esp+0CCh+Time], edi
call	g_free
mov	eax, [ebp+2Ch]
mov	[esp+0CCh+Time], eax
call	g_hash_table_size
test	eax, eax
jnz	loc_61C6DF02
jmp	loc_61C6E910
mov	[esp+0CCh+var_C4], 0
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], esi
call	jabber_parse_error
mov	[esp+0CCh+var_40], 0FFFFFFFFh
mov	edi, [esp+0CCh+var_54]
test	eax, eax
jz	loc_61C6EDD9
mov	[edi+4], eax
jmp	loc_61C6E022
xor	edi, edi
mov	[esp+0CCh+var_80], 0
mov	[esp+0CCh+var_84], 0
jmp	loc_61C6E13E
mov	eax, [esp+0CCh+var_64]
mov	edi, [eax+8]
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
call	purple_conversation_get_chat_data
mov	[esp+0CCh+var_C4], ebx
mov	[esp+0CCh+Str2], edi
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_user_set_flags
jmp	loc_61C6E3DF
			
mov	edx, [esp+0CCh+var_64]
mov	edx, [edx+8]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	jabber_buddy_remove_resource
jmp	loc_61C6E80B
mov	[esp+0CCh+var_C4], edi
mov	[esp+0CCh+Str2], offset	aIgnoringPres_0	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_warning
jmp	loc_61C6DF02
mov	[esp+0CCh+var_40], 0
jmp	loc_61C6E022
mov	[esp+0CCh+Str2], offset	aParticipant 
mov	[esp+0CCh+Time], edi
call	g_str_equal
test	eax, eax
jz	loc_61C6E2F2
or	ebx, 1
jmp	loc_61C6E2F2
mov	[esp+0CCh+Str2], offset	aIgnoringPres_1	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_warning
jmp	loc_61C6DF02
mov	ebp, [esp+0CCh+var_3C]
test	ebp, ebp
jz	loc_61C6F03A
mov	edi, offset aMessage_4 
mov	[esp+0CCh+Time], 0
call	jabber_buddy_state_get_status_id
mov	[esp+0CCh+var_B8], 0
mov	[esp+0CCh+var_BC], ebp
mov	[esp+0CCh+var_C0], edi
mov	[esp+0CCh+var_C4], eax
mov	[esp+0CCh+Str2], ebx
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Time], eax
call	purple_prpl_got_user_status
jmp	loc_61C6E8BF
mov	edx, [ebp+0Ch]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	g_str_equal
mov	[esp+0CCh+var_80], eax
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_54]
mov	[esp+0CCh+Time], eax
call	jabber_buddy_remove_resource
mov	eax, [esp+0CCh+var_48]
test	eax, eax
jz	loc_61C6F026
mov	[esp+0CCh+Str2], offset	aJid_7 
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_7C], eax
mov	eax, [ebp+1Ch]
test	eax, eax
jnz	loc_61C6EDFA
cmp	[esp+0CCh+var_80], 0
jz	short loc_61C6EBAF
xor	ebx, ebx
xor	edi, edi
mov	eax, [esp+0CCh+var_7C]
test	eax, eax
jz	loc_61C6F041
mov	eax, [esp+0CCh+var_7C]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_5C]
mov	[esp+0CCh+Time], eax
call	purple_strequal
test	eax, eax
jnz	loc_61C6F041
test	edi, edi
jnz	loc_61C6F100
test	ebx, ebx
jnz	loc_61C6E494
mov	edi, [esp+0CCh+var_3C]
mov	eax, [esp+0CCh+var_64]
mov	ebx, [eax+8]
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
call	purple_conversation_get_chat_data
mov	[esp+0CCh+var_C4], edi
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_remove_user
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], ebp
call	jabber_chat_remove_handle
jmp	loc_61C6E494
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+78h]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
mov	eax, [esp+0CCh+var_54]
jnz	loc_61C6E7A2
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+78h]
mov	[esp+0CCh+Time], eax
call	g_slist_prepend
mov	[esi+78h], eax
mov	[esp+0CCh+Str2], 1
mov	[esp+0CCh+Time], esi
call	jabber_iq_new
mov	edi, eax
mov	[esp+0CCh+var_C4], ebx
mov	[esp+0CCh+Str2], offset	aTo_15 
mov	eax, [eax+8]
mov	[esp+0CCh+Time], eax
call	xmlnode_set_attrib
mov	[esp+0CCh+Str2], offset	aVcard_0 
mov	eax, [edi+8]
mov	[esp+0CCh+Time], eax
call	xmlnode_new_child
mov	[esp+0CCh+Str2], offset	aVcardTemp_0 
mov	[esp+0CCh+Time], eax
call	xmlnode_set_namespace
mov	[esp+0CCh+var_C4], 0
mov	[esp+0CCh+Str2], offset	sub_61C6D560
mov	[esp+0CCh+Time], edi
call	jabber_iq_set_callback
mov	[esp+0CCh+Time], edi
call	jabber_iq_send
mov	eax, [esp+0CCh+var_54]
jmp	loc_61C6E7A2
mov	eax, [esp+0CCh+var_54]
cmp	eax, [esi+60h]
jz	loc_61C6E7A2
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Time], eax
call	purple_account_get_username
mov	edx, [esp+0CCh+var_84]
mov	[esp+0CCh+var_BC], edx
mov	[esp+0CCh+var_C0], eax
mov	[esp+0CCh+var_C4], ebx
mov	[esp+0CCh+Str2], offset	aGotPresenceFor	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_warning
mov	[esp+0CCh+Time], ebx
call	g_free
jmp	loc_61C6DF02
mov	eax, [esp+0CCh+var_64]
mov	edx, [eax+4]
mov	[esp+0CCh+var_C4], edx
mov	eax, [eax]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], offset	aS@S_3 
call	g_strdup_printf
mov	ecx, eax
mov	edx, dword_61C7A140
mov	[ebp+14h], edx
lea	eax, [edx+1]
mov	dword_61C7A140,	eax
mov	[esp+0CCh+var_C4], ecx
mov	[esp+0CCh+Str2], edx
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_88], ecx
call	serv_got_joined_chat
mov	[ebp+18h], eax
mov	edx, [ebp+0Ch]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_8C], edx
call	purple_conversation_get_chat_data
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_set_nick
mov	[esp+0CCh+Time], ebp
call	jabber_chat_disco_traffic
mov	ecx, [esp+0CCh+var_88]
mov	[esp+0CCh+Time], ecx
call	g_free
jmp	loc_61C6E2FD
mov	[esp+0CCh+Str2], offset	aErrorJoiningCh	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], eax
call	g_strdup_printf
mov	ebx, eax
mov	eax, [ebp+10h]
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	purple_serv_got_join_chat_failed
jmp	loc_61C6E985
mov	eax, [ebp+0Ch]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Time], eax
call	g_str_equal
test	eax, eax
jnz	loc_61C6E15D
mov	eax, [esp+0CCh+var_84]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_5C]
mov	[esp+0CCh+Time], eax
call	purple_strequal
xor	edx, edx
test	eax, eax
setnz	dl
mov	[esp+0CCh+var_7C], edx
jmp	loc_61C6E165
mov	[esp+0CCh+Str2], offset	aUnknownErrorIn	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Time], eax
call	g_strdup
jmp	loc_61C6EA07
mov	[esp+0CCh+Str2], 6Eh
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	short loc_61C6EE24
mov	dword ptr [ebp+34h], 0
mov	[esp+0CCh+var_80], 1
mov	[esp+0CCh+Str2], 12Dh
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
mov	[esp+0CCh+Str2], 12Fh
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	loc_61C6F233
mov	eax, [esp+0CCh+var_48]
test	eax, eax
jz	loc_61C6F218
mov	[esp+0CCh+Str2], offset	aNick_2	
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	loc_61C6F218
mov	eax, [ebp+0Ch]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Time], eax
call	g_str_equal
test	eax, eax
jnz	loc_61C6F1FD
mov	eax, [esp+0CCh+var_64]
mov	edi, [eax+8]
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
call	purple_conversation_get_chat_data
mov	[esp+0CCh+var_C4], ebx
mov	[esp+0CCh+Str2], edi
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_rename_user
mov	eax, [esp+0CCh+var_64]
mov	eax, [eax+8]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], ebp
call	jabber_chat_remove_handle
mov	ebx, 1
			
mov	[esp+0CCh+Str2], 133h
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
test	eax, eax
jz	loc_61C6F1F6
mov	eax, [esp+0CCh+var_48]
test	eax, eax
jz	loc_61C6F1B1
mov	[esp+0CCh+Str2], offset	aActor 
mov	[esp+0CCh+Time], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6F1E9
mov	[esp+0CCh+Str2], offset	aJid_7 
mov	[esp+0CCh+Time], eax
call	xmlnode_get_attrib
mov	[esp+0CCh+var_84], eax
mov	[esp+0CCh+Str2], offset	aReason_2 
mov	eax, [esp+0CCh+var_48]
mov	[esp+0CCh+Time], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C6F1B9
mov	[esp+0CCh+Time], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	loc_61C6F1B9
mov	eax, [esp+0CCh+var_80]
test	eax, eax
jz	loc_61C6F17D
cmp	[esp+0CCh+var_84], 0
jz	loc_61C6F158
mov	[esp+0CCh+Str2], offset	aYouHaveBeenKic	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+var_C4], edi
mov	edx, [esp+0CCh+var_84]
mov	[esp+0CCh+Str2], edx
mov	[esp+0CCh+Time], eax
call	g_strdup_printf
			
mov	edx, [esp+0CCh+var_3C]
mov	[esp+0CCh+Time], edx
mov	[esp+0CCh+var_88], eax
call	g_free
mov	eax, [esp+0CCh+var_88]
mov	[esp+0CCh+var_3C], eax
mov	[esp+0CCh+Time], edi
call	g_free
mov	edi, 1
mov	[esp+0CCh+Str2], 141h
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
mov	[esp+0CCh+Str2], 142h
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
mov	[esp+0CCh+Str2], 14Ch
mov	eax, [esp+0CCh+var_4C]
mov	[esp+0CCh+Time], eax
call	g_slist_find
mov	eax, [esp+0CCh+var_80]
test	eax, eax
jz	loc_61C6EBA7
jmp	loc_61C6EB77
mov	[esp+0CCh+var_7C], 0
jmp	loc_61C6EB61
xor	ebx, ebx
jmp	loc_61C6E658
xor	edi, edi
jmp	loc_61C6EADF
			
test	ebx, ebx
jnz	loc_61C6E494
test	edi, edi
jnz	loc_61C6F108
mov	eax, [ebp+14h]
mov	[esp+0CCh+Str2], eax
mov	eax, [esi+64h]
mov	[esp+0CCh+Time], eax
call	serv_got_chat_left
mov	[esp+0CCh+Time], ebp
call	jabber_chat_destroy
jmp	loc_61C6E494
mov	[esp+0CCh+Time], 0 
call	time
sub	eax, [esp+0CCh+var_24]
jmp	loc_61C6E808
call	__stack_chk_fail
mov	eax, [ebp+34h]
mov	eax, [eax+14h]
mov	[esp+0CCh+Str2], eax
mov	[esp+0CCh+Time], edi
call	g_str_equal
test	eax, eax
jz	loc_61C6E586
mov	eax, [ebp+34h]
mov	eax, [eax+18h]
mov	[esp+0CCh+Str2], eax
mov	eax, [esp+0CCh+var_80]
mov	[esp+0CCh+Time], eax
call	purple_strequal
test	eax, eax
jz	loc_61C6E586
mov	[esp+0CCh+Str2], ebx
mov	eax, [ebp+34h]
mov	[esp+0CCh+Time], eax
call	jabber_caps_exts_known
test	eax, eax
jz	loc_61C6E586
test	ebx, ebx
jz	loc_61C6DF02
mov	[esp+0CCh+Time], ebx
call	g_strfreev
jmp	loc_61C6DF02
cmp	dword ptr [ebp+30h], 0
jnz	loc_61C6E8F1
jmp	loc_61C6DF02
test	ebx, ebx
jnz	loc_61C6E494
mov	[esp+0CCh+Time], 0 
call	time
mov	edx, eax
mov	edi, [esp+0CCh+var_3C]
mov	eax, [esp+0CCh+var_64]
mov	ebx, [eax+8]
mov	eax, [ebp+18h]
mov	[esp+0CCh+Time], eax
mov	[esp+0CCh+var_8C], edx
call	purple_conversation_get_chat_data
mov	edx, [esp+0CCh+var_8C]
mov	[esp+0CCh+var_BC], edx
mov	[esp+0CCh+var_C0], 4
mov	[esp+0CCh+var_C4], edi
mov	[esp+0CCh+Str2], ebx
mov	[esp+0CCh+Time], eax
call	purple_conv_chat_write
jmp	loc_61C6F051
mov	[esp+0CCh+Str2], offset	aYouHaveBeenK_0	
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Str2], edi
mov	[esp+0CCh+Time], eax
call	g_strdup_printf
jmp	loc_61C6EFA5
cmp	[esp+0CCh+var_84], 0
jz	short loc_61C6F1DC
mov	[esp+0CCh+Str2], offset	aKickedBySS 
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+var_C4], edi
mov	ecx, [esp+0CCh+var_84]
mov	[esp+0CCh+Str2], ecx
mov	[esp+0CCh+Time], eax
call	g_strdup_printf
jmp	loc_61C6EFA5
mov	[esp+0CCh+var_84], 0
			
mov	[esp+0CCh+Str2], offset	aNoReason 
mov	[esp+0CCh+Time], offset	aPidgin_12 
call	libintl_dgettext
mov	[esp+0CCh+Time], eax
call	g_strdup
mov	edi, eax
jmp	loc_61C6EF66
mov	[esp+0CCh+Str2], offset	aKickedS 
jmp	loc_61C6F160
mov	[esp+0CCh+var_84], 0
jmp	loc_61C6EF35
xor	edi, edi
jmp	loc_61C6EFD0
mov	eax, [ebp+0Ch]
mov	[esp+0CCh+Time], eax
call	g_free
mov	[esp+0CCh+Time], ebx
call	g_strdup
mov	[ebp+0Ch], eax
jmp	loc_61C6EEA1
			
mov	[esp+0CCh+Str2], offset	aChatPresenceIn	
mov	[esp+0CCh+Time], offset	aJabber_22 
call	purple_debug_warning
xor	ebx, ebx
jmp	loc_61C6EEDB
xor	ebx, ebx
jmp	loc_61C6EEDB
align 4
public jabber_presence_subscription_set
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], offset aPresence_2 
call	xmlnode_new
mov	ebx, eax
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aTo_15	
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aType_12 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	jabber_send
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6F2B8
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_free
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx]
call	purple_connections_get_all
mov	[esp+4], esi
mov	[esp], eax
call	g_list_find
test	eax, eax
jz	short loc_61C6F307
mov	dword ptr [esp+8], offset aUnsubscribed_0 
mov	eax, [ebx+8]
mov	[esp+4], eax
mov	eax, [ebx]
mov	eax, [eax+1Ch]
mov	[esp], eax
call	jabber_presence_subscription_set
mov	eax, [ebx+8]
mov	[esp], eax
call	g_free
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6F32C
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx]
call	purple_connections_get_all
mov	[esp+4], esi
mov	[esp], eax
call	g_list_find
test	eax, eax
jz	short loc_61C6F37B
mov	dword ptr [esp+8], offset aSubscribed 
mov	eax, [ebx+8]
mov	[esp+4], eax
mov	eax, [ebx]
mov	eax, [eax+1Ch]
mov	[esp], eax
call	jabber_presence_subscription_set
mov	eax, [ebx+8]
mov	[esp], eax
call	g_free
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6F3A0
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 4
public purple_status_to_jabber
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	esi, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C6F3D4
mov	dword ptr [ebx], 0FFFFFFFEh
test	ebp, ebp
jz	short loc_61C6F3DF
mov	dword ptr [ebp+0], 0
test	esi, esi
jz	short loc_61C6F3E9
mov	dword ptr [esi], 0
test	edi, edi
jz	short loc_61C6F45C
test	ebx, ebx
jz	short loc_61C6F403
mov	[esp+3Ch+var_3C], edi
call	purple_status_get_id
mov	[esp+3Ch+var_3C], eax
call	jabber_buddy_status_id_get_state
mov	[ebx], eax
test	ebp, ebp
jz	short loc_61C6F420
mov	[esp+3Ch+var_38], offset aMessage_4 
mov	[esp+3Ch+var_3C], edi
call	purple_status_get_attr_string
test	eax, eax
jz	short loc_61C6F420
cmp	byte ptr [eax],	0
jnz	short loc_61C6F44C
			
test	esi, esi
jz	short loc_61C6F436
mov	[esp+3Ch+var_38], offset aPriority_3 
mov	[esp+3Ch+var_3C], edi
call	purple_status_get_attr_int
mov	[esi], eax
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6F468
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], eax
call	purple_markup_strip_html
mov	[ebp+0], eax
jmp	short loc_61C6F420
align 4
test	ebx, ebx
jz	short loc_61C6F436
mov	dword ptr [ebx], 0
jmp	short loc_61C6F436
call	__stack_chk_fail
align 10h
public jabber_presence_fake_to_self
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+5Ch]
test	eax, eax
jz	loc_61C6F610
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	ebx, eax
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_display_name
mov	esi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_presence
mov	[esp+5Ch+var_30], eax
test	edi, edi
jz	loc_61C6F684
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_54], eax
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_status_to_jabber
mov	edi, [ebp+60h]
mov	eax, [esp+5Ch+var_2C]
test	eax, eax
jz	short loc_61C6F538
cmp	eax, 0FFFFFFFEh
jz	short loc_61C6F538
mov	ecx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_4C], ecx
mov	[esp+5Ch+var_50], eax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebp+5Ch]
mov	eax, [eax+8]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_track_resource
mov	ebp, eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_is_idle
test	eax, eax
jnz	loc_61C6F630
xor	eax, eax
mov	[ebp+14h], eax
jmp	short loc_61C6F54A
align 4
			
mov	eax, [ebp+5Ch]
mov	eax, [eax+8]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_remove_resource
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_find_buddy
test	eax, eax
jz	loc_61C6F5E9
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_find_resource
mov	edi, eax
test	eax, eax
jz	loc_61C6F644
mov	ebp, [eax+10h]
test	ebp, ebp
jz	loc_61C6F67C
mov	ecx, offset aMessage_4 
mov	edx, [edi+8]
mov	eax, [edi+0Ch]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_38], edx
mov	[esp+5Ch+var_34], ecx
call	jabber_buddy_state_get_status_id
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], ebp
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_48], ecx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], offset aPriority_3 
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_prpl_got_user_status
mov	eax, [edi+14h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_prpl_got_user_idle
			
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6F69C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_54], offset aJsUserNull 
mov	[esp+5Ch+var_58], offset aJabber_prese_0 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_61C6F5F5
align 10h
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_idle_time
jmp	loc_61C6F531
align 4
mov	eax, [esp+5Ch+var_28]
test	eax, eax
jz	short loc_61C6F698
mov	edx, offset aMessage_4 
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], offset aOffline_1 
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_prpl_got_user_status
jmp	loc_61C6F5E9
align 4
xor	ecx, ecx
jmp	loc_61C6F588
align 4
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_active_status
mov	edi, eax
jmp	loc_61C6F4C3
align 4
xor	edx, edx
jmp	short loc_61C6F651
call	__stack_chk_fail
align 4
public jabber_presence_send
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	edi, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_44], 0
mov	eax, [ebx+64h]
mov	[esp+6Ch+Str1],	eax
call	purple_connection_get_account
mov	[esp+6Ch+Str1],	eax
call	purple_account_get_presence
mov	esi, eax
mov	[esp+6Ch+Str1],	eax
call	purple_presence_get_active_status
mov	[esp+6Ch+var_5C], eax
cmp	dword ptr [ebx+20h], 6
jz	short loc_61C6F71C
mov	[esp+6Ch+Str2],	offset aAttemptToSendP 
mov	[esp+6Ch+Str1],	offset aJabber_22 
call	purple_debug_misc
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6FDAD
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_60], eax
lea	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
lea	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Str2],	eax
mov	eax, [esp+6Ch+var_5C]
mov	[esp+6Ch+Str1],	eax
call	purple_status_to_jabber
mov	[esp+6Ch+Str2],	offset aBuzz_1 
mov	eax, [esp+6Ch+var_5C]
mov	[esp+6Ch+Str1],	eax
call	purple_status_get_attr_boolean
mov	ebp, eax
mov	[esp+6Ch+Str2],	offset aTune_1 
mov	[esp+6Ch+Str1],	esi
call	purple_presence_get_status
mov	esi, eax
mov	ecx, [ebx+90h]
test	ecx, ecx
jnz	loc_61C6F9A4
			
test	edi, edi
jnz	short loc_61C6F786
cmp	[ebx+0E0h], ebp
jz	loc_61C6F9D4
			
mov	edi, [esp+6Ch+var_44]
			
mov	[ebx+0E0h], ebp
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Str2],	eax
mov	[esp+6Ch+Str1],	ebx
call	jabber_presence_create_js
mov	edi, eax
mov	[esp+6Ch+Str2],	offset asc_61C83DAC 
mov	[esp+6Ch+Str1],	eax
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+6Ch+Str2],	offset aVcardTempXUpda 
mov	[esp+6Ch+Str1],	eax
call	xmlnode_set_namespace
mov	eax, [ebx+0D0h]
test	eax, eax
jnz	loc_61C6FC88
			
mov	[esp+6Ch+Str2],	edi
mov	[esp+6Ch+Str1],	ebx
call	jabber_send
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+Str2],	offset loc_61C6DA90
mov	eax, [ebx+2Ch]
mov	[esp+6Ch+Str1],	eax
call	g_hash_table_foreach
mov	[esp+6Ch+Str1],	edi
call	xmlnode_free
mov	eax, [ebx+0ECh]
test	eax, eax
jz	short loc_61C6F81B
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [ebx+0F4h]
test	eax, eax
jz	short loc_61C6F82D
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[ebx+0ECh], eax
mov	eax, [ebx+74h]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[ebx+0F4h], eax
mov	eax, [esp+6Ch+var_40]
mov	[ebx+0E8h], eax
mov	eax, [esp+6Ch+var_3C]
mov	[ebx+0F0h], eax
mov	eax, [ebx+50h]
mov	[ebx+54h], eax
mov	edi, [esp+6Ch+var_44]
mov	[esp+6Ch+Str1],	edi
call	g_free
mov	[esp+6Ch+Str1],	esi
call	purple_status_is_active
test	eax, eax
jnz	loc_61C6FA84
mov	esi, 0FFFFFFFFh
mov	[esp+6Ch+var_50], 0
mov	[esp+6Ch+var_54], 0
mov	[esp+6Ch+var_58], 0
xor	ebp, ebp
xor	edi, edi
mov	eax, [ebx+0F8h]
test	eax, eax
jz	loc_61C6FB4A
lea	esi, [esi+0]
			
mov	[esp+6Ch+var_38], edi
mov	[esp+6Ch+var_34], ebp
mov	eax, [esp+6Ch+var_58]
mov	[esp+6Ch+var_30], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_2C], eax
mov	[esp+6Ch+var_28], esi
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_24], eax
lea	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Str2],	eax
mov	eax, [ebx+64h]
mov	[esp+6Ch+Str1],	eax
call	jabber_tune_set
mov	eax, [ebx+0F8h]
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [ebx+0FCh]
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [ebx+100h]
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [ebx+104h]
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	eax, [ebx+10Ch]
mov	[esp+6Ch+Str1],	eax
call	g_free
mov	[esp+6Ch+Str1],	edi
call	g_strdup
mov	[ebx+0F8h], eax
mov	[esp+6Ch+Str1],	ebp
call	g_strdup
mov	[ebx+0FCh], eax
mov	eax, [esp+6Ch+var_58]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[ebx+100h], eax
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[ebx+104h], eax
mov	[ebx+108h], esi
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+Str1],	eax
call	g_strdup
mov	[ebx+10Ch], eax
mov	eax, [esp+6Ch+var_5C]
mov	[esp+6Ch+Str2],	eax
mov	[esp+6Ch+Str1],	ebx
call	jabber_presence_fake_to_self
jmp	loc_61C6F701
align 4
mov	edx, [esp+6Ch+var_44]
test	edx, edx
jnz	loc_61C6F776
mov	[esp+6Ch+Str1],	eax
call	purple_status_is_active
test	eax, eax
jz	loc_61C6F776
mov	[esp+6Ch+Str1],	esi
call	jabber_google_presence_outgoing
mov	[esp+6Ch+var_44], eax
jmp	loc_61C6F776
align 4
mov	eax, [esp+6Ch+var_40]
cmp	[ebx+0E8h], eax
jnz	loc_61C6F786
mov	eax, [ebx+0ECh]
test	eax, eax
jz	loc_61C6FD49
mov	edi, [esp+6Ch+var_44]
cmp	byte ptr [eax],	0
jnz	loc_61C6FD0A
test	edi, edi
jz	loc_61C6F78A
cmp	byte ptr [edi],	0
jnz	loc_61C6F78A
mov	[esp+6Ch+Str2],	edi 
mov	[esp+6Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C6F78A
mov	eax, [esp+6Ch+var_3C]
cmp	[ebx+0F0h], eax
jnz	loc_61C6F78A
mov	ecx, [ebx+0F4h]
test	ecx, ecx
jz	loc_61C6FDB2
cmp	byte ptr [ecx],	0
mov	eax, [ebx+74h]
jnz	loc_61C6FD85
test	eax, eax
jz	loc_61C6F78A
cmp	byte ptr [eax],	0
jnz	loc_61C6F78A
mov	[esp+6Ch+Str2],	eax 
mov	[esp+6Ch+Str1],	ecx 
call	strcmp
test	eax, eax
jnz	loc_61C6F78A
mov	eax, [ebx+50h]
cmp	[ebx+54h], eax
jnz	loc_61C6F78A
jmp	loc_61C6F86E
mov	[esp+6Ch+Str2],	offset aTune_artist_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_string
mov	edi, eax
mov	[esp+6Ch+Str2],	offset aTune_title_1 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_string
mov	ebp, eax
mov	[esp+6Ch+Str2],	offset aTune_album_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_string
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+Str2],	offset aTune_url_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_string
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+Str2],	offset aTune_track_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_string
mov	[esp+6Ch+var_50], eax
mov	[esp+6Ch+Str2],	offset aTune_time_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_value
test	eax, eax
jz	loc_61C6FCD4
mov	[esp+6Ch+Str2],	offset aTune_time_0 
mov	[esp+6Ch+Str1],	esi
call	purple_status_get_attr_int
mov	esi, eax
test	edi, edi
jz	loc_61C6F8A5
cmp	byte ptr [edi],	0
mov	eax, [ebx+0F8h]
jnz	loc_61C6FC70
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jnz	loc_61C6F8B8
mov	[esp+6Ch+Str2],	eax 
mov	[esp+6Ch+Str1],	edi 
call	strcmp
test	eax, eax
jnz	loc_61C6F8B8
test	ebp, ebp
jz	loc_61C6FCE0
cmp	byte ptr [ebp+0], 0
mov	eax, [ebx+0FCh]
jz	loc_61C6FCBC
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jz	loc_61C6F8B8
mov	[esp+6Ch+Str2],	eax 
mov	[esp+6Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jnz	loc_61C6F8B8
mov	eax, [esp+6Ch+var_58]
test	eax, eax
jz	loc_61C6FD20
mov	eax, [esp+6Ch+var_58]
cmp	byte ptr [eax],	0
mov	eax, [ebx+100h]
jnz	loc_61C6FCF4
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jnz	loc_61C6F8B8
mov	[esp+6Ch+Str2],	eax 
mov	eax, [esp+6Ch+var_58]
mov	[esp+6Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C6F8B8
mov	ecx, [esp+6Ch+var_54]
test	ecx, ecx
jz	loc_61C6FD5C
mov	eax, [esp+6Ch+var_54]
cmp	byte ptr [eax],	0
mov	eax, [ebx+104h]
jnz	loc_61C6FD33
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jnz	loc_61C6F8B8
mov	[esp+6Ch+Str2],	eax 
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C6F8B8
mov	eax, [esp+6Ch+var_50]
test	eax, eax
jz	loc_61C6FD9B
mov	eax, [esp+6Ch+var_50]
cmp	byte ptr [eax],	0
mov	eax, [ebx+10Ch]
jnz	loc_61C6FD6F
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jnz	loc_61C6F8B8
mov	[esp+6Ch+Str2],	eax 
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_61C6F8B8
cmp	[ebx+108h], esi
jnz	loc_61C6F8B8
jmp	loc_61C6F98D
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jz	loc_61C6F8B8
jmp	loc_61C6FB36
align 4
mov	[esp+6Ch+Str2],	offset aPhoto_1	
mov	[esp+6Ch+Str1],	ebp
call	xmlnode_new_child
mov	ecx, [ebx+74h]
test	ecx, ecx
jz	loc_61C6F7DE
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+Str2],	ecx
mov	[esp+6Ch+Str1],	eax
call	xmlnode_insert_data
jmp	loc_61C6F7DE
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jnz	loc_61C6F8B8
jmp	loc_61C6FB73
align 4
mov	esi, 0FFFFFFFFh
jmp	loc_61C6FB0E
align 10h
mov	eax, [ebx+0FCh]
test	eax, eax
jnz	loc_61C6F8B8
jmp	loc_61C6FB87
align 4
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jz	loc_61C6F8B8
jmp	loc_61C6FBB7
test	edi, edi
jz	loc_61C6F78A
cmp	byte ptr [edi],	0
jz	loc_61C6F78A
jmp	loc_61C6FA10
mov	eax, [ebx+100h]
test	eax, eax
jnz	loc_61C6F8B8
jmp	loc_61C6FBCF
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jz	loc_61C6F8B8
jmp	loc_61C6FBFF
mov	eax, [esp+6Ch+var_44]
test	eax, eax
jnz	loc_61C6F786
xor	edi, edi
jmp	loc_61C6FA24
mov	edx, [ebx+104h]
test	edx, edx
jnz	loc_61C6F8B8
jmp	loc_61C6FC17
test	eax, eax
jz	loc_61C6F8B8
cmp	byte ptr [eax],	0
jz	loc_61C6F8B8
jmp	loc_61C6FC47
test	eax, eax
jz	loc_61C6F78A
cmp	byte ptr [eax],	0
jz	loc_61C6F78A
jmp	loc_61C6FA5F
cmp	dword ptr [ebx+10Ch], 0
jnz	loc_61C6F8B8
jmp	loc_61C6FC5F
call	__stack_chk_fail
cmp	dword ptr [ebx+74h], 0
jnz	loc_61C6F78A
jmp	loc_61C6FA73
align 4
public jabber_set_status
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_61C6FE00
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C6FE9F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], esi
call	purple_status_is_exclusive
test	eax, eax
jnz	short loc_61C6FE58
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_protocol_data
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_status_get_type
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_primitive
cmp	eax, 9
jz	short loc_61C6FE68
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C6FE9F
mov	[esp+2Ch+arg_4], 0
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	jabber_presence_send
align 4
mov	[esp+2Ch+var_2C], esi
call	purple_status_is_active
test	eax, eax
jnz	short loc_61C6FE0C
jmp	short loc_61C6FDE9
align 4
mov	[esp+2Ch+var_28], offset aMood_1 
mov	[esp+2Ch+var_2C], esi
call	purple_status_get_attr_string
mov	edi, eax
mov	[esp+2Ch+var_28], offset aMoodtext_0 
mov	[esp+2Ch+var_2C], esi
call	purple_status_get_attr_string
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	jabber_mood_set
jmp	loc_61C6FDE9
			
call	__stack_chk_fail
public jabber_presence_register_handler
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSS_8 
call	g_strdup_printf
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C6FEF9
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], eax
mov	eax, ds:dword_61C98D84
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_hash_table_replace
call	__stack_chk_fail
align 10h
public jabber_presence_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_61C98D84, eax
mov	[esp+2Ch+var_24], offset loc_61C6D960
mov	[esp+2Ch+var_28], offset aJabberClient_2 
mov	[esp+2Ch+var_2C], offset aPriority_3 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset loc_61C6D9F8
mov	[esp+2Ch+var_28], offset aJabberClient_2 
mov	[esp+2Ch+var_2C], offset aShow 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset loc_61C6D2A8
mov	[esp+2Ch+var_28], offset aJabberClient_2 
mov	[esp+2Ch+var_2C], offset aStatus_2 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset sub_61C6D230
mov	[esp+2Ch+var_28], offset aHttpJabber__42 
mov	[esp+2Ch+var_2C], offset aC 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset sub_61C6D4F0
mov	[esp+2Ch+var_28], offset aUrnXmppDelay_0 
mov	[esp+2Ch+var_2C], offset aDelay_0 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset loc_61C6D260
mov	[esp+2Ch+var_28], offset aHttpJabber__43 
mov	[esp+2Ch+var_2C], offset aNick_2 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset loc_61C6D364
mov	[esp+2Ch+var_28], offset aJabberIqLast_2 
mov	[esp+2Ch+var_2C], offset aQuery_12 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset sub_61C6D4F0
mov	[esp+2Ch+var_28], offset aJabberXDelay_0 
mov	[esp+2Ch+var_2C], offset asc_61C83DAC 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset sub_61C6D3DC
mov	[esp+2Ch+var_28], offset aHttpJabber__44 
mov	[esp+2Ch+var_2C], offset asc_61C83DAC 
call	jabber_presence_register_handler
mov	[esp+2Ch+var_24], offset loc_61C6D2F0
mov	[esp+2Ch+var_28], offset aVcardTempXUpda 
mov	[esp+2Ch+var_2C], offset asc_61C83DAC 
call	jabber_presence_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7005F
add	esp, 2Ch
retn
call	__stack_chk_fail
public jabber_presence_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_61C98D84
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_61C98D84, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C70099
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0
call	g_string_new
test	ebx, ebx
jz	short loc_61C700F0
lea	esi, [esi+0]
mov	edx, [ebx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_string_append
mov	edx, [ebx+4]
test	edx, edx
jz	short loc_61C700F0
mov	[esp+2Ch+var_28], offset byte_61C83F00
mov	[esp+2Ch+var_2C], eax
call	g_string_append
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C700C4
			
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C70111
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public jabber_roster_request
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_34], offset aJabberIqRost_1 
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], esi
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aQuery_13 
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
test	byte ptr [esi+8Dh], 4
jz	short loc_61C7019A
mov	[esp+3Ch+var_34], offset aGoogleRoster_0 
mov	[esp+3Ch+var_38], offset aXmlnsGr_0 
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], offset a2_0 
mov	[esp+3Ch+var_38], offset aGrExt_0 
mov	eax, [esp+3Ch+var_20]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset sub_61C711A0
mov	[esp+3Ch+var_3C], ebx
call	jabber_iq_set_callback
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C701CC
mov	[esp+3Ch+arg_0], ebx
add	esp, 34h
pop	ebx
pop	esi
jmp	jabber_iq_send
call	__stack_chk_fail
align 4
public jabber_roster_group_get_global_name
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C7021E
mov	[esp+2Ch+var_2C], eax
call	purple_group_get_name
mov	ebx, eax
test	eax, eax
jz	short loc_61C7021E
mov	[esp+2Ch+var_28], offset aBuddies_0 
mov	[esp+2Ch+var_2C], offset aPidgin_13 
call	libintl_dgettext
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_strcmp0
test	eax, eax
jnz	short loc_61C70223
			
mov	ebx, offset aBuddies_0 
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C70236
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	[esp+4Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+28h]
test	ebx, ebx
jz	short loc_61C70274
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C70482
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, ecx
mov	[esp+4Ch+var_48], edx
mov	eax, [esi+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_find_buddy
mov	edi, eax
test	eax, eax
jz	short loc_61C7025B
test	ebp, ebp
jz	loc_61C703F0
mov	eax, ebp
call	sub_61C700A0
mov	ebx, eax
mov	[esp+4Ch+var_40], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aJabber_roster_ 
mov	[esp+4Ch+var_4C], offset aJabber_23 
call	purple_debug_info
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_44], offset aJabberIqRost_1 
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	jabber_iq_new_query
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_48], offset aQuery_13 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_48], offset aItem_7 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aJid_8	
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], edi
call	purple_buddy_get_local_buddy_alias
test	eax, eax
jz	loc_61C70478
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aName_14 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_set_attrib
mov	edi, ebp
test	ebp, ebp
jz	short loc_61C7037D
xchg	ax, ax
mov	[esp+4Ch+var_48], offset aGroup_1 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [edi]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_61C70350
mov	[esp+4Ch+var_4C], ebp
call	g_slist_free
test	byte ptr [esi+8Dh], 4
jnz	short loc_61C703A0
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_send
jmp	loc_61C7025B
align 10h
mov	[esp+4Ch+var_44], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	jabber_google_roster_outgoing
mov	[esp+4Ch+var_44], offset aGoogleRoster_0 
mov	[esp+4Ch+var_48], offset aXmlnsGr_0 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], offset a2_0 
mov	[esp+4Ch+var_48], offset aGrExt_0 
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
jmp	short loc_61C7038E
align 10h
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	eax, [esi+64h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	loc_61C7025B
mov	edi, [ebx]
mov	[esp+4Ch+var_4C], edi
call	purple_buddy_get_group
mov	[esp+4Ch+var_4C], eax
call	jabber_roster_group_get_global_name
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	g_slist_append
mov	ebp, eax
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	g_slist_remove
mov	ebx, eax
test	eax, eax
jnz	short loc_61C70410
mov	eax, ebp
call	sub_61C700A0
mov	ebx, eax
mov	[esp+4Ch+var_40], eax
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aJabber_roste_0 
mov	[esp+4Ch+var_4C], offset aJabber_23 
call	purple_debug_info
mov	[esp+4Ch+var_4C], ebx
call	g_free
jmp	loc_61C702C7
mov	eax, offset byte_61C83F49
jmp	loc_61C70334
call	__stack_chk_fail
align 4
public jabber_roster_group_change
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_38], edx
mov	esi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	short loc_61C704CE
test	esi, esi
jz	short loc_61C704CE
mov	[esp+5Ch+Str2],	esi 
mov	[esp+5Ch+Str1],	edx 
call	strcmp
test	eax, eax
jnz	short loc_61C704E8
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C70577
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Str2],	edx
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0Ch]
mov	[esp+5Ch+Str1],	eax
call	purple_find_buddies
mov	ebx, eax
xor	ebp, ebp
test	eax, eax
jz	short loc_61C7052A
nop
mov	edi, [ebx]
mov	[esp+5Ch+Str2],	esi
mov	[esp+5Ch+Str1],	ebp
call	g_slist_append
mov	ebp, eax
mov	[esp+5Ch+Str2],	edi
mov	[esp+5Ch+Str1],	ebx
call	g_slist_remove
mov	ebx, eax
test	eax, eax
jnz	short loc_61C70508
mov	[esp+5Ch+var_4C], esi
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+Str2],	offset aJabber_roste_1 
mov	[esp+5Ch+Str1],	offset aJabber_23 
call	purple_debug_info
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C70577
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+1Ch]
mov	ecx, ebp
mov	edx, [esp+5Ch+var_34]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C7023C
			
call	__stack_chk_fail
public jabber_roster_alias_change
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, [edi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_find_buddy
test	eax, eax
jz	short loc_61C705F8
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_blist_alias_buddy
test	esi, esi
jz	short loc_61C7060C
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aJabber_roste_2 
mov	[esp+2Ch+var_2C], offset aJabber_23 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C70613
mov	eax, [edi+1Ch]
xor	ecx, ecx
mov	edx, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C7023C
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C70613
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	esi, offset aNull_3 
jmp	short loc_61C705BC
			
call	__stack_chk_fail
public jabber_roster_add_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+1Ch]
cmp	dword ptr [ebx+20h], 6
jz	short loc_61C70654
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C707FF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], edi
call	purple_buddy_get_name
mov	[esp+5Ch+var_5C], eax
call	jabber_id_new
mov	ebp, eax
test	eax, eax
jz	short loc_61C7063B
mov	eax, [eax]
test	eax, eax
jz	short loc_61C706C4
mov	ecx, [ebp+4]
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_chat_find
test	eax, eax
jz	short loc_61C706C4
mov	[esp+5Ch+var_58], offset aCowardlyRefusi 
mov	[esp+5Ch+var_5C], offset aJabber_23 
call	purple_debug_warning
mov	[esp+5Ch+var_5C], edi
call	purple_blist_remove_buddy
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C707FF
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_id_free
align 4
			
mov	[esp+5Ch+var_5C], ebp
call	jabber_id_get_bare_jid
mov	[esp+5Ch+var_30], eax
mov	ebp, [ebp+8]
test	ebp, ebp
jz	short loc_61C706E3
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_blist_rename_buddy
mov	[esp+5Ch+var_54], 0
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_buddy_find
mov	edi, eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aJabber_roste_3 
mov	[esp+5Ch+var_5C], offset aJabber_23 
call	purple_debug_info
xor	ecx, ecx
mov	edx, [esp+5Ch+var_30]
mov	eax, ebx
call	sub_61C7023C
cmp	[ebx+60h], edi
jz	loc_61C707E6
test	edi, edi
jz	short loc_61C70739
test	byte ptr [edi+0Ch], 4
jnz	short loc_61C70778
mov	[esp+5Ch+var_54], offset aSubscribe_0 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	jabber_presence_subscription_set
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C707FF
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], edi
call	jabber_buddy_find_resource
test	eax, eax
jz	short loc_61C70751
mov	ebx, [eax+10h]
test	ebx, ebx
jz	short loc_61C707FB
mov	edx, offset aMessage_5 
mov	edi, [eax+8]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_34], edx
call	jabber_buddy_state_get_status_id
mov	[esp+5Ch+var_40], 0
mov	[esp+5Ch+var_44], ebx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_48], edx
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], offset aPriority_4 
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	eax, [esi+0Ch]
mov	[esp+5Ch+var_5C], eax
call	purple_prpl_got_user_status
jmp	loc_61C70751
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	jabber_presence_fake_to_self
jmp	loc_61C70751
xor	edx, edx
jmp	short loc_61C70798
			
call	__stack_chk_fail
public jabber_roster_remove_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	esi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], esi
call	purple_buddy_get_name
mov	[esp+4Ch+var_38], eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	purple_connection_get_account
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	purple_find_buddies
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	g_slist_remove
mov	edi, eax
test	eax, eax
jz	loc_61C708FF
xor	ebx, ebx
xchg	ax, ax
mov	ebp, [edi]
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_get_group
mov	[esp+4Ch+var_4C], eax
call	jabber_roster_group_get_global_name
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_slist_append
mov	ebx, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
call	g_slist_remove
mov	edi, eax
test	eax, eax
jnz	short loc_61C7086C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	jabber_roster_group_get_global_name
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_3C], eax
call	purple_buddy_get_name
mov	edx, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aJabber_roste_4 
mov	[esp+4Ch+var_4C], offset aJabber_23 
call	purple_debug_info
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C709B1
mov	edx, [esp+4Ch+var_34]
mov	eax, [edx+1Ch]
mov	ecx, ebx
mov	edx, [esp+4Ch+var_38]
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C7023C
mov	[esp+4Ch+var_44], offset aJabberIqRost_1 
mov	[esp+4Ch+var_48], 0
mov	edx, [esp+4Ch+var_34]
mov	eax, [edx+1Ch]
mov	[esp+4Ch+var_4C], eax
call	jabber_iq_new_query
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aQuery_13 
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	[esp+4Ch+var_48], offset aItem_7 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	ebp, eax
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aJid_8	
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], offset aRemove_1 
mov	[esp+4Ch+var_48], offset aSubscription_3 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], esi
call	purple_buddy_get_name
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aJabber_roste_5 
mov	[esp+4Ch+var_4C], offset aJabber_23 
call	purple_debug_info
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C709B1
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
			
call	__stack_chk_fail
align 4
public jabber_roster_group_rename
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_3C], eax
call	jabber_roster_group_get_global_name
mov	esi, eax
test	ebx, ebx
jz	short loc_61C70A0D
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_get_name
mov	[esp+3Ch+var_30], esi 
mov	[esp+3Ch+var_34], edi 
mov	[esp+3Ch+var_38], eax 
mov	[esp+3Ch+var_3C], ebp 
call	jabber_roster_group_change
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C709E8
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C70A21
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public jabber_roster_parse
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_44], edx
mov	esi, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_30], edx
mov	ebx, [esp+6Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_68], esi
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], edx
call	jabber_is_own_account
test	eax, eax
jz	loc_61C71124
mov	edx, [esp+6Ch+var_44]
mov	dword ptr [edx+28h], 1
test	byte ptr [edx+8Eh], 1
jnz	loc_61C71110
mov	[esp+6Ch+var_68], offset aItem_7 
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_get_child
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	loc_61C70D78
lea	esi, [esi+0]
mov	edx, [esp+6Ch+var_44]
test	byte ptr [edx+8Eh], 1
jz	short loc_61C70AD5
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], edx
call	jabber_facebook_roster_incoming
test	eax, eax
jz	loc_61C70D60
mov	[esp+6Ch+var_68], offset aSubscription_3 
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+6Ch+var_68], offset aJid_8	
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_attrib
mov	[esp+6Ch+var_50], eax
mov	[esp+6Ch+var_68], offset aName_14 
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_attrib
mov	[esp+6Ch+var_48], eax
mov	[esp+6Ch+var_68], offset aAsk_0	
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_attrib
mov	esi, eax
mov	ecx, [esp+6Ch+var_50]
test	ecx, ecx
jz	loc_61C70D60
mov	[esp+6Ch+var_64], 1
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], edx
call	jabber_buddy_find
mov	[esp+6Ch+var_40], eax
test	eax, eax
jz	loc_61C70D60
test	ebx, ebx
jz	short loc_61C70B8C
mov	[esp+6Ch+var_68], offset aRemove_1 
mov	[esp+6Ch+var_6C], ebx
call	g_str_equal
test	eax, eax
mov	eax, [esp+6Ch+var_40]
jz	loc_61C70F4C
mov	dword ptr [eax+0Ch], 10h
			
mov	[esp+6Ch+var_68], offset aSubscribe_0 
mov	[esp+6Ch+var_6C], esi
call	purple_strequal
mov	edx, [esp+6Ch+var_40]
test	eax, eax
mov	eax, [edx+0Ch]
jz	loc_61C70EFC
or	eax, 2
mov	[edx+0Ch], eax
test	al, 10h
jnz	loc_61C70F0A
mov	edx, [esp+6Ch+var_44]
test	byte ptr [edx+8Dh], 4
jz	short loc_61C70BE2
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], edx
call	jabber_google_roster_incoming
test	eax, eax
jz	loc_61C70D60
mov	[esp+6Ch+var_68], offset aGroup_1 
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_child
mov	esi, eax
xor	ebx, ebx
test	eax, eax
jnz	short loc_61C70C48
jmp	loc_61C7106F
align 4
			
mov	[esp+6Ch+var_6C], offset aBuddies_0 
call	g_strdup
mov	edi, eax
mov	[esp+6Ch+var_64], offset purple_utf8_strcasecmp
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], ebx
call	g_slist_find_custom
test	eax, eax
jz	loc_61C70DA8
mov	[esp+6Ch+var_6C], edi
call	g_free
mov	[esp+6Ch+var_6C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jz	loc_61C70DC8
			
mov	[esp+6Ch+var_6C], esi
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_61C70C04
cmp	byte ptr [eax],	0
jz	short loc_61C70C04
mov	[esp+6Ch+var_68], offset aBuddies_0 
mov	[esp+6Ch+var_6C], offset aPidgin_13 
call	libintl_dgettext
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_strcmp0
test	eax, eax
jz	short loc_61C70C04
jmp	short loc_61C70C12
align 4
mov	ebx, edi
test	ebx, ebx
jz	loc_61C70D36
mov	eax, ebx
call	sub_61C700A0
mov	esi, eax
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aJabber_roste_6 
mov	[esp+6Ch+var_6C], offset aJabber_23 
call	purple_debug_info
mov	[esp+6Ch+var_6C], esi
call	g_free
mov	esi, [esp+6Ch+var_48]
nop
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	purple_find_group
mov	ebp, eax
mov	[esp+6Ch+var_64], esi
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	purple_buddy_new
mov	edi, eax
test	ebp, ebp
jz	loc_61C70FFC
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], edi
call	purple_blist_add_buddy
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], edi
call	purple_blist_alias_buddy
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C70CC4
mov	[esp+6Ch+var_6C], 0
call	g_slist_free
mov	eax, [esp+6Ch+var_40]
mov	edx, [esp+6Ch+var_44]
cmp	[edx+60h], eax
jnz	short loc_61C70D60
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], edx
call	jabber_presence_fake_to_self
nop
			
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_get_next_twin
mov	[esp+6Ch+var_54], eax
test	eax, eax
jnz	loc_61C70AAC
mov	ebx, [esp+6Ch+var_34]
test	ebx, ebx
jz	loc_61C710DC
mov	edx, [esp+6Ch+var_44]
mov	dword ptr [edx+28h], 0
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C7119B
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], ebx
call	g_slist_prepend
mov	ebx, eax
mov	[esp+6Ch+var_6C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	loc_61C70C48
mov	edx, [esp+6Ch+var_44]
add	edx, 64h
mov	[esp+6Ch+var_38], edx
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+64h]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	[esp+6Ch+var_3C], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddies
mov	ebp, eax
test	ebx, ebx
jz	loc_61C7109E
mov	edi, ebx
test	eax, eax
jnz	short loc_61C70E38
jmp	loc_61C70C8E
align 4
			
mov	eax, [esi]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], edi
call	g_slist_delete_link
mov	edi, eax
test	ebp, ebp
jz	loc_61C70C84
mov	ebx, [ebp+0]
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_group
mov	[esp+6Ch+var_4C], eax
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], ebp
call	g_slist_delete_link
mov	ebp, eax
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	purple_group_get_name
mov	[esp+6Ch+var_64], offset purple_utf8_strcasecmp
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_slist_find_custom
mov	esi, eax
test	eax, eax
jz	loc_61C70F84
mov	[esp+6Ch+var_68], offset aServernick_0 
mov	[esp+6Ch+var_6C], ebx
call	purple_blist_node_get_string
test	eax, eax
jz	short loc_61C70EAD
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_38]
mov	eax, [edx]
mov	[esp+6Ch+var_6C], eax
call	serv_got_alias
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_local_buddy_alias
mov	edx, [esp+6Ch+var_48]
test	edx, edx
jz	loc_61C70E18
mov	[esp+6Ch+var_68], eax
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jnz	loc_61C70E18
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_38]
mov	eax, [edx]
mov	[esp+6Ch+var_6C], eax
call	purple_serv_got_private_alias
jmp	loc_61C70E18
and	eax, 0FFFFFFFDh
mov	[edx+0Ch], eax
test	al, 10h
jz	loc_61C70BB9
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddies
mov	esi, eax
mov	ebx, eax
test	eax, eax
jz	short loc_61C70F3D
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	purple_blist_remove_buddy
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C70F2C
mov	[esp+6Ch+var_6C], esi
call	g_slist_free
jmp	loc_61C70D60
align 4
mov	edx, [esp+6Ch+var_44]
cmp	[edx+60h], eax
jz	loc_61C7103C
mov	[esp+6Ch+var_68], offset aNone_2 
mov	[esp+6Ch+var_6C], ebx
call	g_str_equal
test	eax, eax
jz	loc_61C710B4
mov	eax, [esp+6Ch+var_40]
mov	dword ptr [eax+0Ch], 0
jmp	loc_61C70B8C
align 4
mov	[esp+6Ch+var_68], offset aBuddies_0 
mov	[esp+6Ch+var_6C], offset aPidgin_13 
call	libintl_dgettext
mov	esi, eax
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	purple_group_get_name
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], eax
call	g_strcmp0
test	eax, eax
jz	loc_61C71048
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	jabber_roster_group_get_global_name
mov	esi, eax
mov	[esp+6Ch+var_6C], ebx
call	purple_buddy_get_name
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aJabber_roste_7 
mov	[esp+6Ch+var_6C], offset aJabber_23 
call	purple_debug_info
mov	[esp+6Ch+var_6C], ebx
call	purple_blist_remove_buddy
jmp	loc_61C70E30
align 4
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	purple_group_new
mov	ebp, eax
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	purple_blist_add_group
jmp	loc_61C70CF2
mov	[esp+6Ch+var_68], offset aBoth_1 
mov	[esp+6Ch+var_6C], ebx
call	g_str_equal
test	eax, eax
jz	loc_61C70B8C
mov	eax, [esp+6Ch+var_40]
lea	esi, [esi+0]
mov	dword ptr [eax+0Ch], 0Ch
jmp	loc_61C70B8C
mov	[esp+6Ch+var_64], offset purple_utf8_strcasecmp
mov	[esp+6Ch+var_68], offset aBuddies_0 
mov	[esp+6Ch+var_6C], edi
call	g_slist_find_custom
mov	esi, eax
test	eax, eax
jz	loc_61C70FBA
jmp	loc_61C70E7F
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+64h]
mov	[esp+6Ch+var_6C], eax
call	purple_connection_get_account
mov	[esp+6Ch+var_3C], eax
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_find_buddies
mov	ebp, eax
test	ebp, ebp
jz	loc_61C71178
mov	[esp+6Ch+var_6C], ebp
call	g_slist_free
jmp	loc_61C70D42
align 4
mov	[esp+6Ch+var_68], offset aTo_16	
mov	[esp+6Ch+var_6C], ebx
call	g_str_equal
test	eax, eax
jz	loc_61C71150
mov	eax, [esp+6Ch+var_40]
mov	dword ptr [eax+0Ch], 4
jmp	loc_61C70B8C
mov	[esp+6Ch+var_68], 2
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], edx
call	jabber_iq_new
mov	ebx, eax
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	jabber_iq_set_id
mov	[esp+6Ch+var_6C], ebx
call	jabber_iq_send
jmp	loc_61C70D84
align 10h
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], edx
call	jabber_facebook_roster_cleanup
jmp	loc_61C70A8D
align 4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7119B
mov	[esp+6Ch+arg_8], esi
mov	[esp+6Ch+arg_4], offset	aReceivedBogonR	
mov	[esp+6Ch+arg_0], offset	aJabber_23 
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_warning
mov	[esp+6Ch+var_68], offset aFrom_5 
mov	[esp+6Ch+var_6C], ebx
call	g_str_equal
test	eax, eax
jz	loc_61C7101D
mov	eax, [esp+6Ch+var_40]
mov	dword ptr [eax+0Ch], 8
jmp	loc_61C70B8C
mov	[esp+6Ch+var_6C], offset aBuddies_0 
call	g_strdup
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], 0
call	g_slist_append
mov	ebx, eax
jmp	loc_61C70C86
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
cmp	ebx, 3
jz	short loc_61C7121C
mov	[esp+4Ch+var_48], offset aQuery_13 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C71244
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	jabber_roster_parse
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7123C
			
mov	[esp+4Ch+arg_4], 6
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_stream_set_state
mov	[esp+4Ch+var_48], offset aErrorRetriev_0 
mov	[esp+4Ch+var_4C], offset aJabber_23 
call	purple_debug_error
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jz	short loc_61C71204
			
call	__stack_chk_fail
align 4
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_61C71204
jmp	short loc_61C7123C
align 4
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+Str1]
mov	edx, [esp+1Ch+Str2]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_61C7128D
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_61C712A2
mov	[esp+1Ch+Str2],	edx 
mov	eax, [eax]
mov	[esp+1Ch+Str1],	eax 
add	esp, 1Ch
jmp	strcmp
mov	eax, 0FFFFFFFFh
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C712A2
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_4]
mov	ebx, [eax+7Ch]
mov	eax, [ebx+40h]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], eax
call	g_malloc
mov	ebp, eax
mov	[esi], eax
jmp	short loc_61C712FD
align 10h
mov	edx, [ebx+40h]
mov	esi, [edx+14h]
mov	edi, ebp
mov	ecx, eax
rep movsb
mov	ebp, edi
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+40h]
mov	[esp+4Ch+var_4C], eax
call	purple_circ_buffer_mark_read
mov	eax, [ebx+40h]
mov	[esp+4Ch+var_4C], eax
call	purple_circ_buffer_get_max_read
test	eax, eax
jnz	short loc_61C712E0
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C71324
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_get_user_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aAnErrorOccurre 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71376
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_cancel_remote
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_get_user_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aTheRemoteUserC 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_remaining
test	eax, eax
jnz	short loc_61C713E4
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_completed
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C713FD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_end
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C713FD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_cancel_remote
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_ibb_session_get_user_data
mov	ebx, eax
mov	edi, [eax+7Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_xfer_get_bytes_remaining
cmp	eax, esi
jnb	short loc_61C7146C
mov	[esp+3Ch+var_38], offset aIbbFileTransfe 
mov	[esp+3Ch+var_3C], offset aJabber_24 
call	purple_debug_error
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C714B3
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_cancel_remote
align 4
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aAboutToWriteUB 
mov	[esp+3Ch+var_3C], offset aJabber_24 
call	purple_debug_info
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebp
mov	eax, [edi+40h]
mov	[esp+3Ch+var_3C], eax
call	purple_circ_buffer_append
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C714B3
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_prpl_ready
			
call	__stack_chk_fail
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_61C71508
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71519
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71519
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
test	ebx, ebx
jz	loc_61C7165E
mov	edi, [ebx]
mov	[esp+2Ch+var_28], esi
mov	eax, [edi+4Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	[edi+4Ch], eax
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C71561
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_61C71570
mov	[esp+2Ch+var_2C], eax
call	purple_network_listen_cancel
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_61C71583
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	jabber_iq_remove_callback_by_id
mov	eax, [ebx+34h]
test	eax, eax
js	short loc_61C71592
mov	[esp+2Ch+var_2C], eax
call	wpurple_close
mov	[esp+2Ch+var_2C], esi
call	purple_xfer_get_type
dec	eax
jz	loc_61C71694
			
mov	eax, [ebx+0Ch]
test	eax, eax
jnz	loc_61C71684
mov	eax, [ebx+3Ch]
test	eax, eax
jnz	loc_61C71674
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_61C715E1
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_61C714B8
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+38h]
test	eax, eax
jz	short loc_61C71607
mov	[esp+2Ch+var_28], offset aJabber_si_xf_0 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_destroy
mov	eax, [ebx+40h]
test	eax, eax
jz	short loc_61C71616
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_destroy
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aJabber_si_xf_1 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	dword ptr [esi+7Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C716C3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	loc_61C715B7
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	loc_61C715AC
align 4
mov	edx, [esi+30h]
test	edx, edx
js	loc_61C715A1
mov	[esp+2Ch+var_28], offset aRemovePortMapp 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	eax, [esi+30h]
mov	[esp+2Ch+var_2C], eax
call	purple_network_remove_port_mapping
jmp	loc_61C715A1
call	__stack_chk_fail
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C716EF
add	esp, 1Ch
jmp	sub_61C71520
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+7Ch]
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_61C71719
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_close
mov	eax, ebx
call	sub_61C71520
mov	[esp+2Ch+var_28], offset aInJabber_si__2 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71745
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], esi
call	jabber_ibb_session_get_user_data
mov	ebx, eax
mov	[esp], eax
call	purple_xfer_get_bytes_remaining
test	eax, eax
jz	short loc_61C71790
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C717C2
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_xfer_prpl_ready
mov	[esp], esi
call	jabber_ibb_session_close
mov	dword ptr [esp+4], 1
mov	[esp], ebx
call	purple_xfer_set_completed
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C717C2
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_xfer_end
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+7Ch]
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_61C717ED
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_close
mov	eax, ebx
call	sub_61C71520
mov	[esp+2Ch+var_28], offset aInJabber_si__3 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71819
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	eax, [ebx]
mov	edi, [ebx+18h]
test	edi, edi
jz	loc_61C7191A
mov	ecx, [ebx+10h]
test	ecx, ecx
jnz	loc_61C7191A
mov	dword ptr [esp+4], 3
mov	[esp], eax
call	jabber_iq_new
mov	edi, eax
mov	eax, [esi+0Ch]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aTo_17 
mov	eax, [edi+8]
mov	[esp], eax
call	xmlnode_set_attrib
mov	eax, [ebx+18h]
mov	[esp+4], eax
mov	[esp], edi
call	jabber_iq_set_id
mov	dword ptr [esp+4], offset aError_8 
mov	eax, [edi+8]
mov	[esp], eax
call	xmlnode_new_child
mov	ebx, eax
mov	dword ptr [esp+8], offset aCancel_9 
mov	dword ptr [esp+4], offset aType_13 
mov	[esp], eax
call	xmlnode_set_attrib
mov	dword ptr [esp+4], offset aForbidden_1 
mov	[esp], ebx
call	xmlnode_new_child
mov	dword ptr [esp+4], offset aUrnIetfPara_13 
mov	[esp], eax
call	xmlnode_set_namespace
mov	dword ptr [esp+4], offset aText_2 
mov	[esp], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	dword ptr [esp+4], offset aUrnIetfPara_13 
mov	[esp], eax
call	xmlnode_set_namespace
mov	dword ptr [esp+8], 0FFFFFFFFh
mov	dword ptr [esp+4], offset aOfferDeclined 
mov	[esp], ebx
call	xmlnode_insert_data
mov	[esp], edi
call	jabber_iq_send
			
mov	eax, esi
call	sub_61C71520
mov	dword ptr [esp+4], offset aInJabber_si__4 
mov	dword ptr [esp], offset	aJabber_24 
call	purple_debug_info
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71948
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7197B
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_xfer_cancel_local
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx+7Ch]
mov	eax, [ebx+18h]
mov	[esp+6Ch+var_6C], eax
call	g_path_get_basename
mov	[ebx+14h], eax
mov	[esp+6Ch+var_68], 0
mov	eax, [esi]
mov	[esp+6Ch+var_6C], eax
call	jabber_iq_new
mov	ebp, eax
mov	eax, [ebx+0Ch]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aTo_17	
mov	eax, [ebp+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aSi 
mov	eax, [ebp+8]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+6Ch+var_68], offset aHttpJabber__48 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_namespace
mov	eax, [esi]
mov	[esp+6Ch+var_6C], eax
call	jabber_get_next_id
mov	[esi+14h], eax
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aId_11	
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_attrib
mov	[esp+6Ch+var_64], offset aHttpJabber__45 
mov	[esp+6Ch+var_68], offset aProfile 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aFile 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	[esp+6Ch+var_68], offset aHttpJabber__45 
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_54], eax
call	xmlnode_set_namespace
mov	eax, [ebx+14h]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aName_15 
mov	edx, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], edx
call	xmlnode_set_attrib
mov	eax, [ebx+1Ch]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset aU_0 
mov	[esp+6Ch+var_68], 20h
lea	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_50], ecx
call	g_snprintf
mov	ecx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aSize 
mov	edx, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], edx
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aFeature_1 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	edi, eax
mov	[esp+6Ch+var_68], offset aHttpJabber__49 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_namespace
mov	[esp+6Ch+var_68], offset asc_61C844EB 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	edi, eax
mov	[esp+6Ch+var_68], offset aJabberXData_3	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_namespace
mov	[esp+6Ch+var_64], offset aForm 
mov	[esp+6Ch+var_68], offset aType_13 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aField_1 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	edi, eax
mov	[esp+6Ch+var_64], offset aStreamMethod 
mov	[esp+6Ch+var_68], offset aVar_2	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_64], offset aListSingle 
mov	[esp+6Ch+var_68], offset aType_13 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aOption 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	[esp+6Ch+var_68], offset aValue_2 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset aHttpJabber__46 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_insert_data
mov	[esp+6Ch+var_68], offset aOption 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
mov	[esp+6Ch+var_68], offset aValue_2 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset aHttpJabber__47 
mov	[esp+6Ch+var_6C], eax
call	xmlnode_insert_data
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset sub_61C73450
mov	[esp+6Ch+var_6C], ebp
call	jabber_iq_set_callback
mov	eax, [esi+18h]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [ebp+4]
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	[esi+18h], eax
mov	[esp+6Ch+var_6C], ebp
call	jabber_iq_send
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C71C0A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx+7Ch]
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+var_58], offset asc_61C8457B 
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_strsplit
mov	ebp, eax
mov	[esp+5Ch+var_54], 0
mov	eax, [eax]
mov	[esp+5Ch+var_58], eax
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find
test	eax, eax
jz	loc_61C71CF0
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	jabber_buddy_find_resource
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_54], edi
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSS_9 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_5C], ebp
call	g_strfreev
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[ebx+0Ch], edi
mov	ebp, [esp+5Ch+var_30]
test	ebp, ebp
jz	short loc_61C71CBD
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	jabber_resource_know_capabilities
test	eax, eax
jnz	short loc_61C71D24
			
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_61C746FC
mov	[esp+5Ch+var_58], edi
mov	eax, [esi]
mov	[esp+5Ch+var_5C], eax
call	jabber_disco_info_do
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C71E0A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_54], edi
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSS_9 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_5C], ebp
call	g_strfreev
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[ebx+0Ch], edi
jmp	short loc_61C71CBD
align 4
mov	[esp+5Ch+var_58], offset aHttpJabber__47 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C71D40
or	dword ptr [esi+1Ch], 8
mov	[esp+5Ch+var_58], offset aHttpJabber__45 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	jabber_resource_has_capability
test	eax, eax
jz	short loc_61C71D78
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C71E0A
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C71980
align 4
mov	[esp+5Ch+var_58], offset aUnableToSendFi 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_58], offset aFileSendFailed 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aFileSendFailed 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [esi]
mov	eax, [eax+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_cancel_local
jmp	loc_61C71CD7
			
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+7Ch]
mov	[esp+8Ch+var_8C], ebx
call	purple_xfer_get_type
dec	eax
jz	loc_61C71F68
mov	[esp+8Ch+var_88], 2
mov	eax, [ebp+0]
mov	[esp+8Ch+var_8C], eax
call	jabber_iq_new
mov	esi, eax
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aTo_17	
mov	eax, [esi+8]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	eax, [ebp+18h]
test	eax, eax
jz	loc_61C7200C
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], esi
call	jabber_iq_set_id
mov	dword ptr [ebp+10h], 1
mov	[esp+8Ch+var_88], offset aSi 
mov	eax, [esi+8]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aHttpJabber__48 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_namespace
mov	[esp+8Ch+var_88], offset aFeature_1 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aHttpJabber__49 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_namespace
mov	[esp+8Ch+var_88], offset asc_61C844EB 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aJabberXData_3	
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_namespace
mov	[esp+8Ch+var_84], offset aSubmit_0 
mov	[esp+8Ch+var_88], offset aType_13 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_set_attrib
mov	[esp+8Ch+var_88], offset aField_1 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+8Ch+var_84], offset aStreamMethod 
mov	[esp+8Ch+var_88], offset aVar_2	
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	edx, [ebp+1Ch]
test	dl, 4
jnz	short loc_61C71FAC
and	edx, 8
jnz	loc_61C71FDC
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C72375
mov	[esp+8Ch+arg_0], esi
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_iq_send
align 4
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_8C], eax
call	jabber_get_resource
mov	esi, eax
test	eax, eax
jz	loc_61C72028
mov	edx, eax
mov	eax, ebx
call	sub_61C71C10
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C72375
mov	[esp+8Ch+arg_0], esi
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+8Ch+var_88], offset aValue_2 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], offset aHttpJabber__46 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
jmp	loc_61C71F44
align 4
mov	[esp+8Ch+var_88], offset aValue_2 
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], offset aHttpJabber__47 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
jmp	loc_61C71F44
align 4
mov	[esp+8Ch+var_88], offset aSendingSiResul 
mov	[esp+8Ch+var_8C], offset aJabber_24 
call	purple_debug_error
jmp	loc_61C71E81
align 4
mov	[esp+8Ch+var_84], 1
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_88], eax
mov	eax, [ebp+0]
mov	[esp+8Ch+var_8C], eax
call	jabber_buddy_find
mov	[esp+8Ch+var_38], eax
test	eax, eax
jz	loc_61C72355
mov	esi, [eax]
test	esi, esi
jz	short loc_61C720A5
mov	[esp+8Ch+var_3C], 0
mov	[esp+8Ch+var_34], ebp
xor	ebp, ebp
jmp	short loc_61C72087
mov	[esp+8Ch+var_88], offset aHttpJabber__45 
mov	[esp+8Ch+var_8C], edi
call	jabber_resource_has_capability
test	eax, eax
jnz	loc_61C7216C
			
mov	esi, [esi+4]
test	esi, esi
jz	loc_61C721A4
mov	edi, [esi]
mov	[esp+8Ch+var_8C], edi
call	jabber_resource_know_capabilities
test	eax, eax
jnz	short loc_61C72064
			
mov	[esp+8Ch+var_88], edi
mov	[esp+8Ch+var_8C], ebp
call	g_list_append
mov	ebp, eax
jmp	short loc_61C7207C
			
mov	eax, [esp+8Ch+var_38]
test	byte ptr [eax+0Ch], 4
jz	loc_61C72365
mov	ebx, [ebx+0Ch]
mov	[esp+8Ch+var_88], offset aUnableToSend_0 
			
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+8Ch+var_88], offset aFileSendFailed 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	esi, eax
mov	[esp+8Ch+var_88], offset aFileSendFailed 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+8Ch+var_74], 0
mov	[esp+8Ch+var_78], 0
mov	[esp+8Ch+var_7C], ebx
mov	[esp+8Ch+var_80], esi
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], 0
mov	eax, [ebp+0]
mov	eax, [eax+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_notify_message
mov	[esp+8Ch+var_8C], ebx
call	g_free
mov	[esp+8Ch+var_3C], 0
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C72375
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+arg_0], eax
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
align 4
mov	[esp+8Ch+var_88], offset aHttpJabber__46 
mov	[esp+8Ch+var_8C], edi
call	jabber_resource_has_capability
test	eax, eax
jnz	loc_61C72095
mov	[esp+8Ch+var_88], offset aHttpJabber__47 
mov	[esp+8Ch+var_8C], edi
call	jabber_resource_has_capability
test	eax, eax
jnz	loc_61C72095
jmp	loc_61C7207C
align 4
mov	[esp+8Ch+var_3C], ebp
mov	ebp, [esp+8Ch+var_34]
mov	eax, [esp+8Ch+var_3C]
test	eax, eax
jz	loc_61C720A5
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_8C], eax
call	g_list_length
dec	eax
jz	loc_61C72340
mov	esi, [ebx+0Ch]
mov	[esp+8Ch+var_88], offset aPleaseSelectTh 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], eax
call	g_strdup_printf
mov	[esp+8Ch+var_38], eax
call	purple_request_fields_new
mov	[esp+8Ch+var_34], eax
mov	[esp+8Ch+var_88], offset aResource_2 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], offset aResource_3 
call	purple_request_field_choice_new
mov	esi, eax
mov	[esp+8Ch+var_8C], 0
call	purple_request_field_group_new
mov	[esp+8Ch+var_30], eax
mov	edi, [esp+8Ch+var_3C]
lea	esi, [esi+0]
mov	eax, [edi]
mov	eax, [eax+4]
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], esi
call	purple_request_field_choice_add
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_61C72240
mov	[esp+8Ch+var_88], esi
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_8C], eax
call	purple_request_field_group_add_field
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields_add_group
mov	edi, [ebx+0Ch]
mov	eax, [ebp+0]
mov	eax, [eax+64h]
mov	edx, [eax+0Ch]
mov	[esp+8Ch+var_88], offset aCancel_8 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
mov	[esp+8Ch+var_44], edx
call	libintl_dgettext
mov	[esp+8Ch+var_88], offset aSendFile 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
mov	[esp+8Ch+var_40], eax
call	libintl_dgettext
mov	esi, eax
mov	[esp+8Ch+var_88], offset aSelectAResourc 
mov	[esp+8Ch+var_8C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+8Ch+var_5C], ebx
mov	[esp+8Ch+var_60], 0
mov	[esp+8Ch+var_64], edi
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_68], edx
mov	[esp+8Ch+var_6C], offset sub_61C71950
mov	ecx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_70], ecx
mov	[esp+8Ch+var_74], offset loc_61C741A8
mov	[esp+8Ch+var_78], esi
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], 0
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+var_88], eax
mov	eax, [ebp+0]
mov	eax, [eax+64h]
mov	[esp+8Ch+var_8C], eax
call	purple_request_fields
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_8C], eax
call	g_free
jmp	loc_61C72144
align 10h
mov	edx, [esp+8Ch+var_3C]
mov	eax, [edx]
mov	edx, [eax+4]
mov	eax, ebx
call	sub_61C71C10
jmp	loc_61C72144
mov	ebx, [ebx+0Ch]
mov	[esp+8Ch+var_88], offset aUnableToSend_1 
jmp	loc_61C720BE
mov	ebx, [ebx+0Ch]
mov	[esp+8Ch+var_88], offset aUnableToSend_2 
jmp	loc_61C720BE
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+7Ch]
mov	[esp+3Ch+addr],	offset aInJabber_si_xf 
mov	[esp+3Ch+s], offset aJabber_24 
call	purple_debug_info
mov	[esp+3Ch+addrlen], 0 
mov	[esp+3Ch+addr],	0 
mov	[esp+3Ch+s], edi 
call	accept
sub	esp, 0Ch
mov	esi, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_61C72424
mov	eax, [ebx+34h]
mov	[esp+3Ch+s], eax
call	purple_input_remove
mov	[esp+3Ch+s], edi
call	wpurple_close
mov	dword ptr [ebp+34h], 0FFFFFFFFh
mov	[esp+3Ch+s], esi
call	_purple_network_set_common_socket_flags
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+addrlen], offset sub_61C725A0
mov	[esp+3Ch+addr],	1
mov	[esp+3Ch+s], esi
call	purple_input_add
mov	[ebx+34h], eax
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C72476
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C72410
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_61C72410
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+s], eax
call	wpurple_strerror
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C72476
mov	[esp+3Ch+arg_8], eax
mov	[esp+3Ch+arg_4], offset	aAcceptS 
mov	[esp+3Ch+arg_0], offset	aJabber_24 
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_warning
			
call	__stack_chk_fail
align 4
			
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	edx, [ebx+2Ch]
mov	eax, [ebx+30h]
sub	eax, edx
mov	[esp+2Ch+var_24], eax
add	edx, [ebx+28h]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], edi
call	wpurple_write
test	eax, eax
js	loc_61C72564
add	eax, [ebx+2Ch]
mov	[ebx+2Ch], eax
cmp	eax, [ebx+30h]
jnb	short loc_61C724E0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C7259B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esi+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
mov	eax, [ebx+28h]
cmp	byte ptr [eax+1], 0
jz	short loc_61C72524
mov	[esp+2Ch+var_2C], edi
call	wpurple_close
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C7259B
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_xfer_cancel_remote
align 4
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], offset sub_61C729F4
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], edi
call	purple_input_add
mov	[esi+34h], eax
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+28h], 0
mov	dword ptr [ebx+2Ch], 0
jmp	loc_61C724C6
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_61C724C6
mov	eax, [esi+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+28h], 0
jmp	loc_61C724FB
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 13Ch
mov	ebp, [esp+14Ch+arg_0]
mov	eax, [esp+14Ch+arg_4]
mov	[esp+14Ch+var_130], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+14Ch+var_20], eax
xor	eax, eax
mov	ebx, [ebp+7Ch]
mov	[esp+14Ch+var_148], offset aInJabber_si__0 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	eax, [esp+14Ch+var_130]
mov	[ebp+30h], eax
mov	eax, [ebx+2Ch]
cmp	eax, 1
jbe	loc_61C7280C
mov	edx, [ebx+28h]
movsx	dx, byte ptr [edx+1]
lea	esi, [eax-2]
movsx	ecx, dl
cmp	esi, ecx
jb	short loc_61C7266C
mov	eax, [ebp+34h]
mov	[esp+14Ch+var_14C], eax
call	purple_input_remove
mov	dword ptr [ebp+34h], 0
mov	[esp+14Ch+var_148], offset aCheckingToMake 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+28h]
cmp	byte ptr [eax],	5
jz	loc_61C72700
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_14C], eax
call	wpurple_close
mov	[esp+14Ch+var_14C], ebp
call	purple_xfer_cancel_remote
			
mov	eax, [esp+14Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C728EB
add	esp, 13Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
sub	edx, eax
add	edx, 2
movzx	esi, dx
mov	[esp+14Ch+var_140], esi
mov	[esp+14Ch+var_144], ecx
mov	[esp+14Ch+var_148], offset aReadingUBytesF 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	[esp+14Ch+var_144], esi
lea	esi, [esp+14Ch+var_120]
mov	[esp+14Ch+var_148], esi
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_14C], eax
call	wpurple_read
mov	edx, eax
cmp	eax, 0
jl	loc_61C727E4
jz	loc_61C727F2
mov	eax, [ebx+2Ch]
add	eax, edx
mov	[esp+14Ch+var_148], eax
mov	eax, [ebx+28h]
mov	[esp+14Ch+var_14C], eax
mov	[esp+14Ch+var_134], edx
call	g_realloc
mov	[ebx+28h], eax
add	eax, [ebx+2Ch]
mov	edx, [esp+14Ch+var_134]
mov	edi, eax
mov	ecx, edx
rep movsb
add	edx, [ebx+2Ch]
mov	[ebx+2Ch], edx
sub	edx, 2
mov	eax, [ebx+28h]
movsx	eax, byte ptr [eax+1]
cmp	edx, eax
jb	loc_61C7264C
jmp	loc_61C72606
align 10h
movsx	eax, byte ptr [eax+1]
mov	[esp+14Ch+var_144], eax
mov	[esp+14Ch+var_148], offset aGoingToTestHhu 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+28h]
cmp	byte ptr [eax+1], 0
jle	loc_61C7287C
xor	esi, esi
jmp	short loc_61C7273D
align 10h
inc	esi
movsx	edx, byte ptr [eax+1]
cmp	edx, esi
jle	loc_61C7287C
movsx	eax, byte ptr [eax+esi+2]
mov	[esp+14Ch+var_144], eax
mov	[esp+14Ch+var_148], offset aTestingHhu 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+28h]
cmp	byte ptr [eax+esi+2], 0
jnz	short loc_61C72730
mov	[esp+14Ch+var_14C], eax
call	g_free
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+30h], 2
mov	[esp+14Ch+var_14C], 2
call	g_malloc
mov	[ebx+28h], eax
mov	byte ptr [eax],	5
mov	eax, [ebx+28h]
mov	byte ptr [eax+1], 0
mov	[esp+14Ch+var_140], ebp
mov	[esp+14Ch+var_144], offset sub_61C7247C
mov	[esp+14Ch+var_148], 2
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_14C], eax
call	purple_input_add
mov	[ebp+34h], eax
mov	[esp+14Ch+var_144], 2
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_148], eax
mov	[esp+14Ch+var_14C], ebp
call	sub_61C7247C
mov	dword ptr [ebx+28h], 0
mov	dword ptr [ebx+2Ch], 0
jmp	loc_61C7264C
align 4
			
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_61C7264C
			
mov	eax, [ebp+34h]
mov	[esp+14Ch+var_14C], eax
call	purple_input_remove
mov	dword ptr [ebp+34h], 0
jmp	loc_61C72638
align 4
mov	[esp+14Ch+var_148], offset aReadingThoseFi 
mov	[esp+14Ch+var_14C], offset aJabber_24 
call	purple_debug_info
mov	eax, 2
sub	eax, [ebx+2Ch]
mov	[esp+14Ch+var_144], eax
lea	esi, [esp+14Ch+var_120]
mov	[esp+14Ch+var_148], esi
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_14C], eax
call	wpurple_read
mov	edx, eax
cmp	eax, 0
jl	short loc_61C727E4
jz	short loc_61C727F2
mov	eax, [ebx+2Ch]
add	eax, edx
mov	[esp+14Ch+var_148], eax
mov	eax, [ebx+28h]
mov	[esp+14Ch+var_14C], eax
mov	[esp+14Ch+var_134], edx
call	g_realloc
mov	[ebx+28h], eax
add	eax, [ebx+2Ch]
mov	edx, [esp+14Ch+var_134]
mov	edi, eax
mov	ecx, edx
rep movsb
add	[ebx+2Ch], edx
jmp	loc_61C7264C
align 4
			
mov	[esp+14Ch+var_14C], eax
call	g_free
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+30h], 2
mov	[esp+14Ch+var_14C], 2
call	g_malloc
mov	[ebx+28h], eax
mov	byte ptr [eax],	5
mov	eax, [ebx+28h]
mov	byte ptr [eax+1], 0FFh
mov	[esp+14Ch+var_140], ebp
mov	[esp+14Ch+var_144], offset sub_61C7247C
mov	[esp+14Ch+var_148], 2
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_14C], eax
call	purple_input_add
mov	[ebp+34h], eax
mov	[esp+14Ch+var_144], 2
mov	eax, [esp+14Ch+var_130]
mov	[esp+14Ch+var_148], eax
mov	[esp+14Ch+var_14C], ebp
call	sub_61C7247C
jmp	loc_61C7264C
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	edx, [ebx+2Ch]
mov	eax, [ebx+30h]
sub	eax, edx
mov	[esp+2Ch+var_24], eax
add	edx, [ebx+28h]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], edi
call	wpurple_write
test	eax, eax
js	short loc_61C7299C
add	eax, [ebx+2Ch]
mov	[ebx+2Ch], eax
cmp	eax, [ebx+30h]
jnb	short loc_61C72950
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C729ED
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esi+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+28h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C729ED
mov	[esp+2Ch+arg_4], offset	aSocks5Connecti	
mov	[esp+2Ch+arg_0], offset	aJabber_24 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_info
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_61C72936
mov	eax, [esi+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+28h], 0
mov	[esp+2Ch+var_2C], edi
call	wpurple_close
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C729ED
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_xfer_cancel_remote
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_54], eax
mov	ecx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], ecx
xor	ecx, ecx
mov	ebp, [ebx+7Ch]
mov	[esp+7Ch+Str2],	offset aInJabber_si__1 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	edi, [ebp+2Ch]
cmp	edi, 4
jbe	loc_61C72BE0
mov	esi, [ebp+28h]
movsx	eax, byte ptr [esi]
movsx	edx, byte ptr [esi+1]
mov	cl, [esi+3]
mov	byte ptr [esp+7Ch+var_50], cl
cmp	al, 5
jz	short loc_61C72AC4
movsx	ecx, byte ptr [esi+4]
			
mov	[esp+7Ch+var_64], ecx
movsx	ecx, byte ptr [esp+7Ch+var_50]
mov	[esp+7Ch+var_68], ecx
movsx	ecx, byte ptr [esi+2]
mov	[esp+7Ch+var_6C], ecx
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+MaxCount], eax
mov	[esp+7Ch+Str2],	offset aInvalidSocks5C 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_info
			
mov	eax, [ebx+34h]
mov	[esp+7Ch+Str1],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	eax
call	wpurple_close
mov	[esp+7Ch+Str1],	ebx
call	purple_xfer_cancel_remote
			
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_61C72D5D
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
cmp	dl, 1
jnz	short loc_61C72A51
cmp	cl, 3
movsx	ecx, byte ptr [esi+4]
jnz	short loc_61C72A55
cmp	cl, 28h
jnz	loc_61C72A55
lea	eax, [edi-5]
cmp	eax, 29h
jbe	loc_61C72C89
mov	eax, [ebx+34h]
mov	[esp+7Ch+Str1],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
mov	eax, [ebp+0]
mov	eax, [eax+5Ch]
mov	edx, [ebx+0Ch]
mov	[esp+7Ch+var_68], edx
mov	edx, [eax+8]
mov	[esp+7Ch+var_6C], edx
mov	edx, [eax+4]
mov	[esp+7Ch+var_70], edx
mov	eax, [eax]
mov	[esp+7Ch+MaxCount], eax
mov	eax, [ebp+14h]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	offset aSS@SSS 
call	g_strdup_printf
mov	esi, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+MaxCount], offset aSha1_8 
mov	[esp+7Ch+Str2],	ecx
mov	[esp+7Ch+Str1],	esi
call	jabber_calculate_data_hash
mov	edi, eax
mov	edx, [ebp+28h]
lea	ecx, [edx+5]
mov	[esp+7Ch+var_50], ecx
mov	[esp+7Ch+MaxCount], 28h	
mov	[esp+7Ch+Str2],	ecx 
mov	[esp+7Ch+Str1],	eax 
mov	[esp+7Ch+var_58], edx
call	strncmp
test	eax, eax
mov	edx, [esp+7Ch+var_58]
mov	cl, [edx+2Dh]
jnz	loc_61C72D24
test	cl, cl
jnz	short loc_61C72B92
cmp	byte ptr [edx+2Eh], 0
jz	loc_61C72D75
movsx	eax, byte ptr [edx+2Eh]
			
mov	[esp+7Ch+var_70], eax
movsx	eax, cl
mov	[esp+7Ch+MaxCount], eax
mov	[esp+7Ch+Str2],	offset aGotSocks5BsCon 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_error
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	eax
call	wpurple_close
mov	[esp+7Ch+Str1],	ebx
call	purple_xfer_cancel_remote
mov	[esp+7Ch+Str1],	edi
call	g_free
mov	[esp+7Ch+Str1],	esi
call	g_free
jmp	loc_61C72AAC
align 10h
mov	[esp+7Ch+Str2],	offset aReadingTheFirs 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	eax, 5
sub	eax, [ebp+2Ch]
mov	[esp+7Ch+MaxCount], eax
lea	esi, [esp+7Ch+var_4A]
mov	[esp+7Ch+Str2],	esi
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	eax
call	wpurple_read
mov	edx, eax
cmp	eax, 0
jl	short loc_61C72C50
jz	short loc_61C72C5E
mov	eax, [ebp+2Ch]
add	eax, edx
mov	[esp+7Ch+Str2],	eax
mov	eax, [ebp+28h]
mov	[esp+7Ch+Str1],	eax
mov	[esp+7Ch+var_58], edx
call	g_realloc
mov	[ebp+28h], eax
add	eax, [ebp+2Ch]
mov	edx, [esp+7Ch+var_58]
mov	edi, eax
mov	ecx, edx
rep movsb
add	[ebp+2Ch], edx
jmp	loc_61C72AAC
align 10h
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_61C72AAC
mov	eax, [ebx+34h]
mov	[esp+7Ch+Str1],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
mov	ecx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	ecx
call	wpurple_close
mov	[esp+7Ch+Str1],	ebx
call	purple_xfer_cancel_remote
jmp	loc_61C72AAC
mov	eax, 2Fh
sub	eax, edi
movzx	esi, ax
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+MaxCount], 2Ah
mov	[esp+7Ch+Str2],	offset aReadingUByte_0 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+7Ch+MaxCount], esi
lea	esi, [esp+7Ch+var_4A]
mov	[esp+7Ch+Str2],	esi
mov	ecx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	ecx
call	wpurple_read
mov	edx, eax
cmp	eax, 0
jl	loc_61C72D62
jz	loc_61C72A86
mov	eax, [ebp+2Ch]
add	eax, edx
mov	[esp+7Ch+Str2],	eax
mov	eax, [ebp+28h]
mov	[esp+7Ch+Str1],	eax
mov	[esp+7Ch+var_58], edx
call	g_realloc
mov	[ebp+28h], eax
add	eax, [ebp+2Ch]
mov	edx, [esp+7Ch+var_58]
mov	edi, eax
mov	ecx, edx
rep movsb
add	edx, [ebp+2Ch]
mov	[ebp+2Ch], edx
mov	eax, [ebp+28h]
movsx	eax, byte ptr [eax+4]
add	eax, 2
sub	edx, 5
cmp	eax, edx
ja	loc_61C72AAC
jmp	loc_61C72AE7
movsx	eax, byte ptr [edx+2Eh]
test	cl, cl
jnz	loc_61C72B96
test	al, al
jnz	loc_61C72B96
mov	ecx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_70], ecx
mov	[esp+7Ch+MaxCount], edi
mov	[esp+7Ch+Str2],	offset aGotSocks5BsC_0 
mov	[esp+7Ch+Str1],	offset aJabber_24 
call	purple_debug_error
jmp	loc_61C72BB5
call	__stack_chk_fail
call	_errno
cmp	dword ptr [eax], 0Bh
jnz	loc_61C72A86
jmp	loc_61C72AAC
mov	[esp+7Ch+Str1],	edi
call	g_free
mov	[esp+7Ch+Str1],	esi
call	g_free
mov	eax, [ebp+28h]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+7Ch+Str1],	eax
call	purple_network_get_my_ip
mov	[esp+7Ch+var_50], eax
or	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
add	ecx, 6
mov	[ebp+30h], ecx
mov	[esp+7Ch+Str1],	ecx
call	g_malloc
mov	[ebp+28h], eax
mov	dword ptr [ebp+2Ch], 0
mov	byte ptr [eax],	5
mov	eax, [ebp+28h]
mov	byte ptr [eax+1], 0
mov	eax, [ebp+28h]
mov	byte ptr [eax+2], 0
mov	eax, [ebp+28h]
mov	byte ptr [eax+3], 3
mov	edx, [ebp+28h]
or	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[edx+4], cl
or	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
repne scasb
not	ecx
dec	ecx
mov	eax, [ebp+28h]
add	eax, 5
mov	edi, eax
mov	esi, [esp+7Ch+var_50]
rep movsb
or	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
xor	eax, eax
repne scasb
not	ecx
mov	eax, [ebp+28h]
mov	byte ptr [eax+ecx+4], 0
or	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
xor	eax, eax
repne scasb
not	ecx
mov	eax, [ebp+28h]
mov	byte ptr [eax+ecx+5], 0
mov	[esp+7Ch+var_70], ebx
mov	[esp+7Ch+MaxCount], offset sub_61C728F0
mov	[esp+7Ch+Str2],	2
mov	ecx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str1],	ecx
call	purple_input_add
mov	[ebx+34h], eax
mov	[esp+7Ch+MaxCount], 2
mov	eax, [esp+7Ch+var_54]
mov	[esp+7Ch+Str2],	eax
mov	[esp+7Ch+Str1],	ebx
call	sub_61C728F0
jmp	loc_61C72AAC
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [edx+7Ch]
mov	[esp+2Ch+var_2C], edx
call	purple_xfer_get_remote_user
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	jabber_ibb_session_create
mov	[ebx+38h], eax
test	eax, eax
jz	loc_61C72F44
mov	[esp+2Ch+var_28], offset loc_61C74124
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_set_opened_callback
mov	[esp+2Ch+var_28], offset loc_61C7174C
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_set_data_sent_callback
mov	[esp+2Ch+var_28], offset sub_61C7137C
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_set_closed_callback
mov	[esp+2Ch+var_28], offset sub_61C7132C
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_set_error_callback
mov	[esp+2Ch+var_28], offset loc_61C740B8
mov	[esp+2Ch+var_2C], esi
call	purple_xfer_set_write_fnc
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_get_max_data_size
mov	[esp+2Ch+var_2C], eax
call	purple_circ_buffer_new
mov	[ebx+40h], eax
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	jabber_ibb_session_open
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C72F62
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], offset aFailedToInitia 
mov	[esp+2Ch+var_2C], offset aJabber_24 
call	purple_debug_error
mov	[esp+2Ch+var_2C], esi
call	purple_xfer_cancel_local
jmp	short loc_61C72F30
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edx, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_3C], edx
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_4C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	ebx, [edx+7Ch]
mov	dword ptr [ebx+8], 0
mov	[esp+7Ch+var_7C], edx
call	purple_xfer_get_status
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], edx
cmp	eax, 5
jz	loc_61C732D4
call	purple_xfer_unref
mov	[esp+7Ch+var_74], offset aHttpJabber__46 
mov	[esp+7Ch+var_78], 0
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
call	jabber_iq_new_query
mov	[esp+7Ch+var_40], eax
mov	edx, [esp+7Ch+var_4C]
mov	eax, [edx+0Ch]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aTo_17	
mov	edx, [esp+7Ch+var_40]
mov	eax, [edx+8]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_set_attrib
mov	[esp+7Ch+var_78], offset aQuery_14 
mov	edx, [esp+7Ch+var_40]
mov	eax, [edx+8]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_child
mov	[esp+7Ch+var_48], eax
mov	eax, [ebx+14h]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aSid_3	
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_set_attrib
mov	edi, [esp+7Ch+var_3C]
test	edi, edi
js	loc_61C731B8
call	purple_network_get_all_local_system_ips
mov	edi, eax
mov	edx, [esp+7Ch+var_3C]
mov	[ebx+34h], edx
mov	eax, [ebx]
mov	eax, [eax+5Ch]
mov	ecx, [eax+8]
mov	[esp+7Ch+var_70], ecx
mov	ecx, [eax+4]
mov	[esp+7Ch+var_74], ecx
mov	eax, [eax]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aS@SS_4 
call	g_strdup_printf
mov	[esp+7Ch+var_34], eax
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	purple_network_get_port_from_fd
movzx	eax, ax
mov	edx, [esp+7Ch+var_4C]
mov	[edx+28h], eax
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], offset aHu 
mov	[esp+7Ch+var_78], 6
lea	eax, [esp+7Ch+var_26]
mov	[esp+7Ch+var_7C], eax
call	g_snprintf
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+7Ch+var_7C], eax
call	purple_network_get_my_ip
mov	[esp+7Ch+var_44], eax
test	edi, edi
jz	loc_61C732EA
mov	[esp+7Ch+var_38], 0
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_30], ebx
mov	ebp, [esp+7Ch+var_34]
mov	esi, edi
mov	ebx, [esi]
inc	[esp+7Ch+var_50]
mov	[esp+7Ch+var_78], offset aStreamhost 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], offset aJid_9	
mov	[esp+7Ch+var_7C], eax
call	xmlnode_set_attrib
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aHost_0 
mov	[esp+7Ch+var_7C], edi
call	xmlnode_set_attrib
lea	edx, [esp+7Ch+var_26]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], offset aPort_2 
mov	[esp+7Ch+var_7C], edi
call	xmlnode_set_attrib
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_61C73150
mov	[esp+7Ch+var_38], 1
mov	[esp+7Ch+var_7C], ebx
call	g_free
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], esi
call	g_list_delete_link
mov	esi, eax
test	eax, eax
jnz	loc_61C730D8
mov	ebx, [esp+7Ch+var_30]
mov	esi, [esp+7Ch+var_38]
test	esi, esi
jz	loc_61C732F4
			
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+var_74], offset sub_61C7237C
mov	[esp+7Ch+var_78], 1
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], edx
call	purple_input_add
mov	edx, [esp+7Ch+var_4C]
mov	[edx+34h], eax
jmp	short loc_61C731C0
align 4
mov	[esp+7Ch+var_50], 0
mov	eax, [ebx]
mov	ebp, [eax+44h]
test	ebp, ebp
jz	short loc_61C7322E
lea	esi, [esi+0]
mov	esi, [ebp+0]
mov	eax, [esi]
test	eax, eax
jz	short loc_61C73227
mov	ecx, [esi+4]
test	ecx, ecx
jz	short loc_61C73227
mov	edx, [esi+8]
test	edx, edx
jle	short loc_61C73227
mov	[esp+7Ch+var_6C], eax
mov	eax, [ebx+20h]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aJabber_si_xf_2 
mov	[esp+7Ch+var_7C], offset aJabber_24 
call	purple_debug_info
mov	[esp+7Ch+var_74], offset sub_61C71254
mov	eax, [esi]
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+20h]
mov	[esp+7Ch+var_7C], eax
call	g_list_find_custom
test	eax, eax
jz	loc_61C73380
			
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C731CC
mov	eax, [esp+7Ch+var_50]
test	eax, eax
jnz	short loc_61C73294
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	jabber_iq_free
test	byte ptr [ebx+1Ch], 8
jz	loc_61C732DC
mov	[esp+7Ch+var_78], offset aJabber_si_xf_3 
mov	[esp+7Ch+var_7C], offset aJabber_24 
call	purple_debug_info
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], edx
call	purple_xfer_get_type
mov	edx, [esp+7Ch+var_4C]
dec	eax
jz	loc_61C73371
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], offset loc_61C74298
mov	[esp+7Ch+var_7C], 1Eh
call	purple_timeout_add_seconds
mov	[ebx+3Ch], eax
jmp	short loc_61C732BC
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], offset sub_61C73D4C
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	jabber_iq_set_callback
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	jabber_iq_send
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C73448
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	purple_xfer_unref
jmp	short loc_61C732BC
align 4
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], edx
call	purple_xfer_cancel_local
jmp	short loc_61C732BC
mov	[esp+7Ch+var_50], 0
xchg	ax, ax
mov	edi, offset a0_0_0_0 
mov	ecx, 8
mov	esi, [esp+7Ch+var_44]
repe cmpsb
jz	loc_61C7317E
inc	[esp+7Ch+var_50]
mov	[esp+7Ch+var_78], offset aStreamhost 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_new_child
mov	esi, eax
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aJid_9	
mov	[esp+7Ch+var_7C], esi
call	xmlnode_set_attrib
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aHost_0 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_set_attrib
lea	edx, [esp+7Ch+var_26]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], offset aPort_2 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_set_attrib
jmp	loc_61C7317E
mov	eax, [ebx]
call	sub_61C72E74
jmp	loc_61C732BC
align 10h
inc	[esp+7Ch+var_50]
mov	[esp+7Ch+var_78], offset aStreamhost 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_7C], eax
call	xmlnode_new_child
mov	edi, eax
mov	eax, [esi]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aJid_9	
mov	[esp+7Ch+var_7C], edi
call	xmlnode_set_attrib
mov	eax, [esi+4]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aHost_0 
mov	[esp+7Ch+var_7C], edi
call	xmlnode_set_attrib
movzx	eax, word ptr [esi+8]
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], offset aHu 
mov	[esp+7Ch+var_78], 6
lea	edx, [esp+7Ch+var_26]
mov	[esp+7Ch+var_7C], edx
call	g_snprintf
lea	eax, [esp+7Ch+var_26]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aPort_2 
mov	[esp+7Ch+var_7C], edi
call	xmlnode_set_attrib
mov	[esp+7Ch+var_7C], 10h
call	g_malloc0
mov	edi, eax
mov	eax, [esi]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[edi], eax
mov	eax, [esi+4]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	[edi+4], eax
mov	eax, [esi+8]
mov	[edi+8], eax
mov	[esp+7Ch+var_78], edi
mov	eax, [ebx+20h]
mov	[esp+7Ch+var_7C], eax
call	g_list_prepend
mov	[ebx+20h], eax
jmp	loc_61C73227
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], eax
mov	ebp, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], offset aHttpJabber__48 
mov	[esp+5Ch+var_58], offset aSi 
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C735DC
mov	[esp+5Ch+var_54], offset aHttpJabber__49 
mov	[esp+5Ch+var_58], offset aFeature_1 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C735DC
mov	[esp+5Ch+var_54], offset aJabberXData_3	
mov	[esp+5Ch+var_58], offset asc_61C844EB 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C735DC
mov	[esp+5Ch+var_58], offset aField_1 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+5Ch+var_34], 0
test	eax, eax
jnz	short loc_61C7350A
jmp	loc_61C735DC
align 4
			
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C735BC
			
mov	[esp+5Ch+var_58], offset aVar_2	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	edx, [ebp+7Ch]
test	eax, eax
jz	short loc_61C734F8
mov	edi, offset aStreamMethod 
mov	esi, eax
mov	ecx, 0Eh
repe cmpsb
jnz	short loc_61C734F8
mov	[esp+5Ch+var_58], offset aValue_2 
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_3C], edx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C734F8
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_38], eax
test	eax, eax
mov	edx, [esp+5Ch+var_3C]
jz	short loc_61C7359B
mov	edi, offset aHttpJabber__46 
mov	esi, eax
mov	ecx, 27h
repe cmpsb
jz	loc_61C735FC
mov	edi, offset aHttpJabber__47 
mov	ecx, 1Fh
mov	esi, [esp+5Ch+var_38]
repe cmpsb
jnz	short loc_61C7359B
or	dword ptr [edx+1Ch], 8
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_61C73684
mov	[esp+5Ch+var_34], 1
			
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_free
			
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	loc_61C7350A
lea	esi, [esi+0]
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	short loc_61C735DC
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C736E1
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C736E1
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_cancel_remote
mov	[esp+5Ch+var_5C], ebp
call	purple_xfer_ref
mov	esi, [ebp+7Ch]
mov	eax, [esi]
mov	eax, [eax+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_get_setup
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
cmp	eax, 5
mov	edx, [esp+5Ch+var_3C]
jz	short loc_61C736A8
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], offset sub_61C72F68
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
mov	[esp+5Ch+var_3C], edx
call	purple_network_listen_range
mov	[esi+8], eax
test	eax, eax
mov	edx, [esp+5Ch+var_3C]
jz	short loc_61C736C7
or	dword ptr [edx+1Ch], 4
mov	[esp+5Ch+var_34], 1
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	loc_61C735A7
align 4
mov	edx, ebp
mov	eax, [esp+5Ch+var_30]
call	sub_61C72E74
mov	[esp+5Ch+var_34], 1
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	loc_61C735A7
mov	[esp+5Ch+var_58], offset aSkippingAttemp 
mov	[esp+5Ch+var_5C], offset aJabber_24 
call	purple_debug_info
mov	dword ptr [esi+8], 0
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], 0FFFFFFFFh
mov	[esp+5Ch+var_3C], edx
call	sub_61C72F68
mov	edx, [esp+5Ch+var_3C]
jmp	short loc_61C73664
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+var_30]
mov	ebx, [eax+7Ch]
mov	eax, [ebx+20h]
test	eax, eax
jz	loc_61C73930
mov	ebp, [esp+5Ch+var_30]
jmp	loc_61C73857
align 4
mov	ecx, [eax+8]
mov	[esp+5Ch+var_40], ecx
mov	ecx, [eax+4]
mov	[esp+5Ch+var_44], ecx
mov	eax, [eax]
mov	[esp+5Ch+var_48], eax
mov	eax, [edx+8]
mov	[esp+5Ch+var_4C], eax
mov	eax, [edx+4]
mov	[esp+5Ch+var_50], eax
mov	eax, [edx]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSS@SSS@SS 
mov	[esp+5Ch+var_38], edx
call	g_strdup_printf
mov	[esp+5Ch+var_34], eax
mov	edx, [esp+5Ch+var_38]
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+var_34]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+5Ch+var_54], offset aSha1_8 
mov	[esp+5Ch+var_58], ecx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_38], edx
call	jabber_calculate_data_hash
mov	edi, eax
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_connection_get_account
mov	[esp+5Ch+var_44], ebp
mov	[esp+5Ch+var_48], offset sub_61C73A7C
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], edi
mov	ecx, [ebx+24h]
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], 0
call	purple_proxy_connect_socks5_account
mov	[ebx+4], eax
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_free
cmp	dword ptr [ebp+4], 1
mov	edx, [esp+5Ch+var_38]
jz	short loc_61C73814
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C73814
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset loc_61C73CC8
mov	[esp+5Ch+var_5C], 0Fh
call	purple_timeout_add_seconds
mov	[ebx+0Ch], eax
mov	edx, [esp+5Ch+var_38]
			
mov	[esp+5Ch+var_5C], edx
call	jabber_id_free
			
mov	eax, [ebx+4]
test	eax, eax
jnz	loc_61C73A31
mov	[esp+5Ch+var_58], esi
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	g_list_remove
mov	[ebx+20h], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_61C714B8
mov	ebx, [ebp+7Ch]
mov	eax, [ebx+20h]
test	eax, eax
jz	loc_61C73930
mov	esi, [eax]
mov	dword ptr [ebx+4], 0
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_61C7386F
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_destroy
mov	dword ptr [ebx+24h], 0
mov	eax, [ebp+0Ch]
mov	[esp+5Ch+var_5C], eax
call	jabber_id_new
mov	edx, eax
test	eax, eax
jz	short loc_61C7381C
mov	eax, [esi+4]
test	eax, eax
jz	short loc_61C7381C
mov	eax, [esi+8]
test	eax, eax
jle	short loc_61C7381C
mov	[esp+5Ch+var_38], edx
call	purple_proxy_info_new
mov	[ebx+24h], eax
mov	[esp+5Ch+var_58], 3
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_set_type
mov	eax, [esi+4]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+24h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_set_host
mov	eax, [esi+8]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+24h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_set_port
cmp	dword ptr [ebp+4], 1
mov	edx, [esp+5Ch+var_38]
mov	eax, [ebx]
mov	eax, [eax+5Ch]
jnz	loc_61C7371C
mov	ecx, [edx+8]
mov	[esp+5Ch+var_40], ecx
mov	ecx, [edx+4]
mov	[esp+5Ch+var_44], ecx
mov	ecx, [edx]
mov	[esp+5Ch+var_48], ecx
mov	ecx, [eax+8]
mov	[esp+5Ch+var_4C], ecx
mov	ecx, [eax+4]
mov	[esp+5Ch+var_50], ecx
mov	eax, [eax]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSS@SSS@SS 
call	g_strdup_printf
mov	[esp+5Ch+var_34], eax
mov	edx, [esp+5Ch+var_38]
jmp	loc_61C73763
			
mov	[esp+5Ch+var_58], 3
mov	eax, [ebx]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_new
mov	esi, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_61C73957
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	jabber_iq_set_id
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_17	
mov	eax, [esi+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aError_8 
mov	eax, [esi+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+5Ch+var_54], offset a404_1	
mov	[esp+5Ch+var_58], offset aCode_7 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aCancel_9 
mov	[esp+5Ch+var_58], offset aType_13 
mov	[esp+5Ch+var_5C], edi
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aItemNotFound_4 
mov	[esp+5Ch+var_5C], edi
call	xmlnode_new_child
mov	[esp+5Ch+var_58], offset aUrnIetfPara_13 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_namespace
mov	[esp+5Ch+var_5C], esi
call	jabber_iq_send
test	byte ptr [ebx+1Ch], 8
jz	short loc_61C73A48
mov	[esp+5Ch+var_58], offset aJabber_si_by_0 
mov	[esp+5Ch+var_5C], offset aJabber_24 
call	purple_debug_info
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_xfer_get_type
dec	eax
jnz	short loc_61C73A12
mov	edx, [ebx+38h]
test	edx, edx
jz	short loc_61C73A56
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset loc_61C74298
mov	[esp+5Ch+var_5C], 1Eh
call	purple_timeout_add_seconds
mov	[ebx+3Ch], eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C73A74
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_xfer_cancel_local
jmp	short loc_61C73A31
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C73A74
mov	edx, [esp+5Ch+var_30]
mov	eax, [ebx]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C72E74
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], eax
mov	ebp, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edi, [ebx+7Ch]
mov	eax, [edi+20h]
mov	esi, [eax]
mov	eax, [edi+24h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_destroy
mov	dword ptr [edi+24h], 0
mov	dword ptr [edi+4], 0
mov	eax, [edi+0Ch]
test	eax, eax
jnz	loc_61C73BA8
mov	dword ptr [edi+0Ch], 0
mov	ecx, [esp+5Ch+var_30]
test	ecx, ecx
js	loc_61C73BC3
cmp	dword ptr [ebx+4], 1
mov	[esp+5Ch+var_54], offset aHttpJabber__46 
jz	loc_61C73C30
mov	[esp+5Ch+var_58], 2
mov	eax, [edi]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_new_query
mov	ebp, eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_17	
mov	eax, [ebp+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [edi+18h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	jabber_iq_set_id
mov	[esp+5Ch+var_58], offset aQuery_14 
mov	eax, [ebp+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_58], offset aStreamhostUsed 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	edx, [esi]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aJid_9	
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_5C], ebp
call	jabber_iq_send
mov	[esp+5Ch+var_50], 0FFFFFFFFh
mov	[esp+5Ch+var_54], 0
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_start
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C73CC2
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], eax
call	purple_timeout_remove
mov	dword ptr [edi+0Ch], 0
mov	ecx, [esp+5Ch+var_30]
test	ecx, ecx
jns	loc_61C73ADD
test	ebp, ebp
jz	loc_61C73CB8
mov	[esp+5Ch+var_4C], ebp
mov	eax, [esi+4]
mov	[esp+5Ch+var_50], eax
mov	eax, [esi]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSiConnectionFa 
mov	[esp+5Ch+var_5C], offset aJabber_24 
call	purple_debug_warning
mov	[esp+5Ch+var_58], esi
mov	eax, [edi+20h]
mov	[esp+5Ch+var_5C], eax
call	g_list_remove
mov	[edi+20h], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], esi
call	sub_61C714B8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C73CC2
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C736E8
mov	[esp+5Ch+var_58], 0
mov	eax, [edi]
mov	[esp+5Ch+var_5C], eax
call	jabber_iq_new_query
mov	ebp, eax
mov	eax, [esi]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aTo_17	
mov	eax, [ebp+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aQuery_14 
mov	eax, [ebp+8]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	esi, eax
mov	eax, [edi+14h]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSid_3	
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aActivate 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_new_child
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	edx, [ebx+0Ch]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_data
jmp	loc_61C73B65
align 4
mov	ebp, offset aNull_4 
jmp	loc_61C73BCB
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
mov	dword ptr [esp+8], 0Fh
mov	dword ptr [esp+4], offset aStreamhostConn 
mov	dword ptr [esp], offset	aJabber_24 
call	purple_debug_info
mov	dword ptr [ebx+0Ch], 0
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C73D11
mov	[esp], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+4], 0
mov	dword ptr [esp+8], offset aTimeoutExceede 
mov	dword ptr [esp+4], 0FFFFFFFFh
mov	[esp], esi
call	sub_61C73A7C
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C73D44
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], eax
mov	ebp, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_30], eax
mov	esi, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str2],	esi
mov	eax, [edi+4Ch]
mov	[esp+5Ch+Str1],	eax
call	g_list_find
test	eax, eax
jz	loc_61C73F8C
mov	ebx, [esi+7Ch]
test	ebx, ebx
jz	loc_61C73E23
cmp	ebp, 2
jz	loc_61C73E3C
mov	[esp+5Ch+Str2],	offset aJabber_si_xf_4 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	eax, [ebx+1Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	offset aJabber_si_xf_5 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
test	byte ptr [ebx+1Ch], 8
jz	loc_61C73F4C
mov	[esp+5Ch+Str2],	offset aIbbIsPossibleT 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+5Ch+Str1],	esi
call	purple_xfer_get_type
dec	eax
jnz	short loc_61C73E08
mov	ebp, [ebx+38h]
test	ebp, ebp
jz	loc_61C73F6C
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Str2],	offset loc_61C74298
mov	[esp+5Ch+Str1],	1Eh
call	purple_timeout_add_seconds
mov	[ebx+3Ch], eax
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C740B1
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, [esp+5Ch+var_34]
test	edi, edi
jz	short loc_61C73E23
mov	[esp+5Ch+Str2],	offset aQuery_14 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C73E23
mov	[esp+5Ch+Str2],	offset aStreamhostUsed 
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C73E23
mov	[esp+5Ch+Str2],	offset aJid_9 
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	short loc_61C73E23
mov	[esp+5Ch+var_4C], eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	offset aJabber_si_conn 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+5Ch+var_54], offset sub_61C71254
mov	[esp+5Ch+Str2],	edi
mov	eax, [ebx+20h]
mov	[esp+5Ch+Str1],	eax
call	g_list_find_custom
mov	ebp, eax
test	eax, eax
jz	loc_61C73FBC
mov	eax, [esi+34h]
test	eax, eax
jle	short loc_61C73EE0
mov	[esp+5Ch+Str1],	eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
mov	eax, [ebx+34h]
test	eax, eax
js	short loc_61C73EF6
mov	[esp+5Ch+Str1],	eax
call	wpurple_close
mov	dword ptr [ebx+34h], 0FFFFFFFFh
mov	[esp+5Ch+Str2],	ebp
mov	eax, [ebx+20h]
mov	[esp+5Ch+Str1],	eax
call	g_list_remove_link
mov	[ebx+20h], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Str2],	offset sub_61C714B8
mov	[esp+5Ch+Str1],	eax
call	g_list_foreach
mov	eax, [ebx+20h]
mov	[esp+5Ch+Str1],	eax
call	g_list_free
mov	[ebx+20h], ebp
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C740B1
mov	eax, esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C736E8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C740B1
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_cancel_remote
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C740B1
mov	edx, esi
mov	eax, edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_61C72E74
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C740B1
mov	[esp+5Ch+arg_8], esi
mov	[esp+5Ch+arg_4], offset	aGotBytestreams	
mov	[esp+5Ch+arg_0], offset	aJabber_24 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
mov	eax, [ebx]
mov	eax, [eax+5Ch]
mov	edx, [eax+8]
mov	[esp+5Ch+var_50], edx
mov	edx, [eax+4]
mov	[esp+5Ch+var_54], edx
mov	eax, [eax]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aS@SS_4 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Str1],	edi 
call	strcmp
test	eax, eax
jz	short loc_61C74071
test	byte ptr [ebx+1Ch], 8
jz	short loc_61C74053
mov	[esp+5Ch+Str2],	offset aJabber_si_co_0 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+5Ch+Str1],	esi
call	purple_xfer_get_type
dec	eax
jz	loc_61C740A6
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+Str2],	offset loc_61C74298
mov	[esp+5Ch+Str1],	1Eh
call	purple_timeout_add_seconds
mov	[ebx+3Ch], eax
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C740B1
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+Str2],	offset aStreamhostUs_0 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+5Ch+Str1],	esi
call	purple_xfer_cancel_local
jmp	short loc_61C74037
mov	[esp+5Ch+Str2],	offset aGotLocalSocks5 
mov	[esp+5Ch+Str1],	offset aJabber_24 
call	purple_debug_info
mov	[esp+5Ch+var_50], 0FFFFFFFFh
mov	[esp+5Ch+var_54], 0
mov	eax, [esi+30h]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	esi
call	purple_xfer_start
jmp	short loc_61C74037
mov	edx, esi
mov	eax, [ebx]
call	sub_61C72E74
jmp	short loc_61C74037
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+40h]
mov	esi, [esp+44h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	eax, [esp+48h]
mov	eax, [eax+7Ch]
mov	ebx, [eax+38h]
mov	[esp], ebx
call	jabber_ibb_session_get_max_data_size
cmp	eax, esi
jbe	short loc_61C74114
mov	eax, esi
mov	[esp+8], eax
mov	[esp+4], edi
mov	[esp], ebx
mov	[esp+1Ch], eax
call	jabber_ibb_session_send_data
mov	eax, [esp+1Ch]
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7411E
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp], ebx
call	jabber_ibb_session_get_max_data_size
jmp	short loc_61C740E9
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	jabber_ibb_session_get_user_data
mov	esi, eax
mov	[esp], ebx
call	jabber_ibb_session_get_state
dec	eax
jz	short loc_61C74168
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C741A2
mov	[esp+30h], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_xfer_end
align 4
mov	dword ptr [esp+0Ch], 0
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0FFFFFFFFh
mov	[esp], esi
call	purple_xfer_start
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C741A2
mov	[esp+30h], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_xfer_prpl_ready
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], offset aResource_3 
mov	eax, [esp+34h]
mov	[esp], eax
call	purple_request_fields_get_field
mov	ebx, eax
mov	[esp], eax
call	purple_request_field_choice_get_value
mov	esi, eax
mov	[esp], ebx
call	purple_request_field_choice_get_labels
mov	[esp+4], esi
mov	[esp], eax
call	g_list_nth_data
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7420C
mov	edx, eax
mov	eax, edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_61C71C10
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, edx
mov	[esp+4Ch+var_30], ecx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	edi, edi
jz	short loc_61C7427A
test	ecx, ecx
jz	short loc_61C7427A
mov	ebx, [eax]
test	ebx, ebx
jz	short loc_61C7427A
nop
mov	esi, [ebx]
mov	eax, [esi+7Ch]
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_61C74273
mov	ebp, [esi+0Ch]
test	ebp, ebp
jz	short loc_61C74273
mov	[esp+4Ch+Str2],	edi 
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_61C74273
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Str2],	eax 
mov	[esp+4Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jz	short loc_61C7427C
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C7423C
			
xor	esi, esi
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74292
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	ebx, [esi+7Ch]
test	ebx, ebx
jz	short loc_61C742BA
mov	eax, [ebx+38h]
test	eax, eax
jz	short loc_61C742D0
			
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74304
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	dword ptr [esp+4], offset aJabber_si_byte 
mov	dword ptr [esp], offset	aJabber_24 
call	purple_debug_info
mov	eax, [ebx+3Ch]
test	eax, eax
jz	short loc_61C742FA
mov	[esp], eax
call	purple_timeout_remove
mov	dword ptr [ebx+3Ch], 0
mov	[esp], esi
call	purple_xfer_cancel_local
jmp	short loc_61C742BA
call	__stack_chk_fail
align 4
public jabber_si_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_4C], eax
mov	ebp, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_48], edx
mov	ebx, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aProfile 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C7435A
mov	edi, offset aHttpJabber__45 
mov	ecx, 34h
mov	esi, eax
repe cmpsb
jz	short loc_61C74374
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C746F6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_58], offset aId_11	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_44], eax
test	eax, eax
jz	short loc_61C7435A
mov	[esp+5Ch+var_58], offset aFile 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	short loc_61C7435A
mov	[esp+5Ch+var_58], offset aName_15 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_attrib
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	short loc_61C7435A
mov	[esp+5Ch+var_58], offset aSize 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_get_attrib
test	eax, eax
jz	loc_61C74574
mov	[esp+5Ch+var_54], 0Ah
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], eax
call	g_ascii_strtoull
cmp	edx, 0
jbe	short loc_61C7441C
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C746F6
mov	[esp+5Ch+arg_4], offset	aUnableToTransf	
mov	[esp+5Ch+arg_0], offset	aJabber_24 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_warning
align 4
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_58], offset aFeature_1 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C7435A
mov	[esp+5Ch+var_54], offset aJabberXData_3	
mov	[esp+5Ch+var_58], offset asc_61C844EB 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child_with_namespace
mov	ebx, eax
test	eax, eax
jz	loc_61C7435A
test	ebp, ebp
jz	loc_61C7435A
mov	eax, [esp+5Ch+var_4C]
add	eax, 4Ch
mov	ecx, ebp
mov	edx, [esp+5Ch+var_44]
call	sub_61C74214
test	eax, eax
jnz	loc_61C7435A
mov	[esp+5Ch+var_5C], 44h
call	g_malloc0
mov	[esp+5Ch+var_38], eax
mov	dword ptr [eax+34h], 0FFFFFFFFh
mov	dword ptr [eax+38h], 0
mov	[esp+5Ch+var_58], offset aField_1 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C74591
mov	[esp+5Ch+var_30], ebp
mov	ebp, eax
jmp	short loc_61C744CE
align 4
			
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jz	loc_61C7458D
mov	[esp+5Ch+var_58], offset aVar_2	
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C744BC
mov	edi, offset aStreamMethod 
mov	esi, eax
mov	ecx, 0Eh
repe cmpsb
jnz	short loc_61C744BC
mov	[esp+5Ch+var_58], offset aOption 
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C744BC
mov	[esp+5Ch+var_34], ebp
mov	ebp, [esp+5Ch+var_38]
jmp	short loc_61C7452E
align 4
or	dword ptr [ebp+1Ch], 4
			
mov	[esp+5Ch+var_5C], eax
call	g_free
			
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C74584
mov	[esp+5Ch+var_58], offset aValue_2 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C74520
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_61C74520
mov	edi, offset aHttpJabber__46 
mov	esi, eax
mov	ecx, 27h
repe cmpsb
jz	short loc_61C74514
mov	edi, offset aHttpJabber__47 
mov	esi, eax
mov	ecx, 1Fh
repe cmpsb
jnz	short loc_61C74518
or	dword ptr [ebp+1Ch], 8
jmp	short loc_61C74518
mov	[esp+5Ch+var_3C], 0
jmp	loc_61C74420
align 4
mov	ebp, [esp+5Ch+var_34]
jmp	loc_61C744BC
mov	ebp, [esp+5Ch+var_30]
mov	eax, [esp+5Ch+var_38]
mov	eax, [eax+1Ch]
test	eax, eax
jz	loc_61C74691
mov	edx, [esp+5Ch+var_4C]
mov	eax, [esp+5Ch+var_38]
mov	[eax], edx
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	edx, [esp+5Ch+var_38]
mov	[edx+14h], eax
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	edx, [esp+5Ch+var_38]
mov	[edx+18h], eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], 2
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+var_5C], eax
call	purple_xfer_new
mov	ebx, eax
test	eax, eax
jz	loc_61C746C6
mov	eax, [esp+5Ch+var_38]
mov	[ebx+7Ch], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_filename
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jnz	loc_61C746B1
mov	[esp+5Ch+var_58], offset sub_61C71E10
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_init_fnc
mov	[esp+5Ch+var_58], offset loc_61C71820
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_request_denied_fnc
mov	[esp+5Ch+var_58], offset sub_61C716F4
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_cancel_recv_fnc
mov	[esp+5Ch+var_58], offset sub_61C716C8
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_end_fnc
mov	[esp+5Ch+var_58], ebx
mov	edx, [esp+5Ch+var_4C]
mov	eax, [edx+4Ch]
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	edx, [esp+5Ch+var_4C]
mov	[edx+4Ch], eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C746F6
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_request
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C746F6
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_size
jmp	loc_61C7461B
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C746F6
mov	[esp+5Ch+arg_8], offset	aXferNull 
mov	[esp+5Ch+arg_4], offset	aJabber_si_pars	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ebx, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+7Ch]
test	bl, 20h
jnz	loc_61C747F0
and	ebx, 8
jnz	loc_61C747D4
mov	[esp+5Ch+var_58], offset aUnableToSendFi 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aFileSendFailed 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	edi, eax
mov	[esp+5Ch+var_58], offset aFileSendFailed 
mov	[esp+5Ch+var_5C], offset aPidgin_14 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [ebp+64h]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C74815
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_cancel_local
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C74815
mov	eax, esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C71980
align 10h
mov	[esp+5Ch+var_58], offset aJabber_si_xfer 
mov	[esp+5Ch+var_5C], offset aJabber_24 
mov	[esp+5Ch+var_30], eax
call	purple_debug_info
mov	eax, [esp+5Ch+var_30]
or	dword ptr [eax+1Ch], 8
jmp	loc_61C7472A
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], eax
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aSid_3	
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_attrib
mov	edx, eax
lea	eax, [edi+4Ch]
mov	ecx, [esp+5Ch+var_34]
call	sub_61C74214
mov	ebx, eax
test	eax, eax
jz	loc_61C74940
mov	esi, [eax+7Ch]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], ebp
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	jabber_ibb_session_create_from_xmlnode
mov	edi, eax
mov	eax, [esi+3Ch]
test	eax, eax
jz	short loc_61C748A9
mov	[esp+5Ch+var_5C], eax
call	purple_timeout_remove
mov	dword ptr [esi+3Ch], 0
test	edi, edi
jz	loc_61C74958
mov	[esp+5Ch+var_58], offset sub_61C71404
mov	[esp+5Ch+var_5C], edi
call	jabber_ibb_session_set_data_received_callback
mov	[esp+5Ch+var_58], offset sub_61C7137C
mov	[esp+5Ch+var_5C], edi
call	jabber_ibb_session_set_closed_callback
mov	[esp+5Ch+var_58], offset sub_61C7132C
mov	[esp+5Ch+var_5C], edi
call	jabber_ibb_session_set_error_callback
mov	[esi+38h], edi
mov	[esp+5Ch+var_5C], edi
call	jabber_ibb_session_get_block_size
mov	[esp+5Ch+var_5C], eax
call	purple_circ_buffer_new
mov	[esi+40h], eax
mov	[esp+5Ch+var_58], offset sub_61C712A8
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_set_read_fnc
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_start
mov	eax, 1
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74978
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aIbbOpenDidNotM 
mov	[esp+5Ch+var_5C], offset aJabber_24 
call	purple_debug_info
xor	eax, eax
jmp	short loc_61C7492C
mov	[esp+5Ch+var_58], offset aFailedToCreate 
mov	[esp+5Ch+var_5C], offset aJabber_24 
call	purple_debug_error
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_cancel_remote
xor	eax, eax
jmp	short loc_61C7492C
call	__stack_chk_fail
align 10h
public jabber_bytestreams_parse
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_C]
mov	ebx, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_8]
test	eax, eax
jnz	loc_61C74A3C
test	edi, edi
jz	loc_61C74A3C
mov	[esp+4Ch+var_48], offset aSid_3	
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	edx, eax
test	eax, eax
jz	short loc_61C74A3C
lea	eax, [ebp+4Ch]
mov	ecx, edi
call	sub_61C74214
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	short loc_61C74A3C
mov	ebp, [eax+7Ch]
mov	eax, [ebp+10h]
test	eax, eax
jz	short loc_61C74A3C
mov	eax, [ebp+18h]
test	eax, eax
jz	short loc_61C749F7
mov	[esp+4Ch+Str], eax
call	g_free
mov	[esp+4Ch+Str], esi
call	g_strdup
mov	[ebp+18h], eax
mov	[esp+4Ch+var_48], offset aStreamhost 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	loc_61C74AC7
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C74B42
mov	eax, [esp+4Ch+var_30]
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_61C736E8
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C74B42
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	edx, edx
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+Str], 10h
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_3C], ecx
call	g_malloc0
mov	edi, eax
mov	[esp+4Ch+Str], esi
call	g_strdup
mov	[edi], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	[edi+4], eax
mov	edx, [esp+4Ch+var_38]
mov	[edi+8], edx
mov	ecx, [esp+4Ch+var_3C]
mov	[esp+4Ch+Str], ecx
call	g_strdup
mov	[edi+0Ch], eax
mov	[esp+4Ch+var_48], edi
mov	eax, [ebp+20h]
mov	[esp+4Ch+Str], eax
call	g_list_append
mov	[ebp+20h], eax
			
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_61C74A1C
mov	[esp+4Ch+var_48], offset aJid_9	
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	short loc_61C74AB5
mov	[esp+4Ch+var_48], offset aZeroconf 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
mov	ecx, eax
test	eax, eax
jnz	loc_61C74A54
mov	[esp+4Ch+var_48], offset aHost_0 
mov	[esp+4Ch+Str], ebx
mov	[esp+4Ch+var_3C], eax
call	xmlnode_get_attrib
mov	[esp+4Ch+var_34], eax
test	eax, eax
jz	short loc_61C74AB5
mov	[esp+4Ch+var_48], offset aPort_2 
mov	[esp+4Ch+Str], ebx
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_61C74AB5
mov	[esp+4Ch+Str], eax 
call	atoi
mov	edx, eax
test	eax, eax
mov	ecx, [esp+4Ch+var_3C]
jz	loc_61C74AB5
jmp	loc_61C74A5E
			
call	__stack_chk_fail
align 4
public jabber_si_new_xfer
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	esi, [eax+1Ch]
mov	edx, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 1
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_new
mov	ebx, eax
test	eax, eax
jz	short loc_61C74BE2
mov	[esp+2Ch+var_2C], 44h
call	g_malloc0
mov	[ebx+7Ch], eax
mov	[eax], esi
mov	dword ptr [eax+34h], 0FFFFFFFFh
mov	dword ptr [eax+38h], 0
mov	[esp+2Ch+var_28], offset sub_61C71E10
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_init_fnc
mov	[esp+2Ch+var_28], offset sub_61C717C8
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_cancel_send_fnc
mov	[esp+2Ch+var_28], offset sub_61C716C8
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_end_fnc
mov	[esp+2Ch+var_28], ebx
mov	eax, [esi+4Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esi+4Ch], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74BF6
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public jabber_si_xfer_send
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	jabber_si_new_xfer
test	ebx, ebx
jz	short loc_61C74C44
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74C5D
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_xfer_request_accepted
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C74C5D
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_xfer_request
			
call	__stack_chk_fail
align 4
public jabber_si_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset jabber_si_parse
mov	[esp+2Ch+var_28], offset aHttpJabber__48 
mov	[esp+2Ch+var_2C], offset aSi 
call	jabber_iq_register_handler
mov	[esp+2Ch+var_2C], offset sub_61C7481C
call	jabber_ibb_register_open_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C74CAA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public jabber_si_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset sub_61C7481C
call	jabber_ibb_unregister_open_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C74CDA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_38], edx
mov	ebx, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+64h]
mov	[esp+6Ch+Str1],	eax
call	purple_connection_get_account
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Str2],	edx
mov	[esp+6Ch+Str1],	eax
call	purple_find_buddy
mov	esi, eax
test	eax, eax
jz	short loc_61C74DA2
test	ebx, ebx
jz	short loc_61C74DA2
mov	[esp+6Ch+Str2],	offset aItem_8 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C74DA2
mov	[esp+6Ch+Str2],	offset aMetadata 
mov	[esp+6Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_61C74DA2
mov	[esp+6Ch+Str1],	esi
call	purple_buddy_icons_get_checksum_for_user
mov	esi, eax
mov	[esp+6Ch+Str2],	offset aStop 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C74DBC
			
mov	eax, [ebp+64h]
mov	[esp+6Ch+Str1],	eax
call	purple_connection_get_account
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Str2],	edx
mov	[esp+6Ch+Str1],	eax
call	purple_buddy_icons_set_for_user
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C74F92
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, [ebx+18h]
test	ebx, ebx
jz	short loc_61C74D6F
xor	eax, eax
mov	[esp+6Ch+var_34], 0
mov	[esp+6Ch+var_30], ebp
mov	ebp, esi
jmp	short loc_61C74DE8
align 4
			
mov	eax, 1
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_61C74E70
mov	ecx, [ebx+8]
test	ecx, ecx
jnz	short loc_61C74DDD
mov	esi, [ebx]
mov	edi, offset aInfo 
mov	ecx, 5
repe cmpsb
jnz	short loc_61C74DD8
mov	[esp+6Ch+Str2],	offset aType_14	
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+Str2],	offset aId_12 
mov	[esp+6Ch+Str1],	ebx
call	xmlnode_get_attrib
test	ebp, ebp
jz	short loc_61C74E44
test	eax, eax
jz	short loc_61C74DD8
mov	[esp+6Ch+Str2],	ebp 
mov	[esp+6Ch+Str1],	eax 
call	strcmp
test	eax, eax
jz	loc_61C74DA2
test	esi, esi
jnz	short loc_61C74E4C
jmp	short loc_61C74DD8
align 4
test	esi, esi
jz	short loc_61C74DD8
test	eax, eax
jz	short loc_61C74DD8
mov	edx, [esp+6Ch+var_34]
test	edx, edx
jnz	short loc_61C74DD8
mov	edi, offset aImagePng_1	
mov	ecx, 0Ah
repe cmpsb
jnz	loc_61C74DD8
mov	[esp+6Ch+var_34], ebx
jmp	loc_61C74DD8
align 10h
mov	ebp, [esp+6Ch+var_30]
test	eax, eax
jz	loc_61C74D6F
mov	eax, [esp+6Ch+var_34]
test	eax, eax
jz	loc_61C74DA2
mov	[esp+6Ch+Str2],	offset aUrl_2 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str1],	edx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+Str2],	offset aId_12 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str1],	edx
call	xmlnode_get_attrib
mov	edi, eax
test	esi, esi
jz	loc_61C74F69
mov	[esp+6Ch+Str1],	0Ch
call	g_malloc0
mov	ebx, eax
mov	[eax], ebp
mov	[esp+6Ch+var_4C], eax
mov	[esp+6Ch+var_50], offset sub_61C74F98
mov	[esp+6Ch+var_54], 32000h
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 1
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Str2],	1
mov	[esp+6Ch+Str1],	esi
call	purple_util_fetch_url_request_len
mov	esi, eax
test	eax, eax
jz	short loc_61C74F4D
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Str1],	edx
call	g_strdup
mov	[ebx+4], eax
mov	[esp+6Ch+Str1],	edi
call	g_strdup
mov	[ebx+8], eax
mov	[esp+6Ch+Str2],	esi
mov	eax, [ebp+130h]
mov	[esp+6Ch+Str1],	eax
call	g_slist_prepend
mov	[ebp+130h], eax
jmp	loc_61C74DA2
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C74F92
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+6Ch+var_5C], offset sub_61C75054
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset aUrnXmppAvatarD 
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Str2],	edx
mov	[esp+6Ch+Str1],	ebp
call	jabber_pep_request_item
jmp	loc_61C74DA2
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_61C75034
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	g_memdup
mov	ebp, eax
mov	edx, [ebx+8]
mov	edi, [ebx+4]
mov	eax, [ebx]
mov	eax, [eax+64h]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_30], edx
call	purple_connection_get_account
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_icons_set_for_user
mov	eax, [ebx+4]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7504E
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aDo_buddy_avata 
mov	[esp+5Ch+var_5C], offset aJabber_25 
call	purple_debug_error
jmp	short loc_61C75000
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_61C75124
mov	[esp+5Ch+var_58], offset aItem_8 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_61C75124
mov	[esp+5Ch+var_58], offset aData_2 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_get_child
mov	ebp, eax
test	eax, eax
jz	short loc_61C75124
mov	[esp+5Ch+var_58], offset aId_12	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	short loc_61C75124
mov	[esp+5Ch+var_5C], ebp
call	xmlnode_get_data
mov	ebp, eax
test	eax, eax
jz	short loc_61C75124
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_base64_decode
mov	edx, eax
test	eax, eax
jz	short loc_61C7511C
mov	ecx, [esp+5Ch+var_24]
mov	eax, [edi+64h]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_30], edx
mov	[esp+5Ch+var_34], ecx
call	purple_connection_get_account
mov	[esp+5Ch+var_4C], ebx
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], ecx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	purple_buddy_icons_set_for_user
mov	[esp+5Ch+var_5C], ebp
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75138
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
test	eax, eax
jz	short loc_61C7518C
mov	[esp+2Ch+var_28], offset aHttpWww_xmpp_o 
mov	[esp+2Ch+var_2C], ebx
call	jabber_pep_delete_node
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7519D
mov	[esp+2Ch+arg_4], offset	aHttpWww_xmpp_0	
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	jabber_pep_delete_node
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7519D
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public jabber_avatar_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset jabber_pep_namespace_only_when_pep_enabled_cb 
mov	[esp+2Ch+var_2C], offset aUrnXmppAvatarM 
call	jabber_add_feature
mov	[esp+2Ch+var_28], offset jabber_pep_namespace_only_when_pep_enabled_cb 
mov	[esp+2Ch+var_2C], offset aUrnXmppAvatarD 
call	jabber_add_feature
mov	[esp+2Ch+var_28], offset sub_61C74CE0
mov	[esp+2Ch+var_2C], offset aUrnXmppAvatarM 
call	jabber_pep_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C751FE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_avatar_set
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [edi+0DCh]
test	eax, eax
jnz	short loc_61C75240
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C7557B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aHttpWww_xmpp_o 
mov	[esp+5Ch+netlong], edi
call	jabber_pep_delete_node
mov	[esp+5Ch+var_58], offset aHttpWww_xmpp_0 
mov	[esp+5Ch+netlong], edi
call	jabber_pep_delete_node
test	ebx, ebx
jz	loc_61C75580
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_size
cmp	eax, 20h
ja	short loc_61C752A4
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C7557B
mov	[esp+5Ch+arg_4], offset	aCannotSetPepAv	
mov	[esp+5Ch+arg_0], offset	aJabber_25 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
align 4
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_data
mov	esi, eax
test	eax, eax
jz	short loc_61C75275
cmp	dword ptr [eax], 474E5089h
jnz	short loc_61C75275
cmp	dword ptr [eax+4], 0A1A0A0Dh
jnz	short loc_61C75275
mov	eax, [eax+8]
mov	[esp+5Ch+netlong], eax 
call	ntohl
push	ebp
cmp	eax, 0Dh
jnz	short loc_61C75275
cmp	dword ptr [esi+0Ch], 52444849h
jnz	short loc_61C75275
mov	eax, [esi+10h]
mov	[esp+5Ch+netlong], eax 
call	ntohl
push	edx
mov	[esp+5Ch+var_34], eax
mov	eax, [esi+14h]
mov	[esp+5Ch+netlong], eax 
call	ntohl
push	ecx
mov	[esp+5Ch+netlong], ebx
mov	[esp+5Ch+var_40], eax
call	purple_imgstore_get_size
mov	esi, eax
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_data
mov	[esp+5Ch+var_54], offset aSha1_9 
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+netlong], eax
call	jabber_calculate_data_hash
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_size
mov	esi, eax
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_data
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+netlong], eax
call	purple_base64_encode
mov	esi, eax
mov	[esp+5Ch+netlong], offset aPublish 
call	xmlnode_new
mov	ebp, eax
mov	[esp+5Ch+var_54], offset aUrnXmppAvatarD 
mov	[esp+5Ch+var_58], offset aNode_6 
mov	[esp+5Ch+netlong], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aItem_8 
mov	[esp+5Ch+netlong], ebp
call	xmlnode_new_child
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aId_12	
mov	[esp+5Ch+netlong], eax
mov	[esp+5Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aData_2 
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+netlong], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_58], offset aUrnXmppAvatarD 
mov	[esp+5Ch+netlong], eax
mov	[esp+5Ch+var_3C], eax
call	xmlnode_set_namespace
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], esi
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+netlong], eax
call	xmlnode_insert_data
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+netlong], edi
call	jabber_pep_publish
mov	[esp+5Ch+netlong], esi
call	g_free
mov	[esp+5Ch+netlong], ebx
call	purple_imgstore_get_size
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+netlong], offset aU_1 
call	g_strdup_printf
mov	ebp, eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+netlong], offset aU_1 
call	g_strdup_printf
mov	[esp+5Ch+var_34], eax
mov	ecx, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+netlong], offset aU_1 
call	g_strdup_printf
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+netlong], offset aPublish 
call	xmlnode_new
mov	esi, eax
mov	[esp+5Ch+var_54], offset aUrnXmppAvatarM 
mov	[esp+5Ch+var_58], offset aNode_6 
mov	[esp+5Ch+netlong], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aItem_8 
mov	[esp+5Ch+netlong], esi
call	xmlnode_new_child
mov	ebx, eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aId_12	
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aMetadata 
mov	[esp+5Ch+netlong], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aUrnXmppAvatarM 
mov	[esp+5Ch+netlong], eax
call	xmlnode_set_namespace
mov	[esp+5Ch+var_58], offset aInfo 
mov	[esp+5Ch+netlong], ebx
call	xmlnode_new_child
mov	ebx, eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aId_12	
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aImagePng_1 
mov	[esp+5Ch+var_58], offset aType_14 
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aBytes	
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aWidth	
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aHeight 
mov	[esp+5Ch+netlong], ebx
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+netlong], edi
call	jabber_pep_publish
mov	[esp+5Ch+netlong], ebp
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+netlong], eax
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+netlong], eax
call	g_free
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7557B
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
call	__stack_chk_fail
mov	[esp+5Ch+netlong], offset aPublish 
call	xmlnode_new
mov	ebx, eax
mov	[esp+5Ch+var_54], offset aUrnXmppAvatarM 
mov	[esp+5Ch+var_58], offset aNode_6 
mov	[esp+5Ch+netlong], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aItem_8 
mov	[esp+5Ch+netlong], ebx
call	xmlnode_new_child
mov	[esp+5Ch+var_58], offset aMetadata 
mov	[esp+5Ch+netlong], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_58], offset aUrnXmppAvatarM 
mov	[esp+5Ch+netlong], eax
call	xmlnode_set_namespace
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7557B
mov	[esp+5Ch+arg_4], ebx
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_pep_publish
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+64h]
mov	[esp], eax
call	purple_connection_get_account
mov	edi, eax
test	esi, esi
jz	short loc_61C75681
mov	dword ptr [esp+4], offset aItem_8 
mov	[esp], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C75681
mov	dword ptr [esp+4], offset aMetadata 
mov	[esp], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C75681
mov	dword ptr [esp+4], offset aInfo	
mov	[esp], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C756C8
mov	dword ptr [esp+4], offset aId_12 
mov	[esp], eax
call	xmlnode_get_attrib
mov	edx, [ebx+70h]
mov	[esp+4], edx
mov	[esp], eax
call	purple_strequal
test	eax, eax
jnz	short loc_61C756B4
			
mov	[esp], edi
call	purple_buddy_icons_find_account_icon
mov	esi, eax
mov	[esp+4], eax
mov	[esp], ebx
call	jabber_avatar_set
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C756CC
mov	[esp+30h], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_imgstore_unref
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C756CC
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
xor	eax, eax
jmp	short loc_61C7566E
			
call	__stack_chk_fail
align 4
public jabber_avatar_fetch_mine
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+70h]
test	eax, eax
jz	short loc_61C7573E
mov	[esp+3Ch+var_2C], offset sub_61C75140
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aHttpWww_xmpp_o 
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	jabber_pep_request_item
mov	[esp+3Ch+var_2C], offset loc_61C755F8
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aUrnXmppAvatarM 
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	jabber_pep_request_item
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7574F
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Str2],	offset aItem_9 
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+Str1],	eax
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+5Ch+var_54], 0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Str2],	edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	edx
call	jabber_buddy_find
test	eax, eax
jz	loc_61C75900
test	ebx, ebx
jz	loc_61C75900
mov	[esp+5Ch+var_54], offset aHttpJabber__50 
mov	[esp+5Ch+Str2],	offset aMood_2 
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C75900
mov	ebx, [eax+18h]
mov	[esp+5Ch+var_3C], 0
test	ebx, ebx
jz	loc_61C75914
mov	[esp+5Ch+var_38], 0
nop
mov	edi, [ebx+8]
test	edi, edi
jnz	loc_61C758EC
mov	ebp, [ebx]
mov	edi, offset aText_3 
mov	esi, ebp
mov	ecx, 5
repe cmpsb
jz	loc_61C758D8
mov	esi, off_61C7A160
mov	edi, offset off_61C7A16C
test	esi, esi
jnz	short loc_61C7583A
jmp	loc_61C758EC
align 4
add	edi, 0Ch
mov	esi, [edi-0Ch]
test	esi, esi
jz	loc_61C758EC
mov	[esp+5Ch+Str2],	esi 
mov	[esp+5Ch+Str1],	ebp 
call	strcmp
test	eax, eax
jnz	short loc_61C7582C
mov	[esp+5Ch+var_38], esi
xchg	ax, ax
mov	edx, [esp+5Ch+var_3C]
test	edx, edx
jnz	short loc_61C7586B
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_61C757F4
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	loc_61C75914
mov	[esp+5Ch+var_40], 0
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], offset aMoodtext_1 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], offset aMood_2 
mov	[esp+5Ch+var_54], offset aMood_2 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Str2],	edx
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+Str1],	eax
call	purple_prpl_got_user_status
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C7593B
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	esi, [esp+5Ch+var_3C]
test	esi, esi
jnz	short loc_61C758EC
mov	[esp+5Ch+Str1],	ebx
call	xmlnode_get_data
mov	[esp+5Ch+var_3C], eax
			
mov	ecx, [esp+5Ch+var_38]
test	ecx, ecx
jnz	loc_61C75850
jmp	loc_61C75858
align 10h
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7593B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+5Ch+var_54], offset aMood_2 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Str2],	edx
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+64h]
mov	eax, [eax+0Ch]
mov	[esp+5Ch+Str1],	eax
call	purple_prpl_got_user_status_deactive
jmp	loc_61C758B5
			
call	__stack_chk_fail
public jabber_mood_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset jabber_pep_namespace_only_when_pep_enabled_cb 
mov	[esp+2Ch+var_2C], offset aHttpJabber__50 
call	jabber_add_feature
mov	[esp+2Ch+var_28], offset sub_61C75754
mov	[esp+2Ch+var_2C], offset aHttpJabber__50 
call	jabber_pep_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75986
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_mood_set
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset aPublish_0 
call	xmlnode_new
mov	ebx, eax
mov	[esp+4Ch+var_44], offset aHttpJabber__50 
mov	[esp+4Ch+var_48], offset aNode_7 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aItem_9 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aMood_2 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aHttpJabber__50 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
test	edi, edi
jz	short loc_61C75A0F
cmp	byte ptr [edi],	0
jnz	short loc_61C75A60
			
test	esi, esi
jz	short loc_61C75A3C
cmp	byte ptr [esi],	0
jz	short loc_61C75A3C
mov	[esp+4Ch+var_48], offset aText_3 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75A6E
mov	[esp+4Ch+arg_4], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_pep_publish
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
jmp	short loc_61C75A0F
call	__stack_chk_fail
align 4
public jabber_get_moods
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset off_61C7A160
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C75A97
add	esp, 1Ch
retn
call	__stack_chk_fail
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	eax, [eax+0Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_protocol_data
mov	[esp+3Ch+var_2C], offset sub_61C75AF8
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aHttpJabber__51 
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], eax
call	jabber_pep_request_item
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75AF1
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, [esp+7Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_61C75C70
mov	[esp+7Ch+var_78], offset aItem_10 
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_61C75C70
mov	[esp+7Ch+var_74], offset aHttpJabber__51 
mov	[esp+7Ch+var_78], offset aNick_3 
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	loc_61C75C70
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_data
mov	esi, eax
mov	eax, [ebx+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_account
mov	[esp+7Ch+var_78], offset aCancel_10 
mov	[esp+7Ch+var_7C], offset aPidgin_15 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aSet 
mov	[esp+7Ch+var_7C], offset aPidgin_15 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aThisInformatio 
mov	[esp+7Ch+var_7C], offset aPidgin_15 
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset aPleaseSpecifyA 
mov	[esp+7Ch+var_7C], offset aPidgin_15 
call	libintl_dgettext
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aSetUserNicknam 
mov	[esp+7Ch+var_7C], offset aPidgin_15 
call	libintl_dgettext
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_44], 0
mov	[esp+7Ch+var_48], 0
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], 0
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], offset sub_61C75C7C
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+var_70], edi
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+64h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_input
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75C77
mov	[esp+7Ch+arg_0], esi
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
xor	esi, esi
jmp	loc_61C75B63
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], offset aPublish_1 
call	xmlnode_new
mov	ebx, eax
mov	[esp+3Ch+var_34], offset aHttpJabber__51 
mov	[esp+3Ch+var_38], offset aNode_8 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	[esp+3Ch+var_38], offset aItem_10 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_new_child
mov	[esp+3Ch+var_38], offset aNick_3 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+3Ch+var_38], offset aHttpJabber__51 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_namespace
test	esi, esi
jz	short loc_61C75D0B
cmp	byte ptr [esi],	0
jz	short loc_61C75D0B
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	xmlnode_insert_data
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75D2B
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_pep_publish
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aItem_10 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	jabber_buddy_find
test	eax, eax
jz	short loc_61C75DD0
test	ebx, ebx
jz	short loc_61C75DD0
mov	[esp+2Ch+var_24], offset aHttpJabber__51 
mov	[esp+2Ch+var_28], offset aNick_3 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_child_with_namespace
test	eax, eax
jz	short loc_61C75DD0
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+64h]
mov	[esp+2Ch+var_2C], eax
call	serv_got_alias
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75DE3
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 10h
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75DE3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public jabber_nick_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset jabber_pep_namespace_only_when_pep_enabled_cb 
mov	[esp+2Ch+var_2C], offset aHttpJabber__51 
call	jabber_add_feature
mov	[esp+2Ch+var_28], offset sub_61C75D30
mov	[esp+2Ch+var_2C], offset aHttpJabber__51 
call	jabber_pep_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75E2E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_nick_init_action
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aSetNickname___ 
mov	[esp+2Ch+var_2C], offset aPidgin_15 
call	libintl_dgettext
mov	[esp+2Ch+var_28], offset sub_61C75A9C
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_action_new
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C75E8C
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	eax, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_4C], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+EndPtr], offset aItem_11 
mov	eax, [esp+8Ch+arg_8]
mov	[esp+8Ch+Str], eax
call	xmlnode_get_child
mov	ebx, eax
mov	[esp+8Ch+Radix], 0
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+EndPtr], eax
mov	[esp+8Ch+Str], ebp
call	jabber_buddy_find
mov	esi, eax
test	eax, eax
jz	loc_61C76010
test	ebx, ebx
jz	loc_61C76010
mov	[esp+8Ch+Radix], offset	aHttpJabber__52	
mov	[esp+8Ch+EndPtr], offset aTune_2 
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_child_with_namespace
mov	ebx, eax
test	eax, eax
jz	loc_61C76010
mov	[esp+8Ch+EndPtr], 0
mov	[esp+8Ch+Str], esi
call	jabber_buddy_find_resource
test	eax, eax
jz	loc_61C76010
mov	ebx, [ebx+18h]
mov	[esp+8Ch+var_34], 0
test	ebx, ebx
jz	loc_61C76192
mov	[esp+8Ch+var_40], 0FFFFFFFFh
mov	[esp+8Ch+var_48], 0
mov	[esp+8Ch+var_3C], 0
mov	[esp+8Ch+var_44], 0
mov	[esp+8Ch+var_38], 0
xor	edx, edx
mov	[esp+8Ch+var_30], ebp
mov	ebp, edx
jmp	short loc_61C75F98
align 4
mov	ebp, 1
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jz	loc_61C761FC
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_61C76060
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_61C75F8D
mov	eax, [ebx]
mov	edi, offset aArtist 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jz	short loc_61C75F7C
mov	edi, offset aLength 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jnz	short loc_61C76028
cmp	[esp+8Ch+var_40], 0FFFFFFFFh
jnz	short loc_61C75F8D
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C76246
mov	[esp+8Ch+Radix], 0Ah 
mov	[esp+8Ch+EndPtr], 0 
mov	[esp+8Ch+Str], eax 
call	strtol
mov	[esp+8Ch+var_40], eax
mov	[esp+8Ch+Str], esi
call	g_free
mov	edi, [esp+8Ch+var_40]
test	edi, edi
jle	short loc_61C75F8D
mov	ebp, 1
jmp	short loc_61C75F8D
align 10h
			
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C76257
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edi, offset aSource 
mov	esi, eax
mov	ecx, 7
repe cmpsb
jnz	loc_61C7614C
mov	ebp, 1
mov	esi, [esp+8Ch+var_44]
test	esi, esi
jnz	loc_61C75F8D
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_44], eax
jmp	loc_61C75F8D
align 10h
mov	edx, ebp
mov	ebp, [esp+8Ch+var_30]
test	edx, edx
jz	loc_61C761B4
mov	[esp+8Ch+var_50], 0
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_54], eax
mov	[esp+8Ch+var_58], offset aTune_url_1 
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_5C], eax
mov	[esp+8Ch+var_60], offset aTune_time_1 
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_64], eax
mov	[esp+8Ch+var_68], offset aTune_track_1 
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_6C], eax
mov	[esp+8Ch+var_70], offset aTune_album_1 
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_74], eax
mov	[esp+8Ch+var_78], offset aTune_title_2 
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], offset aTune_artist_1	
mov	[esp+8Ch+Radix], offset	aTune_2	
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+EndPtr], eax
mov	eax, [ebp+64h]
mov	eax, [eax+0Ch]
mov	[esp+8Ch+Str], eax
call	purple_prpl_got_user_status
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C76257
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+arg_0], eax
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	edi, offset aTitle_0 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jz	short loc_61C761D8
mov	edi, offset aTrack 
mov	esi, eax
mov	ecx, 6
repe cmpsb
jnz	loc_61C76210
mov	ebp, 1
mov	edx, [esp+8Ch+var_38]
test	edx, edx
jnz	loc_61C75F8D
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_38], eax
jmp	loc_61C75F8D
mov	[esp+8Ch+var_48], 0
mov	[esp+8Ch+var_3C], 0
mov	[esp+8Ch+var_44], 0
mov	[esp+8Ch+var_38], 0
xchg	ax, ax
mov	[esp+8Ch+Radix], offset	aTune_2	
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+EndPtr], eax
mov	eax, [ebp+64h]
mov	eax, [eax+0Ch]
mov	[esp+8Ch+Str], eax
call	purple_prpl_got_user_status_deactive
jmp	loc_61C760F4
align 4
mov	ebp, 1
mov	ecx, [esp+8Ch+var_3C]
test	ecx, ecx
jnz	loc_61C75F8D
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_3C], eax
jmp	loc_61C75F8D
align 4
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_48], eax
jmp	loc_61C75F8D
align 10h
mov	edi, offset aUri 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jnz	loc_61C75F8D
mov	ebp, 1
mov	eax, [esp+8Ch+var_34]
test	eax, eax
jnz	loc_61C75F8D
mov	[esp+8Ch+Str], ebx
call	xmlnode_get_data
mov	[esp+8Ch+var_34], eax
jmp	loc_61C75F8D
mov	[esp+8Ch+Str], 0
call	g_free
jmp	loc_61C75F8D
			
call	__stack_chk_fail
public jabber_tune_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset jabber_pep_namespace_only_when_pep_enabled_cb 
mov	[esp+2Ch+var_2C], offset aHttpJabber__52 
call	jabber_add_feature
mov	[esp+2Ch+var_28], offset sub_61C75E94
mov	[esp+2Ch+var_2C], offset aHttpJabber__52 
call	jabber_pep_register_handler
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C762A2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public jabber_tune_set
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	eax, [eax+1Ch]
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], offset aPublish_2 
call	xmlnode_new
mov	ebx, eax
mov	[esp+4Ch+var_44], offset aHttpJabber__52 
mov	[esp+4Ch+var_48], offset aNode_9 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aItem_11 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_new_child
mov	[esp+4Ch+var_48], offset aTune_2 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+4Ch+var_48], offset aHttpJabber__52 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_namespace
test	edi, edi
jz	loc_61C763BE
mov	ebp, [edi]
test	ebp, ebp
jz	short loc_61C76339
cmp	byte ptr [ebp+0], 0
jnz	loc_61C76494
			
mov	ebp, [edi+4]
test	ebp, ebp
jz	short loc_61C7634A
cmp	byte ptr [ebp+0], 0
jnz	loc_61C76468
			
mov	ebp, [edi+8]
test	ebp, ebp
jz	short loc_61C7635B
cmp	byte ptr [ebp+0], 0
jnz	loc_61C7643C
			
mov	ebp, [edi+14h]
test	ebp, ebp
jz	short loc_61C7636C
cmp	byte ptr [ebp+0], 0
jnz	loc_61C76410
			
mov	eax, [edi+10h]
test	eax, eax
jle	short loc_61C763B1
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aD_3 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aLength 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	ebp, [edi+0Ch]
test	ebp, ebp
jz	short loc_61C763BE
cmp	byte ptr [ebp+0], 0
jnz	short loc_61C763E8
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C764BD
mov	[esp+4Ch+arg_4], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	jabber_pep_publish
align 4
mov	[esp+4Ch+var_48], offset aTrack	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	short loc_61C763BE
align 10h
mov	[esp+4Ch+var_48], offset aUri 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	loc_61C7636C
align 4
mov	[esp+4Ch+var_48], offset aSource 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	loc_61C7635B
align 4
mov	[esp+4Ch+var_48], offset aTitle_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	loc_61C7634A
align 4
mov	[esp+4Ch+var_48], offset aArtist 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
jmp	loc_61C76339
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset asc_61C85824 
call	xmlnode_new
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp+4Ch+var_34], eax
mov	ebp, [ebx+0Ch]
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_30], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_destroy
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_61C7652C
xchg	ax, ax
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], eax
call	g_slist_delete_link
mov	[ebx+4], eax
test	eax, eax
jnz	short loc_61C7650C
mov	edi, [ebx+14h]
test	edi, edi
jz	loc_61C765B8
nop
mov	edx, [edi]
mov	[esp+4Ch+var_4C], edx
call	g_free
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_61C76538
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_48], offset aJabberXData_4	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], offset aCancel_11 
mov	[esp+4Ch+var_48], offset aType_15 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
mov	eax, [esp+4Ch+var_34]
call	eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_61C765FF
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_48], offset aJabberXData_4	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_namespace
mov	[esp+4Ch+var_44], offset aCancel_11 
mov	[esp+4Ch+var_48], offset aType_15 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
mov	eax, [esp+4Ch+var_34]
call	eax
jmp	short loc_61C765A1
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_50], edx
mov	ebx, [esp+6Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_6C], offset asc_61C85824 
call	xmlnode_new
mov	[esp+6Ch+var_4C], eax
mov	edx, [esp+6Ch+var_50]
mov	edx, [edx+8]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+var_50]
mov	edx, [edx+0Ch]
mov	[esp+6Ch+var_38], edx
mov	edx, [esp+6Ch+var_50]
mov	edx, [edx+10h]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+var_50]
mov	edx, [edx+14h]
mov	[esp+6Ch+var_30], edx
mov	[esp+6Ch+var_68], offset aJabberXData_4	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_namespace
mov	[esp+6Ch+var_64], offset aSubmit_1 
mov	[esp+6Ch+var_68], offset aType_15 
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_6C], ebx
call	purple_request_fields_get_groups
mov	[esp+6Ch+var_48], eax
mov	[esp+6Ch+var_40], 0
test	eax, eax
jz	loc_61C76776
xchg	ax, ax
			
mov	edx, [esp+6Ch+var_48]
mov	eax, [edx]
mov	edx, [esp+6Ch+var_50]
cmp	eax, [edx+18h]
mov	[esp+6Ch+var_6C], eax
jz	loc_61C76A1C
call	purple_request_field_group_get_fields
mov	esi, eax
test	eax, eax
jz	loc_61C76763
lea	esi, [esi+0]
			
mov	ebx, [esi]
mov	[esp+6Ch+var_6C], ebx
call	purple_request_field_get_id
mov	edi, eax
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_50]
mov	eax, [edx]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_lookup
cmp	eax, 6		
ja	short loc_61C76758 
jmp	ds:off_61C85880[eax*4] 
align 4
			
mov	[esp+6Ch+var_6C], ebx 
call	purple_request_field_string_get_value
mov	ebx, eax
test	eax, eax
jz	short loc_61C76758 
mov	[esp+6Ch+var_68], offset aField_2 
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aVar_3	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aValue_3 
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_new_child
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], eax
call	xmlnode_insert_data
			
mov	esi, [esi+4]	
test	esi, esi
jnz	loc_61C766D0
			
mov	eax, [esp+6Ch+var_48]
mov	eax, [eax+4]
mov	[esp+6Ch+var_48], eax
test	eax, eax
jnz	loc_61C766A8
			
mov	edx, [esp+6Ch+var_50]
mov	eax, [edx]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_destroy
mov	edx, [esp+6Ch+var_50]
mov	eax, [edx+4]
test	eax, eax
jz	short loc_61C767B4
mov	ebx, [esp+6Ch+var_50]
nop
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], eax
call	g_slist_delete_link
mov	[ebx+4], eax
test	eax, eax
jnz	short loc_61C76794
mov	edx, [esp+6Ch+var_50]
mov	ebx, [edx+14h]
test	ebx, ebx
jz	short loc_61C767E0
nop
mov	eax, [ebx]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_61C767C0
mov	edx, [esp+6Ch+var_50]
mov	eax, [edx+14h]
mov	[esp+6Ch+var_6C], eax
call	g_list_free
mov	edx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	edx, [esp+6Ch+var_38]
mov	eax, [esp+6Ch+var_30]
test	eax, eax
jz	loc_61C76A91
mov	[esp+6Ch+var_60], edx
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
mov	edx, [esp+6Ch+var_3C]
call	edx
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_61C76AAF
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+arg_0], eax
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
			
mov	[esp+6Ch+var_6C], ebx 
call	purple_request_field_list_get_selected
mov	ebp, eax
mov	[esp+6Ch+var_68], offset aField_2 
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aVar_3	
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_54], eax
call	xmlnode_set_attrib
test	ebp, ebp
mov	edx, [esp+6Ch+var_54]
jz	loc_61C76758	
mov	edi, edx
mov	[esp+6Ch+var_44], esi
mov	eax, [ebp+0]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_request_field_list_get_data
mov	esi, eax
mov	[esp+6Ch+var_68], offset aValue_3 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_new_child
test	esi, esi
jz	short loc_61C768C5
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], eax
call	xmlnode_insert_data
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C7688C
mov	esi, [esp+6Ch+var_44]
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C766D0
jmp	loc_61C76763
			
mov	[esp+6Ch+var_6C], ebx 
call	purple_request_field_string_get_value
mov	ebp, eax
test	eax, eax
jz	loc_61C76758	
mov	[esp+6Ch+var_68], offset aField_2 
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aVar_3	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	[esp+6Ch+var_68], offset asc_61C85877 
mov	[esp+6Ch+var_6C], ebp
call	g_strsplit
mov	edi, eax
mov	ebp, eax
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_61C76971
xchg	ax, ax
mov	[esp+6Ch+var_68], offset aValue_3 
mov	[esp+6Ch+var_6C], ebx
call	xmlnode_new_child
mov	[esp+6Ch+var_64], 0FFFFFFFFh
mov	edx, [ebp+0]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	xmlnode_insert_data
add	ebp, 4
mov	edx, [ebp+0]
test	edx, edx
jnz	short loc_61C76940
mov	[esp+6Ch+var_6C], edi
call	g_strfreev
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C766D0
jmp	loc_61C76763
align 4
			
mov	[esp+6Ch+var_68], offset aField_2 
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aVar_3	
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib
mov	[esp+6Ch+var_68], offset aValue_3 
mov	[esp+6Ch+var_6C], ebp
call	xmlnode_new_child
mov	edi, eax
mov	[esp+6Ch+var_6C], ebx
call	purple_request_field_bool_get_value
mov	[esp+6Ch+var_64], 0FFFFFFFFh
test	eax, eax
jz	short loc_61C769FC
mov	[esp+6Ch+var_68], offset a1_0 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_insert_data
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C766D0
jmp	loc_61C76763
mov	[esp+6Ch+var_68], offset a0_0 
mov	[esp+6Ch+var_6C], edi
call	xmlnode_insert_data
mov	esi, [esi+4]
test	esi, esi
jnz	loc_61C766D0
jmp	loc_61C76763
call	purple_request_field_group_get_fields
mov	ebp, eax
test	eax, eax
jz	loc_61C76763
mov	ebx, [ebp+0]
mov	[esp+6Ch+var_6C], ebx
call	purple_request_field_get_id
mov	esi, eax
mov	edi, offset aLibpurpleJabbe 
mov	ecx, 1Fh
repe cmpsb
jz	short loc_61C76A52
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_61C76A2B
jmp	loc_61C76763
mov	[esp+6Ch+var_6C], ebx
call	purple_request_field_choice_get_value
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_50]
mov	eax, [edx+14h]
mov	[esp+6Ch+var_6C], eax
call	g_list_nth_data
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	[esp+6Ch+var_40], eax
mov	eax, [esp+6Ch+var_48]
mov	eax, [eax+4]
mov	[esp+6Ch+var_48], eax
test	eax, eax
jnz	loc_61C766A8
jmp	loc_61C76776
mov	[esp+6Ch+var_64], edx
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_68], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
mov	edx, [esp+6Ch+var_3C]
call	edx
jmp	loc_61C7681D
call	__stack_chk_fail
public jabber_x_data_request_with_actions
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_40], edx
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_3C], edx
mov	edx, [esp+9Ch+arg_8]
mov	[esp+9Ch+var_34], edx
mov	edx, [esp+9Ch+arg_C]
mov	[esp+9Ch+var_30], edx
mov	ebx, [esp+9Ch+arg_10]
mov	esi, [esp+9Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+var_9C], 1Ch
call	g_malloc0
mov	[esp+9Ch+var_4C], eax
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], offset g_free
mov	[esp+9Ch+var_98], offset g_str_equal
mov	[esp+9Ch+var_9C], offset g_str_hash
call	g_hash_table_new_full
mov	edx, [esp+9Ch+var_4C]
mov	[edx], eax
mov	[edx+0Ch], esi
mov	[edx+8], ebx
mov	eax, [esp+9Ch+var_40]
mov	[edx+10h], eax
call	purple_request_fields_new
mov	[esp+9Ch+var_38], eax
mov	[esp+9Ch+var_9C], 0
call	purple_request_field_group_new
mov	[esp+9Ch+var_48], eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+var_9C], eax
call	purple_request_fields_add_group
mov	[esp+9Ch+var_98], offset aField_2 
mov	edx, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_9C], edx
call	xmlnode_get_child
mov	[esp+9Ch+var_54], 0
mov	ebp, eax
test	eax, eax
jz	loc_61C76E28
lea	esi, [esi+0]
mov	[esp+9Ch+var_98], offset aType_15 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_attrib
mov	[esp+9Ch+var_58], eax
mov	[esp+9Ch+var_98], offset aLabel_0 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_attrib
mov	[esp+9Ch+var_50], eax
mov	[esp+9Ch+var_98], offset aVar_3	
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	edi, [esp+9Ch+var_58]
test	edi, edi
jz	loc_61C77298
test	ebx, ebx
jz	loc_61C77268
mov	esi, [esp+9Ch+var_50]
test	esi, esi
jz	loc_61C7728C
			
mov	edi, offset aTextPrivate 
mov	esi, [esp+9Ch+var_58]
mov	ecx, 0Dh
repe cmpsb
jz	loc_61C7700C
mov	edi, offset aTextMulti 
mov	esi, [esp+9Ch+var_58]
mov	ecx, 0Bh
repe cmpsb
jz	loc_61C76D20
mov	edi, offset aJidMulti 
mov	ecx, 0Ah
mov	esi, [esp+9Ch+var_58]
repe cmpsb
jz	loc_61C76D20
mov	edi, offset aListSingle_0 
mov	ecx, 0Ch
mov	esi, [esp+9Ch+var_58]
repe cmpsb
setnbe	dl
setb	al
mov	[esp+9Ch+var_44], offset aListMulti 
cmp	dl, al
jz	loc_61C770AC
mov	esi, [esp+9Ch+var_58]
mov	edi, offset aListMulti 
mov	ecx, 0Bh
repe cmpsb
jz	loc_61C770AC
mov	edi, offset aBoolean 
mov	ecx, 8
mov	esi, [esp+9Ch+var_58]
repe cmpsb
jz	loc_61C772DB
mov	edi, offset aFixed 
mov	ecx, 6
mov	esi, [esp+9Ch+var_58]
repe cmpsb
jz	loc_61C77414
mov	edi, offset aHidden 
mov	ecx, 7
mov	esi, [esp+9Ch+var_58]
repe cmpsb
setnbe	dl
setb	al
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
cmp	dl, al
jnz	loc_61C77366
call	xmlnode_get_child
test	eax, eax
jz	loc_61C774C2
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
test	eax, eax
jz	loc_61C774C2
mov	esi, eax
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], offset byte_61C858A8
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_string_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], 0
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_set_visible
jmp	loc_61C77066
align 10h
			
mov	[esp+9Ch+var_9C], offset byte_61C858A8
call	g_string_new
mov	edi, eax
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	short loc_61C76D82
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_data
test	eax, eax
jz	short loc_61C76D74
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], offset aS_2 
mov	[esp+9Ch+var_9C], edi
mov	[esp+9Ch+var_5C], eax
call	g_string_append_printf
mov	eax, [esp+9Ch+var_5C]
mov	[esp+9Ch+var_9C], eax
call	g_free
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	short loc_61C76D44
mov	[esp+9Ch+var_90], 1
mov	eax, [edi]
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_string_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 2
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_4C]
mov	eax, [edx]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_replace
mov	[esp+9Ch+var_98], 1
mov	[esp+9Ch+var_9C], edi
call	g_string_free
			
mov	ebx, [esp+9Ch+var_54]
test	ebx, ebx
jz	short loc_61C76E16
mov	[esp+9Ch+var_98], offset aRequired_0 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C76E16
mov	[esp+9Ch+var_98], 1
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_set_required
			
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jnz	loc_61C76B9C
mov	ebp, [esp+9Ch+var_34]
test	ebp, ebp
jz	loc_61C76EF8
mov	[esp+9Ch+var_98], offset aActions 
mov	[esp+9Ch+var_9C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_new
mov	esi, eax
mov	eax, [esp+9Ch+var_4C]
mov	[eax+18h], esi
mov	[esp+9Ch+var_98], esi
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+var_9C], eax
call	purple_request_fields_add_group
mov	[esp+9Ch+var_98], offset aSelectAnAction 
mov	[esp+9Ch+var_9C], offset aPidgin_16 
call	libintl_dgettext
mov	edx, [esp+9Ch+var_30]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], offset aLibpurpleJabbe 
call	purple_request_field_choice_new
mov	ebx, eax
mov	edi, [esp+9Ch+var_34]
mov	ebp, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_58], esi
nop
mov	esi, [edi]
mov	edx, [esi]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_choice_add
mov	eax, [esi+4]
mov	[esp+9Ch+var_9C], eax
call	g_strdup
mov	[esp+9Ch+var_98], eax
mov	eax, [ebp+14h]
mov	[esp+9Ch+var_9C], eax
call	g_list_append
mov	[ebp+14h], eax
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_61C76EA4
mov	esi, [esp+9Ch+var_58]
mov	[esp+9Ch+var_98], 1
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_set_required
mov	[esp+9Ch+var_98], ebx
mov	[esp+9Ch+var_9C], esi
call	purple_request_field_group_add_field
mov	[esp+9Ch+var_98], offset aTitle_1 
mov	edx, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_9C], edx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C772D4
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+9Ch+var_98], offset aInstructions_1 
mov	edx, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_9C], edx
call	xmlnode_get_child
test	eax, eax
jz	loc_61C7735F
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
mov	esi, eax
mov	edx, [esp+9Ch+var_40]
mov	eax, [edx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+9Ch+var_98], offset aCancel_12 
mov	[esp+9Ch+var_9C], offset aPidgin_16 
call	libintl_dgettext
mov	edi, eax
mov	[esp+9Ch+var_98], offset aOk 
mov	[esp+9Ch+var_9C], offset aPidgin_16 
call	libintl_dgettext
mov	edx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_6C], edx
mov	[esp+9Ch+var_70], 0
mov	[esp+9Ch+var_74], 0
mov	[esp+9Ch+var_78], ebp
mov	[esp+9Ch+var_7C], offset sub_61C764C4
mov	[esp+9Ch+var_80], edi
mov	[esp+9Ch+var_84], offset sub_61C76604
mov	[esp+9Ch+var_88], eax
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+var_8C], eax
mov	[esp+9Ch+var_90], esi
mov	[esp+9Ch+var_94], ebx
mov	[esp+9Ch+var_98], ebx
mov	edx, [esp+9Ch+var_40]
mov	eax, [edx+64h]
mov	[esp+9Ch+var_9C], eax
call	purple_request_fields
mov	[esp+9Ch+var_9C], ebx
mov	[esp+9Ch+var_5C], eax
call	g_free
mov	[esp+9Ch+var_9C], esi
call	g_free
mov	eax, [esp+9Ch+var_5C]
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C774E7
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C772C8
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
test	eax, eax
jz	loc_61C772C8
mov	esi, eax
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_string_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], 1
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_string_set_masked
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 1
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_4C]
mov	eax, [edx]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_replace
mov	[esp+9Ch+var_9C], esi
call	g_free
jmp	loc_61C76DE6
align 4
			
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_list_new
mov	[esp+9Ch+var_54], eax
mov	esi, [esp+9Ch+var_58]
mov	edi, [esp+9Ch+var_44]
mov	ecx, 0Bh
repe cmpsb
jnz	loc_61C772B0
mov	[esp+9Ch+var_98], 1
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_list_set_multi_select
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 4
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_4C]
mov	eax, [edx]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_replace
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
mov	esi, eax
xor	ebx, ebx
test	eax, eax
jz	short loc_61C7714C
nop
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_data
test	eax, eax
jz	short loc_61C7713E
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	g_list_prepend
mov	ebx, eax
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	short loc_61C77124
mov	[esp+9Ch+var_98], offset aOption_0 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_61C77228
mov	[esp+9Ch+var_50], ebp
mov	[esp+9Ch+var_58], ebx
mov	ebp, [esp+9Ch+var_4C]
xchg	ax, ax
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_child
test	eax, eax
jz	loc_61C7720E
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_61C7720E
mov	[esp+9Ch+var_98], offset aLabel_0 
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	loc_61C772A8
mov	[esp+9Ch+var_98], ebx
mov	eax, [ebp+4]
mov	[esp+9Ch+var_9C], eax
call	g_slist_prepend
mov	[ebp+4], eax
mov	[esp+9Ch+var_90], ebx
mov	[esp+9Ch+var_94], 0
mov	[esp+9Ch+var_98], edi
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_list_add_icon
mov	[esp+9Ch+var_94], offset strcmp
mov	[esp+9Ch+var_98], ebx
mov	eax, [esp+9Ch+var_58]
mov	[esp+9Ch+var_9C], eax
call	g_list_find_custom
test	eax, eax
jz	short loc_61C7720E
mov	[esp+9Ch+var_98], edi
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_list_add_selected
			
mov	[esp+9Ch+var_9C], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	loc_61C77174
mov	ebp, [esp+9Ch+var_50]
mov	ebx, [esp+9Ch+var_58]
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
test	ebx, ebx
jz	loc_61C76DE6
mov	eax, [ebx]
mov	[esp+9Ch+var_9C], eax
call	g_free
mov	[esp+9Ch+var_98], ebx
mov	[esp+9Ch+var_9C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_61C77244
jmp	loc_61C76DE6
align 4
mov	edi, offset aFixed 
mov	ecx, 6
mov	esi, [esp+9Ch+var_58]
repe cmpsb
jnz	loc_61C76E16
mov	esi, [esp+9Ch+var_50]
test	esi, esi
jnz	loc_61C76BF6
xchg	ax, ax
mov	[esp+9Ch+var_50], ebx
jmp	loc_61C76BF6
align 4
mov	[esp+9Ch+var_58], offset aTextSingle 
jmp	loc_61C76BE2
align 4
mov	edi, ebx
jmp	loc_61C771B4
align 10h
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 3
jmp	loc_61C770F9
align 4
			
xor	esi, esi
mov	eax, offset byte_61C858A8
jmp	loc_61C77036
xor	ebx, ebx
jmp	loc_61C76F1E
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C7746F
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
mov	esi, eax
test	eax, eax
jz	loc_61C774E0
mov	[esp+9Ch+var_98], offset aYes_0	
mov	[esp+9Ch+var_9C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_61C7748D
mov	eax, 1
			
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_bool_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 5
jmp	loc_61C7708A
xor	esi, esi
jmp	loc_61C76F44
call	xmlnode_get_child
test	eax, eax
jz	loc_61C774CE
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
test	eax, eax
jz	loc_61C774CE
mov	[esp+9Ch+var_44], eax
mov	[esp+9Ch+var_90], 0
mov	[esp+9Ch+var_94], eax
mov	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], ebx
call	purple_request_field_string_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
mov	edi, offset aJidSingle 
mov	esi, [esp+9Ch+var_58]
mov	ecx, 0Bh
repe cmpsb
jnz	loc_61C77478
mov	[esp+9Ch+var_98], offset aScreenname 
mov	eax, [esp+9Ch+var_54]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_set_type_hint
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 6
mov	[esp+9Ch+var_98], eax
mov	edx, [esp+9Ch+var_4C]
mov	eax, [edx]
mov	[esp+9Ch+var_9C], eax
call	g_hash_table_replace
mov	edx, [esp+9Ch+var_44]
mov	[esp+9Ch+var_9C], edx
call	g_free
jmp	loc_61C76DE6
mov	[esp+9Ch+var_98], offset aValue_3 
mov	[esp+9Ch+var_9C], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_61C76DE6
mov	[esp+9Ch+var_9C], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	loc_61C76DE6
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+var_9C], offset byte_61C858A8
call	purple_request_field_label_new
mov	[esp+9Ch+var_54], eax
mov	[esp+9Ch+var_98], eax
mov	eax, [esp+9Ch+var_48]
mov	[esp+9Ch+var_9C], eax
call	purple_request_field_group_add_field
mov	[esp+9Ch+var_9C], ebx
call	g_free
jmp	loc_61C76DE6
xor	esi, esi
xor	eax, eax
jmp	loc_61C77322
mov	[esp+9Ch+var_9C], ebx
call	g_strdup
mov	[esp+9Ch+var_94], 1
jmp	loc_61C773F1
mov	[esp+9Ch+var_98], offset aTrue_2 
mov	[esp+9Ch+var_9C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_61C7731D
mov	[esp+9Ch+var_98], offset a1_0 
mov	[esp+9Ch+var_9C], esi
call	g_ascii_strcasecmp
test	eax, eax
setz	al
movzx	eax, al
jmp	loc_61C77322
			
xor	esi, esi
mov	eax, offset byte_61C858A8
jmp	loc_61C76CE8
			
mov	[esp+9Ch+var_44], 0
mov	eax, offset byte_61C858A8
jmp	loc_61C77387
xor	eax, eax
jmp	loc_61C77322
call	__stack_chk_fail
public jabber_x_data_request
			
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_28], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	jabber_x_data_request_with_actions
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C7753E
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public jabber_x_data_get_formtype
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_61C775D4
mov	[esp+2Ch+var_28], offset aField_2 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_61C77582
jmp	short loc_61C775F0
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_61C775F0
mov	[esp+2Ch+var_28], offset aVar_3	
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_attrib
mov	[esp+2Ch+var_28], offset aForm_type_0 
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_61C77574
mov	[esp+2Ch+var_28], offset aValue_3 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_61C775F0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C77603
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	xmlnode_get_data
align 4
mov	[esp+2Ch+var_24], offset aFormNull 
mov	[esp+2Ch+var_28], offset aJabber_x_data_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_61C77603
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
public jabber_win32_uname
push	edi
push	esi
push	ebx
sub	esp, 0D0h
mov	ebx, [esp+0DCh+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+0DCh+var_10], eax
xor	eax, eax
mov	ecx, 64h
mov	edi, ebx
rep stosb
mov	[esp+0DCh+VersionInformation.dwOSVersionInfoSize], 94h
lea	eax, [esp+0DCh+VersionInformation]
mov	[esp+0DCh+lpVersionInformation], eax 
call	GetVersionExA
push	eax
lea	eax, [esp+0DCh+SystemInfo]
mov	[esp+0DCh+lpVersionInformation], eax 
call	GetSystemInfo
push	edx
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aWin32_ 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcpy
mov	eax, [esp+0DCh+VersionInformation.dwPlatformId]
cmp	eax, 1
jz	loc_61C777D0
mov	[esp+0DCh+var_D4], 14h
cmp	eax, 2
jz	loc_61C777B4
mov	[esp+0DCh+Format], offset aWin?? 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcat
mov	esi, 3
			
mov	[esp+0DCh+var_D4], 3
mov	[esp+0DCh+Format], offset aI_1 
lea	eax, [ebx+3Ch]
mov	[esp+0DCh+lpVersionInformation], eax 
call	sprintf
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aI_1 
lea	eax, [ebx+28h]
mov	[esp+0DCh+lpVersionInformation], eax 
call	sprintf
mov	eax, dword ptr [esp+0DCh+SystemInfo.u]
cmp	ax, 1
jz	loc_61C77800
jnb	short loc_61C77730
cmp	esi, 1
jg	loc_61C7787C
mov	eax, [esp+0DCh+SystemInfo.dwProcessorType]
cmp	eax, 1E6h
jz	loc_61C778C8
cmp	eax, 24Ah
jz	loc_61C778C8
cmp	eax, 182h
jz	loc_61C778C8
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aI386	
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
jmp	short loc_61C7775B
align 10h
mov	[esp+0DCh+var_D4], 14h
cmp	ax, 2
jz	loc_61C77820
cmp	ax, 3
jz	short loc_61C7779C
mov	[esp+0DCh+Format], offset aUnknown_1 
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
			
mov	[esp+0DCh+nSize], 13h
lea	eax, [esp+0DCh+nSize]
mov	[esp+0DCh+Format], eax 
add	ebx, 14h
mov	[esp+0DCh+lpVersionInformation], ebx 
call	GetComputerNameA
sub	esp, 8
mov	eax, 1
mov	edx, [esp+0DCh+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_61C778E4
add	esp, 0D0h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+0DCh+Format], offset aPpc 
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
jmp	short loc_61C7775B
align 4
mov	[esp+0DCh+Format], offset aWinnt 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcat
mov	esi, 2
jmp	loc_61C7769C
align 10h
mov	eax, [esp+0DCh+VersionInformation.dwMinorVersion]
test	eax, eax
jz	short loc_61C77838
cmp	eax, 0Ah
jz	short loc_61C77858
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aWin?? 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcat
mov	esi, 3
jmp	loc_61C7769C
align 10h
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aMips	
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
jmp	loc_61C7775B
mov	[esp+0DCh+Format], offset aAlpha 
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
jmp	loc_61C7775B
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aWin95 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcat
xor	esi, esi
jmp	loc_61C7769C
align 4
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aWin98 
mov	[esp+0DCh+lpVersionInformation], ebx
call	g_strlcat
mov	esi, 1
jmp	loc_61C7769C
align 4
cmp	esi, 2
jz	short loc_61C778A4
mov	[esp+0DCh+var_D4], 14h
mov	[esp+0DCh+Format], offset aUnknown_1 
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax
call	g_strlcpy
jmp	loc_61C7775B
align 4
movzx	eax, [esp+0DCh+SystemInfo.wProcessorLevel]
mov	[esp+0DCh+var_D4], eax
mov	[esp+0DCh+Format], offset aID86	
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax 
call	sprintf
jmp	loc_61C7775B
align 4
			
mov	[esp+0DCh+var_D4], eax
mov	[esp+0DCh+Format], offset aILd 
lea	eax, [ebx+50h]
mov	[esp+0DCh+lpVersionInformation], eax 
call	sprintf
jmp	loc_61C7775B
call	__stack_chk_fail
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
jmp	ds:g_direct_equal
align 4
jmp	ds:g_direct_hash
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
jmp	ds:purple_marshal_BOOLEAN__POINTER_POINTER_POINTER
align 4
jmp	ds:purple_marshal_VOID__POINTER
align 4
			
jmp	ds:purple_marshal_VOID__POINTER_POINTER
align 4
jmp	ds:purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER
align 4
			
jmp	ds:purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER
align 4
jmp	ds:purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
public TlsCallback_1
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
test	eax, eax
jz	short loc_61C788A0
cmp	eax, 3
jz	short loc_61C788A0
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
			
mov	edx, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], edx
mov	[esp+1Ch+var_1C], eax
call	sub_61C78EF0
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
public TlsCallback_0
			
push	esi
push	ebx
sub	esp, 14h
cmp	ds:dword_61C98DA0, 2
mov	eax, [esp+1Ch+arg_4]
jz	short loc_61C788EC
mov	ds:dword_61C98DA0, 2
cmp	eax, 2
jz	short loc_61C78903
cmp	eax, 1
jz	short loc_61C78938
			
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	esi, offset dword_61CA3014
sub	esi, offset dword_61CA3014
sar	esi, 2
test	esi, esi
jle	short loc_61C788F6
xor	ebx, ebx
mov	eax, ds:dword_61CA3014[ebx*4]
test	eax, eax
jz	short loc_61C78924
call	eax 
add	ebx, 1
cmp	ebx, esi
jnz	short loc_61C78917
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	eax, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], 1
mov	[esp+1Ch+var_14], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_1C], eax
call	sub_61C78EF0
jmp	short loc_61C788F6
align 10h
xor	eax, eax
retn
align 10h
			
mov	eax, 1
retn	0Ch
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, ds:_iob
lea	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+Count], 17h 
mov	[esp+2Ch+Size],	1 
add	ebx, 40h
mov	[esp+2Ch+File],	ebx 
mov	[esp+2Ch+Str], offset aMingwRuntimeFa 
mov	[esp+2Ch+ArgList], eax
call	fwrite
mov	eax, [esp+2Ch+ArgList]
mov	[esp+2Ch+Str], ebx 
mov	[esp+2Ch+Count], eax 
mov	eax, [esp+2Ch+Format]
mov	[esp+2Ch+Size],	eax 
call	vfprintf
call	abort
align 10h
			
sub	esp, 5Ch
mov	[esp+5Ch+var_10], ebx
mov	ebx, eax
lea	eax, [esp+5Ch+Buffer]
mov	[esp+5Ch+dwLength], 1Ch	
mov	[esp+5Ch+lpBuffer], eax	
mov	[esp+5Ch+lpAddress], ebx 
mov	[esp+5Ch+var_C], esi
mov	esi, edx
mov	[esp+5Ch+var_8], edi
mov	edi, ecx
mov	[esp+5Ch+var_4], ebp
call	VirtualQuery
sub	esp, 0Ch
test	eax, eax
jz	loc_61C78AD6
mov	eax, [esp+5Ch+Buffer.Protect]
cmp	eax, 4
jnz	short loc_61C78A50
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
call	memcpy
			
mov	ebx, [esp+5Ch+var_10]
mov	esi, [esp+5Ch+var_C]
mov	edi, [esp+5Ch+var_8]
mov	ebp, [esp+5Ch+var_4]
add	esp, 5Ch
retn
align 10h
cmp	eax, 40h
jz	short loc_61C78A25
mov	eax, [esp+5Ch+Buffer.RegionSize]
lea	ebp, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], 40h	
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
mov	eax, [esp+5Ch+Buffer.Protect]
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
cmp	eax, 40h
setnz	[esp+5Ch+var_3E]
cmp	eax, 4
setnz	[esp+5Ch+var_3D]
call	memcpy
cmp	[esp+5Ch+var_3D], 0
jz	short loc_61C78A35
cmp	[esp+5Ch+var_3E], 0
jz	short loc_61C78A35
mov	eax, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], eax	
mov	eax, [esp+5Ch+Buffer.RegionSize]
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
jmp	loc_61C78A35
mov	[esp+5Ch+dwLength], ebx
mov	[esp+5Ch+lpBuffer], 1Ch	
mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa 
call	sub_61C78980
align 10h
mov	eax, ds:dword_61C98D98
test	eax, eax
jz	short loc_61C78B00
retn
align 10h
mov	eax, offset dword_61C8A9E4
sub	eax, offset dword_61C85AA0
cmp	eax, 7
mov	ds:dword_61C98D98, 1
jle	short locret_61C78AF9
sub	esp, 2Ch
cmp	eax, 0Bh
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], esi
mov	[esp+2Ch+var_4], edi
jle	loc_61C78C10
mov	esi, ds:dword_61C85AA0
test	esi, esi
jnz	loc_61C78BC4
mov	ebx, ds:dword_61C85AA4
test	ebx, ebx
jnz	short loc_61C78BC4
mov	ecx, ds:dword_61C85AA8
mov	ebx, offset dword_61C85AAC
test	ecx, ecx
jz	loc_61C78C15
mov	ebx, offset dword_61C85AA0
mov	eax, [ebx+8]
cmp	eax, 1
jnz	loc_61C78CB4
			
add	ebx, 0Ch
cmp	ebx, offset dword_61C8A9E4
jnb	loc_61C78BFF
movzx	edx, byte ptr [ebx+8]
mov	esi, [ebx+4]
mov	ecx, [ebx]
cmp	edx, 10h
lea	eax, [esi+61C40000h]
mov	edi, [ecx+61C40000h]
jz	loc_61C78C28
cmp	edx, 20h
jz	loc_61C78C93
cmp	edx, 8
jz	loc_61C78C60
mov	dword ptr [esp+2Ch+var_28], edx	
mov	[esp+2Ch+Format], offset aUnknownPseudoR 
mov	[esp+2Ch+var_14], 0
call	sub_61C78980
			
mov	ebx, offset dword_61C85AA0
			
cmp	ebx, offset dword_61C8A9E4
jnb	short loc_61C78BFF
mov	edx, [ebx+4]
mov	ecx, 4		
lea	eax, [edx+61C40000h]
mov	edx, [edx+61C40000h]
add	edx, [ebx]
add	ebx, 8
mov	[esp+2Ch+Src], edx
lea	edx, [esp+2Ch+Src] 
call	sub_61C789E0
cmp	ebx, offset dword_61C8A9E4
jb	short loc_61C78BD1
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn
align 10h
mov	ebx, offset dword_61C85AA0
mov	edx, [ebx]
test	edx, edx
jnz	short loc_61C78BC9
mov	eax, [ebx+4]
test	eax, eax
jz	loc_61C78B61
jmp	short loc_61C78BC9
movzx	esi, word ptr [esi+61C40000h]
test	si, si
movzx	edx, si
jns	short loc_61C78C3D
or	edx, 0FFFF0000h
sub	edx, ecx
mov	ecx, 2		
sub	edx, 61C40000h
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_61C789E0
jmp	loc_61C78B6D
align 10h
movzx	edx, byte ptr [eax]
test	dl, dl
movzx	esi, dl
jns	short loc_61C78C70
or	esi, 0FFFFFF00h
mov	edx, esi
sub	edx, 61C40000h
sub	edx, ecx
mov	ecx, 1		
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_61C789E0
jmp	loc_61C78B6D
add	ecx, 61C40000h
sub	edi, ecx
mov	ecx, 4		
add	edi, [eax]
lea	edx, [esp+2Ch+var_14] 
mov	[esp+2Ch+var_14], edi
call	sub_61C789E0
jmp	loc_61C78B6D
mov	dword ptr [esp+2Ch+var_28], eax	
mov	[esp+2Ch+Format], offset aUnknownPseud_0 
call	sub_61C78980
align 10h
mov	eax, off_61C7A560
mov	eax, [eax]
test	eax, eax
jz	short locret_61C78CFA
sub	esp, 0Ch
xchg	ax, ax
call	eax
mov	eax, off_61C7A560
lea	edx, [eax+4]
mov	eax, [eax+4]
mov	off_61C7A560, edx
test	eax, eax
jnz	short loc_61C78CE0
add	esp, 0Ch
rep retn
align 10h
push	ebx
sub	esp, 18h
mov	ebx, ds:dword_61C790EC
cmp	ebx, 0FFFFFFFFh
jz	short loc_61C78D33
test	ebx, ebx
jz	short loc_61C78D22
call	ds:dword_61C790EC[ebx*4]
sub	ebx, 1
lea	esi, [esi+0]
jnz	short loc_61C78D13
mov	[esp+1Ch+var_1C], offset loc_61C78CD0
call	sub_61C41160
add	esp, 18h
pop	ebx
retn
xor	ebx, ebx
jmp	short loc_61C78D39
mov	ebx, eax
lea	eax, [ebx+1]
mov	edx, ds:dword_61C790EC[eax*4]
test	edx, edx
jnz	short loc_61C78D37
jmp	short loc_61C78D0F
align 10h
mov	ecx, ds:dword_61C98D9C
test	ecx, ecx
jz	short loc_61C78D60
rep retn
align 10h
mov	ds:dword_61C98D9C, 1
jmp	short loc_61C78D00
align 10h
			
push	esi
push	ebx
sub	esp, 14h
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	EnterCriticalSection
mov	ebx, ds:dword_61C98DC0
sub	esp, 4
test	ebx, ebx
jz	short loc_61C78DBB
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+1Ch+lpCriticalSection], eax 
call	TlsGetValue
sub	esp, 4
mov	esi, eax
call	GetLastError
test	eax, eax
jnz	short loc_61C78DB4
test	esi, esi
jz	short loc_61C78DB4
mov	eax, [ebx+4]
mov	[esp+1Ch+lpCriticalSection], esi
call	eax
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_61C78D90
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	LeaveCriticalSection
sub	esp, 4
add	esp, 14h
pop	ebx
pop	esi
retn
sub	esp, 1Ch
mov	eax, ds:dword_61C98DA4
mov	[esp+18h], esi
xor	esi, esi
mov	[esp+14h], ebx
test	eax, eax
jnz	short loc_61C78DF4
mov	eax, esi
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	dword ptr [esp+4], 0Ch
mov	dword ptr [esp], 1
call	calloc
test	eax, eax
mov	ebx, eax
jz	short loc_61C78E55
mov	eax, [esp+20h]
mov	dword ptr [esp], offset	CriticalSection
mov	[ebx], eax
mov	eax, [esp+24h]
mov	[ebx+4], eax
call	EnterCriticalSection
mov	eax, ds:dword_61C98DC0
mov	ds:dword_61C98DC0, ebx
mov	[ebx+8], eax
sub	esp, 4
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
mov	eax, esi
sub	esp, 4
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	esi, 0FFFFFFFFh
jmp	short loc_61C78DE6
align 10h
push	ebx
sub	esp, 18h
mov	eax, ds:dword_61C98DA4
mov	ebx, [esp+20h]
test	eax, eax
jnz	short loc_61C78E78
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	dword ptr [esp], offset	CriticalSection
call	EnterCriticalSection
mov	edx, ds:dword_61C98DC0
sub	esp, 4
test	edx, edx
jz	short loc_61C78EAF
mov	eax, [edx]
cmp	eax, ebx
jnz	short loc_61C78EA8
jmp	short loc_61C78EE4
align 10h
mov	ecx, [eax]
cmp	ecx, ebx
jz	short loc_61C78EC5
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_61C78EA0
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	ecx, [eax+8]
mov	[edx+8], ecx
mov	[esp], eax
call	free
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
jmp	short loc_61C78EBE
mov	eax, [edx+8]
mov	ds:dword_61C98DC0, eax
mov	eax, edx
jmp	short loc_61C78ECB
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
cmp	eax, 1
jz	short loc_61C78F40
jb	short loc_61C78F10
cmp	eax, 3
jz	short loc_61C78F60
			
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_61C98DA4
test	eax, eax
jnz	short loc_61C78F81
mov	eax, ds:dword_61C98DA4
cmp	eax, 1
jnz	short loc_61C78F03
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
mov	ds:dword_61C98DA4, 0
call	DeleteCriticalSection
sub	esp, 4
jmp	short loc_61C78F03
align 10h
mov	eax, ds:dword_61C98DA4
test	eax, eax
jz	short loc_61C78F70
mov	ds:dword_61C98DA4, 1
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_61C98DA4
test	eax, eax
jz	short loc_61C78F03
call	sub_61C78D70
jmp	short loc_61C78F03
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	InitializeCriticalSection
sub	esp, 4
jmp	short loc_61C78F49
call	sub_61C78D70
jmp	short loc_61C78F19
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
align 4
align 10h
push	ebp
mov	ebp, esp
sub	esp, 18h
call	sub_61C411C0
mov	[esp+18h+var_18], offset sub_61C4124C
call	sub_61C41160
leave
retn
align 4
			
dd offset sub_61C790D0
align 8
dd 0FFFFFFFFh
dd 380h	dup(?)
assume cs:_data

dd offset asc_61C7B7B8	
dd offset loc_61C44244
dd offset sub_61C43698
dd offset sub_61C43544
dd offset loc_61C44124
dd 0
dd offset aDigestMd5_0	
dd offset sub_61C44410
dd offset sub_61C449C4
dd 2 dup(0)
dd offset sub_61C443D4
dd offset aPlain	
dd offset sub_61C45040
dd 4 dup(0)
dd offset aScramSha1	
dd offset sub_61C45258
dd offset sub_61C4607C
dd offset sub_61C45EEC
align 10h
dd offset sub_61C463C0
align 10h
			
dd offset aPassword_3	
dd offset aName_9	
dd offset aEmail_2	
dd offset aNick_1	
dd offset aFirst_0	
dd offset aLast_0	
dd offset aAddress_1	
dd offset aCity		
dd offset aState_1	
dd offset aZip		
dd offset aPhone	
dd offset aUrl_3	
dd offset aDate		
align 10h
dd offset sub_61C6C760
dd 9 dup(0)
align 4
dd offset loc_61C6C308
dd offset loc_61C6C280
dd offset loc_61C6C1CC
			
align 20h
			
			
dd offset aAfraid_0	
dd 0
			
dd offset aAmazed_0	
align 8
dd offset aAmorous	
dd offset aAmorous_0	
dd 0
dd offset aAngry	
dd offset aAngry_0	
align 10h
dd offset aAnnoyed	
dd offset aAnnoyed_0	
dd 0
dd offset aAnxious	
dd offset aAnxious_0	
align 8
dd offset aAroused	
dd offset aAroused_0	
dd 0
dd offset aAshamed	
dd offset aAshamed_0	
align 10h
dd offset aBored	
dd offset aBored_0	
dd 0
dd offset aBrave	
dd offset aBrave_0	
align 8
dd offset aCalm		
dd offset aCalm_0	
dd 0
dd offset aCautious	
dd offset aCautious_0	
align 10h
dd offset aCold		
dd offset aCold_0	
dd 0
dd offset aConfident	
dd offset aConfident_0	
align 8
dd offset aConfused	
dd offset aConfused_0	
dd 0
dd offset aContemplative 
dd offset aContemplativ_0 
align 10h
dd offset aContented	
dd offset aContented_0	
dd 0
dd offset aCranky	
dd offset aCranky_0	
align 8
dd offset aCrazy	
dd offset aCrazy_0	
dd 0
dd offset aCreative	
dd offset aCreative_0	
align 10h
dd offset aCurious	
dd offset aCurious_0	
dd 0
dd offset aDejected	
dd offset aDejected_0	
align 8
dd offset aDepressed	
dd offset aDepressed_0	
dd 0
dd offset aDisappointed	
dd offset aDisappointed_0 
align 10h
dd offset aDisgusted	
dd offset aDisgusted_0	
dd 0
dd offset aDismayed	
dd offset aDismayed_0	
align 8
dd offset aDistracted	
dd offset aDistracted_0	
dd 0
dd offset aEmbarrassed	
dd offset aEmbarrassed_0 
dd 0
dd offset aEnvious	
dd offset aEnvious_0	
dd 0
dd offset aExcited	
dd offset aExcited_0	
align 8
dd offset aFlirtatious	
dd offset aFlirtatious_0 
dd 0
dd offset aFrustrated	
dd offset aFrustrated_0	
align 10h
dd offset aGrateful	
dd offset aGrateful_0	
dd 0
dd offset aGrieving	
dd offset aGrieving_0	
align 8
dd offset aGrumpy	
dd offset aGrumpy_0	
dd 0
dd offset aGuilty	
dd offset aGuilty_0	
align 10h
dd offset aHappy	
dd offset aHappy_0	
dd 0
dd offset aHopeful	
dd offset aHopeful_0	
align 8
dd offset aHot		
dd offset aHot_0	
dd 0
dd offset aHumbled	
dd offset aHumbled_0	
align 10h
dd offset aHumiliated	
dd offset aHumiliated_0	
dd 0
dd offset aHungry	
dd offset aHungry_0	
align 8
dd offset aHurt		
dd offset aHurt_0	
dd 0
dd offset aImpressed	
dd offset aImpressed_0	
align 10h
dd offset aIn_awe	
dd offset aInAwe	
dd 0
dd offset aIn_love	
dd offset aInLove	
align 8
dd offset aIndignant	
dd offset aIndignant_0	
dd 0
dd offset aInterested	
dd offset aInterested_0	
align 10h
dd offset aIntoxicated	
dd offset aIntoxicated_0 
dd 0
dd offset aInvincible	
dd offset aInvincible_0	
align 8
dd offset aJealous	
dd offset aJealous_0	
dd 0
dd offset aLonely	
dd offset aLonely_0	
align 10h
dd offset aLost		
dd offset aLost_0	
dd 0
dd offset aLucky	
dd offset aLucky_0	
align 8
dd offset aMean		
dd offset aMean_0	
dd 0
dd offset aMoody	
dd offset aMoody_0	
align 10h
dd offset aNervous	
dd offset aNervous_0	
dd 0
dd offset aNeutral	
dd offset aNeutral_0	
align 8
dd offset aOffended	
dd offset aOffended_0	
dd 0
dd offset aOutraged	
dd offset aOutraged_0	
align 10h
dd offset aPlayful	
dd offset aPlayful_0	
dd 0
dd offset aProud	
dd offset aProud_0	
align 8
dd offset aRelaxed	
dd offset aRelaxed_0	
dd 0
dd offset aRelieved	
dd offset aRelieved_0	
align 10h
dd offset aRemorseful	
dd offset aRemorseful_0	
dd 0
dd offset aRestless	
dd offset aRestless_0	
align 8
dd offset aSad		
dd offset aSad_0	
dd 0
dd offset aSarcastic	
dd offset aSarcastic_0	
align 10h
dd offset aSatisfied	
dd offset aSatisfied_0	
dd 0
dd offset aSerious	
dd offset aSerious_0	
align 8
dd offset aShocked	
dd offset aShocked_0	
dd 0
dd offset aShy		
dd offset aShy_0	
align 10h
dd offset aSick		
dd offset aSick_0	
dd 0
dd offset aSleepy	
dd offset aSleepy_0	
align 8
dd offset aSpontaneous	
dd offset aSpontaneous_0 
dd 0
dd offset aStressed	
dd offset aStressed_0	
align 10h
dd offset aStrong	
dd offset aStrong_0	
dd 0
dd offset aSurprised	
dd offset aSurprised_0	
align 8
dd offset aThankful	
dd offset aThankful_0	
dd 0
dd offset aThirsty	
dd offset aThirsty_0	
align 10h
dd offset aTired	
dd offset aTired_0	
dd 0
dd offset aUndefined	
dd offset aUndefined_0	
align 8
dd offset aWeak		
dd offset aWeak_0	
dd 0
dd offset aWorried	
dd offset aWorried_0	
align 20h
			
			
align 1000h
assume cs:_rdata

			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
align 4
			
			
			
			
			
			
			
			
align 4
			
db 'on.  Allow this and continue authentication?',0
			
			
align 4
			
			
			
db 'am',0
			
			
align 4
			
align 4
			
align 10h
			
			
			
align 10h
			
align 4
			
align 4
			
db 'tream',0
			
			
			
			
			
align 10h
			
db 'ction.  Allow this and continue authentication?',0
			
			
align 4
			
			
			
align 4
align 4
dd offset loc_61C43AB9	
dd offset loc_61C43AB9
dd offset loc_61C43BCC
dd offset loc_61C43AB9
dd offset loc_61C43C18
dd offset loc_61C43AB9
dd offset loc_61C43AF9
dd offset loc_61C43AF9
align 10h
			
align 10h
			
align 4
align 4
			
			
			
			
			
			
			
			
			
			
			
			
db 'am',0
			
align 4
			
align 4
			
			
align 4
			
db 'on.  Allow this and continue authentication?',0
			
			
			
			
align 10h
			
			
align 4
			
			
			
			
			
			
			
			
db 0
			
			
			
			
			
			
			
			
align 4
			
dd offset aSha1_10	
dd 14h
align 20h
			
align 4
			
			
			
			
			
db 0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
align 10h
			
db 't to continue?',0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
align 10h
			
			
align 10h
			
db 'ch you feel comfortable.',0
			
			
			
align 4
			
			
align 10h
			
			
			
align 4
			
db 'o corresponding JabberBuddyResource!',0Ah,0
align 4
			
align 4
public vcard_tag_attr_list
			
			
dd offset aHandgenNonsgml 
dd offset aVersion	
dd offset a2_0_0	
dd offset aXmlns	
dd offset aVcardTemp	
align 10h
			
public vcard_template_data
			
			
dd offset aFn		
dd 0
dd offset aFamilyName	
dd offset aFamily	
dd offset Str2		
dd offset aGivenName	
dd offset aGiven	
dd offset Str2		
dd offset aNickname	
dd offset aNickname_0	
align 10h
dd offset dword_61C7C6E0
dd offset dword_61C7C6E0
dd 0
dd offset aStreetAddress 
dd offset aStreet	
dd offset aAdr		
dd offset aExtendedAddres 
dd offset aExtadd	
dd offset aAdr		
dd offset aLocality_0	
dd offset aLocality	
dd offset aAdr		
dd offset aRegion_0	
dd offset aRegion	
dd offset aAdr		
dd offset aPostalCode	
dd offset aPcode	
dd offset aAdr		
dd offset aCountry_0	
dd offset aCtry		
dd offset aAdr		
dd offset aTelephone	
dd offset aNumber	
dd offset aTel		
dd offset aEmail_0	
dd offset aUserid	
dd offset aEmail_1	
dd offset aOrganizationNa 
dd offset aOrgname	
dd offset aOrg		
dd offset aOrganizationUn 
dd offset aOrgunit	
dd offset aOrg		
dd offset aJobTitle	
dd offset aTitle	
align 10h
dd offset aRole_0	
dd offset aRole		
dd 0
dd offset aBirthday	
dd offset aBday		
align 8
dd offset aDescription	
dd offset aDesc		
dd 0
dd offset byte_61C7C0EF
dd offset Str2		
align 10h
dd offset byte_61C7C0EF
dd offset aAdr		
dd 0
dd offset byte_61C7C0EF
dd offset aOrg		
dd 4 dup(0)
align 4
dd 2 dup(1), 3,	4, 3
dd 2 dup(1), 3,	4, 3
align 20h
			
			
			
			
align 4
align 4
			
align 4
db 'Host: %s',0Dh,0Ah
db 'User-Agent: %s',0Dh,0Ah
db 'Content-Encoding: text/xml
db 'Content-Length: %u',0Dh,0Ah
db 0Dh,0Ah
db '%s',0
align 4
			
align 4
			
align 4
			
align 10h
			
align 4
			
			
align 4
			
db 'ding)',0Ah,0
			
align 4
align 10h
			
align 10h
			
align 10h
			
align 4
			
align 4
			
align 4
align 4
			
align 10h
			
db '02x.',0Ah,0
align 4
			
db 'n',27h,' xmlns=',27h,'http://jabber.org/protocol/httpbind',27h,' xmlns:xmp'
db 'p=',27h,'urn:xmpp:xbosh',27h,0
			
			
			
			
align 4
			
align 4
			
db 'to=',27h,'%s',27h,' xml:lang=',27h,'en',27h,' xmpp:version=',27h,'1.0',27h,' ver=',27h
db '1.6',27h,' xmlns:xmpp=',27h,'urn:xmpp:xbosh',27h,' rid=',27h,'%I64u',27h,' wait='
db 27h,'60',27h,' hold=',27h,'1',27h,' xmlns=',27h,'http://jabber.org/protocol/httpb'
db 'ind',27h,'/>',0
			
db 'Content-Length:',0
db 'Connection:',0
db 0Dh,0Ah,0
			
align 4
			
db 'response.',0Ah,0
			
align 10h
			
align 4
			
			
align 4
			
			
align 4
			
align 10h
			
align 10h
align 20h
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
db ' darkrain42 and save your debug log.',0Ah
db 'JabberCapsClientInfo = %p',0Ah,0
align 4
align 10h
			
			
align 4
			
align 4
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
db '%s %s',0
			
			
align 10h
			
			
			
align 4
			
db 's',0
align 4
			
			
			
			
			
			
			
align 4
			
align 4
			
			
			
			
align 10h
			
align 4
			
			
align 4
			
			
align 4
			
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 10h
			
			
db ' alt = %s, cid = %s',0Ah,0
align 10h
			
align 4
			
			
align 10h
			
align 10h
			
align 4
			
align 10h
			
align 4
			
			
			
			
align 4
			
			
			
			
align 4
			
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
			
align 10h
			
			
			
			
			
align 4
			
db 'port=',27h,'%d',27h,' zeroconf=',27h,'%s',27h,0Ah,0
			
align 4
align 4
			
			
align 4
			
			
align 10h
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
align 4
align 4
			
			
			
			
			
			
align 4
align 4
align 4
			
			
align 10h
			
			
align 4
db '%s',0Ah,0
			
db 'Host: %s',0Dh,0Ah
db 'X-Talk-Google-Relay-Auth: %s',0Dh,0Ah
db 'X-Google-Relay-Auth: %s',0Dh,0Ah
db 0Dh,0Ah,0
align 4
			
align 4
			
align 4
align 4
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
			
			
align 10h
			
db 'ned',0Ah,0
align 4
			
db 0
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
db 65h,	74h, 0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
align 4
			
align 4
			
align 4
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
align 4
align 4
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
			
align 4
			
			
			
db 'to connect directly.',0Ah,0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 10h
			
align 4
			
			
			
			
			
db 'o receive buzzes now.',0
			
			
			
			
			
			
db 'stration.',0
align 4
			
db 't.',0
			
			
align 10h
			
			
align 4
			
			
			
			
align 4
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
db 'ream=',27h,'http://etherx.jabber.org/streams',27h,' version=',27h,'1.0',27h,'>'
db 0
			
			
			
			
			
dd offset loc_61C5DA64	
dd offset loc_61C5DAA4
dd offset loc_61C5DB00
dd offset loc_61C5DB38
dd offset loc_61C5D9C4
dd offset loc_61C5DA20
			
			
			
			
			
			
			
db 'cting directly.',0Ah,0
align 4
			
db 'onnection methods, like BOSH.',0Ah,0
			
			
align 4
			
			
align 4
			
			
align 10h
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 10h
align 4
			
align 4
			
			
align 4
			
			
			
			
align 4
			
align 4
			
			
			
align 10h
			
			
			
			
			
			
align 10h
			
align 4
			
align 4
			
			
			
			
align 10h
			
			
			
			
align 4
			
align 4
			
align 4
			
align 4
align 4
			
align 10h
			
align 4
			
			
align 4
			
align 4
			
			
align 4
			
align 4
			
			
			
align 4
			
db ' ...: Get the users with an affiliation or set users',27h,' affiliat'
db 'ion with the room.',0
			
db '..: Get the users with a role or set users',27h,' role with the room'
db '.',0
align 4
			
align 10h
			
align 4
			
align 4
			
db 'her user.',0
align 4
			
			
align 4
			
align 4
			
			
align 4
			
			
			
			
align 10h
			
			
dd offset aNick_1	
dd offset aNickname_1	
dd offset aFirst_0	
dd offset aFirstName_0	
dd offset aLast_0	
dd offset aLastName_0	
dd offset aAddress_1	
dd offset aAddress_2	
dd offset aCity		
dd offset aCity_0	
dd offset aState_1	
dd offset aState_2	
dd offset aZip		
dd offset aPostalCode_0	
dd offset aPhone	
dd offset aPhone_0	
dd offset aUrl_3	
dd offset aUrl_4	
dd offset aDate		
dd offset aDate_0	
align 10h
align 10h
align 20h
			
align 20h
			
			
			
			
			
			
align 10h
			
align 4
			
align 10h
align 4
			
			
align 4
			
align 10h
			
			
dd offset aContentAccept 
dd offset loc_61C636E0
dd offset aContentAdd	
dd offset loc_61C63620
dd offset aContentModify 
dd offset loc_61C634D4
dd offset aContentReject 
dd offset loc_61C63438
dd offset aContentRemove 
dd offset loc_61C6339C
dd offset aDescriptionInf 
dd offset loc_61C632A0
dd offset aSecurityInfo	
dd offset loc_61C62D18
dd offset aSessionAccept 
dd offset loc_61C631A4
dd offset aSessionInfo	
dd offset loc_61C62CD8
dd offset aSessionInitiat 
dd offset loc_61C630C8
dd offset aSessionTermina 
dd offset loc_61C63068
dd offset aTransportAccep 
dd offset loc_61C62FC4
dd offset aTransportInfo 
dd offset loc_61C62ED0
dd offset aTransportRejec 
dd offset loc_61C62E2C
dd offset aTransportRepla 
dd offset loc_61C62D58
			
			
align 4
			
			
align 10h
			
			
			
			
align 4
			
			
			
			
			
			
			
dd offset loc_61C63F24	
dd offset loc_61C63F10
dd offset loc_61C63EFC
dd offset loc_61C63EE8
dd offset loc_61C63EBC
dd offset loc_61C63EA4
dd offset loc_61C63E78
align 4
dd offset loc_61C64174	
dd offset loc_61C64148
dd offset loc_61C6411C
dd offset loc_61C640F0
dd offset loc_61C640C4
dd offset loc_61C64098
dd offset loc_61C6406C
			
			
			
			
			
			
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_61C63A98
dd 2 dup(0)
dd 10h
dd offset sub_61C63D1C
dd 0
			
			
			
			
align 20h
align 4
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
align 4
dd 2 dup(0)
dd offset sub_61C64BDC
dd 2 dup(0)
dd 14h
dd offset sub_61C65034
dd 0
align 10h
align 4
			
align 4
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_61C65AC4
dd 2 dup(0)
dd 14h
dd offset sub_61C65DDC
dd 0
align 10h
			
			
			
			
			
align 4
			
align 10h
			
			
			
			
align 4
			
			
			
			
			
align 4
			
			
			
			
dd offset loc_61C66AB4	
dd offset loc_61C66A9C
dd offset loc_61C66A88
dd offset loc_61C66A60
dd offset loc_61C66A48
dd offset loc_61C66A1C
dd offset loc_61C66A04
dd offset loc_61C669D8
align 4
dd offset loc_61C66CA4	
dd offset loc_61C66C90
dd offset loc_61C66C64
dd offset loc_61C66C38
dd offset loc_61C66C28
dd offset loc_61C66C18
dd offset loc_61C66C08
dd offset loc_61C66BF8
			
align 10h
			
align 4
			
			
			
			
			
align 10h
			
align 20h
align 4
dd 2 dup(0)
dd offset sub_61C665E0
dd 2 dup(0)
dd 10h
dd offset sub_61C6687C
dd 0
align 10h
			
			
align 4
			
			
			
			
align 20h
align 4
dd 2 dup(0)
dd offset sub_61C67B88
dd 2 dup(0)
dd 10h
dd offset sub_61C67C98
dd 0
			
align 10h
			
			
			
			
			
align 10h
			
			
			
align 4
			
align 4
			
			
			
align 10h
			
			
			
			
			
dd offset aAvailable	
align 8
dd offset aAvailable_0	
dd 1
dd offset aFreeforchat	
dd offset aChat_0	
dd offset aChatty_0	
dd 2
dd offset aAway		
dd offset aAway		
dd offset aAway_0	
dd 3
dd offset aExtended_away 
dd offset aXa		
dd offset aExtendedAway	
dd 4
dd offset aDnd		
dd offset aDnd		
dd offset aDoNotDisturb_0 
dd 5
dd offset aError_11	
align 8
dd offset aError_12	
dd 0FFFFFFFFh
			
			
			
align 20h
			
			
			
			
			
			
			
align 4
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
align 10h
			
			
			
			
			
			
			
			
align 4
			
			
			
align 4
			
align 10h
			
align 4
			
			
			
			
			
			
align 4
			
			
align 10h
dd offset loc_61C6A047	
dd offset loc_61C6A220
dd offset loc_61C6A3B0
dd offset loc_61C6A2F2
dd offset loc_61C6A507
dd offset loc_61C6A4F6
dd offset loc_61C6A02B
			
dd offset loc_61C6B4F0	
dd offset loc_61C6B508
dd offset loc_61C6B520
dd offset loc_61C6B400
dd offset loc_61C6B4D8
			
db 9,'msg=',27h,'%s',27h,0Ah,0
			
			
db 'ns=',27h,'http://www.w3.org/1999/xhtml',27h,'><p>%s</p></body></html>',0
align 4
			
dd offset aChat		
dd offset aGroupchat	
dd offset aHeadline_0	
dd offset aError_6	
dd offset aChat		
			
align 4
db 'Host: %s',0Dh,0Ah
db 0Dh,0Ah,0
db 0Dh,0Ah,0
			
			
align 4
			
			
align 4
			
db 'i: %s',0
			
			
align 4
			
			
align 10h
align 10h
			
align 4
			
db 'but intended to be a MUST
align 4
			
			
align 4
			
align 10h
			
align 4
			
			
			
			
align 10h
			
			
align 4
			
			
			
			
align 20h
			
			
			
			
align 4
			
			
align 10h
			
			
			
			
			
			
			
			
			
align 10h
			
			
db 'le',27h,')',0Ah,0
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
db 'accept the default settings?',0
			
			
align 4
			
			
align 10h
			
			
			
			
align 10h
			
			
			
			
			
align 4
			
			
align 10h
			
dd offset aProbe_0	
dd 0FFFFFFFFh
dd offset aUnavailable_0 
dd 1
dd offset aSubscribe_1	
dd 2
dd offset aSubscribed	
dd 3
dd offset aUnsubscribe_1 
dd 4
dd offset aUnsubscribed_0 
dd 5, 2	dup(0)
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
align 10h
			
align 10h
			
			
db 'ng the buddy. Buddies can only be added by real (non-MUC) JID',0Ah,0
			
			
align 4
			
			
			
align 4
			
align 4
			
align 10h
			
db 'ocal list',0Ah,0
align 4
			
align 4
			
			
align 4
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
align 4
			
			
			
			
align 4
			
			
			
			
align 4
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
			
			
			
			
align 4
			
align 4
			
db 'a file',0
			
align 4
			
align 4
align 4
			
align 4
			
			
align 4
			
			
			
			
db ' start file transfer.',0Ah,0
			
align 4
			
align 4
			
db 0Ah,0
			
align 4
			
db '0x%x]).',0Ah,0
align 4
			
db ' got ',27h,'%.40s',27h,').',0Ah,0
align 4
			
			
			
			
			
			
			
			
			
align 10h
			
db ' jsx->streamhosts %p and sh->jid %p',0Ah,0
align 4
			
align 4
			
align 4
			
db 'ng IBB',0Ah,0
			
align 4
			
			
align 4
			
align 10h
			
align 4
			
align 4
			
align 10h
			
db 'amhosts is %p and jid is %s',0Ah,0
align 10h
			
align 4
			
align 4
			
db 'et',0Ah,0
align 4
			
db ' up yet, cancel transfer',0
align 10h
			
db '.',0
			
			
align 4
			
align 10h
			
			
			
			
			
			
			
align 4
			
			
			
align 10h
			
			
align 4
			
			
			
			
			
			
align 4
			
align 4
			
align 4
			
			
			
align 4
			
			
			
			
			
db ' so choose something appropriate.',0
align 4
align 10h
			
align 4
			
			
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
			
			
			
			
align 10h
dd offset loc_61C766FC	
dd offset loc_61C768E0
dd offset loc_61C76844
dd offset loc_61C76844
dd offset loc_61C7698C
dd offset loc_61C766FC
			
			
			
			
			
			
align 10h
			
			
			
align 4
			
align 4
			
align 10h
			
align 4
dd 3C938B64h
			
			
dd 20h,	5E24Ch,	14A3h, 20h, 5E24Ch, 155Ah, 20h,	5E24Ch
dd 1572h, 20h, 5E24Ch, 162Ah, 20h, 5E24Ch, 16F8h, 20h
dd 5E24Ch, 1836h, 20h, 5E24Ch, 18ACh, 20h, 5E24Ch, 19CCh
dd 20h,	5E24Ch,	1A01h, 20h, 5E24Ch, 1A2Dh, 20h,	5E24Ch
dd 1A56h, 20h, 5E24Ch, 1BB6h, 20h, 5E24Ch, 1BE7h, 20h
dd 5E24Ch, 1C40h, 20h, 5E24Ch, 1C56h, 20h, 5E24Ch, 1C87h
dd 20h,	5E24Ch,	1CADh, 20h, 5E24Ch, 1CCEh, 20h,	5E24Ch
dd 1CF3h, 20h, 5E24Ch, 1D87h, 20h, 5E24Ch, 1DAFh, 20h
dd 5E24Ch, 1E5Ah, 20h, 5E24Ch, 1E7Dh, 20h, 5E24Ch, 1EA6h
dd 20h,	5E24Ch,	1EC6h, 20h, 5E24Ch, 1EE3h, 20h,	5E24Ch
dd 1F06h, 20h, 5E24Ch, 1F3Ch, 20h, 5E24Ch, 2059h, 20h
dd 5E24Ch, 2070h, 20h, 5E24Ch, 2094h, 20h, 5E24Ch, 20B5h
dd 20h,	5E24Ch,	2198h, 20h, 5E24Ch, 21CCh, 20h,	5E24Ch
dd 21F5h, 20h, 5E24Ch, 2692h, 20h, 5E24Ch, 26D4h, 20h
dd 5E24Ch, 26F1h, 20h, 5E24Ch, 2729h, 20h, 5E24Ch, 2750h
dd 20h,	5E24Ch,	27F1h, 20h, 5E24Ch, 2852h, 20h,	5E24Ch
dd 289Ah, 20h, 5E24Ch, 28BDh, 20h, 5E24Ch, 28ECh, 20h
dd 5E24Ch, 2AF7h, 20h, 5E24Ch, 2BC4h, 20h, 5E24Ch, 2C61h
dd 20h,	5E24Ch,	2C76h, 20h, 5E24Ch, 2CC4h, 20h,	5E24Ch
dd 2D40h, 20h, 5E24Ch, 2DAAh, 20h, 5E24Ch, 2DE2h, 20h
dd 5E24Ch, 2E7Ch, 20h, 5E24Ch, 2F22h, 20h, 5E24Ch, 2FA7h
dd 20h,	5E24Ch,	3052h, 20h, 5E24Ch, 30C4h, 20h,	5E24Ch
dd 315Ch, 20h, 5E24Ch, 318Eh, 20h, 5E24Ch, 31A4h, 20h
dd 5E24Ch, 31CEh, 20h, 5E24Ch, 31E6h, 20h, 5E24Ch, 3248h
dd 20h,	5E24Ch,	3260h, 20h, 5E24Ch, 3287h, 20h,	5E24Ch
dd 32A5h, 20h, 5E24Ch, 32CDh, 20h, 5E24Ch, 32EEh, 20h
dd 5E24Ch, 3330h, 20h, 5E24Ch, 334Dh, 20h, 5E24Ch, 3395h
dd 20h,	5E24Ch,	33AFh, 20h, 5E24Ch, 3450h, 20h,	5E24Ch
dd 34A8h, 20h, 5E24Ch, 351Fh, 20h, 5E24Ch, 3559h, 20h
dd 5E24Ch, 35C7h, 20h, 5E24Ch, 36B0h, 20h, 5E24Ch, 3763h
dd 20h,	5E24Ch,	38A8h, 20h, 5E24Ch, 38CBh, 20h,	5E24Ch
dd 391Ah, 20h, 5E24Ch, 398Fh, 20h, 5E24Ch, 39D9h, 20h
dd 5E24Ch, 3BACh, 20h, 5E24Ch, 3EC7h, 20h, 5E24Ch, 3F19h
dd 20h,	5E24Ch,	3F5Dh, 20h, 5E24Ch, 3F99h, 20h,	5E24Ch
dd 3FC4h, 20h, 5E24Ch, 4047h, 20h, 5E24Ch, 40AEh, 20h
dd 5E24Ch, 40E1h, 20h, 5E24Ch, 4112h, 20h, 5E24Ch, 4137h
dd 20h,	5E24Ch,	41E3h, 20h, 5E24Ch, 4221h, 20h,	5E24Ch
dd 4260h, 20h, 5E24Ch, 434Eh, 20h, 5E24Ch, 43B0h, 20h
dd 5E24Ch, 43C5h, 20h, 5E24Ch, 43DDh, 20h, 5E24Ch, 43FFh
dd 20h,	5E24Ch,	441Ah, 20h, 5E24Ch, 4467h, 20h,	5E24Ch
dd 44A5h, 20h, 5E24Ch, 47AAh, 20h, 5E24Ch, 4848h, 20h
dd 5E24Ch, 4973h, 20h, 5E24Ch, 49DDh, 20h, 5E24Ch, 4AFAh
dd 20h,	5E24Ch,	4E30h, 20h, 5E24Ch, 4E45h, 20h,	5E24Ch
dd 4E5Eh, 20h, 5E24Ch, 4EA0h, 20h, 5E24Ch, 4EC0h, 20h
dd 5E24Ch, 4FECh, 20h, 5E24Ch, 5056h, 20h, 5E24Ch, 50AAh
dd 20h,	5E24Ch,	51C2h, 20h, 5E24Ch, 5215h, 20h,	5E24Ch
dd 5234h, 20h, 5E24Ch, 5249h, 20h, 5E24Ch, 5274h, 20h
dd 5E24Ch, 54B3h, 20h, 5E24Ch, 554Ah, 20h, 5E24Ch, 55E0h
dd 20h,	5E24Ch,	561Ch, 20h, 5E24Ch, 569Ah, 20h,	5E24Ch
dd 58E4h, 20h, 5E24Ch, 5AD7h, 20h, 5E24Ch, 5B08h, 20h
dd 5E24Ch, 5B78h, 20h, 5E24Ch, 5EF8h, 20h, 5E24Ch, 5FC7h
dd 20h,	5E24Ch,	6094h, 20h, 5E24Ch, 61FCh, 20h,	5E24Ch
dd 6322h, 20h, 5E24Ch, 63A6h, 20h, 5E24Ch, 63C9h, 20h
dd 5E24Ch, 63EFh, 20h, 5E24Ch, 6404h, 20h, 5E24Ch, 6423h
dd 20h,	5E24Ch,	643Dh, 20h, 5E24Ch, 6458h, 20h,	5E24Ch
dd 6479h, 20h, 5E24Ch, 6489h, 20h, 5E24Ch, 64C5h, 20h
dd 5E24Ch, 652Ah, 20h, 5E24Ch, 65DDh, 20h, 5E24Ch, 6602h
dd 20h,	5E24Ch,	68EEh, 20h, 5E24Ch, 6970h, 20h,	5E24Ch
dd 6AE5h, 20h, 5E24Ch, 6B14h, 20h, 5E24Ch, 6D78h, 20h
dd 5E24Ch, 700Eh, 20h, 5E24Ch, 7058h, 20h, 5E24Ch, 7084h
dd 20h,	5E24Ch,	712Ch, 20h, 5E24Ch, 7152h, 20h,	5E24Ch
dd 7198h, 20h, 5E24Ch, 71BBh, 20h, 5E24Ch, 71F4h, 20h
dd 5E24Ch, 72F4h, 20h, 5E24Ch, 7321h, 20h, 5E24Ch, 7331h
dd 20h,	5E24Ch,	7353h, 20h, 5E24Ch, 73A6h, 20h,	5E24Ch
dd 73C1h, 20h, 5E24Ch, 73D5h, 20h, 5E24Ch, 73F0h, 20h
dd 5E24Ch, 740Ch, 20h, 5E24Ch, 744Ah, 20h, 5E24Ch, 7504h
dd 20h,	5E24Ch,	7614h, 20h, 5E24Ch, 7638h, 20h,	5E24Ch
dd 771Ch, 20h, 5E24Ch, 775Ah, 20h, 5E24Ch, 777Ch, 20h
dd 5E24Ch, 782Eh, 20h, 5E24Ch, 78D3h, 20h, 5E24Ch, 794Fh
dd 20h,	5E24Ch,	797Bh, 20h, 5E24Ch, 7998h, 20h,	5E24Ch
dd 7A16h, 20h, 5E24Ch, 7A3Bh, 20h, 5E24Ch, 7A58h, 20h
dd 5E24Ch, 7B32h, 20h, 5E24Ch, 7B6Bh, 20h, 5E24Ch, 7BC2h
dd 20h,	5E24Ch,	7BFBh, 20h, 5E24Ch, 7C56h, 20h,	5E24Ch
dd 7CADh, 20h, 5E24Ch, 7CCFh, 20h, 5E24Ch, 7FB9h, 20h
dd 5E24Ch, 8069h, 20h, 5E24Ch, 809Bh, 20h, 5E24Ch, 80D2h
dd 20h,	5E24Ch,	80F8h, 20h, 5E24Ch, 8140h, 20h,	5E24Ch
dd 8198h, 20h, 5E24Ch, 8263h, 20h, 5E24Ch, 82A2h, 20h
dd 5E24Ch, 82DBh, 20h, 5E24Ch, 8310h, 20h, 5E24Ch, 833Ah
dd 20h,	5E24Ch,	8373h, 20h, 5E24Ch, 83A8h, 20h,	5E24Ch
dd 83D4h, 20h, 5E24Ch, 8416h, 20h, 5E24Ch, 843Eh, 20h
dd 5E24Ch, 8455h, 20h, 5E24Ch, 8542h, 20h, 5E24Ch, 870Eh
dd 20h,	5E24Ch,	877Bh, 20h, 5E24Ch, 87A3h, 20h,	5E24Ch
dd 87CBh, 20h, 5E24Ch, 88A2h, 20h, 5E24Ch, 8AD5h, 20h
dd 5E24Ch, 9270h, 20h, 5E24Ch, 92C7h, 20h, 5E24Ch, 9420h
dd 20h,	5E24Ch,	9462h, 20h, 5E24Ch, 9638h, 20h,	5E24Ch
dd 9677h, 20h, 5E24Ch, 9696h, 20h, 5E24Ch, 9762h, 20h
dd 5E24Ch, 979Ch, 20h, 5E24Ch, 980Ch, 20h, 5E24Ch, 9850h
dd 20h,	5E24Ch,	9878h, 20h, 5E24Ch, 988Eh, 20h,	5E24Ch
dd 98B0h, 20h, 5E24Ch, 9A6Eh, 20h, 5E24Ch, 9AB2h, 20h
dd 5E24Ch, 9B50h, 20h, 5E24Ch, 9C73h, 20h, 5E24Ch, 9D79h
dd 20h,	5E24Ch,	9DB7h, 20h, 5E24Ch, 9DD7h, 20h,	5E24Ch
dd 9E08h, 20h, 5E24Ch, 9E30h, 20h, 5E24Ch, 0A06Eh, 20h
dd 5E24Ch, 0A0B1h, 20h,	5E24Ch,	0A112h,	20h, 5E24Ch, 0A137h
dd 20h,	5E24Ch,	0A17Bh,	20h, 5E24Ch, 0A19Ch, 20h, 5E24Ch
dd 0A325h, 20h,	5E24Ch,	0A4E0h,	20h, 5E24Ch, 0A614h, 20h
dd 5E24Ch, 0A62Ch, 20h,	5E24Ch,	0A64Ah,	20h, 5E24Ch, 0A66Bh
dd 20h,	5E24Ch,	0A6A6h,	20h, 5E24Ch, 0A757h, 20h, 5E24Ch
dd 0A865h, 20h,	5E24Ch,	0A9F4h,	20h, 5E24Ch, 0AB71h, 20h
dd 5E24Ch, 0AC47h, 20h,	5E24Ch,	0AC99h,	20h, 5E24Ch, 0ACD6h
dd 20h,	5E24Ch,	0ACF1h,	20h, 5E24Ch, 0AD19h, 20h, 5E24Ch
dd 0AD4Ch, 20h,	5E24Ch,	0AD67h,	20h, 5E24Ch, 0ADA7h, 20h
dd 5E24Ch, 0ADCAh, 20h,	5E24Ch,	0AE3Ch,	20h, 5E24Ch, 0AEF0h
dd 20h,	5E24Ch,	0AF2Dh,	20h, 5E24Ch, 0AF48h, 20h, 5E24Ch
dd 0AF98h, 20h,	5E24Ch,	0AFC5h,	20h, 5E24Ch, 0AFDCh, 20h
dd 5E24Ch, 0B008h, 20h,	5E24Ch,	0B05Ah,	20h, 5E24Ch, 0B0BAh
dd 20h,	5E24Ch,	0B1BCh,	20h, 5E24Ch, 0B2C2h, 20h, 5E24Ch
dd 0B2F7h, 20h,	5E24Ch,	0B330h,	20h, 5E24Ch, 0B39Ah, 20h
dd 5E24Ch, 0B3C0h, 20h,	5E24Ch,	0B3F6h,	20h, 5E24Ch, 0B454h
dd 20h,	5E24Ch,	0B47Eh,	20h, 5E24Ch, 0B5DDh, 20h, 5E24Ch
dd 0B6D8h, 20h,	5E24Ch,	0B700h,	20h, 5E24Ch, 0B807h, 20h
dd 5E24Ch, 0B81Eh, 20h,	5E24Ch,	0B890h,	20h, 5E24Ch, 0B8ACh
dd 20h,	5E24Ch,	0B92Bh,	20h, 5E24Ch, 0B979h, 20h, 5E24Ch
dd 0BA4Ch, 20h,	5E24Ch,	0BA9Dh,	20h, 5E24Ch, 0BCF4h, 20h
dd 5E24Ch, 0BEA1h, 20h,	5E24Ch,	0BEC3h,	20h, 5E24Ch, 0BEDDh
dd 20h,	5E24Ch,	0C01Ah,	20h, 5E24Ch, 0C053h, 20h, 5E24Ch
dd 0C0C5h, 20h,	5E24Ch,	0C0F8h,	20h, 5E24Ch, 0C135h, 20h
dd 5E24Ch, 0C184h, 20h,	5E24Ch,	0C1A9h,	20h, 5E24Ch, 0C1D1h
dd 20h,	5E24Ch,	0C1F5h,	20h, 5E24Ch, 0C2EDh, 20h, 5E24Ch
dd 0C6C5h, 20h,	5E24Ch,	0C6D5h,	20h, 5E24Ch, 0C6F1h, 20h
dd 5E24Ch, 0C701h, 20h,	5E24Ch,	0C71Ah,	20h, 5E24Ch, 0C783h
dd 20h,	5E24Ch,	0C7B8h,	20h, 5E24Ch, 0C7DFh, 20h, 5E24Ch
dd 0C7FFh, 20h,	5E24Ch,	0C951h,	20h, 5E24Ch, 0C9A7h, 20h
dd 5E24Ch, 0CA55h, 20h,	5E24Ch,	0CAA0h,	20h, 5E24Ch, 0CAB7h
dd 20h,	5E24Ch,	0CAD1h,	20h, 5E24Ch, 0CAE7h, 20h, 5E24Ch
dd 0CAFAh, 20h,	5E24Ch,	0CB1Dh,	20h, 5E24Ch, 0CB3Ch, 20h
dd 5E24Ch, 0CB61h, 20h,	5E24Ch,	0CB71h,	20h, 5E24Ch, 0CB90h
dd 20h,	5E24Ch,	0CBC6h,	20h, 5E24Ch, 0CBDDh, 20h, 5E24Ch
dd 0CBF5h, 20h,	5E24Ch,	0CC57h,	20h, 5E24Ch, 0CC75h, 20h
dd 5E24Ch, 0CC85h, 20h,	5E24Ch,	0CCADh,	20h, 5E24Ch, 0CD16h
dd 20h,	5E24Ch,	0CD32h,	20h, 5E24Ch, 0CD7Eh, 20h, 5E24Ch
dd 0CD99h, 20h,	5E24Ch,	0CDCAh,	20h, 5E24Ch, 0CDE7h, 20h
dd 5E24Ch, 0CE27h, 20h,	5E24Ch,	0CE46h,	20h, 5E24Ch, 0CECBh
dd 20h,	5E24Ch,	0CEEBh,	20h, 5E24Ch, 0CF57h, 20h, 5E24Ch
dd 0CF80h, 20h,	5E24Ch,	0D0EAh,	20h, 5E24Ch, 0D116h, 20h
dd 5E24Ch, 0D13Ah, 20h,	5E24Ch,	0D160h,	20h, 5E24Ch, 0D1A9h
dd 20h,	5E24Ch,	0D1BFh,	20h, 5E24Ch, 0D201h, 20h, 5E24Ch
dd 0D222h, 20h,	5E24Ch,	0D261h,	20h, 5E24Ch, 0D286h, 20h
dd 5E24Ch, 0D34Eh, 20h,	5E24Ch,	0D36Ah,	20h, 5E24Ch, 0D383h
dd 20h,	5E24Ch,	0D3A4h,	20h, 5E24Ch, 0D430h, 20h, 5E24Ch
dd 0D461h, 20h,	5E24Ch,	0D478h,	20h, 5E24Ch, 0D4A3h, 20h
dd 5E24Ch, 0D51Ch, 20h,	5E24Ch,	0D607h,	20h, 5E24Ch, 0D6AEh
dd 20h,	5E24Ch,	0D700h,	20h, 5E24Ch, 0D8FAh, 20h, 5E24Ch
dd 0DB44h, 20h,	5E24Ch,	0DBA9h,	20h, 5E24Ch, 0DBC7h, 20h
dd 5E24Ch, 0DC2Ch, 20h,	5E24Ch,	0DCA4h,	20h, 5E24Ch, 0DD38h
dd 20h,	5E24Ch,	0E150h,	20h, 5E24Ch, 0E2A8h, 20h, 5E24Ch
dd 0E38Bh, 20h,	5E24Ch,	0E78Dh,	20h, 5E24Ch, 0E7C8h, 20h
dd 5E24Ch, 0E876h, 20h,	5E24Ch,	0EA28h,	20h, 5E24Ch, 0EAE2h
dd 20h,	5E24Ch,	0EB39h,	20h, 5E24Ch, 0EB53h, 20h, 5E24Ch
dd 0EB7Fh, 20h,	5E24Ch,	0EBFAh,	20h, 5E24Ch, 0EC19h, 20h
dd 5E24Ch, 0EC33h, 20h,	5E24Ch,	0EC4Dh,	20h, 5E24Ch, 0EC72h
dd 20h,	5E24Ch,	0EC97h,	20h, 5E24Ch, 0ECCBh, 20h, 5E24Ch
dd 0ED09h, 20h,	5E24Ch,	0ED42h,	20h, 5E24Ch, 0ED69h, 20h
dd 5E24Ch, 0EEB7h, 20h,	5E24Ch,	0EF66h,	20h, 5E24Ch, 0F01Ah
dd 20h,	5E24Ch,	0F040h,	20h, 5E24Ch, 0F0DCh, 20h, 5E24Ch
dd 0F10Ch, 20h,	5E24Ch,	0F190h,	20h, 5E24Ch, 0F1BBh, 20h
dd 5E24Ch, 0F1E1h, 20h,	5E24Ch,	0F212h,	20h, 5E24Ch, 0F297h
dd 20h,	5E24Ch,	0F31Bh,	20h, 5E24Ch, 0F336h, 20h, 5E24Ch
dd 0F358h, 20h,	5E24Ch,	0F36Fh,	20h, 5E24Ch, 0F3FDh, 20h
dd 5E24Ch, 0F41Eh, 20h,	5E24Ch,	0F530h,	20h, 5E24Ch, 0F54Fh
dd 20h,	5E24Ch,	0F652h,	20h, 5E24Ch, 0F677h, 20h, 5E24Ch
dd 0F6CBh, 20h,	5E24Ch,	0F741h,	20h, 5E24Ch, 0F7DEh, 20h
dd 5E24Ch, 0F7FEh, 20h,	5E24Ch,	0F8B0h,	20h, 5E24Ch, 0F95Dh
dd 20h,	5E24Ch,	0F989h,	20h, 5E24Ch, 0FA26h, 20h, 5E24Ch
dd 0FB12h, 20h,	5E24Ch,	0FBB7h,	20h, 5E24Ch, 0FBF9h, 20h
dd 5E24Ch, 0FC14h, 20h,	5E24Ch,	0FC43h,	20h, 5E24Ch, 0FC64h
dd 20h,	5E24Ch,	0FD79h,	20h, 5E24Ch, 0FDA2h, 20h, 5E24Ch
dd 0FE28h, 20h,	5E24Ch,	0FF3Dh,	20h, 5E24Ch, 0FF66h, 20h
dd 5E24Ch, 0FFE6h, 20h,	5E24Ch,	10029h,	20h, 5E24Ch, 10058h
dd 20h,	5E24Ch,	10170h,	20h, 5E24Ch, 10236h, 20h, 5E24Ch
dd 1028Ah, 20h,	5E24Ch,	102D8h,	20h, 5E24Ch, 1032Dh, 20h
dd 5E24Ch, 1035Dh, 20h,	5E24Ch,	1082Ch,	20h, 5E24Ch, 1093Ch
dd 20h,	5E24Ch,	109E2h,	20h, 5E24Ch, 10A36h, 20h, 5E24Ch
dd 10B1Eh, 20h,	5E24Ch,	10B4Fh,	20h, 5E24Ch, 10B8Ch, 20h
dd 5E24Ch, 10BB1h, 20h,	5E24Ch,	10C0Eh,	20h, 5E24Ch, 10C31h
dd 20h,	5E24Ch,	10C4Dh,	20h, 5E24Ch, 10C76h, 20h, 5E24Ch
dd 10CBDh, 20h,	5E24Ch,	10CF8h,	20h, 5E24Ch, 10D1Bh, 20h
dd 5E24Ch, 10DB4h, 20h,	5E24Ch,	10E47h,	20h, 5E24Ch, 10E67h
dd 20h,	5E24Ch,	10F2Ah,	20h, 5E24Ch, 10F46h, 20h, 5E24Ch
dd 10F62h, 20h,	5E24Ch,	10FE9h,	20h, 5E24Ch, 11006h, 20h
dd 5E24Ch, 11027h, 20h,	5E24Ch,	1108Dh,	20h, 5E24Ch, 110C6h
dd 20h,	5E24Ch,	110F2h,	20h, 5E24Ch, 11112h, 20h, 5E24Ch
dd 11133h, 20h,	5E24Ch,	1120Ah,	20h, 5E24Ch, 11284h, 20h
dd 5E24Ch, 1132Fh, 20h,	5E24Ch,	11351h,	20h, 5E24Ch, 11395h
dd 20h,	5E24Ch,	113ACh,	20h, 5E24Ch, 113DEh, 20h, 5E24Ch
dd 113FFh, 20h,	5E24Ch,	115F0h,	20h, 5E24Ch, 1161Eh, 20h
dd 5E24Ch, 11652h, 20h,	5E24Ch,	1166Dh,	20h, 5E24Ch, 1169Ch
dd 20h,	5E24Ch,	116CFh,	20h, 5E24Ch, 11705h, 20h, 5E24Ch
dd 11715h, 20h,	5E24Ch,	11748h,	20h, 5E24Ch, 11857h, 20h
dd 5E24Ch, 118A4h, 20h,	5E24Ch,	11987h,	20h, 5E24Ch, 119CFh
dd 20h,	5E24Ch,	11A87h,	20h, 5E24Ch, 11AB0h, 20h, 5E24Ch
dd 11BCAh, 20h,	5E24Ch,	11BF3h,	20h, 5E24Ch, 11CABh, 20h
dd 5E24Ch, 11CCBh, 20h,	5E24Ch,	11D74h,	20h, 5E24Ch, 11D9Fh
dd 20h,	5E24Ch,	11E24h,	20h, 5E24Ch, 11E4Dh, 20h, 5E24Ch
dd 11E5Dh, 20h,	5E24Ch,	11E81h,	20h, 5E24Ch, 11EB1h, 20h
dd 5E24Ch, 11EF7h, 20h,	5E24Ch,	11F39h,	20h, 5E24Ch, 12040h
dd 20h,	5E24Ch,	120FDh,	20h, 5E24Ch, 121B5h, 20h, 5E24Ch
dd 121C9h, 20h,	5E24Ch,	121FEh,	20h, 5E24Ch, 12219h, 20h
dd 5E24Ch, 1222Fh, 20h,	5E24Ch,	1226Dh,	20h, 5E24Ch, 12284h
dd 20h,	5E24Ch,	122C1h,	20h, 5E24Ch, 122D8h, 20h, 5E24Ch
dd 12315h, 20h,	5E24Ch,	1232Ch,	20h, 5E24Ch, 1236Bh, 20h
dd 5E24Ch, 12400h, 20h,	5E24Ch,	12447h,	20h, 5E24Ch, 124BFh
dd 20h,	5E24Ch,	12541h,	20h, 5E24Ch, 12618h, 20h, 5E24Ch
dd 12636h, 20h,	5E24Ch,	12666h,	20h, 5E24Ch, 1267Eh, 20h
dd 5E24Ch, 1269Dh, 20h,	5E24Ch,	126D6h,	20h, 5E24Ch, 126F1h
dd 20h,	5E24Ch,	1272Ah,	20h, 5E24Ch, 12754h, 20h, 5E24Ch
dd 1280Bh, 20h,	5E24Ch,	128A7h,	20h, 5E24Ch, 128ECh, 20h
dd 5E24Ch, 1297Ah, 20h,	5E24Ch,	129F8h,	20h, 5E24Ch, 12A41h
dd 20h,	5E24Ch,	12AEBh,	20h, 5E24Ch, 12B8Ah, 20h, 5E24Ch
dd 12CC8h, 20h,	5E24Ch,	12D4Dh,	20h, 5E24Ch, 12DD0h, 20h
dd 5E24Ch, 12E8Bh, 20h,	5E24Ch,	12EA0h,	20h, 5E24Ch, 12F09h
dd 20h,	5E24Ch,	12F3Dh,	20h, 5E24Ch, 13001h, 20h, 5E24Ch
dd 1346Ch, 20h,	5E24Ch,	1351Bh,	20h, 5E24Ch, 13679h, 20h
dd 5E24Ch, 136B6h, 20h,	5E24Ch,	13821h,	20h, 5E24Ch, 13881h
dd 20h,	5E24Ch,	13AC2h,	20h, 5E24Ch, 13BD7h, 20h, 5E24Ch
dd 13C5Fh, 20h,	5E24Ch,	13C89h,	20h, 5E24Ch, 13CC7h, 20h
dd 5E24Ch, 13DD9h, 20h,	5E24Ch,	13E9Eh,	20h, 5E24Ch, 13F21h
dd 20h,	5E24Ch,	13F3Eh,	20h, 5E24Ch, 13FF7h, 20h, 5E24Ch
dd 141E7h, 20h,	5E24Ch,	142BDh,	20h, 5E24Ch, 142D4h, 20h
dd 5E24Ch, 14372h, 20h,	5E24Ch,	1439Ah,	20h, 5E24Ch, 14450h
dd 20h,	5E24Ch,	14488h,	20h, 5E24Ch, 14557h, 20h, 5E24Ch
dd 14586h, 20h,	5E24Ch,	145C0h,	20h, 5E24Ch, 145E5h, 20h
dd 5E24Ch, 147C4h, 20h,	5E24Ch,	1480Eh,	20h, 5E24Ch, 14966h
dd 20h,	5E24Ch,	14C5Ah,	20h, 5E24Ch, 14EA0h, 20h, 5E24Ch
dd 14EC6h, 20h,	5E24Ch,	14FC7h,	20h, 5E24Ch, 14FEFh, 20h
dd 5E24Ch, 15016h, 20h,	5E24Ch,	150C7h,	20h, 5E24Ch, 150F4h
dd 20h,	5E24Ch,	154BEh,	20h, 5E24Ch, 1565Ch, 20h, 5E24Ch
dd 1569Ch, 20h,	5E24Ch,	1575Fh,	20h, 5E24Ch, 157B3h, 20h
dd 5E24Ch, 157ECh, 20h,	5E24Ch,	15860h,	20h, 5E24Ch, 15878h
dd 20h,	5E24Ch,	158B0h,	20h, 5E24Ch, 158C2h, 20h, 5E24Ch
dd 158F0h, 20h,	5E24Ch,	15983h,	20h, 5E24Ch, 159B2h, 20h
dd 5E24Ch, 159D4h, 20h,	5E24Ch,	15B28h,	20h, 5E24Ch, 15BCCh
dd 20h,	5E24Ch,	15DC5h,	20h, 5E24Ch, 15DFCh, 20h, 5E24Ch
dd 15F6Dh, 20h,	5E24Ch,	15FA0h,	20h, 5E24Ch, 16133h, 20h
dd 5E24Ch, 16162h, 20h,	5E24Ch,	16193h,	20h, 5E24Ch, 161C3h
dd 20h,	5E24Ch,	161E6h,	20h, 5E24Ch, 16221h, 20h, 5E24Ch
dd 1625Fh, 20h,	5E24Ch,	1636Fh,	20h, 5E24Ch, 1637Fh, 20h
dd 5E24Ch, 1639Dh, 20h,	5E24Ch,	163F7h,	20h, 5E24Ch, 16429h
dd 20h,	5E24Ch,	16509h,	20h, 5E24Ch, 16720h, 20h, 5E24Ch
dd 16809h, 20h,	5E24Ch,	1686Ch,	20h, 5E24Ch, 16894h, 20h
dd 5E24Ch, 168AAh, 20h,	5E24Ch,	168C7h,	20h, 5E24Ch, 16993h
dd 20h,	5E24Ch,	169C8h,	20h, 5E24Ch, 16AC8h, 20h, 5E24Ch
dd 16D24h, 20h,	5E24Ch,	16D91h,	20h, 5E24Ch, 16DD8h, 20h
dd 5E24Ch, 16E5Fh, 20h,	5E24Ch,	16EA4h,	20h, 5E24Ch, 16EBBh
dd 20h,	5E24Ch,	16ED0h,	20h, 5E24Ch, 16EE6h, 20h, 5E24Ch
dd 16EFCh, 20h,	5E24Ch,	16F13h,	20h, 5E24Ch, 16F28h, 20h
dd 5E24Ch, 16F3Fh, 20h,	5E24Ch,	16F54h,	20h, 5E24Ch, 16F6Ch
dd 20h,	5E24Ch,	16F80h,	20h, 5E24Ch, 16F97h, 20h, 5E24Ch
dd 16FACh, 20h,	5E24Ch,	16FC3h,	20h, 5E24Ch, 16FE1h, 20h
dd 5E24Ch, 16FFBh, 20h,	5E24Ch,	1700Eh,	20h, 5E24Ch, 17038h
dd 20h,	5E24Ch,	17094h,	20h, 5E24Ch, 170A8h, 20h, 5E24Ch
dd 170BFh, 20h,	5E24Ch,	170D4h,	20h, 5E24Ch, 170EFh, 20h
dd 5E24Ch, 17104h, 20h,	5E24Ch,	1711Fh,	20h, 5E24Ch, 17134h
dd 20h,	5E24Ch,	1714Fh,	20h, 5E24Ch, 17164h, 20h, 5E24Ch
dd 1717Fh, 20h,	5E24Ch,	17194h,	20h, 5E24Ch, 171AFh, 20h
dd 5E24Ch, 171CCh, 20h,	5E24Ch,	172ACh,	20h, 5E24Ch, 172E3h
dd 20h,	5E24Ch,	17385h,	20h, 5E24Ch, 173BEh, 20h, 5E24Ch
dd 173F4h, 20h,	5E24Ch,	17426h,	20h, 5E24Ch, 1743Ah, 20h
dd 5E24Ch, 17469h, 20h,	5E24Ch,	17519h,	20h, 5E24Ch, 1754Ah
dd 20h,	5E24Ch,	175A6h,	20h, 5E24Ch, 175D0h, 20h, 5E24Ch
dd 17767h, 20h,	5E24Ch,	177B0h,	20h, 5E24Ch, 177DAh, 20h
dd 5E24Ch, 177F0h, 20h,	5E24Ch,	1781Ah,	20h, 5E24Ch, 17830h
dd 20h,	5E24Ch,	178C1h,	20h, 5E24Ch, 178D4h, 20h, 5E24Ch
dd 17912h, 20h,	5E24Ch,	1792Dh,	20h, 5E24Ch, 17948h, 20h
dd 5E24Ch, 1796Fh, 20h,	5E24Ch,	179CDh,	20h, 5E24Ch, 17A7Eh
dd 20h,	5E24Ch,	17AC3h,	20h, 5E24Ch, 17AE1h, 20h, 5E24Ch
dd 17AFFh, 20h,	5E24Ch,	17B1Eh,	20h, 5E24Ch, 17B5Fh, 20h
dd 5E24Ch, 17B99h, 20h,	5E24Ch,	17BC3h,	20h, 5E24Ch, 17BFAh
dd 20h,	5E24Ch,	17C16h,	20h, 5E24Ch, 17CA6h, 20h, 5E24Ch
dd 17CDEh, 20h,	5E24Ch,	17D14h,	20h, 5E24Ch, 17D33h, 20h
dd 5E24Ch, 17E51h, 20h,	5E24Ch,	17E68h,	20h, 5E24Ch, 17F7Bh
dd 20h,	5E24Ch,	18000h,	20h, 5E24Ch, 18017h, 20h, 5E24Ch
dd 180BFh, 20h,	5E24Ch,	180FDh,	20h, 5E24Ch, 1810Dh, 20h
dd 5E24Ch, 18141h, 20h,	5E24Ch,	18221h,	20h, 5E24Ch, 182BEh
dd 20h,	5E24Ch,	18413h,	20h, 5E24Ch, 18631h, 20h, 5E24Ch
dd 187AAh, 20h,	5E24Ch,	1883Dh,	20h, 5E24Ch, 18869h, 20h
dd 5E24Ch, 1889Eh, 20h,	5E24Ch,	18909h,	20h, 5E24Ch, 1893Eh
dd 20h,	5E24Ch,	1899Ah,	20h, 5E24Ch, 18A0Ch, 20h, 5E24Ch
dd 18A42h, 20h,	5E24Ch,	18A8Ch,	20h, 5E24Ch, 18CAEh, 20h
dd 5E24Ch, 18CC4h, 20h,	5E24Ch,	18D02h,	20h, 5E24Ch, 18D19h
dd 20h,	5E24Ch,	18D4Eh,	20h, 5E24Ch, 18D6Fh, 20h, 5E24Ch
dd 18DDAh, 20h,	5E24Ch,	18E0Ch,	20h, 5E24Ch, 18F43h, 20h
dd 5E24Ch, 18FDDh, 20h,	5E24Ch,	1902Eh,	20h, 5E24Ch, 19064h
dd 20h,	5E24Ch,	1915Bh,	20h, 5E24Ch, 19230h, 20h, 5E24Ch
dd 1931Fh, 20h,	5E24Ch,	19404h,	20h, 5E24Ch, 194DDh, 20h
dd 5E24Ch, 19530h, 20h,	5E24Ch,	1955Ah,	20h, 5E24Ch, 19579h
dd 20h,	5E24Ch,	195ADh,	20h, 5E24Ch, 195CCh, 20h, 5E24Ch
dd 195F6h, 20h,	5E24Ch,	19620h,	20h, 5E24Ch, 19648h, 20h
dd 5E24Ch, 196A1h, 20h,	5E24Ch,	196D8h,	20h, 5E24Ch, 198B5h
dd 20h,	5E24Ch,	198D8h,	20h, 5E24Ch, 199D3h, 20h, 5E24Ch
dd 19A3Dh, 20h,	5E24Ch,	19A62h,	20h, 5E24Ch, 19B7Dh, 20h
dd 5E24Ch, 19C5Fh, 20h,	5E24Ch,	19D18h,	20h, 5E24Ch, 19D36h
dd 20h,	5E24Ch,	19D7Dh,	20h, 5E24Ch, 19D9Ah, 20h, 5E24Ch
dd 19FAFh, 20h,	5E24Ch,	1A0A5h,	20h, 5E24Ch, 1A1D3h, 20h
dd 5E24Ch, 1A21Eh, 20h,	5E24Ch,	1A241h,	20h, 5E24Ch, 1A269h
dd 20h,	5E24Ch,	1A281h,	20h, 5E24Ch, 1A2DAh, 20h, 5E24Ch
dd 1A2FEh, 20h,	5E24Ch,	1A32Dh,	20h, 5E24Ch, 1A35Eh, 20h
dd 5E24Ch, 1A5ABh, 20h,	5E24Ch,	1A698h,	20h, 5E24Ch, 1A6D8h
dd 20h,	5E24Ch,	1A756h,	20h, 5E24Ch, 1A782h, 20h, 5E24Ch
dd 1A7CAh, 20h,	5E24Ch,	1A7F6h,	20h, 5E24Ch, 1A81Fh, 20h
dd 5E24Ch, 1A871h, 20h,	5E24Ch,	1A924h,	20h, 5E24Ch, 1A96Ah
dd 20h,	5E24Ch,	1A9BEh,	20h, 5E24Ch, 1AA09h, 20h, 5E24Ch
dd 1AA5Eh, 20h,	5E24Ch,	1AAA1h,	20h, 5E24Ch, 1AAF7h, 20h
dd 5E24Ch, 1AB45h, 20h,	5E24Ch,	1AB90h,	20h, 5E24Ch, 1AC30h
dd 20h,	5E24Ch,	1AC7Ch,	20h, 5E24Ch, 1ACEBh, 20h, 5E24Ch
dd 1AD56h, 20h,	5E24Ch,	1AE13h,	20h, 5E24Ch, 1AE3Bh, 20h
dd 5E24Ch, 1AE81h, 20h,	5E24Ch,	1AEC8h,	20h, 5E24Ch, 1AEEEh
dd 20h,	5E24Ch,	1AF1Dh,	20h, 5E24Ch, 1AF3Eh, 20h, 5E24Ch
dd 1AF75h, 20h,	5E24Ch,	1AF8Ch,	20h, 5E24Ch, 1AFCCh, 20h
dd 5E24Ch, 1AFDEh, 20h,	5E24Ch,	1AFFEh,	20h, 5E24Ch, 1B049h
dd 20h,	5E24Ch,	1B08Ah,	20h, 5E24Ch, 1B102h, 20h, 5E24Ch
dd 1B129h, 20h,	5E24Ch,	1B164h,	20h, 5E24Ch, 1B182h, 20h
dd 5E24Ch, 1B237h, 20h,	5E24Ch,	1B339h,	20h, 5E24Ch, 1B3FDh
dd 20h,	5E24Ch,	1B442h,	20h, 5E24Ch, 1B47Ch, 20h, 5E24Ch
dd 1B4E0h, 20h,	5E24Ch,	1B500h,	20h, 5E24Ch, 1B580h, 20h
dd 5E24Ch, 1B64Fh, 20h,	5E24Ch,	1BA3Bh,	20h, 5E24Ch, 1BCFCh
dd 20h,	5E24Ch,	1BD44h,	20h, 5E24Ch, 1BD70h, 20h, 5E24Ch
dd 1BD92h, 20h,	5E24Ch,	1BDD7h,	20h, 5E24Ch, 1BDF8h, 20h
dd 5E24Ch, 1BE21h, 20h,	5E24Ch,	1BE3Ah,	20h, 5E24Ch, 1BE7Ch
dd 20h,	5E24Ch,	1BEBCh,	20h, 5E24Ch, 1BF75h, 20h, 5E24Ch
dd 1C05Dh, 20h,	5E24Ch,	1C121h,	20h, 5E24Ch, 1C182h, 20h
dd 5E24Ch, 1C1ACh, 20h,	5E24Ch,	1C250h,	20h, 5E24Ch, 1C28Eh
dd 20h,	5E24Ch,	1C306h,	20h, 5E24Ch, 1C334h, 20h, 5E24Ch
dd 1C3D8h, 20h,	5E24Ch,	1C412h,	20h, 5E24Ch, 1C426h, 20h
dd 5E24Ch, 1C44Fh, 20h,	5E24Ch,	1C4B1h,	20h, 5E24Ch, 1C4D3h
dd 20h,	5E24Ch,	1C520h,	20h, 5E24Ch, 1C55Dh, 20h, 5E24Ch
dd 1C581h, 20h,	5E24Ch,	1C596h,	20h, 5E24Ch, 1C5C8h, 20h
dd 5E24Ch, 1C63Eh, 20h,	5E24Ch,	1C6B7h,	20h, 5E24Ch, 1C6E7h
dd 20h,	5E24Ch,	1C705h,	20h, 5E24Ch, 1C735h, 20h, 5E24Ch
dd 1C765h, 20h,	5E24Ch,	1C7A3h,	20h, 5E24Ch, 1C7F8h, 20h
dd 5E24Ch, 1C852h, 20h,	5E24Ch,	1C9D1h,	20h, 5E24Ch, 1CB6Eh
dd 20h,	5E24Ch,	1CDF5h,	20h, 5E24Ch, 1CE23h, 20h, 5E24Ch
dd 1CE58h, 20h,	5E24Ch,	1CEC4h,	20h, 5E24Ch, 1CEE4h, 20h
dd 5E24Ch, 1D029h, 20h,	5E24Ch,	1D18Ch,	20h, 5E24Ch, 1D26Dh
dd 20h,	5E24Ch,	1D308h,	20h, 5E24Ch, 1D327h, 20h, 5E24Ch
dd 1D72Fh, 20h,	5E24Ch,	1D806h,	20h, 5E24Ch, 1D8C1h, 20h
dd 5E24Ch, 1D91Eh, 20h,	5E24Ch,	1D954h,	20h, 5E24Ch, 1D9A8h
dd 20h,	5E24Ch,	1DA0Dh,	20h, 5E24Ch, 1DA3Eh, 20h, 5E24Ch
dd 1DAEDh, 20h,	5E24Ch,	1DB6Eh,	20h, 5E24Ch, 1DC61h, 20h
dd 5E24Ch, 1DDB0h, 20h,	5E24Ch,	1DDD4h,	20h, 5E24Ch, 1DDEAh
dd 20h,	5E24Ch,	1DE07h,	20h, 5E24Ch, 1DEA2h, 20h, 5E24Ch
dd 1DEDAh, 20h,	5E24Ch,	1DEFFh,	20h, 5E24Ch, 1DF4Dh, 20h
dd 5E24Ch, 1DF85h, 20h,	5E24Ch,	1DF9Eh,	20h, 5E24Ch, 1DFD8h
dd 20h,	5E24Ch,	1E04Bh,	20h, 5E24Ch, 1E088h, 20h, 5E24Ch
dd 1E12Bh, 20h,	5E24Ch,	1E17Dh,	20h, 5E24Ch, 1E1FEh, 20h
dd 5E24Ch, 1E229h, 20h,	5E24Ch,	1E309h,	20h, 5E24Ch, 1E5E4h
dd 20h,	5E24Ch,	1E5F9h,	20h, 5E24Ch, 1E613h, 20h, 5E24Ch
dd 1E694h, 20h,	5E24Ch,	1E77Bh,	20h, 5E24Ch, 1E835h, 20h
dd 5E24Ch, 1E8A0h, 20h,	5E24Ch,	1E8D6h,	20h, 5E24Ch, 1E984h
dd 20h,	5E24Ch,	1EAADh,	20h, 5E24Ch, 1ED3Eh, 20h, 5E24Ch
dd 1ED56h, 20h,	5E24Ch,	1ED8Ah,	20h, 5E24Ch, 1EDA6h, 20h
dd 5E24Ch, 1EDC2h, 20h,	5E24Ch,	1EEABh,	20h, 5E24Ch, 1FD05h
dd 20h,	5E24Ch,	1FD2Dh,	20h, 5E24Ch, 1FE47h, 20h, 5E24Ch
dd 1FE7Ch, 20h,	5E24Ch,	1FFA2h,	20h, 5E24Ch, 1FFC7h, 20h
dd 5E24Ch, 20035h, 20h,	5E24Ch,	20052h,	20h, 5E24Ch, 2007Ch
dd 20h,	5E24Ch,	20157h,	20h, 5E24Ch, 20C75h, 20h, 5E24Ch
dd 20D07h, 20h,	5E24Ch,	20DC4h,	20h, 5E24Ch, 20E55h, 20h
dd 5E24Ch, 20F07h, 20h,	5E24Ch,	20F32h,	20h, 5E24Ch, 20F60h
dd 20h,	5E24Ch,	21044h,	20h, 5E24Ch, 21108h, 20h, 5E24Ch
dd 21182h, 20h,	5E24Ch,	211F0h,	20h, 5E24Ch, 21291h, 20h
dd 5E24Ch, 2133Eh, 20h,	5E24Ch,	213A0h,	20h, 5E24Ch, 21492h
dd 20h,	5E24Ch,	216EAh,	20h, 5E24Ch, 2173Eh, 20h, 5E24Ch
dd 2186Ah, 20h,	5E24Ch,	21883h,	20h, 5E24Ch, 21916h, 20h
dd 5E24Ch, 21945h, 20h,	5E24Ch,	219ECh,	20h, 5E24Ch, 219FEh
dd 20h,	5E24Ch,	21A14h,	20h, 5E24Ch, 21A24h, 20h, 5E24Ch
dd 21A38h, 20h,	5E24Ch,	21A48h,	20h, 5E24Ch, 21A63h, 20h
dd 5E24Ch, 21B1Fh, 20h,	5E24Ch,	21B44h,	20h, 5E24Ch, 2279Dh
dd 20h,	5E24Ch,	22B29h,	20h, 5E24Ch, 22B6Fh, 20h, 5E24Ch
dd 22C88h, 20h,	5E24Ch,	22C98h,	20h, 5E24Ch, 22CB1h, 20h
dd 5E24Ch, 22CC1h, 20h,	5E24Ch,	22CDCh,	20h, 5E24Ch, 22D00h
dd 20h,	5E24Ch,	22D1Ch,	20h, 5E24Ch, 22D40h, 20h, 5E24Ch
dd 22D6Ch, 20h,	5E24Ch,	22E16h,	20h, 5E24Ch, 22E3Bh, 20h
dd 5E24Ch, 22EBEh, 20h,	5E24Ch,	22EDFh,	20h, 5E24Ch, 22FB2h
dd 20h,	5E24Ch,	22FD3h,	20h, 5E24Ch, 23056h, 20h, 5E24Ch
dd 23076h, 20h,	5E24Ch,	230AEh,	20h, 5E24Ch, 230D8h, 20h
dd 5E24Ch, 23186h, 20h,	5E24Ch,	231B3h,	20h, 5E24Ch, 2328Eh
dd 20h,	5E24Ch,	232AFh,	20h, 5E24Ch, 2338Ah, 20h, 5E24Ch
dd 233ABh, 20h,	5E24Ch,	23426h,	20h, 5E24Ch, 23447h, 20h
dd 5E24Ch, 234C2h, 20h,	5E24Ch,	234E8h,	20h, 5E24Ch, 2360Ah
dd 20h,	5E24Ch,	2362Fh,	20h, 5E24Ch, 236CEh, 20h, 5E24Ch
dd 236EFh, 20h,	5E24Ch,	2376Ah,	20h, 5E24Ch, 23787h, 20h
dd 5E24Ch, 237C0h, 20h,	5E24Ch,	237D2h,	20h, 5E24Ch, 237EAh
dd 20h,	5E24Ch,	23804h,	20h, 5E24Ch, 2381Fh, 20h, 5E24Ch
dd 2383Ah, 20h,	5E24Ch,	23871h,	20h, 5E24Ch, 238A4h, 20h
dd 5E24Ch, 238BCh, 20h,	5E24Ch,	23946h,	20h, 5E24Ch, 23972h
dd 20h,	5E24Ch,	23A25h,	20h, 5E24Ch, 23A50h, 20h, 5E24Ch
dd 23A86h, 20h,	5E24Ch,	23AA1h,	20h, 5E24Ch, 23CB4h, 20h
dd 5E24Ch, 23CC8h, 20h,	5E24Ch,	23D0Ah,	20h, 5E24Ch, 23D26h
dd 20h,	5E24Ch,	23D57h,	20h, 5E24Ch, 23D80h, 20h, 5E24Ch
dd 23DB7h, 20h,	5E24Ch,	23E5Eh,	20h, 5E24Ch, 23E7Eh, 20h
dd 5E24Ch, 23EAAh, 20h,	5E24Ch,	23EC2h,	20h, 5E24Ch, 23EEEh
dd 20h,	5E24Ch,	23F02h,	20h, 5E24Ch, 23F16h, 20h, 5E24Ch
dd 23F2Ah, 20h,	5E24Ch,	23F42h,	20h, 5E24Ch, 23F74h, 20h
dd 5E24Ch, 23FABh, 20h,	5E24Ch,	24052h,	20h, 5E24Ch, 2418Eh
dd 20h,	5E24Ch,	241B2h,	20h, 5E24Ch, 2423Ah, 20h, 5E24Ch
dd 2427Fh, 20h,	5E24Ch,	242F3h,	20h, 5E24Ch, 2432Ch, 20h
dd 5E24Ch, 243E6h, 20h,	5E24Ch,	24408h,	20h, 5E24Ch, 24440h
dd 20h,	5E24Ch,	24454h,	20h, 5E24Ch, 2446Dh, 20h, 5E24Ch
dd 24480h, 20h,	5E24Ch,	244B8h,	20h, 5E24Ch, 244CCh, 20h
dd 5E24Ch, 24504h, 20h,	5E24Ch,	24518h,	20h, 5E24Ch, 24550h
dd 20h,	5E24Ch,	24564h,	20h, 5E24Ch, 2459Ch, 20h, 5E24Ch
dd 245B0h, 20h,	5E24Ch,	245E8h,	20h, 5E24Ch, 24606h, 20h
dd 5E24Ch, 24655h, 20h,	5E24Ch,	246D0h,	20h, 5E24Ch, 24708h
dd 20h,	5E24Ch,	2472Ch,	20h, 5E24Ch, 24850h, 20h, 5E24Ch
dd 248BCh, 20h,	5E24Ch,	248F0h,	20h, 5E24Ch, 24909h, 20h
dd 5E24Ch, 2493Bh, 20h,	5E24Ch,	24955h,	20h, 5E24Ch, 24981h
dd 20h,	5E24Ch,	24998h,	20h, 5E24Ch, 249CCh, 20h, 5E24Ch
dd 249E7h, 20h,	5E24Ch,	24A39h,	20h, 5E24Ch, 24A58h, 20h
dd 5E24Ch, 24A80h, 20h,	5E24Ch,	24AD1h,	20h, 5E24Ch, 24AE6h
dd 20h,	5E24Ch,	24B3Ch,	20h, 5E24Ch, 24B6Fh, 20h, 5E24Ch
dd 24BA2h, 20h,	5E24Ch,	24BC6h,	20h, 5E24Ch, 24BE5h, 20h
dd 5E24Ch, 24CACh, 20h,	5E24Ch,	24CC5h,	20h, 5E24Ch, 24D22h
dd 20h,	5E24Ch,	24D49h,	20h, 5E24Ch, 24D82h, 20h, 5E24Ch
dd 24DA6h, 20h,	5E24Ch,	24E48h,	20h, 5E24Ch, 24E60h, 20h
dd 5E24Ch, 24E9Ah, 20h,	5E24Ch,	24F18h,	20h, 5E24Ch, 24FC4h
dd 20h,	5E24Ch,	24FE0h,	20h, 5E24Ch, 25023h, 20h, 5E24Ch
dd 2503Dh, 20h,	5E24Ch,	2506Eh,	20h, 5E24Ch, 2508Fh, 20h
dd 5E24Ch, 253A8h, 20h,	5E24Ch,	25404h,	20h, 5E24Ch, 256B2h
dd 20h,	5E24Ch,	25720h,	20h, 5E24Ch, 25757h, 20h, 5E24Ch
dd 25806h, 20h,	5E24Ch,	2581Ah,	20h, 5E24Ch, 25842h, 20h
dd 5E24Ch, 25856h, 20h,	5E24Ch,	25888h,	20h, 5E24Ch, 258BFh
dd 20h,	5E24Ch,	2596Fh,	20h, 5E24Ch, 259A6h, 20h, 5E24Ch
dd 259D4h, 20h,	5E24Ch,	25A2Dh,	20h, 5E24Ch, 25A95h, 20h
dd 5E24Ch, 25AA5h, 20h,	5E24Ch,	25ACDh,	20h, 5E24Ch, 25B94h
dd 20h,	5E24Ch,	25BADh,	20h, 5E24Ch, 25BC8h, 20h, 5E24Ch
dd 25BEDh, 20h,	5E24Ch,	25C26h,	20h, 5E24Ch, 25C4Ah, 20h
dd 5E24Ch, 25C9Ah, 20h,	5E24Ch,	25CB4h,	20h, 5E24Ch, 25CEEh
dd 20h,	5E24Ch,	25D1Ch,	20h, 5E24Ch, 25D6Fh, 20h, 5E24Ch
dd 25D88h, 20h,	5E24Ch,	25DCBh,	20h, 5E24Ch, 25DE5h, 20h
dd 5E24Ch, 25E16h, 20h,	5E24Ch,	25E36h,	20h, 5E24Ch, 25E9Ch
dd 20h,	5E24Ch,	25EE4h,	20h, 5E24Ch, 26047h, 20h, 5E24Ch
dd 260B4h, 20h,	5E24Ch,	260F2h,	20h, 5E24Ch, 26240h, 20h
dd 5E24Ch, 26277h, 20h,	5E24Ch,	26326h,	20h, 5E24Ch, 2633Ah
dd 20h,	5E24Ch,	26362h,	20h, 5E24Ch, 26376h, 20h, 5E24Ch
dd 263A8h, 20h,	5E24Ch,	263DFh,	20h, 5E24Ch, 2648Fh, 20h
dd 5E24Ch, 264C6h, 20h,	5E24Ch,	264F4h,	20h, 5E24Ch, 2654Dh
dd 20h,	5E24Ch,	265B1h,	20h, 5E24Ch, 265C1h, 20h, 5E24Ch
dd 265E9h, 20h,	5E24Ch,	26813h,	20h, 5E24Ch, 26828h, 20h
dd 5E24Ch, 2686Ah, 20h,	5E24Ch,	26886h,	20h, 5E24Ch, 268B7h
dd 20h,	5E24Ch,	268E0h,	20h, 5E24Ch, 26917h, 20h, 5E24Ch
dd 269BEh, 20h,	5E24Ch,	269DEh,	20h, 5E24Ch, 26A0Ah, 20h
dd 5E24Ch, 26A22h, 20h,	5E24Ch,	26A4Eh,	20h, 5E24Ch, 26A66h
dd 20h,	5E24Ch,	26A8Eh,	20h, 5E24Ch, 26AA2h, 20h, 5E24Ch
dd 26ABAh, 20h,	5E24Ch,	26ACEh,	20h, 5E24Ch, 26B00h, 20h
dd 5E24Ch, 26B37h, 20h,	5E24Ch,	26BDEh,	20h, 5E24Ch, 26CD2h
dd 20h,	5E24Ch,	26CF6h,	20h, 5E24Ch, 26DB6h, 20h, 5E24Ch
dd 26DF3h, 20h,	5E24Ch,	26EA0h,	20h, 5E24Ch, 26EFCh, 20h
dd 5E24Ch, 26F34h, 20h,	5E24Ch,	26F48h,	20h, 5E24Ch, 26F80h
dd 20h,	5E24Ch,	26F94h,	20h, 5E24Ch, 26FCCh, 20h, 5E24Ch
dd 26FE0h, 20h,	5E24Ch,	27018h,	20h, 5E24Ch, 27037h, 20h
dd 5E24Ch, 27093h, 20h,	5E24Ch,	270C0h,	20h, 5E24Ch, 270F8h
dd 20h,	5E24Ch,	2710Ch,	20h, 5E24Ch, 27144h, 20h, 5E24Ch
dd 27158h, 20h,	5E24Ch,	27190h,	20h, 5E24Ch, 271A4h, 20h
dd 5E24Ch, 271DCh, 20h,	5E24Ch,	271F6h,	20h, 5E24Ch, 27254h
dd 20h,	5E24Ch,	27274h,	20h, 5E24Ch, 272A6h, 20h, 5E24Ch
dd 272C6h, 20h,	5E24Ch,	27368h,	20h, 5E24Ch, 27390h, 20h
dd 5E24Ch, 273E1h, 20h,	5E24Ch,	27414h,	20h, 5E24Ch, 27581h
dd 20h,	5E24Ch,	275DCh,	20h, 5E24Ch, 27606h, 20h, 5E24Ch
dd 2765Dh, 20h,	5E24Ch,	276F6h,	20h, 5E24Ch, 27729h, 20h
dd 5E24Ch, 277C2h, 20h,	5E24Ch,	277E7h,	20h, 5E24Ch, 2780Ch
dd 20h,	5E24Ch,	27836h,	20h, 5E24Ch, 27879h, 20h, 5E24Ch
dd 27896h, 20h,	5E24Ch,	278B7h,	20h, 5E24Ch, 278DCh, 20h
dd 5E24Ch, 27906h, 20h,	5E24Ch,	27949h,	20h, 5E24Ch, 27966h
dd 20h,	5E24Ch,	2798Ch,	20h, 5E24Ch, 279CAh, 20h, 5E24Ch
dd 279EAh, 20h,	5E24Ch,	27A04h,	20h, 5E24Ch, 27A22h, 20h
dd 5E24Ch, 27A3Eh, 20h,	5E24Ch,	27A99h,	20h, 5E24Ch, 27AB6h
dd 20h,	5E24Ch,	27B1Dh,	20h, 5E24Ch, 27B39h, 20h, 5E24Ch
dd 27B76h, 20h,	5E24Ch,	27B91h,	20h, 5E24Ch, 27BE1h, 20h
dd 5E24Ch, 27BFDh, 20h,	5E24Ch,	27C21h,	20h, 5E24Ch, 27C44h
dd 20h,	5E24Ch,	27C86h,	20h, 5E24Ch, 27CA1h, 20h, 5E24Ch
dd 27CCBh, 20h,	5E24Ch,	27CF0h,	20h, 5E24Ch, 27D29h, 20h
dd 5E24Ch, 27DB5h, 20h,	5E24Ch,	27DCAh,	20h, 5E24Ch, 27DF8h
dd 20h,	5E24Ch,	27E31h,	20h, 5E24Ch, 27EBDh, 20h, 5E24Ch
dd 27ED2h, 20h,	5E24Ch,	27EF0h,	20h, 5E24Ch, 27F1Ch, 20h
dd 5E24Ch, 27F30h, 20h,	5E24Ch,	27F4Ch,	20h, 5E24Ch, 27F64h
dd 20h,	5E24Ch,	27F7Dh,	20h, 5E24Ch, 27F97h, 20h, 5E24Ch
dd 27FD9h, 20h,	5E24Ch,	27FF8h,	20h, 5E24Ch, 28020h, 20h
dd 5E24Ch, 28071h, 20h,	5E24Ch,	28086h,	20h, 5E24Ch, 280D2h
dd 20h,	5E24Ch,	2815Ch,	20h, 5E24Ch, 2817Eh, 20h, 5E24Ch
dd 28210h, 20h,	5E24Ch,	2824Fh,	20h, 5E24Ch, 282B4h, 20h
dd 5E24Ch, 282D8h, 20h,	5E24Ch,	28311h,	20h, 5E24Ch, 2832Ch
dd 20h,	5E24Ch,	28345h,	20h, 5E24Ch, 28379h, 20h, 5E24Ch
dd 28392h, 20h,	5E24Ch,	283B2h,	20h, 5E24Ch, 2855Fh, 20h
dd 5E24Ch, 286EEh, 20h,	5E24Ch,	2871Ch,	20h, 5E24Ch, 28776h
dd 20h,	5E24Ch,	287AEh,	20h, 5E24Ch, 287CDh, 20h, 5E24Ch
dd 28807h, 20h,	5E24Ch,	2884Fh,	20h, 5E24Ch, 2889Dh, 20h
dd 5E24Ch, 288F0h, 20h,	5E24Ch,	2891Bh,	20h, 5E24Ch, 2893Dh
dd 20h,	5E24Ch,	2894Dh,	20h, 5E24Ch, 28969h, 20h, 5E24Ch
dd 289A3h, 20h,	5E24Ch,	289C1h,	20h, 5E24Ch, 289FEh, 20h
dd 5E24Ch, 28A1Dh, 20h,	5E24Ch,	28A5Ah,	20h, 5E24Ch, 28A83h
dd 20h,	5E24Ch,	28B2Eh,	20h, 5E24Ch, 28BB3h, 20h, 5E24Ch
dd 28C0Eh, 20h,	5E24Ch,	28C57h,	20h, 5E24Ch, 28C92h, 20h
dd 5E24Ch, 28D44h, 20h,	5E24Ch,	28D7Fh,	20h, 5E24Ch, 28DB7h
dd 20h,	5E24Ch,	28DF2h,	20h, 5E24Ch, 28E1Bh, 20h, 5E24Ch
dd 28E72h, 20h,	5E24Ch,	28EBCh,	20h, 5E24Ch, 28EE5h, 20h
dd 5E24Ch, 28F08h, 20h,	5E24Ch,	28F31h,	20h, 5E24Ch, 28F60h
dd 20h,	5E24Ch,	28FC6h,	20h, 5E24Ch, 29038h, 20h, 5E24Ch
dd 29081h, 20h,	5E24Ch,	290AAh,	20h, 5E24Ch, 290C9h, 20h
dd 5E24Ch, 29134h, 20h,	5E24Ch,	2918Ch,	20h, 5E24Ch, 291D2h
dd 20h,	5E24Ch,	291FEh,	20h, 5E24Ch, 29302h, 20h, 5E24Ch
dd 29362h, 20h,	5E24Ch,	293BDh,	20h, 5E24Ch, 29889h, 20h
dd 5E24Ch, 29912h, 20h,	5E24Ch,	2994Ah,	20h, 5E24Ch, 299F5h
dd 20h,	5E24Ch,	2B34Eh,	20h, 5E24Ch, 2B4BFh, 20h, 5E24Ch
dd 2B578h, 20h,	5E24Ch,	2B6D4h,	20h, 5E24Ch, 2B755h, 20h
dd 5E24Ch, 2B849h, 20h,	5E24Ch,	2B8ACh,	20h, 5E24Ch, 2B975h
dd 20h,	5E24Ch,	2B9A4h,	20h, 5E24Ch, 2B9BEh, 20h, 5E24Ch
dd 2B9D4h, 20h,	5E24Ch,	2BA0Bh,	20h, 5E24Ch, 2BA28h, 20h
dd 5E24Ch, 2BA78h, 20h,	5E24Ch,	2BAEAh,	20h, 5E24Ch, 2BB3Dh
dd 20h,	5E24Ch,	2BB91h,	20h, 5E24Ch, 2BC50h, 20h, 5E24Ch
dd 2BCC9h, 20h,	5E24Ch,	2BD4Dh,	20h, 5E24Ch, 2BD6Eh, 20h
dd 5E24Ch, 2BE20h, 20h,	5E24Ch,	2BEA5h,	20h, 5E24Ch, 2BEB5h
dd 20h,	5E24Ch,	2BED9h,	20h, 5E24Ch, 2BEE9h, 20h, 5E24Ch
dd 2BF0Fh, 20h,	5E24Ch,	2BF68h,	20h, 5E24Ch, 2BF89h, 20h
dd 5E24Ch, 2BFB9h, 20h,	5E24Ch,	2BFE1h,	20h, 5E24Ch, 2C168h
dd 20h,	5E24Ch,	2C186h,	20h, 5E24Ch, 2C19Ah, 20h, 5E24Ch
dd 2C1DAh, 20h,	5E24Ch,	2C22Bh,	20h, 5E24Ch, 2C28Dh, 20h
dd 5E24Ch, 2C2BDh, 20h,	5E24Ch,	2C348h,	20h, 5E24Ch, 2C455h
dd 20h,	5E24Ch,	2C691h,	20h, 5E24Ch, 2C6EDh, 20h, 5E24Ch
dd 2C744h, 20h,	5E24Ch,	2C76Dh,	20h, 5E24Ch, 2C790h, 20h
dd 5E24Ch, 2C7A2h, 20h,	5E24Ch,	2C7CDh,	20h, 5E24Ch, 2C816h
dd 20h,	5E24Ch,	2C831h,	20h, 5E24Ch, 2C841h, 20h, 5E24Ch
dd 2C86Ah, 20h,	5E24Ch,	2C8ABh,	20h, 5E24Ch, 2C8E7h, 20h
dd 5E24Ch, 2CA3Bh, 20h,	5E24Ch,	2CA54h,	20h, 5E24Ch, 2CAB4h
dd 20h,	5E24Ch,	2CACDh,	20h, 5E24Ch, 2CB16h, 20h, 5E24Ch
dd 2CB30h, 20h,	5E24Ch,	2CB57h,	20h, 5E24Ch, 2CB71h, 20h
dd 5E24Ch, 2CB81h, 20h,	5E24Ch,	2CBA7h,	20h, 5E24Ch, 2CBFEh
dd 20h,	5E24Ch,	2CC28h,	20h, 5E24Ch, 2CD04h, 20h, 5E24Ch
dd 2CD40h, 20h,	5E24Ch,	2CD5Ah,	20h, 5E24Ch, 2CD78h, 20h
dd 5E24Ch, 2CD8Eh, 20h,	5E24Ch,	2CDF7h,	20h, 5E24Ch, 2CE24h
dd 20h,	5E24Ch,	2CE62h,	20h, 5E24Ch, 2CED5h, 20h, 5E24Ch
dd 2CF24h, 20h,	5E24Ch,	2CF3Dh,	20h, 5E24Ch, 2CFA5h, 20h
dd 5E24Ch, 2CFC9h, 20h,	5E24Ch,	2CFF5h,	20h, 5E24Ch, 2D00Ch
dd 20h,	5E24Ch,	2D023h,	20h, 5E24Ch, 2D04Ah, 20h, 5E24Ch
dd 2D084h, 20h,	5E24Ch,	2D09Bh,	20h, 5E24Ch, 2D0F2h, 20h
dd 5E24Ch, 2D111h, 20h,	5E24Ch,	2D172h,	20h, 5E24Ch, 2D196h
dd 20h,	5E24Ch,	2D21Fh,	20h, 5E24Ch, 2D234h, 20h, 5E24Ch
dd 2D24Fh, 20h,	5E24Ch,	2D26Eh,	20h, 5E24Ch, 2D294h, 20h
dd 5E24Ch, 2D2B6h, 20h,	5E24Ch,	2D2DCh,	20h, 5E24Ch, 2D2FAh
dd 20h,	5E24Ch,	2D33Eh,	20h, 5E24Ch, 2D36Eh, 20h, 5E24Ch
dd 2D3A7h, 20h,	5E24Ch,	2D3ECh,	20h, 5E24Ch, 2D4A5h, 20h
dd 5E24Ch, 2D4C6h, 20h,	5E24Ch,	2D4F9h,	20h, 5E24Ch, 2D54Fh
dd 20h,	5E24Ch,	2D574h,	20h, 5E24Ch, 2D71Dh, 20h, 5E24Ch
dd 2D78Ch, 20h,	5E24Ch,	2D830h,	20h, 5E24Ch, 2D92Dh, 20h
dd 5E24Ch, 2D94Ah, 20h,	5E24Ch,	2D96Ah,	20h, 5E24Ch, 2D99Eh
dd 20h,	5E24Ch,	2D9D2h,	20h, 5E24Ch, 2DA07h, 20h, 5E24Ch
dd 2DA36h, 20h,	5E24Ch,	2DA52h,	20h, 5E24Ch, 2DA7Ah, 20h
dd 5E24Ch, 2DA9Fh, 20h,	5E24Ch,	2DABDh,	20h, 5E24Ch, 2DB17h
dd 20h,	5E24Ch,	2DB50h,	20h, 5E24Ch, 2DC78h, 20h, 5E24Ch
dd 2DD68h, 20h,	5E24Ch,	2DD9Ch,	20h, 5E24Ch, 2DDC5h, 20h
dd 5E24Ch, 2DF69h, 20h,	5E24Ch,	2F250h,	20h, 5E24Ch, 2F2A2h
dd 20h,	5E24Ch,	2F2CAh,	20h, 5E24Ch, 2F318h, 20h, 5E24Ch
dd 2F33Eh, 20h,	5E24Ch,	2F38Ch,	20h, 5E24Ch, 2F3C0h, 20h
dd 5E24Ch, 2F43Ch, 20h,	5E24Ch,	2F480h,	20h, 5E24Ch, 2F5FBh
dd 20h,	5E24Ch,	2F6B4h,	20h, 5E24Ch, 2F707h, 20h, 5E24Ch
dd 2FDD3h, 20h,	5E24Ch,	2FDEFh,	20h, 5E24Ch, 2FE39h, 20h
dd 5E24Ch, 2FEADh, 20h,	5E24Ch,	2FED9h,	20h, 5E24Ch, 2FF04h
dd 20h,	5E24Ch,	30055h,	20h, 5E24Ch, 30068h, 20h, 5E24Ch
dd 3008Fh, 20h,	5E24Ch,	300A7h,	20h, 5E24Ch, 30106h, 20h
dd 5E24Ch, 30122h, 20h,	5E24Ch,	301B8h,	20h, 5E24Ch, 301DEh
dd 20h,	5E24Ch,	3022Bh,	20h, 5E24Ch, 3024Ah, 20h, 5E24Ch
dd 30261h, 20h,	5E24Ch,	304ACh,	20h, 5E24Ch, 304D4h, 20h
dd 5E24Ch, 30558h, 20h,	5E24Ch,	3058Fh,	20h, 5E24Ch, 305DEh
dd 20h,	5E24Ch,	305FEh,	20h, 5E24Ch, 30628h, 20h, 5E24Ch
dd 30641h, 20h,	5E24Ch,	306A9h,	20h, 5E24Ch, 30757h, 20h
dd 5E24Ch, 30820h, 20h,	5E24Ch,	308DCh,	20h, 5E24Ch, 3099Bh
dd 20h,	5E24Ch,	309CCh,	20h, 5E24Ch, 30A13h, 20h, 5E24Ch
dd 30A53h, 20h,	5E24Ch,	30D95h,	20h, 5E24Ch, 3112Ah, 20h
dd 5E24Ch, 311BDh, 20h,	5E24Ch,	311FEh,	20h, 5E24Ch, 31236h
dd 20h,	5E24Ch,	3124Ah,	20h, 5E24Ch, 31261h, 20h, 5E24Ch
dd 31275h, 20h,	5E24Ch,	31298h,	20h, 5E24Ch, 312B4h, 20h
dd 5E24Ch, 31316h, 20h,	5E24Ch,	31331h,	20h, 5E24Ch, 31363h
dd 20h,	5E24Ch,	31381h,	20h, 5E24Ch, 313CFh, 20h, 5E24Ch
dd 313EAh, 20h,	5E24Ch,	31414h,	20h, 5E24Ch, 31455h, 20h
dd 5E24Ch, 3149Dh, 20h,	5E24Ch,	314C1h,	20h, 5E24Ch, 314F5h
dd 20h,	5E24Ch,	3150Eh,	20h, 5E24Ch, 31529h, 20h, 5E24Ch
dd 31664h, 20h,	5E24Ch,	316D1h,	20h, 5E24Ch, 316E1h, 20h
dd 5E24Ch, 316FDh, 20h,	5E24Ch,	3173Ah,	20h, 5E24Ch, 31756h
dd 20h,	5E24Ch,	3177Ch,	20h, 5E24Ch, 317AEh, 20h, 5E24Ch
dd 317D1h, 20h,	5E24Ch,	3180Eh,	20h, 5E24Ch, 3182Bh, 20h
dd 5E24Ch, 3193Bh, 20h,	5E24Ch,	31959h,	20h, 5E24Ch, 31969h
dd 20h,	5E24Ch,	3198Ah,	20h, 5E24Ch, 31BFCh, 20h, 5E24Ch
dd 31C1Ch, 20h,	5E24Ch,	31CDDh,	20h, 5E24Ch, 31D5Eh, 20h
dd 5E24Ch, 31E1Fh, 20h,	5E24Ch,	31F4Ah,	20h, 5E24Ch, 31F8Ch
dd 20h,	5E24Ch,	3214Ah,	20h, 5E24Ch, 3238Ch, 20h, 5E24Ch
dd 32416h, 20h,	5E24Ch,	32450h,	20h, 5E24Ch, 3248Bh, 20h
dd 5E24Ch, 324CCh, 20h,	5E24Ch,	32509h,	20h, 5E24Ch, 325BDh
dd 20h,	5E24Ch,	32655h,	20h, 5E24Ch, 328FFh, 20h, 5E24Ch
dd 3293Ch, 20h,	5E24Ch,	3297Ah,	20h, 5E24Ch, 329D8h, 20h
dd 5E24Ch, 32A0Fh, 20h,	5E24Ch,	32AB2h,	20h, 5E24Ch, 32E7Fh
dd 20h,	5E24Ch,	32F36h,	20h, 5E24Ch, 32F86h, 20h, 5E24Ch
dd 332C2h, 20h,	5E24Ch,	33464h,	20h, 5E24Ch, 335CAh, 20h
dd 5E24Ch, 335E2h, 20h,	5E24Ch,	336F4h,	20h, 5E24Ch, 33A37h
dd 20h,	5E24Ch,	33A5Ch,	20h, 5E24Ch, 33A94h, 20h, 5E24Ch
dd 33B93h, 20h,	5E24Ch,	33C18h,	20h, 5E24Ch, 33CD2h, 20h
dd 5E24Ch, 33D38h, 20h,	5E24Ch,	33D70h,	20h, 5E24Ch, 33E29h
dd 20h,	5E24Ch,	33F34h,	20h, 5E24Ch, 33F52h, 20h, 5E24Ch
dd 33F72h, 20h,	5E24Ch,	33F92h,	20h, 5E24Ch, 3403Dh, 20h
dd 5E24Ch, 340C7h, 20h,	5E24Ch,	34107h,	20h, 5E24Ch, 3412Eh
dd 20h,	5E24Ch,	34153h,	20h, 5E24Ch, 3418Eh, 20h, 5E24Ch
dd 341B3h, 20h,	5E24Ch,	341F7h,	20h, 5E24Ch, 34223h, 20h
dd 5E24Ch, 34284h, 20h,	5E24Ch,	342A2h,	20h, 5E24Ch, 342C2h
dd 20h,	5E24Ch,	3432Ch,	20h, 5E24Ch, 34360h, 20h, 5E24Ch
dd 343F5h, 20h,	5E24Ch,	3467Bh,	20h, 5E24Ch, 34697h, 20h
dd 5E24Ch, 346CCh, 20h,	5E24Ch,	34714h,	20h, 5E24Ch, 347BCh
dd 20h,	5E24Ch,	347DAh,	20h, 5E24Ch, 3483Ch, 20h, 5E24Ch
dd 34932h, 20h,	5E24Ch,	34998h,	20h, 5E24Ch, 34A22h, 20h
dd 5E24Ch, 34A42h, 20h,	5E24Ch,	34B53h,	20h, 5E24Ch, 34BEAh
dd 20h,	5E24Ch,	34C05h,	20h, 5E24Ch, 34C2Dh, 20h, 5E24Ch
dd 34C4Ah, 20h,	5E24Ch,	34C68h,	20h, 5E24Ch, 34CA0h, 20h
dd 5E24Ch, 34CB4h, 20h,	5E24Ch,	34CD0h,	20h, 5E24Ch, 34CF8h
dd 20h,	5E24Ch,	34DA8h,	20h, 5E24Ch, 34F53h, 20h, 5E24Ch
dd 34FB1h, 20h,	5E24Ch,	3501Ch,	20h, 5E24Ch, 35069h, 20h
dd 5E24Ch, 3512Ah, 20h,	5E24Ch,	35149h,	20h, 5E24Ch, 35171h
dd 20h,	5E24Ch,	35192h,	20h, 5E24Ch, 351A8h, 20h, 5E24Ch
dd 351F4h, 20h,	5E24Ch,	35214h,	20h, 5E24Ch, 3522Eh, 20h
dd 5E24Ch, 3527Bh, 20h,	5E24Ch,	35561h,	20h, 5E24Ch, 355DCh
dd 20h,	5E24Ch,	35607h,	20h, 5E24Ch, 3569Dh, 20h, 5E24Ch
dd 356BAh, 20h,	5E24Ch,	356DDh,	20h, 5E24Ch, 35744h, 20h
dd 5E24Ch, 3576Ch, 20h,	5E24Ch,	358BBh,	20h, 5E24Ch, 35906h
dd 20h,	5E24Ch,	35944h,	20h, 5E24Ch, 3597Ch, 20h, 5E24Ch
dd 359A4h, 20h,	5E24Ch,	35A42h,	20h, 5E24Ch, 35A78h, 20h
dd 5E24Ch, 35A8Dh, 20h,	5E24Ch,	35AA0h,	20h, 5E24Ch, 35AE7h
dd 20h,	5E24Ch,	35B0Fh,	20h, 5E24Ch, 35C57h, 20h, 5E24Ch
dd 35C8Ch, 20h,	5E24Ch,	35D11h,	20h, 5E24Ch, 35D3Fh, 20h
dd 5E24Ch, 35DBAh, 20h,	5E24Ch,	35DD6h,	20h, 5E24Ch, 35DECh
dd 20h,	5E24Ch,	35E24h,	20h, 5E24Ch, 35E3Dh, 20h, 5E24Ch
dd 35E81h, 20h,	5E24Ch,	35EAEh,	20h, 5E24Ch, 36016h, 20h
dd 5E24Ch, 3612Ah, 20h,	5E24Ch,	36260h,	20h, 5E24Ch, 36298h
dd 20h,	5E24Ch,	362B4h,	20h, 5E24Ch, 363C4h, 20h, 5E24Ch
dd 364D0h, 20h,	5E24Ch,	365A7h,	20h, 5E24Ch, 36618h, 20h
dd 5E24Ch, 36823h, 20h,	5E24Ch,	36AF9h,	20h, 5E24Ch, 36FF4h
dd 20h,	5E24Ch,	374F0h,	20h, 5E24Ch, 37534h, 20h, 5E24Ch
dd 3754Eh, 20h,	5E24Ch,	375C0h,	20h, 5E24Ch, 375F8h, 20h
dd 5E24Ch, 37619h, 20h,	5E24Ch,	37787h,	20h
			
align 800h
assume cs:_eh_frame

dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFB5FE0h
dd 53h,	80E4100h, 0E430283h, 0E4D0220h,	0EC34108h, 4, 34h
dd 40h,	0FFFB601Ch, 0F2h, 300E4300h, 48048344h,	87480386h
dd 240E5902h, 6E300E43h, 0C3C6C70Ah, 0B43040Eh,	43240E7Ah
dd 0E5E300Eh, 300E4324h, 14h, 78h, 0FFFB60E4h, 28h, 200E4300h
dd 40E64h, 14h,	90h, 0FFFB60FCh, 23h, 200E4300h, 40E5Fh
			
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFB60FCh
dd 8Bh,	80E4100h, 0D420285h, 0A780205h,	4040CC5h, 0B41h
dd 20h,	40h, 0FFFB6164h, 43h, 80E4100h,	0D420285h, 0C50A7505h
dd 4404040Ch, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFB616Ch
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 80h, 38h, 0FFFB6174h
dd 429h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A022703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B46040Eh, 0E0A7B02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 730B4104h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0A93020Bh, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 3Ch
dd 0BCh, 0FFFB651Ch, 1BDh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A015C03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 3Ch
dd 0FCh, 0FFFB669Ch, 156h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0A012E03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 20h
dd 13Ch, 0FFFB67B4h, 4Dh, 80E4100h, 0E430283h, 0E0A7E30h
dd 0EC34108h, 0B4504h, 3Ch, 160h, 0FFFB67E0h, 18Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0A017003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 44h, 1A0h, 0FFFB692Ch, 9Fh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A6Fh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A560B44h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 44h, 1E8h, 0FFFB6984h, 74h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A43h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A530B48h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 34h, 230h, 0FFFB69B0h
dd 0B9h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AA6h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 34h
dd 268h, 0FFFB6A34h, 0D0h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0ABDh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B45h, 18h, 2A0h, 0FFFB6ACCh, 41h,	300E4300h
dd 40E0A78h, 0B41h, 38h, 2BCh, 0FFFB6AF4h, 6Eh,	80E4100h
dd 0E410286h, 4303830Ch, 0A6F300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B42040Eh, 0C0E0A6Ah, 80EC341h, 40EC641h, 0B45h, 3Ch
dd 2F8h, 0FFFB6B28h, 144h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A013303h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFB6C14h
dd 40h,	200E4300h, 40E0A6Eh, 0B43h, 34h, 38h, 0FFFB6C38h
dd 0FEh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AEFh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 3Ch
dd 70h,	0FFFB6D00h, 4DCh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0A00E4605h, 0A4F0201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 2Ch
dd 0B0h, 0FFFB719Ch, 5Dh, 80E4100h, 0E410286h, 4303830Ch
dd 5002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 20h
dd 0E0h, 0FFFB71CCh, 55h, 80E4100h, 0E430283h, 0A460230h
dd 0C341080Eh, 0B45040Eh, 3Ch, 104h, 0FFFB7200h, 107h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AB302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 2Ch, 144h, 0FFFB72C8h, 63h, 80E4100h
dd 0E410286h, 4303830Ch, 5602300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	174h, 0FFFB72FCh, 23Fh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A4602h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 58h, 1B4h, 0FFFB74FCh, 1C6h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AE3h, 0C0EC341h
dd 80EC641h, 40EC741h, 8A020B48h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 43040EC7h, 0E0A530Bh, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4604h, 54h, 210h, 0FFFB7668h, 11Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A9602h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4704h, 140E0A57h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 2Ch, 268h, 0FFFB7730h, 13Fh, 80E4100h
dd 0E410286h, 4303830Ch, 0B002300Eh, 410C0E0Ah,	41080EC3h
dd 41040EC6h, 0Bh, 2Ch,	298h, 0FFFB7840h, 12Fh,	80E4100h
dd 0E410286h, 4303830Ch, 9B02300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 2Ch,	2C8h, 0FFFB7940h, 111h,	80E4100h
dd 0E410286h, 4303830Ch, 8802300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	2F8h, 0FFFB7A24h, 45h, 300E4300h
dd 40E0A7Ch, 0B41h, 18h, 314h, 0FFFB7A50h, 3Dh,	300E4300h
dd 40E0A74h, 0B41h, 2Ch, 330h, 0FFFB7A74h, 79h,	80E4100h
dd 0E410286h, 4303830Ch, 6C02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	360h, 0FFFB7AC0h, 3Ah, 300E4300h
dd 40E0A71h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFB7AC8h
dd 4Ch,	200E4300h, 40E0A7Bh, 0B42h, 2Ch, 38h, 0FFFB7AF8h
dd 5Dh,	80E4100h, 0E410286h, 4303830Ch,	5002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 68h,	0FFFB7B28h, 61h
dd 80E4100h, 0E430283h,	0A560230h, 0C341080Eh, 0B41040Eh
dd 20h,	8Ch, 0FFFB7B68h, 0E4h, 80E4100h, 0E430283h, 0AAD0230h
dd 0C341080Eh, 0B42040Eh, 3Ch, 0B0h, 0FFFB7C28h, 0B7h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A9502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 0F0h, 0FFFB7CA0h, 152h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A8902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 3Ch, 130h, 0FFFB7DB4h, 1F7h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0AD102h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 34h,	170h, 0FFFB7F6Ch, 7Dh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 7E200E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0Bh, 3Ch,	1A8h, 0FFFB7FB4h, 0B1h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A8102h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 40h, 1E8h, 0FFFB8028h, 4FCh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0B00E4605h, 1EE0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h
dd 0Bh,	20h, 22Ch, 0FFFB84E0h, 92h, 80E4100h, 0E430283h
dd 0A5E0230h, 0C341080Eh, 0B41040Eh, 20h, 250h,	0FFFB8550h
dd 5Dh,	80E4100h, 0E430283h, 0A4E0240h,	0C341080Eh, 0B45040Eh
dd 54h,	274h, 0FFFB858Ch, 122h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9B02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4604h, 140E0A57h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 18h
dd 2CCh, 0FFFB8658h, 49h, 300E4300h, 0E0A4002h,	0B4104h
dd 48h,	2E8h, 0FFFB8688h, 120h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0AC2h, 0C0EC341h, 80EC641h
dd 40EC741h, 40020B41h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 45040EC7h, 0Bh, 3Ch,	334h, 0FFFB875Ch, 165h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A010C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 18h, 374h, 0FFFB8884h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFB8878h
dd 3Bh,	80E4100h, 0E430283h, 0E0A7030h,	0EC34108h, 0B4104h
dd 2Ch,	40h, 0FFFB8890h, 68h, 80E4100h,	0E410286h, 4303830Ch
dd 5B02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 40h
dd 70h,	0FFFB88C8h, 3C2h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 3380301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 3Ch
dd 0B4h, 0FFFB8C48h, 185h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0A013903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch
dd 0F4h, 0FFFB8D90h, 467h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A013C03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h
dd 134h, 0FFFB91B8h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFB91ACh
dd 5Dh,	80E4100h, 0E410286h, 4303830Ch,	5002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch,	0FFFB91DCh, 18Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0A013A03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 3Ch, 8Ch, 0FFFB9328h,	178h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 0A700201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 2Ch, 0CCh, 0FFFB9460h, 76h, 80E4100h, 0E410286h
dd 4303830Ch, 6502300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0Bh,	18h, 0FCh, 0FFFB94A8h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFB949Ch
dd 2DAh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A025D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 3Ch, 5Ch, 0FFFB9738h,	0C7h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AB202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 3Ch, 9Ch, 0FFFB97C0h, 2D2h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0AA402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	0DCh, 0FFFB9A54h, 221h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A020903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch
dd 11Ch, 0FFFB9C38h, 3F6h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8A02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 15Ch
dd 0FFFB9FF0h, 18Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0AE102h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4404h, 3Ch, 19Ch, 0FFFBA140h
dd 29Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A018603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 2Ch, 1DCh, 0FFFBA39Ch, 0A7h
dd 80E4100h, 0E410287h,	4303830Ch, 9602300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC7h, 0Bh, 20h, 20Ch, 0FFFBA414h, 3Fh
dd 80E4100h, 0E430283h,	0E0A7430h, 0EC34108h, 0B4104h
dd 18h,	230h, 0FFFBA430h, 32h, 200E4300h, 40E0A69h, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFBA430h
dd 3Ch,	80E4100h, 0E430283h, 0E0A6D30h,	0EC34108h, 0B4504h
dd 18h,	40h, 0FFFBA448h, 30h, 200E4300h, 40E0A63h, 0B45h
dd 84h,	5Ch, 0FFFBA45Ch, 4BAh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 0AB00201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 0E0A9102h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 530B4704h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 2EE030Bh, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 46040EC5h, 0Bh, 3Ch,	0E4h, 0FFFBA890h, 1A8h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A019303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 3Ch, 124h, 0FFFBA9F8h, 4FDh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A027A03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 2Ch,	164h, 0FFFBAEB8h, 65h, 80E4100h, 0E410286h, 4303830Ch
dd 5802300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 194h, 0FFFBAEF0h, 0DBh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AC602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 2Ch, 1D4h
dd 0FFFBAF8Ch, 61h, 80E4100h, 0E410286h, 4303830Ch, 5402300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 54h, 204h, 0FFFBAFC0h
dd 166h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A4E0201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 0E0AFC02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 18h, 25Ch, 0FFFBB0D0h
dd 38h,	200E4300h, 40E0A6Bh, 0B45h, 20h, 278h, 0FFFBB0ECh
dd 6Ah,	80E4100h, 0E430283h, 0A5F0230h,	0C341080Eh, 0B41040Eh
dd 1Ch,	29Ch, 0FFFBB134h, 47h, 200E4300h, 40E0A67h, 0A510B46h
dd 0B41040Eh, 3Ch, 2BCh, 0FFFBB15Ch, 0F0h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A5002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	2FCh, 0FFFBB20Ch, 13Fh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A012A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 2Ch
dd 33Ch, 0FFFBB30Ch, 11Bh, 80E4100h, 0E410286h,	4303830Ch
dd 0F002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h,	0Bh, 20h
dd 36Ch, 0FFFBB3F8h, 0D4h, 80E4100h, 0E430283h,	0E0A7920h
dd 0EC34108h, 0B4204h, 38h, 390h, 0FFFBB4A8h, 14Eh, 80E4100h
dd 0E410286h, 4303830Ch, 0BF02400Eh, 410C0E0Ah,	41080EC3h
dd 46040EC6h, 0A6C020Bh, 0C3410C0Eh, 0C641080Eh, 0B42040Eh
dd 44h,	3CCh, 0FFFBB5BCh, 0C0h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 6F300E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 44040EC7h, 0A77020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B45040Eh, 34h, 414h, 0FFFBB634h, 0F8h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	6F300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 44040EC7h, 0Bh, 2Ch, 44Ch, 0FFFBB6F4h, 8Dh
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 2Ch, 47Ch, 0FFFBB754h, 8Dh
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 3Ch, 4ACh, 0FFFBB7B4h, 78h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 4ECh, 0FFFBB7ECh, 3A0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A02FF03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 2Ch, 52Ch, 0FFFBBB4Ch, 82h, 80E4100h, 0E430283h
dd 0A440230h, 0C341080Eh, 0B47040Eh, 80E0A6Bh, 40EC341h
dd 0B41h, 34h, 55Ch, 0FFFBBBA0h, 0A5h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0A5Fh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B44h, 3Ch, 594h, 0FFFBBC10h, 10Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AD902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 38h, 5D4h, 0FFFBBCDCh, 96h, 80E4100h
dd 0E410286h, 4303830Ch, 4702300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0E0A7A0Bh, 0EC3410Ch, 0EC64108h, 0B4504h
dd 38h,	610h, 0FFFBBD38h, 93h, 80E4100h, 0E410286h, 4303830Ch
dd 4702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A770Bh
dd 0EC3410Ch, 0EC64108h, 0B4504h, 34h, 64Ch, 0FFFBBD90h
dd 6Fh,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A55h, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 54h
dd 684h, 0FFFBBDC8h, 2CEh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 140E0A67h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0E9020B42h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 47040EC5h, 0Bh, 2Ch
dd 6DCh, 0FFFBC040h, 88h, 80E4100h, 0E410286h, 4303830Ch
dd 7B02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 34h
dd 70Ch, 0FFFBC098h, 0DAh, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A46h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 40h, 744h, 0FFFBC13Ch, 9E6h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 2730301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 3Ch,	788h, 0FFFBCAE0h, 1ACh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A7D02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 3Ch, 7C8h, 0FFFBCC4Ch, 21Dh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A6C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 68h
dd 808h, 0FFFBCE2Ch, 159h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4604h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0AA7020Bh
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 3Ch,	874h, 0FFFBCF1Ch, 0D4h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 1Ch, 8B4h
dd 0FFFBCFB0h, 51h, 300E4300h, 40E0A72h, 0A4F0B47h, 0B41040Eh
dd 54h,	8D4h, 0FFFBCFE4h, 29Eh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A01E003h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 140E0A6Bh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 3Ch
dd 92Ch, 0FFFBD22Ch, 22Dh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0A013903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 20h
dd 96Ch, 0FFFBD41Ch, 57h, 80E4100h, 0E430283h, 0A4C0230h
dd 0C341080Eh, 0B41040Eh, 34h, 990h, 0FFFBD450h, 5Eh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Bh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 40h, 9C8h, 0FFFBD478h
dd 282h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 2480301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 20h, 0A0Ch, 0FFFBD6B8h, 7Eh
dd 80E4100h, 0E430283h,	0A6F0230h, 0C341080Eh, 0B45040Eh
dd 34h,	0A30h, 0FFFBD714h, 61h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A52h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 3Ch, 0A68h,	0FFFBD740h, 348h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0A019B03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 40h, 0AA8h, 0FFFBDA48h, 14Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 13E0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	18h, 0AECh, 0FFFBDB54h,	31h, 200E4300h,	40E0A68h
dd 0B41h, 34h, 0B08h, 0FFFBDB6Ch, 0E4h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A51h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B42h, 3Ch, 0B40h, 0FFFBDC18h, 2A6h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A013303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B46040Eh, 3Ch, 0B80h, 0FFFBDE80h, 252h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A018F03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 44h, 0BC0h, 0FFFBE094h, 0ACh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A64h, 0C0EC341h, 80EC641h, 40EC741h, 0A6F0B47h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 2Ch
dd 0C08h, 0FFFBE0F8h, 74h, 80E4100h, 0E430283h,	0E0A7E30h
dd 0EC34108h, 650B4504h, 41080E0Ah, 41040EC3h, 0Bh, 34h
dd 0C38h, 0FFFBE13Ch, 62h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A4Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFBE150h
dd 127h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 2Ch, 5Ch, 0FFFBE238h, 58h, 80E4100h
dd 0E410286h, 4303830Ch, 4B02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 2Ch,	8Ch, 0FFFBE260h, 78h, 80E4100h
dd 0E410286h, 4303830Ch, 5C02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	0BCh, 0FFFBE2A8h, 46h, 200E4300h
dd 40E0A79h, 0B45h, 2Ch, 0D8h, 0FFFBE2D4h, 0ABh, 80E4100h
dd 0E410286h, 4303830Ch, 5E02400Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0Bh, 3Ch,	108h, 0FFFBE350h, 209h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A011603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 48h, 148h, 0FFFBE51Ch, 0FBh, 80E4100h, 0E410286h
dd 4303830Ch, 5202300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h
dd 0E0A610Bh, 0EC3410Ch, 0EC64108h, 20B4104h, 0C0E0A6Bh
dd 80EC341h, 40EC641h, 0B45h, 3Ch, 194h, 0FFFBE5CCh, 90h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A4402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 54h, 1D4h, 0FFFBE61Ch, 282h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A4002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 30B4104h, 0E0A0162h,	0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4604h, 34h, 22Ch, 0FFFBE848h, 136h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 7F300E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 44040EC7h, 0Bh, 2Ch, 264h, 0FFFBE948h
dd 0A4h, 80E4100h, 0E430283h, 0E0A6340h, 0EC34108h, 20B4404h
dd 80E0A6Dh, 40EC341h, 0B45h, 38h, 294h, 0FFFBE9BCh, 19Ah
dd 80E4100h, 0E410286h,	4303830Ch, 9102400Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0A42020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B44040Eh, 54h, 2D0h, 0FFFBEB1Ch, 457h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0A6302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4204h
dd 0E0A0258h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4804h, 18h, 328h, 0FFFBEF1Ch, 3Ah,	200E4300h, 40E0A71h
dd 0B41h, 58h, 344h, 0FFFBEF3Ch, 20Eh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	3400E43h, 0E0A014Dh, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 7A0B4204h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 47040EC7h, 0A65020Bh, 0C341100Eh,	0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 48h, 3A0h, 0FFFBF0F0h, 0BAh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A56h, 0C0EC341h, 80EC641h, 40EC741h, 49020B45h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 45040EC7h, 0Bh, 20h
dd 3ECh, 0FFFBF160h, 47h, 80E4100h, 0E430283h, 0E0A7830h
dd 0EC34108h, 0B4504h, 40h, 410h, 0FFFBF184h, 4D3h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0E00E4605h
dd 10B0308h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 43040EC5h, 0Bh, 18h,	454h, 0FFFBF614h, 2Ch, 200E4300h
dd 40E0A5Fh, 0B45h, 18h, 470h, 0FFFBF624h, 2Ch,	200E4300h
dd 40E0A5Fh, 0B45h, 2Ch, 48Ch, 0FFFBF634h, 9Eh,	80E4100h
dd 0E410286h, 4303830Ch, 7302300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 18h,	4BCh, 0FFFBF6A4h, 3Ah, 300E4300h
dd 40E0A71h, 0B41h, 34h, 4D8h, 0FFFBF6C4h, 1A9h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 3500E43h, 0E0A0164h
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4304h, 34h, 510h
dd 0FFFBF838h, 0FEh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0AC0h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B47h, 18h, 548h, 0FFFBF900h, 2Ah, 200E4300h, 40E0A61h
dd 0B41h, 1Ch, 564h, 0FFFBF910h, 4Ch, 200E4300h, 40E0A65h
dd 0A560B44h, 0B45040Eh, 20h, 584h, 0FFFBF93Ch,	40h, 80E4100h
dd 0E430283h, 0E0A7130h, 0EC34108h, 0B4504h, 18h, 5A8h
dd 0FFFBF958h, 32h, 200E4300h, 40E0A65h, 0B45h,	20h, 5C4h
dd 0FFFBF970h, 68h, 300E4300h, 0E0A4402h, 560B4104h, 45040E0Ah
dd 0Bh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFBF99Ch
dd 76h,	400E4300h, 0E0A6D02h, 0B4104h, 18h, 38h, 0FFFBF9F8h
dd 3Ch,	200E4300h, 40E0A6Fh, 0B45h, 34h, 54h, 0FFFBFA18h
dd 84h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A75h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 2Ch
dd 8Ch,	0FFFBFA64h, 67h, 80E4100h, 0E410286h, 4303830Ch
dd 5A02400Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 20h
dd 0BCh, 0FFFBFA9Ch, 4Ah, 80E4100h, 0E430283h, 0E0A7F30h
dd 0EC34108h, 0B4104h, 34h, 0E0h, 0FFFBFAC4h, 61h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Eh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 2Ch, 118h, 0FFFBFAF0h
dd 9Ch,	80E4100h, 0E410286h, 4303830Ch,	8F02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 34h, 148h, 0FFFBFB5Ch, 8Dh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A7Eh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 54h
dd 180h, 0FFFBFBB4h, 1BDh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A019303h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh, 140E0A4Fh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 28h
dd 1D8h, 0FFFBFD1Ch, 77h, 80E4100h, 0E410286h, 4303830Ch
dd 0A78300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 18h, 204h
dd 0FFFBFD68h, 53h, 400E4300h, 40E0A61h, 0B44h,	2Ch, 220h
dd 0FFFBFDA0h, 81h, 80E4100h, 0E430283h, 0E0A6F30h, 0EC34108h
dd 7E0B4404h, 41080E0Ah, 45040EC3h, 0Bh, 38h, 250h, 0FFFBFDF4h
dd 0FFh, 80E4100h, 0E410286h, 4303830Ch, 0DA02300Eh, 410C0E0Ah
dd 41080EC3h, 47040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 20h, 28Ch, 0FFFBFEB8h, 0B0h, 80E4100h, 0E430283h
dd 0E0A6D30h, 0EC34108h, 0B4204h, 18h, 2B0h, 0FFFBFF44h
dd 44h,	300E4300h, 40E0A7Bh, 0B41h, 28h, 2CCh, 0FFFBFF6Ch
dd 9Bh,	80E4100h, 0E410286h, 4303830Ch,	0A77300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B42040Eh, 54h, 2F8h, 0FFFBFFDCh, 1E9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0A010503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B48040Eh, 0E0AC302h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 3Ch, 350h, 0FFFC0170h
dd 448h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A020803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 390h, 0FFFC0578h, 78h, 300E4300h
dd 0E0A6F02h, 0B4104h, 34h, 3ACh, 0FFFC05D4h, 0AFh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A77h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B44h, 3Ch, 3E4h, 0FFFC064Ch
dd 4D9h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AD602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 3Ch, 424h, 0FFFC0AE8h, 22Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A016A03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 40h, 464h, 0FFFC0CD4h, 442h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 900E4305h, 41F0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	3Ch, 4A8h, 0FFFC10D4h, 266h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0AC802h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	4E8h, 0FFFC12FCh, 113h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AC802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 20h, 528h
dd 0FFFC13D0h, 45h, 80E4100h, 0E430283h, 0E0A6830h, 0EC34108h
dd 0B4304h, 34h, 54Ch, 0FFFC13F4h, 94h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A85h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFC1438h
dd 36h,	200E4300h, 40E0A6Dh, 0B41h, 20h, 38h, 0FFFC1454h
dd 46h,	80E4100h, 0E430283h, 0E0A7730h,	0EC34108h, 0B4504h
dd 2Ch,	5Ch, 0FFFC1478h, 71h, 80E4100h,	0E410286h, 4303830Ch
dd 4302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 20h
dd 8Ch,	0FFFC14BCh, 52h, 80E4100h, 0E430283h, 0A470230h
dd 0C341080Eh, 0B41040Eh, 54h, 0B0h, 0FFFC14ECh, 2D5h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A016903h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 0E0AAB02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 34h, 108h, 0FFFC176Ch
dd 0CAh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AB7h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 34h
dd 140h, 0FFFC1800h, 0B2h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A9Fh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B45h, 34h, 178h, 0FFFC187Ch, 57h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A44h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 48h, 1B0h, 0FFFC189Ch
dd 143h, 80E4100h, 0E410286h, 4303830Ch, 0AA02400Eh, 410C0E0Ah
dd 41080EC3h, 47040EC6h, 0A6C020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B46040Eh, 0C0E0A4Fh, 80EC341h, 40EC641h, 0B41h, 44h
dd 1FCh, 0FFFC1994h, 0CFh, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 6E400E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0A8A020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B45040Eh, 2Ch, 244h, 0FFFC1A1Ch, 129h, 80E4100h, 0E410286h
dd 4303830Ch, 1C03300Eh, 0C0E0A01h, 80EC341h, 40EC641h
dd 0B41h, 34h, 274h, 0FFFC1B18h, 120h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	3300E43h, 0E0A0111h, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 0B4104h, 2Ch, 2ACh, 0FFFC1C00h
dd 0BDh, 80E4100h, 0E410286h, 4303830Ch, 6B02400Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 68h, 2DCh, 0FFFC1C90h, 248h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AC402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 530B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0AC5020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 54h, 348h, 0FFFC1E6Ch
dd 239h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AC402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0ADFh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 34h, 3A0h, 0FFFC2050h, 65h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A56h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 3D8h, 0FFFC2080h, 42h, 300E4300h, 40E0A79h, 0B41h, 54h
dd 3F4h, 0FFFC20A8h, 1C4h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A013703h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh, 140E0A4Fh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 54h
dd 44Ch, 0FFFC2214h, 1C4h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A013703h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh, 140E0A4Fh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 2Ch
dd 4A4h, 0FFFC2380h, 65h, 80E4100h, 0E410286h, 4303830Ch
dd 5102300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 54h
dd 4D4h, 0FFFC23B8h, 23Ah, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A013A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 0E0AAF02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 2Ch,	52Ch, 0FFFC259Ch, 6Dh, 80E4100h, 0E410286h, 4303830Ch
dd 5C02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 55Ch, 0FFFC25DCh, 52Bh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	0A00E4605h, 0A730201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 6Ch
dd 59Ch, 0FFFC2AC8h, 326h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A012A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh, 0E0A9B02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4504h
dd 140E0A47h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 2Ch, 60Ch, 0FFFC2D80h, 61h, 80E4100h,	0E410286h
dd 4303830Ch, 5002300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0Bh,	20h, 63Ch, 0FFFC2DB4h, 7Eh, 80E4100h, 0E430283h
dd 0A6F0230h, 0C341080Eh, 0B45040Eh, 20h, 660h,	0FFFC2E10h
dd 41h,	80E4100h, 0E430283h, 0E0A7230h,	0EC34108h, 0B4504h
dd 38h,	684h, 0FFFC2E30h, 0A1h,	80E4100h, 0E410286h, 4303830Ch
dd 5902300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A6D0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 48h, 6C0h, 0FFFC2E98h
dd 149h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2400E43h
dd 100E0AAFh, 0C0EC341h, 80EC641h, 40EC741h, 80020B48h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 44h
dd 70Ch, 0FFFC2F98h, 0FCh, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0AD5h, 0C0EC341h, 80EC641h
dd 40EC741h, 0A4F0B46h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B41040Eh, 38h, 754h, 0FFFC304Ch, 0BFh, 80E4100h, 0E410286h
dd 4303830Ch, 9902300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h
dd 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 34h, 790h
dd 0FFFC30D0h, 9Eh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A7Ch,	0C0EC341h, 80EC641h, 40EC741h
dd 0B47h, 38h, 7C8h, 0FFFC3138h, 6Bh, 80E4100h,	0E410286h
dd 4303830Ch, 4602300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h
dd 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 34h, 804h
dd 0FFFC3168h, 150h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2400E43h, 100E0AEDh,	0C0EC341h, 80EC641h, 40EC741h
dd 0B42h, 3Ch, 83Ch, 0FFFC3280h, 0D6h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0AC102h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 20h,	87Ch, 0FFFC3318h, 59h, 80E4100h, 0E430283h, 0A4E0230h
dd 0C341080Eh, 0B41040Eh, 18h, 8A0h, 0FFFC3350h, 45h, 300E4300h
dd 40E0A7Ch, 0B41h, 40h, 8BCh, 0FFFC337Ch, 222h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 2020301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 43040EC5h, 0Bh, 38h,	900h, 0FFFC355Ch, 72h, 80E4100h
dd 0E410286h, 4303830Ch, 4202300Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0E0A5A0Bh, 0EC3410Ch, 0EC64108h, 0B4504h
dd 3Ch,	93Ch, 0FFFC3594h, 6Fh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5A02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 18h, 97Ch
dd 0FFFC35C4h, 3Bh, 200E4300h, 40E0A6Eh, 0B45h,	3Ch, 998h
dd 0FFFC35E4h, 159h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0A012503h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch, 9D8h, 0FFFC3700h
dd 12Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AF902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 34h, 0A18h, 0FFFC37F0h, 0D9h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0ACAh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 0A50h, 0FFFC3894h
dd 145h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A013003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 0A90h, 0FFFC399Ch, 0D9h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0ACAh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 0AC8h, 0FFFC3A40h, 0CEh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0ABBh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B45h, 34h, 0B00h,	0FFFC3AD8h, 0B3h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A97h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B44h, 18h, 0B38h, 0FFFC3B54h
dd 33h,	200E4300h, 40E0A66h, 0B45h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFC3B54h
dd 51h,	80E4100h, 0E430283h, 0A420230h,	0C341080Eh, 0B45040Eh
dd 3Ch,	40h, 0FFFC3B84h, 168h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0D00E4605h, 0A730202h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 3Ch
dd 80h,	0FFFC3CACh, 177h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0ACF02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 1Ch, 0C0h
dd 0FFFC3DE4h, 61h, 300E4300h, 40E0A67h, 0A6B0B46h, 0B41040Eh
dd 18h,	0E0h, 0FFFC3E28h, 51h, 300E4300h, 40E0A65h, 0B44h
dd 18h,	0FCh, 0FFFC3E60h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	118h, 0FFFC3E98h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	134h, 0FFFC3ED0h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 34h,	150h, 0FFFC3F08h, 0D5h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0AA3h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 34h, 188h, 0FFFC3FA8h, 0D9h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A8Ah
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 54h, 1C0h, 0FFFC404Ch
dd 17Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A010A03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B47040Eh, 140E0A67h, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 20h, 218h, 0FFFC4174h, 52h
dd 80E4100h, 0E430283h,	0A470230h, 0C341080Eh, 0B41040Eh
dd 20h,	23Ch, 0FFFC41A4h, 52h, 80E4100h, 0E430283h, 0A470230h
dd 0C341080Eh, 0B41040Eh, 3Ch, 260h, 0FFFC41D4h, 157h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AD502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4804h, 34h, 2A0h, 0FFFC42ECh, 0D5h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2500E43h, 100E0A5Bh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B44h, 2Ch, 2D8h, 0FFFC438Ch
dd 0BBh, 80E4100h, 0E410286h, 4303830Ch, 9002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 54h, 308h, 0FFFC4418h, 277h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0ADA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4704h,	140E0A9Bh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 3Ch, 360h, 0FFFC4638h, 12Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AB302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4604h, 18h, 3A0h, 0FFFC4724h, 0CEh, 300E4300h
dd 0E0AC502h, 0B4104h, 18h, 3BCh, 0FFFC47D8h, 7Ch, 300E4300h
dd 0E0A7302h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC4820h
dd 53Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4604h, 54h, 5Ch, 0FFFC4D20h, 252h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AC902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 30B4404h, 0E0A0156h,	0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4604h, 3Ch, 0B4h, 0FFFC4F1Ch, 1BCh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A017703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 3Ch, 0F4h, 0FFFC5098h, 35Ch, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A026203h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh
dd 34h,	134h, 0FFFC53B4h, 0ADh,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A9Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 44h, 16Ch, 0FFFC542Ch, 14Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0A5902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4404h, 416C0E4Ah,	700Eh, 3Ch, 1B4h, 0FFFC5530h, 144h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AE002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 6Ch, 1F4h, 0FFFC5634h, 39Dh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A4002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4104h, 140E0AB8h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0E8030B48h, 140E0A01h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B48h, 54h, 264h, 0FFFC5964h, 0E9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 140E0A76h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 97020B43h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 2Ch, 2BCh, 0FFFC59F8h, 0D9h
dd 80E4100h, 0E410286h,	4303830Ch, 0C802300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 54h, 2ECh, 0FFFC5AA4h, 142h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AF102h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 730B4804h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC5B78h
dd 207h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 140E0A7Bh, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B42h, 3Ch, 5Ch, 0FFFC5D40h, 18Eh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A5C02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 40h, 1Ch,	0FFFC5E78h
dd 540h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 3180301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 54h, 60h,	0FFFC6374h, 15Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A4402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4104h,	140E0AFCh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 44h, 0B8h, 0FFFC6478h, 0FDh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 79300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 42040EC7h, 0AAC020Bh
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC6518h
dd 56Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A03E003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 54h, 5Ch, 0FFFC6A44h,	14Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A5202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4304h, 140E0ABCh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B48h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 48h, 1Ch,	0FFFC6B24h
dd 0D2h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2400E43h
dd 100E0A65h, 0C0EC341h, 80EC641h, 40EC741h, 55020B46h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 20h
dd 68h,	0FFFC6BACh, 69h, 300E4300h, 0E0A4202h, 570B4304h
dd 45040E0Ah, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFC6BDCh
dd 0E5h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AB902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 4F0B4804h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 74h,	0FFFC6C6Ch, 1F0h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A016203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 0B4h, 0FFFC6E1Ch, 22Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A020F03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 0F4h, 0FFFC7008h, 1A7h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A018B03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFC7158h
dd 1F1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A01A903h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 140E0A6Bh, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 44h, 74h,	0FFFC72F4h, 8Ch
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A50h, 0C0EC341h, 80EC641h, 40EC741h, 0A5F0B47h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 44h
dd 0BCh, 0FFFC7338h, 14Ch, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0A5902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4404h, 416C0E4Ah
dd 700Eh, 28h, 104h, 0FFFC743Ch, 40h, 80E4100h,	0E410286h
dd 4303830Ch, 0A6F200Eh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh
dd 20h,	130h, 0FFFC7450h, 77h, 80E4100h, 0E430283h, 0A680230h
dd 0C341080Eh, 0B45040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFC748Ch
dd 2FBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A010703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B46040Eh, 3Ch, 5Ch, 0FFFC7748h,	157h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A010303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B46040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFC7848h
dd 55h,	200E4300h, 40E0A7Ah, 0A4F0B43h,	0B41040Eh, 2 dup(3Ch)
dd 0FFFC7880h, 0EAh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0AD902h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 7Ch, 0FFFC792Ch
dd 362h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A012603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 3Ch, 0BCh, 0FFFC7C50h, 0A6h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 3Ch, 0FCh, 0FFFC7CB8h, 0E9h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AAD02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 18h, 13Ch, 0FFFC7D64h, 2Ah,	200E4300h, 40E0A61h
dd 0B41h, 18h, 158h, 0FFFC7D74h, 29h, 200E4300h, 40E0A60h
dd 0B41h, 18h, 174h, 0FFFC7D84h, 2Ah, 200E4300h, 40E0A61h
dd 0B41h, 18h, 190h, 0FFFC7D94h, 2Ah, 200E4300h, 40E0A61h
dd 0B41h, 18h, 1ACh, 0FFFC7DA4h, 2Bh, 200E4300h, 40E0A62h
dd 0B41h, 18h, 1C8h, 0FFFC7DB4h, 2Ah, 200E4300h, 40E0A61h
dd 0B41h, 18h, 1E4h, 0FFFC7DC4h, 2Ah, 200E4300h, 40E0A61h
dd 0B41h, 1Ch, 200h, 0FFFC7DD4h, 5Dh, 200E4300h, 40E0A6Dh
dd 0A5F0B44h, 0B45040Eh, 18h, 220h, 0FFFC7E14h,	6Fh, 400E4300h
dd 0E0A6602h, 0B4104h, 18h, 23Ch, 0FFFC7E68h, 2Ah, 200E4300h
dd 40E0A61h, 0B41h, 18h, 258h, 0FFFC7E78h, 2Eh,	200E4300h
dd 40E0A65h, 0B41h, 18h, 274h, 0FFFC7E8Ch, 2Eh,	200E4300h
dd 40E0A65h, 0B41h, 18h, 290h, 0FFFC7EA0h, 2Eh,	200E4300h
dd 40E0A65h, 0B41h, 18h, 2ACh, 0FFFC7EB4h, 2Eh,	200E4300h
dd 40E0A65h, 0B41h, 18h, 2C8h, 0FFFC7EC8h, 2Eh,	200E4300h
dd 40E0A65h, 0B41h, 3Ch, 2E4h, 0FFFC7EDCh, 117h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0AEE02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 34h, 324h, 0FFFC7FB4h, 0D7h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AB0h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 48h, 35Ch, 0FFFC8054h, 0AFh
dd 80E4100h, 0E410286h,	4303830Ch, 4C02300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A670Bh, 0EC3410Ch, 0EC64108h
dd 5F0B4304h, 410C0E0Ah, 41080EC3h, 45040EC6h, 0Bh, 20h
dd 3A8h, 0FFFC80B8h, 0DEh, 80E4100h, 0E430283h,	0AC20230h
dd 0C341080Eh, 0B45040Eh, 2Ch, 3CCh, 0FFFC8174h, 77h, 80E4100h
dd 0E410286h, 4303830Ch, 6A02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	3FCh, 0FFFC81BCh, 1F3h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A01B103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 18h, 43Ch, 0FFFC8370h, 3Dh, 300E4300h, 40E0A74h
dd 0B41h, 18h, 458h, 0FFFC8394h, 3Dh, 300E4300h, 40E0A74h
dd 0B41h, 18h, 474h, 0FFFC83B8h, 0A4h, 300E4300h, 0E0A9B02h
dd 0B4104h, 18h, 490h, 0FFFC8440h, 51h,	300E4300h, 0E0A4802h
dd 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFC8460h
dd 3Ch,	80E4100h, 0E430283h, 0E0A6D30h,	0EC34108h, 0B4504h
dd 34h,	40h, 0FFFC8478h, 112h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A74h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 2Ch, 78h, 0FFFC8554h, 62h, 80E4100h
dd 0E410286h, 4303830Ch, 5502300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	0A8h, 0FFFC8588h, 36h, 200E4300h
dd 40E0A6Dh, 0B41h, 2Ch, 0C4h, 0FFFC85A4h, 7Dh,	80E4100h
dd 0E410286h, 4303830Ch, 5302300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 2Ch,	0F4h, 0FFFC85F4h, 7Ah, 80E4100h
dd 0E430283h, 0E0A7C30h, 0EC34108h, 6B0B4704h, 41080E0Ah
dd 41040EC3h, 0Bh, 38h,	124h, 0FFFC8640h, 0E3h,	80E4100h
dd 0E410286h, 4303830Ch, 0A202300Eh, 410C0E0Ah,	41080EC3h
dd 47040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 3Ch,	160h, 0FFFC86E8h, 14Bh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A4902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 54h, 1A0h
dd 0FFFC87F4h, 1AFh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 140E0A72h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0C030B43h, 140E0A01h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B48h, 54h, 1F8h, 0FFFC894Ch
dd 102h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 140E0A71h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0A0020B44h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 48040EC5h, 0Bh, 18h, 250h, 0FFFC89F8h, 3Bh
dd 200E4300h, 40E0A6Eh,	0B45h, 54h, 26Ch, 0FFFC8A18h, 707h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A010303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B46040Eh, 0A03FE03h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 20h, 2C4h, 0FFFC90C8h
dd 5Ah,	80E4100h, 0E430283h, 0A4B0230h,	0C341080Eh, 0B45040Eh
dd 2Ch,	2E8h, 0FFFC9100h, 0FCh,	80E4100h, 0E430283h, 0A820230h
dd 0C341080Eh, 0B45040Eh, 80E0A6Bh, 40EC341h, 0B44h, 2Ch
dd 318h, 0FFFC91CCh, 0FCh, 80E4100h, 0E430283h,	0A890230h
dd 0C341080Eh, 0B46040Eh, 80E0A6Bh, 40EC341h, 0B44h, 18h
dd 348h, 0FFFC9298h, 235h, 300E4300h, 0A022C03h, 0B41040Eh
dd 18h,	364h, 0FFFC94B4h, 51h, 300E4300h, 0E0A4802h, 0B4104h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFC94D4h
dd 4Ah,	80E4100h, 0E430283h, 0E0A7F30h,	0EC34108h, 0B4104h
dd 34h,	40h, 0FFFC94FCh, 94h, 80E4100h,	0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A7Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 3Ch, 78h, 0FFFC9558h, 1D8h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A015103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 3Ch, 0B8h, 0FFFC96F0h, 84h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A6402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	0F8h, 0FFFC9734h, 1CCh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A011103h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch
dd 138h, 0FFFC98C0h, 1D8h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A010903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 3Ch
dd 178h, 0FFFC9A58h, 138h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AEB02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 18h, 1B8h
dd 0FFFC9B50h, 44h, 300E4300h, 40E0A74h, 0B41h,	20h, 1D4h
dd 0FFFC9B78h, 58h, 80E4100h, 0E430283h, 0A420230h, 0C341080Eh
dd 0B41040Eh, 18h, 1F8h, 0FFFC9BACh, 44h, 300E4300h, 40E0A74h
dd 0B41h, 54h, 214h, 0FFFC9BD4h, 0C2h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 140E0A7Eh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 5A020B43h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 46040EC5h
dd 0Bh,	40h, 26Ch, 0FFFC9C40h, 1F8h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 1E70301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	54h, 2B0h, 0FFFC9DF4h, 188h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A011103h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B48040Eh
dd 0E0A5A02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 308h, 0FFFC9F24h, 1FFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A013303h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 34h,	348h, 0FFFCA0E4h, 0DAh,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0ACBh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 2Ch, 380h, 0FFFCA188h, 62h,	80E4100h
dd 0E410286h, 4303830Ch, 5502300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 3Ch,	3B0h, 0FFFCA1BCh, 2FFh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A022503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 54h, 3F0h, 0FFFCA47Ch, 1A9h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A014503h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 0E0A4702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 18h, 448h, 0FFFCA5D0h, 3Ch,	300E4300h, 40E0A73h
dd 0B41h, 20h, 464h, 0FFFCA5F0h, 7Ah, 80E4100h,	0E430283h
dd 0A6B0230h, 0C341080Eh, 0B45040Eh, 28h, 488h,	0FFFCA648h
dd 4Ah,	80E4100h, 0E410286h, 4303830Ch,	0A7D300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 40h, 4B4h, 0FFFCA668h, 388h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 3690301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 3Ch, 4F8h, 0FFFCA9ACh, 0A9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A9402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 38h, 538h, 0FFFCAA18h, 9Ch, 80E4100h
dd 0E410286h, 4303830Ch, 6202300Eh, 410C0E0Ah, 41080EC3h
dd 47040EC6h, 0E0A5B0Bh, 0EC3410Ch, 0EC64108h, 0B4304h
dd 2Ch,	574h, 0FFFCAA78h, 100h,	80E4100h, 0E410286h, 4303830Ch
dd 6902400Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 34h
dd 5A4h, 0FFFCAB48h, 0A0h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A5Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 2Ch, 5DCh, 0FFFCABB0h, 0A0h, 80E4100h
dd 0E410286h, 4303830Ch, 5D02300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 2Ch,	60Ch, 0FFFCAC20h, 98h, 80E4100h
dd 0E410286h, 4303830Ch, 5502300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 34h,	63Ch, 0FFFCAC88h, 0A0h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A60h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 2Ch, 674h, 0FFFCACF0h
dd 0D7h, 80E4100h, 0E410286h, 4303830Ch, 0AC02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 6A4h, 0FFFCAD98h, 0EBh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A8D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 6E4h, 0FFFCAE44h, 0DAh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0AC902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 38h, 724h, 0FFFCAEE0h, 0B7h, 80E4100h, 0E410286h
dd 4303830Ch, 7602300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h
dd 0E0A670Bh, 0EC3410Ch, 0EC64108h, 0B4504h, 38h, 760h
dd 0FFFCAF5Ch, 8Bh, 80E4100h, 0E410286h, 4303830Ch, 4902300Eh
dd 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A670Bh, 0EC3410Ch
dd 0EC64108h, 0B4504h, 34h, 79Ch, 0FFFCAFACh, 88h, 80E4100h
dd 0E430283h, 0E0A7C30h, 0EC34108h, 610B4704h, 41080E0Ah
dd 42040EC3h, 0E0A510Bh, 0EC34108h, 0B4504h, 48h, 7D4h
dd 0FFFCAFFCh, 127h, 80E4100h, 0E410286h, 4303830Ch, 6B02300Eh
dd 410C0E0Ah, 41080EC3h, 46040EC6h, 0E0A6B0Bh, 0EC3410Ch
dd 0EC64108h
dd 20B4304h, 0C0E0A73h,	80EC341h, 40EC641h, 0B45h, 20h
dd 820h, 0FFFCB0D8h, 58h, 80E4100h, 0E430283h, 0A4D0240h
dd 0C341080Eh, 0B41040Eh, 3Ch, 844h, 0FFFCB10Ch, 1AAh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 884h, 0FFFCB278h, 118h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0ADF02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 2Ch, 8C4h, 0FFFCB350h, 80h,	80E4100h, 0E410286h
dd 4303830Ch, 4802300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	9Ch, 8F4h, 0FFFCB3A0h, 886h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 900E4305h, 0A4E0201h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 0E0A9902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4704h, 140E0AA6h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0E7030B46h, 140E0A03h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0CE030B45h, 140E0A02h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 18h, 994h, 0FFFCBB88h
dd 47h,	300E4300h, 40E0A7Ah, 0B45h, 2Ch, 9B0h, 0FFFCBBB4h
dd 68h,	80E4100h, 0E410286h, 4303830Ch,	5702300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 18h, 9E0h, 0FFFCBBECh, 40h
dd 300E4300h, 40E0A77h,	0B41h, 2Ch, 9FCh, 0FFFCBC10h, 6Dh
dd 80E4100h, 0E410286h,	4303830Ch, 5C02300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 3Ch, 0A2Ch, 0FFFCBC50h, 279h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0ADF02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4604h, 20h, 0A6Ch, 0FFFCBE8Ch, 7Eh, 80E4100h
dd 0E430283h, 0A6F0230h, 0C341080Eh, 0B45040Eh,	58h, 0A90h
dd 0FFFCBEE8h, 188h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2400E43h, 100E0ABFh,	0C0EC341h, 80EC641h, 40EC741h
dd 0A6F0B48h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh
dd 0E0A7702h, 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4504h
dd 58h,	0AECh, 0FFFCC014h, 120h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0ABBh, 0C0EC341h, 80EC641h
dd 40EC741h, 0A6B0B48h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B42040Eh, 100E0A57h, 0C0EC341h, 80EC641h, 40EC741h
dd 0B45h, 34h, 0B48h, 0FFFCC0D8h, 7Fh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A70h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 34h, 0B80h, 0FFFCC120h, 8Fh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A5Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 1Ch
dd 0BB8h, 0FFFCC178h, 51h, 300E4300h, 40E0A73h,	0A4F0B46h
dd 0B41040Eh, 54h, 0BD8h, 0FFFCC1ACh, 154h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A9C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4104h
dd 140E0A88h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 20h, 0C30h, 0FFFCC2A8h, 5Dh, 80E4100h, 0E430283h
dd 0E0A7E30h, 0EC34108h, 0B4104h, 20h, 0C54h, 0FFFCC2E4h
dd 8Dh,	80E4100h, 0E430283h, 0A4C0230h,	0C341080Eh, 0B43040Eh
dd 3Ch,	0C78h, 0FFFCC350h, 1C5h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6C02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 0CB8h
dd 0FFFCC4D8h, 438h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 700E4305h, 0A01C003h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h, 0CF8h, 0FFFCC8D0h
dd 63h,	300E4300h, 40E0A7Dh, 0B44h, 2Ch, 0D14h,	0FFFCC918h
dd 85h,	80E4100h, 0E410286h, 4303830Ch,	7802300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 0D44h, 0FFFCC970h, 2A3h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A015703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 54h, 0D84h, 0FFFCCBD4h, 19Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AFB02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0A8Ah, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 34h, 0DDCh, 0FFFCCD1Ch, 4DCh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 3300E43h
dd 0E0A041Ah, 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4104h
dd 2Ch,	0E14h, 0FFFCD1C0h, 117h, 80E4100h, 0E410286h, 4303830Ch
dd 0CD02300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h,	0Bh, 2Ch
dd 0E44h, 0FFFCD2A8h, 88h, 80E4100h, 0E410287h,	4303830Ch
dd 4802300Eh, 410C0E0Ah, 41080EC3h, 41040EC7h, 0Bh, 58h
dd 0E74h, 0FFFCD300h, 1CAh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A7Ch, 0C0EC341h, 80EC641h
dd 40EC741h, 0A7A0B43h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B47040Eh, 0E0A9402h, 0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4504h, 3Ch, 0ED0h,	0FFFCD470h, 246h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A010303h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 1Ch,	0F10h, 0FFFCD678h, 4Dh,	200E4300h, 40E0A6Eh, 0A4F0B47h
dd 0B41040Eh, 44h, 0F30h, 0FFFCD6A8h, 0F0h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AABh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A6B0B48h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B41040Eh, 58h, 0F78h, 0FFFCD750h, 0D8h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A64h, 0C0EC341h, 80EC641h, 40EC741h, 0A720B43h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B47040Eh, 100E0A5Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 54h, 0FD4h, 0FFFCD7CCh
dd 155h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 770B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 48h, 102Ch, 0FFFCD8CCh, 0F4h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A74h, 0C0EC341h, 80EC641h, 40EC741h, 67020B47h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 3Ch
dd 1078h, 0FFFCD974h, 3D0h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0C00E4605h, 0AFF0202h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h
dd 10B8h, 0FFFCDD04h, 28h, 200E4300h, 40E0A5Fh,	0B41h
dd 34h,	10D4h, 0FFFCDD10h, 167h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A93h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 48h, 110Ch,	0FFFCDE40h, 1F7h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0AD0h
dd 0C0EC341h, 80EC641h,	40EC741h, 59020B47h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 6Ch, 1158h, 0FFFCDFECh
dd 538h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A015B03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B46040Eh, 0A027703h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 140E0A6Bh, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 40h, 11C8h, 0FFFCE4B4h
dd 0E86h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4605h, 0E6E0302h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 24h, 120Ch, 0FFFCF2F8h, 147h
dd 80E4100h, 0E430283h,	1240330h, 41080E0Ah, 43040EC3h
dd 0Bh,	3Ch, 1234h, 0FFFCF418h,	149h, 80E4100h,	0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A013403h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 44h,	1274h, 0FFFCF524h, 0A8h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A80h, 0C0EC341h, 80EC641h
dd 40EC741h, 0A4F0B47h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B41040Eh, 3Ch, 12BCh, 0FFFCF584h, 0BF9h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AF902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 3Ch, 12FCh,	0FFFD0140h, 14Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AB102h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4804h
dd 68h,	133Ch, 0FFFD0250h, 195h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AC102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4404h, 140E0AA6h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A4F0B42h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 6Ch,	13A8h, 0FFFD037Ch, 290h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A010203h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 0E0ABF02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4504h
dd 140E0A83h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 48h, 1418h, 0FFFD059Ch, 1B8h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0AC4h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B3020B47h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 46040EC7h, 0Bh, 3Ch, 1464h, 0FFFD0708h, 34Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A010803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 2Ch, 14A4h, 0FFFD0A14h, 186h
dd 80E4100h, 0E410286h,	4303830Ch, 6A02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 28h, 14D4h, 0FFFD0B6Ch, 0A4h
dd 80E4100h, 0E410286h,	4303830Ch, 0A63300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B42040Eh, 2Ch, 1500h, 0FFFD0BE4h, 0E0h
dd 80E4100h, 0E410286h,	4303830Ch, 4502400Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 18h, 1530h, 0FFFD0C94h, 25h
dd 200E4300h, 40E0A5Ch,	0B41h, 18h, 154Ch, 0FFFD0CA0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 1568h,	0FFFD0CA8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 34h, 1584h,	0FFFD0CB0h
dd 0DDh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0ACAh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 4Ch
dd 15BCh, 0FFFD0D58h, 0FE5h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A0C6B03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 0E032203h
dd 700E416Ch, 416C0E5Bh, 700Eh,	20h, 160Ch, 0FFFD1CF0h
dd 162h, 80E4100h, 0E430283h, 0A580230h, 0C341080Eh, 0B43040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFD1E18h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 38h, 0FFFD1E20h
dd 30h,	200E4300h, 40E0A63h, 0B45h, 18h, 54h, 0FFFD1E34h
dd 3Fh,	300E4300h, 40E0A72h, 0B45h, 18h, 70h, 0FFFD1E58h
dd 3Fh,	300E4300h, 40E0A72h, 0B45h, 3Ch, 8Ch, 0FFFD1E7Ch
dd 0D1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 34h, 0CCh, 0FFFD1F10h, 0A4h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A95h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 34h, 104h, 0FFFD1F7Ch
dd 0F4h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AE5h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 13Ch, 0FFFD2038h, 0A4h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A95h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 2Ch, 174h, 0FFFD20A4h, 5Fh,	80E4100h
dd 0E410286h, 4303830Ch, 4E02300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 3Ch,	1A4h, 0FFFD20D4h, 0D9h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0AC402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 34h, 1E4h, 0FFFD2170h, 0FCh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AEDh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 34h, 21Ch, 0FFFD2234h, 0FCh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0AEDh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 254h, 0FFFD22F8h, 9Ch, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A8Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 34h, 28Ch, 0FFFD235Ch, 9Ch,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A8Dh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 2C4h, 0FFFD23C0h
dd 149h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A013803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 304h, 0FFFD24CCh, 0C0h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0AB1h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 33Ch, 0FFFD2554h, 9Ch, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A8Dh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 48h, 374h, 0FFFD25B8h, 83h,	80E4100h
dd 0E410287h, 4303860Ch, 4802200Eh, 410C0E0Ah, 41080EC6h
dd 41040EC7h, 0E0A4F0Bh, 0EC6410Ch, 0EC74108h, 4F0B4704h
dd 410C0E0Ah, 41080EC6h, 45040EC7h, 0Bh, 18h, 3C0h, 0FFFD25F0h
dd 2Eh,	200E4300h, 40E0A65h, 0B41h, 2Ch, 3DCh, 0FFFD2604h
dd 59h,	80E4100h, 0E410286h, 4303830Ch,	4502300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 80h, 40Ch, 0FFFD2630h, 1C0h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 140E0A76h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 96020B43h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0E0A670Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 20B4504h, 140E0AA2h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 18h, 490h, 0FFFD276Ch
dd 49h,	300E4300h, 0E0A4002h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 24h, 1Ch,	0FFFD2784h
dd 22Ch, 80E4100h, 0E430283h, 2210340h,	41080E0Ah, 41040EC3h
dd 0Bh,	18h, 44h, 0FFFD2988h, 55h, 300E4300h, 0E0A4C02h
dd 0B4104h, 28h, 60h, 0FFFD29C4h, 4Ch, 80E4100h, 0E410287h
dd 4303830Ch, 0A7F300Eh, 0C3410C0Eh, 0C741080Eh, 0B41040Eh
dd 80h,	8Ch, 0FFFD29E4h, 1F2h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0A6D02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h, 140E0A83h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A690B41h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh
dd 140E0A79h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B47h, 54h, 110h, 0FFFD2B54h, 24Ah, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0A6D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h
dd 140E0A83h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 2Ch, 168h, 0FFFD2D48h, 0B0h, 80E4100h, 0E410286h
dd 4303830Ch, 0A202300Eh, 410C0E0Ah, 41080EC3h,	42040EC6h
dd 0Bh,	3Ch, 198h, 0FFFD2DC8h, 0C7h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0A9D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 3Ch,	1D8h, 0FFFD2E50h, 0E4h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AC802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 218h
dd 0FFFD2EF4h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h, 18h
dd 234h, 0FFFD2F24h, 2Ch, 200E4300h, 40E0A63h, 0B41h, 18h
dd 250h, 0FFFD2F34h, 4Bh, 300E4300h, 0E0A4202h,	0B4104h
dd 18h,	26Ch, 0FFFD2F64h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	288h, 0FFFD2F94h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	2A4h, 0FFFD2FC4h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	2C0h, 0FFFD2FF4h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 2Ch,	2DCh, 0FFFD3024h, 0D3h,	80E4100h, 0E410286h, 4303830Ch
dd 6102300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 18h
dd 30Ch, 0FFFD30C8h, 4Bh, 300E4300h, 0E0A4202h,	0B4104h
dd 3Ch,	328h, 0FFFD30F8h, 1A0h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A013A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h
dd 368h, 0FFFD3258h, 47h, 300E4300h, 40E0A7Eh, 0B41h, 20h
dd 384h, 0FFFD3284h, 4Bh, 80E4100h, 0E430283h, 0A400230h
dd 0C341080Eh, 0B41040Eh, 20h, 3A8h, 0FFFD32ACh, 45h, 80E4100h
dd 0E430283h, 0E0A7A30h, 0EC34108h, 0B4104h, 18h, 3CCh
dd 0FFFD32D0h, 47h, 300E4300h, 40E0A7Eh, 0B41h,	44h, 3E8h
dd 0FFFD32FCh, 8Eh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A67h,	0C0EC341h, 80EC641h, 40EC741h
dd 0A510B44h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh
dd 54h,	430h, 0FFFD3344h, 0BBh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 5E0B4204h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 54h
dd 488h, 0FFFD33A8h, 0B3h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 5E0B4804h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD33ECh
dd 0E0h, 80E4100h, 0E430283h, 0AD50230h, 0C341080Eh, 0B41040Eh
dd 20h,	40h, 0FFFD34A8h, 81h, 80E4100h,	0E430283h, 0A720230h
dd 0C341080Eh, 0B45040Eh, 20h, 64h, 0FFFD3508h,	5Ah, 80E4100h
dd 0E430283h, 0A4E0230h, 0C341080Eh, 0B42040Eh,	2Ch, 88h
dd 0FFFD3540h, 0BFh, 80E4100h, 0E410286h, 4303830Ch, 0B202300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 18h, 0B8h, 0FFFD35D0h
dd 4Dh,	300E4300h, 0E0A4402h, 0B4104h, 3Ch, 0D4h, 0FFFD3604h
dd 12Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A011C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 114h, 0FFFD36F4h, 56h, 300E4300h
dd 0E0A4D02h, 0B4104h, 20h, 130h, 0FFFD3730h, 4Ah, 80E4100h
dd 0E430283h, 0E0A7F30h, 0EC34108h, 0B4104h, 40h, 154h
dd 0FFFD3758h, 374h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 900E4305h, 32A0301h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 43040EC5h, 0Bh, 3Ch, 198h, 0FFFD3A88h
dd 311h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A02C003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 68h, 1D8h, 0FFFD3D5Ch, 166h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4804h,	140E0A87h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A5C0B41h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B48040Eh, 54h, 244h, 0FFFD3E58h
dd 14Eh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4804h,	140E0A88h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B44h, 3Ch, 29Ch, 0FFFD3F50h, 0C9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 18h, 2DCh, 0FFFD3FDCh, 36h, 200E4300h
dd 40E0A69h, 0B45h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD3FE0h
dd 0E0h, 80E4100h, 0E430283h, 0AD50230h, 0C341080Eh, 0B41040Eh
dd 20h,	40h, 0FFFD409Ch, 3Fh, 80E4100h,	0E430283h, 0E0A7030h
dd 0EC34108h, 0B4504h, 20h, 64h, 0FFFD40B8h, 5Ah, 80E4100h
dd 0E430283h, 0A4E0230h, 0C341080Eh, 0B42040Eh,	2Ch, 88h
dd 0FFFD40F0h, 6Dh, 80E4100h, 0E410286h, 4303830Ch, 6002300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 18h, 0B8h, 0FFFD4130h
dd 4Dh,	300E4300h, 0E0A4402h, 0B4104h, 3Ch, 0D4h, 0FFFD4164h
dd 84h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A7302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 114h, 0FFFD41A8h, 56h, 300E4300h
dd 0E0A4D02h, 0B4104h, 20h, 130h, 0FFFD41E4h, 4Ah, 80E4100h
dd 0E430283h, 0E0A7F30h, 0EC34108h, 0B4104h, 3Ch, 154h
dd 0FFFD420Ch, 0AEh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A7602h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 194h, 0FFFD427Ch
dd 1CBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A017103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 3Ch, 1D4h, 0FFFD4408h, 181h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A5402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 68h, 214h, 0FFFD454Ch, 166h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A6D02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4804h, 140E0A87h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0A5C0B41h,	0C341140Eh, 0C641100Eh,	0C7410C0Eh
dd 0C541080Eh, 0B48040Eh, 54h, 280h, 0FFFD4648h, 14Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4804h,	140E0A88h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B44h, 3Ch, 2D8h, 0FFFD4740h, 0C7h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 18h, 318h, 0FFFD47C8h, 36h, 200E4300h
dd 40E0A69h, 0B45h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 24h, 1Ch,	0FFFD47CCh
dd 243h, 80E4100h, 0E430283h, 2380340h,	41080E0Ah, 41040EC3h
dd 0Bh,	18h, 44h, 0FFFD49E8h, 55h, 300E4300h, 0E0A4C02h
dd 0B4104h, 28h, 60h, 0FFFD4A24h, 4Ch, 80E4100h, 0E410287h
dd 4303830Ch, 0A7F300Eh, 0C3410C0Eh, 0C741080Eh, 0B41040Eh
dd 94h,	8Ch, 0FFFD4A44h, 21Eh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0A6D02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h, 140E0A83h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A690B41h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B47040Eh
dd 140E0A79h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0A750B47h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B47040Eh, 54h, 124h, 0FFFD4BCCh, 202h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0A6D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h
dd 140E0A83h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 2Ch, 17Ch, 0FFFD4D78h, 0E8h, 80E4100h, 0E410286h
dd 4303830Ch, 0DA02300Eh, 410C0E0Ah, 41080EC3h,	42040EC6h
dd 0Bh,	3Ch, 1ACh, 0FFFD4E30h, 124h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0ACE02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h
dd 18h,	1ECh, 0FFFD4F14h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	208h, 0FFFD4F44h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	224h, 0FFFD4F74h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 18h,	240h, 0FFFD4FA4h, 4Bh, 300E4300h, 0E0A4202h, 0B4104h
dd 34h,	25Ch, 0FFFD4FD4h, 92h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A6Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 18h, 294h, 0FFFD5030h, 4Bh,	300E4300h
dd 0E0A4202h, 0B4104h, 18h, 2B0h, 0FFFD5060h, 4Bh, 300E4300h
dd 0E0A4202h, 0B4104h, 18h, 2CCh, 0FFFD5090h, 4Bh, 300E4300h
dd 0E0A4202h, 0B4104h, 18h, 2E8h, 0FFFD50C0h, 4Bh, 300E4300h
dd 0E0A4202h, 0B4104h, 2Ch, 304h, 0FFFD50F0h, 7Dh, 80E4100h
dd 0E410286h, 4303830Ch, 6C02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	334h, 0FFFD5140h, 4Dh, 300E4300h
dd 0E0A4002h, 0B4104h, 2Ch, 350h, 0FFFD5174h, 0BFh, 80E4100h
dd 0E410286h, 4303830Ch, 0B202300Eh, 410C0E0Ah,	41080EC3h
dd 41040EC6h, 0Bh, 34h,	380h, 0FFFD5204h, 82h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A68h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 3Ch, 3B8h, 0FFFD5250h
dd 1C6h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A018303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 34h, 3F8h, 0FFFD53D8h, 78h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A41h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 3Ch, 430h, 0FFFD5418h
dd 0C9h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AB802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 470h, 0FFFD54A4h, 0C9h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AB802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 34h, 4B0h, 0FFFD5530h, 52h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	7F300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 45040EC7h, 0Bh, 38h, 4E8h, 0FFFD554Ch, 7Bh
dd 80E4100h, 0E410286h,	4303830Ch, 5502300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 34h, 524h, 0FFFD558Ch, 52h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	7F300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 45040EC7h, 0Bh, 38h, 55Ch, 0FFFD55A8h, 7Bh
dd 80E4100h, 0E410286h,	4303830Ch, 5502300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 54h, 598h, 0FFFD55E8h, 85h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A5C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 4F0B4504h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	18h, 5F0h, 0FFFD5618h, 31h, 200E4300h, 40E0A68h
dd 0B41h, 2Ch, 60Ch, 0FFFD5630h, 76h, 80E4100h,	0E410286h
dd 4303830Ch, 6902300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	2Ch, 63Ch, 0FFFD5678h, 82h, 80E4100h, 0E410286h
dd 4303830Ch, 7502300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD56B4h
dd 56h,	80E4100h, 0E430283h, 0A4B0240h,	0C341080Eh, 0B41040Eh
dd 20h,	40h, 0FFFD56E8h, 69h, 80E4100h,	0E430283h, 0A5E0230h
dd 0C341080Eh, 0B41040Eh, 20h, 64h, 0FFFD5730h,	4Ah, 80E4100h
dd 0E430283h, 0E0A7E30h, 0EC34108h, 0B4204h, 18h, 88h
dd 0FFFD5758h, 55h, 300E4300h, 0E0A4C02h, 0B4104h, 20h
dd 0A4h, 0FFFD5794h, 43h, 80E4100h, 0E430283h, 0E0A7830h
dd 0EC34108h, 0B4104h, 54h, 0C8h, 0FFFD57B4h, 106h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A6B02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4604h, 140E0A66h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B42h, 54h, 120h, 0FFFD5864h, 106h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A6B02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4604h, 140E0A66h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B42h, 18h, 178h, 0FFFD5914h, 3Fh,	300E4300h
dd 40E0A76h, 0B41h, 18h, 194h, 0FFFD5938h, 34h,	300E4300h
dd 40E0A6Ah, 0B42h, 18h, 1B0h, 0FFFD5950h, 2Ch,	200E4300h
dd 40E0A63h, 0B41h, 44h, 1CCh, 0FFFD5960h, 7Eh,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A57h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A510B44h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 54h, 214h, 0FFFD5998h
dd 0BBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 5E0B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 42040EC5h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFD59E4h
dd 0ACh, 80E4100h, 0E410287h, 4303830Ch, 9802300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC7h, 0Bh, 2Ch, 4Ch,	0FFFD5A60h, 0CFh
dd 80E4100h, 0E410287h,	4303830Ch, 0A002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC7h, 0Bh, 34h, 7Ch,	0FFFD5B00h, 89h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A73h, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 20h
dd 0B4h, 0FFFD5B54h, 6Bh, 200E4300h, 0E0A4B02h,	510B4604h
dd 41040E0Ah, 0Bh, 2Ch,	0D8h, 0FFFD5B9Ch, 66h, 80E4100h
dd 0E430283h, 0A460230h, 0C341080Eh, 0B45040Eh,	80E0A4Fh
dd 40EC341h, 0B41h, 3Ch, 108h, 0FFFD5BD4h, 33Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A01C103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 2Ch, 148h, 0FFFD5ED0h, 8Ah, 80E4100h, 0E410286h
dd 4303830Ch, 4002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	2Ch, 178h, 0FFFD5F2Ch, 55h, 80E4100h, 0E410286h
dd 4303830Ch, 4802300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	18h, 1A8h, 0FFFD5F54h, 7Eh, 300E4300h, 0E0A4902h
dd 0B4404h, 2Ch, 1C4h, 0FFFD5FB8h, 0A2h, 80E4100h, 0E410286h
dd 4303830Ch, 5D02400Eh, 410C0E0Ah, 41080EC3h, 44040EC6h
dd 0Bh,	18h, 1F4h, 0FFFD602Ch, 4Ch, 200E4300h, 40E0A79h
dd 0B44h, 18h, 210h, 0FFFD605Ch, 2Eh, 200E4300h, 40E0A61h
dd 0B45h, 20h, 22Ch, 0FFFD6070h, 55h, 80E4100h,	0E430283h
dd 0A440240h, 0C341080Eh, 0B43040Eh, 20h, 250h,	0FFFD60A4h
dd 59h,	80E4100h, 0E430283h, 0A470240h,	0C341080Eh, 0B44040Eh
dd 20h,	274h, 0FFFD60DCh, 59h, 80E4100h, 0E430283h, 0A470240h
dd 0C341080Eh, 0B44040Eh, 2Ch, 298h, 0FFFD6114h, 12Dh
dd 80E4100h, 0E410286h,	4303830Ch, 0BE02400Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 2Ch, 2C8h, 0FFFD6214h, 0A4h
dd 80E4100h, 0E410286h,	4303830Ch, 6E02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 2Ch, 2F8h, 0FFFD6288h, 0F4h
dd 80E4100h, 0E410286h,	4303830Ch, 5202400Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 18h, 328h, 0FFFD634Ch, 70h
dd 300E4300h, 0E0A4902h, 0B4404h, 34h, 344h, 0FFFD63A0h
dd 64h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A49h, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 34h
dd 37Ch, 0FFFD63CCh, 0A4h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A65h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 18h, 3B4h, 0FFFD6438h, 4Ch,	200E4300h
dd 40E0A77h, 0B42h, 18h, 3D0h, 0FFFD6468h, 4Ch,	200E4300h
dd 40E0A77h, 0B42h, 54h, 3ECh, 0FFFD6498h, 12Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A8802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 140E0A5Dh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B43h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD6554h
dd 42h,	80E4100h, 0E430283h, 0E0A7730h,	0EC34108h, 0B4104h
dd 3Ch,	40h, 0FFFD6574h, 0B9h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7A02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 80h
dd 0FFFD65F0h, 75h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A6002h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 3Ch, 0C0h, 0FFFD6628h
dd 15Eh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A011403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 100h, 0FFFD6748h, 52Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A730201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 20h, 140h, 0FFFD6C38h, 0AAh
dd 80E4100h, 0E430283h,	0A9B0230h, 0C341080Eh, 0B45040Eh
dd 3Ch,	164h, 0FFFD6CC0h, 1A16h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4605h, 0ACF0203h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 2Ch
dd 1A4h, 0FFFD8698h, 219h, 80E4100h, 0E410286h,	4303830Ch
dd 8703300Eh, 0C0E0A01h, 80EC341h, 40EC641h, 0B46h, 3Ch
dd 1D4h, 0FFFD8884h, 1DDh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A017603h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 3Ch
dd 214h, 0FFFD8A24h, 155h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A010B03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 3Ch
dd 254h, 0FFFD8B3Ch, 105h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ADF02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 18h, 294h
dd 0FFFD8C04h, 2Dh, 200E4300h, 40E0A64h, 0B41h,	18h, 2B0h
dd 0FFFD8C18h, 4Ah, 300E4300h, 0E0A4102h, 0B4104h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFD8C30h
dd 0C4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A5E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 2Ch, 5Ch, 0FFFD8CB4h, 96h, 80E4100h
dd 0E410286h, 4303830Ch, 6102300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 3Ch,	8Ch, 0FFFD8D1Ch, 148h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0C00E4605h
dd 0ADA0210h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 34h, 0CCh, 0FFFD8E24h, 9Fh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A90h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 3Ch, 104h, 0FFFD8E8Ch, 139h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 18h, 144h, 0FFFD8F88h, 31h, 200E4300h
dd 40E0A64h, 0B45h, 18h, 160h, 0FFFD8FA0h, 31h,	200E4300h
dd 40E0A64h, 0B45h, 34h, 17Ch, 0FFFD8FB8h, 7Ch,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A69h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 18h, 1B4h, 0FFFD8FFCh
dd 48h,	300E4300h, 40E0A7Fh, 0B41h, 68h, 1D0h, 0FFFD9028h
dd 203h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A01A603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B47040Eh, 140E0A4Fh, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0A570B41h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFD91A8h
dd 0B3h, 80E4100h, 0E410286h, 4303830Ch, 6302400Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 20h, 4Ch,	0FFFD922Ch, 86h
dd 80E4100h, 0E430283h,	0A420230h, 0C341080Eh, 0B41040Eh
dd 84h,	70h, 0FFFD9290h, 457h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A015303h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 0A024D03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 0E0A4802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 140E0A42h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B45h, 2Ch, 0F8h, 0FFFD9660h, 62h,	80E4100h
dd 0E430283h, 0E0A7520h, 0EC34108h, 5B0B4204h, 41080E0Ah
dd 45040EC3h, 0Bh, 20h,	128h, 0FFFD9694h, 62h, 80E4100h
dd 0E430283h, 0A570230h, 0C341080Eh, 0B41040Eh,	18h, 14Ch
dd 0FFFD96D4h, 30h, 200E4300h, 40E0A63h, 0B45h,	38h, 168h
dd 0FFFD96E8h, 1CAh, 80E4100h, 0E410286h, 4303830Ch, 5B02400Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A7C0Bh, 0EC3410Ch
dd 0EC64108h, 0B4604h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFD9860h
dd 8Bh,	80E4100h, 0E410286h, 4303830Ch,	4002400Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 20h, 4Ch,	0FFFD98BCh, 79h
dd 300E4300h, 40E0A63h,	47020B42h, 45040E0Ah, 0Bh, 18h
dd 70h,	0FFFD9914h, 3Ah, 300E4300h, 40E0A71h, 0B41h, 18h
dd 8Ch,	0FFFD9934h, 30h, 200E4300h, 40E0A63h, 0B45h, 34h
dd 0A8h, 0FFFD9948h, 78h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A69h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 3Ch, 0E0h, 0FFFD9988h, 12Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AFA02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4704h, 18h, 120h, 0FFFD9A74h, 2Dh,	200E4300h, 40E0A64h
dd 0B41h, 54h, 13Ch, 0FFFD9A88h, 0A6h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 140E0A64h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 68020B41h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	48h, 194h, 0FFFD9AD8h, 0FEh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A55h, 0C0EC341h
dd 80EC641h, 40EC741h, 6E020B42h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 47040EC7h, 0Bh, 44h, 1E0h, 0FFFD9B8Ch, 0ABh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 70300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 47040EC7h, 0A5E020Bh
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFD9BD8h
dd 45h,	80E4100h, 0E430283h, 0E0A7A30h,	0EC34108h, 0B4104h
dd 1Ch,	40h, 0FFFD9BFCh, 65h, 200E4300h, 40E0A71h, 0A5F0B48h
dd 0B45040Eh, 44h, 60h,	0FFFD9C44h, 9Ch, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	6E300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 41040EC7h, 0A57020Bh, 0C341100Eh,	0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 20h, 0A8h, 0FFFD9C98h, 7Eh, 80E4100h
dd 0E430283h, 0A6F0230h, 0C341080Eh, 0B45040Eh,	2Ch, 0CCh
dd 0FFFD9CF4h, 0A4h, 80E4100h, 0E410286h, 4303830Ch, 9702300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFD9D50h
dd 2Eh,	200E4300h, 40E0A65h, 0B41h, 28h, 38h, 0FFFD9D64h
dd 45h,	80E4100h, 0E410286h, 4303830Ch,	0A78300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 28h, 64h, 0FFFD9D80h,	45h, 80E4100h
dd 0E410286h, 4303830Ch, 0A78300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 2Ch, 90h,	0FFFD9D9Ch, 71h, 80E4100h, 0E410286h
dd 4303830Ch, 5202300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	2Ch, 0C0h, 0FFFD9DE0h, 76h, 80E4100h, 0E410286h
dd 4303830Ch, 4702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	54h, 0F0h, 0FFFD9E28h, 111h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0ACB02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4204h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	20h, 148h, 0FFFD9EE4h, 6Fh, 80E4100h, 0E430283h
dd 0A640240h, 0C341080Eh, 0B41040Eh, 3Ch, 16Ch,	0FFFD9F30h
dd 216h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A01BF03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 68h, 1ACh, 0FFFDA108h, 1E5h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AC202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4704h,	140E0AEEh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A4F0B46h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 38h, 218h, 0FFFDA284h
dd 97h,	80E4100h, 0E410286h, 4303830Ch,	4602300Eh, 410C0E0Ah
dd 41080EC3h, 47040EC6h, 0E0A770Bh, 0EC3410Ch, 0EC64108h
dd 0B4504h, 38h, 254h, 0FFFDA2E0h, 97h,	80E4100h, 0E410286h
dd 4303830Ch, 4602300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h
dd 0E0A5F0Bh, 0EC3410Ch, 0EC64108h, 0B4704h, 44h, 290h
dd 0FFFDA33Ch, 0A1h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 70300E43h, 41100E0Ah, 410C0EC3h, 41080EC6h, 43040EC7h
dd 0A58020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh
dd 3Ch,	2D8h, 0FFFDA398h, 22Eh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A014A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h
dd 318h, 0FFFDA588h, 47h, 300E4300h, 40E0A7Eh, 0B41h, 40h
dd 334h, 0FFFDA5B4h, 148Eh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0D00E4605h, 1C30301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h, 0Bh, 3Ch
dd 378h, 0FFFDBA00h, 81h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6C02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 2Ch, 3B8h
dd 0FFFDBA44h, 71h, 80E4100h, 0E410286h, 4303830Ch, 6002300Eh
dd 410C0E0Ah, 41080EC3h, 45040EC6h, 0Bh, 2Ch, 3E8h, 0FFFDBA88h
dd 71h,	80E4100h, 0E410286h, 4303830Ch,	6002300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 3Ch, 418h, 0FFFDBACCh, 0C5h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A9602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 3Ch, 458h, 0FFFDBB54h, 231h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A019103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 3Ch, 498h, 0FFFDBD48h, 71Dh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0E0A6902h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 44h,	4D8h, 0FFFDC428h, 0E0h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 72300E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 41040EC7h, 0A4E020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B47040Eh, 20h, 520h, 0FFFDC4C0h, 5Ah, 80E4100h, 0E430283h
dd 0A4B0230h, 0C341080Eh, 0B45040Eh, 18h, 544h,	0FFFDC4F8h
dd 164h, 300E4300h, 0A015B03h, 0B41040Eh, 18h, 560h, 0FFFDC640h
dd 3Ah,	300E4300h, 40E0A71h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFDC648h
dd 76h,	80E4100h, 0E430283h, 0A6B0230h,	0C341080Eh, 0B41040Eh
dd 2Ch,	40h, 0FFFDC69Ch, 0B9h, 80E4100h, 0E410286h, 4303830Ch
dd 0A802400Eh, 410C0E0Ah, 41080EC3h, 45040EC6h,	0Bh, 20h
dd 70h,	0FFFDC728h, 67h, 80E4100h, 0E430283h, 0A5C0230h
dd 0C341080Eh, 0B41040Eh, 3Ch, 94h, 0FFFDC76Ch,	24Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 140E0A6Bh, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B42h, 54h, 0D4h, 0FFFDC978h, 0F4h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A5202h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4304h
dd 140E0A86h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 44h, 12Ch, 0FFFDCA14h, 9Ch, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A6Ch, 0C0EC341h
dd 80EC641h, 40EC741h, 0A4F0B47h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B42040Eh, 68h, 174h, 0FFFDCA68h, 1ECh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 140E0A6Fh, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 66020B42h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 46040EC5h, 0AA8020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B48040Eh, 54h, 1E0h, 0FFFDCBE8h
dd 1B2h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AEB02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0AA9h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 3Ch, 238h, 0FFFDCD44h, 6Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A5D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 54h, 278h, 0FFFDCD74h, 778h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A037303h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 0A039F03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 3Ch, 2D0h, 0FFFDD494h, 0B2h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFDD4F0h
dd 53h,	200E4300h, 40E0A71h, 0A540B45h,	0B41040Eh, 2 dup(3Ch)
dd 0FFFDD524h, 81h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A7002h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 20h, 7Ch, 0FFFDD568h
dd 4Fh,	80E4100h, 0E430283h, 0A400230h,	0C341080Eh, 0B45040Eh
dd 2Ch,	0A0h, 0FFFDD594h, 86h, 80E4100h, 0E430283h, 0A5C0230h
dd 0C341080Eh, 0B47040Eh, 80E0A53h, 40EC341h, 0B45h, 54h
dd 0D0h, 0FFFDD5ECh, 0B4h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 7E0B4604h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 2Ch
dd 128h, 0FFFDD648h, 66h, 80E4100h, 0E430283h, 0A460230h
dd 0C341080Eh, 0B45040Eh, 80E0A4Fh, 40EC341h, 0B41h, 34h
dd 158h, 0FFFDD680h, 1A8h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 3300E43h, 0E0A0147h, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4404h, 18h, 190h, 0FFFDD7F0h, 2Ch, 200E4300h
dd 40E0A5Fh, 0B45h, 20h, 1ACh, 0FFFDD800h, 56h,	80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B41040Eh,	38h, 1D0h
dd 0FFFDD834h, 7Bh, 80E4100h, 0E410286h, 4303830Ch, 0A78300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 0C0E0A6Bh, 80EC341h
dd 40EC641h, 0B45h, 20h, 20Ch, 0FFFDD874h, 56h,	80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B41040Eh,	34h, 230h
dd 0FFFDD8A8h, 12Dh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 3300E43h, 0E0A011Eh,	0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4104h, 18h, 268h, 0FFFDD9A0h, 30h,	200E4300h, 40E0A63h
dd 0B45h, 3Ch, 284h, 0FFFDD9B4h, 28Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A027E03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 54h,	2C4h, 0FFFDDC04h, 1FFh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AD302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4204h, 140E0A7Dh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B47h, 6Ch
dd 31Ch, 0FFFDDDACh, 56Ah, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 1470301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 46040EC5h, 0E0A780Bh
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4804h
dd 0E0A01B6h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4604h, 5Ch, 38Ch, 0FFFDE2A8h, 0FFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 340E4202h
dd 2400E43h, 140E0A57h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 49020B41h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 44h, 3ECh, 0FFFDE348h, 124h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A57h, 0C0EC341h, 80EC641h, 40EC741h, 0A7A0B44h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B47040Eh, 3Ch
dd 434h, 0FFFDE424h, 350h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	0D00E4605h, 0ABB0202h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 58h
dd 474h, 0FFFDE734h, 102h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A53h, 0C0EC341h, 80EC641h
dd 40EC741h, 43020B44h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 46040EC7h, 0A49020Bh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B45040Eh, 3Ch, 4D0h, 0FFFDE7DCh, 480h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 0AC40201h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 34h,	510h, 0FFFDEC1Ch, 0F3h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0AC5h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 40h, 548h, 0FFFDECD8h, 4E5h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 3600301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 54h,	58Ch, 0FFFDF17Ch, 296h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A018003h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 140E0A57h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B45h, 54h, 5E4h, 0FFFDF3BCh, 391h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A035103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 140E0A63h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B45h, 54h, 63Ch, 0FFFDF6F8h, 24Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A011D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 0E0A7F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 2Ch, 694h, 0FFFDF8ECh, 81h, 80E4100h
dd 0E410286h, 4303830Ch, 7402300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 0ACh, 6C4h, 0FFFDF940h, 36Ah, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AE302h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 30B4204h, 0E0A0107h,	0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 570B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0E0A570Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0A8E020Bh, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 34h
dd 774h, 0FFFDFBFCh, 6Bh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A52h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 38h, 7ACh, 0FFFDFC30h, 83h,	80E4100h
dd 0E410286h, 4303830Ch, 0A77300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B46040Eh, 0C0E0A73h, 80EC341h, 40EC641h, 0B45h, 34h
dd 7E8h, 0FFFDFC78h, 69h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A56h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B45h, 3Ch, 820h, 0FFFDFCACh, 83h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 28h, 860h, 0FFFDFCF0h, 71h, 80E4100h
dd 0E410286h, 4303830Ch, 0A6E300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B43040Eh, 98h, 88Ch, 0FFFDFD38h, 3EFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A5A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4304h
dd 140E0A9Eh, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 6C030B46h, 140E0A02h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0A570B45h,	0C341140Eh, 0C641100Eh,	0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 140E0A7Ch, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 54h, 928h, 0FFFE008Ch, 11Eh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AC602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 510B4704h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 47040EC5h, 0Bh, 3Ch, 980h, 0FFFE0154h, 161h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 54h, 9C0h, 0FFFE0278h, 1C7h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AAC02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 530B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 2Ch, 0A18h, 0FFFE03E8h, 0B3h
dd 80E4100h, 0E410286h,	4303830Ch, 0A602300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 0A48h, 0FFFE046Ch, 66h
dd 80E4100h, 0E430283h,	0E0A7E30h, 0EC34108h, 530B4504h
dd 41080E0Ah, 45040EC3h, 0Bh, 18h, 0A78h, 0FFFE04A4h, 4Bh
dd 300E4300h, 0E0A4202h, 0B4104h, 18h, 0A94h, 0FFFE04D4h
dd 2Fh,	300E4300h, 40E0A66h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFE04D0h
dd 2B7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0ACE02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 30B4304h,	0E0A01A4h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 3Ch, 74h, 0FFFE0730h
dd 0BBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A8A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4704h, 3Ch, 0B4h, 0FFFE07ACh, 0E9h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AD802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 2Ch, 0F4h, 0FFFE0858h, 62h,	80E4100h, 0E430283h
dd 0A420230h, 0C341080Eh, 0B45040Eh, 80E0A4Fh, 40EC341h
dd 0B41h, 18h, 124h, 0FFFE088Ch, 5Fh, 300E4300h, 0E0A5602h
dd 0B4104h, 90h, 140h, 0FFFE08D0h, 3F2h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 140E0A70h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 58020B41h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 48040EC5h
dd 5C0E6A0Bh, 59600E41h, 0E415C0Eh, 5C0E4F60h, 3600E41h
dd 0E0A0279h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 41140E72h,	41100EC3h, 410C0EC6h, 41080EC7h
dd 40EC5h, 44h,	1D4h, 0FFFE0C30h, 0D9h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AACh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A4F0B47h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B42040Eh, 20h, 21Ch, 0FFFE0CC4h, 80h, 80E4100h
dd 0E430283h, 0A750240h, 0C341080Eh, 0B41040Eh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 54h, 1Ch,	0FFFE0D08h
dd 1ECh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A017103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B48040Eh, 140E0A77h, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 18h, 74h,	0FFFE0E9Ch, 4Bh
dd 300E4300h, 0E0A4202h, 0B4104h, 3Ch, 90h, 0FFFE0ECCh
dd 0E7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 18h, 0D0h, 0FFFE0F74h, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFE0F68h
dd 5Ah,	400E4300h, 0E0A5102h, 0B4104h, 40h, 38h, 0FFFE0FA8h
dd 184h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 1680301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 3Ch, 7Ch,	0FFFE10E8h, 0B4h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A9F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 44h, 0BCh, 0FFFE115Ch, 0B8h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A91h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A4F0B46h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 18h, 104h, 0FFFE11CCh
dd 4Bh,	300E4300h, 0E0A4202h, 0B4104h, 20h, 120h, 0FFFE11FCh
dd 5Dh,	80E4100h, 0E430283h, 0A520230h,	0C341080Eh, 0B41040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 58h, 1Ch,	0FFFE1220h
dd 3C8h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 900E4305h, 1880301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 11A030Bh, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 46040EC5h, 0Bh, 18h, 78h, 0FFFE158Ch
dd 4Bh,	300E4300h, 0E0A4202h, 0B4104h, 3Ch, 94h, 0FFFE15BCh
dd 21Ah, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A012E03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B47040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFFE1780h
dd 140h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AE502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 5Ch, 0FFFE1880h, 4B0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A022D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B48040Eh, 40h, 9Ch,	0FFFE1CF0h, 0A38h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0A00E4605h, 5460301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h
dd 0Bh,	18h, 0E0h, 0FFFE26E4h, 57h, 400E4300h, 0E0A4E02h
dd 0B4104h, 2Ch, 0FCh, 0FFFE2720h, 0C4h, 80E4100h, 0E430283h
dd 0A850230h, 0C341080Eh, 0B46040Eh, 80E0A6Dh, 40EC341h
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 4Ch, 1Ch,	0FFFE279Ch
dd 2E1h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 1E00E46h
dd 1DC0E72h, 1E00E41h, 1DC0E4Ch, 1E00E41h, 0E012503h, 0E4301D8h
dd 0A5E01E0h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFE39ACh
dd 43h,	200E4300h, 40E0A55h, 0E600B48h,	4, 38h,	3Ch, 0FFFE39DCh
dd 86h,	80E4100h, 0E410286h, 4303830Ch,	0A64200Eh, 0C3460C0Eh
dd 0C641080Eh, 0B43040Eh, 0C0E0A6Bh, 80EC346h, 40EC641h
dd 0B43h, 10h, 78h, 0FFFE3A30h,	3, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 10h, 1Ch,	0FFFE3A14h
dd 8, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFE39F8h
dd 52h,	80E4100h, 0E430283h, 30h, 3Ch, 38h, 0FFFE3A3Ch
dd 10Eh, 600E4300h, 59058344h, 87460486h, 2854603h, 43540E45h
dd 0A74600Eh, 0C3C6C7C5h, 0B48040Eh, 43500E69h,	5202600Eh
dd 0E43500Eh, 60h, 24h,	78h, 0FFFE3B0Ch, 1D4h, 300E6C00h
dd 8604834Fh, 2028703h,	0C6C70AE3h, 42040EC3h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 14h, 1Ch,	0FFFE3CACh
dd 2Ch,	100E4E00h, 40E5Ch, 20h,	34h, 0FFFE3CC4h, 49h, 80E4100h
dd 0E430283h, 0E0A6D20h, 0EC34108h, 0B4104h, 10h, 58h
dd 0FFFE3CF0h, 1Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 38h, 1Ch,	0FFFE3CE4h
dd 60h,	80E4100h, 0E410286h, 4303830Ch,	0E4C200Eh, 200E491Ch
dd 431C0E50h, 0E6A200Eh, 200E431Ch, 410C0E43h, 41080EC3h
dd 40EC6h, 34h,	58h, 0FFFE3D08h, 8Ch, 200E4300h, 46028649h
dd 0A510383h, 40EC3C6h,	0E730B41h, 200E511Ch, 451C0E4Ch
dd 0A4B200Eh, 40EC6C3h,	0B41h, 3Ch, 90h, 0FFFE3D60h, 90h
dd 80E4100h, 0E430283h,	0E0A5020h, 0EC34308h, 4C0B4104h
dd 0E491C0Eh, 1C0E6E20h, 43200E43h, 43080E0Ah, 41040EC3h
dd 1C0E5A0Bh, 200E43h, 28h, 0D0h, 0FFFE3DB0h, 98h, 200E4300h
dd 40E0A58h, 0E690B45h,	200E431Ch, 40E0A5Fh, 0E5C0B45h
dd 200E431Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFE3F48h
dd 19h,	80E4100h, 0D420285h, 0CC55505h,	404h, 18h dup(0)
align 1000h
assume cs:_bss

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
public jabber_identities
			
public jabber_features
			
align 20h
			
align 4
dd 3FFh	dup(?)
			
align 4
dd 3FFh	dup(?)
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
dd 3 dup(?)
			
			
			
			
			
			
align 400h
extrn __imp_g_ascii_strcasecmp:dword 
extrn __imp_g_ascii_strdown:dword 
extrn __imp_g_ascii_strncasecmp:dword 
extrn __imp_g_ascii_strtoull:dword 
extrn g_ascii_table:dword 
extrn __imp_g_build_filename:dword 
extrn __imp_g_convert:dword 
extrn g_direct_equal:dword 
extrn g_direct_hash:dword 
extrn __imp_g_free:dword 
extrn __imp_g_hash_table_destroy:dword 
extrn __imp_g_hash_table_find:dword 
extrn __imp_g_hash_table_foreach:dword 
extrn __imp_g_hash_table_foreach_steal:dword
			
extrn __imp_g_hash_table_insert:dword 
extrn __imp_g_hash_table_iter_init:dword
			
extrn __imp_g_hash_table_iter_next:dword
			
extrn __imp_g_hash_table_lookup:dword 
extrn __imp_g_hash_table_new:dword 
extrn __imp_g_hash_table_new_full:dword	
extrn __imp_g_hash_table_remove:dword 
extrn __imp_g_hash_table_replace:dword 
extrn __imp_g_hash_table_size:dword 
extrn __imp_g_list_append:dword	
extrn __imp_g_list_copy:dword 
extrn __imp_g_list_delete_link:dword 
extrn __imp_g_list_find:dword 
extrn __imp_g_list_find_custom:dword 
extrn __imp_g_list_foreach:dword 
extrn __imp_g_list_free:dword 
extrn __imp_g_list_insert_sorted:dword 
extrn __imp_g_list_length:dword	
extrn __imp_g_list_nth_data:dword 
extrn __imp_g_list_prepend:dword 
extrn __imp_g_list_remove:dword	
extrn __imp_g_list_remove_link:dword 
extrn __imp_g_list_reverse:dword 
extrn __imp_g_list_sort:dword 
extrn __imp_g_log:dword	
extrn __imp_g_malloc:dword 
extrn __imp_g_malloc0:dword 
extrn __imp_g_markup_escape_text:dword 
extrn __imp_g_memdup:dword 
extrn __imp_g_path_get_basename:dword 
extrn __imp_g_random_int:dword 
extrn __imp_g_realloc:dword 
extrn __imp_g_return_if_fail_warning:dword
			
extrn __imp_g_slist_append:dword 
extrn __imp_g_slist_delete_link:dword 
extrn __imp_g_slist_find:dword 
extrn __imp_g_slist_find_custom:dword 
extrn __imp_g_slist_free:dword 
extrn __imp_g_slist_insert_sorted:dword	
extrn __imp_g_slist_prepend:dword 
extrn __imp_g_slist_remove:dword 
extrn __imp_g_snprintf:dword 
extrn __imp_g_str_equal:dword 
extrn __imp_g_str_has_prefix:dword 
extrn __imp_g_str_hash:dword 
extrn __imp_g_strchomp:dword 
extrn __imp_g_strchug:dword 
extrn __imp_g_strcmp0:dword 
extrn __imp_g_strconcat:dword 
extrn __imp_g_strdup:dword 
extrn __imp_g_strdup_printf:dword 
extrn __imp_g_strfreev:dword 
extrn __imp_g_string_append:dword 
extrn __imp_g_string_append_len:dword 
extrn __imp_g_string_append_printf:dword
			
extrn __imp_g_string_append_unichar:dword
			
extrn __imp_g_string_erase:dword 
extrn __imp_g_string_free:dword	
extrn __imp_g_string_insert_c:dword 
extrn __imp_g_string_new:dword 
extrn __imp_g_string_new_len:dword 
extrn __imp_g_string_printf:dword 
extrn __imp_g_string_sized_new:dword 
extrn __imp_g_string_truncate:dword 
extrn __imp_g_strlcat:dword 
extrn __imp_g_strlcpy:dword 
extrn __imp_g_strndup:dword 
extrn __imp_g_strrstr:dword 
extrn __imp_g_strsplit:dword 
extrn __imp_g_strv_length:dword	
extrn __imp_g_unichar_isgraph:dword 
extrn __imp_g_unichar_isspace:dword 
extrn __imp_g_utf8_casefold:dword 
extrn __imp_g_utf8_collate:dword 
extrn __imp_g_utf8_get_char:dword 
extrn __imp_g_utf8_normalize:dword 
extrn g_utf8_skip:dword	
			
extrn __imp_g_utf8_validate:dword 
extrn __imp_g_warn_message:dword 
extrn __imp_g_boxed_copy:dword 
extrn __imp_g_boxed_free:dword 
extrn __imp_g_boxed_type_register_static:dword
			
extrn __imp_g_object_class_install_property:dword
			
extrn __imp_g_object_get:dword 
extrn __imp_g_object_new:dword 
extrn __imp_g_object_ref:dword 
extrn __imp_g_object_set:dword 
extrn __imp_g_object_unref:dword 
extrn __imp_g_param_spec_boolean:dword 
extrn __imp_g_param_spec_object:dword 
extrn __imp_g_param_spec_pointer:dword 
extrn __imp_g_param_spec_string:dword 
extrn __imp_g_type_check_class_cast:dword
			
extrn __imp_g_type_check_instance_cast:dword
			
extrn __imp_g_type_check_instance_is_a:dword
			
extrn __imp_g_type_class_add_private:dword
			
extrn __imp_g_type_class_peek_parent:dword
			
extrn __imp_g_type_class_ref:dword 
extrn __imp_g_type_instance_get_private:dword
			
extrn __imp_g_type_name:dword 
extrn __imp_g_type_register_static:dword
			
extrn __imp_g_value_dup_string:dword 
extrn __imp_g_value_get_boolean:dword 
extrn __imp_g_value_get_object:dword 
extrn __imp_g_value_get_pointer:dword 
extrn __imp_g_value_set_boolean:dword 
extrn __imp_g_value_set_object:dword 
extrn __imp_g_value_set_pointer:dword 
extrn __imp_g_value_set_string:dword 
extrn __imp_libintl_dgettext:dword 
extrn __imp_xmlCreatePushParserCtxt:dword
			
extrn __imp_xmlCtxtGetLastError:dword 
extrn __imp_xmlFreeParserCtxt:dword 
extrn __imp_xmlParseChunk:dword	
extrn __imp_xmlStrcmp:dword 
extrn __imp__purple_network_set_common_socket_flags:dword
			
extrn __imp_purple_account_disconnect:dword
			
extrn __imp_purple_account_get_active_status:dword
			
extrn __imp_purple_account_get_alias:dword
			
extrn __imp_purple_account_get_bool:dword
			
extrn __imp_purple_account_get_check_mail:dword
			
extrn __imp_purple_account_get_connection:dword
			
extrn __imp_purple_account_get_int:dword
			
extrn __imp_purple_account_get_password:dword
			
extrn __imp_purple_account_get_presence:dword
			
extrn __imp_purple_account_get_protocol_id:dword
			
extrn __imp_purple_account_get_remember_password:dword
			
extrn __imp_purple_account_get_string:dword
			
extrn __imp_purple_account_get_user_info:dword
			
extrn __imp_purple_account_get_username:dword
			
extrn __imp_purple_account_is_connected:dword
			
extrn __imp_purple_account_request_authorization:dword
			
extrn __imp_purple_account_request_password:dword
			
extrn __imp_purple_account_set_bool:dword
			
extrn __imp_purple_account_set_enabled:dword
			
extrn __imp_purple_account_set_password:dword
			
extrn __imp_purple_account_set_remember_password:dword
			
extrn __imp_purple_account_set_string:dword
			
extrn __imp_purple_account_set_user_info:dword
			
extrn __imp_purple_account_set_username:dword
			
extrn __imp_purple_accounts_get_all_active:dword
			
extrn __imp_purple_attention_type_get_outgoing_desc:dword
			
extrn __imp_purple_attention_type_new:dword
			
extrn __imp_purple_base16_encode:dword 
extrn __imp_purple_base64_decode:dword 
extrn __imp_purple_base64_encode:dword 
extrn __imp_purple_blist_add_buddy:dword
			
extrn __imp_purple_blist_add_group:dword
			
extrn __imp_purple_blist_alias_buddy:dword
			
extrn __imp_purple_blist_get_root:dword	
extrn __imp_purple_blist_node_get_first_child:dword
			
extrn __imp_purple_blist_node_get_sibling_next:dword
			
extrn __imp_purple_blist_node_get_string:dword
			
extrn __imp_purple_blist_node_get_type:dword
			
extrn __imp_purple_blist_node_set_string:dword
			
extrn __imp_purple_blist_remove_buddy:dword
			
extrn __imp_purple_blist_rename_buddy:dword
			
extrn __imp_purple_blist_request_add_buddy:dword
			
extrn __imp_purple_buddy_get_account:dword
			
extrn __imp_purple_buddy_get_alias:dword
			
extrn __imp_purple_buddy_get_contact_alias:dword
			
extrn __imp_purple_buddy_get_group:dword
			
extrn __imp_purple_buddy_get_local_buddy_alias:dword
			
extrn __imp_purple_buddy_get_name:dword	
extrn __imp_purple_buddy_get_presence:dword
			
extrn __imp_purple_buddy_icons_find_account_icon:dword
			
extrn __imp_purple_buddy_icons_get_checksum_for_user:dword
			
extrn __imp_purple_buddy_icons_set_for_user:dword
			
extrn __imp_purple_buddy_new:dword 
extrn __imp_purple_chat_get_account:dword
			
extrn __imp_purple_chat_get_components:dword
			
extrn __imp_purple_cipher_context_append:dword
			
extrn __imp_purple_cipher_context_destroy:dword
			
extrn __imp_purple_cipher_context_digest:dword
			
extrn __imp_purple_cipher_context_digest_to_str:dword
			
extrn __imp_purple_cipher_context_new:dword
			
extrn __imp_purple_cipher_context_new_by_name:dword
			
extrn __imp_purple_cipher_context_reset:dword
			
extrn __imp_purple_cipher_context_set_key:dword
			
extrn __imp_purple_cipher_context_set_key_with_len:dword
			
extrn __imp_purple_cipher_context_set_option:dword
			
extrn __imp_purple_ciphers_find_cipher:dword
			
extrn __imp_purple_circ_buffer_append:dword
			
extrn __imp_purple_circ_buffer_destroy:dword
			
extrn __imp_purple_circ_buffer_get_max_read:dword
			
extrn __imp_purple_circ_buffer_mark_read:dword
			
extrn __imp_purple_circ_buffer_new:dword
			
extrn __imp_purple_cmd_register:dword 
extrn __imp_purple_cmd_unregister:dword	
extrn __imp_purple_connection_error_reason:dword
			
extrn __imp_purple_connection_get_account:dword
			
extrn __imp_purple_connection_get_display_name:dword
			
extrn __imp_purple_connection_get_password:dword
			
extrn __imp_purple_connection_get_protocol_data:dword
			
extrn __imp_purple_connection_get_prpl:dword
			
extrn __imp_purple_connection_set_display_name:dword
			
extrn __imp_purple_connection_set_state:dword
			
extrn __imp_purple_connection_ssl_error:dword
			
extrn __imp_purple_connection_update_progress:dword
			
extrn __imp_purple_connections_get_all:dword
			
extrn __imp_purple_conv_chat_add_user:dword
			
extrn __imp_purple_conv_chat_find_user:dword
			
extrn __imp_purple_conv_chat_get_id:dword
			
extrn __imp_purple_conv_chat_get_topic:dword
			
extrn __imp_purple_conv_chat_remove_user:dword
			
extrn __imp_purple_conv_chat_rename_user:dword
			
extrn __imp_purple_conv_chat_set_nick:dword
			
extrn __imp_purple_conv_chat_set_topic:dword
			
extrn __imp_purple_conv_chat_user_set_flags:dword
			
extrn __imp_purple_conv_chat_write:dword
			
extrn __imp_purple_conv_custom_smiley_add:dword
			
extrn __imp_purple_conv_custom_smiley_close:dword
			
extrn __imp_purple_conv_custom_smiley_write:dword
			
extrn __imp_purple_conversation_get_account:dword
			
extrn __imp_purple_conversation_get_chat_data:dword
			
extrn __imp_purple_conversation_get_gc:dword
			
extrn __imp_purple_conversation_get_name:dword
			
extrn __imp_purple_conversation_get_type:dword
			
extrn __imp_purple_conversation_new:dword
			
extrn __imp_purple_conversation_set_name:dword
			
extrn __imp_purple_conversation_write:dword
			
extrn __imp_purple_core_get_ui:dword 
extrn __imp_purple_core_get_ui_info:dword
			
extrn __imp_purple_debug_error:dword 
extrn __imp_purple_debug_info:dword 
extrn __imp_purple_debug_is_unsafe:dword
			
extrn __imp_purple_debug_is_verbose:dword
			
extrn __imp_purple_debug_misc:dword 
extrn __imp_purple_debug_warning:dword 
extrn __imp_purple_dnsquery_a_account:dword
			
extrn __imp_purple_dnsquery_destroy:dword
			
extrn __imp_purple_email_is_valid:dword	
extrn __imp_purple_find_buddies:dword 
extrn __imp_purple_find_buddy:dword 
extrn __imp_purple_find_conversation_with_account:dword
			
extrn __imp_purple_find_group:dword 
extrn __imp_purple_get_attention_type_from_code:dword
			
extrn __imp_purple_get_tzoff_str:dword 
extrn __imp_purple_group_get_name:dword	
extrn __imp_purple_group_new:dword 
extrn __imp_purple_imgstore_add_with_id:dword
			
extrn __imp_purple_imgstore_get_data:dword
			
extrn __imp_purple_imgstore_get_extension:dword
			
extrn __imp_purple_imgstore_get_size:dword
			
extrn __imp_purple_imgstore_unref:dword	
extrn __imp_purple_imgstore_unref_by_id:dword
			
extrn __imp_purple_input_add:dword 
extrn __imp_purple_input_remove:dword 
extrn __imp_purple_ip_address_is_valid:dword
			
extrn __imp_purple_ipv6_address_is_valid:dword
			
extrn __imp_purple_markup_escape_text:dword
			
extrn __imp_purple_markup_html_to_xhtml:dword
			
extrn __imp_purple_markup_linkify:dword	
extrn __imp_purple_markup_strip_html:dword
			
extrn purple_marshal_BOOLEAN__POINTER_POINTER_POINTER:dword
			
extrn purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER:dword
			
extrn purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER:dword
			
extrn purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER:dword
			
extrn purple_marshal_VOID__POINTER:dword 
extrn purple_marshal_VOID__POINTER_POINTER:dword
			
extrn __imp_purple_menu_action_new:dword
			
extrn __imp_purple_network_get_all_local_system_ips:dword
			
extrn __imp_purple_network_get_my_ip:dword
			
extrn __imp_purple_network_get_port_from_fd:dword
			
extrn __imp_purple_network_get_stun_ip:dword
			
extrn __imp_purple_network_listen_cancel:dword
			
extrn __imp_purple_network_listen_range:dword
			
extrn __imp_purple_network_remove_port_mapping:dword
			
extrn __imp_purple_notify_emails:dword 
extrn __imp_purple_notify_formatted:dword
			
extrn __imp_purple_notify_message:dword	
extrn __imp_purple_notify_searchresults:dword
			
extrn __imp_purple_notify_searchresults_button_add:dword
			
extrn __imp_purple_notify_searchresults_column_add:dword
			
extrn __imp_purple_notify_searchresults_column_new:dword
			
extrn __imp_purple_notify_searchresults_new:dword
			
extrn __imp_purple_notify_searchresults_row_add:dword
			
extrn __imp_purple_notify_uri:dword 
extrn __imp_purple_notify_user_info_add_pair:dword
			
extrn __imp_purple_notify_user_info_add_pair_plaintext:dword
			
extrn __imp_purple_notify_user_info_add_section_break:dword
			
extrn __imp_purple_notify_user_info_add_section_header:dword
			
extrn __imp_purple_notify_user_info_destroy:dword
			
extrn __imp_purple_notify_user_info_get_entries:dword
			
extrn __imp_purple_notify_user_info_new:dword
			
extrn __imp_purple_notify_user_info_prepend_pair:dword
			
extrn __imp_purple_notify_user_info_prepend_section_break:dword
			
extrn __imp_purple_notify_userinfo:dword
			
extrn __imp_purple_plugin_action_new:dword
			
extrn __imp_purple_plugin_ipc_register:dword
			
extrn __imp_purple_plugin_ipc_unregister_all:dword
			
extrn __imp_purple_presence_get_active_status:dword
			
extrn __imp_purple_presence_get_idle_time:dword
			
extrn __imp_purple_presence_get_status:dword
			
extrn __imp_purple_presence_is_idle:dword
			
extrn __imp_purple_presence_is_online:dword
			
extrn __imp_purple_presence_is_status_primitive_active:dword
			
extrn __imp_purple_privacy_deny_add:dword
			
extrn __imp_purple_privacy_deny_remove:dword
			
extrn __imp_purple_proxy_connect:dword 
extrn __imp_purple_proxy_connect_cancel:dword
			
extrn __imp_purple_proxy_connect_cancel_with_handle:dword
			
extrn __imp_purple_proxy_connect_socks5_account:dword
			
extrn __imp_purple_proxy_get_setup:dword
			
extrn __imp_purple_proxy_info_destroy:dword
			
extrn __imp_purple_proxy_info_get_type:dword
			
extrn __imp_purple_proxy_info_new:dword	
extrn __imp_purple_proxy_info_set_host:dword
			
extrn __imp_purple_proxy_info_set_port:dword
			
extrn __imp_purple_proxy_info_set_type:dword
			
extrn __imp_purple_prpl_got_account_actions:dword
			
extrn __imp_purple_prpl_got_attention:dword
			
extrn __imp_purple_prpl_got_media_caps:dword
			
extrn __imp_purple_prpl_got_user_idle:dword
			
extrn __imp_purple_prpl_got_user_status:dword
			
extrn __imp_purple_prpl_got_user_status_deactive:dword
			
extrn __imp_purple_request_action:dword	
extrn __imp_purple_request_close:dword 
extrn __imp_purple_request_field_bool_get_value:dword
			
extrn __imp_purple_request_field_bool_new:dword
			
extrn __imp_purple_request_field_choice_add:dword
			
extrn __imp_purple_request_field_choice_get_labels:dword
			
extrn __imp_purple_request_field_choice_get_value:dword
			
extrn __imp_purple_request_field_choice_new:dword
			
extrn __imp_purple_request_field_get_id:dword
			
extrn __imp_purple_request_field_group_add_field:dword
			
extrn __imp_purple_request_field_group_get_fields:dword
			
extrn __imp_purple_request_field_group_new:dword
			
extrn __imp_purple_request_field_label_new:dword
			
extrn __imp_purple_request_field_list_add_icon:dword
			
extrn __imp_purple_request_field_list_add_selected:dword
			
extrn __imp_purple_request_field_list_get_data:dword
			
extrn __imp_purple_request_field_list_get_selected:dword
			
extrn __imp_purple_request_field_list_new:dword
			
extrn __imp_purple_request_field_list_set_multi_select:dword
			
extrn __imp_purple_request_field_set_required:dword
			
extrn __imp_purple_request_field_set_type_hint:dword
			
extrn __imp_purple_request_field_set_visible:dword
			
extrn __imp_purple_request_field_string_get_value:dword
			
extrn __imp_purple_request_field_string_new:dword
			
extrn __imp_purple_request_field_string_set_masked:dword
			
extrn __imp_purple_request_fields:dword	
extrn __imp_purple_request_fields_add_group:dword
			
extrn __imp_purple_request_fields_get_bool:dword
			
extrn __imp_purple_request_fields_get_field:dword
			
extrn __imp_purple_request_fields_get_groups:dword
			
extrn __imp_purple_request_fields_get_string:dword
			
extrn __imp_purple_request_fields_new:dword
			
extrn __imp_purple_request_input:dword 
extrn __imp_purple_roomlist_field_new:dword
			
extrn __imp_purple_roomlist_new:dword 
extrn __imp_purple_roomlist_room_add:dword
			
extrn __imp_purple_roomlist_room_add_field:dword
			
extrn __imp_purple_roomlist_room_new:dword
			
extrn __imp_purple_roomlist_set_fields:dword
			
extrn __imp_purple_roomlist_set_in_progress:dword
			
extrn __imp_purple_roomlist_unref:dword	
extrn __imp_purple_serv_got_join_chat_failed:dword
			
extrn __imp_purple_serv_got_private_alias:dword
			
extrn __imp_purple_signal_connect:dword	
extrn __imp_purple_signal_connect_priority:dword
			
extrn __imp_purple_signal_emit:dword 
extrn __imp_purple_signal_emit_return_1:dword
			
extrn __imp_purple_signal_register:dword
			
extrn __imp_purple_signals_unregister_by_instance:dword
			
extrn __imp_purple_smiley_get_shortcut:dword
			
extrn __imp_purple_smiley_get_stored_image:dword
			
extrn __imp_purple_smileys_get_all:dword
			
extrn __imp_purple_srv_cancel:dword 
extrn __imp_purple_srv_resolve_account:dword
			
extrn __imp_purple_ssl_close:dword 
extrn __imp_purple_ssl_connect:dword 
extrn __imp_purple_ssl_connect_with_host_fd:dword
			
extrn __imp_purple_ssl_input_add:dword 
extrn __imp_purple_ssl_is_supported:dword
			
extrn __imp_purple_ssl_read:dword 
extrn __imp_purple_ssl_write:dword 
extrn __imp_purple_status_get_attr_boolean:dword
			
extrn __imp_purple_status_get_attr_int:dword
			
extrn __imp_purple_status_get_attr_string:dword
			
extrn __imp_purple_status_get_attr_value:dword
			
extrn __imp_purple_status_get_id:dword 
extrn __imp_purple_status_get_type:dword
			
extrn __imp_purple_status_is_active:dword
			
extrn __imp_purple_status_is_exclusive:dword
			
extrn __imp_purple_status_type_get_primitive:dword
			
extrn __imp_purple_status_type_new_with_attrs:dword
			
extrn __imp_purple_str_has_prefix:dword	
extrn __imp_purple_str_seconds_to_string:dword
			
extrn __imp_purple_str_to_time:dword 
extrn __imp_purple_strcasestr:dword 
extrn __imp_purple_strdup_withhtml:dword
			
extrn __imp_purple_strequal:dword 
extrn __imp_purple_strreplace:dword 
extrn __imp_purple_time_format:dword 
extrn __imp_purple_timeout_add:dword 
extrn __imp_purple_timeout_add_seconds:dword
			
extrn __imp_purple_timeout_remove:dword	
extrn __imp_purple_txt_resolve_account:dword
			
extrn __imp_purple_txt_response_destroy:dword
			
extrn __imp_purple_txt_response_get_content:dword
			
extrn __imp_purple_unescape_html:dword 
extrn __imp_purple_unescape_text:dword 
extrn __imp_purple_url_parse:dword 
extrn __imp_purple_utf8_strcasecmp:dword
			
extrn __imp_purple_utf8_strftime:dword 
extrn __imp_purple_utf8_strip_unprintables:dword
			
extrn __imp_purple_util_fetch_url_cancel:dword
			
extrn __imp_purple_util_fetch_url_request:dword
			
extrn __imp_purple_util_fetch_url_request_len:dword
			
extrn __imp_purple_util_format_song_info:dword
			
extrn __imp_purple_util_read_xml_from_file:dword
			
extrn __imp_purple_util_write_data_to_file:dword
			
extrn __imp_purple_uuid_random:dword 
extrn __imp_purple_value_new:dword 
extrn __imp_purple_value_new_outgoing:dword
			
extrn __imp_purple_value_set_boolean:dword
			
extrn __imp_purple_value_set_int:dword 
extrn __imp_purple_xfer_cancel_local:dword
			
extrn __imp_purple_xfer_cancel_remote:dword
			
extrn __imp_purple_xfer_end:dword 
extrn __imp_purple_xfer_get_bytes_remaining:dword
			
extrn __imp_purple_xfer_get_remote_user:dword
			
extrn __imp_purple_xfer_get_status:dword
			
extrn __imp_purple_xfer_get_type:dword 
extrn __imp_purple_xfer_new:dword 
extrn __imp_purple_xfer_prpl_ready:dword
			
extrn __imp_purple_xfer_ref:dword 
extrn __imp_purple_xfer_request:dword 
extrn __imp_purple_xfer_request_accepted:dword
			
extrn __imp_purple_xfer_set_cancel_recv_fnc:dword
			
extrn __imp_purple_xfer_set_cancel_send_fnc:dword
			
extrn __imp_purple_xfer_set_completed:dword
			
extrn __imp_purple_xfer_set_end_fnc:dword
			
extrn __imp_purple_xfer_set_filename:dword
			
extrn __imp_purple_xfer_set_init_fnc:dword
			
extrn __imp_purple_xfer_set_read_fnc:dword
			
extrn __imp_purple_xfer_set_request_denied_fnc:dword
			
extrn __imp_purple_xfer_set_size:dword 
extrn __imp_purple_xfer_set_start_fnc:dword
			
extrn __imp_purple_xfer_set_write_fnc:dword
			
extrn __imp_purple_xfer_start:dword 
extrn __imp_purple_xfer_unref:dword 
extrn __imp_serv_got_alias:dword 
extrn __imp_serv_got_chat_in:dword 
extrn __imp_serv_got_chat_invite:dword 
extrn __imp_serv_got_chat_left:dword 
extrn __imp_serv_got_im:dword 
extrn __imp_serv_got_joined_chat:dword 
extrn __imp_serv_got_typing:dword 
extrn __imp_serv_got_typing_stopped:dword
			
extrn __imp_serv_set_info:dword	
extrn __imp_wpurple_close:dword	
extrn __imp_wpurple_gethostname:dword 
extrn __imp_wpurple_inet_ntop:dword 
extrn __imp_wpurple_install_dir:dword 
extrn __imp_wpurple_read:dword 
extrn __imp_wpurple_strerror:dword 
extrn __imp_wpurple_write:dword	
extrn __imp_xmlnode_copy:dword 
extrn __imp_xmlnode_free:dword 
extrn __imp_xmlnode_from_str:dword 
extrn __imp_xmlnode_get_attrib:dword 
extrn __imp_xmlnode_get_attrib_with_namespace:dword
			
extrn __imp_xmlnode_get_child:dword 
extrn __imp_xmlnode_get_child_with_namespace:dword
			
extrn __imp_xmlnode_get_data:dword 
extrn __imp_xmlnode_get_namespace:dword	
extrn __imp_xmlnode_get_next_twin:dword	
extrn __imp_xmlnode_get_parent:dword 
extrn __imp_xmlnode_insert_child:dword 
extrn __imp_xmlnode_insert_data:dword 
extrn __imp_xmlnode_new:dword 
extrn __imp_xmlnode_new_child:dword 
extrn __imp_xmlnode_remove_attrib:dword	
extrn __imp_xmlnode_set_attrib:dword 
extrn __imp_xmlnode_set_attrib_full:dword
			
extrn __imp_xmlnode_set_namespace:dword	
extrn __imp_xmlnode_set_prefix:dword 
extrn __imp_xmlnode_to_formatted_str:dword
			
extrn __imp_xmlnode_to_str:dword 
extrn __imp_DeleteCriticalSection:dword	
extrn __imp_EnterCriticalSection:dword 
extrn __imp_GetComputerNameA:dword 
extrn __imp_GetLastError:dword 
extrn __imp_GetModuleHandleA:dword 
extrn __imp_GetProcAddress:dword 
extrn __imp_GetSystemInfo:dword	
extrn __imp_GetVersionExA:dword	
extrn __imp_InitializeCriticalSection:dword
			
extrn __imp_LeaveCriticalSection:dword 
extrn __imp_SetErrorMode:dword 
extrn __imp_TlsGetValue:dword 
extrn __imp_VirtualProtect:dword 
extrn __imp_VirtualQuery:dword 
extrn __imp___dllonexit:dword 
extrn __imp__errno:dword 
extrn _iob:dword	
extrn __imp_abort:dword	
extrn __imp_atoi:dword	
extrn __imp_calloc:dword 
extrn __imp_fflush:dword 
extrn __imp_floor:dword	
extrn __imp_free:dword	
extrn __imp_fwrite:dword 
extrn __imp_gmtime:dword 
extrn __imp_localtime:dword 
extrn __imp_malloc:dword 
extrn __imp_memcmp:dword 
extrn __imp_memcpy:dword 
extrn __imp_sprintf:dword 
extrn __imp_sscanf:dword 
extrn __imp_strchr:dword 
extrn __imp_strcmp:dword 
extrn __imp_strcpy:dword 
extrn __imp_strncmp:dword 
extrn __imp_strrchr:dword 
extrn __imp_strstr:dword 
extrn __imp_strtol:dword 
extrn __imp_strtoul:dword 
extrn __imp_time:dword	
extrn __imp_vfprintf:dword 
extrn __imp_accept:dword 
extrn __imp_ntohl:dword	
extrn __imp_ntohs:dword	
extrn __imp___stack_chk_fail:dword 
extrn __stack_chk_guard:dword 
			
extrn sasl_client_init:dword 
			
extrn sasl_client_new:dword 
			
extrn sasl_client_start:dword 
			
extrn sasl_client_step:dword 
			
			
extrn sasl_decode:dword	
			
extrn sasl_dispose:dword 
			
extrn sasl_encode:dword	
			
extrn sasl_errdetail:dword 
			
extrn sasl_getprop:dword 
			
			
extrn sasl_set_path:dword 
			
extrn sasl_setprop:dword 
			
assume cs:_CRT

dd 0
dd offset TlsCallback_1
dd 0
dd 0
			
align 1000h
assume cs:_tls

db 0
align 1000h
end DllEntryPoint

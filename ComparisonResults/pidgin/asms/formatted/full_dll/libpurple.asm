include	uni.inc	
assume cs:_text

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
push	ebx
sub	esp, 18h
mov	edx, ds:Memory
test	edx, edx
jz	short loc_67CC1042
mov	ebx, ds:dword_67D72004
sub	ebx, 4
cmp	edx, ebx
ja	short loc_67CC1030
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CC1014
call	eax
mov	edx, ds:Memory
sub	ebx, 4
cmp	edx, ebx
jbe	short loc_67CC101B
mov	[esp+1Ch+Memory], edx 
call	free
mov	ds:Memory, 0
mov	[esp+1Ch+Memory], 0 
call	fflush
add	esp, 18h
pop	ebx
retn
align 10h
public DllEntryPoint
sub	esp, 2Ch
mov	[esp+2Ch+var_C], ebx
mov	ebx, [esp+2Ch+fdwReason]
mov	[esp+2Ch+var_8], esi
mov	esi, [esp+2Ch+hinstDLL]
mov	[esp+2Ch+var_4], edi
mov	edi, [esp+2Ch+lpReserved]
cmp	ebx, 1
jz	short loc_67CC10C4
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+Size],	esi
call	sub_67D2EA60
sub	esp, 0Ch
test	ebx, ebx
jnz	short loc_67CC10B2
mov	edx, ds:Memory
test	edx, edx
jz	loc_67CC1130
mov	[esp+2Ch+var_10], eax
call	sub_67CC1000
mov	eax, [esp+2Ch+var_10]
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn	0Ch
mov	[esp+2Ch+Size],	80h 
call	malloc
test	eax, eax
mov	ds:Memory, eax
jz	short loc_67CC1137
mov	dword ptr [eax], 0
mov	ds:dword_67D72004, eax
mov	eax, ds:off_67D4A0A4
test	eax, eax
jz	short loc_67CC1101
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+Size],	esi
call	eax 
sub	esp, 0Ch
call	sub_67D2F5A0
call	sub_67D2F800
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+Size],	esi
call	sub_67D2EA60
sub	esp, 0Ch
test	eax, eax
jz	loc_67CC10A5
jmp	short loc_67CC10B2
align 10h
xor	eax, eax
jmp	loc_67CC10B2
mov	esi, esi
lea	edi, [edi+0]
call	_errno
mov	dword ptr [eax], 0Ch
xor	eax, eax
jmp	loc_67CC10B2
align 10h
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], offset dword_67D72004
mov	[esp+1Ch+var_18], offset Memory
mov	[esp+1Ch+var_1C], eax
call	__dllonexit
cmp	eax, 1
sbb	eax, eax
add	esp, 1Ch
retn
align 10h
sub	esp, 1Ch
mov	eax, [esp+20h]
mov	dword ptr [esp+8], offset dword_67D72004
mov	dword ptr [esp+4], offset Memory
mov	[esp], eax
call	__dllonexit
add	esp, 1Ch
retn
align 10h
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_67CC123C
mov	[esp+18h+lpProcName], offset ProcName 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short loc_67CC11FF
mov	[esp+18h+lpProcName], offset dword_67D72008
mov	[esp+18h+lpModuleName],	offset dword_67D590A4
call	eax
mov	ecx, dword_67D30A64
test	ecx, ecx
jz	short locret_67CC123A
mov	[esp+18h+lpModuleName],	offset aLibgcj13_dll 
call	GetModuleHandleA
push	edx
test	eax, eax
jz	short loc_67CC1244
mov	[esp+18h+lpProcName], offset a_jv_registercl 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_67CC123A
mov	[esp+18h+lpModuleName],	offset dword_67D30A64
call	eax
			
leave
retn
mov	eax, 0
jmp	short loc_67CC11EA
align 4
mov	eax, 0
jmp	short loc_67CC122D
align 4
push	ebp
mov	ebp, esp
sub	esp, 18h
mov	[esp+18h+lpModuleName],	offset ModuleName 
call	GetModuleHandleA
push	ecx
test	eax, eax
jz	short loc_67CC1288
mov	[esp+18h+lpProcName], offset a__deregister_f 
mov	[esp+18h+lpModuleName],	eax 
call	GetProcAddress
sub	esp, 8
test	eax, eax
jz	short locret_67CC1283
mov	[esp+18h+lpModuleName],	offset dword_67D590A4
call	eax
leave
retn
align 4
mov	eax, 0
jmp	short loc_67CC1276
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
cmp	dword ptr [ebx], 3
jz	short loc_67CC12CC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC12D9
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_67CC12B3
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aSetting 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aName 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib
mov	edx, [esi]
cmp	edx, 2
jz	loc_67CC13DC
cmp	edx, 3
jz	short loc_67CC1350
dec	edx
jz	short loc_67CC1388
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC13E6
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CC1336
mov	[esp+3Ch+var_34], offset aString 
mov	[esp+3Ch+var_38], offset aType 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	eax, [esi+8]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_insert_data
jmp	short loc_67CC1336
mov	[esp+3Ch+var_34], offset aBool 
mov	[esp+3Ch+var_38], offset aType 
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib
mov	eax, [esi+8]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset Format	
mov	[esp+3Ch+var_38], 15h
lea	esi, [esp+3Ch+var_25]
mov	[esp+3Ch+var_3C], esi
call	g_snprintf
mov	[esp+3Ch+var_34], 0FFFFFFFFh
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_insert_data
jmp	loc_67CC1336
mov	[esp+3Ch+var_34], offset aInt 
jmp	short loc_67CC1390
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx+4]
mov	dword ptr [esp+4], offset aThisProtocolDo 
mov	dword ptr [esp], offset	aPidgin	
call	libintl_dgettext
mov	[esp+4], eax
mov	eax, [ebx]
mov	[esp], eax
call	esi
mov	[esp], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC143E
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx+4]
mov	dword ptr [esp+4], offset aThisProtocol_0 
mov	dword ptr [esp], offset	aPidgin	
call	libintl_dgettext
mov	[esp+4], eax
mov	eax, [ebx]
mov	[esp], eax
call	esi
mov	[esp], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1496
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aAccountSigne_0 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC14DE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
dec	dword ptr [eax+1Ch]
jz	short loc_67CC1508
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1527
add	esp, 3Ch
retn
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_3C], edx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	[esp+3Ch+var_3C], eax
call	g_free
xor	eax, eax
jmp	short loc_67CC14F8
call	__stack_chk_fail
			
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, ds:dword_67D72024
test	edx, edx
jz	short loc_67CC155C
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_67CC155C
mov	ecx, [eax+8]
mov	[esp+3Ch+var_3C], ecx
mov	[esp+3Ch+var_20], eax
call	edx
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1570
add	esp, 3Ch
jmp	sub_67CC14E4
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72028
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72028, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_67CC15B0
mov	edx, [ebx+10h]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_20], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aAccountAuthori 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC15E9
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67CC14E4
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72028
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72028, eax
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CC1628
mov	edx, [ebx+10h]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_20], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aAccountAutho_0 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1661
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67CC14E4
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	ebx, [esp+34h]
mov	edi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	g_hash_table_size
test	eax, eax
jnz	short loc_67CC16A4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC16F1
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	dword ptr [esp+4], offset aSettings 
mov	[esp], edi
call	xmlnode_new_child
mov	edi, eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aUi 
mov	[esp], eax
call	xmlnode_set_attrib
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC16F1
mov	[esp+38h], edi
mov	dword ptr [esp+34h], offset sub_67CC12E0
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_hash_table_foreach
			
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, ds:dword_67D7202C
test	edx, edx
jnz	short loc_67CC1731
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CC4D60
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D7202C, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1741
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], edx
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	short loc_67CC1788
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC17CA
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_20], offset sub_67CC1290
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ebx, eax
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_67CC1771
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 38h
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC183C
mov	ecx, [eax+54h]
mov	ebx, [ecx]
cmp	edx, ebx
jz	short loc_67CC182B
mov	[ecx], edx
mov	[esp+3Ch+var_2C], edx
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aAccountErrorCh 
mov	[esp+3Ch+var_3C], offset dword_67D72020
call	purple_signal_emit
call	sub_67CC16F8
test	ebx, ebx
jz	short loc_67CC1823
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], ebx
call	g_free
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC185A
add	esp, 38h
pop	ebx
retn
mov	[esp+3Ch+var_34], offset aAccountNull 
mov	[esp+3Ch+var_38], offset aSet_current_er 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC182B
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_account
mov	ebx, eax
test	eax, eax
jz	short loc_67CC18E4
mov	[esp+4Ch+var_4C], 8
call	g_malloc0
mov	esi, eax
mov	[eax], edi
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esi+4], eax
mov	edx, esi
mov	eax, ebx
call	sub_67CC17D0
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aAccountConnect 
mov	[esp+4Ch+var_4C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1914
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1914
mov	[esp+4Ch+arg_8], offset	aAccountNull 
mov	[esp+4Ch+arg_4], offset	aConnection_err	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_account_set_register_callback
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67CC1954
mov	[eax+4Ch], ecx
mov	[eax+50h], edx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CC1981
add	esp, 18h
pop	ebx
retn
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1981
mov	[esp+1Ch+arg_8], offset	aAccountNull 
mov	[esp+1Ch+arg_4], offset	aPurple_account	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_account_notify_added
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	edi, [esp+2Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC19F0
test	ecx, ecx
jz	short loc_67CC1A20
mov	edx, ds:dword_67D72024
test	edx, edx
jz	short loc_67CC1A3B
mov	edx, [edx]
test	edx, edx
jz	short loc_67CC1A3B
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67CC1A36
mov	[esp+2Ch+arg_10], edi
mov	[esp+2Ch+arg_C], esi
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
mov	eax, [esp+2Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1A36
mov	[esp+2Ch+arg_8], offset	aAccountNull 
mov	[esp+2Ch+arg_4], offset	aPurple_accou_0	
mov	[esp+2Ch+arg_0], 0
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1A36
mov	[esp+2Ch+arg_8], offset	aRemote_userNul	
jmp	short loc_67CC1A04
			
call	__stack_chk_fail
			
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67CC1A36
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
public purple_account_request_add
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	edi, [esp+2Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC1ABC
test	ecx, ecx
jz	short loc_67CC1AEC
mov	edx, ds:dword_67D72024
test	edx, edx
jz	short loc_67CC1B07
mov	edx, [edx+8]
test	edx, edx
jz	short loc_67CC1B07
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67CC1B02
mov	[esp+2Ch+arg_10], edi
mov	[esp+2Ch+arg_C], esi
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
align 4
mov	eax, [esp+2Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1B02
mov	[esp+2Ch+arg_8], offset	aAccountNull 
mov	[esp+2Ch+arg_4], offset	aPurple_accou_1	
mov	[esp+2Ch+arg_0], 0
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1B02
mov	[esp+2Ch+arg_8], offset	aRemote_userNul	
jmp	short loc_67CC1AD0
			
call	__stack_chk_fail
			
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67CC1B02
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_account_request_close_with_account
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC1B84
mov	edx, ds:dword_67D72028
test	edx, edx
jz	short loc_67CC1B50
nop
mov	ebx, [edx]
mov	edi, [edx+4]
cmp	[ebx+4], esi
jz	short loc_67CC1B64
mov	edx, edi
test	edi, edi
jnz	short loc_67CC1B40
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1BA2
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72028
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72028, eax
mov	eax, ebx
call	sub_67CC152C
jmp	short loc_67CC1B4A
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC1B50
call	__stack_chk_fail
align 4
public purple_account_request_close
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC1C10
mov	edx, ds:dword_67D72028
test	edx, edx
jz	short loc_67CC1BDC
nop
mov	ebx, [edx]
mov	edi, [edx+4]
cmp	[ebx+8], esi
jz	short loc_67CC1BF0
mov	edx, edi
test	edi, edi
jnz	short loc_67CC1BCC
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1C2E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72028
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72028, eax
mov	eax, ebx
call	sub_67CC152C
jmp	short loc_67CC1BD6
align 10h
mov	[esp+2Ch+var_24], offset aUi_handleNull	
mov	[esp+2Ch+var_28], offset aPurple_accou_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC1BDC
call	__stack_chk_fail
align 4
public purple_account_request_authorization
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_3C], edx
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_38], edx
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_40], edx
mov	edx, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_34], edx
mov	ebp, [esp+7Ch+arg_18]
mov	edx, [esp+7Ch+arg_1C]
mov	[esp+7Ch+var_44], edx
mov	edi, [esp+7Ch+arg_20]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC1D54
test	esi, esi
jz	loc_67CC1D78
mov	edx, ds:dword_67D72024
mov	[esp+7Ch+var_30], edx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aAccountAutho_1 
mov	[esp+7Ch+var_7C], offset dword_67D72020
call	purple_signal_emit_return_1
cmp	eax, 0
jle	short loc_67CC1CF8
test	ebp, ebp
jz	short loc_67CC1D38
mov	[esp+7Ch+var_7C], edi
call	ebp
xor	eax, eax
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC1E5B
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jnz	short loc_67CC1D3C
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aAccountAutho_2 
mov	[esp+7Ch+var_7C], offset dword_67D72020
call	purple_signal_emit_return_1
cmp	eax, 0FFFFFFFFh
jz	short loc_67CC1D3C
cmp	eax, 1
jz	short loc_67CC1CD4
cmp	eax, 0FFFFFFFEh
jz	short loc_67CC1D38
mov	eax, [esp+7Ch+var_30]
test	eax, eax
jnz	short loc_67CC1D9C
lea	esi, [esi+0]
			
xor	eax, eax
jmp	short loc_67CC1CDF
			
mov	eax, [esp+7Ch+var_44]
test	eax, eax
jz	short loc_67CC1D38
mov	[esp+7Ch+var_7C], edi
mov	edx, [esp+7Ch+var_44]
call	edx
xor	eax, eax
jmp	short loc_67CC1CDF
align 4
mov	[esp+7Ch+var_74], offset aAccountNull 
mov	[esp+7Ch+var_78], offset aPurple_accou_4 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CC1CDF
align 4
mov	[esp+7Ch+var_74], offset aRemote_userNul 
mov	[esp+7Ch+var_78], offset aPurple_accou_4 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CC1CDF
align 4
mov	edx, [esp+7Ch+var_30]
mov	ecx, [edx+0Ch]
test	ecx, ecx
jz	short loc_67CC1D38
mov	[esp+7Ch+var_7C], 20h
call	g_malloc0
mov	dword ptr [eax], 0
mov	[eax+4], ebx
mov	[eax+14h], ebp
mov	edx, [esp+7Ch+var_44]
mov	[eax+18h], edx
mov	[eax+10h], edi
mov	[esp+7Ch+var_7C], esi
mov	[esp+7Ch+var_48], eax
call	g_strdup
mov	ecx, [esp+7Ch+var_48]
mov	[ecx+0Ch], eax
mov	dword ptr [ecx+1Ch], 2
mov	[esp+7Ch+var_5C], ecx
mov	[esp+7Ch+var_60], offset sub_67CC1578
mov	[esp+7Ch+var_64], offset sub_67CC15F0
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_68], edx
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_6C], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
mov	edx, [esp+7Ch+var_30]
call	dword ptr [edx+0Ch]
mov	ecx, [esp+7Ch+var_48]
mov	[ecx+8], eax
mov	eax, ecx
call	sub_67CC14E4
mov	ebx, eax
test	eax, eax
jz	loc_67CC1D38
mov	[esp+7Ch+var_78], eax
mov	eax, ds:dword_67D72028
mov	[esp+7Ch+var_7C], eax
call	g_list_append
mov	ds:dword_67D72028, eax
mov	eax, [ebx+8]
jmp	loc_67CC1CDF
call	__stack_chk_fail
public purple_account_set_username
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC1EBC
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
call	sub_67CC16F8
call	purple_blist_get_ui_ops
test	eax, eax
jz	short loc_67CC1ED8
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CC1ED8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC1EEA
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1EEA
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public purple_account_set_password
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC1F38
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1F66
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CC16F8
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC1F66
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_account_set_alias
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC1FF8
mov	ebx, [esi+4]
cmp	ebx, edi
jz	loc_67CC2014
test	edi, edi
jz	loc_67CC2028
test	ebx, ebx
jz	short loc_67CC1FB0
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	g_utf8_collate
test	eax, eax
jz	short loc_67CC2014
			
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[esi+4], eax
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aAccountAliasCh 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2031
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CC16F8
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2031
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
test	ebx, ebx
jnz	short loc_67CC1FB0
jmp	loc_67CC1FA0
			
call	__stack_chk_fail
align 4
public purple_account_set_user_info
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC2080
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC20AE
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CC16F8
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC20AE
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_account_set_buddy_icon_path
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC20FC
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC212A
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CC16F8
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_accou_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC212A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public purple_account_set_protocol_id
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC217C
test	esi, esi
jz	short loc_67CC21AC
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC21CA
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CC16F8
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC21CA
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aProtocol_idNul 
mov	[esp+2Ch+var_28], offset aPurple_acco_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2198
			
call	__stack_chk_fail
align 10h
public purple_account_set_connection
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC2200
mov	[eax+1Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC221E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC21EE
call	__stack_chk_fail
align 4
public purple_account_set_remember_password
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC2258
mov	[eax+14h], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CC2284
add	esp, 2Ch
jmp	sub_67CC16F8
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2284
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+40h]
mov	esi, [esp+44h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	dword ptr [esp+4], offset aPassword 
mov	[esp], esi
call	purple_request_fields_get_string
mov	ebx, eax
mov	dword ptr [esp+4], offset aRemember 
mov	[esp], esi
call	purple_request_fields_get_bool
test	ebx, ebx
jz	short loc_67CC230C
cmp	byte ptr [ebx],	0
jz	short loc_67CC230C
test	eax, eax
jnz	loc_67CC2358
mov	[esp+4], ebx
mov	[esp], edi
call	purple_account_set_password
mov	[esp+8], ebx
mov	dword ptr [esp+4], 0
mov	[esp], edi
call	_purple_connection_new
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC236D
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
mov	dword ptr [esp+4], offset aPasswordIsRequ 
mov	dword ptr [esp], offset	aPidgin	
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	[esp], edi
call	purple_notify_message
jmp	short loc_67CC22F8
align 4
mov	dword ptr [esp+4], 1
mov	[esp], edi
call	purple_account_set_remember_password
jmp	loc_67CC22D8
call	__stack_chk_fail
align 4
public purple_account_set_proxy_info
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC23B8
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_67CC239F
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_info_destroy
mov	[ebx+2Ch], esi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC23E6
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CC16F8
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC23E6
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_account_set_privacy_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC241C
mov	[eax+38h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC243A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC240A
call	__stack_chk_fail
align 10h
public purple_account_set_status_types
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC249C
mov	eax, [ebx+3Ch]
test	eax, eax
jz	short loc_67CC2486
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_status_type_destroy
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	[ebx+3Ch], esi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC24BA
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2489
call	__stack_chk_fail
align 10h
public purple_account_destroy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC268C
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aDestroyingAcco 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_info
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountDestroy 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
call	purple_get_conversations
mov	esi, eax
test	eax, eax
jz	short loc_67CC2531
mov	edi, [esi]
mov	[esp+2Ch+var_2C], edi
call	purple_conversation_get_account
cmp	eax, ebx
jz	loc_67CC2674
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CC2518
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_67CC2597
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_info_destroy
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_status_types
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_destroy
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_67CC25C1
mov	[esp+2Ch+var_2C], eax
call	purple_log_free
mov	eax, [ebx+34h]
test	eax, eax
jz	short loc_67CC25E8
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	[ebx+34h], eax
test	eax, eax
jnz	short loc_67CC25C8
mov	eax, [ebx+30h]
test	eax, eax
jz	short loc_67CC2610
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	[ebx+30h], eax
test	eax, eax
jnz	short loc_67CC25F0
mov	esi, [ebx+54h]
mov	eax, [esi]
test	eax, eax
jz	short loc_67CC262E
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC26BB
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], edi
call	purple_conversation_set_account
jmp	loc_67CC252A
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC26BB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_account_clear_settings
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC271C
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_20], offset sub_67CC1290
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+24h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC273A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2709
call	__stack_chk_fail
align 10h
public purple_account_remove_setting
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC2780
test	edx, edx
jz	short loc_67CC27AC
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CC27CA
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+24h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_remove
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC27CA
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aSettingNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC279C
			
call	__stack_chk_fail
align 10h
public purple_account_set_int
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC2840
test	edi, edi
jz	short loc_67CC2870
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 2
mov	[eax+8], ebp
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2886
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2886
mov	[esp+3Ch+arg_8], offset	aAccountNull 
mov	[esp+3Ch+arg_4], offset	aPurple_acco_19	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2886
mov	[esp+3Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC2854
			
call	__stack_chk_fail
align 4
public purple_account_set_string
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC2908
test	edi, edi
jz	loc_67CC2938
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 3
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx+8], eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC294E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC294E
mov	[esp+3Ch+arg_8], offset	aAccountNull 
mov	[esp+3Ch+arg_4], offset	aPurple_acco_20	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC294E
mov	[esp+3Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC291C
			
call	__stack_chk_fail
align 4
public purple_account_set_bool
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC29C4
test	edi, edi
jz	short loc_67CC29F4
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 1
mov	[eax+8], ebp
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2A0A
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2A0A
mov	[esp+3Ch+arg_8], offset	aAccountNull 
mov	[esp+3Ch+arg_4], offset	aPurple_acco_21	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2A0A
mov	[esp+3Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC29D8
			
call	__stack_chk_fail
align 10h
public purple_account_set_silence_suppression
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC2A50
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset aSilenceSuppres 
mov	[esp+2Ch+var_2C], eax
call	purple_account_set_bool
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2A6E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2A3F
call	__stack_chk_fail
align 4
public purple_account_set_check_mail
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC2AB4
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset aCheckMail 
mov	[esp+2Ch+var_2C], eax
call	purple_account_set_bool
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2AD2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2AA3
call	__stack_chk_fail
align 4
public purple_account_set_ui_int
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CC2B74
test	esi, esi
jz	loc_67CC2BA4
test	ebp, ebp
jz	loc_67CC2BBC
mov	[esp+4Ch+var_4C], 0Ch
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 2
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+4], eax
mov	edx, [esp+4Ch+var_30]
mov	[ebx+8], edx
lea	eax, [edi+28h]
mov	edx, esi
call	sub_67CC1748
mov	esi, eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_hash_table_insert
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2BD2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2BD2
mov	[esp+4Ch+arg_8], offset	aAccountNull 
			
mov	[esp+4Ch+arg_4], offset	aPurple_acco_24	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2BD2
mov	[esp+4Ch+arg_8], offset	aUiNull	
jmp	short loc_67CC2B88
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2BD2
mov	[esp+4Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC2B88
			
call	__stack_chk_fail
align 4
public purple_account_set_ui_string
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CC2C7C
test	esi, esi
jz	loc_67CC2CAC
test	ebp, ebp
jz	loc_67CC2CC4
mov	[esp+4Ch+var_4C], 0Ch
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 3
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+4], eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[ebx+8], eax
lea	eax, [edi+28h]
mov	edx, esi
call	sub_67CC1748
mov	esi, eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_hash_table_insert
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2CDA
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2CDA
mov	[esp+4Ch+arg_8], offset	aAccountNull 
			
mov	[esp+4Ch+arg_4], offset	aPurple_acco_25	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2CDA
mov	[esp+4Ch+arg_8], offset	aUiNull	
jmp	short loc_67CC2C90
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2CDA
mov	[esp+4Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC2C90
			
call	__stack_chk_fail
align 10h
public purple_account_set_ui_bool
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CC2D7C
test	esi, esi
jz	loc_67CC2DAC
test	ebp, ebp
jz	loc_67CC2DC4
mov	[esp+4Ch+var_4C], 0Ch
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 1
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+4], eax
mov	edx, [esp+4Ch+var_30]
mov	[ebx+8], edx
lea	eax, [edi+28h]
mov	edx, esi
call	sub_67CC1748
mov	esi, eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_hash_table_insert
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2DDA
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2DDA
mov	[esp+4Ch+arg_8], offset	aAccountNull 
			
mov	[esp+4Ch+arg_4], offset	aPurple_acco_26	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2DDA
mov	[esp+4Ch+arg_8], offset	aUiNull	
jmp	short loc_67CC2D90
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2DDA
mov	[esp+4Ch+arg_8], offset	aNameNull 
jmp	short loc_67CC2D90
			
call	__stack_chk_fail
align 10h
public purple_account_get_username
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC2E0C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC2E2C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC2DF9
call	__stack_chk_fail
align 4
public purple_account_get_password
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC2E60
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC2E80
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC2E4E
call	__stack_chk_fail
align 4
public purple_account_unregister
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC2EF8
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aUnregisteringA 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_password
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	_purple_connection_new_unregister
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2F27
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2F27
mov	[esp+2Ch+arg_8], offset	aAccountNull 
mov	[esp+2Ch+arg_4], offset	aPurple_acco_29	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
public purple_account_register
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC2F90
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aRegisteringAcc 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_password
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	_purple_connection_new
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC2FAE
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC2F7F
call	__stack_chk_fail
align 4
public purple_account_get_alias
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC2FE0
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3000
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC2FCE
call	__stack_chk_fail
align 4
public purple_account_get_user_info
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3034
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3054
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC3022
call	__stack_chk_fail
align 4
public purple_account_get_buddy_icon_path
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3088
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC30A8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC3076
call	__stack_chk_fail
align 10h
public purple_account_get_protocol_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC30DC
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC30FC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC30CA
call	__stack_chk_fail
align 4
public purple_account_get_protocol_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3174
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_protocol_id
mov	[esp+2Ch+var_2C], eax
call	purple_find_prpl
test	eax, eax
jz	short loc_67CC315C
mov	eax, [eax+10h]
mov	eax, [eax+24h]
test	eax, eax
jz	short loc_67CC315C
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3194
add	esp, 2Ch
retn
align 4
			
mov	[esp+2Ch+var_28], offset aUnknown 
mov	[esp+2Ch+var_2C], offset aPidgin 
call	libintl_dgettext
jmp	short loc_67CC3149
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC3149
call	__stack_chk_fail
align 4
public purple_account_request_password
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_30], edx
mov	edx, [esp+7Ch+arg_8]
mov	ecx, [esp+7Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_38], edx
mov	[esp+7Ch+var_3C], ecx
call	purple_request_close_with_handle
mov	[esp+7Ch+var_7C], ebx
call	purple_account_get_username
mov	esi, eax
mov	[esp+7Ch+var_7C], ebx
call	purple_account_get_protocol_name
mov	edi, eax
mov	[esp+7Ch+var_78], offset aEnterPasswordF 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	ebp, eax
call	purple_request_fields_new
mov	edi, eax
mov	[esp+7Ch+var_7C], 0
call	purple_request_field_group_new
mov	esi, eax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_request_fields_add_group
mov	[esp+7Ch+var_78], offset aEnterPassword	
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aPassword 
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_34], eax
call	purple_request_field_string_set_masked
mov	[esp+7Ch+var_78], 1
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_set_required
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aSavePassword 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aRemember 
call	purple_request_field_bool_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aCancel 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	esi, eax
mov	[esp+7Ch+var_78], offset aOk 
mov	[esp+7Ch+var_7C], offset aPidgin 
call	libintl_dgettext
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_54], 0
mov	[esp+7Ch+var_58], ebx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_5C], edx
mov	[esp+7Ch+var_60], esi
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_64], edx
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], edi
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], ebx
call	purple_request_fields
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC337A
mov	[esp+7Ch+arg_0], ebp
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
call	__stack_chk_fail
align 10h
public purple_account_get_connection
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC33AC
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC33CC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC339A
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3410
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	short loc_67CC340C
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_state
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3430
add	esp, 2Ch
retn
align 4
xor	eax, eax
jmp	short loc_67CC33FB
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_37 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC33FB
call	__stack_chk_fail
align 4
public purple_account_is_disconnected
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CC33D4
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3467
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_account_is_connecting
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CC33D4
cmp	eax, 2
setz	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC349C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_account_is_connected
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CC33D4
dec	eax
setz	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC34D2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_account_get_public_alias
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC35D4
mov	[esp+3Ch+var_3C], ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CC3560
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_connection
mov	ebp, eax
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
cmp	dword ptr [edx+11Ch], 134h
jbe	short loc_67CC3590
mov	eax, [edx+134h]
test	eax, eax
jz	short loc_67CC3590
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC35EA
mov	[esp+3Ch+arg_8], esi
mov	[esp+3Ch+arg_4], edi
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC35EA
mov	[esp+3Ch+arg_8], offset	aPurple_acco_38	
mov	[esp+3Ch+arg_4], offset	aPurple_acco_39	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
			
test	esi, esi
jz	short loc_67CC35EF
mov	[esp+3Ch+var_3C], 8
call	g_malloc0
mov	[eax], ebx
mov	[eax+4], esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC35EA
mov	[esp+3Ch+arg_8], eax
mov	[esp+3Ch+arg_4], offset	loc_67CC13EC
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_timeout_add
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC35EA
mov	[esp+3Ch+arg_8], offset	aAccountNull 
jmp	short loc_67CC3574
			
call	__stack_chk_fail
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC35EA
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_account_set_public_alias
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC370C
mov	[esp+4Ch+var_4C], ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CC3698
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_connection
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
cmp	dword ptr [edx+11Ch], 130h
mov	ecx, [esp+4Ch+var_30]
jbe	short loc_67CC36C8
mov	eax, [edx+130h]
test	eax, eax
jz	short loc_67CC36C8
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC3722
mov	[esp+4Ch+arg_C], esi
mov	[esp+4Ch+arg_8], ebp
mov	[esp+4Ch+arg_4], edi
mov	[esp+4Ch+arg_0], ecx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3722
mov	[esp+4Ch+arg_8], offset	aPurple_acco_38	
mov	[esp+4Ch+arg_4], offset	aPurple_acco_40	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
			
test	esi, esi
jz	short loc_67CC3727
mov	[esp+4Ch+var_4C], 8
call	g_malloc0
mov	[eax], ebx
mov	[eax+4], esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3722
mov	[esp+4Ch+arg_8], eax
mov	[esp+4Ch+arg_4], offset	loc_67CC1444
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_timeout_add
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC3722
mov	[esp+4Ch+arg_8], offset	aAccountNull 
jmp	short loc_67CC36AC
			
call	__stack_chk_fail
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC3722
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_account_request_change_user_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 16Ch
mov	ebp, [esp+17Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+17Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CC38D4
mov	[esp+17Ch+var_17C], ebp
call	purple_account_is_connected
test	eax, eax
jz	loc_67CC388C
mov	[esp+17Ch+var_17C], ebp
call	purple_account_get_connection
mov	ebx, eax
mov	[esp+17Ch+var_17C], ebp
call	purple_account_get_username
mov	esi, eax
mov	[esp+17Ch+var_178], offset aChangeUserInfo 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], esi
mov	[esp+17Ch+var_174], eax
mov	[esp+17Ch+var_178], 100h
lea	esi, [esp+17Ch+var_120]
mov	[esp+17Ch+var_17C], esi
call	g_snprintf
mov	[esp+17Ch+var_178], offset aCancel 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_134], eax
mov	[esp+17Ch+var_178], offset aSave 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_130], eax
test	ebx, ebx
jz	short loc_67CC37F5
test	byte ptr [ebx+4], 1
jnz	loc_67CC38C4
mov	[esp+17Ch+var_138], 0
mov	[esp+17Ch+var_17C], ebp
call	purple_account_get_user_info
mov	edi, eax
mov	[esp+17Ch+var_178], offset aSetUserInfo	
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_140], ebp
mov	[esp+17Ch+var_144], 0
mov	[esp+17Ch+var_148], 0
mov	[esp+17Ch+var_14C], ebp
mov	[esp+17Ch+var_150], 0
mov	edx, [esp+17Ch+var_134]
mov	[esp+17Ch+var_154], edx
mov	[esp+17Ch+var_158], offset loc_67CC38F8
mov	edx, [esp+17Ch+var_130]
mov	[esp+17Ch+var_15C], edx
mov	edx, [esp+17Ch+var_138]
mov	[esp+17Ch+var_160], edx
mov	[esp+17Ch+var_164], 0
mov	[esp+17Ch+var_168], 1
mov	[esp+17Ch+var_16C], edi
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], esi
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], ebx
call	purple_request_input
jmp	short loc_67CC38A8
align 4
mov	[esp+17Ch+var_174], offset aPurple_acco_38 
mov	[esp+17Ch+var_178], offset aPurple_acco_41 
mov	[esp+17Ch+var_17C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+17Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC38F2
add	esp, 16Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+17Ch+var_138], offset aHtml 
jmp	loc_67CC37FD
align 4
mov	[esp+17Ch+var_174], offset aAccountNull	
mov	[esp+17Ch+var_178], offset aPurple_acco_41 
mov	[esp+17Ch+var_17C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC38A8
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp+4], esi
mov	[esp], ebx
call	purple_account_set_user_info
mov	[esp], ebx
call	purple_account_get_connection
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3942
mov	[esp+34h], esi
mov	[esp+30h], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	serv_set_info
call	__stack_chk_fail
align 4
public purple_account_request_change_password
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 16Ch
mov	ebx, [esp+17Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+17Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC3D8C
mov	[esp+17Ch+var_17C], ebx
call	purple_account_is_connected
test	eax, eax
jz	loc_67CC3C0C
mov	[esp+17Ch+var_17C], ebx
call	purple_account_get_connection
test	eax, eax
jz	loc_67CC3C48
mov	[esp+17Ch+var_17C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	loc_67CC3C48
mov	eax, [eax+10h]
mov	edi, [eax+4Ch]
call	purple_request_fields_new
mov	ebp, eax
mov	[esp+17Ch+var_17C], 0
call	purple_request_field_group_new
mov	esi, eax
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], ebp
call	purple_request_fields_add_group
mov	[esp+17Ch+var_178], offset aOriginalPasswo 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aPassword 
call	purple_request_field_string_new
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_string_set_masked
test	edi, edi
mov	eax, [esp+17Ch+var_130]
jz	loc_67CC3CB5
test	byte ptr [edi],	80h
jnz	short loc_67CC3A37
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_set_required
mov	eax, [esp+17Ch+var_130]
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], esi
call	purple_request_field_group_add_field
mov	[esp+17Ch+var_178], offset aNewPassword	
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aNew_password_1 
call	purple_request_field_string_new
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_string_set_masked
mov	eax, [esp+17Ch+var_130]
test	byte ptr [edi],	80h
jnz	short loc_67CC3AAC
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_set_required
mov	eax, [esp+17Ch+var_130]
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], esi
call	purple_request_field_group_add_field
mov	[esp+17Ch+var_178], offset aNewPasswordAga 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aNew_password_2 
call	purple_request_field_string_new
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_string_set_masked
mov	eax, [esp+17Ch+var_130]
test	byte ptr [edi],	80h
jnz	short loc_67CC3B21
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_set_required
mov	eax, [esp+17Ch+var_130]
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], esi
call	purple_request_field_group_add_field
mov	[esp+17Ch+var_17C], ebx
call	purple_account_get_username
mov	esi, eax
mov	[esp+17Ch+var_178], offset aChangePassword 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], esi
mov	[esp+17Ch+var_174], eax
mov	[esp+17Ch+var_178], 100h
lea	esi, [esp+17Ch+var_120]
mov	[esp+17Ch+var_17C], esi
call	g_snprintf
mov	[esp+17Ch+var_178], offset aCancel 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_178], offset aOk 
mov	[esp+17Ch+var_17C], offset aPidgin 
mov	[esp+17Ch+var_134], eax
call	libintl_dgettext
mov	[esp+17Ch+var_178], offset aPleaseEnterYou 
mov	[esp+17Ch+var_17C], offset aPidgin 
mov	[esp+17Ch+var_130], eax
call	libintl_dgettext
mov	edi, eax
mov	[esp+17Ch+var_17C], ebx
call	purple_account_get_connection
mov	[esp+17Ch+var_14C], ebx
mov	[esp+17Ch+var_150], 0
mov	[esp+17Ch+var_154], 0
mov	[esp+17Ch+var_158], ebx
mov	[esp+17Ch+var_15C], 0
mov	ecx, [esp+17Ch+var_134]
mov	[esp+17Ch+var_160], ecx
mov	[esp+17Ch+var_164], offset sub_67CC628C
mov	edx, [esp+17Ch+var_130]
mov	[esp+17Ch+var_168], edx
mov	[esp+17Ch+var_16C], ebp
mov	[esp+17Ch+var_170], edi
mov	[esp+17Ch+var_174], esi
mov	[esp+17Ch+var_178], 0
mov	[esp+17Ch+var_17C], eax
call	purple_request_fields
jmp	short loc_67CC3C28
align 4
mov	[esp+17Ch+var_174], offset aPurple_acco_38 
mov	[esp+17Ch+var_178], offset aPurple_acco_42 
mov	[esp+17Ch+var_17C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+17Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC3DAD
add	esp, 16Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
call	purple_request_fields_new
mov	ebp, eax
mov	[esp+17Ch+var_17C], 0
call	purple_request_field_group_new
mov	esi, eax
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], ebp
call	purple_request_fields_add_group
mov	[esp+17Ch+var_178], offset aOriginalPasswo 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aPassword 
call	purple_request_field_string_new
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_string_set_masked
mov	eax, [esp+17Ch+var_130]
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_set_required
mov	eax, [esp+17Ch+var_130]
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], esi
call	purple_request_field_group_add_field
mov	[esp+17Ch+var_178], offset aNewPassword	
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aNew_password_1 
call	purple_request_field_string_new
mov	edi, eax
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
call	purple_request_field_string_set_masked
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], edi
call	purple_request_field_set_required
mov	[esp+17Ch+var_178], edi
mov	[esp+17Ch+var_17C], esi
call	purple_request_field_group_add_field
mov	[esp+17Ch+var_178], offset aNewPasswordAga 
mov	[esp+17Ch+var_17C], offset aPidgin 
call	libintl_dgettext
mov	[esp+17Ch+var_170], 0
mov	[esp+17Ch+var_174], 0
mov	[esp+17Ch+var_178], eax
mov	[esp+17Ch+var_17C], offset aNew_password_2 
call	purple_request_field_string_new
mov	[esp+17Ch+var_178], 1
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_130], eax
call	purple_request_field_string_set_masked
mov	eax, [esp+17Ch+var_130]
jmp	loc_67CC3B09
mov	[esp+17Ch+var_174], offset aAccountNull	
mov	[esp+17Ch+var_178], offset aPurple_acco_42 
mov	[esp+17Ch+var_17C], 0
call	g_return_if_fail_warning
jmp	loc_67CC3C28
call	__stack_chk_fail
align 4
public purple_account_get_name_for_display
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_alias
test	eax, eax
jz	short loc_67CC3DE8
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3E38
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_find_buddy
test	eax, eax
jz	short loc_67CC3E1C
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_get_contact_alias
mov	edi, eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CC3E34
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_display_name
test	eax, eax
jnz	short loc_67CC3DD5
mov	eax, esi
jmp	short loc_67CC3DD5
mov	eax, edi
jmp	short loc_67CC3DD5
call	__stack_chk_fail
align 10h
public purple_account_get_remember_password
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3E6C
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3E8C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_43 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC3E5A
call	__stack_chk_fail
align 4
public purple_account_disconnect
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC3F68
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_disconnected
test	eax, eax
jnz	short loc_67CC3F24
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
test	eax, eax
jz	loc_67CC3F88
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aDisconnectingA 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_info
mov	dword ptr [ebx+20h], 1
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_connection
mov	[esp+2Ch+var_2C], eax
call	_purple_connection_destroy
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_remember_password
test	eax, eax
jz	short loc_67CC3F54
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_connection
mov	dword ptr [ebx+20h], 0
jmp	short loc_67CC3F40
align 4
mov	[esp+2Ch+var_24], offset aPurple_acco_44 
mov	[esp+2Ch+var_28], offset aPurple_acco_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC3F92
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_password
jmp	short loc_67CC3F0A
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC3F40
align 4
mov	eax, offset aNull 
jmp	loc_67CC3ECB
call	__stack_chk_fail
align 4
public purple_account_get_proxy_info
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC3FC4
mov	eax, [eax+2Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC3FE4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_46 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC3FB2
call	__stack_chk_fail
align 4
public purple_account_get_privacy_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4018
mov	eax, [eax+38h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC403B
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_47 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67CC4006
call	__stack_chk_fail
public purple_account_get_active_status
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4074
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC40A2
mov	eax, [eax+40h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_presence_get_active_status
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC40A2
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_account_get_status
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC40E8
test	edx, edx
jz	short loc_67CC4118
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CC4136
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+40h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_presence_get_status
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4136
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_idNull	
mov	[esp+2Ch+var_28], offset aPurple_acco_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC4104
			
call	__stack_chk_fail
align 4
public purple_account_set_status_list
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC41C8
test	edi, edi
jz	loc_67CC41FC
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_status
mov	esi, eax
test	eax, eax
jz	loc_67CC4214
test	ebp, ebp
jz	short loc_67CC41B8
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], esi
call	purple_status_set_active_with_attrs_list
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC425A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CC16F8
mov	[esp+5Ch+var_5C], esi
call	purple_status_is_independent
test	eax, eax
jnz	short loc_67CC4188
jmp	short loc_67CC419C
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC425A
mov	[esp+5Ch+arg_8], offset	aAccountNull 
mov	[esp+5Ch+arg_4], offset	aPurple_acco_50	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC425A
mov	[esp+5Ch+arg_8], offset	aStatus_idNull 
jmp	short loc_67CC41E0
align 4
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_protocol_id
mov	esi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aInvalidStatusI 
mov	[esp+5Ch+var_5C], offset aAccount 
call	purple_debug_error
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC425A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_account_set_status
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, [esp+4Ch+arg_C]
test	edx, edx
jz	short loc_67CC42E9
lea	ebx, [esp+4Ch+arg_14]
xchg	ax, ax
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	edx, [ebx-4]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_list_append
add	ebx, 8
mov	edx, [ebx-8]
test	edx, edx
jnz	short loc_67CC428C
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], eax
call	purple_account_set_status_list
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC42ED
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	eax, eax
jmp	short loc_67CC42B1
call	__stack_chk_fail
align 4
public purple_account_get_presence
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4320
mov	eax, [eax+40h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4340
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_51 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC430E
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D72030
test	eax, eax
jz	loc_67CC4CC0
mov	[esp+8Ch+var_8C], offset aAccount 
call	xmlnode_new
mov	[esp+8Ch+var_40], eax
mov	[esp+8Ch+var_84], offset a1_0_2	
mov	[esp+8Ch+var_88], offset aVersion 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	edx, ds:dword_67D72034
mov	[esp+8Ch+var_4C], edx
test	edx, edx
jz	loc_67CC4ABC
lea	esi, [esi+0]
mov	edx, [esp+8Ch+var_4C]
mov	edx, [edx]
mov	[esp+8Ch+var_58], edx
mov	edx, [edx+54h]
mov	[esp+8Ch+var_44], edx
mov	[esp+8Ch+var_8C], offset aAccount 
call	xmlnode_new
mov	[esp+8Ch+var_50], eax
mov	[esp+8Ch+var_88], offset aProtocol 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_protocol_id
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_insert_data
mov	[esp+8Ch+var_88], offset aName 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_username
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebx
call	xmlnode_insert_data
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_remember_password
test	eax, eax
jnz	loc_67CC4BC0
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+54h]
mov	eax, [eax+4]
test	eax, eax
jz	loc_67CC44D9
mov	[esp+8Ch+var_88], offset aSavingLibpurpl 
mov	[esp+8Ch+var_8C], offset aAccount 
call	purple_debug_warning
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+54h]
mov	esi, [eax+4]
test	esi, esi
jz	loc_67CC4CE3
mov	edi, [eax+8]
mov	ebx, [eax+0Ch]
mov	[esp+8Ch+var_88], offset aPassword 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+8Ch+var_84], esi
mov	[esp+8Ch+var_88], offset aKeyring_id 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
test	edi, edi
jz	short loc_67CC44C1
mov	[esp+8Ch+var_84], edi
mov	[esp+8Ch+var_88], offset aMode 
mov	[esp+8Ch+var_8C], ebp
call	xmlnode_set_attrib
test	ebx, ebx
jz	short loc_67CC44D9
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], ebp
call	xmlnode_insert_data
			
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_alias
mov	ebx, eax
test	eax, eax
jz	short loc_67CC4513
mov	[esp+8Ch+var_88], offset aAlias	
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_presence
mov	ebx, eax
test	eax, eax
jz	loc_67CC47D7
mov	[esp+8Ch+var_8C], offset aStatuses 
call	xmlnode_new
mov	[esp+8Ch+var_48], eax
mov	[esp+8Ch+var_8C], ebx
call	purple_presence_get_statuses
mov	[esp+8Ch+var_68], eax
test	eax, eax
jnz	short loc_67CC4563
jmp	loc_67CC47C3
align 10h
mov	eax, [esp+8Ch+var_68]
mov	eax, [eax+4]
mov	[esp+8Ch+var_68], eax
test	eax, eax
jz	loc_67CC47C3
			
mov	eax, [esp+8Ch+var_68]
mov	ebp, [eax]
mov	[esp+8Ch+var_8C], ebp
call	purple_status_get_type
mov	[esp+8Ch+var_8C], eax
call	purple_status_type_is_saveable
test	eax, eax
jz	short loc_67CC4550
mov	[esp+8Ch+var_8C], offset aStatus 
call	xmlnode_new
mov	[esp+8Ch+var_54], eax
mov	[esp+8Ch+var_8C], ebp
call	purple_status_get_id
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aType 
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	[esp+8Ch+var_8C], ebp
call	purple_status_get_name
test	eax, eax
jz	short loc_67CC45D9
mov	[esp+8Ch+var_8C], ebp
call	purple_status_get_name
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aName 
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	[esp+8Ch+var_8C], ebp
call	purple_status_is_active
test	eax, eax
jnz	loc_67CC4B18
mov	eax, offset aFalse 
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aActive 
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	[esp+8Ch+var_8C], ebp
call	purple_status_get_type
mov	[esp+8Ch+var_64], eax
mov	[esp+8Ch+var_8C], offset aAttributes 
call	xmlnode_new
mov	[esp+8Ch+var_5C], eax
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	purple_status_type_get_attrs
mov	ebx, eax
test	eax, eax
jz	loc_67CC4788
mov	[esp+8Ch+var_60], ebp
jmp	short loc_67CC46B4
align 10h
mov	eax, offset aTrue 
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	ebp, eax
test	ebp, ebp
jz	loc_67CC4934
mov	[esp+8Ch+var_8C], offset aAttribute 
call	xmlnode_new
mov	edi, eax
mov	[esp+8Ch+var_84], esi
mov	[esp+8Ch+var_88], offset aId 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_set_attrib
mov	[esp+8Ch+var_84], ebp
mov	[esp+8Ch+var_88], offset aValue	
mov	[esp+8Ch+var_8C], edi
call	xmlnode_set_attrib
mov	[esp+8Ch+var_8C], ebp
call	g_free
test	edi, edi
jz	short loc_67CC46A9
mov	[esp+8Ch+var_88], edi
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_67CC4788
			
mov	eax, [ebx]
mov	[esp+8Ch+var_8C], eax
call	purple_status_attr_get_id
mov	esi, eax
test	eax, eax
jz	loc_67CC4760
mov	[esp+8Ch+var_88], eax
mov	edx, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], edx
call	purple_status_get_attr_value
test	eax, eax
jz	loc_67CC48C8
mov	[esp+8Ch+var_8C], eax
mov	[esp+8Ch+var_6C], eax
call	purple_value_get_type
mov	ebp, eax
mov	[esp+8Ch+var_88], esi
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	purple_status_type_get_attr
mov	[esp+8Ch+var_8C], eax
call	purple_status_attr_get_value
mov	edi, eax
mov	[esp+8Ch+var_8C], eax
call	purple_value_get_type
cmp	ebp, eax
mov	ecx, [esp+8Ch+var_6C]
jnz	short loc_67CC46A9
cmp	ebp, 0Dh
jz	loc_67CC48EC
cmp	ebp, 7
jz	loc_67CC4958
cmp	ebp, 4
jnz	loc_67CC46A9
mov	[esp+8Ch+var_8C], ecx
call	purple_value_get_boolean
mov	ebp, eax
mov	[esp+8Ch+var_8C], edi
call	purple_value_get_boolean
cmp	ebp, eax
jz	loc_67CC46A9
test	ebp, ebp
jnz	loc_67CC4640
mov	eax, offset aFalse 
jmp	loc_67CC4645
align 10h
mov	[esp+8Ch+var_84], offset aId 
mov	[esp+8Ch+var_88], offset aStatus_attr_to 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	loc_67CC46B4
nop
			
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	eax, [esp+8Ch+var_68]
mov	eax, [eax+4]
mov	[esp+8Ch+var_68], eax
test	eax, eax
jnz	loc_67CC4563
			
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_user_info
mov	ebx, eax
test	eax, eax
jz	short loc_67CC4811
mov	[esp+8Ch+var_88], offset aUserinfo 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+24h]
mov	[esp+8Ch+var_8C], eax
call	g_hash_table_size
test	eax, eax
jnz	loc_67CC4C28
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+28h]
mov	[esp+8Ch+var_8C], eax
call	g_hash_table_size
test	eax, eax
jnz	loc_67CC4C04
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_proxy_info
mov	ebx, eax
test	eax, eax
jz	loc_67CC4A5B
mov	[esp+8Ch+var_8C], eax
call	purple_proxy_info_get_type
mov	edi, eax
mov	[esp+8Ch+var_8C], offset aProxy	
call	xmlnode_new
mov	esi, eax
mov	[esp+8Ch+var_88], offset aType 
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
cmp	edi, 0FFFFFFFFh
jz	loc_67CC4CAC
test	edi, edi
jz	loc_67CC498C
cmp	edi, 1
jz	loc_67CC4CB6
cmp	edi, 2
jz	loc_67CC4CD9
cmp	edi, 3
jz	loc_67CC4D28
cmp	edi, 5
jz	loc_67CC4D32
cmp	edi, 4
jz	loc_67CC4D3C
mov	edx, offset aUnknown_0 
jmp	loc_67CC4991
align 4
mov	[esp+8Ch+var_84], offset aAttr_value 
mov	[esp+8Ch+var_88], offset aStatus_attr_to 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
jmp	loc_67CC46A9
align 4
mov	[esp+8Ch+var_8C], ecx
mov	[esp+8Ch+var_6C], ecx
call	purple_value_get_string
mov	ebp, eax
mov	[esp+8Ch+var_8C], edi
call	purple_value_get_string
mov	[esp+8Ch+var_88], eax
mov	[esp+8Ch+var_8C], ebp
call	purple_strequal
test	eax, eax
mov	ecx, [esp+8Ch+var_6C]
jnz	loc_67CC46A9
mov	[esp+8Ch+var_8C], ecx
call	purple_value_get_string
mov	[esp+8Ch+var_8C], eax
call	g_strdup
mov	ebp, eax
test	ebp, ebp
jnz	loc_67CC4657
mov	[esp+8Ch+var_84], offset aValue	
mov	[esp+8Ch+var_88], offset aStatus_attr_to 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
jmp	loc_67CC46A9
align 4
mov	[esp+8Ch+var_8C], ecx
call	purple_value_get_int
mov	ebp, eax
mov	[esp+8Ch+var_8C], edi
call	purple_value_get_int
cmp	ebp, eax
jz	loc_67CC46A9
mov	[esp+8Ch+var_88], ebp
mov	[esp+8Ch+var_8C], offset Format	
call	g_strdup_printf
mov	ebp, eax
jmp	loc_67CC464F
align 4
mov	edx, offset aNone 
			
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	[esp+8Ch+var_8C], ebx
call	purple_proxy_info_get_host
mov	edi, eax
test	eax, eax
jz	short loc_67CC49D7
mov	[esp+8Ch+var_88], offset aHost 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], edi
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	[esp+8Ch+var_8C], ebx
call	purple_proxy_info_get_port
test	eax, eax
jnz	loc_67CC4C5C
mov	[esp+8Ch+var_8C], ebx
call	purple_proxy_info_get_username
mov	edi, eax
test	eax, eax
jz	short loc_67CC4A19
mov	[esp+8Ch+var_88], offset aUsername 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], edi
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	[esp+8Ch+var_8C], ebx
call	purple_proxy_info_get_password
mov	ebx, eax
test	eax, eax
jz	short loc_67CC4A4B
mov	[esp+8Ch+var_88], offset aPassword 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
mov	[esp+8Ch+var_88], esi
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	edx, [esp+8Ch+var_44]
mov	ebx, [edx]
mov	[esp+8Ch+var_8C], offset aCurrent_error	
call	xmlnode_new
mov	esi, eax
test	ebx, ebx
jz	short loc_67CC4A85
mov	eax, [ebx]
mov	[esp+8Ch+var_8C], eax
call	purple_connection_error_is_fatal
test	eax, eax
jnz	loc_67CC4B24
			
mov	[esp+8Ch+var_88], esi
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_88], eax
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_child
mov	edx, [esp+8Ch+var_4C]
mov	edx, [edx+4]
mov	[esp+8Ch+var_4C], edx
test	edx, edx
jnz	loc_67CC43A4
mov	[esp+8Ch+var_88], 0
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_to_formatted_str
mov	ebx, eax
mov	[esp+8Ch+var_84], 0FFFFFFFFh 
mov	[esp+8Ch+var_88], eax 
mov	[esp+8Ch+var_8C], offset aAccounts_xml 
call	purple_util_write_data_to_file
mov	[esp+8Ch+var_8C], ebx
call	g_free
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_free
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC4D58
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, offset aTrue 
jmp	loc_67CC45EE
align 4
mov	[esp+8Ch+var_88], offset aType 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebx]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], offset aU 
mov	[esp+8Ch+var_88], 3
lea	eax, [esp+8Ch+var_35]
mov	[esp+8Ch+var_8C], eax
call	g_snprintf
mov	[esp+8Ch+var_84], 0FFFFFFFFh
lea	edx, [esp+8Ch+var_35]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], edi
call	xmlnode_insert_data
mov	[esp+8Ch+var_88], offset aDescription 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	ebp, eax
mov	eax, [ebx+4]
test	eax, eax
jz	loc_67CC4A85
mov	[esp+8Ch+var_8C], eax
call	purple_utf8_try_convert
mov	edi, eax
test	eax, eax
jz	loc_67CC4D46
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], edi
mov	[esp+8Ch+var_8C], ebp
call	xmlnode_insert_data
mov	[esp+8Ch+var_8C], edi
call	g_free
jmp	loc_67CC4A85
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_account_get_password
mov	ebx, eax
test	eax, eax
jz	loc_67CC4441
mov	[esp+8Ch+var_88], offset aPassword 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
mov	[esp+8Ch+var_88], ebx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
jmp	loc_67CC44D9
align 4
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset loc_67CC1668
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+28h]
mov	[esp+8Ch+var_8C], eax
call	g_hash_table_foreach
jmp	loc_67CC483F
mov	[esp+8Ch+var_88], offset aSettings 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset sub_67CC12E0
mov	edx, [esp+8Ch+var_58]
mov	eax, [edx+24h]
mov	[esp+8Ch+var_8C], eax
call	g_hash_table_foreach
jmp	loc_67CC4828
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], offset Format	
mov	[esp+8Ch+var_88], 15h
lea	eax, [esp+8Ch+var_35]
mov	[esp+8Ch+var_8C], eax
call	g_snprintf
mov	[esp+8Ch+var_88], offset aPort 
mov	[esp+8Ch+var_8C], esi
call	xmlnode_new_child
mov	[esp+8Ch+var_84], 0FFFFFFFFh
lea	edx, [esp+8Ch+var_35]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], eax
call	xmlnode_insert_data
jmp	loc_67CC49E7
align 4
mov	edx, offset aGlobal 
jmp	loc_67CC4991
mov	edx, offset aHttp 
jmp	loc_67CC4991
mov	[esp+8Ch+var_88], offset aAttemptedToSav 
mov	[esp+8Ch+var_8C], offset aAccount 
call	purple_debug_error
jmp	loc_67CC4AFE
mov	edx, offset aSocks4 
jmp	loc_67CC4991
mov	[esp+8Ch+var_7C], offset aSuccess 
mov	[esp+8Ch+var_80], offset aAccount_to_xml 
mov	[esp+8Ch+var_84], 199h
mov	[esp+8Ch+var_88], offset aAccount_c 
mov	[esp+8Ch+var_8C], 0
call	g_warn_message
mov	[esp+8Ch+var_88], offset aPassword 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], eax
call	xmlnode_new_child
jmp	loc_67CC44D9
mov	edx, offset aSocks5 
jmp	loc_67CC4991
mov	edx, offset aTor 
jmp	loc_67CC4991
mov	edx, offset aEnvvar 
jmp	loc_67CC4991
mov	eax, [ebx+4]
mov	[esp+8Ch+var_8C], eax
call	purple_utf8_salvage
mov	edi, eax
jmp	loc_67CC4B9F
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67CC4348
mov	ds:dword_67D7202C, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4D8F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_account_is_status_active
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC4DD4
test	edx, edx
jz	short loc_67CC4E04
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CC4E22
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+40h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_presence_is_status_active
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_52 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4E22
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_idNull	
mov	[esp+2Ch+var_28], offset aPurple_acco_52 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC4DF0
			
call	__stack_chk_fail
align 4
public purple_account_get_status_types
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4E54
mov	eax, [eax+3Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4E74
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_53 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC4E42
call	__stack_chk_fail
align 4
public purple_account_get_status_type_with_primitive
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4EDC
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_status_types
mov	ebx, eax
test	eax, eax
jnz	short loc_67CC4EB3
jmp	short loc_67CC4ED8
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CC4ED8
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_status_type_get_primitive
cmp	eax, edi
jnz	short loc_67CC4EAC
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4EFC
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
xor	esi, esi
jmp	short loc_67CC4EC1
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_54 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CC4EC1
call	__stack_chk_fail
align 4
public purple_account_get_status_type
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC4F74
test	edi, edi
jz	short loc_67CC4F94
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_status_types
mov	ebx, eax
test	eax, eax
jnz	short loc_67CC4F3F
jmp	short loc_67CC4F70
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CC4F70
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_status_type_get_id
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CC4F38
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC4FB4
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
xor	esi, esi
jmp	short loc_67CC4F59
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CC4F59
mov	[esp+2Ch+var_24], offset aIdNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CC4F59
call	__stack_chk_fail
align 4
public purple_account_get_int
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC5030
test	ecx, ecx
jz	short loc_67CC5050
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC5013
cmp	dword ptr [eax], 2
jz	short loc_67CC5028
mov	[esp+2Ch+var_24], offset aSettingTypePur 
mov	[esp+2Ch+var_28], offset aPurple_acco_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC506E
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, [eax+8]
jmp	short loc_67CC5013
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5013
align 10h
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5013
call	__stack_chk_fail
align 4
public purple_account_get_string
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC50E8
test	ecx, ecx
jz	short loc_67CC5108
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC50CB
cmp	dword ptr [eax], 3
jz	short loc_67CC50E0
mov	[esp+2Ch+var_24], offset aSettingTypeP_0 
mov	[esp+2Ch+var_28], offset aPurple_acco_57 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5126
add	esp, 28h
pop	ebx
retn
align 10h
mov	ebx, [eax+8]
jmp	short loc_67CC50CB
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_57 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC50CB
align 4
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_57 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC50CB
call	__stack_chk_fail
align 4
public purple_account_get_bool
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC51A0
test	ecx, ecx
jz	short loc_67CC51C0
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC5183
cmp	dword ptr [eax], 1
jz	short loc_67CC5198
mov	[esp+2Ch+var_24], offset aSettingTypeP_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_58 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC51DE
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, [eax+8]
jmp	short loc_67CC5183
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_58 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5183
align 10h
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_58 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5183
call	__stack_chk_fail
align 4
public purple_account_get_check_mail
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC5224
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aCheckMail 
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_bool
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5244
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_59 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC5213
call	__stack_chk_fail
align 4
public purple_account_get_silence_suppression
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aSilenceSuppres 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_bool
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5286
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_account_get_ui_int
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC5320
test	ecx, ecx
jz	loc_67CC5360
test	ebx, ebx
jz	loc_67CC5340
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC5304
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC5304
cmp	dword ptr [eax], 2
jz	short loc_67CC5318
mov	[esp+2Ch+var_24], offset aSettingTypePur 
mov	[esp+2Ch+var_28], offset aPurple_acco_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC537E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	esi, [eax+8]
jmp	short loc_67CC5304
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5304
align 10h
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5304
align 10h
mov	[esp+2Ch+var_24], offset aUiNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5304
call	__stack_chk_fail
align 4
public purple_account_get_ui_string
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC5418
test	ecx, ecx
jz	loc_67CC5458
test	ebx, ebx
jz	loc_67CC5438
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC53FC
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC53FC
cmp	dword ptr [eax], 3
jz	short loc_67CC5410
mov	[esp+2Ch+var_24], offset aSettingTypeP_0 
mov	[esp+2Ch+var_28], offset aPurple_acco_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5476
add	esp, 24h
pop	ebx
pop	esi
retn
mov	esi, [eax+8]
jmp	short loc_67CC53FC
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC53FC
align 4
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC53FC
align 4
mov	[esp+2Ch+var_24], offset aUiNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC53FC
call	__stack_chk_fail
align 4
public purple_account_get_ui_bool
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CC5510
test	ecx, ecx
jz	loc_67CC5550
test	ebx, ebx
jz	loc_67CC5530
mov	[esp+2Ch+var_28], ecx
mov	eax, [edx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC54F4
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CC54F4
cmp	dword ptr [eax], 1
jz	short loc_67CC5508
mov	[esp+2Ch+var_24], offset aSettingTypeP_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC556E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	esi, [eax+8]
jmp	short loc_67CC54F4
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC54F4
align 10h
mov	[esp+2Ch+var_24], offset aNameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC54F4
align 10h
mov	[esp+2Ch+var_24], offset aUiNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC54F4
call	__stack_chk_fail
align 4
public purple_account_get_enabled
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC55C0
test	edx, edx
jz	short loc_67CC55E0
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aAutoLogin 
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_ui_bool
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5600
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_63 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC55AF
mov	[esp+2Ch+var_24], offset aUiNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_63 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC55AF
call	__stack_chk_fail
align 4
public purple_account_connect
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC56F4
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_username
mov	esi, eax
call	purple_core_get_ui
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_enabled
test	eax, eax
jz	short loc_67CC56B4
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_protocol_id
mov	[esp+3Ch+var_3C], eax
call	purple_find_prpl
mov	edi, eax
test	eax, eax
jz	loc_67CC5714
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aConnectingToAc 
mov	[esp+3Ch+var_3C], offset aAccount 
call	purple_debug_info
mov	eax, [edi+10h]
mov	esi, [eax+4Ch]
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_password
test	eax, eax
jz	short loc_67CC56D0
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	_purple_connection_new
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC5795
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aAccountSNotEna 
mov	[esp+3Ch+var_3C], offset aAccount 
call	purple_debug_info
jmp	short loc_67CC569C
align 10h
test	byte ptr [esi],	90h
jnz	short loc_67CC5688
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset sub_67CC592C
mov	[esp+3Ch+var_38], offset loc_67CC228C
mov	[esp+3Ch+var_3C], ebx
call	purple_account_request_password
jmp	short loc_67CC569C
align 4
mov	[esp+3Ch+var_34], offset aAccountNull 
mov	[esp+3Ch+var_38], offset aPurple_acco_64 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC569C
align 4
mov	[esp+3Ch+var_38], offset aMissingProtoco 
mov	[esp+3Ch+var_3C], offset aPidgin 
call	libintl_dgettext
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_38], offset aConnectionErro 
mov	[esp+3Ch+var_3C], offset aPidgin 
call	libintl_dgettext
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	purple_notify_message
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5795
mov	[esp+3Ch+arg_0], esi
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
			
call	__stack_chk_fail
align 4
public purple_account_set_enabled
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC5894
test	edi, edi
jz	loc_67CC58C8
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_enabled
mov	ebp, eax
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], offset aAutoLogin 
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_account_set_ui_bool
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_connection
test	ebp, ebp
jz	short loc_67CC583C
test	esi, esi
jz	loc_67CC58E0
			
test	eax, eax
jz	short loc_67CC580E
cmp	dword ptr [eax+28h], 1
jz	short loc_67CC5822
test	esi, esi
jnz	short loc_67CC5864
mov	[esp+4Ch+var_4C], ebx
call	purple_account_is_disconnected
test	eax, eax
jz	loc_67CC5908
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC5924
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	esi, esi
jz	short loc_67CC5804
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aAccountEnabled 
mov	[esp+4Ch+var_4C], offset dword_67D72020
mov	[esp+4Ch+var_30], eax
call	purple_signal_emit
mov	eax, [esp+4Ch+var_30]
jmp	short loc_67CC5804
align 4
mov	eax, [ebx+40h]
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_67CC5822
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC5924
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_account_connect
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC5924
mov	[esp+4Ch+arg_8], offset	aAccountNull 
mov	[esp+4Ch+arg_4], offset	aPurple_acco_65	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5924
mov	[esp+4Ch+arg_8], offset	aUiNull	
jmp	short loc_67CC58AC
align 10h
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aAccountDisable 
mov	[esp+4Ch+var_4C], offset dword_67D72020
mov	[esp+4Ch+var_30], eax
call	purple_signal_emit
mov	eax, [esp+4Ch+var_30]
jmp	loc_67CC5804
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5924
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_account_disconnect
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_core_get_ui
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_enabled
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5969
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_account_get_log
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC59AC
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_67CC59CC
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC5A2E
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aAccountNull 
mov	[esp+3Ch+var_38], offset aPurple_acco_66 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC5993
test	edx, edx
jz	short loc_67CC5993
mov	[esp+3Ch+Time],	ebx
call	purple_account_get_presence
mov	[esp+3Ch+Time],	eax
call	purple_presence_get_login_time
mov	esi, eax
test	eax, eax
jz	short loc_67CC5A1E
mov	[esp+3Ch+Time],	ebx
call	purple_account_get_username
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	2
call	purple_log_new
mov	[ebx+44h], eax
jmp	loc_67CC5993
mov	[esp+3Ch+Time],	0 
call	time
mov	esi, eax
jmp	short loc_67CC59E6
call	__stack_chk_fail
align 4
public purple_account_destroy_log
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC5A74
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_67CC5A61
mov	[esp+2Ch+var_2C], eax
call	purple_log_free
mov	dword ptr [ebx+44h], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5A92
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_67 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5A61
call	__stack_chk_fail
align 4
public purple_account_add_buddy
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67CC5B50
test	ebx, ebx
jz	loc_67CC5B70
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	short loc_67CC5B1C
mov	[esp+2Ch+var_2C], esi
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC5B1C
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
test	edx, edx
jz	short loc_67CC5B1C
cmp	dword ptr [edx+11Ch], 138h
jbe	short loc_67CC5B30
mov	edi, [edx+138h]
test	edi, edi
jz	short loc_67CC5B30
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_group
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	edi
lea	esi, [esi+0]
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5B8E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
mov	edi, [edx+6Ch]
test	edi, edi
jz	short loc_67CC5B1C
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_group
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	edi
jmp	short loc_67CC5B1C
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_68 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5B1C
align 10h
mov	[esp+2Ch+var_24], offset aBuddyNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_68 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC5B1C
call	__stack_chk_fail
align 4
public purple_account_add_buddy_with_invite
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CC5C64
test	ebx, ebx
jz	loc_67CC5C94
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	short loc_67CC5C16
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC5C16
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
test	edx, edx
jz	short loc_67CC5C16
cmp	dword ptr [edx+11Ch], 138h
jbe	short loc_67CC5C30
mov	ebp, [edx+138h]
test	ebp, ebp
jz	short loc_67CC5C30
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_group
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	ebp
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC5CAA
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	edi, [edx+6Ch]
test	edi, edi
jz	short loc_67CC5C16
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_group
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5CAA
mov	[esp+3Ch+arg_8], eax
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], esi
mov	eax, edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC5CAA
mov	[esp+3Ch+arg_8], offset	aAccountNull 
mov	[esp+3Ch+arg_4], offset	aPurple_acco_69	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5CAA
mov	[esp+3Ch+arg_8], offset	aBuddyNull 
jmp	short loc_67CC5C78
			
call	__stack_chk_fail
align 10h
public purple_account_add_buddies
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_connection
mov	edi, eax
test	eax, eax
jz	loc_67CC5E00
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	loc_67CC5E00
mov	eax, [eax+10h]
mov	esi, [eax+4Ch]
test	esi, esi
jz	loc_67CC5E00
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	loc_67CC5E70
mov	ebp, [esp+4Ch+var_30]
xor	ebx, ebx
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_get_group
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_list_append
mov	ebx, eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67CC5D10
mov	eax, [esi+11Ch]
cmp	eax, 13Ch
jbe	short loc_67CC5D80
mov	edx, [esi+13Ch]
test	edx, edx
jz	short loc_67CC5D80
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	edx
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC5E77
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
			
mov	edx, [esi+70h]
test	edx, edx
jz	short loc_67CC5D9C
mov	[esp+4Ch+var_44], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	edx
jmp	short loc_67CC5D60
align 4
cmp	eax, 138h
jbe	short loc_67CC5E14
mov	edx, [esi+138h]
test	edx, edx
jz	short loc_67CC5E14
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_67CC5D60
test	ebx, ebx
jz	short loc_67CC5D60
mov	eax, ebx
mov	ebp, [esp+4Ch+var_30]
jmp	short loc_67CC5DCE
align 4
test	eax, eax
jz	short loc_67CC5D60
mov	edx, [esi+138h]
mov	[esp+4Ch+var_40], 0
mov	ecx, [eax]
mov	[esp+4Ch+var_44], ecx
mov	ecx, [ebp+0]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_34], eax
call	edx
mov	ebp, [ebp+4]
mov	eax, [esp+4Ch+var_34]
mov	eax, [eax+4]
test	ebp, ebp
jnz	short loc_67CC5DC4
jmp	loc_67CC5D60
align 10h
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC5E77
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	edx, [esi+6Ch]
test	edx, edx
jz	loc_67CC5D60
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	loc_67CC5D60
test	ebx, ebx
jz	loc_67CC5D60
mov	eax, ebx
mov	ebp, [esp+4Ch+var_30]
jmp	short loc_67CC5E47
align 4
test	eax, eax
jz	loc_67CC5D60
mov	edx, [esi+6Ch]
mov	ecx, [eax]
mov	[esp+4Ch+var_44], ecx
mov	ecx, [ebp+0]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_34], eax
call	edx
mov	ebp, [ebp+4]
mov	eax, [esp+4Ch+var_34]
mov	eax, [eax+4]
test	ebp, ebp
jnz	short loc_67CC5E3C
jmp	loc_67CC5D60
xor	ebx, ebx
jmp	loc_67CC5D30
			
call	__stack_chk_fail
public purple_account_add_buddies_with_invite
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_connection
mov	edi, eax
test	eax, eax
jz	loc_67CC6034
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	loc_67CC6034
mov	eax, [eax+10h]
mov	esi, [eax+4Ch]
test	esi, esi
jz	loc_67CC6034
mov	eax, [esp+4Ch+var_34]
test	eax, eax
jz	loc_67CC6048
mov	ebp, [esp+4Ch+var_34]
xor	ebx, ebx
mov	eax, [ebp+0]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_get_group
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_list_append
mov	ebx, eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67CC5EE4
mov	eax, [esi+11Ch]
cmp	eax, 13Ch
ja	short loc_67CC5F54
cmp	eax, 138h
ja	short loc_67CC5F7C
mov	eax, [esi+70h]
test	eax, eax
jz	loc_67CC5FDC
mov	[esp+4Ch+var_44], ebx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	eax
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC604F
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
mov	eax, [esi+13Ch]
test	eax, eax
jz	short loc_67CC5F7C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	eax
jmp	short loc_67CC5F34
align 4
			
mov	edx, [esi+138h]
test	edx, edx
jz	short loc_67CC5F18
mov	ebp, [esp+4Ch+var_34]
test	ebp, ebp
jz	short loc_67CC5F34
test	ebx, ebx
jz	short loc_67CC5F34
mov	eax, ebx
mov	ebp, [esp+4Ch+var_34]
mov	[esp+4Ch+var_34], ebx
mov	ebx, ebp
mov	ebp, esi
mov	esi, eax
jmp	short loc_67CC5FAE
test	esi, esi
jz	short loc_67CC5FD1
mov	edx, [ebp+138h]
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], eax
mov	eax, [esi]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	edx
mov	ebx, [ebx+4]
mov	esi, [esi+4]
test	ebx, ebx
jnz	short loc_67CC5FA4
mov	ebx, [esp+4Ch+var_34]
jmp	loc_67CC5F34
align 4
mov	edx, [esi+6Ch]
test	edx, edx
jz	loc_67CC5F34
mov	ecx, [esp+4Ch+var_34]
test	ecx, ecx
jz	loc_67CC5F34
test	ebx, ebx
jz	loc_67CC5F34
mov	ebp, [esp+4Ch+var_34]
mov	[esp+4Ch+var_30], ebx
jmp	short loc_67CC600F
align 4
test	ebx, ebx
jz	short loc_67CC602B
mov	edx, [esi+6Ch]
mov	ecx, [ebx]
mov	[esp+4Ch+var_44], ecx
mov	ecx, [ebp+0]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edi
call	edx
mov	ebp, [ebp+4]
mov	ebx, [ebx+4]
test	ebp, ebp
jnz	short loc_67CC6008
mov	ebx, [esp+4Ch+var_30]
jmp	loc_67CC5F34
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC604F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	ebx, ebx
jmp	loc_67CC5F04
			
call	__stack_chk_fail
public purple_account_remove_buddy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	ebx, eax
test	eax, eax
jz	short loc_67CC60BC
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC60BC
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC60BC
mov	eax, [eax+74h]
test	eax, eax
jz	short loc_67CC60BC
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC60CF
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC60CF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_account_remove_buddies
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], edi
call	purple_account_get_connection
mov	ebp, eax
test	eax, eax
jz	short loc_67CC6162
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC6162
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC6162
mov	eax, [eax+78h]
test	eax, eax
jz	short loc_67CC615E
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6176
mov	[esp+3Ch+arg_8], esi
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
test	esi, esi
jz	short loc_67CC6162
mov	eax, [esi]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	purple_account_remove_buddy
mov	ebx, [ebx+4]
mov	esi, [esi+4]
test	ebx, ebx
jnz	short loc_67CC6140
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6176
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_account_remove_group
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
mov	ebx, eax
test	eax, eax
jz	short loc_67CC61E0
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC61E0
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC61E0
mov	eax, [eax+0D8h]
test	eax, eax
jz	short loc_67CC61E0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC61F2
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC61F2
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_account_change_password
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], esi
call	purple_account_get_connection
mov	ebx, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_account_set_password
test	ebx, ebx
jz	short loc_67CC6270
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC6270
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC6270
mov	eax, [eax+68h]
test	eax, eax
jz	short loc_67CC6270
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6284
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], ebp
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6284
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_30], eax
mov	ebx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset aPassword 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_get_string
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aNew_password_1 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_get_string
mov	esi, eax
mov	[esp+5Ch+var_58], offset aNew_password_2 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_get_string
mov	edi, eax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_utf8_collate
test	eax, eax
jnz	loc_67CC63C4
mov	[esp+5Ch+var_58], offset aPassword 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_is_field_required
test	eax, eax
jz	short loc_67CC6312
test	ebp, ebp
jz	short loc_67CC6364
cmp	byte ptr [ebp+0], 0
jz	short loc_67CC6364
mov	[esp+5Ch+var_58], offset aNew_password_1 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_is_field_required
test	eax, eax
jz	short loc_67CC632F
test	esi, esi
jz	short loc_67CC6364
cmp	byte ptr [esi],	0
jz	short loc_67CC6364
mov	[esp+5Ch+var_58], offset aNew_password_2 
mov	[esp+5Ch+var_5C], ebx
call	purple_request_fields_is_field_required
test	eax, eax
jz	short loc_67CC634C
test	edi, edi
jz	short loc_67CC6364
cmp	byte ptr [edi],	0
jz	short loc_67CC6364
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebp
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_account_change_password
jmp	short loc_67CC63B0
align 4
			
mov	[esp+5Ch+var_58], offset aFillOutAllFiel 
mov	[esp+5Ch+var_5C], offset aPidgin 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	purple_notify_message
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC63CE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aNewPasswordsDo 
jmp	short loc_67CC636C
call	__stack_chk_fail
align 4
public purple_account_supports_offline_message
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC6438
test	ebx, ebx
jz	short loc_67CC6468
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	short loc_67CC6454
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67CC6454
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC6454
mov	eax, [eax+100h]
test	eax, eax
jz	short loc_67CC6454
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6486
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aAccount 
mov	[esp+2Ch+var_28], offset aPurple_acco_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6486
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddy	
mov	[esp+2Ch+var_28], offset aPurple_acco_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC6454
			
call	__stack_chk_fail
align 4
public purple_account_get_current_error
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+54h]
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC64B3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_account_clear_current_error
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC64E1
xor	edx, edx
add	esp, 1Ch
jmp	sub_67CC17D0
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	purple_account_clear_current_error
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountSignedO 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6536
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_accounts_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC657C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	short loc_67CC659C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC65D1
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_71 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC6568
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D72034, eax
call	sub_67CC16F8
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountAdded 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
jmp	short loc_67CC6568
call	__stack_chk_fail
align 4
public purple_accounts_remove
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC663C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72034, eax
call	sub_67CC16F8
mov	[esp+2Ch+var_2C], ebx
call	purple_account_clear_current_error
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountRemoved 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC665A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_72 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC662A
call	__stack_chk_fail
align 10h
public purple_accounts_delete
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	loc_67CC6805
call	purple_core_get_ui
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_account_set_enabled
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_notify_close_with_handle
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_request_close_with_handle
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_accounts_remove
call	purple_blist_get_root
mov	edi, eax
test	eax, eax
jnz	short loc_67CC66EA
jmp	loc_67CC6790
align 4
			
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_sibling_next
mov	edi, eax
test	eax, eax
jz	loc_67CC6790
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_type
test	eax, eax
jnz	short loc_67CC66D8
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_first_child
mov	ebx, eax
test	eax, eax
jnz	short loc_67CC6718
jmp	short loc_67CC66D8
align 4
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CC6778
			
mov	ebx, esi
test	esi, esi
jz	short loc_67CC66D8
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_sibling_next
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
mov	[esp+4Ch+var_4C], ebx
dec	eax
jnz	short loc_67CC6708
call	purple_blist_node_get_first_child
mov	ebp, eax
test	eax, eax
jnz	short loc_67CC6746
jmp	short loc_67CC6712
align 10h
			
mov	ebp, ebx
test	ebx, ebx
jz	short loc_67CC6712
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_sibling_next
mov	ebx, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CC6740
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_get_account
cmp	eax, [esp+4Ch+var_30]
jnz	short loc_67CC6740
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_remove_buddy
jmp	short loc_67CC6740
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_chat_get_account
cmp	eax, [esp+4Ch+var_30]
jnz	short loc_67CC6712
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_remove_chat
jmp	short loc_67CC6712
			
call	purple_get_conversations
mov	ebx, eax
jmp	short loc_67CC67AF
align 4
mov	esi, [ebx]
mov	ebx, [ebx+4]
mov	[esp+4Ch+var_4C], esi
call	purple_conversation_get_account
cmp	eax, [esp+4Ch+var_30]
jz	short loc_67CC67FB
			
test	ebx, ebx
jnz	short loc_67CC679C
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_pounce_destroy_all_by_account
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_icons_set_account_icon
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6835
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_account_destroy
mov	[esp+4Ch+var_4C], esi
call	purple_conversation_destroy
jmp	short loc_67CC67AF
mov	[esp+4Ch+var_44], offset aAccountNull 
mov	[esp+4Ch+var_48], offset aPurple_acco_73 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6835
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_accounts_reorder
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CC6964
test	ebx, ebx
js	loc_67CC6920
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_length
cmp	ebx, eax
ja	short loc_67CC68F0
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_index
mov	edi, eax
cmp	eax, 0FFFFFFFFh
jz	loc_67CC6940
mov	[esp+2Ch+var_28], edi
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_nth
cmp	ebx, edi
jle	short loc_67CC68A8
dec	ebx
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:dword_67D72034, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_list_insert
mov	ds:dword_67D72034, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC6982
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CC16F8
align 10h
mov	[esp+2Ch+var_24], offset aGuintNew_index 
mov	[esp+2Ch+var_28], offset aPurple_acco_74 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6982
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aNew_index0 
mov	[esp+2Ch+var_28], offset aPurple_acco_74 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC690C
align 10h
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_username
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aUnregisteredAc 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_error
jmp	short loc_67CC690C
align 4
mov	[esp+2Ch+var_24], offset aAccountNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_74 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC690C
			
call	__stack_chk_fail
align 4
public purple_accounts_get_all
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72034
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC69AB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_accounts_get_all_active
			
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72034
xor	edi, edi
test	ebx, ebx
jnz	short loc_67CC69D7
jmp	short loc_67CC6A03
align 10h
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CC6A03
			
mov	esi, [ebx]
call	purple_core_get_ui
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_enabled
test	eax, eax
jz	short loc_67CC69D0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	g_list_append
mov	edi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CC69D7
			
mov	eax, edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6A18
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public purple_accounts_find
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_67CC6B07
test	esi, esi
jz	loc_67CC6AE7
mov	ebx, ds:dword_67D72034
test	ebx, ebx
jnz	short loc_67CC6A63
jmp	short loc_67CC6AC5
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CC6AC5
			
mov	ebp, [ebx]
mov	[esp+4Ch+var_48], esi
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CC6A5C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edi, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_account_get_username
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_normalize
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
mov	[esp+4Ch+var_4C], edi
test	eax, eax
jnz	short loc_67CC6AE0
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CC6A63
			
xor	ebp, ebp
			
mov	eax, ebp
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6B27
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	g_free
jmp	short loc_67CC6AC7
mov	[esp+4Ch+var_44], offset aProtocol_idNul 
mov	[esp+4Ch+var_48], offset aPurple_acco_75 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67CC6AC7
mov	[esp+4Ch+var_44], offset aNameNull 
mov	[esp+4Ch+var_48], offset aPurple_acco_75 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67CC6AC7
call	__stack_chk_fail
public purple_account_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC6B78
test	edi, edi
jz	short loc_67CC6B98
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	purple_accounts_find
mov	ebx, eax
test	eax, eax
jz	short loc_67CC6BB8
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CC6CF6
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aUsernameNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_76 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC6B5F
mov	[esp+2Ch+var_24], offset aProtocol_idNul 
mov	[esp+2Ch+var_28], offset aPurple_acco_76 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC6B5F
mov	[esp+2Ch+var_2C], 58h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	[ebx+54h], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_username
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_protocol_id
mov	[esp+2Ch+var_20], offset sub_67CC1290
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+24h], eax
mov	[esp+2Ch+var_20], offset g_hash_table_destroy
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+28h], eax
mov	dword ptr [ebx+44h], 0
mov	dword ptr [ebx+38h], 1
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountCreated 
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signal_emit
mov	[esp+2Ch+var_2C], edi
call	purple_find_prpl
test	eax, eax
jz	loc_67CC6B5F
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CC6C93
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_67CC6C93
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_set_status_types
			
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_new_for_account
mov	[ebx+40h], eax
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_status_type_with_primitive
test	eax, eax
jz	short loc_67CC6CD6
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_id
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_set_status_active
jmp	loc_67CC6B5F
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], offset aOffline 
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_set_status_active
jmp	loc_67CC6B5F
call	__stack_chk_fail
align 4
public purple_accounts_restore_current_statuses
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_network_is_available
test	eax, eax
jz	short loc_67CC6D74
mov	ebx, ds:dword_67D72034
test	ebx, ebx
jnz	short loc_67CC6D2B
jmp	short loc_67CC6D60
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CC6D60
			
mov	esi, [ebx]
call	purple_core_get_ui
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_account_get_enabled
test	eax, eax
jz	short loc_67CC6D24
mov	eax, [esi+40h]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_67CC6D24
mov	[esp+2Ch+var_2C], esi
call	purple_account_connect
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CC6D2B
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6D8A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_28], offset aNetworkNotConn 
mov	[esp+2Ch+var_2C], offset aAccount 
call	purple_debug_warning
jmp	short loc_67CC6D60
call	__stack_chk_fail
align 10h
public purple_accounts_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72024, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC6DB7
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_accounts_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72024
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6DDF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_accounts_get_handle
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72020
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC6E07
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_accounts_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
call	purple_connections_get_handle
mov	ebx, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountConne_0 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountDisable 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountEnabled 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountSetting 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountSetInfo 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountCreated 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountDestroy 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountAdded 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountRemoved 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 0Ch
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+Format], 0Ch
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountStatusC 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountActions 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountAliasCh 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Src], 7
call	purple_value_new
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_INT__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountAutho_1 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Src], 7
call	purple_value_new
mov	[esp+6Ch+var_50], ebp
mov	[esp+6Ch+var_54], edi
mov	[esp+6Ch+var_58], esi
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_INT__POINTER_POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountAutho_2 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountAuthori 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountAutho_0 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Fh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+Src], 0Fh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+Format], offset aAccountErrorCh 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountSignedO 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+Format], offset aAccountSigne_0 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+Src], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+Src], 10h
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], 1
call	purple_value_new
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_INT_POINTER
mov	[esp+6Ch+Format], offset aAccountConnect 
mov	[esp+6Ch+Src], offset dword_67D72020
call	purple_signal_register
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset sub_67CC64E8
mov	[esp+6Ch+var_64], offset dword_67D72020
mov	[esp+6Ch+Format], offset aSignedOn 
mov	[esp+6Ch+Src], ebx
call	purple_signal_connect
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset sub_67CC149C
mov	[esp+6Ch+var_64], offset dword_67D72020
mov	[esp+6Ch+Format], offset aSignedOff 
mov	[esp+6Ch+Src], ebx
call	purple_signal_connect
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], offset sub_67CC1860
mov	[esp+6Ch+var_64], offset dword_67D72020
mov	[esp+6Ch+Format], offset aConnectionEr_0 
mov	[esp+6Ch+Src], ebx
call	purple_signal_connect
mov	ds:dword_67D72030, 1
mov	[esp+6Ch+Format], offset aAccounts 
mov	[esp+6Ch+Src], offset aPidgin 
call	libintl_dgettext
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], offset aAccounts_xml 
call	purple_util_read_xml_from_file
mov	[esp+6Ch+var_30], eax
test	eax, eax
jz	loc_67CC7DDC
mov	[esp+6Ch+Format], offset aAccount 
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	[esp+6Ch+var_40], eax
test	eax, eax
jz	loc_67CC7DCB
nop
mov	[esp+6Ch+Format], offset aProtocol 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC8172
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	esi, eax
mov	[esp+6Ch+Format], offset aName 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC8137
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	loc_67CC8137
test	esi, esi
jz	loc_67CC8367
mov	[esp+6Ch+Format], esi
mov	[esp+6Ch+Src], ebx
call	_purple_oscar_convert
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebx
call	purple_account_new
mov	ebp, eax
mov	[esp+6Ch+Src], ebx
call	g_free
mov	[esp+6Ch+Src], esi
call	g_free
mov	[esp+6Ch+Format], offset aPassword 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_67CC7663
mov	[esp+6Ch+Format], offset aKeyring_id 
mov	[esp+6Ch+Src], eax
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+6Ch+Format], offset aMode 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_data
mov	ebx, eax
test	edi, edi
jz	short loc_67CC763F
cmp	byte ptr [edi],	0
jnz	loc_67CC8258
			
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], ebp
call	purple_account_set_remember_password
mov	[esp+6Ch+Format], ebx
mov	[esp+6Ch+Src], ebp
call	purple_account_set_password
mov	[esp+6Ch+Src], ebx
call	g_free
mov	[esp+6Ch+Format], offset aAlias	
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7698
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67CC7698
cmp	byte ptr [eax],	0
jnz	loc_67CC830B
mov	[esp+6Ch+Src], eax
call	g_free
			
mov	[esp+6Ch+Format], offset aStatuses 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC78AA
mov	[esp+6Ch+Format], offset aStatus 
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jz	loc_67CC78AA
mov	[esp+6Ch+var_3C], ebp
xchg	ax, ax
mov	[esp+6Ch+Format], offset aActive 
mov	[esp+6Ch+Src], edi
call	xmlnode_get_attrib
mov	ebx, eax
test	eax, eax
jz	loc_67CC7894
mov	[esp+6Ch+Format], offset aTrue 
mov	[esp+6Ch+Src], eax
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_67CC807C
mov	[esp+6Ch+Format], offset aFalse	
mov	[esp+6Ch+Src], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CC7894
mov	[esp+6Ch+var_44], 0
mov	[esp+6Ch+Format], offset aType 
mov	[esp+6Ch+Src], edi
call	xmlnode_get_attrib
mov	[esp+6Ch+var_48], eax
test	eax, eax
jz	loc_67CC7894
mov	[esp+6Ch+Format], offset aAttributes 
mov	[esp+6Ch+Src], edi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_67CC808C
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Format], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Src], eax
call	purple_account_get_status
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+Format], offset aAttribute 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_child
mov	ebx, eax
xor	ebp, ebp
test	eax, eax
jz	loc_67CC786C
mov	[esp+6Ch+var_34], edi
jmp	short loc_67CC77AA
align 4
			
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	loc_67CC7868
			
mov	[esp+6Ch+Format], offset aId 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+Format], offset aValue	
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_attrib
mov	edi, eax
test	esi, esi
jz	short loc_67CC7798
cmp	byte ptr [esi],	0
jz	short loc_67CC7798
test	eax, eax
jz	short loc_67CC7798
cmp	byte ptr [eax],	0
jz	short loc_67CC7798
mov	[esp+6Ch+Format], esi
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Src], eax
call	purple_status_get_attr_value
test	eax, eax
jz	short loc_67CC7798
mov	[esp+6Ch+Format], esi
mov	[esp+6Ch+Src], ebp
mov	[esp+6Ch+var_4C], eax
call	g_list_append
mov	ebp, eax
mov	ecx, [esp+6Ch+var_4C]
mov	[esp+6Ch+Src], ecx
call	purple_value_get_type
cmp	eax, 7
jz	short loc_67CC7829
cmp	eax, 0Dh
jz	loc_67CC80DD
cmp	eax, 4
jnz	loc_67CC7798
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], offset Format	
mov	[esp+6Ch+Src], edi 
call	sscanf
dec	eax
jz	loc_67CC8241
mov	[esp+6Ch+Format], esi
mov	[esp+6Ch+Src], ebp
call	g_list_remove
mov	ebp, eax
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	loc_67CC77AA
mov	edi, [esp+6Ch+var_34]
			
mov	[esp+6Ch+var_60], ebp
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Format], eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Src], eax
call	purple_account_set_status_list
mov	[esp+6Ch+Src], ebp
call	g_list_free
			
mov	[esp+6Ch+Src], edi
call	xmlnode_get_next_twin
mov	edi, eax
test	eax, eax
jnz	loc_67CC76D4
mov	ebp, [esp+6Ch+var_3C]
			
mov	[esp+6Ch+Format], offset aUserinfo 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC78EA
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67CC78EA
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebp
mov	[esp+6Ch+var_4C], eax
call	purple_account_set_user_info
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+Src], eax
call	g_free
			
mov	[esp+6Ch+Format], offset aBuddyicon 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC79C6
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	loc_67CC79C6
call	purple_buddy_icons_get_cache_dir
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], ebx
mov	[esp+6Ch+Src], eax
call	g_build_filename
mov	esi, eax
mov	[esp+6Ch+var_60], 0
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], esi
call	g_file_get_contents_utf8
test	eax, eax
jnz	loc_67CC811A
mov	[esp+6Ch+Src], esi
call	g_free
call	g_get_home_dir_utf8
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], ebx
mov	[esp+6Ch+var_64], offset aIcons	
mov	[esp+6Ch+Format], offset a_gaim	
mov	[esp+6Ch+Src], eax
call	g_build_filename
mov	esi, eax
mov	[esp+6Ch+var_60], 0
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], esi
call	g_file_get_contents_utf8
test	eax, eax
jnz	loc_67CC811A
mov	[esp+6Ch+Src], esi
call	g_free
mov	[esp+6Ch+Src], ebx
call	g_free
			
mov	[esp+6Ch+Format], offset aSettings 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	[esp+6Ch+var_48], eax
test	eax, eax
jz	loc_67CC7B78
xchg	ax, ax
mov	[esp+6Ch+Format], offset aUi 
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+6Ch+Format], offset aSetting 
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_67CC7B00
mov	[esp+6Ch+var_44], ebp
mov	ebp, esi
jmp	loc_67CC7AAB
align 4
mov	[esp+6Ch+Format], offset aInt 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	loc_67CC7DF4
mov	edi, 2
			
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_data
mov	edx, eax
test	eax, eax
jz	short loc_67CC7A9D
test	ebp, ebp
jz	loc_67CC7E18
cmp	edi, 3
jz	loc_67CC7E54
cmp	edi, 2
jz	loc_67CC7E7C
xor	eax, eax
cmp	byte ptr [edx],	30h
setnz	al
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+Format], ebp
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
mov	[esp+6Ch+var_4C], edx
call	purple_account_set_ui_bool
mov	edx, [esp+6Ch+var_4C]
			
mov	[esp+6Ch+Src], edx
call	g_free
			
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_67CC7AFC
mov	[esp+6Ch+Format], offset aName 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_attrib
mov	esi, eax
test	eax, eax
jz	short loc_67CC7A9D
mov	[esp+6Ch+Format], offset aType 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	short loc_67CC7A9D
mov	[esp+6Ch+Format], offset aString 
mov	[esp+6Ch+Src], eax
call	purple_strequal
test	eax, eax
jz	loc_67CC7A28
mov	edi, 3
jmp	loc_67CC7A45
align 4
mov	ebp, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], ebp
call	purple_account_get_protocol_id
mov	[esp+6Ch+Format], offset aPrplYahoo 
mov	[esp+6Ch+Src], eax
call	purple_strequal
test	eax, eax
jnz	loc_67CC7F3C
			
mov	[esp+6Ch+Src], ebp
call	purple_account_get_protocol_id
mov	[esp+6Ch+Format], offset aPrplIcq 
mov	[esp+6Ch+Src], eax
call	purple_strequal
test	eax, eax
jnz	loc_67CC7EAC
			
mov	[esp+6Ch+Src], ebp
call	purple_account_get_protocol_id
mov	[esp+6Ch+Format], offset aPrplJabber 
mov	[esp+6Ch+Src], eax
call	g_str_equal
test	eax, eax
jnz	loc_67CC800C
			
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_next_twin
mov	[esp+6Ch+var_48], eax
test	eax, eax
jnz	loc_67CC79E8
mov	[esp+6Ch+Format], offset aProxy	
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	loc_67CC7D0C
call	purple_proxy_info_new
mov	ebx, eax
mov	[esp+6Ch+Format], 0FFFFFFFFh
mov	[esp+6Ch+Src], eax
call	purple_proxy_info_set_type
mov	[esp+6Ch+Format], offset aType 
mov	[esp+6Ch+Src], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7BFF
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_67CC7BFF
mov	[esp+6Ch+Format], offset aGlobal 
mov	[esp+6Ch+Src], eax
call	purple_strequal
test	eax, eax
jz	loc_67CC8214
mov	[esp+6Ch+Format], 0FFFFFFFFh
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
			
mov	[esp+6Ch+Src], edi
call	g_free
			
mov	[esp+6Ch+Format], offset aHost 
mov	[esp+6Ch+Src], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7C3B
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67CC7C3B
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebx
mov	[esp+6Ch+var_4C], eax
call	purple_proxy_info_set_host
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+Src], eax
call	g_free
			
mov	[esp+6Ch+Format], offset aPort 
mov	[esp+6Ch+Src], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7C79
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_67CC7C79
mov	[esp+6Ch+Src], eax 
call	atoi
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_port
mov	[esp+6Ch+Src], edi
call	g_free
			
mov	[esp+6Ch+Format], offset aUsername 
mov	[esp+6Ch+Src], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7CB5
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67CC7CB5
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebx
mov	[esp+6Ch+var_4C], eax
call	purple_proxy_info_set_username
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+Src], eax
call	g_free
			
mov	[esp+6Ch+Format], offset aPassword 
mov	[esp+6Ch+Src], esi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7CF1
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67CC7CF1
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebx
mov	[esp+6Ch+var_4C], eax
call	purple_proxy_info_set_password
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+Src], eax
call	g_free
			
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_get_type
inc	eax
jz	loc_67CC81C5
			
mov	[esp+6Ch+Format], ebx
mov	[esp+6Ch+Src], ebp
call	purple_account_set_proxy_info
			
mov	[esp+6Ch+Format], offset aCurrent_error	
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_67CC7DAB
mov	[esp+6Ch+Format], offset aType 
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67CC7DAB
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	edi, eax
test	eax, eax
jz	short loc_67CC7DAB
mov	[esp+6Ch+Src], eax 
call	atoi
mov	esi, eax
mov	[esp+6Ch+Src], edi
call	g_free
cmp	esi, 10h
ja	loc_67CC8337
mov	[esp+6Ch+Format], offset aDescription 
mov	[esp+6Ch+Src], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC8324
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	loc_67CC8324
mov	[esp+6Ch+Src], 8
call	g_malloc0
mov	edx, eax
mov	[eax], esi
mov	[eax+4], ebx
mov	eax, ebp
call	sub_67CC17D0
			
mov	[esp+6Ch+Src], ebp
call	purple_accounts_add
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_next_twin
mov	[esp+6Ch+var_40], eax
test	eax, eax
jnz	loc_67CC7564
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+Src], eax
call	xmlnode_free
call	_purple_buddy_icons_account_loaded_cb
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC844E
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+Format], offset aBool 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	loc_67CC7A9D
mov	edi, 1
jmp	loc_67CC7A45
align 4
cmp	edi, 3
jz	loc_67CC8093
cmp	edi, 2
jz	loc_67CC80B4
xor	eax, eax
cmp	byte ptr [edx],	30h
setnz	al
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], esi
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
mov	[esp+6Ch+var_4C], edx
call	purple_account_set_bool
mov	edx, [esp+6Ch+var_4C]
jmp	loc_67CC7A95
align 4
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+Format], ebp
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
mov	[esp+6Ch+var_4C], edx
call	purple_account_set_ui_string
mov	edx, [esp+6Ch+var_4C]
jmp	loc_67CC7A95
align 4
mov	[esp+6Ch+Src], eax 
mov	[esp+6Ch+var_4C], eax
call	atoi
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+Format], ebp
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
call	purple_account_set_ui_int
mov	edx, [esp+6Ch+var_4C]
jmp	loc_67CC7A95
align 4
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], offset aServer 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_string
mov	ebx, eax
mov	[esp+6Ch+Format], offset aLogin_messagin 
mov	[esp+6Ch+Src], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CC7EEE
mov	[esp+6Ch+Format], offset aLogin_oscar_ao 
mov	[esp+6Ch+Src], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CC7F06
mov	[esp+6Ch+var_64], offset aLogin_icq_com	
mov	[esp+6Ch+Format], offset aServer 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_string
mov	[esp+6Ch+Format], offset aSlogin_oscar_a 
mov	[esp+6Ch+Src], ebx
call	purple_strequal
test	eax, eax
jz	loc_67CC7B40
mov	[esp+6Ch+var_64], offset aSlogin_icq_com 
mov	[esp+6Ch+Format], offset aServer 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_string
jmp	loc_67CC7B40
align 4
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], offset aYahoojp 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_bool
test	eax, eax
jz	short loc_67CC7FD4
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], offset aServerjp 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_string
mov	ebx, eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], offset aXferjp_host 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_string
mov	esi, eax
test	ebx, ebx
jz	loc_67CC819A
test	eax, eax
jz	loc_67CC8179
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+Format], offset aServer 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_string
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+Format], offset aXfer_host 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_string
mov	[esp+6Ch+Format], offset aPrplYahoojp 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_protocol_id
mov	[esp+6Ch+Format], offset aYahoojp 
mov	[esp+6Ch+Src], ebp
call	purple_account_remove_setting
mov	[esp+6Ch+Format], offset aServerjp 
mov	[esp+6Ch+Src], ebp
call	purple_account_remove_setting
mov	[esp+6Ch+Format], offset aXferjp_host 
mov	[esp+6Ch+Src], ebp
call	purple_account_remove_setting
jmp	loc_67CC7B20
align 4
mov	[esp+6Ch+var_64], offset byte_67D31A87
mov	[esp+6Ch+Format], offset aConnection_sec 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_string
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], offset byte_67D31A87
call	g_str_equal
test	eax, eax
jz	loc_67CC7B60
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+Format], offset aOld_ssl 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_bool
test	eax, eax
jz	loc_67CC80F0
mov	eax, offset aOld_ssl 
			
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], offset aConnection_sec 
mov	[esp+6Ch+Src], ebp
call	purple_account_set_string
jmp	loc_67CC7B60
align 4
mov	[esp+6Ch+var_44], 1
jmp	loc_67CC7726
align 4
xor	ebp, ebp
jmp	loc_67CC786C
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], esi
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
mov	[esp+6Ch+var_4C], edx
call	purple_account_set_string
mov	edx, [esp+6Ch+var_4C]
jmp	loc_67CC7A95
mov	[esp+6Ch+Src], eax 
mov	[esp+6Ch+var_4C], eax
call	atoi
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], esi
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Src], eax
call	purple_account_set_int
mov	edx, [esp+6Ch+var_4C]
jmp	loc_67CC7A95
mov	[esp+6Ch+Format], edi
mov	[esp+6Ch+Src], ebp
call	g_list_append
mov	ebp, eax
jmp	loc_67CC7798
mov	[esp+6Ch+var_64], 1
mov	[esp+6Ch+Format], offset aRequire_tls 
mov	[esp+6Ch+Src], ebp
call	purple_account_get_bool
test	eax, eax
jz	loc_67CC81BB
mov	eax, offset aRequire_tls 
jmp	loc_67CC8061
			
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebp
call	purple_buddy_icons_set_account_icon
jmp	loc_67CC79B6
			
mov	[esp+6Ch+Format], offset aUsername 
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Src], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CC8365
mov	[esp+6Ch+Src], eax
call	xmlnode_get_data
mov	ebx, eax
test	esi, esi
jz	loc_67CC8367
test	eax, eax
jnz	loc_67CC75C0
jmp	loc_67CC8367
xor	esi, esi
jmp	loc_67CC758A
mov	[esp+6Ch+var_64], offset aXferjp_hostNul 
mov	[esp+6Ch+Format], offset aMigrate_yahoo_ 
mov	[esp+6Ch+Src], 0
call	g_return_if_fail_warning
jmp	loc_67CC7B20
mov	[esp+6Ch+var_64], offset aServerjpNull 
mov	[esp+6Ch+Format], offset aMigrate_yahoo_ 
mov	[esp+6Ch+Src], 0
call	g_return_if_fail_warning
jmp	loc_67CC7B20
mov	eax, offset aOpportunistic_ 
jmp	loc_67CC8061
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_get_host
test	eax, eax
jnz	loc_67CC7D00
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_get_port
test	eax, eax
jnz	loc_67CC7D00
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_get_username
test	eax, eax
jnz	loc_67CC7D00
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_get_password
test	eax, eax
jnz	loc_67CC7D00
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_destroy
jmp	loc_67CC7D0C
align 4
mov	[esp+6Ch+Format], offset aNone 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	loc_67CC837E
mov	[esp+6Ch+Format], 0
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebp
call	g_list_append
mov	ebp, eax
jmp	loc_67CC7798
mov	[esp+6Ch+Format], offset aKeyringInterna 
mov	[esp+6Ch+Src], edi
call	g_strcmp0
test	eax, eax
jnz	short loc_67CC8295
test	esi, esi
jz	loc_67CC763F
cmp	byte ptr [esi],	0
jz	loc_67CC763F
mov	[esp+6Ch+Format], offset aCleartext 
mov	[esp+6Ch+Src], esi
call	g_strcmp0
test	eax, eax
jz	loc_67CC763F
mov	[esp+6Ch+Format], offset aFoundEncrypted 
mov	[esp+6Ch+Src], offset aAccount 
call	purple_debug_warning
mov	edx, [ebp+54h]
mov	eax, [edx+4]
mov	[esp+6Ch+Src], eax
mov	[esp+6Ch+var_4C], edx
call	g_free
mov	edx, [esp+6Ch+var_4C]
mov	eax, [edx+8]
mov	[esp+6Ch+Src], eax
call	g_free
mov	edx, [esp+6Ch+var_4C]
mov	eax, [edx+0Ch]
mov	[esp+6Ch+Src], eax
call	g_free
mov	[esp+6Ch+Src], edi
call	g_strdup
mov	edx, [esp+6Ch+var_4C]
mov	[edx+4], eax
mov	[esp+6Ch+Src], esi
call	g_strdup
mov	edx, [esp+6Ch+var_4C]
mov	[edx+8], eax
mov	[esp+6Ch+Src], ebx
call	g_strdup
mov	edx, [esp+6Ch+var_4C]
mov	[edx+0Ch], eax
jmp	loc_67CC765B
mov	[esp+6Ch+Format], eax
mov	[esp+6Ch+Src], ebp
mov	[esp+6Ch+var_4C], eax
call	purple_account_set_alias
mov	eax, [esp+6Ch+var_4C]
jmp	loc_67CC7690
			
mov	[esp+6Ch+Src], offset byte_67D31A87
call	g_strdup
mov	ebx, eax
jmp	loc_67CC7D91
mov	[esp+6Ch+Src], ebp
call	purple_account_get_username
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+Format], offset aInvalidPurplec 
mov	[esp+6Ch+Src], offset aAccount 
call	purple_debug_error
mov	esi, 10h
jmp	loc_67CC7D67
xor	ebx, ebx
			
mov	[esp+6Ch+Src], esi
call	g_free
mov	[esp+6Ch+Src], ebx
call	g_free
xor	ebp, ebp
jmp	loc_67CC7DAB
mov	[esp+6Ch+Format], offset aHttp 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jnz	short loc_67CC83BB
mov	[esp+6Ch+Format], offset aSocks4 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	short loc_67CC83D0
mov	[esp+6Ch+Format], 2
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
mov	[esp+6Ch+Format], 1
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
mov	[esp+6Ch+Format], offset aSocks5 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jnz	short loc_67CC8410
mov	[esp+6Ch+Format], offset aTor 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	short loc_67CC8425
mov	[esp+6Ch+Format], 5
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
align 10h
mov	[esp+6Ch+Format], 3
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
mov	[esp+6Ch+Format], offset aEnvvar 
mov	[esp+6Ch+Src], edi
call	purple_strequal
test	eax, eax
jz	short loc_67CC8453
mov	[esp+6Ch+Format], 4
mov	[esp+6Ch+Src], ebx
call	purple_proxy_info_set_type
jmp	loc_67CC7BF7
call	__stack_chk_fail
mov	[esp+6Ch+Src], ebp
call	purple_account_get_username
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Format], offset aInvalidProxyTy 
mov	[esp+6Ch+Src], offset aAccount 
call	purple_debug_error
jmp	loc_67CC7BF7
public purple_accounts_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7202C
test	eax, eax
jnz	short loc_67CC84E4
mov	eax, ds:dword_67D72034
test	eax, eax
jz	short loc_67CC84BC
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_account_destroy
mov	eax, ds:dword_67D72034
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:dword_67D72034, eax
test	eax, eax
jnz	short loc_67CC8498
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signals_disconnect_by_handle
mov	[esp+2Ch+var_2C], offset dword_67D72020
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC84FD
add	esp, 2Ch
retn
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D7202C, 0
call	sub_67CC4348
jmp	short loc_67CC848F
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8545
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public purple_account_option_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CC85B4
test	ebp, ebp
jz	short loc_67CC85D4
test	edi, edi
jz	short loc_67CC85F4
mov	[esp+3Ch+var_3C], 14h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx+4], eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+8], eax
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8614
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aTypePurple_pre 
mov	[esp+3Ch+var_38], offset aPurple_acco_77 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC859C
mov	[esp+3Ch+var_34], offset aTextNull 
mov	[esp+3Ch+var_38], offset aPurple_acco_77 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC859C
mov	[esp+3Ch+var_34], offset aPref_nameNull	
mov	[esp+3Ch+var_38], offset aPurple_acco_77 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC859C
call	__stack_chk_fail
align 4
public purple_account_option_bool_new
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 1
call	purple_account_option_new
test	eax, eax
jz	short loc_67CC8652
mov	[eax+0Ch], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8663
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_account_option_int_new
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 2
call	purple_account_option_new
test	eax, eax
jz	short loc_67CC869E
mov	[eax+0Ch], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC86AF
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_account_option_string_new
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 3
call	purple_account_option_new
mov	ebx, eax
test	eax, eax
jz	short loc_67CC86F5
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8709
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_account_option_list_new
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 4
call	purple_account_option_new
test	eax, eax
jz	short loc_67CC8746
mov	[eax+0Ch], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8757
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_account_option_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC87DC
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
cmp	eax, 3
jz	short loc_67CC880C
cmp	eax, 4
jz	short loc_67CC87B0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC881C
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 10h
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CC8795
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CC8504
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
jmp	short loc_67CC8795
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_78 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC881C
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	loc_67CC8795
			
call	__stack_chk_fail
align 4
public purple_account_option_set_default_bool
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC8878
cmp	dword ptr [eax], 1
jz	short loc_67CC8870
mov	[esp+2Ch+var_24], offset aOptionTypePurp 
mov	[esp+2Ch+var_28], offset aPurple_acco_79 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8896
add	esp, 2Ch
retn
mov	[eax+0Ch], edx
jmp	short loc_67CC8860
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_79 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC8860
call	__stack_chk_fail
align 4
public purple_account_option_set_default_int
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC88F0
cmp	dword ptr [eax], 2
jz	short loc_67CC88E8
mov	[esp+2Ch+var_24], offset aOptionTypePu_0 
mov	[esp+2Ch+var_28], offset aPurple_acco_80 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC890E
add	esp, 2Ch
retn
mov	[eax+0Ch], edx
jmp	short loc_67CC88D8
align 10h
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_80 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC88D8
call	__stack_chk_fail
align 4
public purple_account_option_set_default_string
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC897C
cmp	dword ptr [ebx], 3
jz	short loc_67CC8964
mov	[esp+2Ch+var_24], offset aOptionTypePu_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_81 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC899A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
jmp	short loc_67CC8951
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_81 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC8951
call	__stack_chk_fail
align 10h
public purple_account_option_set_masked
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC89F4
cmp	dword ptr [eax], 3
jz	short loc_67CC89EC
mov	[esp+2Ch+var_24], offset aOptionTypePu_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_82 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8A12
add	esp, 2Ch
retn
mov	[eax+10h], edx
jmp	short loc_67CC89DC
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_82 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC89DC
call	__stack_chk_fail
align 4
public purple_account_option_set_list
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC8A98
cmp	dword ptr [ebx], 4
jz	short loc_67CC8A68
mov	[esp+2Ch+var_24], offset aOptionTypePu_2 
mov	[esp+2Ch+var_28], offset aPurple_acco_83 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8AB6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CC8A92
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CC8504
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	[ebx+0Ch], esi
jmp	short loc_67CC8A55
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_83 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC8A55
call	__stack_chk_fail
align 4
public purple_account_option_add_list_item
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CC8B78
test	esi, esi
jz	loc_67CC8B90
test	edi, edi
jz	loc_67CC8BAC
cmp	dword ptr [ebx], 4
jz	short loc_67CC8B2C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC8BC5
mov	[esp+3Ch+arg_8], offset	aOptionTypePu_2	
			
mov	[esp+3Ch+arg_4], offset	aPurple_acco_84	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
mov	[esp+3Ch+var_3C], 8
call	g_malloc0
mov	ebp, eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebp+0], eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebp+4], eax
mov	[esp+3Ch+var_38], ebp
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_3C], eax
call	g_list_append
mov	[ebx+0Ch], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8BC5
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8BC5
mov	[esp+3Ch+arg_8], offset	aOptionNull 
jmp	short loc_67CC8B0F
align 10h
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8BC5
mov	[esp+3Ch+arg_8], offset	aKeyNull 
jmp	loc_67CC8B0F
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC8BC5
mov	[esp+3Ch+arg_8], offset	aValueNull 
jmp	loc_67CC8B0F
			
call	__stack_chk_fail
align 4
public purple_account_option_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8BF8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8C18
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_85 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8BE5
call	__stack_chk_fail
align 10h
public purple_account_option_get_text
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8C4C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8C6C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_86 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8C3A
call	__stack_chk_fail
align 4
public purple_account_option_get_setting
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8CA0
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8CC0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_87 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8C8E
call	__stack_chk_fail
align 4
public purple_account_option_get_default_bool
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8D1C
cmp	dword ptr [eax], 1
jz	short loc_67CC8D14
mov	[esp+2Ch+var_24], offset aOptionTypePurp 
mov	[esp+2Ch+var_28], offset aPurple_acco_88 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8D3C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+0Ch]
jmp	short loc_67CC8D02
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_88 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8D02
call	__stack_chk_fail
align 4
public purple_account_option_get_default_int
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8D9C
cmp	dword ptr [eax], 2
jz	short loc_67CC8D94
mov	[esp+2Ch+var_24], offset aOptionTypePu_0 
mov	[esp+2Ch+var_28], offset aPurple_acco_89 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8DBF
add	esp, 2Ch
retn
align 4
mov	eax, [eax+0Ch]
jmp	short loc_67CC8D81
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_89 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CC8D81
call	__stack_chk_fail
public purple_account_option_get_default_string
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8E18
cmp	dword ptr [eax], 3
jz	short loc_67CC8E10
mov	[esp+2Ch+var_24], offset aOptionTypePu_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_90 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8E38
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+0Ch]
jmp	short loc_67CC8DFE
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_90 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8DFE
call	__stack_chk_fail
align 10h
public purple_account_option_get_default_list_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8EA4
cmp	dword ptr [eax], 4
jz	short loc_67CC8E8C
mov	[esp+2Ch+var_24], offset aOptionTypePu_2 
mov	[esp+2Ch+var_28], offset aPurple_acco_91 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8EC4
add	esp, 2Ch
retn
align 4
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CC8EA0
mov	eax, [eax]
test	eax, eax
jz	short loc_67CC8EA0
mov	eax, [eax+4]
jmp	short loc_67CC8E7A
align 10h
			
xor	eax, eax
jmp	short loc_67CC8E7A
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_91 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8E7A
call	__stack_chk_fail
align 4
public purple_account_option_get_masked
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8F20
cmp	dword ptr [eax], 3
jz	short loc_67CC8F18
mov	[esp+2Ch+var_24], offset aOptionTypePu_1 
mov	[esp+2Ch+var_28], offset aPurple_acco_92 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8F40
add	esp, 2Ch
retn
align 4
mov	eax, [eax+10h]
jmp	short loc_67CC8F06
align 10h
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_92 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8F06
call	__stack_chk_fail
align 4
public purple_account_option_get_list
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC8F9C
cmp	dword ptr [eax], 4
jz	short loc_67CC8F94
mov	[esp+2Ch+var_24], offset aOptionTypePu_2 
mov	[esp+2Ch+var_28], offset aPurple_acco_93 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC8FBC
add	esp, 2Ch
retn
align 4
mov	eax, [eax+0Ch]
jmp	short loc_67CC8F82
align 4
mov	[esp+2Ch+var_24], offset aOptionNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_93 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC8F82
call	__stack_chk_fail
align 4
public purple_account_user_split_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	edi, edi
jz	short loc_67CC9058
mov	eax, esi
test	al, al
jnz	short loc_67CC9024
mov	[esp+3Ch+var_34], offset aSep0 
mov	[esp+3Ch+var_38], offset aPurple_acco_94 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9078
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], 10h
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx], eax
mov	eax, esi
mov	[ebx+8], al
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx+4], eax
mov	dword ptr [ebx+0Ch], 1
jmp	short loc_67CC900B
align 4
mov	[esp+3Ch+var_34], offset aTextNull 
mov	[esp+3Ch+var_38], offset aPurple_acco_94 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CC900B
call	__stack_chk_fail
align 10h
public purple_account_user_split_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC90C8
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC90F5
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_95 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC90F5
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_account_user_split_get_text
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9128
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9148
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_96 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC9115
call	__stack_chk_fail
align 10h
public purple_account_user_split_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC917C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC919C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_97 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC916A
call	__stack_chk_fail
align 4
public purple_account_user_split_get_separator
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC91D0
mov	al, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC91F0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset aPurple_acco_98 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC91BE
call	__stack_chk_fail
align 4
public purple_account_user_split_get_reverse
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9224
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9244
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset asc_67D32BA0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC9212
call	__stack_chk_fail
align 4
public purple_account_user_split_set_reverse
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC927C
mov	[eax+0Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC929A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSplitNull 
mov	[esp+2Ch+var_28], offset asc_67D32BE0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC926A
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC92D6
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+40h]
mov	ebx, [esp+44h]
mov	eax, [esp+48h]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch], edx
xor	edx, edx
test	ebx, ebx
jz	loc_67CC942C
mov	dword ptr [esp+4], offset aSetting_0 
mov	[esp], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+8], edi
mov	dword ptr [esp+4], offset aName_0 
mov	[esp], eax
call	xmlnode_set_attrib
mov	[esp], ebx
call	purple_value_get_type
cmp	eax, 7
jz	short loc_67CC9370
mov	[esp], ebx
call	purple_value_get_type
cmp	eax, 0Dh
jz	loc_67CC93C8
mov	[esp], ebx
call	purple_value_get_type
cmp	eax, 4
jz	loc_67CC9404
			
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CC944D
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	dword ptr [esp+8], offset aInt_0 
mov	dword ptr [esp+4], offset aType_0 
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp], ebx
call	purple_value_get_int
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], offset aD_0 
mov	dword ptr [esp+4], 15h
lea	ebx, [esp+17h]
mov	[esp], ebx
call	g_snprintf
mov	dword ptr [esp+8], 0FFFFFFFFh
mov	[esp+4], ebx
mov	[esp], esi
call	xmlnode_insert_data
jmp	short loc_67CC9357
align 4
mov	dword ptr [esp+8], offset aString_0 
mov	dword ptr [esp+4], offset aType_0 
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp], ebx
call	purple_value_get_string
mov	dword ptr [esp+8], 0FFFFFFFFh
mov	[esp+4], eax
mov	[esp], esi
call	xmlnode_insert_data
jmp	loc_67CC9357
align 4
mov	dword ptr [esp+8], offset aBool_0 
mov	dword ptr [esp+4], offset aType_0 
mov	[esp], esi
call	xmlnode_set_attrib
mov	[esp], ebx
call	purple_value_get_boolean
jmp	loc_67CC9390
align 4
mov	dword ptr [esp+8], offset aValueNull_0 
mov	dword ptr [esp+4], offset aValue_to_xmlno 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
jmp	loc_67CC9357
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72044
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9487
add	esp, 2Ch
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset sub_67CC92A0
mov	[esp+2Ch+var_28], offset sub_67CC94F0
mov	[esp+2Ch+var_2C], offset loc_67CC954C
call	g_hash_table_new_full
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72044
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC94E9
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [ecx+8]
cmp	[edx+8], ebx
jz	short loc_67CC9524
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9546
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, [ecx+4]
cmp	[edx+4], ebx
jnz	short loc_67CC9511
mov	eax, [ecx]
mov	[esp+2Ch+var_28], eax
mov	eax, [edx]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CC9511
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esi]
mov	[esp], eax
call	g_str_hash
mov	edi, eax
mov	eax, [esi+8]
mov	[esp], eax
call	g_direct_hash
mov	ebx, eax
xor	ebx, edi
mov	eax, [esi+4]
mov	[esp], eax
call	g_direct_hash
xor	eax, ebx
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC959C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_slist_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC95DC
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_slist_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC961C
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC964F
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_value_destroy
call	__stack_chk_fail
			
push	ebx
sub	esp, 38h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CC969D
test	edx, edx
jz	short loc_67CC9698
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], edx
call	g_utf8_collate
test	eax, eax
mov	edx, [esp+3Ch+var_20]
jnz	short loc_67CC9698
			
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC96AD
add	esp, 38h
pop	ebx
retn
			
cmp	byte ptr [ebx],	0
jnz	short loc_67CC96A6
test	edx, edx
jz	short loc_67CC9685
cmp	byte ptr [edx],	0
jz	short loc_67CC9685
mov	eax, 1
jmp	short loc_67CC9687
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+30h]
mov	ebx, [esp+34h]
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CC9724
mov	dword ptr [esp+4], offset aComponent 
mov	[esp], eax
call	xmlnode_new_child
mov	esi, eax
mov	[esp+8], edi
mov	dword ptr [esp+4], offset aName_0 
mov	[esp], eax
call	xmlnode_set_attrib
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9753
mov	dword ptr [esp+38h], 0FFFFFFFFh
mov	[esp+34h], ebx
mov	[esp+30h], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	xmlnode_insert_data
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9753
mov	dword ptr [esp+38h], offset aDataNull 
mov	dword ptr [esp+34h], offset aChat_component 
mov	dword ptr [esp+30h], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CC9780
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC97A8
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_20], offset sub_67CC9624
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx], eax
jmp	short loc_67CC976F
call	__stack_chk_fail
align 10h
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CCC5A4
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D72050, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC97EF
add	esp, 2Ch
retn
call	__stack_chk_fail
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, ds:dword_67D72050
test	edx, edx
jz	short loc_67CC981C
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC982D
add	esp, 1Ch
retn
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC982D
add	esp, 1Ch
jmp	short loc_67CC97B0
			
call	__stack_chk_fail
align 4
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ecx, ds:dword_67D72050
test	ecx, ecx
jz	short loc_67CC985C
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9870
add	esp, 1Ch
retn
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9870
add	esp, 1Ch
jmp	loc_67CC97B0
			
call	__stack_chk_fail
align 4
public purple_blist_schedule_save
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CC989F
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CC989F
mov	[esp+2Ch+var_2C], 0
call	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC98AF
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_blist_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	esi, eax
mov	edi, ds:dword_67D72038
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset sub_67CC92A0
mov	[esp+2Ch+var_28], offset sub_67CC94F0
mov	[esp+2Ch+var_2C], offset loc_67CC954C
call	g_hash_table_new_full
mov	[esi+4], eax
mov	[esp+2Ch+var_20], offset g_hash_table_destroy
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset loc_67D2EBBC
mov	[esp+2Ch+var_2C], offset g_direct_hash
call	g_hash_table_new_full
mov	ds:dword_67D72044, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72048, eax
call	purple_accounts_get_all
mov	ebx, eax
test	eax, eax
jz	short loc_67CC9971
lea	esi, [esi+0]
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	sub_67CC948C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CC9960
test	edi, edi
jz	short loc_67CC9980
mov	eax, [edi]
test	eax, eax
jz	short loc_67CC9980
mov	[esp+2Ch+var_2C], esi
call	eax
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9995
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_set_blist
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72040, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC99C3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_get_blist
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72040
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC99EB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_blist_get_root
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72040
test	eax, eax
jz	short loc_67CC9A19
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9A1D
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CC9A09
call	__stack_chk_fail
align 4
public purple_blist_get_buddies
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
mov	eax, ds:dword_67D72040
test	eax, eax
jz	short loc_67CC9A74
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset sub_67CC95E4
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9A78
add	esp, 2Ch
retn
align 4
xor	eax, eax
jmp	short loc_67CC9A62
call	__stack_chk_fail
align 10h
public purple_blist_get_ui_data
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72040
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9AA6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_blist_set_ui_data
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72040
mov	edx, [esp+1Ch+arg_0]
mov	[eax+8], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9AD6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_blist_show
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CC9B05
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CC9B05
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9B15
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_blist_destroy
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72038
mov	[esp+2Ch+var_24], offset aDestroying 
mov	[esp+2Ch+var_28], offset aBlist	
mov	[esp+2Ch+var_2C], 2
call	purple_debug
test	ebx, ebx
jz	short loc_67CC9B63
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CC9B63
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9B74
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_blist_set_visible
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CC9BAD
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67CC9BAD
mov	[esp+2Ch+var_28], edx
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9BBD
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_blist_node_get_parent
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9BEE
mov	eax, [eax+0Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9BF2
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CC9BDE
call	__stack_chk_fail
align 4
public purple_blist_node_get_first_child
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9C22
mov	eax, [eax+10h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9C26
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CC9C12
call	__stack_chk_fail
align 4
public purple_blist_node_get_sibling_next
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9C56
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9C5A
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CC9C46
call	__stack_chk_fail
align 10h
public purple_blist_node_get_sibling_prev
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9C8A
mov	eax, [eax+4]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9C8E
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CC9C7A
call	__stack_chk_fail
align 4
public purple_blist_node_get_ui_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CC9CC0
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9CE0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aNode 
mov	[esp+2Ch+var_28], offset aPurple_blist_n 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CC9CAE
call	__stack_chk_fail
align 4
public purple_blist_node_set_ui_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CC9D18
mov	[eax+18h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9D36
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNode 
mov	[esp+2Ch+var_28], offset aPurple_blist_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC9D06
call	__stack_chk_fail
align 4
public purple_blist_update_node_icon
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	edx, edx
jz	short loc_67CC9D84
test	eax, eax
jz	short loc_67CC9D71
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CC9D71
mov	[esp+2Ch+var_28], edx
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9DA2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_u 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CC9D71
call	__stack_chk_fail
align 4
public purple_blist_update_buddy_icon
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9DD3
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_blist_update_node_icon
call	__stack_chk_fail
public purple_blist_rename_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebp, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CC9F34
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc
mov	esi, eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esi], eax
mov	eax, [ebx+34h]
mov	[esi+4], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[esi+8], eax
mov	[esp+4Ch+var_48], esi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_34], eax
call	g_hash_table_remove
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], esi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_replace
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc
mov	edi, eax
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[edi], eax
mov	eax, [ebx+34h]
mov	[edi+4], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[edi+8], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], edi
mov	ecx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], ecx
call	g_hash_table_replace
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[ebx+20h], eax
test	ebp, ebp
jz	short loc_67CC9F50
mov	eax, [ebp+28h]
test	eax, eax
jz	short loc_67CC9F09
mov	[esp+4Ch+var_4C], ebx
call	eax
mov	eax, [ebp+0Ch]
test	eax, eax
jz	short loc_67CC9F50
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CC9F64
mov	[esp+4Ch+arg_4], ebx
mov	edx, ds:dword_67D72040
mov	[esp+4Ch+arg_0], edx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	[esp+4Ch+var_44], offset aBuddyNull_0 
mov	[esp+4Ch+var_48], offset aPurple_blist_r 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CC9F64
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_blist_alias_contact
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
mov	ebx, ds:dword_67D72038
test	esi, esi
jz	loc_67CCA0B0
test	eax, eax
jz	short loc_67CC9FA2
cmp	byte ptr [eax],	0
jnz	loc_67CCA060
mov	edi, [esi+20h]
xor	edx, edx
mov	eax, edi
call	sub_67CC9654
xor	ebp, ebp
test	eax, eax
jz	loc_67CCA094
			
mov	dword ptr [esi+20h], 0
mov	[esp+3Ch+var_3C], ebp
call	g_free
test	ebx, ebx
jz	short loc_67CC9FED
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67CC9FD7
mov	[esp+3Ch+var_3C], esi
call	eax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CC9FED
mov	[esp+3Ch+var_38], esi
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	ebx, [esi+10h]
test	ebx, ebx
jz	short loc_67CCA021
mov	eax, [ebx+34h]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CCA01A
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_autoset_title
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CC9FF4
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aBlistNodeAlias 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_emit
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCA0E0
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
mov	[esp+3Ch+var_3C], eax
call	purple_utf8_strip_unprintables
mov	ebp, eax
mov	edi, [esi+20h]
mov	edx, eax
mov	eax, edi
call	sub_67CC9654
test	eax, eax
jz	short loc_67CCA094
test	ebp, ebp
jz	loc_67CC9FB8
cmp	byte ptr [ebp+0], 0
jz	loc_67CC9FB8
mov	[esi+20h], ebp
jmp	loc_67CC9FC7
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA0E0
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+3Ch+var_34], offset aContactNull 
mov	[esp+3Ch+var_38], offset aPurple_blist_a 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA0E0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_blist_alias_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
mov	esi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCA1F8
test	eax, eax
jz	short loc_67CCA11E
cmp	byte ptr [eax],	0
jnz	loc_67CCA1A8
mov	ebp, [ebx+20h]
xor	edx, edx
mov	eax, ebp
call	sub_67CC9654
xor	edi, edi
test	eax, eax
jz	loc_67CCA1DC
			
mov	dword ptr [ebx+20h], 0
mov	[esp+3Ch+var_3C], edi
call	g_free
test	esi, esi
jz	short loc_67CCA169
mov	eax, [esi+28h]
test	eax, eax
jz	short loc_67CCA153
mov	[esp+3Ch+var_3C], ebx
call	eax
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CCA169
mov	[esp+3Ch+var_38], ebx
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBlistNodeAlias 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_emit
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCA228
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+3Ch+var_3C], eax
call	purple_utf8_strip_unprintables
mov	edi, eax
mov	ebp, [ebx+20h]
mov	edx, eax
mov	eax, ebp
call	sub_67CC9654
test	eax, eax
jz	short loc_67CCA1DC
test	edi, edi
jz	loc_67CCA134
cmp	byte ptr [edi],	0
jz	loc_67CCA134
mov	[ebx+20h], edi
jmp	loc_67CCA143
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA228
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+3Ch+var_34], offset aChatNull 
mov	[esp+3Ch+var_38], offset aPurple_blist_1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA228
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_blist_alias_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
mov	esi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCA364
test	eax, eax
jz	short loc_67CCA266
cmp	byte ptr [eax],	0
jnz	loc_67CCA314
mov	ebp, [ebx+24h]
xor	edx, edx
mov	eax, ebp
call	sub_67CC9654
xor	edi, edi
test	eax, eax
jz	loc_67CCA348
			
mov	dword ptr [ebx+24h], 0
mov	[esp+3Ch+var_3C], edi
call	g_free
test	esi, esi
jz	short loc_67CCA2B1
mov	eax, [esi+28h]
test	eax, eax
jz	short loc_67CCA29B
mov	[esp+3Ch+var_3C], ebx
call	eax
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CCA2B1
mov	[esp+3Ch+var_38], ebx
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	eax, [ebx+34h]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CCA2D7
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_autoset_title
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBlistNodeAlias 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_emit
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCA394
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+3Ch+var_3C], eax
call	purple_utf8_strip_unprintables
mov	edi, eax
mov	ebp, [ebx+24h]
mov	edx, eax
mov	eax, ebp
call	sub_67CC9654
test	eax, eax
jz	short loc_67CCA348
test	edi, edi
jz	loc_67CCA27C
cmp	byte ptr [edi],	0
jz	loc_67CCA27C
mov	[ebx+24h], edi
jmp	loc_67CCA28B
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA394
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+3Ch+var_34], offset aBuddyNull_0 
mov	[esp+3Ch+var_38], offset aPurple_blist_2 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA394
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_blist_server_alias_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebp, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCA4F0
test	esi, esi
jz	short loc_67CCA3D1
cmp	byte ptr [esi],	0
jnz	loc_67CCA480
			
mov	edi, [ebx+28h]
xor	edx, edx
mov	eax, edi
call	sub_67CC9654
xor	esi, esi
test	eax, eax
jz	loc_67CCA4D4
			
mov	dword ptr [ebx+28h], 0
mov	[esp+3Ch+var_3C], esi
call	g_free
test	ebp, ebp
jz	short loc_67CCA41C
mov	eax, [ebp+28h]
test	eax, eax
jz	short loc_67CCA406
mov	[esp+3Ch+var_3C], ebx
call	eax
mov	eax, [ebp+0Ch]
test	eax, eax
jz	short loc_67CCA41C
mov	[esp+3Ch+var_38], ebx
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	eax, [ebx+34h]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CCA442
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_autoset_title
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aBlistNodeAlias 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_emit
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCA520
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 10h
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_utf8_validate
test	eax, eax
jz	loc_67CCA3D1
mov	[esp+3Ch+var_3C], esi
call	purple_utf8_strip_unprintables
mov	esi, eax
mov	edi, [ebx+28h]
mov	edx, eax
mov	eax, edi
call	sub_67CC9654
test	eax, eax
jz	short loc_67CCA4D4
test	esi, esi
jz	loc_67CCA3E7
cmp	byte ptr [esi],	0
jz	loc_67CCA3E7
mov	[ebx+28h], esi
jmp	loc_67CCA3F6
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA520
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+3Ch+var_34], offset aBuddyNull_0 
mov	[esp+3Ch+var_38], offset aPurple_blist_s 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA520
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_chat_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebp, ds:dword_67D72038
test	edx, edx
jz	short loc_67CCA5C4
test	edi, edi
jz	loc_67CCA5E4
mov	[esp+4Ch+var_4C], 2Ch
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[eax+28h], edx
test	esi, esi
jz	short loc_67CCA57A
cmp	byte ptr [esi],	0
jnz	short loc_67CCA5B4
			
mov	[ebx+24h], edi
lea	eax, [ebx+14h]
call	sub_67CC9758
mov	dword ptr [ebx], 3
test	ebp, ebp
jz	short loc_67CCA59B
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_67CCA59B
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCA604
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], esi
call	purple_utf8_strip_unprintables
mov	[ebx+20h], eax
jmp	short loc_67CCA57A
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_0	
mov	[esp+4Ch+var_48], offset aPurple_chat_ne 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CCA59B
mov	[esp+4Ch+var_44], offset aComponentsNull 
mov	[esp+4Ch+var_48], offset aPurple_chat_ne 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CCA59B
call	__stack_chk_fail
align 4
public purple_chat_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA659
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
public purple_buddy_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebp, ds:dword_67D72038
test	esi, esi
jz	loc_67CCA71C
test	edi, edi
jz	loc_67CCA73C
mov	[esp+4Ch+var_4C], 40h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	[eax+34h], esi
mov	[esp+4Ch+var_4C], edi
call	purple_utf8_strip_unprintables
mov	[ebx+20h], eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_utf8_strip_unprintables
mov	[ebx+24h], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_presence_new_for_buddy
mov	[ebx+38h], eax
mov	dword ptr [ebx], 2
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], offset aOffline_0 
mov	[esp+4Ch+var_4C], eax
call	purple_presence_set_status_active
lea	eax, [ebx+14h]
call	sub_67CC9758
test	ebp, ebp
jz	short loc_67CCA704
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_67CCA704
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCA75C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_0	
mov	[esp+4Ch+var_48], offset aPurple_buddy_n 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CCA704
mov	[esp+4Ch+var_44], offset aNameNull_0 
mov	[esp+4Ch+var_48], offset aPurple_buddy_n 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CCA704
call	__stack_chk_fail
align 4
public purple_buddy_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_protocol_id
mov	[esp+2Ch+var_2C], eax
call	purple_find_prpl
test	eax, eax
jz	short loc_67CCA7A7
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CCA7A7
mov	eax, [eax+0C8h]
test	eax, eax
jz	short loc_67CCA7A7
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_icon_unref
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+38h]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_destroy
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
lea	esi, [esi+0]
mov	[esp+2Ch+var_2C], ebx
call	g_source_remove_by_user_data
test	eax, eax
jnz	short loc_67CCA7F4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA811
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_buddy_set_icon
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCA888
mov	eax, [ebx+30h]
cmp	eax, esi
jz	short loc_67CCA852
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_icon_unref
test	esi, esi
jz	short loc_67CCA884
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_icon_ref
mov	[ebx+30h], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aBuddyIconChang 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA8B6
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_blist_update_node_icon
xor	eax, eax
jmp	short loc_67CCA84F
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_s 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCA8B6
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_buddy_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCA8E8
mov	eax, [eax+34h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCA908
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_g 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCA8D6
call	__stack_chk_fail
align 10h
public purple_buddy_get_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCA93C
mov	eax, [eax+20h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCA95C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCA92A
call	__stack_chk_fail
align 4
public purple_buddy_get_icon
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCA990
mov	eax, [eax+30h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCA9B0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCA97E
call	__stack_chk_fail
align 4
public purple_buddy_get_protocol_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCA9E4
mov	eax, [eax+2Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAA04
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCA9D2
call	__stack_chk_fail
align 4
public purple_buddy_set_protocol_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CCAA3C
mov	[eax+2Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAA5A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCAA2A
call	__stack_chk_fail
align 10h
public purple_contact_new
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, ds:dword_67D72038
mov	[esp+2Ch+var_2C], 38h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+24h], 0
mov	dword ptr [eax+28h], 0
mov	dword ptr [eax+2Ch], 0
lea	eax, [eax+14h]
call	sub_67CC9758
mov	dword ptr [ebx], 1
test	esi, esi
jz	short loc_67CCAAB7
mov	eax, [esi+4]
test	eax, eax
jz	short loc_67CCAAB7
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAACB
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public purple_contact_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAB12
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public purple_contact_get_group
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCAB44
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAB64
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContact 
mov	[esp+2Ch+var_28], offset aPurple_contact 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCAB32
call	__stack_chk_fail
align 4
public purple_contact_set_alias
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CCAB9F
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_blist_alias_contact
call	__stack_chk_fail
public purple_contact_invalidate_priority_buddy
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCABD4
mov	dword ptr [eax+34h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCABF2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContactNull 
mov	[esp+2Ch+var_28], offset aPurple_conta_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCABC2
call	__stack_chk_fail
align 4
public purple_group_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAC3A
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
public purple_blist_remove_chat
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCAD00
mov	esi, [ebx+0Ch]
test	esi, esi
jz	short loc_67CCAC9C
cmp	ebx, [esi+10h]
mov	eax, [ebx+8]
jz	loc_67CCAD30
mov	edx, [ebx+4]
test	edx, edx
jz	short loc_67CCAC83
mov	[edx+8], eax
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CCAC8A
mov	[eax+4], edx
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67CCACF8
dec	dword ptr [esi+24h]
test	edi, edi
jz	short loc_67CCACC2
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_67CCACB6
mov	[esp+2Ch+var_28], ebx
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [edi+2Ch]
test	eax, eax
jz	short loc_67CCACC2
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aBlistNodeRemov 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAD38
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_chat_destroy
align 4
dec	dword ptr [esi+2Ch]
dec	dword ptr [esi+28h]
jmp	short loc_67CCAC99
mov	[esp+2Ch+var_24], offset aChatNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAD38
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esi+10h], eax
jmp	loc_67CCAC76
			
call	__stack_chk_fail
align 10h
public purple_blist_remove_group
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72038
test	esi, esi
jz	loc_67CCAE68
mov	edi, [esi+10h]
test	edi, edi
jz	short loc_67CCAD84
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCAE93
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	edx, ds:dword_67D72040
cmp	esi, [edx]
mov	eax, [esi+8]
jz	loc_67CCAE8C
mov	edx, [esi+4]
test	edx, edx
jz	short loc_67CCADA2
mov	[edx+8], eax
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CCADA9
mov	[eax+4], edx
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	eax, [esi+20h]
mov	[esp+2Ch+var_2C], eax
call	g_utf8_collate_key
mov	edi, eax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72048
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	[esp+2Ch+var_2C], edi
call	g_free
test	ebx, ebx
jz	short loc_67CCADFD
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CCADF1
mov	[esp+2Ch+var_28], esi
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_67CCADFD
mov	[esp+2Ch+var_2C], esi
call	eax
			
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aBlistNodeRemov 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
call	purple_connections_get_all
mov	ebx, eax
test	eax, eax
jnz	short loc_67CCAE57
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCAE93
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_group_destroy
mov	[esp+2Ch+var_2C], edi
call	purple_connection_get_account
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_account_remove_group
nop
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CCAE20
mov	edi, [ebx]
mov	[esp+2Ch+var_2C], edi
call	purple_connection_get_state
dec	eax
jnz	short loc_67CCAE50
jmp	short loc_67CCAE3B
align 4
mov	[esp+2Ch+var_24], offset aGroupNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CCAD6A
align 4
mov	[edx], eax
jmp	loc_67CCAD95
			
call	__stack_chk_fail
public purple_buddy_get_alias_only
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CCAED8
mov	eax, [edx+24h]
test	eax, eax
jz	short loc_67CCAEBA
cmp	byte ptr [eax],	0
jnz	short loc_67CCAEC6
mov	eax, [edx+28h]
test	eax, eax
jz	short loc_67CCAEF4
cmp	byte ptr [eax],	0
jz	short loc_67CCAEF4
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAEF8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67CCAEC6
call	__stack_chk_fail
align 10h
public purple_buddy_get_alias
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CCAF44
mov	eax, [edx+24h]
test	eax, eax
jz	short loc_67CCAF30
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAF64
add	esp, 2Ch
retn
align 10h
mov	eax, [edx+28h]
test	eax, eax
jz	short loc_67CCAF3C
cmp	byte ptr [eax],	0
jnz	short loc_67CCAF1D
mov	eax, [edx+20h]
jmp	short loc_67CCAF1D
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCAF1D
call	__stack_chk_fail
align 4
public purple_buddy_get_local_buddy_alias
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCAF98
mov	eax, [eax+24h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCAFB8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddy_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCAF86
call	__stack_chk_fail
align 10h
public purple_buddy_get_server_alias
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCAFF4
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CCB014
cmp	byte ptr [eax],	0
jz	short loc_67CCB014
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB018
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCAFE3
			
xor	eax, eax
jmp	short loc_67CCAFE3
call	__stack_chk_fail
align 10h
public purple_chat_get_name
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CCB0D0
mov	eax, [esi+20h]
test	eax, eax
jz	short loc_67CCB049
cmp	byte ptr [eax],	0
jnz	short loc_67CCB0B7
mov	eax, [esi+28h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_protocol_id
mov	[esp+3Ch+var_3C], eax
call	purple_find_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	ebx, [eax+40h]
test	ebx, ebx
jz	short loc_67CCB0CC
mov	eax, [esi+28h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_connection
mov	[esp+3Ch+var_3C], eax
call	ebx
mov	edi, eax
mov	eax, [eax]
mov	eax, [eax+4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset g_free
mov	[esp+3Ch+var_3C], edi
mov	[esp+3Ch+var_20], eax
call	g_list_foreach
mov	[esp+3Ch+var_3C], edi
call	g_list_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB0F0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
xor	eax, eax
jmp	short loc_67CCB0B7
mov	[esp+3Ch+var_34], offset aChatNull 
mov	[esp+3Ch+var_38], offset aPurple_chat_ge 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB0B7
call	__stack_chk_fail
align 4
public purple_find_buddy
			
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, ds:dword_67D72040
test	ecx, ecx
jz	loc_67CCB1D4
test	edx, edx
jz	loc_67CCB1B4
test	eax, eax
jz	short loc_67CCB184
cmp	byte ptr [eax],	0
jz	short loc_67CCB184
mov	[esp+2Ch+var_18], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	purple_normalize
mov	[esp+2Ch+var_1C], eax
mov	eax, ds:dword_67D72040
mov	ebx, [eax]
lea	esi, [esp+2Ch+var_1C]
test	ebx, ebx
jz	short loc_67CCB17E
nop
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CCB177
mov	[esp+2Ch+var_14], ebx
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67CCB1A2
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCB154
xor	eax, eax
jmp	short loc_67CCB1A2
align 4
			
mov	[esp+2Ch+var_24], offset aNameNullName0	
mov	[esp+2Ch+var_28], offset aPurple_find_bu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB1F4
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aAccountNull_0	
mov	[esp+2Ch+var_28], offset aPurple_find_bu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB1A2
mov	[esp+2Ch+var_24], offset aPurplebuddylis 
mov	[esp+2Ch+var_28], offset aPurple_find_bu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB1A2
call	__stack_chk_fail
align 4
public purple_find_buddy_in_group
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, ds:dword_67D72040
test	edx, edx
jz	short loc_67CCB298
test	ebx, ebx
jz	loc_67CCB2B8
test	eax, eax
jz	short loc_67CCB234
cmp	byte ptr [eax],	0
jnz	short loc_67CCB264
mov	[esp+2Ch+var_24], offset aNameNullName0	
mov	[esp+2Ch+var_28], offset aPurple_find__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB2DB
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_normalize
mov	[esp+2Ch+var_1C], eax
mov	[esp+2Ch+var_18], ebx
mov	[esp+2Ch+var_14], esi
lea	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
jmp	short loc_67CCB252
align 4
mov	[esp+2Ch+var_24], offset aPurplebuddylis 
mov	[esp+2Ch+var_28], offset aPurple_find__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB252
mov	[esp+2Ch+var_24], offset aAccountNull_0	
mov	[esp+2Ch+var_28], offset aPurple_find__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CCB252
call	__stack_chk_fail
public purple_find_buddies
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	esi, ds:dword_67D72040
test	esi, esi
jz	loc_67CCB3F0
test	ebx, ebx
jz	loc_67CCB3CC
test	eax, eax
jz	short loc_67CCB319
cmp	byte ptr [eax],	0
jnz	short loc_67CCB368
mov	[esp+3Ch+var_20], 0
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72044
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
lea	edx, [esp+3Ch+var_20]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset sub_67CC95A4
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_foreach
mov	esi, [esp+3Ch+var_20]
			
mov	eax, esi
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCB413
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_normalize
mov	[esp+3Ch+var_1C], eax
mov	[esp+3Ch+var_18], ebx
mov	eax, ds:dword_67D72040
mov	ebx, [eax]
xor	esi, esi
test	ebx, ebx
jz	short loc_67CCB34E
lea	edi, [esp+3Ch+var_1C]
lea	esi, [esi+0]
mov	ecx, [ebx+10h]
test	ecx, ecx
jz	short loc_67CCB3C1
mov	[esp+3Ch+var_14], ebx
mov	[esp+3Ch+var_38], edi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CCB3C1
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_slist_prepend
mov	esi, eax
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCB390
jmp	short loc_67CCB34E
align 4
mov	[esp+3Ch+var_34], offset aAccountNull_0	
mov	[esp+3Ch+var_38], offset aPurple_find__1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67CCB34E
align 10h
mov	[esp+3Ch+var_34], offset aPurplebuddylis 
mov	[esp+3Ch+var_38], offset aPurple_find__1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67CCB34E
call	__stack_chk_fail
public purple_find_group
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, ds:dword_67D72040
test	edx, edx
jz	short loc_67CCB4A8
test	eax, eax
jz	short loc_67CCB43F
cmp	byte ptr [eax],	0
jnz	short loc_67CCB470
mov	[esp+3Ch+var_34], offset aNameNullName0	
mov	[esp+3Ch+var_38], offset aPurple_find_gr 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB4C8
add	esp, 38h
pop	ebx
retn
align 10h
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], eax
call	g_utf8_collate_key
mov	ebx, eax
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72048
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CCB45D
align 4
mov	[esp+3Ch+var_34], offset aPurplebuddylis 
mov	[esp+3Ch+var_38], offset aPurple_find_gr 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB45D
call	__stack_chk_fail
align 10h
public purple_group_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCB58C
cmp	byte ptr [ebx],	0
jnz	short loc_67CCB530
mov	[esp+2Ch+var_24], offset aName0	
mov	[esp+2Ch+var_28], offset aPurple_group_n 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCB5AF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_find_group
mov	esi, eax
test	eax, eax
jnz	short loc_67CCB516
mov	[esp+2Ch+var_2C], 30h
call	g_malloc0
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_utf8_strip_unprintables
mov	[esi+20h], eax
mov	dword ptr [esi+24h], 0
mov	dword ptr [esi+28h], 0
mov	dword ptr [esi+2Ch], 0
lea	eax, [esi+14h]
call	sub_67CC9758
mov	dword ptr [esi], 0
test	edi, edi
jz	short loc_67CCB516
mov	eax, [edi+4]
test	eax, eax
jz	short loc_67CCB516
mov	[esp+2Ch+var_2C], esi
call	eax
jmp	short loc_67CCB516
mov	[esp+2Ch+var_24], offset aNameNull_0 
mov	[esp+2Ch+var_28], offset aPurple_group_n 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67CCB516
call	__stack_chk_fail
public purple_chat_get_group
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCB5E0
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB600
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aChatNull 
mov	[esp+2Ch+var_28], offset aPurple_chat__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB5CE
call	__stack_chk_fail
align 4
public purple_chat_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCB634
mov	eax, [eax+28h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB654
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull 
mov	[esp+2Ch+var_28], offset aPurple_chat__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB622
call	__stack_chk_fail
align 4
public purple_chat_get_components
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCB688
mov	eax, [eax+24h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB6A8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull 
mov	[esp+2Ch+var_28], offset aPurple_chat__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB676
call	__stack_chk_fail
align 10h
public purple_buddy_get_contact
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCB6DC
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB6FC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB6CA
call	__stack_chk_fail
align 4
public purple_buddy_get_local_alias
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCB734
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67CCB754
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB76C
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_buddy_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB722
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_contact
test	eax, eax
jz	short loc_67CCB767
mov	eax, [eax+20h]
test	eax, eax
jnz	short loc_67CCB722
mov	eax, [ebx+20h]
jmp	short loc_67CCB722
call	__stack_chk_fail
align 4
public purple_buddy_get_contact_alias
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCB7A4
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67CCB7C4
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB7E8
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB792
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_contact
test	eax, eax
jz	short loc_67CCB7D7
mov	eax, [eax+20h]
test	eax, eax
jnz	short loc_67CCB792
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67CCB7E3
cmp	byte ptr [eax],	0
jnz	short loc_67CCB792
mov	eax, [ebx+20h]
jmp	short loc_67CCB792
call	__stack_chk_fail
align 10h
public purple_buddy_get_presence
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCB81C
mov	eax, [eax+38h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCB83C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCB80A
call	__stack_chk_fail
align 4
public purple_blist_remove_buddy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCBA00
mov	esi, [ebx+0Ch]
test	esi, esi
jz	loc_67CCBA20
mov	ebp, [esi+0Ch]
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CCB883
mov	edx, [ebx+8]
mov	[eax+8], edx
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_67CCB88D
mov	[edx+4], eax
test	esi, esi
jz	short loc_67CCB8DA
cmp	ebx, [esi+10h]
jz	loc_67CCBA28
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_67CCB9D4
			
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_67CCB9C0
			
dec	dword ptr [esi+24h]
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67CCB8DA
mov	edx, [esi+30h]
cmp	edx, ebx
jz	loc_67CCBA40
			
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_2C], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_28], eax
mov	[esp+4Ch+var_24], ebp
lea	ebp, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
test	edi, edi
jz	short loc_67CCB959
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_67CCB94D
mov	[esp+4Ch+var_48], ebx
mov	edx, ds:dword_67D72040
mov	[esp+4Ch+var_4C], edx
call	eax
mov	eax, [edi+2Ch]
test	eax, eax
jz	short loc_67CCB959
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_destroy_all_by_buddy
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyRemoved 
mov	[esp+4Ch+var_4C], offset dword_67D7204C
call	purple_signal_emit
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBlistNodeRemov 
mov	[esp+4Ch+var_4C], offset dword_67D7204C
call	purple_signal_emit
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_destroy
test	esi, esi
jz	short loc_67CCB9A8
mov	ecx, [esi+10h]
test	ecx, ecx
jz	loc_67CCBA30
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCBB3A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
dec	dword ptr [esi+28h]
jnz	loc_67CCB8C5
dec	dword ptr [ebp+28h]
jmp	loc_67CCB8C5
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_presence
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_online
test	eax, eax
jz	loc_67CCB8B2
dec	dword ptr [esi+2Ch]
jnz	loc_67CCB8B2
dec	dword ptr [ebp+2Ch]
jmp	loc_67CCB8B2
align 10h
mov	[esp+4Ch+var_44], offset aBuddyNull_0 
mov	[esp+4Ch+var_48], offset aPurple_blist_5 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCB9A8
align 10h
xor	ebp, ebp
jmp	loc_67CCB876
align 4
mov	[esi+10h], edx
jmp	loc_67CCB89A
mov	[esp+4Ch+var_4C], esi
call	purple_blist_remove_contact
jmp	loc_67CCB9A8
align 10h
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], edx
call	purple_contact_invalidate_priority_buddy
test	edi, edi
mov	edx, [esp+4Ch+var_30]
jz	loc_67CCBADC
mov	eax, [edi+0Ch]
test	eax, eax
jz	short loc_67CCBA72
mov	[esp+4Ch+var_48], esi
mov	ecx, ds:dword_67D72040
mov	[esp+4Ch+var_4C], ecx
call	eax
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [edx+34h]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	purple_normalize
mov	[esp+4Ch+var_2C], eax
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+34h]
mov	[esp+4Ch+var_28], eax
mov	[esp+4Ch+var_24], ebp
lea	ebp, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
jmp	loc_67CCB937
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_2C], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_28], eax
mov	[esp+4Ch+var_24], ebp
lea	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], edi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
jmp	loc_67CCB959
call	__stack_chk_fail
align 10h
public purple_blist_remove_contact
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, ds:dword_67D72038
test	ebx, ebx
jz	short loc_67CCBB9C
mov	edx, [ebx+0Ch]
mov	eax, [ebx+10h]
test	eax, eax
jnz	short loc_67CCBB77
jmp	short loc_67CCBBCA
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_blist_remove_buddy
mov	eax, [ebx+10h]
mov	edx, [eax+8]
test	edx, edx
jnz	short loc_67CCBB6C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCBC43
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_blist_remove_buddy
mov	[esp+2Ch+var_24], offset aContactNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBC43
add	esp, 24h
pop	ebx
pop	esi
retn
cmp	ebx, [edx+10h]
mov	eax, [ebx+8]
jz	short loc_67CCBC3E
mov	edx, [ebx+4]
test	edx, edx
jz	short loc_67CCBBDF
mov	[edx+8], eax
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CCBBE6
mov	[eax+4], edx
test	esi, esi
jz	short loc_67CCBC0C
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67CCBC00
mov	[esp+2Ch+var_28], ebx
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [esi+2Ch]
test	eax, eax
jz	short loc_67CCBC0C
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aBlistNodeRemov 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBC43
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_contact_destroy
mov	[edx+10h], eax
jmp	short loc_67CCBBD2
			
call	__stack_chk_fail
public purple_buddy_get_media_caps
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCBC74
mov	eax, [eax+3Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBC94
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCBC62
call	__stack_chk_fail
align 4
public purple_buddy_set_media_caps
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CCBCCC
mov	[eax+3Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBCEA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCBCBA
call	__stack_chk_fail
align 10h
public purple_buddy_get_group
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCBD24
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CCBD44
mov	eax, [eax+0Ch]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBD48
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCBD11
xor	eax, eax
jmp	short loc_67CCBD11
call	__stack_chk_fail
align 10h
public purple_group_get_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCBD7C
mov	eax, [eax+20h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBD9C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGroupNull 
mov	[esp+2Ch+var_28], offset aPurple_group_g 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCBD6A
call	__stack_chk_fail
align 4
public purple_blist_request_add_buddy
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	esi, [esp+1Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CCBDFC
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_67CCBDFC
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CCBE0F
mov	[esp+1Ch+arg_C], esi
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBE0F
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_blist_request_add_chat
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	esi, [esp+1Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CCBE6C
mov	eax, [eax+20h]
test	eax, eax
jz	short loc_67CCBE6C
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CCBE7F
mov	[esp+1Ch+arg_C], esi
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBE7F
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_blist_request_add_group
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CCBEB4
mov	eax, [eax+24h]
test	eax, eax
jz	short loc_67CCBEB4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBEC4
add	esp, 1Ch
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBEC4
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_blist_node_remove_setting
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CCBF5C
mov	edx, [ebx+14h]
test	edx, edx
jz	loc_67CCBF7C
test	eax, eax
jz	short loc_67CCBF2C
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	g_hash_table_remove
mov	eax, ds:dword_67D72038
test	eax, eax
jz	short loc_67CCBF48
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CCBF48
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCBF9A
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aKeyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_blist_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBF9A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCBF48
align 4
mov	[esp+2Ch+var_24], offset aNodeSettingsNu 
mov	[esp+2Ch+var_28], offset aPurple_blist_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCBF48
			
call	__stack_chk_fail
align 10h
public purple_blist_node_set_flags
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CCBFD0
mov	[eax+1Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCBFEE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCBFBE
call	__stack_chk_fail
align 4
public purple_blist_node_get_flags
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCC020
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCC040
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blist_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCC00E
call	__stack_chk_fail
align 4
public purple_blist_node_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCC074
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCC097
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blis_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 4
jmp	short loc_67CCC061
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D7203C
test	eax, eax
jz	loc_67CCC568
mov	[esp+4Ch+var_4C], offset aPurple 
call	xmlnode_new
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_44], offset a1_0 
mov	[esp+4Ch+var_48], offset aVersion_0 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aBlist	
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_3C], eax
mov	eax, ds:dword_67D72040
mov	ebp, [eax]
test	ebp, ebp
jnz	short loc_67CCC117
jmp	loc_67CCC2A1
align 4
			
mov	ebp, [ebp+8]
test	ebp, ebp
jz	loc_67CCC2A1
			
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_flags
test	al, 1
jnz	short loc_67CCC10C
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_type
test	eax, eax
jnz	short loc_67CCC10C
mov	[esp+4Ch+var_4C], offset aGroup	
call	xmlnode_new
mov	edi, eax
mov	[esp+4Ch+var_48], offset aBuddies 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+20h]
mov	[esp+4Ch+var_4C], eax
call	g_strcmp0
test	eax, eax
jnz	loc_67CCC581
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset loc_67CC92DC
mov	eax, [ebp+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_foreach
mov	ebx, [ebp+10h]
test	ebx, ebx
jz	loc_67CCC286
mov	[esp+4Ch+var_34], ebp
jmp	short loc_67CCC19B
			
mov	ebx, [ebx+8]
test	ebx, ebx
jz	loc_67CCC282
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_flags
test	al, 1
jnz	short loc_67CCC190
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
dec	eax
jz	loc_67CCC42E
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jnz	short loc_67CCC190
mov	[esp+4Ch+var_4C], offset aChat 
call	xmlnode_new
mov	esi, eax
mov	eax, [ebx+28h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_protocol_id
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aProto	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+28h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_username
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aAccount_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ecx, [ebx+20h]
test	ecx, ecx
jz	short loc_67CCC23D
mov	[esp+4Ch+var_48], offset aAlias_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [ebx+20h]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset loc_67CC96B4
mov	eax, [ebx+24h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_foreach
			
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset loc_67CC92DC
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_foreach
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], edi
call	xmlnode_insert_child
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCC19B
mov	ebp, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edi
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	loc_67CCC117
			
mov	[esp+4Ch+var_48], offset aPrivacy 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_3C], eax
call	purple_accounts_get_all
mov	edi, eax
test	eax, eax
jz	loc_67CCC3D4
mov	ebx, [edi]
mov	[esp+4Ch+var_4C], offset aAccount_0 
call	xmlnode_new
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_protocol_id
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aProto	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_username
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aName_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+38h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], offset aD_0 
mov	[esp+4Ch+var_48], 0Ah
lea	eax, [esp+4Ch+var_2A]
mov	[esp+4Ch+var_4C], eax
call	g_snprintf
lea	eax, [esp+4Ch+var_2A]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aMode_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ebp, [ebx+30h]
test	ebp, ebp
jz	short loc_67CCC382
xchg	ax, ax
mov	[esp+4Ch+var_48], offset aPermit 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [ebp+0]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67CCC354
mov	ebx, [ebx+34h]
test	ebx, ebx
jz	short loc_67CCC3B9
lea	esi, [esi+0]
mov	[esp+4Ch+var_48], offset aBlock	
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	edx, [ebx]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CCC38C
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	edi, [edi+4]
test	edi, edi
jnz	loc_67CCC2C8
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_to_formatted_str
mov	ebx, eax
mov	[esp+4Ch+var_44], 0FFFFFFFFh 
mov	[esp+4Ch+var_48], eax 
mov	[esp+4Ch+var_4C], offset aBlist_xml 
call	purple_util_write_data_to_file
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCC59D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], offset aContact 
call	xmlnode_new
mov	esi, eax
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_67CCC457
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aAlias_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	ebp, [ebx+10h]
test	ebp, ebp
jz	loc_67CCC254
mov	[esp+4Ch+var_30], ebx
mov	ebx, ebp
jmp	short loc_67CCC477
align 4
			
mov	ebx, [ebx+8]
test	ebx, ebx
jz	loc_67CCC55F
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_flags
test	al, 1
jnz	short loc_67CCC46C
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCC46C
mov	[esp+4Ch+var_4C], offset aBuddy_0 
call	xmlnode_new
mov	ebp, eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_username
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aAccount_0 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_protocol_id
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aProto	
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aName_0 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	ecx, [ebx+20h]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67CCC531
mov	[esp+4Ch+var_48], offset aAlias_0 
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_new_child
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	ecx, [ebx+24h]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_data
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset loc_67CC92DC
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_foreach
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	xmlnode_insert_child
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCC477
mov	ebx, [esp+4Ch+var_30]
jmp	loc_67CCC254
mov	[esp+4Ch+var_48], offset aAttemptedToS_0 
mov	[esp+4Ch+var_4C], offset aBlist	
call	purple_debug_error
jmp	loc_67CCC416
mov	eax, [ebp+20h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aName_0 
mov	[esp+4Ch+var_4C], edi
call	xmlnode_set_attrib
jmp	loc_67CCC168
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67CCC09C
mov	ds:dword_67D72050, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCC5D3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_group_get_accounts
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	esi, [eax+10h]
xor	edi, edi
test	esi, esi
jnz	short loc_67CCC60A
jmp	short loc_67CCC644
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CCC65C
			
mov	esi, [esi+8]
test	esi, esi
jz	short loc_67CCC644
			
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_get_type
cmp	eax, 3
jnz	short loc_67CCC5F8
mov	eax, [esi+28h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_slist_find
test	eax, eax
jnz	short loc_67CCC603
mov	eax, [esi+28h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_slist_append
mov	edi, eax
mov	esi, [esi+8]
test	esi, esi
jnz	short loc_67CCC60A
xchg	ax, ax
			
mov	eax, edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCC6A2
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	ebx, [esi+10h]
test	ebx, ebx
jnz	short loc_67CCC66F
jmp	short loc_67CCC603
align 4
			
mov	ebx, [ebx+8]
test	ebx, ebx
jz	short loc_67CCC603
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCC668
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_slist_find
test	eax, eax
jnz	short loc_67CCC668
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	g_slist_append
mov	edi, eax
jmp	short loc_67CCC668
call	__stack_chk_fail
align 4
public purple_blist_find_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ecx, ds:dword_67D72040
test	ecx, ecx
jz	loc_67CCC86E
test	esi, esi
jz	short loc_67CCC72E
cmp	byte ptr [esi],	0
jz	short loc_67CCC72E
mov	[esp+4Ch+Str1],	ebx
call	purple_account_is_connected
test	eax, eax
jz	loc_67CCC891
mov	[esp+4Ch+Str1],	ebx
call	purple_account_get_protocol_id
mov	[esp+4Ch+Str1],	eax
call	purple_find_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+4Ch+var_34], eax
mov	eax, [eax+0E4h]
test	eax, eax
jz	short loc_67CCC764
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCC898
mov	[esp+4Ch+arg_4], esi
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
mov	[esp+4Ch+var_44], offset aNameNullName0	
mov	[esp+4Ch+Str2],	offset aPurple_blist_f 
mov	[esp+4Ch+Str1],	0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCC898
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Str2],	esi
mov	[esp+4Ch+Str1],	ebx
call	purple_normalize
mov	[esp+4Ch+Str1],	eax
call	g_strdup
mov	[esp+4Ch+var_30], eax
mov	eax, ds:dword_67D72040
mov	esi, [eax]
test	esi, esi
jz	loc_67CCC85B
nop
mov	ebp, [esi+10h]
test	ebp, ebp
jnz	short loc_67CCC7A3
jmp	loc_67CCC850
			
mov	ebp, [ebp+8]
test	ebp, ebp
jz	loc_67CCC850
mov	[esp+4Ch+Str1],	ebp
call	purple_blist_node_get_type
cmp	eax, 3
jnz	short loc_67CCC798
cmp	[ebp+28h], ebx
jnz	short loc_67CCC798
mov	edx, [esp+4Ch+var_34]
mov	edi, [edx+40h]
mov	[esp+4Ch+Str1],	ebx
call	purple_account_get_connection
mov	[esp+4Ch+Str1],	eax
call	edi
mov	edi, eax
mov	eax, [eax]
mov	eax, [eax+4]
mov	[esp+4Ch+Str2],	eax
mov	eax, [ebp+24h]
mov	[esp+4Ch+Str1],	eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Str2],	offset g_free
mov	[esp+4Ch+Str1],	edi
mov	[esp+4Ch+var_38], eax
call	g_list_foreach
mov	[esp+4Ch+Str1],	edi
call	g_list_free
cmp	[ebp+28h], ebx
mov	eax, [esp+4Ch+var_38]
jnz	short loc_67CCC798
test	eax, eax
jz	short loc_67CCC798
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	short loc_67CCC798
mov	[esp+4Ch+Str2],	eax
mov	[esp+4Ch+Str1],	ebx
call	purple_normalize
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+Str2],	edx 
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	loc_67CCC798
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Str1],	eax
call	g_free
mov	eax, ebp
jmp	loc_67CCC74C
align 10h
			
mov	esi, [esi+8]
test	esi, esi
jnz	loc_67CCC78C
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Str1],	eax
call	g_free
xor	eax, eax
jmp	loc_67CCC74C
mov	[esp+4Ch+var_44], offset aPurplebuddylis 
mov	[esp+4Ch+Str2],	offset aPurple_blist_f 
mov	[esp+4Ch+Str1],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CCC74C
xor	eax, eax
jmp	loc_67CCC74C
			
call	__stack_chk_fail
align 10h
public purple_contact_get_priority_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CCC944
mov	ebx, [esi+34h]
test	ebx, ebx
jz	short loc_67CCC8E4
mov	edi, [esi+30h]
			
mov	eax, edi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCC9A9
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword ptr [esi+30h], 0
mov	ebx, [esi+10h]
xor	edi, edi
test	ebx, ebx
jnz	short loc_67CCC8FF
jmp	short loc_67CCC938
align 4
			
mov	ebx, [ebx+8]
test	ebx, ebx
jz	short loc_67CCC938
			
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCC8F8
test	edi, edi
jz	short loc_67CCC92E
mov	eax, [ebx+34h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CCC8F8
mov	eax, [edi+34h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67CCC968
			
mov	edi, ebx
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCC8FF
nop
			
mov	[esi+30h], edi
mov	dword ptr [esi+34h], 1
jmp	short loc_67CCC8C8
mov	[esp+3Ch+var_34], offset aContactNull 
mov	[esp+3Ch+var_38], offset aPurple_conta_1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	loc_67CCC8C8
align 4
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_presence
mov	ebp, eax
mov	[esp+3Ch+var_3C], edi
call	purple_buddy_get_presence
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	purple_presence_compare
cmp	eax, 0
jg	short loc_67CCC92E
jnz	loc_67CCC8F8
mov	[esp+3Ch+var_3C], offset aPurpleContactL 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67CCC8F8
mov	edi, ebx
jmp	short loc_67CCC930
call	__stack_chk_fail
align 10h
public purple_contact_get_alias
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CCC9E0
mov	eax, [edx+20h]
test	eax, eax
jz	short loc_67CCCA00
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCCA20
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aContactNull 
mov	[esp+2Ch+var_28], offset aPurple_conta_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCC9CD
mov	[esp+2Ch+var_2C], edx
call	purple_contact_get_priority_buddy
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCCA20
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_buddy_get_alias
			
call	__stack_chk_fail
align 4
public purple_contact_on_account
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCCA74
test	esi, esi
jz	short loc_67CCCAA4
mov	ebx, [eax+10h]
test	ebx, ebx
jnz	short loc_67CCCA5B
jmp	short loc_67CCCA90
align 4
			
mov	ebx, [ebx+8]
test	ebx, ebx
jz	short loc_67CCCA90
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCCA54
cmp	[ebx+34h], esi
jnz	short loc_67CCCA54
mov	eax, 1
jmp	short loc_67CCCA92
mov	[esp+2Ch+var_24], offset aCNull	
mov	[esp+2Ch+var_28], offset aPurple_conta_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCCAC4
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aAccountNull_0	
mov	[esp+2Ch+var_28], offset aPurple_conta_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCCA92
call	__stack_chk_fail
align 4
public purple_group_on_account
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+10h]
test	ebx, ebx
jnz	short loc_67CCCB04
jmp	short loc_67CCCB38
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CCCB28
mov	ebx, [ebx+8]
test	ebx, ebx
jz	short loc_67CCCB38
			
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
dec	eax
jnz	short loc_67CCCAF0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_contact_on_account
test	eax, eax
jz	short loc_67CCCAFD
			
mov	eax, 1
jmp	short loc_67CCCB3A
align 4
test	esi, esi
jz	short loc_67CCCB4C
cmp	[ebx+28h], esi
jz	short loc_67CCCB1F
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCCB04
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCCB5D
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CCCB2C
jmp	short loc_67CCCB1F
call	__stack_chk_fail
align 4
public purple_blist_node_next
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_4]
test	edx, edx
jz	short loc_67CCCBB4
test	eax, eax
jz	short loc_67CCCB9C
mov	ebx, [eax+10h]
test	ebx, ebx
jnz	short loc_67CCCB9E
nop
mov	ebx, [eax+8]
test	ebx, ebx
jnz	short loc_67CCCB9E
mov	eax, [eax+0Ch]
test	eax, eax
jnz	short loc_67CCCB8C
xchg	ax, ax
			
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCCBFD
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, eax
xchg	ax, ax
test	ebx, ebx
jz	short loc_67CCCB9C
mov	eax, [ebx+10h]
mov	edx, ebx
test	eax, eax
jz	short loc_67CCCBCF
jmp	short loc_67CCCBF9
align 4
mov	edx, [edx+0Ch]
test	edx, edx
jz	short loc_67CCCB9C
mov	ebx, [edx+8]
test	ebx, ebx
jz	short loc_67CCCBC8
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCCB9E
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_get_account
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CCCBB8
jmp	short loc_67CCCB9E
mov	ebx, eax
jmp	short loc_67CCCBD6
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67CCCC32
mov	ebx, [eax+8]
call	sub_67CCCC04
mov	eax, ebx
test	ebx, ebx
jnz	short loc_67CCCC24
mov	dword ptr [esi+0Ch], 0
mov	dword ptr [esi+10h], 0
mov	dword ptr [esi+8], 0
mov	dword ptr [esi+4], 0
test	edi, edi
jz	short loc_67CCCC68
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_67CCCC68
mov	[esp+2Ch+var_28], esi
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_get_type
mov	[esp+2Ch+var_2C], esi
cmp	eax, 2
jz	short loc_67CCCCB8
call	purple_blist_node_get_type
mov	[esp+2Ch+var_2C], esi
cmp	eax, 3
jz	short loc_67CCCCC0
call	purple_blist_node_get_type
mov	[esp+2Ch+var_2C], esi
dec	eax
jz	short loc_67CCCCC8
call	purple_blist_node_get_type
test	eax, eax
jz	short loc_67CCCCAC
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCCCCF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], esi
call	purple_group_destroy
jmp	short loc_67CCCC99
align 4
call	purple_buddy_destroy
jmp	short loc_67CCCC99
align 10h
call	purple_chat_destroy
jmp	short loc_67CCCC99
align 4
call	purple_contact_destroy
jmp	short loc_67CCCC99
call	__stack_chk_fail
public purple_blist_add_group
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	loc_67CCCE70
mov	[esp+2Ch+var_2C], edi
call	purple_blist_node_get_type
test	eax, eax
jz	short loc_67CCCD34
mov	[esp+2Ch+var_24], offset aPurple_blis_11 
mov	[esp+2Ch+var_28], offset aPurple_blis_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCCEC9
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	esi, ds:dword_67D72038
cmp	edi, ebx
jz	loc_67CCCE58
mov	eax, [edi+20h]
mov	[esp+2Ch+var_2C], eax
call	purple_find_group
test	eax, eax
jz	loc_67CCCE9C
test	esi, esi
jz	short loc_67CCCD6F
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67CCCD6F
mov	[esp+2Ch+var_28], edi
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	edx, ds:dword_67D72040
cmp	edi, [edx]
mov	eax, [edi+8]
jz	loc_67CCCE94
mov	edx, [edi+4]
test	edx, edx
jz	short loc_67CCCD8D
mov	[edx+8], eax
mov	eax, [edi+8]
test	eax, eax
jz	short loc_67CCCD94
mov	[eax+4], edx
			
test	ebx, ebx
jz	short loc_67CCCDA8
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
test	eax, eax
jz	loc_67CCCE3C
mov	edx, ds:dword_67D72040
mov	eax, [edx]
test	eax, eax
jz	short loc_67CCCDB7
mov	[eax+4], edi
mov	[edi+8], eax
mov	dword ptr [edi+4], 0
mov	[edx], edi
test	esi, esi
jz	short loc_67CCCE1E
mov	eax, [esi+28h]
test	eax, eax
jz	short loc_67CCCDE9
mov	[esp+2Ch+var_2C], edi
call	eax
mov	ebx, [edi+10h]
test	ebx, ebx
jz	short loc_67CCCDE9
xchg	ax, ax
mov	[esp+2Ch+var_2C], ebx
call	dword ptr [esi+28h]
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCCDDC
			
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CCCE1E
mov	[esp+2Ch+var_28], edi
mov	edx, ds:dword_67D72040
mov	[esp+2Ch+var_2C], edx
call	eax
mov	ebx, [edi+10h]
test	ebx, ebx
jz	short loc_67CCCE1E
xchg	ax, ax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72040
mov	[esp+2Ch+var_2C], eax
call	dword ptr [esi+0Ch]
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCCE08
			
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aBlistNodeAdded 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
jmp	loc_67CCCD1D
align 4
mov	eax, [ebx+8]
mov	[edi+8], eax
mov	[edi+4], ebx
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CCCE4F
mov	[eax+4], edi
mov	[ebx+8], edi
jmp	loc_67CCCDC3
align 4
mov	eax, ds:dword_67D72040
mov	ecx, [eax]
test	ecx, ecx
jnz	loc_67CCCD1D
xor	ebx, ebx
jmp	loc_67CCCD42
align 10h
mov	[esp+2Ch+var_24], offset aGroupNull 
mov	[esp+2Ch+var_28], offset aPurple_blis_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CCCD1D
align 4
mov	[edx], eax
jmp	loc_67CCCD80
align 4
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	eax, [edi+20h]
mov	[esp+2Ch+var_2C], eax
call	g_utf8_collate_key
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72048
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	loc_67CCCD94
call	__stack_chk_fail
align 10h
public purple_blist_add_contact
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edx, ds:dword_67D72038
mov	[esp+5Ch+var_30], edx
test	esi, esi
jz	loc_67CCD2F0
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CCCF44
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCD386
mov	[esp+5Ch+arg_8], offset	aPurple_blis_13	
mov	[esp+5Ch+arg_4], offset	aPurple_blis_14	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
cmp	esi, [esp+5Ch+var_34]
jz	loc_67CCD282
mov	ebp, [esp+5Ch+var_34]
test	ebp, ebp
jz	short loc_67CCCF7E
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	purple_blist_node_get_type
dec	eax
jz	loc_67CCD2E4
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	purple_blist_node_get_type
cmp	eax, 3
jz	loc_67CCD2E4
mov	ebp, ebx
test	ebx, ebx
jz	loc_67CCD318
			
mov	eax, [esi+0Ch]
test	eax, eax
jz	loc_67CCD1A4
cmp	esi, [eax+10h]
mov	edx, [esi+8]
jz	loc_67CCD310
mov	ecx, [esi+4]
test	ecx, ecx
jz	short loc_67CCCFAC
mov	[ecx+8], edx
mov	edx, [esi+8]
test	edx, edx
jz	short loc_67CCCFB3
mov	[edx+4], ecx
cmp	ebp, eax
jz	loc_67CCD15B
mov	ebx, [esi+10h]
test	ebx, ebx
jz	loc_67CCD15B
mov	[esp+5Ch+var_38], ebp
jmp	short loc_67CCD026
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_connection
test	eax, eax
jz	short loc_67CCD004
mov	eax, [esi+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_account_remove_buddy
mov	eax, [esi+10h]
mov	edi, [eax+8]
test	edi, edi
jz	loc_67CCD29C
mov	[esp+5Ch+var_5C], ebx
call	purple_blist_remove_buddy
mov	ebx, [esp+5Ch+var_3C]
test	ebx, ebx
jz	loc_67CCD154
			
mov	edx, [ebx+8]
mov	[esp+5Ch+var_3C], edx
mov	[esp+5Ch+var_5C], 0Ch
call	g_malloc
mov	ebp, eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_normalize
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebp+0], eax
mov	eax, [ebx+34h]
mov	[ebp+4], eax
mov	eax, [esi+0Ch]
mov	[ebp+8], eax
mov	[esp+5Ch+var_58], ebp
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_remove
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D72044
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	edi, eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_remove
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_find_buddy_in_group
test	eax, eax
jnz	loc_67CCCFCC
mov	eax, [esp+5Ch+var_38]
mov	[ebp+8], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], ebp
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_replace
mov	[esp+5Ch+var_5C], 0Ch
call	g_malloc
mov	ecx, eax
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_40], ecx
call	g_strdup
mov	ecx, [esp+5Ch+var_40]
mov	[ecx], eax
mov	eax, [ebx+34h]
mov	[ecx+4], eax
mov	eax, [esp+5Ch+var_38]
mov	[ecx+8], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], edi
call	g_hash_table_replace
mov	eax, [ebx+34h]
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_connection
test	eax, eax
jz	loc_67CCD01A
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	eax, [esi+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	serv_move_buddy
mov	ebx, [esp+5Ch+var_3C]
test	ebx, ebx
jnz	loc_67CCD026
lea	esi, [esi+0]
mov	ebp, [esp+5Ch+var_38]
mov	eax, [esi+0Ch]
			
mov	ecx, [esi+2Ch]
test	ecx, ecx
jle	short loc_67CCD165
dec	dword ptr [eax+2Ch]
mov	edx, [esi+28h]
test	edx, edx
jle	short loc_67CCD16F
dec	dword ptr [eax+28h]
dec	dword ptr [eax+24h]
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jz	short loc_67CCD1A4
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+10h]
test	eax, eax
jz	short loc_67CCD194
mov	[esp+5Ch+var_58], esi
mov	edx, ds:dword_67D72040
mov	[esp+5Ch+var_5C], edx
call	eax
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+2Ch]
test	eax, eax
jz	short loc_67CCD1A4
mov	[esp+5Ch+var_5C], esi
call	eax
			
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	short loc_67CCD1D4
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	purple_blist_node_get_type
dec	eax
jz	loc_67CCD2BC
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	purple_blist_node_get_type
cmp	eax, 3
jz	loc_67CCD2BC
mov	eax, [ebp+10h]
test	eax, eax
jz	short loc_67CCD1DE
mov	[eax+4], esi
mov	dword ptr [esi+4], 0
mov	[esi+8], eax
mov	[ebp+10h], esi
mov	[esi+0Ch], ebp
mov	eax, [esi+2Ch]
test	eax, eax
jle	short loc_67CCD1F8
inc	dword ptr [ebp+2Ch]
mov	eax, [esi+28h]
test	eax, eax
jle	short loc_67CCD202
inc	dword ptr [ebp+28h]
inc	dword ptr [ebp+24h]
mov	ebp, [esp+5Ch+var_30]
test	ebp, ebp
jz	short loc_67CCD282
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+28h]
test	eax, eax
jz	short loc_67CCD23D
mov	edi, [esi+10h]
test	edi, edi
jz	short loc_67CCD23D
mov	[esp+5Ch+var_5C], esi
call	eax
mov	ebx, [esi+10h]
test	ebx, ebx
jz	short loc_67CCD23D
mov	edi, [esp+5Ch+var_30]
nop
mov	[esp+5Ch+var_5C], ebx
call	dword ptr [edi+28h]
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCD230
			
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_67CCD282
mov	ebx, [esi+10h]
test	ebx, ebx
jz	short loc_67CCD282
mov	[esp+5Ch+var_58], esi
mov	edx, ds:dword_67D72040
mov	[esp+5Ch+var_5C], edx
call	eax
mov	ebx, [esi+10h]
test	ebx, ebx
jz	short loc_67CCD282
mov	esi, [esp+5Ch+var_30]
lea	esi, [esi+0]
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72040
mov	[esp+5Ch+var_5C], eax
call	dword ptr [esi+0Ch]
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67CCD26C
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCD386
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCD386
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_blist_remove_buddy
			
mov	edx, [esp+5Ch+var_34]
mov	eax, [edx+8]
test	eax, eax
jz	short loc_67CCD2CA
mov	[eax+4], esi
mov	[esi+8], eax
mov	edx, [esp+5Ch+var_34]
mov	[esi+4], edx
mov	eax, [edx+0Ch]
mov	[esi+0Ch], eax
mov	[edx+8], esi
jmp	loc_67CCD1EE
align 4
			
mov	edx, [esp+5Ch+var_34]
mov	ebp, [edx+0Ch]
jmp	loc_67CCCF88
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCD386
mov	[esp+5Ch+arg_8], offset	aContactNull 
jmp	loc_67CCCF27
align 10h
mov	[eax+10h], edx
jmp	loc_67CCCF9F
mov	[esp+5Ch+var_58], offset aBuddies 
mov	[esp+5Ch+var_5C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	purple_find_group
mov	ebp, eax
test	eax, eax
jnz	loc_67CCCF88
mov	[esp+5Ch+var_58], offset aBuddies 
mov	[esp+5Ch+var_5C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+5Ch+var_5C], eax
call	purple_group_new
mov	ebp, eax
mov	eax, ds:dword_67D72040
mov	eax, [eax]
test	eax, eax
jnz	short loc_67CCD36E
jmp	short loc_67CCD375
align 4
mov	eax, edx
mov	edx, [eax+8]
test	edx, edx
jnz	short loc_67CCD36C
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_blist_add_group
jmp	loc_67CCCF88
			
call	__stack_chk_fail
align 4
public purple_blist_add_buddy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, ds:dword_67D72038
mov	[esp+4Ch+var_30], edx
test	ebx, ebx
jz	loc_67CCD790
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_67CCD404
mov	[esp+4Ch+var_44], offset aPurple_blis_15 
mov	[esp+4Ch+var_48], offset aPurple_blis_16 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCD892
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	ebx, esi
jz	short loc_67CCD3E9
test	esi, esi
jz	loc_67CCD7B4
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_get_type
cmp	eax, 2
jz	loc_67CCD750
test	ebp, ebp
jz	loc_67CCD800
mov	eax, [ebx+0Ch]
			
mov	edi, [ebp+0Ch]
			
test	eax, eax
jz	loc_67CCD565
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_67CCD760
			
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
mov	eax, [ebx+0Ch]
jnz	loc_67CCD6E8
mov	ecx, [eax+0Ch]
			
dec	dword ptr [eax+24h]
cmp	ecx, edi
jz	short loc_67CCD482
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], ebx
call	serv_move_buddy
mov	eax, [ebx+0Ch]
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_67CCD48F
mov	ecx, [ebx+4]
mov	[edx+4], ecx
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_67CCD499
mov	[ecx+8], edx
cmp	ebx, [eax+10h]
jz	loc_67CCD7E8
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	short loc_67CCD4C6
mov	edx, [esp+4Ch+var_30]
mov	ecx, [edx+10h]
test	ecx, ecx
jz	short loc_67CCD4C6
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72040
mov	[esp+4Ch+var_4C], eax
call	ecx
mov	eax, [ebx+0Ch]
			
cmp	[eax+0Ch], edi
jz	short loc_67CCD52D
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_2C], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_28], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_24], eax
lea	edi, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], edi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	eax, [ebx+0Ch]
mov	edx, [eax+10h]
test	edx, edx
mov	[esp+4Ch+var_4C], eax
jz	loc_67CCD7F4
call	purple_contact_invalidate_priority_buddy
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_67CCD565
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_67CCD565
mov	ecx, [ebx+0Ch]
mov	[esp+4Ch+var_48], ecx
mov	ecx, ds:dword_67D72040
mov	[esp+4Ch+var_4C], ecx
call	eax
			
test	esi, esi
jz	short loc_67CCD57A
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_get_type
cmp	eax, 2
jz	loc_67CCD730
mov	eax, [ebp+10h]
test	eax, eax
jz	short loc_67CCD584
mov	[eax+4], ebx
mov	dword ptr [ebx+4], 0
mov	[ebx+8], eax
mov	[ebp+10h], ebx
mov	[ebx+0Ch], ebp
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
jnz	loc_67CCD6FC
			
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_account_is_connected
test	eax, eax
mov	eax, [ebx+0Ch]
jz	short loc_67CCD5CC
mov	ecx, [eax+28h]
inc	ecx
mov	[eax+28h], ecx
dec	ecx
jz	loc_67CCD7DC
			
inc	dword ptr [eax+24h]
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc
mov	esi, eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esi], eax
mov	eax, [ebx+34h]
mov	[esi+4], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[esi+8], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], esi
mov	eax, ds:dword_67D72040
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_replace
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72044
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc
mov	edi, eax
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[edi], eax
mov	eax, [ebx+34h]
mov	[edi+4], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
mov	[edi+8], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebp
call	g_hash_table_replace
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_contact
mov	[esp+4Ch+var_4C], eax
call	purple_contact_invalidate_priority_buddy
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_67CCD6B1
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+28h]
test	eax, eax
jz	short loc_67CCD697
mov	[esp+4Ch+var_4C], ebx
call	eax
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_67CCD6B1
mov	[esp+4Ch+var_48], ebx
mov	ecx, ds:dword_67D72040
mov	[esp+4Ch+var_4C], ecx
call	eax
			
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyAdded 
mov	[esp+4Ch+var_4C], offset dword_67D7204C
call	purple_signal_emit
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBlistNodeAdded 
mov	[esp+4Ch+var_4C], offset dword_67D7204C
call	purple_signal_emit
jmp	loc_67CCD3E9
align 4
dec	dword ptr [eax+28h]
mov	ecx, [eax+0Ch]
jnz	loc_67CCD468
dec	dword ptr [ecx+28h]
jmp	loc_67CCD468
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_presence
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_online
test	eax, eax
jz	loc_67CCD5AC
mov	eax, [ebx+0Ch]
mov	ecx, [eax+2Ch]
inc	ecx
mov	[eax+2Ch], ecx
dec	ecx
jnz	loc_67CCD5AC
mov	eax, [eax+0Ch]
inc	dword ptr [eax+2Ch]
jmp	loc_67CCD5AC
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CCD73A
mov	[eax+4], ebx
mov	[ebx+8], eax
mov	[ebx+4], esi
mov	eax, [esi+0Ch]
mov	[ebx+0Ch], eax
mov	[esi+8], ebx
jmp	loc_67CCD594
align 10h
mov	ebp, [esi+0Ch]
mov	edi, [ebp+0Ch]
mov	eax, [ebx+0Ch]
jmp	loc_67CCD42F
align 10h
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_presence
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_online
test	eax, eax
jz	loc_67CCD44F
mov	eax, [ebx+0Ch]
dec	dword ptr [eax+2Ch]
jnz	loc_67CCD44F
mov	eax, [eax+0Ch]
dec	dword ptr [eax+2Ch]
jmp	loc_67CCD44F
align 10h
mov	[esp+4Ch+var_44], offset aBuddyNull_0 
mov	[esp+4Ch+var_48], offset aPurple_blis_16 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	loc_67CCD3E9
align 4
mov	eax, [ebx+0Ch]
test	eax, eax
jz	loc_67CCD421
test	ebp, ebp
jz	short loc_67CCD800
cmp	eax, ebp
jnz	loc_67CCD42C
cmp	ebx, [eax+10h]
jnz	loc_67CCD42C
jmp	loc_67CCD3E9
align 4
mov	ecx, [eax+0Ch]
inc	dword ptr [ecx+28h]
jmp	loc_67CCD5CC
align 4
mov	ecx, [ebx+8]
mov	[eax+10h], ecx
jmp	loc_67CCD4A2
align 4
call	purple_blist_remove_contact
jmp	loc_67CCD565
align 10h
			
test	edi, edi
jz	short loc_67CCD86F
mov	eax, [edi+20h]
mov	[esp+4Ch+var_4C], eax
call	purple_find_group
test	eax, eax
jz	short loc_67CCD848
call	purple_contact_new
mov	ebp, eax
mov	ecx, [edi+10h]
test	ecx, ecx
jnz	short loc_67CCD826
jmp	short loc_67CCD82D
align 4
mov	ecx, eax
mov	eax, [ecx+8]
test	eax, eax
jnz	short loc_67CCD824
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_add_contact
mov	eax, [ebx+0Ch]
jmp	loc_67CCD42F
align 4
mov	eax, ds:dword_67D72040
mov	ecx, [eax]
test	ecx, ecx
jnz	short loc_67CCD85A
jmp	short loc_67CCD861
align 4
mov	ecx, eax
mov	eax, [ecx+8]
test	eax, eax
jnz	short loc_67CCD858
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edi
call	purple_blist_add_group
jmp	short loc_67CCD813
mov	[esp+4Ch+var_48], offset aBuddies 
mov	[esp+4Ch+var_4C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+4Ch+var_4C], eax
call	purple_group_new
mov	edi, eax
jmp	loc_67CCD804
call	__stack_chk_fail
align 4
public purple_blist_merge_contact
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CCD960
test	esi, esi
jz	loc_67CCD984
mov	[esp+3Ch+var_3C], esi
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CCD8F4
mov	[esp+3Ch+var_3C], esi
call	purple_blist_node_get_type
cmp	eax, 2
jz	short loc_67CCD914
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCD9A5
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, [esi+10h]
test	edi, edi
jnz	short loc_67CCD902
jmp	short loc_67CCD909
align 10h
mov	edi, eax
mov	eax, [edi+8]
test	eax, eax
jnz	short loc_67CCD900
cmp	ebx, esi
jz	short loc_67CCD8DA
mov	ebp, esi
jmp	short loc_67CCD921
align 4
mov	ebp, [esi+0Ch]
cmp	ebx, ebp
jz	short loc_67CCD8DA
test	ebp, ebp
jz	short loc_67CCD8DA
mov	edi, esi
mov	ebx, [ebx+10h]
test	ebx, ebx
jnz	short loc_67CCD932
jmp	short loc_67CCD8DA
align 4
			
mov	ebx, esi
test	esi, esi
jz	short loc_67CCD8DA
mov	esi, [ebx+8]
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCD92C
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_add_buddy
mov	edi, ebx
jmp	short loc_67CCD92C
align 10h
mov	[esp+3Ch+var_34], offset aSourceNull 
mov	[esp+3Ch+var_38], offset aPurple_blist_m 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CCD8DA
align 4
mov	[esp+3Ch+var_34], offset aNodeNull 
mov	[esp+3Ch+var_38], offset aPurple_blist_m 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CCD8DA
call	__stack_chk_fail
align 4
public purple_blist_add_chat
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCDB2C
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CCDA1C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCDBFB
mov	[esp+3Ch+arg_8], offset	aPurple_blis_17	
mov	[esp+3Ch+arg_4], offset	aPurple_blis_18	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
test	esi, esi
jz	loc_67CCDB4C
mov	ebp, [esi+0Ch]
cmp	ebx, esi
jz	loc_67CCDC00
			
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CCDA97
dec	dword ptr [eax+24h]
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_is_connected
test	eax, eax
mov	eax, [ebx+0Ch]
jz	short loc_67CCDA51
dec	dword ptr [eax+2Ch]
dec	dword ptr [eax+28h]
mov	edx, [ebx+8]
test	edx, edx
jz	short loc_67CCDA5E
mov	ecx, [ebx+4]
mov	[edx+4], ecx
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_67CCDA68
mov	[ecx+8], edx
cmp	ebx, [eax+10h]
jz	loc_67CCDBCC
test	edi, edi
jz	short loc_67CCDA97
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_67CCDA8B
mov	[esp+3Ch+var_38], ebx
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
mov	eax, [edi+4]
test	eax, eax
jz	short loc_67CCDA97
mov	[esp+3Ch+var_3C], ebx
call	eax
			
test	esi, esi
jz	loc_67CCDB90
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CCDAA9
mov	[eax+4], ebx
mov	[ebx+8], eax
mov	[ebx+4], esi
mov	eax, [esi+0Ch]
mov	[ebx+0Ch], eax
mov	[esi+8], ebx
mov	eax, [esi+0Ch]
inc	dword ptr [eax+24h]
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CCDAD6
mov	eax, [esi+0Ch]
inc	dword ptr [eax+2Ch]
inc	dword ptr [eax+28h]
			
test	edi, edi
jz	short loc_67CCDAFC
mov	eax, [edi+28h]
test	eax, eax
jz	short loc_67CCDAE6
mov	[esp+3Ch+var_3C], ebx
call	eax
mov	eax, [edi+0Ch]
test	eax, eax
jz	short loc_67CCDAFC
mov	[esp+3Ch+var_38], ebx
mov	edx, ds:dword_67D72040
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCDBFB
mov	[esp+3Ch+arg_8], ebx
mov	[esp+3Ch+arg_4], offset	aBlistNodeAdded	
mov	[esp+3Ch+arg_0], offset	dword_67D7204C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_signal_emit
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCDBFB
mov	[esp+3Ch+arg_8], offset	aChatNull 
jmp	loc_67CCD9FD
align 4
test	ebp, ebp
jz	loc_67CCDBD8
mov	eax, [ebp+20h]
mov	[esp+3Ch+var_3C], eax
call	purple_find_group
test	eax, eax
jnz	loc_67CCDA2F
mov	eax, ds:dword_67D72040
mov	edx, [eax]
test	edx, edx
jnz	short loc_67CCDB76
jmp	short loc_67CCDB7D
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67CCDB74
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebp
call	purple_blist_add_group
jmp	loc_67CCDA2F
align 10h
mov	eax, [ebp+10h]
test	eax, eax
jz	short loc_67CCDB9A
mov	[eax+4], ebx
mov	[ebx+8], eax
mov	dword ptr [ebx+4], 0
mov	[ebp+10h], ebx
mov	[ebx+0Ch], ebp
inc	dword ptr [ebp+24h]
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_3C], eax
call	purple_account_is_connected
test	eax, eax
jz	loc_67CCDAD6
inc	dword ptr [ebp+2Ch]
inc	dword ptr [ebp+28h]
jmp	loc_67CCDAD6
align 4
mov	edx, [ebx+8]
mov	[eax+10h], edx
jmp	loc_67CCDA71
align 4
mov	[esp+3Ch+var_38], offset aChats	
mov	[esp+3Ch+var_3C], offset aPidgin_0 
call	libintl_dgettext
mov	[esp+3Ch+var_3C], eax
call	purple_group_new
mov	ebp, eax
jmp	loc_67CCDB54
			
call	__stack_chk_fail
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCDBFB
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
public purple_blist_rename_group
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_3C], edx
mov	eax, [esp+5Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ecx
xor	ecx, ecx
mov	edx, ds:dword_67D72038
mov	[esp+5Ch+var_38], edx
mov	ebp, [esp+5Ch+var_3C]
test	ebp, ebp
jz	loc_67CCDF24
test	eax, eax
jz	loc_67CCDEF0
mov	[esp+5Ch+var_5C], eax
call	purple_utf8_strip_unprintables
mov	edi, eax
cmp	byte ptr [eax],	0
jz	short loc_67CCDC77
mov	ecx, [esp+5Ch+var_3C]
mov	eax, [ecx+20h]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_strequal
test	eax, eax
jz	short loc_67CCDC98
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCE0AC
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_5C], edi
call	purple_find_group
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_67CCDD98
mov	eax, [eax+20h]
mov	[esp+5Ch+var_58], eax
mov	ecx, [esp+5Ch+var_3C]
mov	eax, [ecx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_utf8_strcasecmp
test	eax, eax
jz	loc_67CCDD98
mov	eax, [esp+5Ch+var_30]
mov	ebp, [eax+10h]
test	ebp, ebp
jnz	short loc_67CCDCDA
jmp	short loc_67CCDCE1
align 4
mov	ebp, eax
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_67CCDCD8
mov	edx, [esp+5Ch+var_3C]
mov	esi, [edx+10h]
xor	ebx, ebx
test	esi, esi
jz	loc_67CCDF48
mov	[esp+5Ch+var_34], edi
jmp	short loc_67CCDD3A
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_get_type
cmp	eax, 3
jz	loc_67CCDED4
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+20h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aUnknownChildTy 
mov	[esp+5Ch+var_58], offset aBlist	
mov	[esp+5Ch+var_5C], 4
call	purple_debug
			
mov	esi, edi
test	edi, edi
jz	loc_67CCDF44
mov	edi, [esi+8]
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_get_type
dec	eax
jnz	short loc_67CCDCF8
mov	[esp+5Ch+var_54], ebp
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_blist_add_contact
mov	ebp, [esi+10h]
test	ebp, ebp
jz	short loc_67CCDD94
nop
mov	eax, [ebp+4]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	purple_blist_add_buddy
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	g_list_append
mov	ebx, eax
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	short loc_67CCDD64
mov	ebp, esi
jmp	short loc_67CCDD30
			
mov	edx, [esp+5Ch+var_3C]
mov	esi, [edx+10h]
xor	ebx, ebx
test	esi, esi
jnz	short loc_67CCDDAF
jmp	short loc_67CCDDE0
align 4
			
mov	esi, [esi+8]
test	esi, esi
jz	short loc_67CCDDE0
			
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_get_type
dec	eax
jnz	short loc_67CCDDA8
mov	ebp, [esi+10h]
test	ebp, ebp
jz	short loc_67CCDDA8
lea	esi, [esi+0]
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	g_list_append
mov	ebx, eax
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	short loc_67CCDDC4
mov	esi, [esi+8]
test	esi, esi
jnz	short loc_67CCDDAF
			
mov	ecx, [esp+5Ch+var_3C]
mov	ecx, [ecx+20h]
mov	[esp+5Ch+var_34], ecx
mov	edx, [esp+5Ch+var_3C]
mov	[edx+20h], edi
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], ecx
call	g_utf8_collate_key
mov	esi, eax
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D72048
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_remove
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], edi
call	g_utf8_collate_key
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D72048
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_insert
mov	edi, [esp+5Ch+var_38]
test	edi, edi
jz	short loc_67CCDE80
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx+28h]
test	eax, eax
jz	short loc_67CCDE62
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], ecx
call	eax
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx+0Ch]
test	eax, eax
jz	short loc_67CCDE80
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	edx, ds:dword_67D72040
mov	[esp+5Ch+var_5C], edx
call	eax
			
mov	esi, [esp+5Ch+var_34]
test	esi, esi
jz	short loc_67CCDEA7
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], eax
mov	edx, [esp+5Ch+var_3C]
mov	eax, [edx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCDF7C
			
mov	[esp+5Ch+var_5C], ebx
call	g_list_free
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CCE0AC
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_54], ebp
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_blist_add_chat
mov	ebp, esi
jmp	loc_67CCDD30
align 10h
mov	[esp+5Ch+var_54], offset aNameNull_0 
mov	[esp+5Ch+var_58], offset aPurple_blis_19 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCE0AC
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_54], offset aSourceNull 
mov	[esp+5Ch+var_58], offset aPurple_blis_19 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCDF0C
align 4
mov	edi, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_3C]
mov	eax, [ecx+20h]
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[esp+5Ch+var_34], eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	purple_blist_remove_group
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_3C], eax
jmp	loc_67CCDE46
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], ecx
call	purple_group_get_accounts
mov	ebp, eax
test	eax, eax
jz	loc_67CCDEA7
mov	[esp+5Ch+var_38], ebx
xchg	ax, ax
mov	esi, [ebp+0]
mov	[esp+5Ch+var_5C], esi
call	purple_account_get_connection
test	eax, eax
jz	short loc_67CCE015
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_44], eax
call	purple_connection_get_prpl
test	eax, eax
mov	edx, [esp+5Ch+var_44]
jz	short loc_67CCE015
mov	eax, [eax+10h]
mov	ecx, [eax+4Ch]
test	ecx, ecx
jz	short loc_67CCE015
mov	ebx, [esp+5Ch+var_38]
test	ebx, ebx
jz	loc_67CCE0B1
mov	ebx, [esp+5Ch+var_38]
xor	edi, edi
nop
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CCDFE3
cmp	[eax+34h], esi
jz	short loc_67CCE038
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CCDFD8
mov	eax, [ecx+0C4h]
test	eax, eax
jz	short loc_67CCE058
mov	[esp+5Ch+var_50], edi
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], ecx
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], edx
call	eax
mov	[esp+5Ch+var_5C], edi
call	g_list_free
			
mov	eax, [ebp+0]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	g_slist_remove
mov	ebp, eax
test	eax, eax
jnz	loc_67CCDF98
mov	ebx, [esp+5Ch+var_38]
jmp	loc_67CCDEA7
align 4
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
mov	[esp+5Ch+var_44], edx
mov	[esp+5Ch+var_40], ecx
call	g_list_append
mov	edi, eax
mov	ecx, [esp+5Ch+var_40]
mov	edx, [esp+5Ch+var_44]
jmp	short loc_67CCDFE3
test	edi, edi
jz	short loc_67CCE07B
mov	ebx, edi
xor	eax, eax
mov	edx, [ebx]
mov	edx, [edx+0Ch]
mov	edx, [edx+0Ch]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CCE060
			
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_40], eax
call	purple_account_remove_buddies
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_list_free
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	purple_account_add_buddies
jmp	loc_67CCE00D
			
call	__stack_chk_fail
mov	eax, [ecx+0C4h]
xor	edi, edi
test	eax, eax
jnz	loc_67CCDFF4
mov	edi, [esp+5Ch+var_38]
jmp	short loc_67CCE07B
align 4
public purple_blist_node_set_bool
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCE160
mov	eax, [ebx+14h]
test	eax, eax
jz	loc_67CCE190
test	esi, esi
jz	loc_67CCE1A8
mov	[esp+3Ch+var_3C], 4
call	purple_value_new
mov	edi, eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	purple_value_set_boolean
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_replace
mov	eax, ds:dword_67D72038
test	eax, eax
jz	loc_67CCE1C3
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CCE1C3
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE1BE
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCE1BE
mov	[esp+3Ch+arg_8], offset	aNodeNull 
			
mov	[esp+3Ch+arg_4], offset	aPurple_blis_20	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE1BE
mov	[esp+3Ch+arg_8], offset	aNodeSettingsNu	
jmp	short loc_67CCE174
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCE1BE
mov	[esp+3Ch+arg_8], offset	aKeyNull_0 
jmp	short loc_67CCE174
			
call	__stack_chk_fail
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE1BE
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_blist_node_get_bool
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67CCE27C
mov	eax, [eax+14h]
test	eax, eax
jz	loc_67CCE29C
test	edx, edx
jz	loc_67CCE2BC
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	short loc_67CCE246
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 4
jz	short loc_67CCE260
mov	[esp+2Ch+var_24], offset aPurple_value_g 
mov	[esp+2Ch+var_28], offset aPurple_blis_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCE2DD
add	esp, 28h
pop	ebx
retn
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CCE2DD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_boolean
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blis_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCE246
align 4
mov	[esp+2Ch+var_24], offset aNodeSettingsNu 
mov	[esp+2Ch+var_28], offset aPurple_blis_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCE246
align 4
mov	[esp+2Ch+var_24], offset aKeyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_blis_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CCE246
			
call	__stack_chk_fail
align 4
public purple_blist_add_account
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, ds:dword_67D72038
mov	[esp+4Ch+var_30], edx
mov	eax, ds:dword_67D72040
test	eax, eax
jz	loc_67CCE474
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	loc_67CCE410
mov	edx, [esp+4Ch+var_30]
mov	ebx, [edx+0Ch]
test	ebx, ebx
jz	loc_67CCE410
mov	edi, [eax]
test	edi, edi
jz	loc_67CCE410
xchg	ax, ax
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_type
test	eax, eax
jnz	loc_67CCE405
mov	ebx, [edi+10h]
test	ebx, ebx
jz	loc_67CCE3F2
nop
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
dec	eax
jnz	loc_67CCE424
mov	ebp, [ebx+10h]
mov	[esp+4Ch+var_34], 0
test	ebp, ebp
jnz	short loc_67CCE37F
jmp	loc_67CCE440
align 4
			
mov	ebp, [ebp+8]
test	ebp, ebp
jz	short loc_67CCE3C4
			
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCE378
cmp	[ebp+34h], esi
jnz	short loc_67CCE378
mov	eax, [ebx+28h]
inc	eax
mov	[ebx+28h], eax
dec	eax
jz	loc_67CCE46C
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72040
mov	[esp+4Ch+var_4C], eax
mov	edx, [esp+4Ch+var_30]
call	dword ptr [edx+0Ch]
mov	[esp+4Ch+var_34], 1
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	short loc_67CCE37F
lea	esi, [esi+0]
mov	ecx, [esp+4Ch+var_34]
test	ecx, ecx
jz	short loc_67CCE440
mov	[esp+4Ch+var_4C], ebx
call	purple_contact_invalidate_priority_buddy
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72040
mov	[esp+4Ch+var_4C], eax
mov	edx, [esp+4Ch+var_30]
call	dword ptr [edx+0Ch]
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCE354
			
mov	[esp+4Ch+var_48], edi
mov	eax, ds:dword_67D72040
mov	[esp+4Ch+var_4C], eax
mov	edx, [esp+4Ch+var_30]
call	dword ptr [edx+0Ch]
mov	edi, [edi+8]
test	edi, edi
jnz	loc_67CCE338
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCE495
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CCE45C
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCE354
jmp	short loc_67CCE3F2
align 10h
			
mov	[esp+4Ch+var_48], offset aShow_offline 
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_bool
test	eax, eax
jnz	loc_67CCE3CC
jmp	short loc_67CCE431
align 4
cmp	[ebx+28h], esi
jnz	short loc_67CCE431
inc	dword ptr [edi+2Ch]
inc	dword ptr [edi+28h]
jmp	loc_67CCE3D4
inc	dword ptr [edi+28h]
jmp	loc_67CCE39F
mov	[esp+4Ch+var_44], offset aPurplebuddylis 
mov	[esp+4Ch+var_48], offset aPurple_blis_22 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	loc_67CCE410
call	__stack_chk_fail
align 4
public purple_blist_node_set_int
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCE534
mov	edi, [ebx+14h]
test	edi, edi
jz	loc_67CCE564
test	esi, esi
jz	loc_67CCE57C
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	edi, eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	purple_value_set_int
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_replace
mov	eax, ds:dword_67D72038
test	eax, eax
jz	loc_67CCE597
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CCE597
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE592
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCE592
mov	[esp+3Ch+arg_8], offset	aNodeNull 
			
mov	[esp+3Ch+arg_4], offset	aPurple_blis_23	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE592
mov	[esp+3Ch+arg_8], offset	aNodeSettingsNu	
jmp	short loc_67CCE548
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCE592
mov	[esp+3Ch+arg_8], offset	aKeyNull_0 
jmp	short loc_67CCE548
			
call	__stack_chk_fail
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE592
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_blist_remove_account
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, ds:dword_67D72038
mov	[esp+4Ch+var_3C], edx
mov	eax, ds:dword_67D72040
test	eax, eax
jz	loc_67CCE829
mov	ebp, [eax]
mov	[esp+4Ch+var_30], 0
test	ebp, ebp
jz	loc_67CCE749
nop
mov	[esp+4Ch+Time],	ebp
call	purple_blist_node_get_type
test	eax, eax
jnz	loc_67CCE70F
mov	ebx, [ebp+10h]
test	ebx, ebx
jz	loc_67CCE70F
mov	[esp+4Ch+var_38], ebp
nop
			
mov	[esp+4Ch+Time],	ebx
call	purple_blist_node_get_type
dec	eax
jnz	loc_67CCE770
mov	ebp, [ebx+10h]
test	ebp, ebp
jz	loc_67CCE700
xor	edi, edi
jmp	short loc_67CCE637
align 4
			
mov	ebp, [ebp+8]
test	ebp, ebp
jz	loc_67CCE6F8
			
mov	[esp+4Ch+Time],	ebp
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CCE62C
cmp	[ebp+34h], esi
jnz	short loc_67CCE62C
mov	[esp+4Ch+Time],	ebp
call	purple_buddy_get_presence
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+Time],	eax
call	purple_presence_is_online
test	eax, eax
jz	short loc_67CCE68D
dec	dword ptr [ebx+2Ch]
jnz	short loc_67CCE66D
mov	edx, [esp+4Ch+var_38]
dec	dword ptr [edx+2Ch]
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aLast_seen 
mov	[esp+4Ch+Time],	ebp
call	purple_blist_node_set_int
dec	dword ptr [ebx+28h]
jnz	short loc_67CCE699
mov	edx, [esp+4Ch+var_38]
dec	dword ptr [edx+28h]
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Time],	eax
call	g_list_find
test	eax, eax
jz	loc_67CCE7FB
cmp	ebp, [ebx+30h]
jz	loc_67CCE81C
mov	edi, 1
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jz	loc_67CCE62C
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+10h]
test	eax, eax
jz	loc_67CCE62C
mov	[esp+4Ch+var_48], ebp
mov	edx, ds:dword_67D72040
mov	[esp+4Ch+Time],	edx
call	eax
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	loc_67CCE637
test	edi, edi
jnz	loc_67CCE7CC
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCE60C
			
mov	ebp, [esp+4Ch+var_38]
			
mov	ebp, [ebp+8]
test	ebp, ebp
jnz	loc_67CCE5EC
mov	ebp, [esp+4Ch+var_30]
test	ebp, ebp
jz	short loc_67CCE749
mov	ebx, [esp+4Ch+var_30]
xchg	ax, ax
mov	[esp+4Ch+var_44], 1
mov	[esp+4Ch+var_48], offset aOffline_0 
mov	eax, [ebx]
mov	[esp+4Ch+Time],	eax
call	purple_presence_set_status_active
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CCE728
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCE859
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
align 10h
mov	[esp+4Ch+Time],	ebx
call	purple_blist_node_get_type
cmp	eax, 3
jnz	short loc_67CCE700
cmp	[ebx+28h], esi
jnz	loc_67CCE700
mov	edx, [esp+4Ch+var_38]
dec	dword ptr [edx+28h]
dec	dword ptr [edx+2Ch]
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jz	loc_67CCE700
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+10h]
test	eax, eax
jz	loc_67CCE700
nop
mov	[esp+4Ch+var_48], ebx
mov	edx, ds:dword_67D72040
mov	[esp+4Ch+Time],	edx
call	eax
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCE60C
jmp	loc_67CCE70B
align 4
mov	[esp+4Ch+Time],	ebx
call	purple_contact_invalidate_priority_buddy
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jz	loc_67CCE700
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+0Ch]
test	eax, eax
jnz	short loc_67CCE7AC
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	loc_67CCE60C
jmp	loc_67CCE70B
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Time],	eax
call	g_list_prepend
mov	[esp+4Ch+var_30], eax
cmp	ebp, [ebx+30h]
jnz	loc_67CCE6BE
mov	[esp+4Ch+Time],	ebx
call	purple_contact_invalidate_priority_buddy
jmp	loc_67CCE6C3
mov	[esp+4Ch+var_44], offset aPurplebuddylis 
mov	[esp+4Ch+var_48], offset aPurple_blis_24 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCE859
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_blist_update_buddy_status
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edi, ds:dword_67D72038
test	ebx, ebx
jz	loc_67CCE9B4
mov	[esp+4Ch+Time],	ebx
call	purple_buddy_get_presence
mov	[esp+4Ch+Time],	eax
call	purple_presence_get_active_status
mov	esi, eax
mov	eax, [ebx+34h]
mov	[esp+4Ch+Time],	eax
call	purple_account_get_protocol_name
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aUpdatingBuddyS 
mov	[esp+4Ch+Time],	offset aBlist 
call	purple_debug_info
mov	[esp+4Ch+Time],	esi
call	purple_status_is_online
test	eax, eax
jz	short loc_67CCE8E0
mov	[esp+4Ch+Time],	ebp
call	purple_status_is_online
test	eax, eax
jz	loc_67CCE9E4
mov	[esp+4Ch+Time],	esi
call	purple_status_is_online
test	eax, eax
jz	short loc_67CCE958
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyStatusCha 
mov	[esp+4Ch+Time],	offset dword_67D7204C
call	purple_signal_emit
			
mov	[esp+4Ch+Time],	ebx
call	purple_buddy_get_contact
mov	[esp+4Ch+Time],	eax
call	purple_contact_invalidate_priority_buddy
test	edi, edi
jz	loc_67CCE9D0
mov	eax, [edi+0Ch]
test	eax, eax
jz	loc_67CCE9D0
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCEA18
mov	[esp+4Ch+arg_4], ebx
mov	edx, ds:dword_67D72040
mov	[esp+4Ch+arg_0], edx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	[esp+4Ch+Time],	ebp
call	purple_status_is_online
test	eax, eax
jz	short loc_67CCE8EC
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aLast_seen 
mov	[esp+4Ch+Time],	ebx
call	purple_blist_node_set_int
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddySignedOff 
mov	[esp+4Ch+Time],	offset dword_67D7204C
call	purple_signal_emit
mov	eax, [ebx+0Ch]
dec	dword ptr [eax+2Ch]
jnz	loc_67CCE90C
mov	eax, [eax+0Ch]
dec	dword ptr [eax+2Ch]
jmp	loc_67CCE90C
align 4
mov	[esp+4Ch+var_44], offset aBuddyNull_0 
mov	[esp+4Ch+var_48], offset aPurple_blis_25 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCEA18
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddySignedOn	
mov	[esp+4Ch+Time],	offset dword_67D7204C
call	purple_signal_emit
mov	eax, [ebx+0Ch]
mov	edx, [eax+2Ch]
inc	edx
mov	[eax+2Ch], edx
dec	edx
jnz	loc_67CCE90C
mov	eax, [eax+0Ch]
inc	dword ptr [eax+2Ch]
jmp	loc_67CCE90C
			
call	__stack_chk_fail
align 10h
public purple_blist_node_get_int
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67CCEAC4
mov	eax, [eax+14h]
test	eax, eax
jz	loc_67CCEAE4
test	edx, edx
jz	loc_67CCEB04
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	short loc_67CCEA8E
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 7
jz	short loc_67CCEAA8
mov	[esp+2Ch+var_24], offset aPurple_value_0 
mov	[esp+2Ch+var_28], offset aPurple_blis_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCEB25
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CCEB25
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_int
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blis_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCEA8E
align 4
mov	[esp+2Ch+var_24], offset aNodeSettingsNu 
mov	[esp+2Ch+var_28], offset aPurple_blis_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCEA8E
align 4
mov	[esp+2Ch+var_24], offset aKeyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_blis_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CCEA8E
			
call	__stack_chk_fail
align 4
public purple_blist_node_set_string
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCEBC4
mov	eax, [ebx+14h]
test	eax, eax
jz	loc_67CCEBF4
test	esi, esi
jz	loc_67CCEC0C
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], eax
call	purple_value_set_string
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_replace
mov	eax, ds:dword_67D72038
test	eax, eax
jz	loc_67CCEC27
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CCEC27
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCEC22
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCEC22
mov	[esp+3Ch+arg_8], offset	aNodeNull 
			
mov	[esp+3Ch+arg_4], offset	aPurple_blis_27	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCEC22
mov	[esp+3Ch+arg_8], offset	aNodeSettingsNu	
jmp	short loc_67CCEBD8
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCEC22
mov	[esp+3Ch+arg_8], offset	aKeyNull_0 
jmp	short loc_67CCEBD8
			
call	__stack_chk_fail
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCEC22
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_38], offset aName_0 
mov	[esp+3Ch+Str], edx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+3Ch+var_38], offset aType_0 
mov	[esp+3Ch+Str], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+3Ch+Str], ebx
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_67CCECB4
test	esi, esi
jz	short loc_67CCEC9C
mov	[esp+3Ch+var_38], offset aString_0 
mov	[esp+3Ch+Str], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CCECC8
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+Str], edi
call	purple_blist_node_set_string
			
mov	[esp+3Ch+Str], ebx
call	g_free
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCED26
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_38], offset aBool_0 
mov	[esp+3Ch+Str], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CCECF8
mov	[esp+3Ch+Str], ebx 
call	atoi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+Str], edi
call	purple_blist_node_set_bool
jmp	short loc_67CCECAC
align 4
mov	[esp+3Ch+var_38], offset aInt_0	
mov	[esp+3Ch+Str], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CCECAC
mov	[esp+3Ch+Str], ebx 
call	atoi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+Str], edi
call	purple_blist_node_set_int
jmp	short loc_67CCECAC
call	__stack_chk_fail
align 4
public purple_blist_load
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ds:dword_67D7203C, 1
mov	[esp+5Ch+var_58], offset aBuddyList 
mov	[esp+5Ch+Str], offset aPidgin_0	
call	libintl_dgettext
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], offset aBlist_xml 
call	purple_util_read_xml_from_file
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_67CCF488
mov	[esp+5Ch+var_58], offset aBlist	
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CCEE60
mov	[esp+5Ch+var_58], offset aGroup	
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_44], eax
test	eax, eax
jz	loc_67CCEE60
mov	[esp+5Ch+var_58], offset aName_0 
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
test	eax, eax
jz	loc_67CCF46F
mov	[esp+5Ch+Str], eax
call	purple_group_new
mov	[esp+5Ch+var_48], eax
mov	eax, ds:dword_67D72040
mov	edx, [eax]
test	edx, edx
jnz	short loc_67CCEDE6
jmp	short loc_67CCEDED
align 4
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67CCEDE4
mov	[esp+5Ch+var_58], edx
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+Str], eax
call	purple_blist_add_group
mov	eax, [esp+5Ch+var_44]
mov	ebp, [eax+18h]
test	ebp, ebp
jnz	short loc_67CCEE13
jmp	short loc_67CCEE48
align 4
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	short loc_67CCEE48
			
mov	edi, [ebp+8]
test	edi, edi
jnz	short loc_67CCEE0C
mov	[esp+5Ch+var_58], offset aSetting_0 
mov	eax, [ebp+0]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCEFA4
mov	edx, ebp
mov	eax, [esp+5Ch+var_48]
call	sub_67CCEC3C
mov	ebp, [ebp+20h]
test	ebp, ebp
jnz	short loc_67CCEE13
nop
			
mov	eax, [esp+5Ch+var_44]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_next_twin
mov	[esp+5Ch+var_44], eax
test	eax, eax
jnz	loc_67CCEDAC
			
mov	[esp+5Ch+var_58], offset aPrivacy 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67CCEF7B
mov	esi, [eax+18h]
test	esi, esi
jz	loc_67CCEF7B
nop
mov	[esp+5Ch+var_58], offset aName_0 
mov	[esp+5Ch+Str], esi
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aProtocol_0 
mov	[esp+5Ch+Str], esi
call	xmlnode_get_attrib
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_58], offset aProto	
mov	[esp+5Ch+Str], esi
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+5Ch+var_58], offset aMode_0 
mov	[esp+5Ch+Str], esi
call	xmlnode_get_attrib
mov	ebp, eax
test	ebx, ebx
jz	loc_67CCEF70
test	edi, edi
jz	loc_67CCF448
test	eax, eax
jz	loc_67CCEF70
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+Str], ebx
call	purple_accounts_find
mov	edi, eax
test	eax, eax
jz	short loc_67CCEF70
mov	[esp+5Ch+Str], ebp 
call	atoi
test	eax, eax
jnz	short loc_67CCEF0A
mov	al, 1
mov	[edi+38h], eax
mov	ebx, [esi+18h]
test	ebx, ebx
jnz	short loc_67CCEF1F
jmp	short loc_67CCEF70
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67CCEF70
			
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_67CCEF18
mov	[esp+5Ch+var_58], offset aPermit 
mov	eax, [ebx]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCF218
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_data
mov	ebp, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	purple_privacy_permit_add
mov	[esp+5Ch+Str], ebp
call	g_free
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_67CCEF1F
lea	esi, [esi+0]
			
mov	esi, [esi+20h]
test	esi, esi
jnz	loc_67CCEE88
			
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CCF4BF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	_purple_buddy_icons_blist_loaded_cb
align 4
mov	[esp+5Ch+var_58], offset aContact 
mov	eax, [ebp+0]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CCEFD6
mov	[esp+5Ch+var_58], offset aPerson 
mov	eax, [ebp+0]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCF280
call	purple_contact_new
mov	edi, eax
mov	esi, [esp+5Ch+var_48]
test	esi, esi
jz	loc_67CCF440
mov	eax, [esp+5Ch+var_48]
mov	edx, [eax+10h]
test	edx, edx
jnz	short loc_67CCEFFA
jmp	short loc_67CCF001
align 4
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67CCEFF8
			
mov	[esp+5Ch+var_54], edx
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	purple_blist_add_contact
mov	[esp+5Ch+var_58], offset aAlias_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_attrib
test	eax, eax
jz	short loc_67CCF035
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	purple_blist_alias_contact
mov	ebx, [ebp+18h]
test	ebx, ebx
jz	loc_67CCF1D8
mov	[esp+5Ch+var_38], ebp
jmp	short loc_67CCF053
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	loc_67CCF1D4
			
mov	ecx, [ebx+8]
test	ecx, ecx
jnz	short loc_67CCF048
mov	[esp+5Ch+var_58], offset aBuddy_0 
mov	eax, [ebx]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCF1F0
mov	[esp+5Ch+var_58], offset aAccount_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+var_58], offset aProtocol_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], esi
call	_purple_oscar_convert
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aProto	
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], esi
call	_purple_oscar_convert
test	esi, esi
jz	short loc_67CCF048
test	eax, eax
jz	loc_67CCF270
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], esi
call	purple_accounts_find
mov	esi, eax
test	eax, eax
jz	loc_67CCF048
mov	[esp+5Ch+var_58], offset aName_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_67CCF048
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	loc_67CCF048
mov	[esp+5Ch+var_58], offset aAlias_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
test	eax, eax
jz	loc_67CCF260
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_3C], eax
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], esi
call	purple_buddy_new
mov	esi, eax
test	edi, edi
jz	loc_67CCF468
mov	edx, [edi+10h]
test	edx, edx
jnz	short loc_67CCF162
jmp	short loc_67CCF169
align 10h
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67CCF160
			
mov	[esp+5Ch+var_50], edx
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+Str], esi
call	purple_blist_add_buddy
mov	[esp+5Ch+var_58], offset aSetting_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
mov	ebp, eax
test	eax, eax
jz	short loc_67CCF1AF
nop
mov	edx, ebp
mov	eax, esi
call	sub_67CCEC3C
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jnz	short loc_67CCF198
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str], eax
call	g_free
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_free
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	loc_67CCF053
xchg	ax, ax
mov	ebp, [esp+5Ch+var_38]
mov	ebx, [edi+10h]
test	ebx, ebx
jnz	loc_67CCEE0C
mov	[esp+5Ch+Str], edi
call	purple_blist_remove_contact
jmp	loc_67CCEE0C
mov	[esp+5Ch+var_58], offset aSetting_0 
mov	eax, [ebx]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCF048
mov	edx, ebx
mov	eax, edi
call	sub_67CCEC3C
jmp	loc_67CCF048
mov	[esp+5Ch+var_58], offset aBlock	
mov	eax, [ebx]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCEF18
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_data
mov	ebp, eax
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	purple_privacy_deny_add
mov	[esp+5Ch+Str], ebp
call	g_free
jmp	loc_67CCEF18
align 10h
mov	[esp+5Ch+var_3C], 0
jmp	loc_67CCF132
align 10h
test	ebp, ebp
jz	loc_67CCF048
mov	eax, ebp
jmp	loc_67CCF0CC
align 10h
mov	[esp+5Ch+var_58], offset aChat 
mov	eax, [ebp+0]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CCEE0C
mov	[esp+5Ch+var_58], offset aAccount_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+var_58], offset aProtocol_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_attrib
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aProto	
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_attrib
test	esi, esi
jz	loc_67CCEE0C
test	eax, eax
jz	loc_67CCF4A9
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], esi
call	purple_accounts_find
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	loc_67CCEE0C
mov	[esp+5Ch+var_58], offset aAlias_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_67CCF49C
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_50], offset g_free
mov	[esp+5Ch+var_54], offset g_free
mov	[esp+5Ch+var_58], offset g_str_equal
mov	[esp+5Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_58], offset aComponent 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	short loc_67CCF3AA
mov	[esp+5Ch+var_30], ebp
mov	edi, [esp+5Ch+var_38]
lea	esi, [esi+0]
mov	[esp+5Ch+var_58], offset aName_0 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_data
mov	esi, eax
mov	[esp+5Ch+Str], ebp
call	g_strdup
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], edi
call	g_hash_table_replace
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_67CCF364
mov	ebp, [esp+5Ch+var_30]
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Str], eax
call	purple_chat_new
mov	ebx, eax
mov	edx, [esp+5Ch+var_48]
test	edx, edx
jz	loc_67CCF4B8
mov	eax, [esp+5Ch+var_48]
mov	edx, [eax+10h]
test	edx, edx
jnz	short loc_67CCF3E6
jmp	short loc_67CCF3ED
align 4
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67CCF3E4
			
mov	[esp+5Ch+var_54], edx
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], ebx
call	purple_blist_add_chat
mov	[esp+5Ch+var_58], offset aSetting_0 
mov	[esp+5Ch+Str], ebp
call	xmlnode_get_child
mov	esi, eax
test	eax, eax
jz	short loc_67CCF42F
nop
mov	edx, esi
mov	eax, ebx
call	sub_67CCEC3C
mov	[esp+5Ch+Str], esi
call	xmlnode_get_next_twin
mov	esi, eax
test	eax, eax
jnz	short loc_67CCF418
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_free
jmp	loc_67CCEE0C
xor	edx, edx
jmp	loc_67CCF001
align 4
mov	eax, [esp+5Ch+var_48]
test	eax, eax
jz	loc_67CCEF70
test	ebp, ebp
jz	loc_67CCEF70
mov	edi, [esp+5Ch+var_48]
jmp	loc_67CCEEEA
align 4
xor	edx, edx
jmp	loc_67CCF169
mov	[esp+5Ch+var_58], offset aBuddies 
mov	[esp+5Ch+Str], offset aPidgin_0	
call	libintl_dgettext
jmp	loc_67CCEDC8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCF4BF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_3C], 0
jmp	loc_67CCF31B
test	ebx, ebx
jz	loc_67CCEE0C
mov	eax, ebx
jmp	loc_67CCF2DF
xor	edx, edx
jmp	loc_67CCF3ED
			
call	__stack_chk_fail
public purple_blist_node_get_string
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67CCF568
mov	eax, [eax+14h]
test	eax, eax
jz	loc_67CCF588
test	edx, edx
jz	loc_67CCF5A8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	short loc_67CCF532
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 0Dh
jz	short loc_67CCF54C
mov	[esp+2Ch+var_24], offset aPurple_value_1 
mov	[esp+2Ch+var_28], offset aPurple_blis_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CCF5C9
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CCF5C9
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_string
align 4
mov	[esp+2Ch+var_24], offset aNodeNull 
mov	[esp+2Ch+var_28], offset aPurple_blis_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCF532
align 4
mov	[esp+2Ch+var_24], offset aNodeSettingsNu 
mov	[esp+2Ch+var_28], offset aPurple_blis_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCF532
align 4
mov	[esp+2Ch+var_24], offset aKeyNull_0 
mov	[esp+2Ch+var_28], offset aPurple_blis_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CCF532
			
call	__stack_chk_fail
align 10h
public purple_blist_node_get_extended_menu
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_14], 0
test	eax, eax
jz	short loc_67CCF624
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aBlistNodeExten 
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCF644
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNNull	
mov	[esp+2Ch+var_28], offset aPurple_blis_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CCF613
call	__stack_chk_fail
align 4
public purple_blist_get_group_size
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CCF688
test	edx, edx
jnz	short loc_67CCF680
mov	eax, [eax+28h]
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCF68C
add	esp, 1Ch
retn
align 10h
mov	eax, [eax+24h]
jmp	short loc_67CCF66E
align 4
xor	eax, eax
jmp	short loc_67CCF66E
call	__stack_chk_fail
align 4
public purple_blist_get_group_online_count
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CCF6C0
mov	eax, [eax+2Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCF6C4
add	esp, 1Ch
retn
align 10h
xor	eax, eax
jmp	short loc_67CCF6AE
call	__stack_chk_fail
align 4
public purple_blist_set_ui_ops
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ds:dword_67D72038, eax
test	eax, eax
jz	short loc_67CCF720
mov	ecx, [eax+28h]
test	ecx, ecx
jz	short loc_67CCF744
xor	edx, edx
mov	ecx, [eax+2Ch]
test	ecx, ecx
jz	short loc_67CCF754
mov	ecx, [eax+30h]
test	ecx, ecx
jz	short loc_67CCF764
test	edx, edx
jz	short loc_67CCF720
cmp	dword ptr [eax+28h], offset sub_67CC9834
jz	short loc_67CCF730
			
mov	[esp+2Ch+var_28], offset aOnlySomeOfTheB 
mov	[esp+2Ch+var_2C], offset aBlist	
call	purple_debug_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCF776
add	esp, 2Ch
retn
			
cmp	dword ptr [eax+2Ch], offset sub_67CC9834
jnz	short loc_67CCF70C
cmp	dword ptr [eax+30h], offset sub_67CC97F4
jnz	short loc_67CCF70C
jmp	short loc_67CCF720
mov	dword ptr [eax+28h], offset sub_67CC9834
mov	dl, 1
mov	ecx, [eax+2Ch]
test	ecx, ecx
jnz	short loc_67CCF6F8
mov	dword ptr [eax+2Ch], offset sub_67CC9834
mov	edx, [eax+30h]
test	edx, edx
jnz	short loc_67CCF703
xchg	ax, ax
mov	dword ptr [eax+30h], offset sub_67CC97F4
cmp	dword ptr [eax+28h], offset sub_67CC9834
jnz	short loc_67CCF70C
jmp	short loc_67CCF730
call	__stack_chk_fail
align 4
public purple_blist_get_ui_ops
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72038
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCF79F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_blist_get_handle
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7204C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCF7C7
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_blist_init
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 0Ch
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_38], 0Ch
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_20], esi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+3Ch+var_38], offset aBuddyStatusCha 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddyPrivacyCh 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_20], esi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_INT_INT
mov	[esp+3Ch+var_38], offset aBuddyIdleChang 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddySignedOn	
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddySignedOff 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddyGotLoginT 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Ah
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBlistNodeAdded 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Ah
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBlistNodeRemov 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddyAdded 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddyRemoved 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aBuddyIconChang 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID
mov	[esp+3Ch+var_38], offset aUpdateIdle 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_38], offset aGlist	
mov	[esp+3Ch+var_3C], 11h
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 0Ah
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+3Ch+var_38], offset aBlistNodeExten 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 0Ah
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+3Ch+var_38], offset aBlistNodeAlias 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_20], esi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_INT_INT
mov	[esp+3Ch+var_38], offset aBuddyCapsChang 
mov	[esp+3Ch+var_3C], offset dword_67D7204C
call	purple_signal_register
call	purple_accounts_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CC948C
mov	[esp+3Ch+var_34], offset dword_67D7204C
mov	[esp+3Ch+var_38], offset aAccountCreat_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
call	purple_accounts_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CC9454
mov	[esp+3Ch+var_34], offset dword_67D7204C
mov	[esp+3Ch+var_38], offset aAccountDestr_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCFCD4
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_blist_uninit
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72040
test	ebx, ebx
jz	loc_67CCFD9E
mov	eax, ds:dword_67D72050
test	eax, eax
jnz	loc_67CCFDB0
call	purple_blist_destroy
mov	edx, ds:dword_67D72040
test	edx, edx
jz	short loc_67CCFD30
mov	eax, [edx]
test	eax, eax
jz	short loc_67CCFD30
nop
mov	ebx, [eax+8]
call	sub_67CCCC04
mov	eax, ebx
test	ebx, ebx
jnz	short loc_67CCFD1C
mov	edx, ds:dword_67D72040
			
mov	dword ptr [edx], 0
mov	eax, [edx+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72044
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72048
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_67D72044, 0
mov	ds:dword_67D72048, 0
mov	eax, ds:dword_67D72040
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_67D72040, 0
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signals_disconnect_by_handle
mov	[esp+2Ch+var_2C], offset dword_67D7204C
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCFDCC
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D72050, 0
call	sub_67CCC09C
jmp	loc_67CCFD06
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_8]
xor	eax, eax
cmp	[esp+1Ch+arg_4], edx
setz	al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCFDFF
add	esp, 1Ch
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], ebx
call	g_file_get_contents_utf8
test	eax, eax
jz	short loc_67CCFE50
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CCFE83
add	esp, 28h
pop	ebx
retn
align 10h
mov	eax, [esp+2Ch+var_14]
mov	eax, [eax+8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aErrorReadingSS 
mov	[esp+2Ch+var_2C], offset aBuddyicon_0 
call	purple_debug_error
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_error_free
xor	eax, eax
jmp	short loc_67CCFE3E
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_remove_setting
mov	[esp+2Ch+var_28], offset aBuddy_icon 
mov	[esp+2Ch+var_2C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CCFEDC
mov	[esp+2Ch+var_28], offset aAvatar_hash 
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_remove_setting
mov	[esp+2Ch+var_28], offset aIcon_checksum	
mov	[esp+2Ch+var_2C], esi
call	purple_blist_node_remove_setting
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCFEEE
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CCFF50
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
inc	esi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CCFF6E
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aFilenameNull 
mov	[esp+2Ch+var_28], offset aRef_filename 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CCFF3B
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, eax
mov	[esp+5Ch+var_34], edx
mov	esi, ecx
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
cmp	byte ptr [ebx],	2Fh
jz	loc_67CD007C
mov	[esp+5Ch+Count], 0
mov	[esp+5Ch+Size],	ebx
mov	[esp+5Ch+Str], ecx
call	g_build_filename
mov	ebp, eax
mov	[esp+5Ch+Size],	10h
mov	[esp+5Ch+Str], eax
call	g_file_test_utf8
mov	[esp+5Ch+Str], ebp
test	eax, eax
jnz	loc_67CD005E
call	g_free
mov	[esp+5Ch+Count], 0
mov	[esp+5Ch+Size],	ebx
mov	eax, ds:dword_67D72068
mov	[esp+5Ch+Str], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+5Ch+Size],	10h
mov	[esp+5Ch+Str], ebx
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CD0038
lea	ecx, [esp+5Ch+var_24]
lea	edx, [esp+5Ch+var_28]
mov	eax, ebx
call	sub_67CCFE04
test	eax, eax
jz	loc_67CD020C
mov	edx, [esp+5Ch+var_28]
test	edx, edx
jz	short loc_67CD0027
mov	eax, [esp+5Ch+var_24]
test	eax, eax
jnz	short loc_67CD008C
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aEmptyBuddyIcon 
jmp	short loc_67CD0044
align 4
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aOldIconFileDoe 
mov	[esp+5Ch+Str], offset aBuddyicon_0 
call	purple_debug_error
mov	edx, [esp+5Ch+var_34]
mov	eax, edi
call	sub_67CCFE88
mov	[esp+5Ch+Str], ebx
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD0339
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+Str], ebx
call	g_strdup
mov	ebx, eax
jmp	loc_67CCFFEC
align 4
mov	[esp+5Ch+Str], ebx
call	g_free
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+Size],	eax
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Str], eax
call	purple_util_get_image_filename
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_67CD0244
mov	[esp+5Ch+Count], 0
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Str], esi
call	g_build_filename
mov	ebx, eax
mov	[esp+5Ch+Size],	offset aWb_1 
mov	[esp+5Ch+Str], eax
call	g_fopen
mov	esi, eax
test	eax, eax
jz	loc_67CD01D5
mov	[esp+5Ch+File],	eax 
mov	[esp+5Ch+Count], 1 
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+Size],	eax 
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Str], eax 
call	fwrite
test	eax, eax
jnz	loc_67CD0224
call	_errno
mov	eax, [eax]
mov	[esp+5Ch+Str], eax
call	wpurple_strerror
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aErrorWritingSS 
mov	[esp+5Ch+Str], offset aBuddyicon_0 
call	purple_debug_error
mov	[esp+5Ch+Str], esi 
call	fclose
mov	[esp+5Ch+Str], ebx
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Count], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Str], edi
call	purple_blist_node_set_string
mov	eax, [esp+5Ch+var_30]
call	sub_67CCFEF4
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+Size],	offset aBuddy_icon 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CD0063
mov	[esp+5Ch+Size],	offset aAvatar_hash 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_get_string
test	eax, eax
jz	loc_67CD02A0
mov	[esp+5Ch+Count], eax
mov	[esp+5Ch+Size],	offset aIcon_checksum 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_set_string
mov	[esp+5Ch+Size],	offset aAvatar_hash 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_remove_setting
jmp	loc_67CD0063
call	_errno
mov	eax, [eax]
mov	[esp+5Ch+Str], eax
call	wpurple_strerror
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aUnableToCreate 
mov	[esp+5Ch+Str], offset aBuddyicon_0 
call	purple_debug_error
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_free
mov	edx, [esp+5Ch+var_34]
mov	eax, edi
call	sub_67CCFE88
jmp	loc_67CD0063
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aWroteMigratedC 
mov	[esp+5Ch+Str], offset aBuddyicon_0 
call	purple_debug_info
jmp	loc_67CD013B
align 4
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aNewIconFilenam 
mov	[esp+5Ch+Str], offset aBuddyicon_0 
call	purple_debug_error
mov	edx, [esp+5Ch+var_34]
mov	eax, edi
call	sub_67CCFE88
mov	[esp+5Ch+var_48], offset aMigrate_buddy_ 
mov	[esp+5Ch+var_4C], 41Dh
mov	[esp+5Ch+File],	offset aBuddyicon_c 
mov	[esp+5Ch+Count], offset	aFileSLineDSSho	
mov	[esp+5Ch+Size],	8
mov	[esp+5Ch+Str], 0
call	g_log
jmp	loc_67CD0063
mov	[esp+5Ch+Str], edi
call	purple_buddy_get_account
mov	[esp+5Ch+Str], eax
call	purple_account_get_protocol_id
mov	ebx, eax
mov	[esp+5Ch+Size],	offset aPrplYahoo_0 
mov	[esp+5Ch+Str], eax
call	g_str_equal
test	eax, eax
jnz	short loc_67CD02DE
mov	[esp+5Ch+Size],	offset aPrplYahoojp_0 
mov	[esp+5Ch+Str], ebx
call	g_str_equal
test	eax, eax
jz	loc_67CD0063
mov	[esp+5Ch+Size],	offset aIcon_checksum 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_get_int
test	eax, eax
jz	loc_67CD0063
mov	[esp+5Ch+Size],	eax
mov	[esp+5Ch+Str], offset aI 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+Size],	offset aIcon_checksum 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_remove_setting
mov	[esp+5Ch+Count], ebx
mov	[esp+5Ch+Size],	offset aIcon_checksum 
mov	[esp+5Ch+Str], edi
call	purple_blist_node_set_string
mov	[esp+5Ch+Str], ebx
call	g_free
jmp	loc_67CD0063
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD038C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
cmp	eax, 1
jz	short loc_67CD03A0
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
dec	esi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD03B3
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
jmp	short loc_67CD038C
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD03F8
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD0418
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD04AA
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aFilenameNull 
mov	[esp+2Ch+var_28], offset aPurple_buddy_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD03E2
align 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+2Ch+var_28], 10h
mov	[esp+2Ch+var_2C], eax
call	g_file_test_utf8
test	eax, eax
jnz	short loc_67CD0454
			
mov	[esp+2Ch+var_2C], ebx
call	g_free
jmp	short loc_67CD03E2
align 4
mov	[esp+2Ch+var_2C], ebx
call	g_unlink
test	eax, eax
jz	short loc_67CD0490
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aFailedToDelete 
mov	[esp+2Ch+var_2C], offset aBuddyicon_0 
call	purple_debug_error
jmp	short loc_67CD0447
align 10h
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aDeletedCacheFi 
mov	[esp+2Ch+var_2C], offset aBuddyicon_0 
call	purple_debug_info
jmp	short loc_67CD0447
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], esi
call	purple_imgstore_get_filename
mov	ebx, eax
test	eax, eax
jz	short loc_67CD04EA
mov	[esp+4], eax
mov	eax, ds:dword_67D7205C
mov	[esp], eax
call	g_hash_table_lookup
mov	edi, eax
cmp	eax, esi
jz	short loc_67CD0500
			
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD0533
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, ebx
call	sub_67CD03B8
mov	[esp+4], ebx
mov	eax, ds:dword_67D7205C
mov	[esp], eax
call	g_hash_table_remove
mov	[esp+8], edi
mov	dword ptr [esp+4], offset sub_67CCFDD4
mov	eax, ds:dword_67D72064
mov	[esp], eax
call	g_hash_table_foreach_remove
jmp	short loc_67CD04EA
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD067C
mov	ebp, edx
test	edx, edx
jz	short loc_67CD05A4
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebx
call	purple_util_get_image_filename
mov	esi, eax
test	eax, eax
jz	loc_67CD0720
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D7205C
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	short loc_67CD05DC
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	[esp+3Ch+var_3C], edi
call	purple_imgstore_ref
mov	ebx, eax
jmp	short loc_67CD05C2
align 4
mov	[esp+3Ch+var_34], offset aIcon_len0 
mov	[esp+3Ch+var_38], offset aPurple_budd_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD072F
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	purple_imgstore_add
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D7205C
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
test	ebx, ebx
jz	loc_67CD06A0
mov	ecx, dword_67D30000
test	ecx, ecx
jz	short loc_67CD05C2
mov	esi, ds:dword_67D72060
mov	[esp+3Ch+var_3C], ebx
call	purple_imgstore_get_filename
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_build_filename
mov	edi, eax
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], esi
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CD06C4
			
mov	[esp+3Ch+var_3C], ebx
call	purple_imgstore_get_size
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_imgstore_get_data
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], eax 
mov	[esp+3Ch+var_3C], edi 
call	purple_util_write_data_to_file_absolute
mov	[esp+3Ch+var_3C], edi
call	g_free
jmp	loc_67CD05C2
mov	[esp+3Ch+var_34], offset aIcon_dataNull	
mov	[esp+3Ch+var_38], offset aPurple_budd_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CD05C2
align 10h
mov	[esp+3Ch+var_34], offset aImgNull 
mov	[esp+3Ch+var_38], offset aPurple_budd_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CD05C2
align 4
mov	[esp+3Ch+var_38], offset aCreatingIconCa 
mov	[esp+3Ch+var_3C], offset aBuddyicon_0 
call	purple_debug_info
mov	[esp+3Ch+var_38], 1C0h
mov	[esp+3Ch+var_3C], esi
call	g_mkdir
test	eax, eax
jns	loc_67CD064D
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aUnableToCrea_0 
mov	[esp+3Ch+var_3C], offset aBuddyicon_0 
call	purple_debug_error
jmp	loc_67CD064D
mov	[esp+3Ch+var_3C], ebx
call	g_free
xor	ebx, ebx
jmp	loc_67CD05C2
call	__stack_chk_fail
public purple_buddy_icon_ref
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD0760
inc	dword ptr [eax+10h]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0786
add	esp, 3Ch
retn
align 10h
mov	[esp+3Ch+var_34], offset aIconNull 
mov	[esp+3Ch+var_38], offset aPurple_budd_17 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CD074E
call	__stack_chk_fail
align 4
public purple_buddy_icon_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD07B8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD07D8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIconNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD07A5
call	__stack_chk_fail
align 10h
public purple_buddy_icon_get_username
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD080C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD082C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIconNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD07FA
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 14h
call	g_slice_alloc
mov	ebx, eax
mov	[eax], edi
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
mov	dword ptr [ebx+0Ch], 0
mov	dword ptr [ebx+10h], 1
mov	[esp+2Ch+var_28], edi
mov	eax, ds:dword_67D72054
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	short loc_67CD08B8
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icon_get_username
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_hash_table_insert
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD08E5
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new
mov	esi, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], edi
mov	eax, ds:dword_67D72054
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_67CD0889
call	__stack_chk_fail
align 4
public purple_buddy_icon_unref
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD0913
mov	eax, [ebx+10h]
test	eax, eax
jle	short loc_67CD092C
dec	eax
mov	[ebx+10h], eax
test	eax, eax
jz	short loc_67CD094C
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD09B7
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aIconRef_count0 
mov	[esp+2Ch+var_28], offset aPurple_budd_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CD0913
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icon_get_account
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72054
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	short loc_67CD097F
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icon_get_username
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_hash_table_remove
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_unref
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 14h
call	g_slice_free1
xor	ebx, ebx
jmp	loc_67CD0913
call	__stack_chk_fail
public purple_buddy_icon_update
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CD0B7C
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_icon_get_account
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_icon_get_username
mov	[esp+4Ch+var_30], eax
mov	ebx, [ebp+4]
test	ebx, ebx
jz	loc_67CD0BAC
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_icon_ref
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jnz	short loc_67CD0A4D
jmp	loc_67CD0AE0
			
mov	eax, edi
call	sub_67CD0340
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jz	loc_67CD0AE0
mov	esi, [ebx]
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
call	purple_buddy_set_icon
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_get_string
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edi, eax
mov	eax, [ebp+4]
test	eax, eax
jz	loc_67CD0B54
mov	edx, dword_67D30000
test	edx, edx
jz	short loc_67CD0A28
mov	[esp+4Ch+var_4C], eax
call	purple_imgstore_get_filename
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_3C], eax
call	purple_blist_node_set_string
mov	edx, [ebp+0Ch]
test	edx, edx
mov	eax, [esp+4Ch+var_3C]
jz	short loc_67CD0ABE
cmp	byte ptr [edx],	0
jnz	short loc_67CD0B38
mov	[esp+4Ch+var_48], offset aIcon_checksum	
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_3C], eax
call	purple_blist_node_remove_setting
mov	eax, [esp+4Ch+var_3C]
call	sub_67CCFEF4
jmp	loc_67CD0A28
			
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CD0B18
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_get_im_data
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	purple_conv_im_set_icon
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD0BB9
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_buddy_icon_unref
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aIcon_checksum	
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_set_string
mov	eax, [esp+4Ch+var_3C]
jmp	short loc_67CD0AD6
align 4
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_remove_setting
mov	[esp+4Ch+var_48], offset aIcon_checksum	
mov	[esp+4Ch+var_4C], esi
call	purple_blist_node_remove_setting
jmp	loc_67CD0A28
align 4
mov	[esp+4Ch+var_44], offset aIconNull 
mov	[esp+4Ch+var_48], offset aPurple_budd_21 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0BB9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_38], 0
jmp	loc_67CD0A01
			
call	__stack_chk_fail
align 10h
public purple_buddy_icon_set_data
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	ebx, ebx
jz	short loc_67CD0C48
mov	edi, [ebx+4]
mov	dword ptr [ebx+4], 0
test	eax, eax
jz	short loc_67CD0C00
test	edx, edx
jz	short loc_67CD0C3C
call	sub_67CD0538
mov	[ebx+4], eax
			
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icon_update
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD0C77
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_imgstore_unref
align 4
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_67CD0C00
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD0C77
mov	[esp+2Ch+arg_8], offset	aIconNull 
mov	[esp+2Ch+arg_4], offset	aPurple_budd_22	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
public purple_buddy_icon_get_checksum
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD0CA8
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0CC8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIconNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD0C96
call	__stack_chk_fail
align 10h
public purple_buddy_icon_get_data
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD0D20
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CD0D3C
test	esi, esi
jz	short loc_67CD0D04
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_size
mov	[esi], eax
mov	eax, [ebx+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0D50
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_imgstore_get_data
align 10h
mov	[esp+2Ch+var_24], offset aIconNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0D50
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_buddy_icon_get_extension
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CD0D8C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0D9E
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_imgstore_get_extension
align 4
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0D9E
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_buddy_icon_get_full_path
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD0E10
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CD0E3C
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_filename
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+2Ch+var_28], 10h
mov	[esp+2Ch+var_2C], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CD0E30
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0E40
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aIconNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CD0DFA
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	ebx, ebx
jmp	short loc_67CD0DFA
xor	ebx, ebx
jmp	short loc_67CD0DFA
call	__stack_chk_fail
align 4
public purple_buddy_icons_get_checksum_for_user
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aIcon_checksum	
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_blist_node_get_string
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD0E7A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_buddy_icons_find
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD0FE8
test	esi, esi
jz	loc_67CD100C
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72054
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD0EF4
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	edx, eax
test	eax, eax
jz	short loc_67CD0EF4
mov	[esp+4Ch+var_4C], edx
call	purple_buddy_icon_ref
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD102F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_find_buddy
mov	edi, eax
test	eax, eax
jz	loc_67CD1004
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], eax
call	purple_blist_node_get_string
test	eax, eax
jz	loc_67CD1004
mov	edx, dword_67D30000
mov	[esp+4Ch+var_30], edx
mov	dword_67D30000,	0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72060
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	ebp, eax
lea	ecx, [esp+4Ch+var_24]
lea	edx, [esp+4Ch+var_28]
call	sub_67CCFE04
test	eax, eax
jz	short loc_67CD0FC0
mov	edx, esi
mov	eax, ebx
call	sub_67CD0834
mov	dword ptr [eax+4], 0
mov	[esp+4Ch+var_48], offset aIcon_checksum	
mov	[esp+4Ch+var_4C], edi
mov	[esp+4Ch+var_34], eax
call	purple_blist_node_get_string
mov	[esp+4Ch+var_40], eax
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	purple_buddy_icon_set_data
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	eax, [esp+4Ch+var_30]
mov	dword_67D30000,	eax
mov	edx, [esp+4Ch+var_34]
jmp	loc_67CD0ED1
mov	edx, offset aBuddy_icon	
mov	eax, edi
call	sub_67CCFE88
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	edx, [esp+4Ch+var_30]
mov	dword_67D30000,	edx
xor	eax, eax
jmp	loc_67CD0ED9
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_1	
mov	[esp+4Ch+var_48], offset aPurple_budd_26 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	loc_67CD0ED9
align 4
mov	[esp+4Ch+var_44], offset aUsernameNull_0 
mov	[esp+4Ch+var_48], offset aPurple_budd_26 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD0ED9
call	__stack_chk_fail
public purple_buddy_icon_new
push	ebp
push	edi
push	esi
sub	esp, 30h
mov	ebp, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_C]
mov	ecx, [esp+3Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CD10F8
test	edx, edx
jz	loc_67CD111C
test	esi, esi
jz	loc_67CD1140
test	edi, edi
jnz	short loc_67CD10AC
mov	[esp+3Ch+var_34], offset aIcon_len0 
mov	[esp+3Ch+var_38], offset aPurple_budd_27 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD1178
add	esp, 30h
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebp
mov	[esp+3Ch+var_20], edx
mov	[esp+3Ch+var_24], ecx
call	purple_buddy_icons_find
test	eax, eax
mov	edx, [esp+3Ch+var_20]
mov	ecx, [esp+3Ch+var_24]
jz	loc_67CD1164
mov	dword ptr [eax+4], 0
mov	[esp+3Ch+var_30], ecx
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	purple_buddy_icon_set_data
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CD1093
align 4
mov	[esp+3Ch+var_34], offset aAccountNull_1	
mov	[esp+3Ch+var_38], offset aPurple_budd_27 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD1093
align 4
mov	[esp+3Ch+var_34], offset aUsernameNull_0 
mov	[esp+3Ch+var_38], offset aPurple_budd_27 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD1093
align 10h
mov	[esp+3Ch+var_34], offset aIcon_dataNull	
mov	[esp+3Ch+var_38], offset aPurple_budd_27 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD1093
align 4
mov	eax, ebp
mov	[esp+3Ch+var_24], ecx
call	sub_67CD0834
mov	ecx, [esp+3Ch+var_24]
jmp	loc_67CD10D0
call	__stack_chk_fail
align 10h
public purple_buddy_icons_set_for_user
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CD1294
test	ebx, ebx
jz	loc_67CD12C4
mov	[esp+5Ch+var_58], ebp
mov	eax, ds:dword_67D72054
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD1210
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD1210
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD1314
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_C], edx
mov	[esp+5Ch+arg_8], esi
mov	[esp+5Ch+arg_4], edi
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_buddy_icon_set_data
align 10h
			
test	edi, edi
jz	short loc_67CD121C
test	esi, esi
jnz	loc_67CD12DC
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_67CD1279
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+5Ch+var_58], offset aBuddy_icon 
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_get_string
call	sub_67CD0340
mov	[esp+5Ch+var_58], offset aBuddy_icon 
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_remove_setting
mov	[esp+5Ch+var_58], offset aIcon_checksum	
mov	[esp+5Ch+var_5C], esi
call	purple_blist_node_remove_setting
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CD1230
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD1314
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD1314
mov	[esp+5Ch+arg_8], offset	aAccountNull_1 
mov	[esp+5Ch+arg_4], offset	aPurple_budd_28	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1314
mov	[esp+5Ch+arg_8], offset	aUsernameNull_0	
jmp	short loc_67CD12A8
align 4
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	purple_buddy_icon_new
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1314
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_buddy_icon_unref
			
call	__stack_chk_fail
align 4
public purple_buddy_icons_set_account_icon
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67CD14B4
test	edx, edx
jz	loc_67CD14B4
call	sub_67CD0538
mov	esi, eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+Time],	ebx
call	purple_account_get_string
mov	[esp+3Ch+Time],	eax
call	g_strdup
mov	edi, eax
test	esi, esi
jz	loc_67CD14D6
mov	ecx, dword_67D30000
test	ecx, ecx
jnz	loc_67CD1468
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_string
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon_tim 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_int
mov	eax, edi
call	sub_67CD0340
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72064
mov	[esp+3Ch+Time],	eax
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72064
mov	[esp+3Ch+Time],	eax
call	g_hash_table_insert
mov	[esp+3Ch+Time],	ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67CD1434
			
test	ebp, ebp
jz	short loc_67CD1424
mov	[esp+3Ch+Time],	ebp
call	purple_imgstore_unref
			
mov	[esp+3Ch+Time],	edi
call	g_free
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD1538
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	edi, edi
jz	short loc_67CD1401
mov	eax, edi
call	sub_67CD03B8
jmp	short loc_67CD1401
align 4
mov	[esp+3Ch+Time],	ebx
call	purple_account_get_connection
mov	ebx, eax
mov	[esp+3Ch+Time],	eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
test	edx, edx
jz	short loc_67CD13F5
mov	eax, [edx+0D4h]
test	eax, eax
jz	short loc_67CD13F5
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+Time],	ebx
call	eax
jmp	short loc_67CD13F5
align 4
mov	[esp+3Ch+Time],	esi
call	purple_imgstore_get_filename
mov	ebp, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_string
mov	[esp+3Ch+Time],	0 
call	time
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aBuddy_icon_tim 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_int
mov	eax, ebp
call	sub_67CCFEF4
jmp	loc_67CD13BA
align 4
			
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+Time],	ebx
call	purple_account_get_string
mov	[esp+3Ch+Time],	eax
call	g_strdup
mov	edi, eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_string
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aBuddy_icon_tim 
mov	[esp+3Ch+Time],	ebx
call	purple_account_set_int
mov	eax, edi
call	sub_67CD0340
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72064
mov	[esp+3Ch+Time],	eax
call	g_hash_table_lookup
mov	ebp, eax
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72064
mov	[esp+3Ch+Time],	eax
call	g_hash_table_remove
xor	esi, esi
jmp	loc_67CD13E9
call	__stack_chk_fail
align 10h
public purple_buddy_icons_find_account_icon
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD1604
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72064
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD1590
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_ref
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD163B
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aBuddy_icon 
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_string
test	eax, eax
jz	loc_67CD1634
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	esi, eax
lea	ecx, [esp+2Ch+var_14]
lea	edx, [esp+2Ch+var_18]
call	sub_67CCFE04
mov	[esp+2Ch+var_2C], esi
test	eax, eax
jz	short loc_67CD1628
call	g_free
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icons_set_account_icon
jmp	loc_67CD1571
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_1	
mov	[esp+2Ch+var_28], offset aPurple_budd_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD1579
align 4
call	g_free
xor	eax, eax
jmp	loc_67CD1579
xor	eax, eax
jmp	loc_67CD1579
call	__stack_chk_fail
public purple_buddy_icons_get_account_icon_timestamp
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD16CC
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aBuddy_icon_tim 
mov	[esp+2Ch+Time],	ebx
call	purple_account_get_int
mov	esi, eax
test	eax, eax
jz	short loc_67CD168C
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD16EC
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aBuddy_icon 
mov	[esp+2Ch+Time],	ebx
call	purple_account_get_string
test	eax, eax
jz	short loc_67CD1676
mov	[esp+2Ch+Time],	0 
call	time
mov	esi, eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aBuddy_icon_tim 
mov	[esp+2Ch+Time],	ebx
call	purple_account_set_int
jmp	short loc_67CD1676
mov	[esp+2Ch+var_24], offset aAccountNull_1	
mov	[esp+2Ch+var_28], offset aPurple_budd_30 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD1676
call	__stack_chk_fail
align 4
public purple_buddy_icons_node_has_custom_icon
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD1734
mov	[esp+2Ch+var_28], offset aCustom_buddy_i 
mov	[esp+2Ch+var_2C], eax
call	purple_blist_node_get_string
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1754
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD1723
call	__stack_chk_fail
align 4
public purple_buddy_icons_node_set_custom_icon
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD1990
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CD17AA
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CD17AA
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
test	eax, eax
jnz	loc_67CD1A00
			
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72064
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	[esp+4Ch+var_30], eax
test	esi, esi
jz	short loc_67CD17CB
test	edi, edi
jnz	loc_67CD18F4
mov	[esp+4Ch+var_48], offset aCustom_buddy_i 
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_string
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	esi, eax
mov	[esp+4Ch+var_48], offset aCustom_buddy_i 
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_remove_setting
mov	eax, esi
call	sub_67CD0340
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72064
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
xor	edi, edi
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
mov	[esp+4Ch+var_4C], ebx
dec	eax
jz	short loc_67CD187C
call	purple_blist_node_get_type
cmp	eax, 3
jz	loc_67CD19B4
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_update_node_icon
mov	ebx, [esp+4Ch+var_30]
test	ebx, ebx
jz	short loc_67CD186C
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_imgstore_unref
			
mov	[esp+4Ch+var_4C], esi
call	g_free
			
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD1A07
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	esi, esi
jz	short loc_67CD1847
mov	eax, esi
call	sub_67CD03B8
jmp	short loc_67CD1847
align 4
call	purple_blist_node_get_first_child
mov	ebp, eax
test	eax, eax
jnz	short loc_67CD189A
jmp	short loc_67CD182B
align 4
			
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_sibling_next
mov	ebp, eax
test	eax, eax
jz	short loc_67CD182B
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CD188C
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_34], eax
call	purple_buddy_get_name
mov	ecx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CD18E7
mov	[esp+4Ch+var_48], 0Ah
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_update
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_update_node_icon
jmp	short loc_67CD188C
align 4
mov	edx, edi
mov	eax, esi
call	sub_67CD0538
mov	edi, eax
mov	[esp+4Ch+var_48], offset aCustom_buddy_i 
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_string
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	esi, eax
test	edi, edi
jz	loc_67CD17E5
mov	ebp, dword_67D30000
test	ebp, ebp
jnz	short loc_67CD195C
mov	[esp+4Ch+var_48], offset aCustom_buddy_i 
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_remove_setting
mov	eax, esi
call	sub_67CD0340
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72064
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
jmp	loc_67CD180F
mov	[esp+4Ch+var_4C], edi
call	purple_imgstore_get_filename
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aCustom_buddy_i 
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_34], eax
call	purple_blist_node_set_string
mov	eax, [esp+4Ch+var_34]
call	sub_67CCFEF4
mov	eax, esi
call	sub_67CD0340
jmp	short loc_67CD1942
align 10h
mov	[esp+4Ch+var_44], offset aNodeNull_0 
mov	[esp+4Ch+var_48], offset aPurple_budd_32 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	loc_67CD184F
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_chat_get_account
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_34], eax
call	purple_chat_get_name
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 2
call	purple_find_conversation_with_account
test	eax, eax
jz	loc_67CD182B
mov	[esp+4Ch+var_48], 0Ah
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_update
jmp	loc_67CD182B
align 10h
xor	edi, edi
jmp	loc_67CD184F
call	__stack_chk_fail
public purple_buddy_icons_node_find_custom_icon
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD1AC8
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72064
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CD1A5C
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_ref
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD1AFF
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_28], offset aCustom_buddy_i 
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_string
test	eax, eax
jz	loc_67CD1AF8
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	esi, eax
lea	ecx, [esp+2Ch+var_18]
lea	edx, [esp+2Ch+var_14]
call	sub_67CCFE04
mov	[esp+2Ch+var_2C], esi
test	eax, eax
jz	short loc_67CD1AEC
call	g_free
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icons_node_set_custom_icon
jmp	loc_67CD1A3D
align 4
mov	[esp+2Ch+var_24], offset aNodeNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD1A45
align 4
call	g_free
xor	eax, eax
jmp	loc_67CD1A45
xor	eax, eax
jmp	loc_67CD1A45
call	__stack_chk_fail
public purple_buddy_icons_node_set_custom_icon_from_file
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_18], 0
mov	[esp+2Ch+var_14], 0
test	ebx, ebx
jz	short loc_67CD1B98
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CD1B54
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CD1B54
mov	[esp+2Ch+var_2C], ebx
call	purple_blist_node_get_type
test	eax, eax
jnz	short loc_67CD1BB4
			
test	esi, esi
jz	short loc_67CD1B6B
lea	ecx, [esp+2Ch+var_18]
lea	edx, [esp+2Ch+var_14]
mov	eax, esi
call	sub_67CCFE04
test	eax, eax
jz	short loc_67CD1BB4
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_buddy_icons_node_set_custom_icon
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1BB8
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull_0 
mov	[esp+2Ch+var_28], offset aPurple_budd_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67CD1B83
call	__stack_chk_fail
align 10h
public purple_buddy_icons_has_custom_icon
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1BEB
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_buddy_icons_node_has_custom_icon
call	__stack_chk_fail
public purple_buddy_icons_find_custom_icon
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1C1B
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_buddy_icons_node_find_custom_icon
call	__stack_chk_fail
public purple_buddy_icons_set_custom_icon
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CD1C5D
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	purple_buddy_icons_node_set_custom_icon
call	__stack_chk_fail
align 4
public _purple_buddy_icon_set_old_icons_dir
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	ds:dword_67D72068, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD1C93
add	esp, 2Ch
retn
call	__stack_chk_fail
public _purple_buddy_icons_account_loaded_cb
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D72060
mov	[esp+4Ch+var_30], eax
call	purple_accounts_get_all
mov	ebx, eax
test	eax, eax
jnz	short loc_67CD1CEB
jmp	loc_67CD1D44
align 4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], esi
call	purple_account_set_string
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD1D44
mov	esi, [ebx]
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aBuddy_icon 
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_string
mov	ebp, eax
test	eax, eax
jz	short loc_67CD1CE4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	edi, eax
mov	[esp+4Ch+var_48], 10h
mov	[esp+4Ch+var_4C], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CD1CC4
mov	eax, ebp
call	sub_67CCFEF4
jmp	short loc_67CD1CDC
align 4
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD1D58
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public _purple_buddy_icons_blist_loaded_cb
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
call	purple_blist_get_root
mov	ebx, eax
mov	edi, ds:dword_67D72060
mov	eax, ds:dword_67D72068
test	eax, eax
jz	loc_67CD1E6A
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], edi
call	g_file_test_utf8
test	eax, eax
jnz	loc_67CD1E6A
mov	[esp+3Ch+var_38], offset aCreatingIconCa 
mov	[esp+3Ch+var_3C], offset aBuddyicon_0 
call	purple_debug_info
mov	[esp+3Ch+var_38], 1C0h
mov	[esp+3Ch+var_3C], edi
call	g_mkdir
test	eax, eax
jns	loc_67CD1E6A
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aUnableToCrea_0 
mov	[esp+3Ch+var_3C], offset aBuddyicon_0 
call	purple_debug_error
jmp	short loc_67CD1E6A
align 10h
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
dec	eax
jz	short loc_67CD1E24
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
cmp	eax, 3
jz	short loc_67CD1E24
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
test	eax, eax
jnz	short loc_67CD1E58
			
mov	[esp+3Ch+var_38], offset aCustom_buddy_i 
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_string
mov	esi, eax
test	eax, eax
jz	short loc_67CD1E58
mov	eax, ds:dword_67D72068
test	eax, eax
jz	loc_67CD1ECC
mov	[esp+3Ch+var_3C], esi
mov	ecx, edi
mov	edx, offset aCustom_buddy_i 
mov	eax, ebx
call	sub_67CCFF74
			
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_next
mov	ebx, eax
			
test	ebx, ebx
jz	short loc_67CD1EB4
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_type
cmp	eax, 2
jnz	short loc_67CD1E00
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_get_string
mov	esi, eax
test	eax, eax
jz	short loc_67CD1E58
mov	eax, ds:dword_67D72068
test	eax, eax
jz	loc_67CD1F20
mov	[esp+3Ch+var_3C], esi
mov	ecx, edi
mov	edx, offset aBuddy_icon	
mov	eax, ebx
call	sub_67CCFF74
jmp	short loc_67CD1E58
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD1F6C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	g_build_filename
mov	ebp, eax
mov	[esp+3Ch+var_38], 10h
mov	[esp+3Ch+var_3C], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CD1F0C
mov	eax, esi
call	sub_67CCFEF4
			
mov	[esp+3Ch+var_3C], ebp
call	g_free
jmp	loc_67CD1E58
align 4
mov	[esp+3Ch+var_38], offset aCustom_buddy_i 
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_remove_setting
jmp	short loc_67CD1EFD
align 10h
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	g_build_filename
mov	ebp, eax
mov	[esp+3Ch+var_38], 10h
mov	[esp+3Ch+var_3C], eax
call	g_file_test_utf8
test	eax, eax
jnz	short loc_67CD1EF6
mov	[esp+3Ch+var_38], offset aBuddy_icon 
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_remove_setting
mov	[esp+3Ch+var_38], offset aIcon_checksum	
mov	[esp+3Ch+var_3C], ebx
call	purple_blist_node_remove_setting
jmp	short loc_67CD1EFD
call	__stack_chk_fail
align 4
public purple_buddy_icons_set_caching
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	dword_67D30000,	eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD1F9B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_buddy_icons_is_caching
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, dword_67D30000
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD1FC3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_buddy_icons_set_cache_dir
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD200C
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	ds:dword_67D72060, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD202A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aDirNull 
mov	[esp+2Ch+var_28], offset aPurple_budd_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD1FF9
call	__stack_chk_fail
align 10h
public purple_buddy_icons_get_cache_dir
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72060
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2053
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_buddy_icons_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7206C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD207B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_buddy_icons_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_30], offset g_hash_table_destroy
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset loc_67D2EBBC
mov	[esp+3Ch+var_3C], offset g_direct_hash
call	g_hash_table_new_full
mov	ds:dword_67D72054, eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D7205C, eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72058, eax
mov	[esp+3Ch+var_38], offset loc_67D2EBBC
mov	[esp+3Ch+var_3C], offset g_direct_hash
call	g_hash_table_new
mov	ds:dword_67D72064, eax
mov	eax, ds:dword_67D72060
test	eax, eax
jz	loc_67CD216C
call	purple_imgstore_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset loc_67CD04B0
mov	[esp+3Ch+var_34], offset dword_67D7206C
mov	[esp+3Ch+var_38], offset aImageDeleting	
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2190
add	esp, 3Ch
retn
call	purple_user_dir
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset aIcons_0 
mov	[esp+3Ch+var_3C], eax
call	g_build_filename
mov	ds:dword_67D72060, eax
jmp	short loc_67CD212F
call	__stack_chk_fail
align 4
public purple_buddy_icons_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D7206C
call	purple_signals_disconnect_by_handle
mov	eax, ds:dword_67D72054
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D7205C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72058
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72064
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72068
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D72060
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_67D72060, 0
mov	ds:dword_67D72068, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2224
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_buddy_icon_get_scale_size
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [edi]
mov	ebx, [esi]
mov	ecx, [ebp+4]
cmp	eax, ecx
jl	short loc_67CD2262
mov	edx, [ebp+0Ch]
mov	ecx, eax
cmp	eax, edx
jg	loc_67CD22E4
			
mov	edx, [ebp+8]
cmp	ebx, edx
jl	short loc_67CD2272
mov	ebp, [ebp+10h]
mov	edx, ebx
cmp	ebx, ebp
jg	short loc_67CD22E0
			
mov	[esp+3Ch+var_34], ebx
fild	[esp+3Ch+var_34]
fld	st
push	ecx
fimul	[esp+40h+var_40]
mov	[esp+40h+var_34], eax
fild	[esp+40h+var_34]
fld	st
mov	[esp+40h+var_40], edx
fimul	[esp+40h+var_40]
fxch	st(2)
pop	eax
fucom	st(2)
fnstsw	ax
test	ah, 45h
jz	short loc_67CD22EC
fstp	st(2)
fstp	st(2)
fdivrp	st(1), st
fadd	ds:flt_67D33FC4
fnstcw	[esp+3Ch+var_2E]
mov	ax, [esp+3Ch+var_2E]
mov	ah, 0Ch
mov	[esp+3Ch+var_30], ax
fldcw	[esp+3Ch+var_30]
fistp	[esp+3Ch+var_34]
fldcw	[esp+3Ch+var_2E]
mov	edx, [esp+3Ch+var_34]
mov	[edi], ecx
mov	[esi], edx
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD231A
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, ebp
jmp	short loc_67CD2272
mov	ecx, edx
jmp	loc_67CD2262
align 4
fstp	st
fstp	st
fdivrp	st(1), st
fadd	ds:flt_67D33FC4
fnstcw	[esp+3Ch+var_2E]
mov	ax, [esp+3Ch+var_2E]
mov	ah, 0Ch
mov	[esp+3Ch+var_30], ax
fldcw	[esp+3Ch+var_30]
fistp	[esp+3Ch+var_34]
fldcw	[esp+3Ch+var_2E]
mov	ecx, [esp+3Ch+var_34]
jmp	short loc_67CD22C8
call	__stack_chk_fail
align 10h
public purple_certificate_destroy
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD2354
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2364
mov	edx, [eax]
mov	[esp+1Ch+arg_0], eax
mov	eax, [edx+14h]
add	esp, 1Ch
jmp	eax
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2364
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD238A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
			
sub	esp, 2Ch
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, eax
xor	ecx, 8
or	ecx, edx
jnz	short loc_67CD23D0
mov	[esp+2Ch+var_28], offset aTheCertificate 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD2504
add	esp, 2Ch
retn
cmp	edx, 0
jle	short loc_67CD242C
mov	ecx, eax
xor	ecx, 20h
or	ecx, edx
jnz	short loc_67CD23F4
mov	[esp+2Ch+var_28], offset aYouHaveNoDatab 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	short loc_67CD23BC
cmp	edx, 0
jle	loc_67CD24C0
mov	ecx, eax
xor	ecx, 10000h
or	ecx, edx
jz	loc_67CD24A4
xor	eax, 20000h
or	eax, edx
jnz	short loc_67CD246C
mov	[esp+2Ch+var_28], offset aTheCertifica_0 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	short loc_67CD23BC
jl	short loc_67CD2433
cmp	eax, 8
ja	short loc_67CD23D5
mov	ecx, eax
xor	ecx, 2
or	ecx, edx
jz	short loc_67CD2488
mov	ecx, eax
xor	ecx, 4
or	ecx, edx
jz	loc_67CD24EB
xor	eax, 1
or	eax, edx
jnz	short loc_67CD246C
mov	[esp+2Ch+var_28], offset aTheCertifica_1 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
align 4
			
mov	[esp+2Ch+var_28], offset aAnUnknownCerti 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
align 4
mov	[esp+2Ch+var_28], offset aTheCertifica_2 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
align 4
mov	[esp+2Ch+var_28], offset aTheCertifica_3 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
align 10h
jl	short loc_67CD24CB
cmp	eax, 20h
ja	loc_67CD23FD
xor	eax, 10h
or	eax, edx
jnz	short loc_67CD246C
mov	[esp+2Ch+var_28], offset aTheCertifica_4 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
mov	[esp+2Ch+var_28], offset aTheCertifica_5 
mov	[esp+2Ch+var_2C], offset aPidgin_1 
call	libintl_dgettext
jmp	loc_67CD23BC
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD2542
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CD253A
mov	edx, [eax]
mov	[esp+2Ch+var_2C], eax
call	dword ptr [edx+14h]
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2553
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72070
test	ebx, ebx
jz	short loc_67CD25E8
lea	esi, [esi+0]
mov	eax, [ebx]
call	sub_67CD250C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD2574
mov	eax, ds:dword_67D72070
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	ds:dword_67D72070, 0
mov	ds:dword_67D72074, 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	eax, ds:dword_67D72078
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, ds:dword_67D72078
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	ds:dword_67D72078, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD25EC
add	esp, 28h
pop	ebx
retn
xor	eax, eax
jmp	short loc_67CD2587
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	esi, [ebx+8]
mov	[esp+7Ch+var_78], offset aAcceptCertific 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+var_78], offset a_viewCertifica 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aReject 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aAccept 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_7C], 8
call	g_malloc0
mov	esi, eax
mov	[eax], ebx
mov	[esp+7Ch+var_7C], ebp
call	g_strdup
mov	[esi+4], eax
mov	[esp+7Ch+var_78], offset aSslCertificate 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_40], offset loc_67CD653C
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_44], ecx
mov	[esp+7Ch+var_48], offset sub_67CD5710
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_4C], edx
mov	[esp+7Ch+var_50], offset sub_67CD5744
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 3
mov	[esp+7Ch+var_5C], esi
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], ebp
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+18h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_action
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2735
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ebx, eax
test	eax, eax
jnz	short loc_67CD275F
jmp	short loc_67CD2788
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD2788
mov	esi, [ebx]
mov	eax, [esi]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_strequal
test	eax, eax
jz	short loc_67CD2758
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD278C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	esi, esi
jmp	short loc_67CD2773
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
test	eax, eax
jz	short loc_67CD27BC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD27DA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aVrq 
mov	[esp+2Ch+var_28], offset aX509_tls_cache 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD27AA
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD281C
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD283A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aC 
mov	[esp+2Ch+var_28], offset aX509_tls_cac_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2808
call	__stack_chk_fail
align 10h
public purple_certificate_unregister_verifier
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD28A0
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7207C
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D7207C, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCertificatever 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD28B8
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_28], offset aAttemptingToUn 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD288D
call	__stack_chk_fail
align 10h
public purple_certificate_unregister_pool
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD2964
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72080
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	loc_67CD297C
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CD28FD
call	eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72080
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72080, eax
mov	[esp+2Ch+var_28], offset aCertificateSto 
mov	[esp+2Ch+var_2C], ebx
call	purple_signal_unregister
mov	[esp+2Ch+var_28], offset aCertificateDel 
mov	[esp+2Ch+var_2C], ebx
call	purple_signal_unregister
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCertificatepoo 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2994
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_28], offset aAttemptingTo_0 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD2953
mov	[esp+2Ch+var_28], offset aPoolToUnregist 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD2953
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD29F0
test	edx, edx
jz	short loc_67CD2A10
mov	ecx, [eax+4]
cmp	ecx, [edx+4]
jz	short loc_67CD29D0
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2A30
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+Size],	ecx 
mov	edx, [edx]
mov	[esp+2Ch+Buf2],	edx 
mov	eax, [eax]
mov	[esp+2Ch+Buf1],	eax 
call	memcmp
test	eax, eax
jnz	short loc_67CD29BB
mov	eax, 1
jmp	short loc_67CD29BD
align 10h
mov	[esp+2Ch+Size],	offset aArray1Null 
mov	[esp+2Ch+Buf2],	offset aByte_arrays_eq 
mov	[esp+2Ch+Buf1],	0
call	g_return_if_fail_warning
jmp	short loc_67CD29BB
align 10h
mov	[esp+2Ch+Size],	offset aArray2Null 
mov	[esp+2Ch+Buf2],	offset aByte_arrays_eq 
mov	[esp+2Ch+Buf1],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD29BD
call	__stack_chk_fail
align 4
public purple_certificate_copy
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD2A74
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD2AA4
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_67CD2AC4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD2AE2
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certifi 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD2AE2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certifi 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2A90
align 4
mov	[esp+2Ch+var_24], offset aCrtSchemeCopy_ 
mov	[esp+2Ch+var_28], offset aPurple_certifi 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2A90
			
call	__stack_chk_fail
align 4
public purple_certificate_copy_list
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_list_copy
mov	esi, eax
mov	ebx, eax
test	eax, eax
jz	short loc_67CD2B1F
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	purple_certificate_copy
mov	[ebx], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD2B0C
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2B33
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public purple_certificate_destroy_list
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, esi
test	esi, esi
jz	short loc_67CD2B69
xchg	ax, ax
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CD2B62
mov	edx, [eax]
mov	[esp+2Ch+var_2C], eax
call	dword ptr [edx+14h]
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD2B54
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2B83
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_free
call	__stack_chk_fail
public purple_certificate_verify_complete
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD2C30
cmp	esi, 1
jz	short loc_67CD2C10
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aFailedToVerify 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_error
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	dword ptr [ebx+14h]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], ebx
call	dword ptr [eax+0Ch]
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_destroy_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2C5E
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 10h
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSuccessfullyVe 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
jmp	short loc_67CD2BC8
align 10h
mov	[esp+2Ch+var_24], offset aVrq 
mov	[esp+2Ch+var_28], offset aPurple_certi_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2C5E
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD2CE8
mov	[esp+2Ch+var_20], esi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aVrqOnCertFromS 
mov	[esp+2Ch+var_2C], offset aCertificateX50 
call	purple_debug_info
dec	esi
jz	short loc_67CD2CC4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2D16
mov	[esp+2Ch+arg_4], 0
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_certificate_verify_complete
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2D16
mov	[esp+2Ch+arg_4], 1
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_certificate_verify_complete
align 4
mov	[esp+2Ch+var_24], offset aVrq 
mov	[esp+2Ch+var_28], offset aX509_singleuse 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD2D16
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_certificate_signed_by
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD2D80
test	edx, edx
jz	short loc_67CD2DA0
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_67CD2DC0
mov	ebx, [edx]
cmp	ebx, ecx
jz	loc_67CD2DE0
mov	[esp+2Ch+var_24], offset aIssuerSchemeSc 
mov	[esp+2Ch+var_28], offset aPurple_certi_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD2DFD
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2D68
align 10h
mov	[esp+2Ch+var_24], offset aIssuer 
mov	[esp+2Ch+var_28], offset aPurple_certi_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2D68
align 10h
mov	[esp+2Ch+var_24], offset aScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2D68
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD2DFD
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
mov	eax, [ebx+18h]
add	esp, 28h
pop	ebx
jmp	eax
			
call	__stack_chk_fail
align 4
public purple_certificate_import
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD2E40
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CD2E70
test	edx, edx
jz	short loc_67CD2E90
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD2EAE
mov	[esp+2Ch+arg_0], edx
add	esp, 2Ch
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2EAE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aSchemeImport_c 
mov	[esp+2Ch+var_28], offset aPurple_certi_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2E5C
align 10h
mov	[esp+2Ch+var_24], offset aFilename 
mov	[esp+2Ch+var_28], offset aPurple_certi_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2E5C
			
call	__stack_chk_fail
align 4
public purple_certificates_import
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD2EF0
mov	eax, [eax+34h]
test	eax, eax
jz	short loc_67CD2F20
test	edx, edx
jz	short loc_67CD2F40
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD2F5E
mov	[esp+2Ch+arg_0], edx
add	esp, 2Ch
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD2F5E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aSchemeImport_0 
mov	[esp+2Ch+var_28], offset aPurple_certi_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2F0C
align 10h
mov	[esp+2Ch+var_24], offset aFilename 
mov	[esp+2Ch+var_28], offset aPurple_certi_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2F0C
			
call	__stack_chk_fail
align 4
public purple_certificate_export
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	short loc_67CD2FB4
test	eax, eax
jz	short loc_67CD2FE4
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_67CD3004
mov	ecx, [ecx+0Ch]
test	ecx, ecx
jz	loc_67CD3024
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CD3042
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], edx
add	esp, 28h
pop	ebx
jmp	ecx
align 4
mov	[esp+2Ch+var_24], offset aFilename 
mov	[esp+2Ch+var_28], offset aPurple_certi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CD3042
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2FD0
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2FD0
align 4
mov	[esp+2Ch+var_24], offset aSchemeExport_c 
mov	[esp+2Ch+var_28], offset aPurple_certi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD2FD0
			
call	__stack_chk_fail
align 4
public purple_certificate_get_fingerprint_sha1
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD3084
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD30B4
mov	edx, [edx+1Ch]
test	edx, edx
jz	short loc_67CD30D4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD30F2
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD30F2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD30A0
align 4
mov	[esp+2Ch+var_24], offset aSchemeGet_fing 
mov	[esp+2Ch+var_28], offset aPurple_certi_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD30A0
			
call	__stack_chk_fail
align 4
public purple_certificate_get_unique_id
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD3134
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD3164
mov	edx, [edx+20h]
test	edx, edx
jz	short loc_67CD3184
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD31A2
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD31A2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3150
align 4
mov	[esp+2Ch+var_24], offset aCrtSchemeGet_u 
mov	[esp+2Ch+var_28], offset aPurple_certi_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3150
			
call	__stack_chk_fail
align 4
public purple_certificate_get_issuer_unique_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD31E4
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD3214
mov	edx, [edx+24h]
test	edx, edx
jz	short loc_67CD3234
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3252
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3252
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3200
align 4
mov	[esp+2Ch+var_24], offset aCrtSchemeGet_i 
mov	[esp+2Ch+var_28], offset aPurple_certi_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3200
			
call	__stack_chk_fail
align 4
public purple_certificate_get_subject_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD3294
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD32C4
mov	edx, [edx+28h]
test	edx, edx
jz	short loc_67CD32E4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3302
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3302
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD32B0
align 4
mov	[esp+2Ch+var_24], offset aSchemeGet_subj 
mov	[esp+2Ch+var_28], offset aPurple_certi_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD32B0
			
call	__stack_chk_fail
align 4
public purple_certificate_check_subject_name
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD3358
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_67CD3388
test	edx, edx
jz	short loc_67CD33A8
mov	ecx, [ecx+2Ch]
test	ecx, ecx
jz	loc_67CD33C8
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CD33E6
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	ecx
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_certi_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CD33E6
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aPurple_certi_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3374
align 4
mov	[esp+2Ch+var_24], offset aName_1 
mov	[esp+2Ch+var_28], offset aPurple_certi_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3374
align 4
mov	[esp+2Ch+var_24], offset aSchemeCheck_su 
mov	[esp+2Ch+var_28], offset aPurple_certi_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3374
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+0Ch]
mov	esi, [eax]
mov	[esp+7Ch+var_7C], esi
call	purple_certificate_get_fingerprint_sha1
mov	ebx, eax
mov	eax, [eax+4]
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx]
mov	[esp+7Ch+var_7C], eax
call	purple_base16_encode_chunked
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_7C], esi
call	purple_certificate_get_subject_name
mov	[esp+7Ch+var_38], eax
mov	eax, [ebp+8]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_certificate_check_subject_name
test	eax, eax
jz	loc_67CD359C
mov	esi, offset byte_67D345A3
mov	edi, [ebp+8]
mov	[esp+7Ch+var_78], offset aSHasPresentedT 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+var_78], offset aCommonNameSSFi 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_70], edx
mov	[esp+7Ch+var_74], esi
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+var_78], offset a_cancel 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_34], eax
mov	[esp+7Ch+var_78], offset a_accept 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aSingleUseCerti 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset sub_67CD2C64
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_4C], edx
mov	[esp+7Ch+var_50], offset sub_67CD2C64
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], ebp
mov	[esp+7Ch+var_60], 0
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], 0
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], eax
mov	eax, [ebp+18h]
mov	[esp+7Ch+var_7C], eax
call	purple_request_action
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], ebx
call	g_byte_array_free
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD35B7
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_78], offset aDoesNotMatch 
mov	[esp+7Ch+var_7C], offset aPidgin_1 
call	libintl_dgettext
mov	esi, eax
jmp	loc_67CD3451
call	__stack_chk_fail
public purple_certificate_get_times
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD3610
mov	ecx, [eax]
test	ecx, ecx
jz	short loc_67CD3640
test	edx, edx
jz	short loc_67CD3660
mov	esi, [esp+2Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	loc_67CD3682
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
mov	eax, [ecx+30h]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aPurple_cert_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	esi, [esp+2Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CD3682
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aScheme 
mov	[esp+2Ch+var_28], offset aPurple_cert_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD362C
align 10h
test	ebx, ebx
jnz	short loc_67CD35E7
mov	[esp+2Ch+var_24], offset aActivationNull 
mov	[esp+2Ch+var_28], offset aPurple_cert_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD362C
			
call	__stack_chk_fail
align 4
public purple_certificate_check_signature_chain_with_failing
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD389C
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	short loc_67CD36C0
mov	edx, [esp+4Ch+var_30]
mov	dword ptr [edx], 0
mov	eax, [ebx]
mov	[esp+4Ch+Time],	eax
call	purple_certificate_get_unique_id
mov	esi, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aCheckingSignat 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_info
mov	[esp+4Ch+Time],	esi
call	g_free
mov	esi, [ebx+4]
test	esi, esi
jz	loc_67CD38C0
mov	[esp+4Ch+Time],	0 
call	time
mov	ebp, eax
mov	edx, [ebx]
mov	[esp+4Ch+var_34], edx
mov	esi, [ebx+4]
test	esi, esi
jnz	short loc_67CD376F
jmp	loc_67CD37E4
align 4
cmp	ebp, [esp+4Ch+var_28]
jl	loc_67CD3800
cmp	ebp, [esp+4Ch+var_24]
jg	loc_67CD3834
mov	[esp+4Ch+var_48], ebx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+Time],	edx
call	purple_certificate_signed_by
mov	[esp+4Ch+var_44], edi
test	eax, eax
jz	loc_67CD3864
mov	[esp+4Ch+var_48], offset a___goodSignatu 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_info
mov	[esp+4Ch+Time],	edi
call	g_free
mov	esi, [esi+4]
mov	[esp+4Ch+var_34], ebx
test	esi, esi
jz	short loc_67CD37E4
mov	ebx, [esi]
mov	[esp+4Ch+Time],	ebx
call	purple_certificate_get_unique_id
mov	edi, eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_44], eax
lea	edx, [esp+4Ch+var_28]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	ebx
call	purple_certificate_get_times
test	eax, eax
jnz	short loc_67CD3718
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset a___failedToGet 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_error
			
mov	ebx, [esp+4Ch+var_30]
test	ebx, ebx
jz	short loc_67CD37C1
mov	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
mov	[esp+4Ch+Time],	edi
call	g_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD38E5
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+4Ch+var_48], offset aChainIsValid 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_info
mov	eax, 1
jmp	short loc_67CD37CB
align 10h
cmp	ebp, [esp+4Ch+var_24]
jg	short loc_67CD3834
lea	edx, [esp+4Ch+var_28]
mov	[esp+4Ch+Time],	edx 
call	ctime
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset a___notYetActiv 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_error
jmp	loc_67CD37AF
align 4
			
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Time],	eax 
call	ctime
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset a___issuerSExpi 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_error
jmp	loc_67CD37AF
align 4
mov	[esp+4Ch+var_48], offset a___badOrMissin 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_error
mov	[esp+4Ch+Time],	edi
call	g_free
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	short loc_67CD38DE
mov	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_30]
mov	[edx], eax
xor	eax, eax
jmp	loc_67CD37CB
align 4
mov	[esp+4Ch+var_44], offset aChain	
mov	[esp+4Ch+var_48], offset aPurple_cert_11 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD37CB
align 10h
mov	[esp+4Ch+var_48], offset a___singleton_W 
mov	[esp+4Ch+Time],	offset aCertificate 
call	purple_debug_info
mov	eax, 1
jmp	loc_67CD37CB
xor	eax, eax
jmp	loc_67CD37CB
call	__stack_chk_fail
align 4
public purple_certificate_check_signature_chain
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_check_signature_chain_with_failing
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD391E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_certificate_pool_mkpath
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD39FC
mov	eax, [ebx]
test	eax, eax
jz	loc_67CD3A1C
mov	edi, [ebx+4]
test	edi, edi
jz	loc_67CD3A3C
mov	[esp+5Ch+var_5C], eax
call	purple_escape_filename
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_5C], eax
call	purple_escape_filename
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	edi, eax
test	ebp, ebp
jz	short loc_67CD39F8
mov	[esp+5Ch+var_5C], ebp
call	purple_escape_filename
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	ebx, eax
call	purple_user_dir
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aCertificates 
mov	[esp+5Ch+var_5C], eax
call	g_build_filename
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_30], eax
call	g_free
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, [esp+5Ch+var_30]
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3A5C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	ebx, ebx
jmp	short loc_67CD3998
mov	[esp+5Ch+var_54], offset aPool 
mov	[esp+5Ch+var_58], offset aPurple_cert_12 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD39E1
mov	[esp+5Ch+var_54], offset aPoolScheme_nam 
mov	[esp+5Ch+var_58], offset aPurple_cert_12 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD39E1
mov	[esp+5Ch+var_54], offset aPoolName 
mov	[esp+5Ch+var_58], offset aPurple_cert_12 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD39E1
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+88h+var_6C], eax
xor	eax, eax
mov	[esp+88h+var_84], 0
mov	[esp+88h+var_88], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	ebx, eax
mov	[esp+88h+var_80], 0
mov	[esp+88h+var_84], 0
mov	[esp+88h+var_88], eax
call	g_dir_open_utf8
mov	esi, eax
mov	[esp+88h+var_88], ebx
call	g_free
test	esi, esi
jz	short loc_67CD3AFC
xor	ebx, ebx
jmp	short loc_67CD3AD2
mov	[esp+88h+var_88], eax
call	purple_unescape_filename
mov	[esp+88h+var_88], eax
call	g_strdup
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], ebx
call	g_list_prepend
mov	ebx, eax
mov	[esp+88h+var_88], esi
call	g_dir_read_name_utf8
test	eax, eax
jnz	short loc_67CD3AB4
mov	[esp+88h+var_88], esi
call	g_dir_close
mov	eax, ebx
mov	edx, [esp+88h+var_6C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3B1C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+88h+var_80], offset aDir 
mov	[esp+88h+var_84], offset aX509_tls_peers 
mov	[esp+88h+var_88], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CD3AE6
call	__stack_chk_fail
align 4
			
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD3B80
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	ebx, eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	g_file_test_utf8
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3BA0
add	esp, 38h
pop	ebx
retn
align 10h
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aX509_tls_pee_0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD3B6E
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD3C50
mov	[esp+3Ch+Filename], ebx
call	sub_67CD3B24
test	eax, eax
jz	short loc_67CD3C18
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Filename], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	esi, eax
mov	[esp+3Ch+Filename], eax	
call	_unlink
test	eax, eax
jnz	short loc_67CD3C34
mov	eax, 1
mov	[esp+3Ch+Filename], esi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3C70
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aIdSWasnTInTheP 
mov	[esp+3Ch+Filename], offset aCertificateTls 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD3C03
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aUnlinkOfSFaile 
mov	[esp+3Ch+Filename], offset aCertificateTls 
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CD3BF3
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aX509_tls_pee_1 
mov	[esp+3Ch+Filename], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD3C03
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	ebx, eax
mov	[esp+2Ch+var_28], 1C0h
mov	[esp+2Ch+var_2C], eax
call	purple_build_dir
test	eax, eax
jz	short loc_67CD3CC9
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aCouldNotCreate 
mov	[esp+2Ch+var_2C], offset aCertificateTls 
call	purple_debug_info
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3CE7
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_certificate_pool_contains
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD3D28
test	edx, edx
jz	short loc_67CD3D58
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67CD3D78
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3D96
mov	[esp+2Ch+arg_0], edx
add	esp, 2Ch
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aPool 
mov	[esp+2Ch+var_28], offset aPurple_cert_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3D96
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aId_0 
mov	[esp+2Ch+var_28], offset aPurple_cert_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3D44
align 4
mov	[esp+2Ch+var_24], offset aPoolCert_in_po 
mov	[esp+2Ch+var_28], offset aPurple_cert_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3D44
			
call	__stack_chk_fail
align 4
public purple_certificate_pool_retrieve
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD3DD8
test	edx, edx
jz	short loc_67CD3E08
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_67CD3E28
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD3E46
mov	[esp+2Ch+arg_0], edx
add	esp, 2Ch
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aPool 
mov	[esp+2Ch+var_28], offset aPurple_cert_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD3E46
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aId_0 
mov	[esp+2Ch+var_28], offset aPurple_cert_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3DF4
align 4
mov	[esp+2Ch+var_24], offset aPoolGet_cert 
mov	[esp+2Ch+var_28], offset aPurple_cert_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD3DF4
			
call	__stack_chk_fail
align 4
public purple_certificate_pool_store
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD3F00
test	esi, esi
jz	loc_67CD3F20
mov	eax, [ebx+20h]
test	eax, eax
jz	loc_67CD3F44
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_67CD3ED0
mov	[esp+3Ch+var_34], offset aG_ascii_strcas 
mov	[esp+3Ch+var_38], offset aPurple_cert_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD3F67
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	dword ptr [ebx+20h]
test	eax, eax
jz	short loc_67CD3EB8
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aCertificateSto 
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	purple_signal_emit
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CD3EB8
mov	[esp+3Ch+var_34], offset aPool 
mov	[esp+3Ch+var_38], offset aPurple_cert_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD3EB8
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aPurple_cert_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD3EB8
align 4
mov	[esp+3Ch+var_34], offset aPoolPut_cert 
mov	[esp+3Ch+var_38], offset aPurple_cert_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD3EB8
call	__stack_chk_fail
public purple_certificate_pool_delete
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD3FDC
test	esi, esi
jz	short loc_67CD3FFC
mov	eax, [ebx+24h]
test	eax, eax
jz	loc_67CD401C
mov	[esp+3Ch+var_3C], esi
call	eax
test	eax, eax
jnz	short loc_67CD3FB8
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD403F
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aCertificateDel 
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	purple_signal_emit
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CD3FA0
align 4
mov	[esp+3Ch+var_34], offset aPool 
mov	[esp+3Ch+var_38], offset aPurple_cert_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD3FA0
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aPurple_cert_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD3FA0
mov	[esp+3Ch+var_34], offset aPoolDelete_cer 
mov	[esp+3Ch+var_38], offset aPurple_cert_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD3FA0
call	__stack_chk_fail
public purple_certificate_pool_get_idlist
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD4074
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CD40A4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD40C2
add	esp, 2Ch
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aPool 
mov	[esp+2Ch+var_28], offset aPurple_cert_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD40C2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPoolGet_idlist 
mov	[esp+2Ch+var_28], offset aPurple_cert_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD4090
			
call	__stack_chk_fail
align 4
public purple_certificate_pool_destroy_idlist
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, esi
test	esi, esi
jz	short loc_67CD40F5
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD40E4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD410F
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_free
call	__stack_chk_fail
public purple_certificate_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_certificate_unregister_verifier
mov	eax, ds:dword_67D7207C
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_certificate_unregister_pool
mov	eax, ds:dword_67D72080
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD416C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_certificate_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72084
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4197
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_certificate_find_scheme
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CD4210
mov	ebx, ds:dword_67D72088
test	ebx, ebx
jnz	short loc_67CD41CB
jmp	short loc_67CD41F4
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD41F4
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD41C4
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4230
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aCertificatesch 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_warning
xor	esi, esi
jmp	short loc_67CD41DF
mov	[esp+2Ch+var_24], offset aName_1 
mov	[esp+2Ch+var_28], offset aPurple_cert_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD41DF
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD42A0
mov	esi, [ebx]
test	esi, esi
jz	short loc_67CD42C0
mov	eax, off_67D30040
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_find_scheme
cmp	esi, eax
jz	short loc_67CD42E0
mov	[esp+2Ch+var_24], offset aCrtSchemePurpl 
mov	[esp+2Ch+var_28], offset aX509_ca_quiet_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD4343
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aX509_ca_quiet_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4284
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aX509_ca_quiet_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD4284
align 10h
mov	eax, [ebx]
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_67CD433C
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	esi, eax
test	eax, eax
jz	short loc_67CD4284
mov	[esp+2Ch+var_2C], 8
call	g_malloc0
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_certificate_get_unique_id
mov	[edi], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_certificate_copy
mov	[edi+4], eax
mov	[esp+2Ch+var_28], edi
mov	eax, ds:dword_67D72070
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ds:dword_67D72070, eax
jmp	loc_67CD4284
align 4
mov	esi, 1
jmp	short loc_67CD42FC
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D72074
test	eax, eax
jz	short loc_67CD4380
mov	eax, 1
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD45A3
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, off_67D30040
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_find_scheme
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_67CD4588
mov	[esp+5Ch+var_5C], offset a_pem 
call	g_pattern_spec_new
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_5C], offset a_crt 
call	g_pattern_spec_new
mov	[esp+5Ch+var_30], eax
mov	ebp, ds:dword_67D72078
test	ebp, ebp
jz	loc_67CD452B
nop
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	g_dir_open_utf8
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	loc_67CD456B
nop
			
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CD4514
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_pattern_match_string
test	eax, eax
jnz	short loc_67CD442E
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_pattern_match_string
test	eax, eax
jz	short loc_67CD43F0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	g_build_filename
mov	edi, eax
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	purple_certificates_import
mov	esi, eax
test	eax, eax
jz	loc_67CD44F8
mov	ebx, [eax]
test	ebx, ebx
jz	loc_67CD44F8
mov	[esp+5Ch+var_3C], ebp
jmp	short loc_67CD44CC
align 4
mov	[esp+5Ch+var_5C], ebx
call	purple_certificate_get_subject_name
mov	ebp, eax
test	eax, eax
jz	loc_67CD4508
mov	edx, eax
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aLoadedSFromS 
mov	[esp+5Ch+var_5C], offset aCertificateX_0 
call	purple_debug_info
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	eax, [ebx]
mov	[esp+5Ch+var_5C], ebx
call	dword ptr [eax+14h]
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], esi
call	g_slist_delete_link
mov	esi, eax
test	eax, eax
jz	short loc_67CD44F4
mov	ebx, [eax]
test	ebx, ebx
jz	short loc_67CD44F4
mov	eax, ebx
call	sub_67CD4238
test	eax, eax
jnz	short loc_67CD4474
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aFailedToLoadCe 
mov	[esp+5Ch+var_5C], offset aCertificateX_0 
call	purple_debug_error
jmp	short loc_67CD44AC
align 4
			
mov	ebp, [esp+5Ch+var_3C]
			
mov	[esp+5Ch+var_5C], edi
call	g_free
jmp	loc_67CD43F0
align 4
mov	edx, offset aUnknown_1 
jmp	loc_67CD4488
align 4
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_dir_close
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	loc_67CD43C8
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_pattern_spec_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_pattern_spec_free
mov	[esp+5Ch+var_58], offset aLazyInitComple 
mov	[esp+5Ch+var_5C], offset aCertificateX_0 
call	purple_debug_info
mov	ds:dword_67D72074, 1
mov	eax, 1
jmp	loc_67CD4368
mov	eax, [ebp+0]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aCouldnTOpenLoc 
mov	[esp+5Ch+var_5C], offset aCertificateX_0 
call	purple_debug_error
jmp	short loc_67CD4520
mov	[esp+5Ch+var_58], offset aLazyInitFailed 
mov	[esp+5Ch+var_5C], offset aCertificateX_0 
call	purple_debug_warning
xor	eax, eax
jmp	loc_67CD4368
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jz	short loc_67CD45F4
test	ebx, ebx
jz	short loc_67CD4624
mov	edx, ebx
mov	eax, ds:dword_67D72070
call	sub_67CD273C
test	eax, eax
jz	short loc_67CD4610
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4642
mov	eax, [eax+4]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_certificate_copy
mov	[esp+2Ch+var_24], offset aX509_ca_lazy_i 
mov	[esp+2Ch+var_28], offset aX509_ca_get_ce 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4642
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aId_0 
mov	[esp+2Ch+var_28], offset aX509_ca_get_ce 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD4610
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jz	short loc_67CD46A8
mov	ebx, ds:dword_67D72070
xor	esi, esi
test	ebx, ebx
jz	short loc_67CD4691
lea	esi, [esi+0]
mov	eax, [ebx]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD4670
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD46C8
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aX509_ca_lazy_i 
mov	[esp+2Ch+var_28], offset aX509_ca_get_id 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4691
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jz	short loc_67CD4738
test	esi, esi
jz	short loc_67CD4758
mov	edx, esi
mov	eax, ds:dword_67D72070
call	sub_67CD273C
mov	ebx, eax
test	eax, eax
jz	short loc_67CD4778
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72070
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72070, eax
mov	eax, ebx
call	sub_67CD250C
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4794
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aX509_ca_lazy_i 
mov	[esp+2Ch+var_28], offset aX509_ca_delete 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4725
mov	[esp+2Ch+var_24], offset aId_0 
mov	[esp+2Ch+var_28], offset aX509_ca_delete 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4725
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aIdSWasnTInTheP 
mov	[esp+2Ch+var_2C], offset aCertificateX_0 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD4725
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jz	short loc_67CD47E4
test	ebx, ebx
jz	short loc_67CD4804
mov	edx, ebx
mov	eax, ds:dword_67D72070
call	sub_67CD273C
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4824
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aX509_ca_lazy_i 
mov	[esp+2Ch+var_28], offset aX509_ca_cert_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD47D0
mov	[esp+2Ch+var_24], offset aId_0 
mov	[esp+2Ch+var_28], offset aX509_ca_cert_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD47D0
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72078
test	eax, eax
jz	short loc_67CD4878
call	sub_67CD4348
test	eax, eax
jnz	short loc_67CD4860
mov	[esp+2Ch+var_28], offset aInitFailedProb 
mov	[esp+2Ch+var_2C], offset aCertificateX_0 
call	purple_debug_info
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD48AC
add	esp, 2Ch
retn
align 4
call	wpurple_install_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aCaCerts 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 0
call	g_list_append
mov	ds:dword_67D72078, eax
jmp	short loc_67CD4843
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jz	loc_67CD4968
test	ebp, ebp
jz	loc_67CD4988
mov	ebx, ds:dword_67D72070
xor	edi, edi
test	ebx, ebx
jnz	short loc_67CD48F7
jmp	loc_67CD4984
align 10h
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD4920
			
mov	esi, [ebx]
mov	eax, [esi]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	purple_strequal
test	eax, eax
jz	short loc_67CD48F0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	g_slist_prepend
mov	edi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD48F7
test	edi, edi
jz	short loc_67CD4984
mov	ebx, edi
xor	esi, esi
mov	eax, [ebx]
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	purple_certificate_copy
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_slist_prepend
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CD4928
mov	[esp+3Ch+var_3C], edi
call	g_slist_free
			
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD49A8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aX509_ca_lazy_i 
mov	[esp+3Ch+var_38], offset aX509_ca_get__0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
			
xor	esi, esi
jmp	short loc_67CD4952
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aX509_ca_get__0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4952
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CD4348
test	eax, eax
jnz	short loc_67CD49FC
mov	[esp+2Ch+var_24], offset aX509_ca_lazy_i 
mov	[esp+2Ch+var_28], offset aX509_ca_put_ce 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4A13
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD4A13
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67CD4238
			
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD4A84
mov	esi, [ebx]
test	esi, esi
jz	short loc_67CD4AA4
mov	eax, off_67D30080
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_find_scheme
cmp	esi, eax
jz	short loc_67CD4AC4
mov	[esp+2Ch+var_24], offset aCrtSchemePur_0 
mov	[esp+2Ch+var_28], offset aX509_tls_pee_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD4B09
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aCrt 
mov	[esp+2Ch+var_28], offset aX509_tls_pee_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4A6A
mov	[esp+2Ch+var_24], offset aCrtScheme 
mov	[esp+2Ch+var_28], offset aX509_tls_pee_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD4A6A
align 4
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	edi, eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_export
mov	esi, eax
mov	eax, [ebx]
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_67CD4AFC
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	esi, eax
mov	[esp+2Ch+var_2C], edi
call	g_free
jmp	loc_67CD4A6A
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD4B8C
mov	[esp+3Ch+var_3C], ebx
call	sub_67CD3B24
test	eax, eax
jz	short loc_67CD4B88
mov	[esp+3Ch+var_3C], offset aX509 
call	purple_certificate_find_scheme
mov	esi, eax
test	eax, eax
jz	short loc_67CD4BAC
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], offset off_67D30080
call	purple_certificate_pool_mkpath
mov	edi, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	purple_certificate_import
mov	[esp+3Ch+var_3C], edi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4BCC
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
xor	eax, eax
jmp	short loc_67CD4B75
mov	[esp+3Ch+var_34], offset aId_0 
mov	[esp+3Ch+var_38], offset aX509_tls_pee_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4B75
mov	[esp+3Ch+var_34], offset aX509 
mov	[esp+3Ch+var_38], offset aX509_tls_pee_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4B75
call	__stack_chk_fail
align 4
public purple_certificate_pool_get_scheme
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD4C0C
mov	eax, [eax]
test	eax, eax
jz	short loc_67CD4C3C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4C5A
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_certificate_find_scheme
align 4
mov	[esp+2Ch+var_24], offset aPool 
mov	[esp+2Ch+var_28], offset aPurple_cert_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4C5A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPoolScheme_nam 
mov	[esp+2Ch+var_28], offset aPurple_cert_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD4C28
			
call	__stack_chk_fail
align 10h
public purple_certificate_pool_usable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD4CA0
mov	eax, [eax]
test	eax, eax
jz	short loc_67CD4CC0
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_find_scheme
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4CE0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPool 
mov	[esp+2Ch+var_28], offset aPurple_cert_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4C8D
mov	[esp+2Ch+var_24], offset aPoolScheme_nam 
mov	[esp+2Ch+var_28], offset aPurple_cert_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD4C8D
call	__stack_chk_fail
align 4
public purple_certificate_verify
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CD4D74
test	ebx, ebx
jz	short loc_67CD4D90
test	ebp, ebp
jz	loc_67CD4DAC
mov	eax, [edi]
mov	[esp+4Ch+var_4C], eax
call	purple_certificate_find_scheme
test	eax, eax
jz	loc_67CD4DC8
mov	edx, [ebx]
mov	edx, [edx]
cmp	edx, eax
jz	loc_67CD4DE4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD4E45
mov	[esp+4Ch+arg_8], offset	aSchemePurplece	
			
mov	[esp+4Ch+arg_4], offset	aPurple_cert_21	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD4E45
mov	[esp+4Ch+arg_8], offset	aSubject_nameNu	
jmp	short loc_67CD4D58
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD4E45
mov	[esp+4Ch+arg_8], offset	aCert_chainNull	
jmp	short loc_67CD4D58
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD4E45
mov	[esp+4Ch+arg_8], offset	aCbNull	
jmp	short loc_67CD4D58
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD4E45
mov	[esp+4Ch+arg_8], offset	aScheme	
jmp	loc_67CD4D58
align 4
mov	[esp+4Ch+var_4C], 1Ch
mov	[esp+4Ch+var_34], edx
call	g_malloc0
mov	[eax], edi
mov	edx, [esp+4Ch+var_34]
mov	[eax+4], edx
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_34], eax
call	g_strdup
mov	ecx, [esp+4Ch+var_34]
mov	[ecx+8], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_certificate_copy_list
mov	ecx, [esp+4Ch+var_34]
mov	[ecx+0Ch], eax
mov	[ecx+14h], ebp
mov	eax, [esp+4Ch+var_30]
mov	[ecx+18h], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD4E45
mov	[esp+4Ch+arg_0], ecx
mov	eax, [edi+8]
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
call	__stack_chk_fail
align 4
public purple_certificate_get_schemes
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72088
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4E6F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_certificate_register_scheme
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD4EB0
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_find_scheme
xor	edx, edx
test	eax, eax
jz	short loc_67CD4ED0
			
mov	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4F07
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aSchemeNull 
mov	[esp+2Ch+var_28], offset aPurple_cert_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	edx, edx
jmp	short loc_67CD4E9B
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72088
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ds:dword_67D72088, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCertificates_0 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
mov	edx, 1
jmp	short loc_67CD4E9B
call	__stack_chk_fail
public purple_certificate_unregister_scheme
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD4F6C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72088
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72088, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCertificates_1 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD4F84
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_28], offset aAttemptingTo_1 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD4F58
call	__stack_chk_fail
align 4
public purple_certificate_find_verifier
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CD5028
test	ebp, ebp
jz	loc_67CD5048
mov	ebx, ds:dword_67D7207C
test	ebx, ebx
jnz	short loc_67CD4FC7
jmp	short loc_67CD5008
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD5008
mov	esi, [ebx]
mov	[esp+3Ch+var_38], edi
mov	eax, [esi]
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD4FC0
mov	[esp+3Ch+var_38], ebp
mov	eax, [esi+4]
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD4FC0
xchg	ax, ax
			
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5068
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aCertificatev_0 
mov	[esp+3Ch+var_3C], offset aCertificate 
call	purple_debug_warning
xor	esi, esi
jmp	short loc_67CD4FF0
mov	[esp+3Ch+var_34], offset aScheme_name 
mov	[esp+3Ch+var_38], offset aPurple_cert_23 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4FF0
mov	[esp+3Ch+var_34], offset aVer_name 
mov	[esp+3Ch+var_38], offset aPurple_cert_23 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD4FF0
call	__stack_chk_fail
align 10h
public purple_certificate_get_verifiers
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7207C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5093
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_certificate_register_verifier
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD50DC
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_certificate_find_verifier
xor	edx, edx
test	eax, eax
jz	short loc_67CD50FC
			
mov	eax, edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5134
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aVrNull 
mov	[esp+2Ch+var_28], offset aPurple_cert_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	edx, edx
jmp	short loc_67CD50C6
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7207C
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ds:dword_67D7207C, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCertificatev_1 
mov	[esp+2Ch+var_2C], offset aCertificate 
call	purple_debug_info
mov	edx, 1
jmp	short loc_67CD50C6
call	__stack_chk_fail
align 4
public purple_certificate_find_pool
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CD51D8
test	ebp, ebp
jz	loc_67CD51F8
mov	ebx, ds:dword_67D72080
test	ebx, ebx
jnz	short loc_67CD5177
jmp	short loc_67CD51B8
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD51B8
mov	esi, [ebx]
mov	[esp+3Ch+var_38], edi
mov	eax, [esi]
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD5170
mov	[esp+3Ch+var_38], ebp
mov	eax, [esi+4]
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD5170
xchg	ax, ax
			
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5218
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aCertificatep_0 
mov	[esp+3Ch+var_3C], offset aCertificate 
call	purple_debug_warning
xor	esi, esi
jmp	short loc_67CD51A0
mov	[esp+3Ch+var_34], offset aScheme_name 
mov	[esp+3Ch+var_38], offset aPurple_cert_25 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD51A0
mov	[esp+3Ch+var_34], offset aPool_name 
mov	[esp+3Ch+var_38], offset aPurple_cert_25 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD51A0
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+0Ch]
mov	ebx, [eax]
test	edx, 0FFFF0000h
jz	loc_67CD5334
test	edx, 10000h
jnz	loc_67CD5490
and	esi, 20000h
jnz	loc_67CD547C
mov	[esp+5Ch+var_58], offset aAnUnknownCerti 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	edi, eax
			
mov	ebx, [ebp+8]
mov	[esp+5Ch+var_58], offset aTheCertifica_6 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset asc_67D34D63 
mov	[esp+5Ch+var_5C], eax
call	g_strconcat
mov	ebx, eax
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	[esp+5Ch+var_58], offset aUnableToValida 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aSslCertifica_0 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebp
call	purple_certificate_verify_complete
jmp	short loc_67CD5381
test	dx, dx
jnz	short loc_67CD539C
mov	[esp+5Ch+var_58], offset aTls_peers 
mov	eax, off_67D300C0
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_find_pool
test	eax, eax
jz	loc_67CD5548
mov	[esp+5Ch+var_54], ebx
mov	edx, [ebp+8]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_pool_store
test	eax, eax
jz	loc_67CD54C4
			
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebp
call	purple_certificate_verify_complete
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD5561
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, [ebp+8]
mov	[esp+5Ch+var_58], offset aTheCertifica_6 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_34], eax
call	g_string_new
mov	edi, eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	g_free
mov	edx, [edi+4]
lea	eax, [edx+1]
cmp	eax, [edi+8]
jnb	loc_67CD54A4
mov	ecx, [edi]
mov	byte ptr [ecx+edx], 0Ah
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
test	esi, 10h
jnz	loc_67CD5500
			
mov	ecx, 12h
mov	ebx, 1
mov	[esp+5Ch+var_30], ebp
mov	ebp, ecx
jmp	short loc_67CD541D
align 4
shl	ebx, 1
dec	ebp
jz	short loc_67CD5459
			
test	ebx, esi
jz	short loc_67CD5418
mov	edx, [edi+4]
lea	eax, [edx+1]
cmp	eax, [edi+8]
jnb	loc_67CD54E0
mov	ecx, [edi]
mov	byte ptr [ecx+edx], 0Ah
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
mov	eax, ebx
xor	edx, edx
call	sub_67CD2390
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	g_string_append
shl	ebx, 1
dec	ebp
jnz	short loc_67CD541D
mov	ebp, [esp+5Ch+var_30]
mov	edx, [edi]
mov	eax, ebp
call	sub_67CD25F4
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	g_string_free
jmp	loc_67CD5381
align 4
mov	eax, 20000h
xor	edx, edx
call	sub_67CD2390
mov	edi, eax
jmp	loc_67CD5275
align 10h
mov	eax, 10000h
xor	edx, edx
call	sub_67CD2390
mov	edi, eax
jmp	loc_67CD5275
align 4
mov	[esp+5Ch+var_54], 0Ah
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], edi
call	g_string_insert_c
jmp	loc_67CD53F7
align 4
mov	[esp+5Ch+var_58], offset aFailedToCacheP 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_error
jmp	loc_67CD5371
align 10h
mov	[esp+5Ch+var_54], 0Ah
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], edi
call	g_string_insert_c
jmp	loc_67CD543F
align 10h
mov	[esp+5Ch+var_5C], ebx
call	purple_certificate_get_subject_name
mov	ebx, eax
test	eax, eax
jz	loc_67CD5403
mov	[esp+5Ch+var_58], offset aTheCertifica_7 
mov	[esp+5Ch+var_5C], offset aPidgin_1 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	g_string_append_printf
mov	[esp+5Ch+var_5C], ebx
call	g_free
and	esi, 0FFFFFFEFh
jmp	loc_67CD5403
align 4
mov	[esp+5Ch+var_58], offset aUnableToLocate 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_error
jmp	loc_67CD5371
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+0Ch]
mov	edi, [eax]
mov	eax, [ebx+8]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
mov	[esp+3Ch+var_20], ecx
call	purple_certificate_check_subject_name
test	eax, eax
mov	ecx, [esp+3Ch+var_20]
jnz	short loc_67CD55D5
mov	[esp+3Ch+var_3C], edi
call	purple_certificate_get_subject_name
mov	edi, eax
or	esi, 10h
mov	[esp+3Ch+var_30], eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aNameMismatchCe 
mov	[esp+3Ch+var_3C], offset aCertificateX_1 
call	purple_debug_error
mov	[esp+3Ch+var_3C], edi
call	g_free
mov	ecx, [esp+3Ch+var_20]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD55F0
mov	edx, esi
mov	eax, ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CD5220
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67CD56C4
mov	ebx, [eax]
test	ebx, ebx
jz	loc_67CD56E8
call	sub_67CD27E0
mov	[esp+3Ch+var_38], offset aTls_peers 
mov	[esp+3Ch+var_3C], offset aX509 
call	purple_certificate_find_pool
cmp	esi, 2
jz	short loc_67CD5678
mov	[esp+3Ch+var_38], offset aUserRejectedCe 
mov	[esp+3Ch+var_3C], offset aCertificateX_1 
call	purple_debug_warning
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	purple_certificate_verify_complete
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD5709
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	esi, [ebx+8]
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aUserAcceptedCe 
mov	[esp+3Ch+var_3C], offset aCertificateX_1 
mov	[esp+3Ch+var_20], eax
call	purple_debug_info
mov	edx, [ebx+0Ch]
mov	edx, [edx]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], esi
mov	eax, [esp+3Ch+var_20]
mov	[esp+3Ch+var_3C], eax
call	purple_certificate_pool_store
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	purple_certificate_verify_complete
jmp	short loc_67CD565F
align 4
mov	[esp+3Ch+var_34], offset aC 
mov	[esp+3Ch+var_38], offset aX509_tls_cac_1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CD565F
align 4
mov	[esp+3Ch+var_34], offset aCVrq 
mov	[esp+3Ch+var_38], offset aX509_tls_cac_1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CD565F
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD573C
mov	edx, 1
add	esp, 1Ch
jmp	loc_67CD55F8
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5770
mov	edx, 2
add	esp, 1Ch
jmp	loc_67CD55F8
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_30], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	edi, [ebx+0Ch]
mov	esi, [edi]
mov	eax, [esi]
mov	eax, [eax+3Ch]
test	eax, eax
jz	short loc_67CD5804
call	sub_67CD4348
test	eax, eax
jz	short loc_67CD57E4
mov	eax, [esi]
lea	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebx
call	dword ptr [eax+3Ch]
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
mov	eax, ebx
call	sub_67CD5220
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD5B4C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], offset aX509_ca_lazy_i 
mov	[esp+5Ch+var_58], offset aX509_tls_cac_2 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD57CA
align 4
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], esi
call	purple_certificate_signed_by
test	eax, eax
jz	short loc_67CD584C
or	[esp+5Ch+var_34], 1
or	[esp+5Ch+var_30], 0
mov	eax, [ebx+8]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aCertificateFor 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_info
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
mov	eax, ebx
call	sub_67CD5568
jmp	short loc_67CD57CA
align 4
mov	[esp+5Ch+var_58], offset aCa 
mov	eax, off_67D300C0
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_find_pool
mov	esi, eax
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_certificate_check_signature_chain_with_failing
test	eax, eax
jnz	loc_67CD591C
test	esi, esi
jz	short loc_67CD58FE
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_get_unique_id
mov	edi, eax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_certificate_pool_retrieve
mov	esi, eax
test	eax, eax
jz	short loc_67CD58F6
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_get_fingerprint_sha1
mov	ebp, eax
mov	[esp+5Ch+var_5C], esi
call	purple_certificate_get_fingerprint_sha1
mov	[esp+5Ch+var_40], eax
mov	edx, eax
mov	eax, ebp
call	sub_67CD299C
test	eax, eax
jnz	loc_67CD5AC1
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebp
call	g_byte_array_free
mov	[esp+5Ch+var_58], 1
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_byte_array_free
mov	eax, [esi]
mov	[esp+5Ch+var_5C], esi
call	dword ptr [eax+14h]
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	edx, [esp+5Ch+var_34]
or	edx, 10000h
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_34], edx
			
mov	eax, ebx
call	sub_67CD5568
jmp	loc_67CD57CA
test	esi, esi
jz	loc_67CD5A92
mov	[esp+5Ch+var_5C], edi
call	g_list_last
mov	eax, [eax]
mov	[esp+5Ch+var_3C], eax
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_get_issuer_unique_id
mov	edi, eax
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_get_unique_id
mov	esi, eax
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aCheckingForACa 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_info
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aAlsoCheckingFo 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_info
mov	eax, esi
call	sub_67CD48B4
mov	edx, eax
mov	eax, edi
mov	[esp+5Ch+var_44], edx
call	sub_67CD48B4
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	g_slist_concat
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	eax, [esp+5Ch+var_38]
test	eax, eax
jz	loc_67CD5B1A
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	purple_certificate_get_fingerprint_sha1
mov	[esp+5Ch+var_40], eax
mov	esi, [esp+5Ch+var_38]
mov	ebp, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_3C], ebx
xchg	ax, ax
mov	ebx, [esi]
mov	[esp+5Ch+var_5C], ebx
call	purple_certificate_get_fingerprint_sha1
mov	edi, eax
mov	edx, eax
mov	eax, [esp+5Ch+var_40]
call	sub_67CD299C
test	eax, eax
jnz	loc_67CD5A7C
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], ebp
call	purple_certificate_signed_by
test	eax, eax
jnz	short loc_67CD5A7C
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	g_byte_array_free
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CD59DC
mov	ebx, [esp+5Ch+var_3C]
or	[esp+5Ch+var_34], 10000h
or	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset purple_certificate_destroy
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_slist_foreach
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], eax
call	g_slist_free
mov	[esp+5Ch+var_58], 1
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_byte_array_free
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
jmp	loc_67CD5910
			
mov	ebx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], edi
call	g_byte_array_free
jmp	short loc_67CD5A33
mov	[esp+5Ch+var_58], offset aNoX_509Certifi 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_error
mov	edx, [esp+5Ch+var_34]
or	edx, 20h
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_34], edx
mov	eax, ebx
call	sub_67CD5568
jmp	loc_67CD57CA
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aFullChainVerif 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_info
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebp
call	g_byte_array_free
mov	[esp+5Ch+var_58], 1
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	g_byte_array_free
mov	eax, [esi]
mov	[esp+5Ch+var_5C], esi
call	dword ptr [eax+14h]
mov	[esp+5Ch+var_5C], edi
call	g_free
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
jmp	loc_67CD5910
or	[esp+5Ch+var_34], 2
or	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_58], offset aNoCertificateA 
mov	[esp+5Ch+var_5C], offset aCertificateX_1 
call	purple_debug_warning
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
mov	eax, ebx
call	sub_67CD5568
jmp	loc_67CD57CA
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD5E28
mov	eax, [ebx+8]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aStartingVerify 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_info
mov	[esp+4Ch+Time],	0 
call	time
mov	esi, eax
lea	edi, [esp+4Ch+var_24]
mov	[esp+4Ch+Size],	edi
lea	ebp, [esp+4Ch+var_28]
mov	[esp+4Ch+Buf2],	ebp
mov	eax, [ebx+0Ch]
mov	eax, [eax]
mov	[esp+4Ch+Time],	eax
call	purple_certificate_get_times
test	eax, eax
jz	loc_67CD5D70
cmp	esi, [esp+4Ch+var_24]
jg	loc_67CD5D98
cmp	esi, [esp+4Ch+var_28]
jl	loc_67CD5DF4
xor	edx, edx
xor	ecx, ecx
			
mov	[esp+4Ch+Buf2],	offset aTls_peers 
mov	eax, off_67D300C0
mov	[esp+4Ch+Time],	eax
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_certificate_find_pool
mov	esi, eax
test	eax, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67CD5E4C
mov	[esp+4Ch+Buf2],	offset aCheckingForCac 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_debug_info
mov	eax, [ebx+8]
mov	[esp+4Ch+Buf2],	eax
mov	[esp+4Ch+Time],	esi
call	purple_certificate_pool_contains
test	eax, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67CD5D2C
mov	[esp+4Ch+Buf2],	offset a___foundCached 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_info
mov	[esp+4Ch+Buf2],	offset aTls_peers 
mov	eax, off_67D300C0
mov	[esp+4Ch+Time],	eax
call	purple_certificate_find_pool
mov	esi, [ebx+0Ch]
mov	esi, [esi]
mov	edi, [ebx+8]
mov	[esp+4Ch+Buf2],	edi
mov	[esp+4Ch+Time],	eax
call	purple_certificate_pool_retrieve
mov	edi, eax
test	eax, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67CD5E7C
mov	[esp+4Ch+Time],	esi
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_certificate_get_fingerprint_sha1
mov	esi, eax
mov	[esp+4Ch+Time],	edi
call	purple_certificate_get_fingerprint_sha1
mov	ebp, eax
mov	eax, [esi+4]
mov	[esp+4Ch+Size],	eax 
mov	eax, [ebp+0]
mov	[esp+4Ch+Buf2],	eax 
mov	eax, [esi]
mov	[esp+4Ch+Time],	eax 
call	memcmp
test	eax, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67CD5DCC
mov	[esp+4Ch+Buf2],	offset aPeerCertDidNot 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_debug_error
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
mov	eax, ebx
call	sub_67CD5778
mov	eax, [edi]
mov	[esp+4Ch+Time],	edi
call	dword ptr [eax+14h]
mov	[esp+4Ch+Buf2],	1
mov	[esp+4Ch+Time],	esi
call	g_byte_array_free
mov	[esp+4Ch+Buf2],	1
mov	[esp+4Ch+Time],	ebp
call	g_byte_array_free
jmp	short loc_67CD5D57
align 4
mov	[esp+4Ch+Buf2],	offset a___notInCache 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_debug_warning
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
mov	eax, ebx
call	sub_67CD5778
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CD5E90
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	eax, [ebx+8]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aFailedToGetVal 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_error
mov	edx, 0Ch
xor	ecx, ecx
jmp	loc_67CD5BD8
align 4
mov	[esp+4Ch+Time],	edi 
call	ctime
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+8]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aCertificateSEx 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_error
mov	edx, 8
xor	ecx, ecx
jmp	loc_67CD5BD8
align 4
mov	[esp+4Ch+Buf2],	offset aPeerCertMatche 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_info
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
mov	eax, ebx
call	sub_67CD5220
jmp	loc_67CD5D00
mov	[esp+4Ch+Time],	ebp 
call	ctime
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+8]
mov	[esp+4Ch+Size],	eax
mov	[esp+4Ch+Buf2],	offset aCertificateSIs 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_error
mov	edx, 4
xor	ecx, ecx
jmp	loc_67CD5BD8
align 4
mov	[esp+4Ch+Size],	offset aVrq 
mov	[esp+4Ch+Buf2],	offset aX509_tls_cac_3 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CD5D57
align 4
mov	[esp+4Ch+Size],	offset aTls_peers 
mov	[esp+4Ch+Buf2],	offset aCouldnTFindLoc 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
call	purple_debug_error
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
mov	eax, ebx
call	sub_67CD5778
jmp	loc_67CD5D57
mov	[esp+4Ch+Buf2],	offset aLookupFailedOn 
mov	[esp+4Ch+Time],	offset aCertificateX_1 
jmp	loc_67CD5D43
call	__stack_chk_fail
align 4
public purple_certificate_get_pools
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72080
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD5EBB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_certificate_register_pool
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD6010
mov	eax, [ebx]
test	eax, eax
jz	loc_67CD6034
mov	edx, [ebx+4]
test	edx, edx
jz	loc_67CD6058
mov	ecx, [ebx+8]
test	ecx, ecx
jz	loc_67CD607C
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_certificate_find_pool
test	eax, eax
jz	short loc_67CD5F24
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD609F
add	esp, 34h
pop	ebx
pop	esi
retn
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CD5F31
call	eax
test	eax, eax
jz	short loc_67CD5F0C
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72080
mov	[esp+3Ch+var_3C], eax
call	g_list_prepend
mov	ds:dword_67D72080, eax
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_38], 13h
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+3Ch+var_38], offset aCertificateSto 
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_register
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_38], 13h
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+3Ch+var_38], offset aCertificateDel 
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_register
mov	eax, [ebx+4]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aCertificatep_1 
mov	[esp+3Ch+var_3C], offset aCertificate 
call	purple_debug_info
mov	eax, 1
jmp	loc_67CD5F0E
mov	[esp+3Ch+var_34], offset aPool 
mov	[esp+3Ch+var_38], offset aPurple_cert_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD5F0E
align 4
mov	[esp+3Ch+var_34], offset aPoolScheme_nam 
mov	[esp+3Ch+var_38], offset aPurple_cert_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD5F0E
align 4
mov	[esp+3Ch+var_34], offset aPoolName 
mov	[esp+3Ch+var_38], offset aPurple_cert_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD5F0E
align 4
mov	[esp+3Ch+var_34], offset aPoolFullname 
mov	[esp+3Ch+var_38], offset aPurple_cert_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD5F0E
call	__stack_chk_fail
public purple_certificate_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset off_67D30020
call	purple_certificate_register_verifier
mov	[esp+2Ch+var_2C], offset off_67D30040
call	purple_certificate_register_pool
mov	[esp+2Ch+var_2C], offset off_67D30080
call	purple_certificate_register_pool
mov	[esp+2Ch+var_2C], offset off_67D300C0
call	purple_certificate_register_verifier
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD60F2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_certificate_display_x509
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edi, [esp+9Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
mov	[esp+9Ch+Time],	edi
call	purple_certificate_get_fingerprint_sha1
mov	esi, eax
mov	eax, [eax+4]
mov	[esp+9Ch+var_98], eax
mov	eax, [esi]
mov	[esp+9Ch+Time],	eax
call	purple_base16_encode_chunked
mov	[esp+9Ch+var_44], eax
mov	[esp+9Ch+Time],	edi
call	purple_certificate_get_subject_name
mov	[esp+9Ch+var_40], eax
mov	[esp+9Ch+Time],	edi
call	purple_certificate_get_issuer_unique_id
mov	ebx, eax
lea	ebp, [esp+9Ch+var_24]
mov	[esp+9Ch+var_94], ebp
lea	edx, [esp+9Ch+var_28]
mov	[esp+9Ch+var_98], edx
mov	[esp+9Ch+Time],	edi
mov	[esp+9Ch+var_4C], edx
call	purple_certificate_get_times
test	eax, eax
mov	edx, [esp+9Ch+var_4C]
jz	loc_67CD640C
mov	[esp+9Ch+Time],	edx 
call	ctime
mov	[esp+9Ch+Time],	eax
call	g_strdup
mov	[esp+9Ch+var_3C], eax
mov	[esp+9Ch+Time],	ebp 
call	ctime
mov	[esp+9Ch+Time],	eax
call	g_strdup
mov	ebp, eax
mov	[esp+9Ch+var_98], edi
mov	[esp+9Ch+Time],	edi
call	purple_certificate_signed_by
mov	edx, eax
test	ebp, ebp
jz	loc_67CD643C
mov	[esp+9Ch+var_38], ebp
mov	eax, [esp+9Ch+var_3C]
test	eax, eax
jz	loc_67CD6450
mov	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_34], eax
mov	eax, [esp+9Ch+var_44]
test	eax, eax
jz	loc_67CD6464
mov	eax, [esp+9Ch+var_44]
mov	[esp+9Ch+var_50], eax
test	edx, edx
jnz	loc_67CD63D4
test	ebx, ebx
jz	loc_67CD6474
mov	[esp+9Ch+var_30], ebx
mov	edi, [esp+9Ch+var_40]
test	edi, edi
jz	loc_67CD6400
mov	ecx, [esp+9Ch+var_40]
mov	[esp+9Ch+var_98], offset aCommonNameSIss 
mov	[esp+9Ch+Time],	offset aPidgin_1 
mov	[esp+9Ch+var_4C], edx
mov	[esp+9Ch+var_48], ecx
call	libintl_dgettext
mov	edi, [esp+9Ch+var_38]
mov	[esp+9Ch+var_88], edi
mov	edi, [esp+9Ch+var_34]
mov	[esp+9Ch+var_8C], edi
mov	edi, [esp+9Ch+var_50]
mov	[esp+9Ch+var_90], edi
mov	edi, [esp+9Ch+var_30]
mov	[esp+9Ch+var_94], edi
mov	ecx, [esp+9Ch+var_48]
mov	[esp+9Ch+var_98], ecx
mov	[esp+9Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	edx, [esp+9Ch+var_4C]
test	edx, edx
jnz	loc_67CD6384
mov	[esp+9Ch+var_98], offset aClose	
mov	[esp+9Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+9Ch+var_98], offset aViewIssuerCert 
mov	[esp+9Ch+Time],	offset aPidgin_1 
mov	[esp+9Ch+var_48], eax
call	libintl_dgettext
mov	[esp+9Ch+var_98], offset aCertificateInf 
mov	[esp+9Ch+Time],	offset aPidgin_1 
mov	[esp+9Ch+var_4C], eax
call	libintl_dgettext
mov	[esp+9Ch+var_38], eax
mov	[esp+9Ch+var_98], offset aCertificateInf 
mov	[esp+9Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+9Ch+var_68], offset g_free
mov	ecx, [esp+9Ch+var_48]
mov	[esp+9Ch+var_6C], ecx
mov	[esp+9Ch+var_70], offset loc_67CD6488
mov	edx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_74], edx
mov	[esp+9Ch+var_78], 2
mov	[esp+9Ch+var_7C], ebx
mov	[esp+9Ch+var_80], 0
mov	[esp+9Ch+var_84], 0
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], 2
mov	[esp+9Ch+var_90], edi
mov	edx, [esp+9Ch+var_38]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+var_98], eax
mov	[esp+9Ch+Time],	0
call	purple_request_action
xor	ebx, ebx
mov	eax, [esp+9Ch+var_40]
mov	[esp+9Ch+Time],	eax
call	g_free
mov	[esp+9Ch+Time],	ebx
call	g_free
mov	[esp+9Ch+Time],	edi
call	g_free
mov	eax, [esp+9Ch+var_44]
mov	[esp+9Ch+Time],	eax
call	g_free
mov	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+Time],	eax
call	g_free
mov	[esp+9Ch+Time],	ebp
call	g_free
mov	[esp+9Ch+var_98], 1
mov	[esp+9Ch+Time],	esi
call	g_byte_array_free
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD6481
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+9Ch+var_98], offset aCertificateInf 
mov	[esp+9Ch+Time],	offset aPidgin_1 
call	libintl_dgettext
mov	[esp+9Ch+var_84], 0
mov	[esp+9Ch+var_88], 0
mov	[esp+9Ch+var_8C], edi
mov	[esp+9Ch+var_90], offset byte_67D345A3
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+var_98], 2
mov	[esp+9Ch+Time],	0
call	purple_notify_message
jmp	loc_67CD631D
align 4
mov	[esp+9Ch+var_98], offset aSelfSigned 
mov	[esp+9Ch+Time],	offset aPidgin_1 
mov	[esp+9Ch+var_4C], edx
call	libintl_dgettext
mov	[esp+9Ch+var_30], eax
mov	edx, [esp+9Ch+var_4C]
mov	edi, [esp+9Ch+var_40]
test	edi, edi
jnz	loc_67CD61F9
mov	ecx, offset aNull_0 
jmp	loc_67CD61FD
align 4
mov	[esp+9Ch+var_98], offset aFailedToGetCer 
mov	[esp+9Ch+Time],	offset aCertificate 
call	purple_debug_error
mov	[esp+9Ch+var_24], 0
mov	[esp+9Ch+var_28], 0
mov	edx, [esp+9Ch+var_4C]
jmp	loc_67CD6171
align 4
mov	[esp+9Ch+var_38], offset aNull_0 
mov	eax, [esp+9Ch+var_3C]
test	eax, eax
jnz	loc_67CD61BD
mov	[esp+9Ch+var_34], offset aNull_0 
mov	eax, [esp+9Ch+var_44]
test	eax, eax
jnz	loc_67CD61D1
mov	[esp+9Ch+var_50], offset aNull_0 
jmp	loc_67CD61D9
align 4
mov	[esp+9Ch+var_30], offset aNull_0 
jmp	loc_67CD61ED
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	[esp], esi
call	sub_67CD45A8
mov	ebx, eax
test	eax, eax
jz	short loc_67CD64D4
mov	[esp], eax
call	purple_certificate_display_x509
mov	eax, [ebx]
mov	[esp], ebx
call	dword ptr [eax+14h]
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6534
mov	[esp+40h], esi
add	esp, 34h
pop	ebx
pop	esi
jmp	g_free
mov	dword ptr [esp+4], offset aUnableToFindIs 
mov	dword ptr [esp], offset	aPidgin_1 
call	libintl_dgettext
mov	ebx, eax
mov	dword ptr [esp+4], offset aCertificateInf 
mov	dword ptr [esp], offset	aPidgin_1 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	[esp+10h], ebx
mov	dword ptr [esp+0Ch], offset byte_67D345A3
mov	[esp+8], eax
mov	dword ptr [esp+4], 2
mov	dword ptr [esp], 0
call	purple_notify_message
jmp	short loc_67CD64BA
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx]
mov	edx, [eax+0Ch]
mov	esi, [edx]
mov	edx, [ebx+4]
call	sub_67CD25F4
mov	[esp], esi
call	purple_certificate_display_x509
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD657F
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CD27E0
call	__stack_chk_fail
public purple_certificate_add_ca_search_path
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], offset strcmp
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72078
mov	[esp+2Ch+var_2C], eax
call	g_list_find_custom
test	eax, eax
jz	short loc_67CD65C8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD65E8
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72078
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D72078, eax
jmp	short loc_67CD65B4
call	__stack_chk_fail
align 10h
public purple_cipher_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD661C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD663C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_cipher_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD6609
call	__stack_chk_fail
align 4
public purple_cipher_get_capabilities
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67CD6734
mov	edx, [eax+4]
test	edx, edx
jz	loc_67CD6754
cmp	dword ptr [edx], 1
sbb	eax, eax
not	eax
and	eax, 2
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD667E
or	eax, 4
mov	ecx, [edx+8]
test	ecx, ecx
jz	short loc_67CD6688
or	eax, 8
mov	ecx, [edx+0Ch]
test	ecx, ecx
jz	short loc_67CD6692
or	eax, 10h
mov	ecx, [edx+10h]
test	ecx, ecx
jz	short loc_67CD669C
or	eax, 20h
mov	ecx, [edx+14h]
test	ecx, ecx
jz	short loc_67CD66A6
or	eax, 40h
mov	ecx, [edx+18h]
test	ecx, ecx
jz	short loc_67CD66AF
or	al, 80h
mov	ecx, [edx+1Ch]
test	ecx, ecx
jz	short loc_67CD66B9
or	ah, 1
mov	ecx, [edx+20h]
test	ecx, ecx
jz	short loc_67CD66C3
or	ah, 2
mov	ecx, [edx+24h]
test	ecx, ecx
jz	short loc_67CD66CD
or	ah, 4
mov	ecx, [edx+28h]
test	ecx, ecx
jz	short loc_67CD66D7
or	ah, 8
mov	ecx, [edx+2Ch]
test	ecx, ecx
jz	short loc_67CD66E1
or	ah, 10h
mov	ecx, [edx+30h]
test	ecx, ecx
jz	short loc_67CD66EB
or	ah, 20h
mov	ecx, [edx+34h]
test	ecx, ecx
jz	short loc_67CD66F5
or	ah, 40h
mov	ecx, [edx+38h]
test	ecx, ecx
jz	short loc_67CD66FF
or	ah, 80h
mov	ecx, [edx+3Ch]
test	ecx, ecx
jz	short loc_67CD670B
or	eax, 10000h
mov	ecx, [edx+40h]
test	ecx, ecx
jz	short loc_67CD6717
or	eax, 20000h
mov	edx, [edx+44h]
test	edx, edx
jz	short loc_67CD6723
or	eax, 40000h
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6774
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD6723
mov	[esp+2Ch+var_24], offset aOps 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD6723
call	__stack_chk_fail
align 4
public purple_ciphers_find_cipher
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CD67D8
mov	ebx, ds:dword_67D720A0
test	ebx, ebx
jnz	short loc_67CD67AB
jmp	short loc_67CD67D4
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CD67D4
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67CD67A4
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD67F8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	esi, esi
jmp	short loc_67CD67BF
mov	[esp+2Ch+var_24], offset aName_2 
mov	[esp+2Ch+var_28], offset aPurple_ciphers 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD67BF
call	__stack_chk_fail
align 10h
public purple_ciphers_register_cipher
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD6864
test	edi, edi
jz	short loc_67CD6884
mov	[esp+2Ch+var_2C], ebx
call	purple_ciphers_find_cipher
test	eax, eax
jz	short loc_67CD68A4
mov	[esp+2Ch+var_24], offset aPurple_ciphe_1 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD68F2
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aName_2 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD684B
mov	[esp+2Ch+var_24], offset aOps 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CD684B
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esi], eax
mov	[esi+4], edi
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D720A0
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D720A0, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aCipherAdded 
mov	[esp+2Ch+var_2C], offset dword_67D720A4
call	purple_signal_emit
jmp	loc_67CD684B
call	__stack_chk_fail
align 4
public purple_ciphers_unregister_cipher
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CD6994
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CD694C
mov	[esp+2Ch+var_24], offset aCipherRef0 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD69B4
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aCipherRemoved	
mov	[esp+2Ch+var_2C], offset dword_67D720A4
call	purple_signal_emit
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D720A0
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D720A0, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, 1
jmp	short loc_67CD6938
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD6938
call	__stack_chk_fail
align 4
public purple_ciphers_get_ciphers
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D720A0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD69DF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_ciphers_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D720A4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6A07
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_ciphers_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 0Bh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aCipherAdded 
mov	[esp+3Ch+var_3C], offset dword_67D720A4
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Bh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aCipherRemoved	
mov	[esp+3Ch+var_3C], offset dword_67D720A4
call	purple_signal_register
call	purple_md5_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aMd5 
call	purple_ciphers_register_cipher
call	purple_sha1_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aSha1 
call	purple_ciphers_register_cipher
call	purple_sha256_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aSha256 
call	purple_ciphers_register_cipher
call	purple_md4_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aMd4 
call	purple_ciphers_register_cipher
call	purple_hmac_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aHmac 
call	purple_ciphers_register_cipher
call	purple_des_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aDes 
call	purple_ciphers_register_cipher
call	purple_des3_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aDes3 
call	purple_ciphers_register_cipher
call	purple_rc4_cipher_get_ops
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aRc4 
call	purple_ciphers_register_cipher
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6B5A
add	esp, 3Ch
retn
call	__stack_chk_fail
align 10h
public purple_ciphers_uninit
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D720A0
test	eax, eax
jz	short loc_67CD6BB5
mov	ebx, [eax+4]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_ciphers_unregister_cipher
mov	eax, ebx
test	ebx, ebx
jnz	short loc_67CD6B78
mov	eax, ds:dword_67D720A0
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	[esp+2Ch+var_2C], offset dword_67D720A4
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6BB9
add	esp, 28h
pop	ebx
retn
xor	eax, eax
jmp	short loc_67CD6B90
call	__stack_chk_fail
align 10h
public purple_cipher_context_set_option
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	esi, [esp+1Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD6C50
test	ebx, ebx
jz	loc_67CD6C80
mov	edx, [eax]
test	edx, edx
jz	loc_67CD6C98
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD6C24
mov	ecx, [ecx]
test	ecx, ecx
jz	short loc_67CD6C24
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD6CAE
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
mov	[esp+1Ch+arg_0], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	ecx
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6CAE
mov	eax, [edx]
mov	[esp+1Ch+arg_8], eax
mov	[esp+1Ch+arg_4], offset	aTheSCipherDoes	
mov	[esp+1Ch+arg_0], offset	aCipher	
add	esp, 14h
pop	ebx
pop	esi
jmp	purple_debug_warning
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6CAE
mov	[esp+1Ch+arg_8], offset	aContext 
			
mov	[esp+1Ch+arg_4], offset	aPurple_ciphe_4	
mov	[esp+1Ch+arg_0], 0
add	esp, 14h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 10h
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6CAE
mov	[esp+1Ch+arg_8], offset	aName_2	
jmp	short loc_67CD6C64
align 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6CAE
mov	[esp+1Ch+arg_8], offset	aCipher	
jmp	short loc_67CD6C64
			
call	__stack_chk_fail
align 4
public purple_cipher_context_get_option
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD6D14
test	ecx, ecx
jz	short loc_67CD6D44
mov	ebx, [eax]
test	ebx, ebx
jz	loc_67CD6D64
mov	edx, [ebx+4]
test	edx, edx
jz	loc_67CD6D84
mov	edx, [edx+4]
test	edx, edx
jz	loc_67CD6D84
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CD6DA0
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6DA0
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aName_2 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD6D30
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD6D30
align 4
			
mov	eax, [ebx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_0 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
jmp	short loc_67CD6D30
			
call	__stack_chk_fail
align 4
public purple_cipher_context_new
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD6E04
inc	dword ptr [ebx+8]
mov	[esp+3Ch+var_3C], 8
call	g_malloc0
mov	[eax], ebx
mov	edx, [ebx+4]
mov	edx, [edx+8]
test	edx, edx
jz	short loc_67CD6DF0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	edx
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6E24
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aCipher 
mov	[esp+3Ch+var_38], offset aPurple_ciphe_6 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD6DF0
call	__stack_chk_fail
align 4
public purple_cipher_context_new_by_name
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD6E74
mov	[esp+2Ch+var_2C], eax
call	purple_ciphers_find_cipher
test	eax, eax
jz	short loc_67CD6EA4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6EC2
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_new
align 4
mov	[esp+2Ch+var_24], offset aName_2 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD6EC2
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD6E90
			
call	__stack_chk_fail
align 4
public purple_cipher_context_reset
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD6F14
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD6F44
mov	edx, [edx+4]
test	edx, edx
jz	short loc_67CD6F30
mov	edx, [edx+0Ch]
test	edx, edx
jz	short loc_67CD6F30
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CD6F62
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD6F62
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD6F30
			
call	__stack_chk_fail
align 4
public purple_cipher_context_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CD6FC4
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CD6FF4
dec	dword ptr [eax+8]
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CD6F9B
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CD6F9B
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	dword ptr [ebx], 0
mov	dword ptr [ebx+4], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7012
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7012
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciphe_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD6FE0
			
call	__stack_chk_fail
align 4
public purple_cipher_context_set_iv
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	esi, [esp+1Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD70A8
test	ebx, ebx
jz	loc_67CD70D8
mov	edx, [eax]
test	edx, edx
jz	loc_67CD70F0
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD707C
mov	ecx, [ecx+14h]
test	ecx, ecx
jz	short loc_67CD707C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD7106
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
mov	[esp+1Ch+arg_0], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	ecx
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7106
mov	eax, [edx]
mov	[esp+1Ch+arg_8], eax
mov	[esp+1Ch+arg_4], offset	aTheSCipherDo_1	
mov	[esp+1Ch+arg_0], offset	aCipher	
add	esp, 14h
pop	ebx
pop	esi
jmp	purple_debug_warning
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7106
mov	[esp+1Ch+arg_8], offset	aContext 
			
mov	[esp+1Ch+arg_4], offset	aPurple_ciph_10	
mov	[esp+1Ch+arg_0], 0
add	esp, 14h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7106
mov	[esp+1Ch+arg_8], offset	aIv 
jmp	short loc_67CD70BC
align 10h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7106
mov	[esp+1Ch+arg_8], offset	aCipher	
jmp	short loc_67CD70BC
			
call	__stack_chk_fail
align 4
public purple_cipher_context_append
			
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	esi, [esp+1Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7194
mov	edx, [eax]
test	edx, edx
jz	loc_67CD71C4
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7168
mov	ecx, [ecx+18h]
test	ecx, ecx
jz	short loc_67CD7168
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD71DA
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
mov	[esp+1Ch+arg_0], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	ecx
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD71DA
mov	eax, [edx]
mov	[esp+1Ch+arg_8], eax
mov	[esp+1Ch+arg_4], offset	aTheSCipherDo_2	
mov	[esp+1Ch+arg_0], offset	aCipher	
add	esp, 14h
pop	ebx
pop	esi
jmp	purple_debug_warning
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD71DA
mov	[esp+1Ch+arg_8], offset	aContext 
mov	[esp+1Ch+arg_4], offset	aPurple_ciph_11	
mov	[esp+1Ch+arg_0], 0
add	esp, 14h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD71DA
mov	[esp+1Ch+arg_8], offset	aCipher	
jmp	short loc_67CD71A8
			
call	__stack_chk_fail
align 10h
public purple_cipher_context_digest
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD726C
mov	ecx, [eax]
mov	edx, [ecx+4]
test	edx, edx
jz	short loc_67CD723C
mov	edx, [edx+1Ch]
test	edx, edx
jz	short loc_67CD723C
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CD728A
mov	[esp+2Ch+arg_C], edi
mov	[esp+2Ch+arg_8], esi
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	edx
align 4
			
mov	eax, [ecx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_3 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD728A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7256
			
call	__stack_chk_fail
align 10h
public purple_cipher_digest_region
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	edi, [esp+4Ch+arg_10]
mov	ebp, [esp+4Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CD737C
test	ebx, ebx
jz	loc_67CD739C
mov	[esp+4Ch+var_4C], eax
call	purple_ciphers_find_cipher
test	eax, eax
jz	loc_67CD73BC
mov	edx, [eax+4]
mov	ecx, [edx+18h]
test	ecx, ecx
jz	short loc_67CD735C
mov	esi, [edx+1Ch]
test	esi, esi
jz	short loc_67CD735C
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_new
mov	esi, eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_append
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
call	purple_cipher_context_digest
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_38], eax
call	purple_cipher_context_destroy
mov	eax, [esp+4Ch+var_38]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD73DF
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, [eax]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aPurple_ciph_13 
mov	[esp+4Ch+var_4C], offset aCipher 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CD7342
align 4
mov	[esp+4Ch+var_44], offset aName_2 
mov	[esp+4Ch+var_48], offset aPurple_ciph_14 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD7342
mov	[esp+4Ch+var_44], offset aData 
mov	[esp+4Ch+var_48], offset aPurple_ciph_14 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD7342
mov	[esp+4Ch+var_44], offset aCipher 
mov	[esp+4Ch+var_48], offset aPurple_ciph_14 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7342
call	__stack_chk_fail
public purple_cipher_context_digest_to_str
			
			
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 203Ch
call	sub_67D2FA40
sub	esp, eax
mov	eax, [esp+10h+arg_203C]
mov	ebx, [esp+10h+arg_2040]
mov	edi, [esp+10h+arg_2044]
mov	edx, [esp+10h+arg_2048]
mov	[esp+10h+arg_8], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+10h+arg_2018], edx
xor	edx, edx
mov	[esp+10h+arg_14], 0
test	eax, eax
jz	loc_67CD74F8
test	edi, edi
jz	loc_67CD74D8
lea	edx, [esp+10h+arg_14]
mov	[esp+10h+var_4], edx
lea	esi, [esp+10h+arg_18]
mov	[esp+10h+var_8], esi
mov	[esp+10h+var_C], 2000h
mov	[esp+10h+var_10], eax
call	purple_cipher_context_digest
test	eax, eax
jz	short loc_67CD74BC
mov	eax, [esp+10h+arg_14]
lea	edx, [eax+eax]
cmp	edx, ebx
jnb	short loc_67CD74BC
test	eax, eax
jz	loc_67CD751F
mov	ebp, edi
xor	ebx, ebx
xchg	ax, ax
movzx	eax, byte ptr [esi+ebx]
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], offset	a02x 
mov	[esp+10h+var_10], ebp
call	libintl_sprintf
inc	ebx
mov	eax, [esp+10h+arg_14]
add	ebp, 2
cmp	eax, ebx
ja	short loc_67CD7478
shl	ebx, 1
mov	byte ptr [edi+ebx], 0
mov	edi, [esp+10h+arg_8]
test	edi, edi
jz	short loc_67CD7518
shl	eax, 1
mov	edx, [esp+10h+arg_8]
mov	[edx], eax
mov	eax, 1
jmp	short loc_67CD74BE
align 4
			
xor	eax, eax
			
mov	edx, [esp+10h+arg_2018]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7526
add	esp, 203Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+10h+var_8], offset	aDigest_s 
mov	[esp+10h+var_C], offset	aPurple_ciph_15	
mov	[esp+10h+var_10], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD74BE
mov	[esp+10h+var_8], offset	aContext 
mov	[esp+10h+var_C], offset	aPurple_ciph_15	
mov	[esp+10h+var_10], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD74BE
mov	eax, 1
jmp	short loc_67CD74BE
xor	ebx, ebx
jmp	loc_67CD749E
call	__stack_chk_fail
align 4
public purple_cipher_context_encrypt
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	ebx, [esp+3Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CD75E0
mov	edx, [eax]
test	edx, edx
jz	loc_67CD7600
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD75A0
mov	ecx, [ecx+20h]
test	ecx, ecx
jz	short loc_67CD75A0
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD761E
mov	[esp+3Ch+arg_10], ebx
mov	[esp+3Ch+arg_C], ebp
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	ecx
			
mov	eax, [edx]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aTheSCipherDo_4 
mov	[esp+3Ch+var_3C], offset aCipher 
call	purple_debug_warning
test	ebx, ebx
jz	short loc_67CD75C4
mov	dword ptr [ebx], 0FFFFFFFFh
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD761E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_34], offset aContext 
mov	[esp+3Ch+var_38], offset aPurple_ciph_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD75C4
align 10h
mov	[esp+3Ch+var_34], offset aCipher 
mov	[esp+3Ch+var_38], offset aPurple_ciph_16 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD75C4
			
call	__stack_chk_fail
align 4
public purple_cipher_context_decrypt
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	ebx, [esp+3Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CD76D8
mov	edx, [eax]
test	edx, edx
jz	loc_67CD76F8
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7698
mov	ecx, [ecx+24h]
test	ecx, ecx
jz	short loc_67CD7698
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD7716
mov	[esp+3Ch+arg_10], ebx
mov	[esp+3Ch+arg_C], ebp
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	ecx
			
mov	eax, [edx]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aTheSCipherDo_5 
mov	[esp+3Ch+var_3C], offset aCipher 
call	purple_debug_warning
test	ebx, ebx
jz	short loc_67CD76BC
mov	dword ptr [ebx], 0FFFFFFFFh
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7716
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aContext 
mov	[esp+3Ch+var_38], offset aPurple_ciph_17 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD76BC
align 4
mov	[esp+3Ch+var_34], offset aCipher 
mov	[esp+3Ch+var_38], offset aPurple_ciph_17 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD76BC
			
call	__stack_chk_fail
align 4
public purple_cipher_context_set_salt
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7794
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD77B4
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7768
mov	ecx, [ecx+28h]
test	ecx, ecx
jz	short loc_67CD7768
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD77D2
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	ecx
align 4
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_6 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD77D2
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7782
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7782
			
call	__stack_chk_fail
align 4
public purple_cipher_context_get_salt_size
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7848
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD7868
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7818
mov	ecx, [ecx+2Ch]
test	ecx, ecx
jz	short loc_67CD7818
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7886
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	ecx
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_7 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7886
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7832
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7832
			
call	__stack_chk_fail
align 4
public purple_cipher_context_set_key
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7904
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD7924
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD78D8
mov	ecx, [ecx+30h]
test	ecx, ecx
jz	short loc_67CD78D8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7942
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	ecx
align 4
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_8 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7942
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD78F2
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD78F2
			
call	__stack_chk_fail
align 4
public purple_cipher_context_get_key_size
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD79B8
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD79D8
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7988
mov	ecx, [ecx+34h]
test	ecx, ecx
jz	short loc_67CD7988
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD79F6
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	ecx
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherDo_9 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD79F6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD79A2
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD79A2
			
call	__stack_chk_fail
align 4
public purple_cipher_context_set_batch_mode
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7A74
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD7A94
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7A48
mov	ecx, [ecx+38h]
test	ecx, ecx
jz	short loc_67CD7A48
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7AB2
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	ecx
align 4
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherD_10 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7AB2
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7A62
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7A62
			
call	__stack_chk_fail
align 4
public purple_cipher_context_get_batch_mode
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7B28
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD7B48
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7AF8
mov	ecx, [ecx+3Ch]
test	ecx, ecx
jz	short loc_67CD7AF8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7B66
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	ecx
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherD_11 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7B66
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7B12
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7B12
			
call	__stack_chk_fail
align 4
public purple_cipher_context_get_block_size
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7BDC
mov	edx, [eax]
test	edx, edx
jz	short loc_67CD7BFC
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7BAC
mov	ecx, [ecx+40h]
test	ecx, ecx
jz	short loc_67CD7BAC
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7C1A
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	ecx
			
mov	eax, [edx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTheSCipherD_12 
mov	[esp+2Ch+var_2C], offset aCipher 
call	purple_debug_warning
			
mov	eax, 0FFFFFFFFh
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7C1A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7BC6
align 4
mov	[esp+2Ch+var_24], offset aCipher 
mov	[esp+2Ch+var_28], offset aPurple_ciph_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7BC6
			
call	__stack_chk_fail
align 10h
public purple_cipher_context_set_key_with_len
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	esi, [esp+1Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7CA8
mov	edx, [eax]
test	edx, edx
jz	loc_67CD7CD8
mov	ecx, [edx+4]
test	ecx, ecx
jz	short loc_67CD7C7C
mov	ecx, [ecx+44h]
test	ecx, ecx
jz	short loc_67CD7C7C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD7CEE
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
mov	[esp+1Ch+arg_0], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	ecx
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7CEE
mov	eax, [edx]
mov	[esp+1Ch+arg_8], eax
mov	[esp+1Ch+arg_4], offset	aTheSCipherD_13	
mov	[esp+1Ch+arg_0], offset	aCipher	
add	esp, 14h
pop	ebx
pop	esi
jmp	purple_debug_warning
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7CEE
mov	[esp+1Ch+arg_8], offset	aContext 
mov	[esp+1Ch+arg_4], offset	aPurple_ciph_25	
mov	[esp+1Ch+arg_0], 0
add	esp, 14h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7CEE
mov	[esp+1Ch+arg_8], offset	aCipher	
jmp	short loc_67CD7CBC
			
call	__stack_chk_fail
align 4
public purple_cipher_context_set_data
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CD7D24
mov	[eax+4], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD7D42
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CD7D12
call	__stack_chk_fail
align 4
public purple_cipher_context_get_data
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CD7D74
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD7D94
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext 
mov	[esp+2Ch+var_28], offset aPurple_ciph_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD7D62
call	__stack_chk_fail
align 4
public purple_cipher_http_digest_calculate_session_key
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	eax, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_60], eax
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_5C], edx
mov	eax, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_54], eax
mov	edx, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_50], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CD8078
mov	eax, [esp+7Ch+var_60]
test	eax, eax
jz	loc_67CD80C0
mov	eax, [esp+7Ch+var_5C]
test	eax, eax
jz	loc_67CD809C
mov	eax, [esp+7Ch+var_54]
test	eax, eax
jz	loc_67CD80E4
test	ebp, ebp
jz	short loc_67CD7E22
cmp	byte ptr [ebp+0], 0
jnz	loc_67CD8024
			
mov	[esp+7Ch+var_7C], offset aMd5 
call	purple_ciphers_find_cipher
mov	[esp+7Ch+var_58], eax
test	eax, eax
jz	loc_67CD8108
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_58]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_60]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_60]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_5C]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
test	ebp, ebp
jz	short loc_67CD7EFE
mov	[esp+7Ch+var_78], offset aMd5Sess 
mov	[esp+7Ch+var_7C], ebp
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_67CD7F48
lea	esi, [esp+7Ch+var_41]
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], 21h
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_digest_to_str
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_7C], esi
call	g_strdup
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD814E
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+7Ch+var_50]
test	eax, eax
jz	loc_67CD812B
mov	[esp+7Ch+var_70], 0
lea	esi, [esp+7Ch+var_41]
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], 10h
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_digest
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_58]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	[esp+7Ch+var_74], 10h
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_54]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
jmp	loc_67CD7F02
align 4
mov	[esp+7Ch+var_78], offset aMd5_0	
mov	[esp+7Ch+var_7C], ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD7E22
mov	[esp+7Ch+var_78], offset aMd5Sess 
mov	[esp+7Ch+var_7C], ebp
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD7E22
mov	[esp+7Ch+var_74], offset aAlgorithmNullA 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
align 4
mov	[esp+7Ch+var_74], offset aUsernameNull_1 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
align 4
mov	[esp+7Ch+var_74], offset aPasswordNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
align 10h
mov	[esp+7Ch+var_74], offset aRealmNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
align 4
mov	[esp+7Ch+var_74], offset aNonceNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
align 4
mov	[esp+7Ch+var_74], offset aCipherNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_28 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD7F2E
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], offset aRequiredClient 
mov	[esp+7Ch+var_7C], offset aCipher 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CD7F2E
call	__stack_chk_fail
align 4
public purple_cipher_http_digest_calculate_response
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	ebp, [esp+7Ch+arg_4]
mov	eax, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_5C], eax
mov	esi, [esp+7Ch+arg_C]
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_50], edx
mov	eax, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_64], eax
mov	edx, [esp+7Ch+arg_18]
mov	[esp+7Ch+var_58], edx
mov	eax, [esp+7Ch+arg_1C]
mov	[esp+7Ch+var_54], eax
mov	edx, [esp+7Ch+arg_20]
mov	[esp+7Ch+var_60], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CD85EC
mov	edx, [esp+7Ch+var_5C]
test	edx, edx
jz	loc_67CD8610
mov	eax, [esp+7Ch+var_64]
test	eax, eax
jz	loc_67CD8634
mov	eax, [esp+7Ch+var_60]
test	eax, eax
jz	loc_67CD8658
test	ebx, ebx
jz	short loc_67CD81F6
cmp	byte ptr [ebx],	0
jnz	loc_67CD8548
			
test	esi, esi
jz	short loc_67CD8203
cmp	byte ptr [esi],	0
jnz	loc_67CD8598
			
mov	[esp+7Ch+var_7C], offset aMd5 
call	purple_ciphers_find_cipher
mov	[esp+7Ch+var_68], eax
test	eax, eax
jz	loc_67CD867C
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_68]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_5C]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_5C]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
test	esi, esi
jz	loc_67CD86A0
mov	[esp+7Ch+var_78], offset aAuthInt 
mov	[esp+7Ch+var_7C], esi
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD8357
mov	ebp, [esp+7Ch+var_50]
test	ebp, ebp
jz	loc_67CD875E
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_68]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_50]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebp
call	purple_cipher_context_append
mov	[esp+7Ch+var_70], 0
lea	edx, [esp+7Ch+var_41]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], 21h
mov	[esp+7Ch+var_7C], ebp
mov	[esp+7Ch+var_6C], edx
call	purple_cipher_context_digest_to_str
mov	[esp+7Ch+var_7C], ebp
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	edx, [esp+7Ch+var_6C]
mov	ecx, 0FFFFFFFFh
mov	edi, edx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset dword_67D720C0
mov	[esp+7Ch+var_78], 21h
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_digest_to_str
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_68]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, [esp+7Ch+var_60]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_60]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, ebp
mov	edi, [esp+7Ch+var_64]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_64]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
cmp	byte ptr [esi],	0
jz	loc_67CD84D4
mov	edi, [esp+7Ch+var_58]
test	edi, edi
jz	loc_67CD8781
mov	ecx, [esp+7Ch+var_54]
test	ecx, ecx
jz	loc_67CD873B
mov	ecx, ebp
mov	edi, [esp+7Ch+var_58]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_58]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, ebp
mov	edi, [esp+7Ch+var_54]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, ebp
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
lea	ebp, [ecx-1]
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	edi, offset dword_67D720C0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], offset dword_67D720C0
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset dword_67D720C0
mov	[esp+7Ch+var_78], 21h
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_digest_to_str
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_7C], offset dword_67D720C0
call	g_strdup
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD87A4
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_78], offset aMd5_0	
mov	[esp+7Ch+var_7C], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD81F6
mov	[esp+7Ch+var_78], offset aMd5Sess 
mov	[esp+7Ch+var_7C], ebx
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD81F6
mov	[esp+7Ch+var_74], offset aAlgorithmNullA 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CD852D
mov	[esp+7Ch+var_78], offset aAuth 
mov	[esp+7Ch+var_7C], esi
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD8203
mov	[esp+7Ch+var_78], offset aAuthInt 
mov	[esp+7Ch+var_7C], esi
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67CD8203
mov	[esp+7Ch+var_74], offset aQopNullQop0G_a 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 4
mov	[esp+7Ch+var_74], offset aMethodNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 10h
mov	[esp+7Ch+var_74], offset aDigest_uriNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 4
mov	[esp+7Ch+var_74], offset aNonceNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 4
mov	[esp+7Ch+var_74], offset aSession_keyNul 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 4
mov	[esp+7Ch+var_74], offset aCipherNull 
mov	[esp+7Ch+var_78], offset aPurple_ciph_29 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CD852D
align 10h
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], offset dword_67D720C0
mov	[esp+7Ch+var_78], 21h
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_digest_to_str
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], 0
mov	eax, [esp+7Ch+var_68]
mov	[esp+7Ch+var_7C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_60]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_60]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	[esp+7Ch+var_74], 1
mov	[esp+7Ch+var_78], offset asc_67D35F54 
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_append
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+var_64]
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+7Ch+var_74], ecx
mov	edx, [esp+7Ch+var_64]
mov	[esp+7Ch+var_78], edx
jmp	loc_67CD84B4
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], offset aRequiredClie_0 
mov	[esp+7Ch+var_7C], offset aCipher 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CD852D
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], offset aRequiredEntity 
mov	[esp+7Ch+var_7C], offset aCipher 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CD852D
mov	[esp+7Ch+var_7C], ebx
call	purple_cipher_context_destroy
mov	[esp+7Ch+var_78], offset aRequiredNonce_ 
mov	[esp+7Ch+var_7C], offset aCipher 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CD852D
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
movzx	ecx, byte ptr [eax]
shl	ecx, 18h
movzx	edx, byte ptr [eax+1]
shl	edx, 10h
or	ecx, edx
movzx	edx, byte ptr [eax+3]
or	ecx, edx
movzx	edx, byte ptr [eax+2]
shl	edx, 8
or	ecx, edx
movzx	edx, byte ptr [eax+4]
shl	edx, 18h
movzx	ebx, byte ptr [eax+5]
shl	ebx, 10h
or	edx, ebx
movzx	ebx, byte ptr [eax+7]
or	edx, ebx
movzx	eax, byte ptr [eax+6]
shl	eax, 8
or	edx, eax
mov	eax, edx
shr	eax, 4
xor	eax, ecx
and	eax, 0F0F0F0Fh
xor	ecx, eax
shl	eax, 4
xor	eax, edx
mov	edx, eax
xor	edx, ecx
and	edx, 10101010h
xor	ecx, edx
xor	eax, edx
mov	edx, ecx
shr	edx, 15h
and	edx, 0Fh
mov	edx, ds:dword_67D366E0[edx*4]
shl	edx, 5
mov	ebx, ecx
shr	ebx, 18h
and	ebx, 0Fh
mov	edi, ecx
and	edi, 0Fh
mov	edi, ds:dword_67D366E0[edi*4]
lea	ebp, ds:0[edi*8]
or	ebp, ds:dword_67D366E0[ebx*4]
mov	ebx, ecx
shr	ebx, 1Dh
mov	ebx, ds:dword_67D366E0[ebx*4]
shl	ebx, 4
or	ebp, ebx
mov	ebx, ecx
shr	ebx, 8
and	ebx, 0Fh
mov	ebx, ds:dword_67D366E0[ebx*4]
shl	ebx, 2
or	ebp, ebx
mov	ebx, ecx
shr	ebx, 10h
and	ebx, 0Fh
mov	ebx, ds:dword_67D366E0[ebx*4]
shl	ebx, 1
or	ebp, ebx
mov	ebx, ecx
shr	ebx, 5
and	ebx, 0Fh
mov	ebx, ds:dword_67D366E0[ebx*4]
shl	ebx, 7
or	ebp, ebx
shr	ecx, 0Dh
and	ecx, 0Fh
mov	ecx, ds:dword_67D366E0[ecx*4]
shl	ecx, 6
or	ebp, ecx
or	ebp, edx
and	ebp, 0FFFFFFFh
mov	edx, eax
shr	edx, 14h
and	edx, 0Fh
mov	edx, ds:dword_67D36720[edx*4]
shl	edx, 5
mov	ecx, eax
shr	ecx, 1Ch
mov	edi, ds:dword_67D36720[ecx*4]
shl	edi, 4
mov	ecx, eax
shr	ecx, 19h
and	ecx, 0Fh
or	edi, ds:dword_67D36720[ecx*4]
mov	ecx, eax
shr	ecx, 1
and	ecx, 0Fh
mov	ecx, ds:dword_67D36720[ecx*4]
shl	ecx, 3
or	edi, ecx
mov	ecx, eax
shr	ecx, 9
and	ecx, 0Fh
mov	ecx, ds:dword_67D36720[ecx*4]
shl	ecx, 2
or	edi, ecx
mov	ecx, eax
shr	ecx, 11h
and	ecx, 0Fh
mov	ecx, ds:dword_67D36720[ecx*4]
shl	ecx, 1
or	edi, ecx
mov	ecx, eax
shr	ecx, 4
and	ecx, 0Fh
mov	ecx, ds:dword_67D36720[ecx*4]
shl	ecx, 7
or	edi, ecx
shr	eax, 0Ch
and	eax, 0Fh
mov	eax, ds:dword_67D36720[eax*4]
shl	eax, 6
or	edi, eax
or	edi, edx
and	edi, 0FFFFFFFh
mov	[esp+3Ch+var_3C], 0
mov	ebx, [esp+3Ch+var_3C]
movzx	eax, ds:byte_67D36760[ebx]
mov	edx, 1Ch
sub	edx, eax
mov	ebx, ebp
mov	cl, dl
shr	ebx, cl
mov	cl, al
shl	ebp, cl
or	ebp, ebx
and	ebp, 0FFFFFFFh
mov	ebx, edi
mov	cl, dl
shr	ebx, cl
mov	edx, ebx
mov	cl, al
shl	edi, cl
or	edx, edi
mov	edi, edx
and	edi, 0FFFFFFFh
mov	ebx, ebp
shl	ebx, 0Ah
mov	[esp+3Ch+var_38], ebx
mov	eax, edi
shr	eax, 0Eh
mov	[esp+3Ch+var_34], eax
mov	ecx, edi
shr	ecx, 3
mov	[esp+3Ch+var_30], ecx
mov	eax, ebp
shl	eax, 4
and	eax, 24000000h
mov	ecx, ebp
shl	ecx, 1Ch
and	ecx, 10000000h
or	eax, ecx
mov	ecx, edx
and	ecx, 100h
or	eax, ecx
mov	ecx, ebp
shl	ecx, 0Eh
and	ecx, 8000000h
or	eax, ecx
mov	ecx, ebp
shl	ecx, 12h
and	ecx, 2080000h
or	eax, ecx
mov	ecx, ebp
shl	ecx, 6
and	ecx, 1000000h
or	eax, ecx
mov	ecx, ebp
shl	ecx, 9
and	ecx, 200000h
or	eax, ecx
mov	ecx, ebp
shr	ecx, 1
and	ecx, 100000h
or	eax, ecx
mov	ecx, ebx
and	ecx, 40000h
or	eax, ecx
lea	ecx, ds:0[ebp*4]
and	ecx, 20000h
or	eax, ecx
mov	ecx, ebp
shr	ecx, 0Ah
and	ecx, 10000h
or	eax, ecx
mov	ecx, edi
shr	ecx, 0Dh
and	ecx, 2000h
or	eax, ecx
mov	ecx, edi
shr	ecx, 4
and	ecx, 1000h
or	eax, ecx
mov	ecx, edi
shl	ecx, 6
and	ecx, 800h
or	eax, ecx
mov	ecx, edi
shr	ecx, 1
and	ecx, 400h
or	eax, ecx
mov	ecx, [esp+3Ch+var_34]
and	ecx, 200h
or	eax, ecx
mov	ecx, edi
shr	ecx, 5
and	ecx, 20h
or	eax, ecx
mov	ecx, edi
shr	ecx, 0Ah
and	ecx, 10h
or	eax, ecx
mov	ecx, [esp+3Ch+var_30]
and	ecx, 8
or	eax, ecx
mov	ecx, edi
shr	ecx, 12h
and	ecx, 4
or	eax, ecx
mov	ecx, edi
shr	ecx, 1Ah
and	ecx, 2
or	eax, ecx
mov	ecx, edi
shr	ecx, 18h
and	ecx, 1
or	eax, ecx
mov	[esi], eax
mov	ebx, ebp
shl	ebx, 0Fh
mov	eax, ebx
and	eax, 20000000h
mov	ecx, ebp
shl	ecx, 11h
and	ecx, 10000000h
or	eax, ecx
and	edx, 200h
or	eax, edx
mov	edx, [esp+3Ch+var_38]
and	edx, 8000000h
or	eax, edx
mov	edx, ebp
shl	edx, 16h
and	edx, 4000000h
or	eax, edx
mov	edx, ebp
shr	edx, 2
and	edx, 2000000h
or	eax, edx
lea	edx, [ebp+ebp+0]
and	edx, 1000000h
or	eax, edx
mov	edx, ebp
shl	edx, 10h
and	edx, 200000h
or	eax, edx
mov	edx, ebp
shl	edx, 0Bh
and	edx, 100000h
or	eax, edx
lea	edx, ds:0[ebp*8]
and	edx, 80000h
or	eax, edx
mov	edx, ebp
shr	edx, 6
and	edx, 40000h
or	eax, edx
and	ebx, 20000h
or	eax, ebx
mov	edx, ebp
shr	edx, 4
and	edx, 10000h
or	eax, edx
mov	edx, edi
shr	edx, 2
and	edx, 2000h
or	eax, edx
mov	edx, edi
shl	edx, 8
and	edx, 1000h
or	eax, edx
mov	edx, [esp+3Ch+var_34]
and	edx, 808h
or	eax, edx
mov	edx, edi
shr	edx, 9
and	edx, 400h
or	eax, edx
mov	edx, edi
shl	edx, 7
and	edx, 100h
or	eax, edx
mov	edx, edi
shr	edx, 7
and	edx, 20h
or	eax, edx
mov	edx, [esp+3Ch+var_30]
and	edx, 11h
or	eax, edx
lea	edx, ds:0[edi*4]
and	edx, 4
or	eax, edx
mov	edx, edi
shr	edx, 15h
and	edx, 2
or	eax, edx
mov	[esi+4], eax
add	esi, 8
inc	[esp+3Ch+var_3C]
cmp	[esp+3Ch+var_3C], 10h
jnz	loc_67CD8958
mov	ebx, [esp+3Ch+var_20]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CD8BDD
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	[esp+3Ch+var_30], ecx
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], ecx
xor	ecx, ecx
mov	ecx, [esp+3Ch+arg_0]
test	ecx, ecx
jz	short loc_67CD8C06
sub	eax, 0FFFFFF80h
movzx	ecx, byte ptr [edx]
shl	ecx, 18h
movzx	ebx, byte ptr [edx+1]
shl	ebx, 10h
or	ecx, ebx
movzx	ebx, byte ptr [edx+3]
or	ecx, ebx
movzx	ebx, byte ptr [edx+2]
shl	ebx, 8
or	ecx, ebx
movzx	ebx, byte ptr [edx+4]
shl	ebx, 18h
movzx	esi, byte ptr [edx+5]
shl	esi, 10h
or	ebx, esi
movzx	esi, byte ptr [edx+7]
or	ebx, esi
movzx	edx, byte ptr [edx+6]
shl	edx, 8
or	ebx, edx
mov	edx, ecx
shr	edx, 4
xor	edx, ebx
and	edx, 0F0F0F0Fh
xor	ebx, edx
shl	edx, 4
xor	edx, ecx
mov	esi, edx
shr	esi, 10h
xor	esi, ebx
and	esi, 0FFFFh
xor	ebx, esi
shl	esi, 10h
xor	esi, edx
mov	edx, ebx
shr	edx, 2
xor	edx, esi
and	edx, 33333333h
xor	esi, edx
shl	edx, 2
xor	edx, ebx
mov	edi, edx
shr	edi, 8
xor	edi, esi
and	edi, 0FF00FFh
xor	esi, edi
shl	edi, 8
xor	edi, edx
mov	edx, esi
shr	edx, 1
xor	edx, edi
and	edx, 55555555h
xor	edi, edx
mov	ebx, edi
rol	ebx, 1
xor	ebx, [eax]
mov	ecx, edi
rol	ecx, 1Dh
xor	ecx, [eax+4]
shl	edx, 1
xor	edx, esi
mov	esi, ebx
and	esi, 3Fh
xor	edx, ds:dword_67D36780[esi*4]
mov	esi, ecx
and	esi, 3Fh
xor	edx, ds:dword_67D36B80[esi*4]
mov	esi, ebx
shr	esi, 8
and	esi, 3Fh
xor	edx, ds:dword_67D36880[esi*4]
mov	esi, ebx
shr	esi, 10h
and	esi, 3Fh
xor	edx, ds:dword_67D36980[esi*4]
shr	ebx, 18h
and	ebx, 3Fh
xor	edx, ds:dword_67D36A80[ebx*4]
mov	ebx, ecx
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36C80[ebx*4]
mov	ebx, ecx
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36D80[ebx*4]
shr	ecx, 18h
and	ecx, 3Fh
xor	edx, ds:dword_67D36E80[ecx*4]
mov	esi, edx
rol	esi, 1
xor	esi, [eax+8]
mov	ebx, edx
rol	ebx, 1Dh
xor	ebx, [eax+0Ch]
mov	ecx, esi
and	ecx, 3Fh
mov	ebp, ebx
and	ebp, 3Fh
mov	ecx, ds:dword_67D36780[ecx*4]
xor	ecx, ds:dword_67D36B80[ebp*4]
xor	ecx, edi
mov	edi, esi
shr	edi, 8
and	edi, 3Fh
xor	ecx, ds:dword_67D36880[edi*4]
mov	edi, esi
shr	edi, 10h
and	edi, 3Fh
xor	ecx, ds:dword_67D36980[edi*4]
shr	esi, 18h
and	esi, 3Fh
xor	ecx, ds:dword_67D36A80[esi*4]
mov	esi, ebx
shr	esi, 8
and	esi, 3Fh
xor	ecx, ds:dword_67D36C80[esi*4]
mov	esi, ebx
shr	esi, 10h
and	esi, 3Fh
xor	ecx, ds:dword_67D36D80[esi*4]
shr	ebx, 18h
and	ebx, 3Fh
xor	ecx, ds:dword_67D36E80[ebx*4]
mov	edi, ecx
rol	edi, 1
xor	edi, [eax+10h]
mov	ebx, ecx
rol	ebx, 1Dh
xor	ebx, [eax+14h]
mov	esi, edi
and	esi, 3Fh
mov	ebp, ebx
and	ebp, 3Fh
mov	esi, ds:dword_67D36780[esi*4]
xor	esi, ds:dword_67D36B80[ebp*4]
xor	esi, edx
mov	edx, edi
shr	edx, 8
and	edx, 3Fh
xor	esi, ds:dword_67D36880[edx*4]
mov	edx, edi
shr	edx, 10h
and	edx, 3Fh
xor	esi, ds:dword_67D36980[edx*4]
shr	edi, 18h
and	edi, 3Fh
xor	esi, ds:dword_67D36A80[edi*4]
mov	edx, ebx
shr	edx, 8
and	edx, 3Fh
xor	esi, ds:dword_67D36C80[edx*4]
mov	edx, ebx
shr	edx, 10h
and	edx, 3Fh
xor	esi, ds:dword_67D36D80[edx*4]
shr	ebx, 18h
and	ebx, 3Fh
xor	esi, ds:dword_67D36E80[ebx*4]
mov	edi, esi
rol	edi, 1
xor	edi, [eax+18h]
mov	edx, esi
rol	edx, 1Dh
xor	edx, [eax+1Ch]
mov	ebx, edi
and	ebx, 3Fh
mov	ebp, edx
and	ebp, 3Fh
mov	ebx, ds:dword_67D36780[ebx*4]
xor	ebx, ds:dword_67D36B80[ebp*4]
xor	ebx, ecx
mov	ecx, edi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36880[ecx*4]
mov	ecx, edi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36980[ecx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ebx, ds:dword_67D36A80[edi*4]
mov	ecx, edx
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36C80[ecx*4]
mov	ecx, edx
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36D80[ecx*4]
shr	edx, 18h
and	edx, 3Fh
xor	ebx, ds:dword_67D36E80[edx*4]
mov	edi, ebx
rol	edi, 1
xor	edi, [eax+20h]
mov	edx, ebx
rol	edx, 1Dh
xor	edx, [eax+24h]
mov	ecx, edi
and	ecx, 3Fh
mov	ebp, edx
and	ebp, 3Fh
mov	ecx, ds:dword_67D36780[ecx*4]
xor	ecx, ds:dword_67D36B80[ebp*4]
xor	ecx, esi
mov	esi, edi
shr	esi, 8
and	esi, 3Fh
xor	ecx, ds:dword_67D36880[esi*4]
mov	esi, edi
shr	esi, 10h
and	esi, 3Fh
xor	ecx, ds:dword_67D36980[esi*4]
shr	edi, 18h
and	edi, 3Fh
xor	ecx, ds:dword_67D36A80[edi*4]
mov	esi, edx
shr	esi, 8
and	esi, 3Fh
xor	ecx, ds:dword_67D36C80[esi*4]
mov	esi, edx
shr	esi, 10h
and	esi, 3Fh
xor	ecx, ds:dword_67D36D80[esi*4]
shr	edx, 18h
and	edx, 3Fh
xor	ecx, ds:dword_67D36E80[edx*4]
mov	edi, ecx
rol	edi, 1
xor	edi, [eax+28h]
mov	esi, ecx
rol	esi, 1Dh
xor	esi, [eax+2Ch]
mov	edx, edi
and	edx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	edx, ds:dword_67D36780[edx*4]
xor	edx, ds:dword_67D36B80[ebp*4]
xor	edx, ebx
mov	ebx, edi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36880[ebx*4]
mov	ebx, edi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36980[ebx*4]
shr	edi, 18h
and	edi, 3Fh
xor	edx, ds:dword_67D36A80[edi*4]
mov	ebx, esi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36C80[ebx*4]
mov	ebx, esi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36D80[ebx*4]
shr	esi, 18h
and	esi, 3Fh
xor	edx, ds:dword_67D36E80[esi*4]
mov	edi, edx
rol	edi, 1
xor	edi, [eax+30h]
mov	esi, edx
rol	esi, 1Dh
xor	esi, [eax+34h]
mov	ebx, edi
and	ebx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ebx, ds:dword_67D36780[ebx*4]
xor	ebx, ds:dword_67D36B80[ebp*4]
xor	ebx, ecx
mov	ecx, edi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36880[ecx*4]
mov	ecx, edi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36980[ecx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ebx, ds:dword_67D36A80[edi*4]
mov	ecx, esi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36C80[ecx*4]
mov	ecx, esi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36D80[ecx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ebx, ds:dword_67D36E80[esi*4]
mov	edi, ebx
rol	edi, 1
xor	edi, [eax+38h]
mov	esi, ebx
rol	esi, 1Dh
xor	esi, [eax+3Ch]
mov	ecx, edi
and	ecx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ecx, ds:dword_67D36780[ecx*4]
xor	ecx, ds:dword_67D36B80[ebp*4]
xor	ecx, edx
mov	edx, edi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36880[edx*4]
mov	edx, edi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36980[edx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ecx, ds:dword_67D36A80[edi*4]
mov	edx, esi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36C80[edx*4]
mov	edx, esi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36D80[edx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ecx, ds:dword_67D36E80[esi*4]
mov	edi, ecx
rol	edi, 1
xor	edi, [eax+40h]
mov	esi, ecx
rol	esi, 1Dh
xor	esi, [eax+44h]
mov	edx, edi
and	edx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	edx, ds:dword_67D36780[edx*4]
xor	edx, ds:dword_67D36B80[ebp*4]
xor	edx, ebx
mov	ebx, edi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36880[ebx*4]
mov	ebx, edi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36980[ebx*4]
shr	edi, 18h
and	edi, 3Fh
xor	edx, ds:dword_67D36A80[edi*4]
mov	ebx, esi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36C80[ebx*4]
mov	ebx, esi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36D80[ebx*4]
shr	esi, 18h
and	esi, 3Fh
xor	edx, ds:dword_67D36E80[esi*4]
mov	edi, edx
rol	edi, 1
xor	edi, [eax+48h]
mov	esi, edx
rol	esi, 1Dh
xor	esi, [eax+4Ch]
mov	ebx, edi
and	ebx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ebx, ds:dword_67D36780[ebx*4]
xor	ebx, ds:dword_67D36B80[ebp*4]
xor	ebx, ecx
mov	ecx, edi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36880[ecx*4]
mov	ecx, edi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36980[ecx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ebx, ds:dword_67D36A80[edi*4]
mov	ecx, esi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36C80[ecx*4]
mov	ecx, esi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36D80[ecx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ebx, ds:dword_67D36E80[esi*4]
mov	edi, ebx
rol	edi, 1
xor	edi, [eax+50h]
mov	esi, ebx
rol	esi, 1Dh
xor	esi, [eax+54h]
mov	ecx, edi
and	ecx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ecx, ds:dword_67D36780[ecx*4]
xor	ecx, ds:dword_67D36B80[ebp*4]
xor	ecx, edx
mov	edx, edi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36880[edx*4]
mov	edx, edi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36980[edx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ecx, ds:dword_67D36A80[edi*4]
mov	edx, esi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36C80[edx*4]
mov	edx, esi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36D80[edx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ecx, ds:dword_67D36E80[esi*4]
mov	edi, ecx
rol	edi, 1
xor	edi, [eax+58h]
mov	esi, ecx
rol	esi, 1Dh
xor	esi, [eax+5Ch]
mov	edx, edi
and	edx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	edx, ds:dword_67D36780[edx*4]
xor	edx, ds:dword_67D36B80[ebp*4]
xor	edx, ebx
mov	ebx, edi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36880[ebx*4]
mov	ebx, edi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36980[ebx*4]
shr	edi, 18h
and	edi, 3Fh
xor	edx, ds:dword_67D36A80[edi*4]
mov	ebx, esi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36C80[ebx*4]
mov	ebx, esi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36D80[ebx*4]
shr	esi, 18h
and	esi, 3Fh
xor	edx, ds:dword_67D36E80[esi*4]
mov	edi, edx
rol	edi, 1
xor	edi, [eax+60h]
mov	esi, edx
rol	esi, 1Dh
xor	esi, [eax+64h]
mov	ebx, edi
and	ebx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ebx, ds:dword_67D36780[ebx*4]
xor	ebx, ds:dword_67D36B80[ebp*4]
xor	ebx, ecx
mov	ecx, edi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36880[ecx*4]
mov	ecx, edi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36980[ecx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ebx, ds:dword_67D36A80[edi*4]
mov	ecx, esi
shr	ecx, 8
and	ecx, 3Fh
xor	ebx, ds:dword_67D36C80[ecx*4]
mov	ecx, esi
shr	ecx, 10h
and	ecx, 3Fh
xor	ebx, ds:dword_67D36D80[ecx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ebx, ds:dword_67D36E80[esi*4]
mov	edi, ebx
rol	edi, 1
xor	edi, [eax+68h]
mov	esi, ebx
rol	esi, 1Dh
xor	esi, [eax+6Ch]
mov	ecx, edi
and	ecx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	ecx, ds:dword_67D36780[ecx*4]
xor	ecx, ds:dword_67D36B80[ebp*4]
xor	ecx, edx
mov	edx, edi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36880[edx*4]
mov	edx, edi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36980[edx*4]
shr	edi, 18h
and	edi, 3Fh
xor	ecx, ds:dword_67D36A80[edi*4]
mov	edx, esi
shr	edx, 8
and	edx, 3Fh
xor	ecx, ds:dword_67D36C80[edx*4]
mov	edx, esi
shr	edx, 10h
and	edx, 3Fh
xor	ecx, ds:dword_67D36D80[edx*4]
shr	esi, 18h
and	esi, 3Fh
xor	ecx, ds:dword_67D36E80[esi*4]
mov	edi, ecx
rol	edi, 1
xor	edi, [eax+70h]
mov	esi, ecx
rol	esi, 1Dh
xor	esi, [eax+74h]
mov	edx, edi
and	edx, 3Fh
mov	ebp, esi
and	ebp, 3Fh
mov	edx, ds:dword_67D36780[edx*4]
xor	edx, ds:dword_67D36B80[ebp*4]
xor	edx, ebx
mov	ebx, edi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36880[ebx*4]
mov	ebx, edi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36980[ebx*4]
shr	edi, 18h
and	edi, 3Fh
xor	edx, ds:dword_67D36A80[edi*4]
mov	ebx, esi
shr	ebx, 8
and	ebx, 3Fh
xor	edx, ds:dword_67D36C80[ebx*4]
mov	ebx, esi
shr	ebx, 10h
and	ebx, 3Fh
xor	edx, ds:dword_67D36D80[ebx*4]
shr	esi, 18h
and	esi, 3Fh
xor	edx, ds:dword_67D36E80[esi*4]
mov	esi, edx
rol	esi, 1
xor	esi, [eax+78h]
mov	ebx, edx
rol	ebx, 1Dh
xor	ebx, [eax+7Ch]
mov	eax, esi
and	eax, 3Fh
mov	edi, ebx
and	edi, 3Fh
mov	eax, ds:dword_67D36780[eax*4]
xor	eax, ds:dword_67D36B80[edi*4]
xor	eax, ecx
mov	ecx, esi
shr	ecx, 8
and	ecx, 3Fh
xor	eax, ds:dword_67D36880[ecx*4]
mov	ecx, esi
shr	ecx, 10h
and	ecx, 3Fh
xor	eax, ds:dword_67D36980[ecx*4]
shr	esi, 18h
and	esi, 3Fh
xor	eax, ds:dword_67D36A80[esi*4]
mov	ecx, ebx
shr	ecx, 8
and	ecx, 3Fh
xor	eax, ds:dword_67D36C80[ecx*4]
mov	ecx, ebx
shr	ecx, 10h
and	ecx, 3Fh
xor	eax, ds:dword_67D36D80[ecx*4]
shr	ebx, 18h
and	ebx, 3Fh
xor	eax, ds:dword_67D36E80[ebx*4]
mov	ecx, eax
shr	ecx, 1
xor	ecx, edx
and	ecx, 55555555h
xor	edx, ecx
shl	ecx, 1
xor	ecx, eax
mov	eax, edx
shr	eax, 8
xor	eax, ecx
and	eax, 0FF00FFh
xor	ecx, eax
mov	ebx, eax
shl	ebx, 8
xor	ebx, edx
mov	eax, ebx
shr	eax, 2
xor	eax, ecx
and	eax, 33333333h
xor	ecx, eax
lea	edx, ds:0[eax*4]
xor	edx, ebx
mov	ebx, ecx
shr	ebx, 10h
xor	ebx, edx
and	ebx, 0FFFFh
xor	edx, ebx
shl	ebx, 10h
xor	ebx, ecx
mov	eax, ebx
shr	eax, 4
xor	eax, edx
and	eax, 0F0F0F0Fh
xor	edx, eax
shl	eax, 4
xor	eax, ebx
mov	ecx, eax
shr	ecx, 18h
mov	ebx, [esp+3Ch+var_30]
mov	[ebx], cl
mov	ecx, eax
shr	ecx, 10h
mov	[ebx+1], cl
mov	ecx, eax
shr	ecx, 8
mov	[ebx+2], cl
mov	[ebx+3], al
mov	eax, edx
shr	eax, 18h
mov	[ebx+4], al
mov	eax, edx
shr	eax, 10h
mov	[ebx+5], al
mov	eax, edx
shr	eax, 8
mov	[ebx+6], al
mov	[ebx+7], dl
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD9546
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+68h+var_4C], eax
xor	eax, eax
mov	eax, [esp+68h+var_38]
mov	[esp+68h+var_68], eax
call	purple_cipher_context_get_data
mov	eax, [eax]
mov	edx, [esp+68h+var_4C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD9578
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+94h+var_60]
mov	eax, ds:__stack_chk_guard
mov	[esp+94h+var_78], eax
xor	eax, eax
mov	eax, [esp+94h+var_64]
mov	[esp+94h+var_94], eax
call	purple_cipher_context_get_data
mov	[eax], ebx
mov	eax, [esp+94h+var_78]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD95B2
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+0C0h+var_8C]
mov	eax, ds:__stack_chk_guard
mov	[esp+0C0h+var_A4], eax
xor	eax, eax
mov	eax, [esp+0C0h+var_90]
mov	[esp+0C0h+var_C0], eax
call	purple_cipher_context_get_data
mov	ebx, eax
lea	edx, [eax+0Ch]
mov	eax, esi
call	sub_67CD87AC
lea	edx, [ebx+10Ch]
lea	eax, [esi+8]
call	sub_67CD87AC
lea	edx, [ebx+20Ch]
lea	eax, [esi+10h]
call	sub_67CD87AC
mov	eax, ebx
mov	edx, ebx
xor	ecx, ecx
xchg	ax, ax
mov	ebx, [eax+84h]
mov	[edx+8Ch], ebx
mov	ebx, [eax+88h]
mov	[edx+90h], ebx
mov	ebx, [eax+184h]
mov	[edx+18Ch], ebx
mov	ebx, [eax+188h]
mov	[edx+190h], ebx
mov	ebx, [eax+284h]
mov	[edx+28Ch], ebx
mov	ebx, [eax+288h]
mov	[edx+290h], ebx
add	ecx, 2
sub	eax, 8
add	edx, 8
cmp	ecx, 20h
jnz	short loc_67CD9608
mov	eax, [esp+0C0h+var_A4]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD9670
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+0ECh+var_B8]
mov	eax, ds:__stack_chk_guard
mov	[esp+0ECh+var_D0], eax
xor	eax, eax
mov	eax, [esp+0ECh+var_BC]
mov	[esp+0ECh+var_EC], eax
call	purple_cipher_context_get_data
mov	esi, eax
mov	edx, eax
mov	eax, ebx
call	sub_67CD87AC
mov	ebx, esi
xor	ecx, ecx
nop
mov	eax, [ebx+78h]
mov	[esi+ecx*4+80h], eax
mov	eax, [ebx+7Ch]
mov	[esi+ecx*4+84h], eax
add	ecx, 2
sub	ebx, 8
cmp	ecx, 20h
jnz	short loc_67CD96A8
mov	eax, [esp+0ECh+var_D0]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD96D9
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+148h+var_E8]
mov	[esp+148h+var_120], eax
mov	edi, [esp+148h+var_E4]
mov	edx, [esp+148h+var_E0]
mov	[esp+148h+var_12C], edx
mov	eax, [esp+148h+var_DC]
mov	[esp+148h+var_124], eax
mov	edx, [esp+148h+var_D8]
mov	[esp+148h+var_11C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+148h+var_10C], eax
xor	eax, eax
mov	[esp+148h+var_114], 0
mov	[esp+148h+var_110], 0
cmp	[esp+148h+var_12C], 7
jbe	loc_67CD97EC
mov	ebx, 8
xor	esi, esi
mov	[esp+148h+var_128], edi
mov	edi, [esp+148h+var_120]
jmp	short loc_67CD9746
align 4
mov	ebx, eax
mov	ebp, [esp+148h+var_124]
add	ebp, esi
add	esi, [esp+148h+var_128]
mov	[esp+0], edi
call	purple_cipher_context_get_data
mov	dword ptr [esp+0], 1
mov	ecx, ebp
mov	edx, esi
call	sub_67CD8BE4
lea	eax, [ebx+8]
mov	esi, ebx
cmp	[esp+148h+var_12C], eax
jnb	short loc_67CD9744
mov	edi, [esp+148h+var_128]
mov	ecx, ebx
mov	eax, [esp+148h+var_12C]
cmp	[esp+148h+var_12C], ecx
jbe	short loc_67CD97E4
shl	eax, 1
sub	eax, ecx
mov	edx, [esp+148h+var_11C]
mov	[edx], eax
mov	eax, ecx
lea	esi, [esp+148h+var_114]
mov	edx, esi
sub	edx, ebx
mov	ebp, [esp+148h+var_12C]
nop
mov	al, [edi+eax]
mov	[edx+ebx], al
inc	ebx
mov	eax, ebx
cmp	ebp, ebx
ja	short loc_67CD979C
mov	ebx, [esp+148h+var_124]
add	ebx, ecx
mov	eax, [esp+148h+var_120]
mov	[esp+0], eax
call	purple_cipher_context_get_data
mov	dword ptr [esp+0], 1
mov	ecx, ebx
mov	edx, esi
call	sub_67CD8BE4
xor	eax, eax
mov	edx, [esp+148h+var_10C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD97F2
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+148h+var_11C]
mov	[edx], eax
jmp	short loc_67CD97CB
xor	ecx, ecx
xor	ebx, ebx
jmp	short loc_67CD9779
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+1A4h+var_144]
mov	[esp+1A4h+var_17C], eax
mov	edi, [esp+1A4h+var_140]
mov	edx, [esp+1A4h+var_13C]
mov	[esp+1A4h+var_188], edx
mov	eax, [esp+1A4h+var_138]
mov	[esp+1A4h+var_180], eax
mov	edx, [esp+1A4h+var_134]
mov	[esp+1A4h+var_178], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+1A4h+var_168], eax
xor	eax, eax
mov	[esp+1A4h+var_170], 0
mov	[esp+1A4h+var_16C], 0
cmp	[esp+1A4h+var_188], 7
jbe	loc_67CD9904
mov	ebx, 8
xor	esi, esi
mov	[esp+1A4h+var_184], edi
mov	edi, [esp+1A4h+var_17C]
jmp	short loc_67CD985E
align 4
mov	ebx, eax
mov	ebp, [esp+1A4h+var_180]
add	ebp, esi
add	esi, [esp+1A4h+var_184]
mov	[esp+0], edi
call	purple_cipher_context_get_data
mov	dword ptr [esp+0], 0
mov	ecx, ebp
mov	edx, esi
call	sub_67CD8BE4
lea	eax, [ebx+8]
mov	esi, ebx
cmp	[esp+1A4h+var_188], eax
jnb	short loc_67CD985C
mov	edi, [esp+1A4h+var_184]
mov	ecx, ebx
mov	eax, [esp+1A4h+var_188]
cmp	[esp+1A4h+var_188], ecx
jbe	short loc_67CD98FC
shl	eax, 1
sub	eax, ecx
mov	edx, [esp+1A4h+var_178]
mov	[edx], eax
mov	eax, ecx
lea	esi, [esp+1A4h+var_170]
mov	edx, esi
sub	edx, ebx
mov	ebp, [esp+1A4h+var_188]
nop
mov	al, [edi+eax]
mov	[edx+ebx], al
inc	ebx
mov	eax, ebx
cmp	ebp, ebx
ja	short loc_67CD98B4
mov	ebx, [esp+1A4h+var_180]
add	ebx, ecx
mov	eax, [esp+1A4h+var_17C]
mov	[esp+0], eax
call	purple_cipher_context_get_data
mov	dword ptr [esp+0], 0
mov	ecx, ebx
mov	edx, esi
call	sub_67CD8BE4
xor	eax, eax
mov	edx, [esp+1A4h+var_168]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD990A
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+1A4h+var_178]
mov	[edx], eax
jmp	short loc_67CD98E3
xor	ecx, ecx
xor	ebx, ebx
jmp	short loc_67CD9891
call	__stack_chk_fail
align 10h
push	edi
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+1D0h+var_1B4], eax
xor	eax, eax
mov	eax, [esp+1D0h+var_1A0]
mov	[esp+1D0h+var_1D0], eax
call	purple_cipher_context_get_data
mov	edx, eax
mov	ecx, 30Ch
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+1D0h+var_1B4]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD9951
mov	[esp+1D0h+var_1A0], edx
add	esp, 28h
pop	edi
jmp	g_free
call	__stack_chk_fail
align 4
push	edi
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+1FCh+var_1E0], eax
xor	eax, eax
mov	eax, [esp+1FCh+var_1CC]
mov	[esp+1FCh+var_1FC], eax
call	purple_cipher_context_get_data
mov	edx, eax
mov	ecx, 100h
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+1FCh+var_1E0]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CD9999
mov	[esp+1FCh+var_1CC], edx
add	esp, 28h
pop	edi
jmp	g_free
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+228h+var_1F8]
mov	eax, ds:__stack_chk_guard
mov	[esp+228h+var_20C], eax
xor	eax, eax
mov	[esp+228h+var_228], 30Ch
call	g_malloc0
mov	edx, [esp+228h+var_20C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD99DC
mov	[esp+228h+var_1F4], eax
mov	[esp+228h+var_1F8], ebx
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_set_data
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+254h+var_224]
mov	eax, ds:__stack_chk_guard
mov	[esp+254h+var_238], eax
xor	eax, eax
mov	[esp+254h+var_254], 100h
call	g_malloc0
mov	edx, [esp+254h+var_238]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CD9A20
mov	[esp+254h+var_220], eax
mov	[esp+254h+var_224], ebx
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_set_data
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+2E0h+var_24C]
mov	[esp+2E0h+var_2B0], eax
mov	edx, [esp+2E0h+var_248]
mov	[esp+2E0h+var_2B4], edx
mov	ecx, [esp+2E0h+var_244]
mov	[esp+2E0h+var_298], ecx
mov	eax, [esp+2E0h+var_240]
mov	[esp+2E0h+var_294], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+2E0h+var_274], edx
xor	edx, edx
mov	eax, [esp+2E0h+var_250]
mov	[esp+2E0h+var_2E0], eax
call	purple_cipher_context_get_data
mov	[esp+2E0h+var_29C], eax
mov	ecx, eax
mov	eax, [eax]
test	eax, eax
jz	short loc_67CD9AD8
dec	eax
jz	loc_67CD9B90
mov	[esp+2E0h+var_2CC], offset aDes3_decrypt 
mov	[esp+2E0h+var_2D0], 2F7h
mov	[esp+2E0h+var_2D4], offset aCiphersDes_c 
mov	[esp+2E0h+var_2D8], offset aFileSLineDSS_0 
mov	[esp+2E0h+var_2DC], 8
mov	[esp+2E0h+var_2E0], 0
call	g_log
			
xor	eax, eax
mov	edx, [esp+2E0h+var_274]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CD9DD3
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+2E0h+var_27C], 0
mov	[esp+2E0h+var_278], 0
cmp	[esp+2E0h+var_2B4], 7
jbe	loc_67CD9DC1
mov	edi, 8
xor	edx, edx
lea	eax, [ecx+20Ch]
mov	[esp+2E0h+var_2A8], eax
lea	esi, [esp+2E0h+var_27C]
add	ecx, 10Ch
mov	[esp+2E0h+var_2A4], ecx
mov	eax, [esp+2E0h+var_29C]
add	eax, 0Ch
mov	[esp+2E0h+var_2AC], eax
mov	ebp, [esp+2E0h+var_298]
jmp	short loc_67CD9B26
align 4
mov	edi, eax
lea	ebx, [ebp+edx+0]
add	edx, [esp+2E0h+var_2B0]
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	eax, [esp+2E0h+var_2A8]
call	sub_67CD8BE4
mov	[esp+2E0h+var_2E0], 0
mov	ecx, esi
mov	edx, ebx
mov	eax, [esp+2E0h+var_2A4]
call	sub_67CD8BE4
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, esi
mov	eax, [esp+2E0h+var_2AC]
call	sub_67CD8BE4
lea	eax, [edi+8]
mov	edx, edi
cmp	[esp+2E0h+var_2B4], eax
jnb	short loc_67CD9B24
mov	ecx, edi
cmp	[esp+2E0h+var_2B4], ecx
ja	loc_67CD9D2D
mov	ecx, [esp+2E0h+var_2B4]
mov	edx, [esp+2E0h+var_294]
mov	[edx], ecx
jmp	loc_67CD9ABD
align 10h
mov	[esp+2E0h+var_284], 0
mov	[esp+2E0h+var_280], 0
mov	ecx, [esp+2E0h+var_29C]
mov	eax, [ecx+4]
mov	edx, [ecx+8]
mov	[esp+2E0h+var_27C], eax
mov	[esp+2E0h+var_278], edx
cmp	[esp+2E0h+var_2B4], 7
jbe	loc_67CD9DCA
mov	edi, 8
xor	ebp, ebp
lea	eax, [ecx+20Ch]
mov	[esp+2E0h+var_2A8], eax
lea	esi, [esp+2E0h+var_27C]
lea	edx, [ecx+10Ch]
mov	[esp+2E0h+var_2A4], edx
add	ecx, 0Ch
mov	[esp+2E0h+var_2AC], ecx
lea	edx, [esp+2E0h+var_284]
mov	[esp+2E0h+var_2A0], edx
nop
mov	ebx, [esp+2E0h+var_298]
add	ebx, ebp
add	ebp, [esp+2E0h+var_2B0]
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, ebp
mov	eax, [esp+2E0h+var_2A8]
call	sub_67CD8BE4
mov	[esp+2E0h+var_2E0], 0
mov	ecx, [esp+2E0h+var_2A0]
mov	edx, ebx
mov	eax, [esp+2E0h+var_2A4]
call	sub_67CD8BE4
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, [esp+2E0h+var_2A0]
mov	eax, [esp+2E0h+var_2AC]
call	sub_67CD8BE4
xor	eax, eax
mov	cl, [esi+eax]
xor	[ebx+eax], cl
inc	eax
cmp	eax, 8
jnz	short loc_67CD9C38
mov	eax, [ebp+0]
mov	edx, [ebp+4]
mov	[esp+2E0h+var_27C], eax
mov	[esp+2E0h+var_278], edx
lea	eax, [edi+8]
mov	ebp, edi
cmp	[esp+2E0h+var_2B4], eax
jb	short loc_67CD9C64
mov	edi, eax
jmp	short loc_67CD9BEC
align 4
mov	ebx, edi
mov	edx, [esp+2E0h+var_2B4]
mov	eax, [esp+2E0h+var_294]
mov	[eax], edx
cmp	edx, ebx
jbe	loc_67CD9ABD
mov	eax, edx
shl	eax, 1
sub	eax, ebx
mov	ecx, [esp+2E0h+var_294]
mov	[ecx], eax
mov	[esp+2E0h+var_284], 0
mov	[esp+2E0h+var_280], 0
mov	eax, edi
mov	edx, ebx
lea	ecx, [esp+2E0h+var_284]
mov	[esp+2E0h+var_2A0], ecx
sub	ecx, edi
mov	esi, [esp+2E0h+var_2B0]
mov	ebp, [esp+2E0h+var_2B4]
xchg	ax, ax
mov	dl, [esi+edx]
mov	[ecx+eax], dl
inc	eax
mov	edx, eax
cmp	ebp, eax
ja	short loc_67CD9CAC
add	ebx, [esp+2E0h+var_298]
mov	eax, [esp+2E0h+var_29C]
add	eax, 20Ch
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, [esp+2E0h+var_2A0]
call	sub_67CD8BE4
mov	eax, [esp+2E0h+var_29C]
add	eax, 10Ch
mov	[esp+2E0h+var_2E0], 0
mov	ecx, [esp+2E0h+var_2A0]
mov	edx, ebx
call	sub_67CD8BE4
mov	eax, [esp+2E0h+var_29C]
add	eax, 0Ch
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, [esp+2E0h+var_2A0]
call	sub_67CD8BE4
xor	eax, eax
lea	esi, [esp+2E0h+var_27C]
mov	ecx, [esp+2E0h+var_298]
lea	edx, [ecx+edi]
lea	esi, [esi+0]
mov	cl, [esi+eax]
xor	[edx+eax], cl
inc	eax
cmp	eax, 8
jnz	short loc_67CD9D1C
jmp	loc_67CD9ABD
mov	eax, [esp+2E0h+var_2B4]
shl	eax, 1
sub	eax, ecx
mov	edx, [esp+2E0h+var_294]
mov	[edx], eax
mov	[esp+2E0h+var_27C], 0
mov	[esp+2E0h+var_278], 0
mov	eax, ecx
lea	esi, [esp+2E0h+var_27C]
mov	edx, esi
sub	edx, edi
mov	ebx, [esp+2E0h+var_2B0]
mov	ebp, [esp+2E0h+var_2B4]
lea	esi, [esi+0]
mov	al, [ebx+eax]
mov	[edx+edi], al
inc	edi
mov	eax, edi
cmp	ebp, edi
ja	short loc_67CD9D60
mov	ebx, [esp+2E0h+var_298]
add	ebx, ecx
mov	eax, [esp+2E0h+var_29C]
add	eax, 20Ch
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, esi
call	sub_67CD8BE4
mov	eax, [esp+2E0h+var_29C]
add	eax, 10Ch
mov	[esp+2E0h+var_2E0], 0
mov	ecx, esi
mov	edx, ebx
call	sub_67CD8BE4
mov	eax, [esp+2E0h+var_29C]
add	eax, 0Ch
mov	[esp+2E0h+var_2E0], 1
mov	ecx, ebx
mov	edx, esi
call	sub_67CD8BE4
jmp	loc_67CD9ABD
xor	ecx, ecx
xor	edi, edi
jmp	loc_67CD9B75
xor	ebx, ebx
xor	edi, edi
jmp	loc_67CD9C66
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+34Ch+var_2D8]
mov	eax, [esp+34Ch+var_2D4]
mov	[esp+34Ch+var_328], eax
mov	edx, [esp+34Ch+var_2D0]
mov	[esp+34Ch+var_314], edx
mov	ecx, [esp+34Ch+var_2CC]
mov	[esp+34Ch+var_310], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+34Ch+var_300], eax
xor	eax, eax
mov	eax, [esp+34Ch+var_2DC]
mov	[esp+34Ch+var_34C], eax
call	purple_cipher_context_get_data
mov	[esp+34Ch+var_318], eax
mov	eax, [eax]
test	eax, eax
jz	short loc_67CD9E74
dec	eax
jz	loc_67CD9F3C
mov	[esp+34Ch+var_338], offset aDes3_encrypt 
mov	[esp+34Ch+var_33C], 27Dh
mov	[esp+34Ch+var_340], offset aCiphersDes_c 
mov	[esp+34Ch+var_344], offset aFileSLineDSS_0 
mov	[esp+34Ch+var_348], 8
mov	[esp+34Ch+var_34C], 0
call	g_log
			
xor	eax, eax
mov	ecx, [esp+34Ch+var_300]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CDA0E7
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+34Ch+var_308], 0
mov	[esp+34Ch+var_304], 0
cmp	[esp+34Ch+var_328], 7
jbe	loc_67CDA0D5
mov	ebp, 8
xor	edx, edx
mov	eax, [esp+34Ch+var_318]
add	eax, 0Ch
mov	[esp+34Ch+var_324], eax
lea	ebx, [esp+34Ch+var_308]
mov	eax, [esp+34Ch+var_318]
add	eax, 10Ch
mov	[esp+34Ch+var_31C], eax
mov	eax, [esp+34Ch+var_318]
add	eax, 20Ch
mov	[esp+34Ch+var_320], eax
mov	[esp+34Ch+var_32C], edi
mov	edi, [esp+34Ch+var_314]
jmp	short loc_67CD9ECE
align 4
mov	ebp, eax
lea	esi, [edi+edx]
add	edx, [esp+34Ch+var_32C]
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	eax, [esp+34Ch+var_324]
call	sub_67CD8BE4
mov	[esp+34Ch+var_34C], 1
mov	ecx, ebx
mov	edx, esi
mov	eax, [esp+34Ch+var_31C]
call	sub_67CD8BE4
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	edx, ebx
mov	eax, [esp+34Ch+var_320]
call	sub_67CD8BE4
lea	eax, [ebp+8]
mov	edx, ebp
cmp	[esp+34Ch+var_328], eax
jnb	short loc_67CD9ECC
mov	edi, [esp+34Ch+var_32C]
mov	ecx, ebp
cmp	[esp+34Ch+var_328], ecx
ja	loc_67CDA085
mov	ecx, [esp+34Ch+var_328]
mov	edx, [esp+34Ch+var_310]
mov	[edx], ecx
jmp	loc_67CD9E5A
align 4
mov	ecx, [esp+34Ch+var_318]
mov	eax, [ecx+4]
mov	edx, [ecx+8]
mov	[esp+34Ch+var_308], eax
mov	[esp+34Ch+var_304], edx
cmp	[esp+34Ch+var_328], 7
jbe	loc_67CDA0DE
mov	ebp, 8
xor	esi, esi
mov	eax, [esp+34Ch+var_318]
add	eax, 0Ch
mov	[esp+34Ch+var_324], eax
lea	ebx, [esp+34Ch+var_308]
mov	eax, [esp+34Ch+var_318]
add	eax, 10Ch
mov	[esp+34Ch+var_31C], eax
mov	eax, [esp+34Ch+var_318]
add	eax, 20Ch
mov	[esp+34Ch+var_320], eax
lea	esi, [esi+0]
xor	eax, eax
lea	edx, [edi+esi]
lea	esi, [esi+0]
mov	cl, [edx+eax]
xor	[ebx+eax], cl
inc	eax
cmp	eax, 8
jnz	short loc_67CD9F94
add	esi, [esp+34Ch+var_314]
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	edx, ebx
mov	eax, [esp+34Ch+var_324]
call	sub_67CD8BE4
mov	[esp+34Ch+var_34C], 1
mov	ecx, ebx
mov	edx, esi
mov	eax, [esp+34Ch+var_31C]
call	sub_67CD8BE4
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	edx, ebx
mov	eax, [esp+34Ch+var_320]
call	sub_67CD8BE4
mov	eax, [esi]
mov	edx, [esi+4]
mov	[esp+34Ch+var_308], eax
mov	[esp+34Ch+var_304], edx
lea	eax, [ebp+8]
mov	esi, ebp
cmp	[esp+34Ch+var_328], eax
jb	short loc_67CD9FFC
mov	ebp, eax
jmp	short loc_67CD9F8C
mov	ecx, ebp
cmp	[esp+34Ch+var_328], ecx
jbe	loc_67CDA0C6
mov	eax, [esp+34Ch+var_328]
shl	eax, 1
sub	eax, ecx
mov	edx, [esp+34Ch+var_310]
mov	[edx], eax
mov	edx, ecx
lea	ebx, [esp+34Ch+var_308]
mov	eax, ebx
sub	eax, ebp
mov	esi, [esp+34Ch+var_328]
mov	dl, [edi+edx]
xor	[eax+ebp], dl
inc	ebp
mov	edx, ebp
cmp	esi, ebp
ja	short loc_67CDA024
mov	esi, [esp+34Ch+var_314]
add	esi, ecx
mov	eax, [esp+34Ch+var_318]
add	eax, 0Ch
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	edx, ebx
call	sub_67CD8BE4
mov	eax, [esp+34Ch+var_318]
add	eax, 10Ch
mov	[esp+34Ch+var_34C], 1
mov	ecx, ebx
mov	edx, esi
call	sub_67CD8BE4
mov	eax, [esp+34Ch+var_318]
add	eax, 20Ch
mov	[esp+34Ch+var_34C], 0
mov	ecx, esi
mov	edx, ebx
call	sub_67CD8BE4
jmp	loc_67CD9E5A
mov	eax, [esp+34Ch+var_328]
shl	eax, 1
sub	eax, ecx
mov	edx, [esp+34Ch+var_310]
mov	[edx], eax
mov	[esp+34Ch+var_308], 0
mov	[esp+34Ch+var_304], 0
mov	eax, ecx
lea	ebx, [esp+34Ch+var_308]
mov	edx, ebx
sub	edx, ebp
mov	esi, [esp+34Ch+var_328]
lea	esi, [esi+0]
mov	al, [edi+eax]
mov	[edx+ebp], al
inc	ebp
mov	eax, ebp
cmp	esi, ebp
ja	short loc_67CDA0B4
jmp	loc_67CDA031
mov	edx, [esp+34Ch+var_328]
mov	eax, [esp+34Ch+var_310]
mov	[eax], edx
jmp	loc_67CD9E5A
xor	ecx, ecx
xor	ebp, ebp
jmp	loc_67CD9F20
xor	ecx, ecx
xor	ebp, ebp
jmp	loc_67CD9FFE
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	[esp+2Ch+arg_8], 8
jz	short loc_67CDA138
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDA15C
mov	[esp+2Ch+arg_8], offset	aLen8 
mov	[esp+2Ch+arg_4], offset	aDes3_set_iv 
mov	[esp+2Ch+arg_0], 0
add	esp, 28h
pop	ebx
jmp	g_return_if_fail_warning
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	edx, [ebx]
mov	[eax+4], edx
mov	edx, [ebx+4]
mov	[eax+8], edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA15C
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_des_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D300E0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA187
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_des3_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D30140
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA1AF
add	esp, 1Ch
retn
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 40h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA1D4
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 40h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA1FC
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 40h
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA224
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 1
call	g_checksum_new
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA268
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_set_data
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	[esp+68h+var_4C], ecx
mov	edi, [esp+68h+var_18]
mov	esi, [esp+68h+var_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+68h+var_3C], eax
xor	eax, eax
mov	[esp+68h+var_68], edx
call	g_checksum_type_get_length
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_get_data
cmp	ebp, [esp+4Ch+var_30]
ja	short loc_67CDA2F8
mov	edx, eax
test	eax, eax
jz	short loc_67CDA318
lea	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], edx
call	g_checksum_get_digest
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_reset
test	esi, esi
jz	short loc_67CDA2DC
mov	eax, [esp+4Ch+var_30]
mov	[esi], eax
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA338
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aLenRequired_le 
mov	[esp+4Ch+var_48], offset aPurple_g_check 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDA2E1
mov	[esp+4Ch+var_44], offset aChecksumNull 
mov	[esp+4Ch+var_48], offset aPurple_g_check 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDA2E1
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+38h+var_18]
mov	ecx, [esp+38h+var_14]
mov	edx, [esp+38h+var_10]
mov	ebx, [esp+38h+var_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+38h+var_2C], esi
xor	esi, esi
mov	esi, [esp+38h+var_2C]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDA384
mov	[esp+38h+var_14], ebx
mov	[esp+38h+var_18], edx
mov	edx, 2
add	esp, 14h
pop	ebx
pop	esi
jmp	loc_67CDA270
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+38h+var_18]
mov	ecx, [esp+38h+var_14]
mov	edx, [esp+38h+var_10]
mov	ebx, [esp+38h+var_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+38h+var_2C], esi
xor	esi, esi
mov	esi, [esp+38h+var_2C]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDA3D0
mov	[esp+38h+var_14], ebx
mov	[esp+38h+var_18], edx
mov	edx, 1
add	esp, 14h
pop	ebx
pop	esi
jmp	loc_67CDA270
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+38h+var_18]
mov	ecx, [esp+38h+var_14]
mov	edx, [esp+38h+var_10]
mov	ebx, [esp+38h+var_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+38h+var_2C], esi
xor	esi, esi
mov	esi, [esp+38h+var_2C]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDA419
mov	[esp+38h+var_14], ebx
mov	[esp+38h+var_18], edx
xor	edx, edx
add	esp, 14h
pop	ebx
pop	esi
jmp	loc_67CDA270
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	edi, eax
test	eax, eax
jnz	short loc_67CDA470
jmp	short loc_67CDA4B3
align 10h
mov	[esp+2Ch+var_24], 7FFFFFFFh
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	g_checksum_update
sub	ebx, 7FFFFFFFh
add	esi, 7FFFFFFFh
cmp	ebx, 7FFFFFFEh
ja	short loc_67CDA450
test	ebx, ebx
jnz	short loc_67CDA490
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDA4E2
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDA4E2
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_checksum_update
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDA4E2
mov	[esp+2Ch+arg_8], offset	aChecksumNull 
mov	[esp+2Ch+arg_4], offset	aPurple_g_che_0	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
test	eax, eax
jz	short loc_67CDA520
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA54C
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_checksum_free
align 10h
mov	[esp+2Ch+var_24], offset aChecksumNull 
mov	[esp+2Ch+var_28], offset aPurple_g_che_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA54C
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
test	eax, eax
jz	short loc_67CDA588
mov	[esp+2Ch+var_2C], eax
call	g_checksum_reset
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDA5A6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChecksumNull 
mov	[esp+2Ch+var_28], offset aPurple_g_che_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDA577
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA5D0
add	esp, 1Ch
jmp	short sub_67CDA554
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA5FF
add	esp, 1Ch
jmp	sub_67CDA554
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA62B
add	esp, 1Ch
jmp	sub_67CDA554
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0
call	g_checksum_new
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA66C
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_set_data
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 2
call	g_checksum_new
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA6B0
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_cipher_context_set_data
call	__stack_chk_fail
align 4
public purple_md5_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D301A0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA6DB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_sha1_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D30200
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA703
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_sha256_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D30260
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA72B
add	esp, 1Ch
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA75D
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_reset
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_get_data
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA7A8
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_get_data
mov	edi, eax
mov	ebx, [eax]
test	ebx, ebx
jz	loc_67CDA8A4
mov	[esp+4Ch+var_4C], 64h
call	g_malloc
mov	esi, eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], 64h
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_38], eax
call	purple_cipher_context_reset
mov	edx, [edi+8]
mov	[esp+4Ch+var_44], edx
mov	edx, [edi+0Ch]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_append
mov	edx, [esp+4Ch+var_24]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_append
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [esp+4Ch+var_38]
test	eax, eax
jnz	short loc_67CDA87C
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDA8C4
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_40], ebp
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_digest
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CDA866
align 4
mov	[esp+4Ch+var_44], offset aHashNull 
mov	[esp+4Ch+var_48], offset aHmac_digest 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDA866
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_get_data
mov	esi, eax
mov	ecx, [eax]
test	ecx, ecx
jz	loc_67CDAA5C
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esi+8]
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_4C], eax
call	g_malloc
mov	ebp, eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_malloc
mov	[esi+0Ch], eax
mov	eax, [esp+4Ch+var_30]
cmp	[esp+4Ch+var_34], eax
jb	loc_67CDA9D4
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_memdup
mov	ebx, eax
mov	eax, [esp+4Ch+var_34]
cmp	eax, [esp+4Ch+var_30]
ja	loc_67CDAA36
			
xor	eax, eax
mov	edx, [esp+4Ch+var_34]
test	edx, edx
jle	short loc_67CDA981
lea	esi, [esi+0]
mov	dl, [ebx+eax]
xor	edx, 36h
mov	[ebp+eax+0], dl
mov	ecx, [esi+0Ch]
mov	dl, [ebx+eax]
xor	edx, 5Ch
mov	[ecx+eax], dl
inc	eax
cmp	eax, [esp+4Ch+var_34]
jnz	short loc_67CDA964
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_48], 0
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_reset
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebp
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_append
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDAA7D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], 0
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_reset
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], ebx
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_append
mov	[esp+4Ch+var_4C], 64h
call	g_malloc
mov	ebx, eax
lea	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], 64h
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_digest
mov	eax, [esp+4Ch+var_34]
cmp	eax, [esp+4Ch+var_30]
jbe	loc_67CDA957
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_realloc
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
sub	ecx, edx
add	edx, eax
xor	eax, eax
mov	edi, edx
rep stosb
jmp	loc_67CDA957
align 4
mov	[esp+4Ch+var_44], offset aHctxHashNull 
mov	[esp+4Ch+var_48], offset aHmac_set_key_w 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	loc_67CDA9B9
call	__stack_chk_fail
align 4
push	edi
sub	esp, 28h
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	sub_67CDA8CC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDAAC8
add	esp, 28h
pop	edi
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	ebx, eax
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+4], 0
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CDAB0D
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_destroy
mov	dword ptr [ebx], 0
mov	dword ptr [ebx+8], 0
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+0Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDAB3D
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_set_data
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDAB92
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_cipher_context_reset
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	esi, eax
mov	[esp+2Ch+var_28], offset aHash 
mov	[esp+2Ch+var_2C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CDABE4
mov	eax, [esi+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDABE8
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_67CDABD1
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aHash 
mov	[esp+2Ch+var_2C], esi
call	purple_strequal
test	eax, eax
jnz	short loc_67CDAC40
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDAC83
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CDAC59
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_destroy
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+4], eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], edi
call	purple_cipher_context_new_by_name
mov	[ebx], eax
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_block_size
mov	[ebx+8], eax
jmp	short loc_67CDAC2B
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	eax, [eax]
test	eax, eax
jz	short loc_67CDACD4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDAD02
mov	[esp+2Ch+arg_8], esi
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_cipher_context_append
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDAD02
mov	[esp+2Ch+arg_8], offset	aHctxHashNull 
mov	[esp+2Ch+arg_4], offset	aHmac_append 
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_hmac_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset off_67D302C0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDAD2B
add	esp, 1Ch
retn
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	[esp+7Ch+var_6C], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+7Ch+var_6C]
mov	eax, [eax]
mov	[esp+7Ch+var_70], eax
mov	eax, [esp+7Ch+var_6C]
mov	eax, [eax+4]
mov	[esp+7Ch+var_74], eax
mov	eax, [esp+7Ch+var_6C]
mov	eax, [eax+8]
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_6C]
mov	eax, [eax+0Ch]
mov	[esp+7Ch+var_7C], eax
mov	ecx, [edx]
mov	[esp+7Ch+var_68], ecx
add	ecx, [esp+7Ch+var_70]
mov	eax, [esp+7Ch+var_74]
not	eax
and	eax, [esp+7Ch+var_7C]
mov	ebx, [esp+7Ch+var_78]
and	ebx, [esp+7Ch+var_74]
or	eax, ebx
add	ecx, eax
ror	ecx, 1Dh
mov	ebx, [edx+4]
mov	[esp+7Ch+var_64], ebx
add	ebx, [esp+7Ch+var_7C]
mov	eax, ecx
not	eax
and	eax, [esp+7Ch+var_78]
mov	esi, [esp+7Ch+var_74]
and	esi, ecx
or	eax, esi
add	eax, ebx
ror	eax, 19h
mov	esi, [edx+8]
mov	[esp+7Ch+var_60], esi
add	esi, [esp+7Ch+var_78]
mov	ebx, eax
not	ebx
and	ebx, [esp+7Ch+var_74]
mov	edi, eax
and	edi, ecx
or	ebx, edi
add	esi, ebx
ror	esi, 15h
mov	edi, [edx+0Ch]
mov	[esp+7Ch+var_5C], edi
add	edi, [esp+7Ch+var_74]
mov	ebx, esi
not	ebx
and	ebx, ecx
mov	ebp, esi
and	ebp, eax
or	ebx, ebp
add	ebx, edi
ror	ebx, 0Dh
mov	edi, [edx+10h]
mov	[esp+7Ch+var_58], edi
add	ecx, edi
mov	edi, ebx
not	edi
and	edi, eax
mov	ebp, ebx
and	ebp, esi
or	edi, ebp
add	ecx, edi
ror	ecx, 1Dh
mov	edi, [edx+14h]
mov	[esp+7Ch+var_54], edi
add	eax, edi
mov	edi, ecx
not	edi
and	edi, esi
mov	ebp, ecx
and	ebp, ebx
or	edi, ebp
add	eax, edi
ror	eax, 19h
mov	edi, [edx+18h]
mov	[esp+7Ch+var_50], edi
add	esi, edi
mov	edi, eax
not	edi
and	edi, ebx
mov	ebp, eax
and	ebp, ecx
or	edi, ebp
add	esi, edi
ror	esi, 15h
mov	edi, [edx+1Ch]
mov	[esp+7Ch+var_4C], edi
add	ebx, edi
mov	edi, esi
not	edi
and	edi, ecx
mov	ebp, esi
and	ebp, eax
or	edi, ebp
add	ebx, edi
ror	ebx, 0Dh
mov	edi, [edx+20h]
mov	[esp+7Ch+var_48], edi
add	ecx, edi
mov	edi, ebx
not	edi
and	edi, eax
mov	ebp, ebx
and	ebp, esi
or	edi, ebp
add	ecx, edi
ror	ecx, 1Dh
mov	edi, [edx+24h]
mov	[esp+7Ch+var_44], edi
add	eax, edi
mov	edi, ecx
not	edi
and	edi, esi
mov	ebp, ecx
and	ebp, ebx
or	edi, ebp
add	eax, edi
ror	eax, 19h
mov	edi, [edx+28h]
mov	[esp+7Ch+var_40], edi
add	esi, edi
mov	edi, eax
not	edi
and	edi, ebx
mov	ebp, eax
and	ebp, ecx
or	edi, ebp
add	esi, edi
ror	esi, 15h
mov	edi, [edx+2Ch]
mov	[esp+7Ch+var_3C], edi
add	ebx, edi
mov	edi, esi
not	edi
and	edi, ecx
mov	ebp, esi
and	ebp, eax
or	edi, ebp
add	ebx, edi
ror	ebx, 0Dh
mov	edi, [edx+30h]
mov	[esp+7Ch+var_38], edi
add	ecx, edi
mov	edi, ebx
not	edi
and	edi, eax
mov	ebp, ebx
and	ebp, esi
or	edi, ebp
add	ecx, edi
ror	ecx, 1Dh
mov	edi, [edx+34h]
mov	[esp+7Ch+var_34], edi
add	eax, edi
mov	edi, ecx
not	edi
and	edi, esi
mov	ebp, ecx
and	ebp, ebx
or	edi, ebp
add	eax, edi
ror	eax, 19h
mov	edi, [edx+38h]
mov	[esp+7Ch+var_30], edi
add	esi, edi
mov	edi, eax
not	edi
and	edi, ebx
mov	ebp, eax
and	ebp, ecx
or	edi, ebp
add	esi, edi
ror	esi, 15h
mov	edi, esi
and	edi, eax
mov	ebp, [edx+3Ch]
add	ebx, ebp
mov	edx, esi
not	edx
and	edx, ecx
or	edx, edi
add	ebx, edx
ror	ebx, 0Dh
mov	edx, [esp+7Ch+var_68]
lea	ecx, [edx+ecx+5A827999h]
mov	edx, esi
or	edx, eax
and	edx, ebx
or	edx, edi
add	ecx, edx
ror	ecx, 1Dh
mov	edx, [esp+7Ch+var_58]
lea	edi, [edx+eax+5A827999h]
mov	eax, ebx
or	eax, esi
and	eax, ecx
mov	edx, ebx
and	edx, esi
or	eax, edx
add	edi, eax
ror	edi, 1Bh
mov	eax, [esp+7Ch+var_48]
lea	edx, [eax+esi+5A827999h]
mov	eax, ecx
or	eax, ebx
and	eax, edi
mov	esi, ecx
and	esi, ebx
or	eax, esi
add	edx, eax
ror	edx, 17h
mov	esi, [esp+7Ch+var_38]
lea	ebx, [esi+ebx+5A827999h]
mov	eax, edi
or	eax, ecx
and	eax, edx
mov	esi, edi
and	esi, ecx
or	eax, esi
add	eax, ebx
ror	eax, 13h
mov	esi, [esp+7Ch+var_64]
lea	ebx, [esi+ecx+5A827999h]
mov	ecx, edx
or	ecx, edi
and	ecx, eax
mov	esi, edx
and	esi, edi
or	ecx, esi
add	ebx, ecx
ror	ebx, 1Dh
mov	ecx, [esp+7Ch+var_54]
lea	esi, [ecx+edi+5A827999h]
mov	ecx, eax
or	ecx, edx
and	ecx, ebx
mov	edi, eax
and	edi, edx
or	ecx, edi
add	ecx, esi
ror	ecx, 1Bh
mov	edi, [esp+7Ch+var_44]
lea	esi, [edi+edx+5A827999h]
mov	edx, ebx
or	edx, eax
and	edx, ecx
mov	edi, ebx
and	edi, eax
or	edx, edi
add	edx, esi
ror	edx, 17h
mov	edi, [esp+7Ch+var_34]
lea	esi, [edi+eax+5A827999h]
mov	eax, ecx
or	eax, ebx
and	eax, edx
mov	edi, ecx
and	edi, ebx
or	eax, edi
add	esi, eax
ror	esi, 13h
mov	eax, [esp+7Ch+var_60]
lea	ebx, [eax+ebx+5A827999h]
mov	eax, edx
or	eax, ecx
and	eax, esi
mov	edi, edx
and	edi, ecx
or	eax, edi
add	eax, ebx
ror	eax, 1Dh
mov	edi, [esp+7Ch+var_50]
lea	ebx, [edi+ecx+5A827999h]
mov	ecx, esi
or	ecx, edx
and	ecx, eax
mov	edi, esi
and	edi, edx
or	ecx, edi
add	ecx, ebx
ror	ecx, 1Bh
mov	edi, [esp+7Ch+var_40]
lea	ebx, [edi+edx+5A827999h]
mov	edx, eax
or	edx, esi
and	edx, ecx
mov	edi, eax
and	edi, esi
or	edx, edi
add	ebx, edx
ror	ebx, 17h
mov	edx, [esp+7Ch+var_30]
lea	esi, [edx+esi+5A827999h]
mov	edx, ecx
or	edx, eax
and	edx, ebx
mov	edi, ecx
and	edi, eax
or	edx, edi
add	edx, esi
ror	edx, 13h
mov	edi, [esp+7Ch+var_5C]
lea	esi, [edi+eax+5A827999h]
mov	eax, ebx
or	eax, ecx
and	eax, edx
mov	edi, ebx
and	edi, ecx
or	eax, edi
add	eax, esi
ror	eax, 1Dh
mov	edi, [esp+7Ch+var_4C]
lea	esi, [edi+ecx+5A827999h]
mov	ecx, edx
or	ecx, ebx
and	ecx, eax
mov	edi, edx
and	edi, ebx
or	ecx, edi
add	ecx, esi
ror	ecx, 1Bh
mov	edi, [esp+7Ch+var_3C]
lea	esi, [edi+ebx+5A827999h]
mov	ebx, eax
or	ebx, edx
and	ebx, ecx
mov	edi, eax
and	edi, edx
or	ebx, edi
add	ebx, esi
ror	ebx, 17h
lea	esi, [ebp+edx+5A827999h]
mov	edx, ecx
or	edx, eax
and	edx, ebx
mov	edi, ecx
and	edi, eax
or	edx, edi
add	edx, esi
ror	edx, 13h
mov	edi, [esp+7Ch+var_68]
lea	esi, [edi+eax+6ED9EBA1h]
mov	eax, ebx
xor	eax, ecx
xor	eax, edx
add	esi, eax
ror	esi, 1Dh
mov	eax, [esp+7Ch+var_48]
lea	ecx, [eax+ecx+6ED9EBA1h]
mov	eax, edx
xor	eax, ebx
xor	eax, esi
add	eax, ecx
ror	eax, 17h
mov	ecx, [esp+7Ch+var_58]
lea	ebx, [ecx+ebx+6ED9EBA1h]
mov	ecx, esi
xor	ecx, edx
xor	ecx, eax
add	ecx, ebx
ror	ecx, 15h
mov	edi, [esp+7Ch+var_38]
lea	ebx, [edi+edx+6ED9EBA1h]
mov	edx, eax
xor	edx, esi
xor	edx, ecx
add	edx, ebx
ror	edx, 11h
mov	ebx, [esp+7Ch+var_60]
lea	esi, [ebx+esi+6ED9EBA1h]
mov	ebx, ecx
xor	ebx, eax
xor	ebx, edx
add	ebx, esi
ror	ebx, 1Dh
mov	edi, [esp+7Ch+var_40]
lea	esi, [edi+eax+6ED9EBA1h]
mov	eax, edx
xor	eax, ecx
xor	eax, ebx
add	eax, esi
ror	eax, 17h
mov	edi, [esp+7Ch+var_50]
lea	esi, [edi+ecx+6ED9EBA1h]
mov	ecx, ebx
xor	ecx, edx
xor	ecx, eax
add	ecx, esi
ror	ecx, 15h
mov	edi, [esp+7Ch+var_30]
lea	esi, [edi+edx+6ED9EBA1h]
mov	edx, eax
xor	edx, ebx
xor	edx, ecx
add	edx, esi
ror	edx, 11h
mov	edi, [esp+7Ch+var_64]
lea	esi, [edi+ebx+6ED9EBA1h]
mov	ebx, ecx
xor	ebx, eax
xor	ebx, edx
add	ebx, esi
ror	ebx, 1Dh
mov	edi, [esp+7Ch+var_44]
lea	esi, [edi+eax+6ED9EBA1h]
mov	eax, edx
xor	eax, ecx
xor	eax, ebx
add	eax, esi
ror	eax, 17h
mov	edi, [esp+7Ch+var_54]
lea	esi, [edi+ecx+6ED9EBA1h]
mov	ecx, ebx
xor	ecx, edx
xor	ecx, eax
add	ecx, esi
ror	ecx, 15h
mov	edi, [esp+7Ch+var_34]
lea	esi, [edi+edx+6ED9EBA1h]
mov	edx, eax
xor	edx, ebx
xor	edx, ecx
add	edx, esi
ror	edx, 11h
mov	edi, [esp+7Ch+var_5C]
lea	esi, [edi+ebx+6ED9EBA1h]
mov	ebx, ecx
xor	ebx, eax
xor	ebx, edx
add	ebx, esi
ror	ebx, 1Dh
mov	edi, [esp+7Ch+var_3C]
lea	esi, [edi+eax+6ED9EBA1h]
mov	eax, edx
xor	eax, ecx
xor	eax, ebx
add	eax, esi
ror	eax, 17h
mov	edi, [esp+7Ch+var_4C]
lea	esi, [edi+ecx+6ED9EBA1h]
mov	ecx, ebx
xor	ecx, edx
xor	ecx, eax
add	ecx, esi
ror	ecx, 15h
lea	esi, [ebp+edx+6ED9EBA1h]
mov	edx, eax
xor	edx, ebx
xor	edx, ecx
add	edx, esi
add	ebx, [esp+7Ch+var_70]
mov	esi, [esp+7Ch+var_6C]
mov	[esi], ebx
ror	edx, 11h
add	edx, [esp+7Ch+var_74]
mov	[esi+4], edx
add	ecx, [esp+7Ch+var_78]
mov	[esi+8], ecx
add	eax, [esp+7Ch+var_7C]
mov	[esi+0Ch], eax
mov	edi, [esp+7Ch+var_20]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CDB265
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+98h+var_8C], eax
xor	eax, eax
mov	al, 40h
mov	edx, [esp+98h+var_8C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB28C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+0C4h+var_A8], eax
xor	eax, eax
mov	eax, [esp+0C4h+var_94]
mov	[esp+0C4h+var_C4], eax
call	purple_cipher_context_get_data
mov	dword ptr [eax], 67452301h
mov	dword ptr [eax+4], 0EFCDAB89h
mov	dword ptr [eax+8], 98BADCFEh
mov	dword ptr [eax+0Ch], 10325476h
mov	dword ptr [eax+50h], 0
mov	dword ptr [eax+54h], 0
mov	eax, [esp+0C4h+var_A8]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB2E7
add	esp, 2Ch
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+100h+var_BC]
mov	ebp, [esp+100h+var_B8]
mov	esi, [esp+100h+var_B4]
mov	eax, ds:__stack_chk_guard
mov	[esp+100h+var_E4], eax
xor	eax, eax
mov	eax, [esp+100h+var_C0]
mov	[esp+100h+var_100], eax
call	purple_cipher_context_get_data
mov	ebx, eax
mov	eax, [eax+50h]
cmp	edi, 0Fh
jbe	short loc_67CDB398
test	esi, esi
jz	short loc_67CDB32A
mov	dword ptr [esi], 10h
and	eax, 3Fh
lea	esi, [ebx+10h]
lea	edx, [esi+eax]
not	eax
mov	byte ptr [edx],	80h
inc	edx
mov	ecx, eax
add	ecx, 38h
js	short loc_67CDB39C
mov	edi, edx
xor	eax, eax
rep stosb
mov	eax, [ebx+50h]
mov	edx, [ebx+54h]
lea	ecx, ds:0[eax*8]
mov	[ebx+48h], ecx
shrd	eax, edx, 1Dh
shr	edx, 1Dh
mov	[ebx+4Ch], eax
mov	edx, esi
mov	eax, ebx
call	sub_67CDAD30
mov	ecx, 4
mov	edi, ebp
mov	esi, ebx
rep movsd
mov	cl, 58h
mov	edi, ebx
xor	eax, eax
rep stosb
mov	eax, 1
mov	edx, [esp+100h+var_E4]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB3B7
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_67CDB381
lea	ecx, [eax+40h]
xor	eax, eax
mov	edi, edx
rep stosb
mov	edx, esi
mov	eax, ebx
call	sub_67CDAD30
mov	edx, esi
mov	ecx, 38h
jmp	short loc_67CDB340
call	__stack_chk_fail
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+12Ch+var_FC]
mov	eax, ds:__stack_chk_guard
mov	[esp+12Ch+var_110], eax
xor	eax, eax
mov	[esp+12Ch+var_128], 0
mov	[esp+12Ch+var_12C], ebx
call	purple_cipher_context_reset
mov	[esp+12Ch+var_12C], ebx
call	purple_cipher_context_get_data
mov	edx, eax
mov	ecx, 58h
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+12Ch+var_110]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB40F
mov	[esp+12Ch+var_FC], edx
add	esp, 24h
pop	ebx
pop	edi
jmp	g_free
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+158h+var_128]
mov	edi, [esp+158h+var_124]
mov	eax, ds:__stack_chk_guard
mov	[esp+158h+var_13C], eax
xor	eax, eax
mov	[esp+158h+var_158], 58h
call	g_malloc0
mov	ebx, eax
mov	[esp+158h+var_154], eax
mov	[esp+158h+var_158], esi
call	purple_cipher_context_set_data
mov	[esp+158h+var_154], edi
mov	[esp+158h+var_158], esi
call	purple_cipher_context_reset
mov	dword ptr [ebx], 67452301h
mov	dword ptr [ebx+4], 0EFCDAB89h
mov	dword ptr [ebx+8], 98BADCFEh
mov	dword ptr [ebx+0Ch], 10325476h
mov	dword ptr [ebx+50h], 0
mov	dword ptr [ebx+54h], 0
mov	eax, [esp+158h+var_13C]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB48F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+1B4h+var_150]
mov	ebp, [esp+1B4h+var_14C]
mov	eax, ds:__stack_chk_guard
mov	[esp+1B4h+var_178], eax
xor	eax, eax
mov	eax, [esp+1B4h+var_154]
mov	[esp+1B4h+var_1B4], eax
call	purple_cipher_context_get_data
mov	[esp+1B4h+var_190], eax
mov	edx, eax
mov	eax, [eax+50h]
mov	edx, [edx+54h]
mov	[esp+1B4h+var_19C], eax
mov	[esp+1B4h+var_198], edx
mov	ecx, [esp+1B4h+var_19C]
and	ecx, 3Fh
mov	ebx, 40h
sub	ebx, ecx
mov	eax, ebp
xor	edx, edx
add	eax, [esp+1B4h+var_19C]
adc	edx, [esp+1B4h+var_198]
mov	edi, [esp+1B4h+var_190]
mov	[edi+50h], eax
mov	[edi+54h], edx
cmp	ebx, ebp
ja	loc_67CDB58C
mov	eax, [esp+1B4h+var_190]
add	eax, 10h
mov	[esp+1B4h+var_194], eax
add	eax, ecx
mov	edi, eax
mov	ecx, ebx
rep movsb
mov	[esp+1B4h+var_188], esi
mov	edx, [esp+1B4h+var_194]
mov	eax, [esp+1B4h+var_190]
call	sub_67CDAD30
mov	esi, [esp+1B4h+var_188]
sub	ebp, ebx
mov	[esp+1B4h+var_18C], ebp
cmp	ebp, 3Fh
jbe	short loc_67CDB56C
mov	ebx, esi
nop
mov	edi, [esp+1B4h+var_194]
mov	esi, ebx
mov	ecx, 10h
rep movsd
mov	edx, [esp+1B4h+var_194]
mov	eax, [esp+1B4h+var_190]
call	sub_67CDAD30
add	ebx, 40h
sub	ebp, 40h
cmp	ebp, 3Fh
ja	short loc_67CDB530
mov	eax, [esp+1B4h+var_18C]
sub	eax, 40h
and	eax, 0FFFFFFC0h
mov	edx, [esp+1B4h+var_188]
lea	esi, [edx+eax+40h]
and	[esp+1B4h+var_18C], 3Fh
mov	edi, [esp+1B4h+var_194]
mov	ecx, [esp+1B4h+var_18C]
rep movsb
mov	edi, [esp+1B4h+var_178]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CDB598
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [edi+ecx+10h]
mov	edi, eax
mov	ecx, ebp
rep movsb
jmp	short loc_67CDB576
call	__stack_chk_fail
align 10h
public purple_md4_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D30320
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB5C3
add	esp, 1Ch
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_get_data
mov	esi, eax
mov	eax, [eax+104h]
mov	[esp+4Ch+var_34], eax
mov	ecx, esi
lea	eax, [esi+100h]
mov	[esp+4Ch+var_30], eax
xor	edi, edi
xor	edx, edx
xchg	ax, ax
mov	al, [ecx]
mov	[esp+4Ch+var_35], al
movzx	ebx, al
and	edi, 0FFh
add	ebx, edi
movzx	edx, dl
add	bl, [ebp+edx+0]
movzx	ebx, bl
mov	edi, ebx
mov	al, [esi+ebx]
mov	[ecx], al
mov	al, [esp+4Ch+var_35]
mov	[esi+ebx], al
lea	eax, [edx+1]
cdq
idiv	[esp+4Ch+var_34]
inc	ecx
cmp	ecx, [esp+4Ch+var_30]
jnz	short loc_67CDB608
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB654
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+14h], edx
mov	ebx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], ebx
mov	edx, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], edx
mov	ebx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ebx
xor	ebx, ebx
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_get_data
movzx	ebp, byte ptr [eax+100h]
mov	dl, [eax+101h]
mov	[esp+4Ch+var_39], dl
mov	edx, [esp+14h]
test	edx, edx
jz	short loc_67CDB6F3
xor	edx, edx
xchg	ax, ax
lea	ecx, [ebp+1]
movzx	ecx, cl
mov	ebp, ecx
mov	bl, [eax+ecx]
mov	[esp+4Ch+var_3A], bl
add	[esp+4Ch+var_39], bl
movzx	edi, [esp+4Ch+var_39]
mov	bl, [eax+edi]
mov	[eax+ecx], bl
mov	bl, [esp+4Ch+var_3A]
mov	[eax+edi], bl
add	bl, [eax+ecx]
movzx	ebx, bl
mov	cl, [esi+edx]
xor	cl, [eax+ebx]
mov	ebx, [esp+4Ch+var_34]
mov	[ebx+edx], cl
inc	edx
cmp	edx, [esp+14h]
jnz	short loc_67CDB6B4
mov	edx, ebp
mov	[eax+100h], dl
mov	bl, [esp+4Ch+var_39]
mov	[eax+101h], bl
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_67CDB717
mov	ebx, [esp+14h]
mov	edx, [esp+4Ch+var_30]
mov	[edx], ebx
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB72D
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
push	edi
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	edx, eax
mov	ecx, 108h
xor	eax, eax
mov	edi, edx
rep stosb
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB775
mov	[esp+2Ch+arg_0], edx
add	esp, 28h
pop	edi
jmp	g_free
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 108h
call	g_malloc0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_cipher_context_set_data
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB7CA
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_cipher_context_reset
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	esi, eax
mov	[esp+2Ch+var_28], offset aKey_len 
mov	[esp+2Ch+var_2C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CDB820
mov	eax, [esi+104h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB824
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
xor	eax, eax
jmp	short loc_67CDB80C
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
mov	edi, eax
mov	[esp+2Ch+var_28], offset aKey_len 
mov	[esp+2Ch+var_2C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CDB86D
mov	[edi+104h], esi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB880
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDB8C4
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
test	eax, eax
jz	short loc_67CDB8E8
mov	eax, [eax+104h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB90B
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aContext_0 
mov	[esp+2Ch+var_28], offset aRc4_get_key_si 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CDB8B1
align 4
mov	[esp+2Ch+var_24], offset aCtx 
mov	[esp+2Ch+var_28], offset aRc4_get_key_si 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CDB8B1
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_cipher_context_get_data
test	eax, eax
jz	short loc_67CDB964
xor	edx, edx
mov	[eax+edx], dl
inc	edx
cmp	edx, 100h
jnz	short loc_67CDB930
mov	byte ptr [eax+100h], 0
mov	byte ptr [eax+101h], 0
mov	dword ptr [eax+104h], 5
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDB982
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aRc4_ctx 
mov	[esp+2Ch+var_28], offset aRc4_reset 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDB954
call	__stack_chk_fail
align 4
public purple_rc4_cipher_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset off_67D30380
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB9AB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_circ_buffer_new
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
test	ebx, ebx
jnz	short loc_67CDB9D7
mov	bx, 100h
mov	[eax+4], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDB9EB
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_circ_buffer_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDBA2C
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDBA59
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aBufNull 
mov	[esp+2Ch+var_28], offset aPurple_circ_bu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDBA59
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
public purple_circ_buffer_append
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], eax
mov	ebp, [esp+4Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
test	ebx, ebx
jz	loc_67CDBBB0
mov	edx, [ebx+8]
mov	esi, [ebx+0Ch]
mov	eax, edx
sub	eax, esi
cmp	eax, ebp
jb	short loc_67CDBB00
			
mov	edx, [ebx+10h]
			
cmp	[ebx+14h], edx
ja	short loc_67CDBAD4
mov	eax, [ebx]
sub	eax, edx
add	eax, [ebx+8]
cmp	eax, ebp
ja	short loc_67CDBAD4
test	eax, eax
jnz	short loc_67CDBADA
cmp	eax, ebp
jb	short loc_67CDBAE8
add	[ebx+10h], eax
add	[ebx+0Ch], ebp
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDBC25
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, ebp
test	eax, eax
jz	short loc_67CDBAB0
mov	edi, edx
mov	esi, [esp+4Ch+var_34]
mov	ecx, eax
rep movsb
cmp	eax, ebp
jnb	short loc_67CDBAB4
mov	edx, ebp
sub	edx, eax
mov	esi, [esp+4Ch+var_34]
add	esi, eax
mov	edi, [ebx]
mov	ecx, edx
rep movsb
add	edx, [ebx]
mov	[ebx+10h], edx
jmp	short loc_67CDBAB7
align 10h
mov	edi, [ebx+4]
mov	eax, edx
lea	esi, [esi+0]
add	eax, edi
mov	ecx, eax
sub	ecx, esi
cmp	ebp, ecx
ja	short loc_67CDBB08
mov	[ebx+8], eax
mov	esi, [ebx+10h]
test	esi, esi
jz	loc_67CDBBEC
mov	ecx, [ebx]
sub	esi, ecx
mov	[esp+4Ch+var_38], esi
mov	esi, [ebx+14h]
sub	esi, ecx
mov	[esp+4Ch+Src], eax
mov	[esp+4Ch+Dst], ecx
mov	[esp+4Ch+var_3C], edx
call	g_realloc
mov	[ebx], eax
mov	edx, [ebx+10h]
test	edx, edx
mov	edx, [esp+4Ch+var_3C]
jz	loc_67CDBBE0
mov	ecx, [esp+4Ch+var_38]
add	ecx, eax
mov	[ebx+10h], ecx
add	eax, esi
mov	[ebx+14h], eax
cmp	[esp+4Ch+var_38], esi
jb	short loc_67CDBB73
jnz	loc_67CDBA99
mov	eax, [ebx+0Ch]
test	eax, eax
jz	loc_67CDBA99
mov	eax, [ebx+8]
sub	eax, edx
mov	ecx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_30], ecx
cmp	ecx, eax
jbe	short loc_67CDBB88
mov	[esp+4Ch+var_30], eax
mov	esi, [ebx]
lea	eax, [esi+edx]
mov	edi, eax
mov	ecx, [esp+4Ch+var_30]
rep movsb
mov	ecx, [esp+4Ch+var_30]
cmp	[esp+4Ch+var_38], ecx
ja	short loc_67CDBBFD
add	edx, [esp+4Ch+var_38]
add	edx, [ebx]
mov	[ebx+10h], edx
jmp	loc_67CDBA9C
align 10h
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CDBC25
mov	[esp+4Ch+arg_8], offset	aBufNull 
mov	[esp+4Ch+arg_4], offset	aPurple_circ__0	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[ebx+14h], eax
mov	[ebx+10h], eax
jmp	loc_67CDBB5C
align 4
xor	esi, esi
mov	[esp+4Ch+var_38], 0
mov	ecx, [ebx]
jmp	loc_67CDBB2D
mov	esi, [esp+4Ch+var_38]
sub	esi, ecx
mov	eax, [ebx]
mov	[esp+4Ch+Size],	esi 
mov	edx, ecx
add	edx, eax
mov	[esp+4Ch+Src], edx 
mov	[esp+4Ch+Dst], eax 
call	memmove
mov	edx, [ebx]
add	edx, esi
mov	[ebx+10h], edx
jmp	loc_67CDBA9C
			
call	__stack_chk_fail
align 4
public purple_circ_buffer_get_max_read
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CDBC70
mov	ecx, [edx+0Ch]
test	ecx, ecx
jz	short loc_67CDBC6C
mov	ecx, [edx+14h]
mov	eax, [edx+10h]
cmp	ecx, eax
js	short loc_67CDBC90
mov	eax, [edx]
sub	eax, ecx
add	eax, [edx+8]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDBC94
add	esp, 2Ch
retn
align 4
xor	eax, eax
jmp	short loc_67CDBC5A
mov	[esp+2Ch+var_24], offset aBufNull 
mov	[esp+2Ch+var_28], offset aPurple_circ__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDBC5A
sub	eax, ecx
jmp	short loc_67CDBC5A
call	__stack_chk_fail
align 4
public purple_circ_buffer_mark_read
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDBD14
mov	[esp+2Ch+var_2C], ebx
call	purple_circ_buffer_get_max_read
cmp	eax, esi
jb	short loc_67CDBCE4
mov	eax, [ebx+14h]
add	eax, esi
mov	[ebx+14h], eax
sub	[ebx+0Ch], esi
mov	edx, [ebx]
sub	eax, edx
cmp	eax, [ebx+8]
jnz	short loc_67CDBCDB
mov	[ebx+14h], edx
mov	eax, 1
jmp	short loc_67CDBD02
align 4
mov	[esp+2Ch+var_24], offset aPurple_circ__2 
mov	[esp+2Ch+var_28], offset aPurple_circ__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDBD34
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aBufNull 
mov	[esp+2Ch+var_28], offset aPurple_circ__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDBD02
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [eax+0Ch]
cmp	[edx+0Ch], ecx
jg	short loc_67CDBD70
setl	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDBD77
add	esp, 1Ch
retn
mov	eax, 0FFFFFFFFh
jmp	short loc_67CDBD60
call	__stack_chk_fail
public purple_cmd_register
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ecx, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_3C], edx
mov	ebp, [esp+6Ch+arg_C]
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_38], edx
mov	edx, [esp+6Ch+arg_14]
mov	eax, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+arg_1C]
mov	[esp+6Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CDBEA8
cmp	byte ptr [esi],	0
jz	loc_67CDBEA8
test	ecx, ecx
jz	loc_67CDBEDC
test	edx, edx
jz	loc_67CDBEFC
mov	edi, dword_67D303E0
lea	eax, [edi+1]
mov	dword_67D303E0,	eax
mov	[esp+6Ch+var_6C], 24h
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_40], ecx
call	g_malloc0
mov	ebx, eax
mov	[eax], edi
mov	[esp+6Ch+var_6C], esi
call	g_strdup
mov	[ebx+4], eax
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], ecx
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esp+6Ch+var_3C]
mov	[ebx+0Ch], eax
mov	[ebx+10h], ebp
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	[ebx+14h], eax
mov	edx, [esp+6Ch+var_44]
mov	[ebx+18h], edx
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebx+1Ch], eax
mov	edx, [esp+6Ch+var_30]
mov	[ebx+20h], edx
mov	[esp+6Ch+var_64], offset sub_67CDBD3C
mov	[esp+6Ch+var_68], ebx
mov	eax, ds:dword_67D72100
mov	[esp+6Ch+var_6C], eax
call	g_list_insert_sorted
mov	ds:dword_67D72100, eax
mov	[esp+6Ch+var_5C], ebp
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], offset aCmdAdded 
mov	[esp+6Ch+var_6C], offset dword_67D72104
call	purple_signal_emit
jmp	short loc_67CDBEC6
align 4
			
mov	[esp+6Ch+var_64], offset aCmdNullCmd0 
mov	[esp+6Ch+var_68], offset aPurple_cmd_reg 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	edi, edi
			
mov	eax, edi
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDBF1C
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+var_64], offset aArgsNull 
mov	[esp+6Ch+var_68], offset aPurple_cmd_reg 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	short loc_67CDBEC6
mov	[esp+6Ch+var_64], offset aFuncNull 
mov	[esp+6Ch+var_68], offset aPurple_cmd_reg 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	short loc_67CDBEC6
call	__stack_chk_fail
align 4
public purple_cmd_unregister
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, ds:dword_67D72100
test	ecx, ecx
jz	short loc_67CDBF59
mov	ebx, [ecx]
cmp	[ebx], edx
jz	short loc_67CDBF6C
mov	eax, ecx
jmp	short loc_67CDBF52
align 4
mov	ebx, [eax]
cmp	[ebx], edx
jz	short loc_67CDBF6C
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_67CDBF4C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDBFDD
add	esp, 28h
pop	ebx
retn
align 4
			
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ecx
call	g_list_remove
mov	ds:dword_67D72100, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aCmdRemoved 
mov	[esp+2Ch+var_2C], offset dword_67D72104
call	purple_signal_emit
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDBFDD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
			
call	__stack_chk_fail
align 4
public purple_cmd_do_command
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	edx, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_48], edx
mov	esi, [esp+8Ch+arg_4]
mov	ebx, [esp+8Ch+arg_8]
mov	edx, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_40], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	[esp+8Ch+var_24], 0
mov	dword ptr [edx], 0
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], edx
call	purple_conversation_get_account
mov	[esp+8Ch+Str], eax
call	purple_account_get_protocol_id
mov	[esp+8Ch+var_34], eax
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], edx
call	purple_conversation_get_type
dec	eax
jz	short loc_67CDC084
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], edx
call	purple_conversation_get_type
cmp	eax, 2
jz	loc_67CDC594
mov	eax, 1
			
mov	ebx, [esp+8Ch+var_20]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CDC65B
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_44], 1
mov	[esp+8Ch+Val], 20h 
mov	[esp+8Ch+Str], esi 
call	strchr
mov	edi, eax
test	eax, eax
jz	loc_67CDC5B3
sub	eax, esi
mov	[esp+8Ch+Val], eax
mov	[esp+8Ch+Str], esi
call	g_strndup
mov	[esp+8Ch+var_4C], eax
inc	edi
mov	[esp+8Ch+var_54], edi
mov	[esp+8Ch+Str], ebx
call	g_strdup
mov	[esp+8Ch+Dst], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+8Ch+Dst]
repne scasb
not	ecx
lea	ebp, [ecx-1]
mov	ebx, [esp+8Ch+Dst]
mov	esi, ecx
cmp	byte ptr [ebx],	0
jz	short loc_67CDC13C
mov	[esp+8Ch+Str], ebx
call	g_utf8_get_char
mov	edi, eax
cmp	eax, 3Ch
jz	loc_67CDC43C
mov	[esp+8Ch+Str], eax
call	g_unichar_isspace
mov	[esp+8Ch+Val], 0
mov	[esp+8Ch+Str], edi
test	eax, eax
jnz	loc_67CDC414
call	g_unichar_to_utf8
mov	edx, [esp+8Ch+Dst]
sub	edx, ebx
add	edx, esi
sub	edx, eax
mov	[esp+8Ch+Size],	edx 
add	eax, ebx
mov	[esp+8Ch+Val], eax 
mov	[esp+8Ch+Str], ebx 
call	memmove
cmp	byte ptr [ebx],	0
jnz	short loc_67CDC0E6
xchg	ax, ax
			
mov	edx, ds:dword_67D72100
mov	[esp+8Ch+var_5C], edx
test	edx, edx
jz	loc_67CDC611
xor	ebp, ebp
xor	edi, edi
mov	[esp+8Ch+var_30], 0
xor	ebx, ebx
mov	esi, ebp
jmp	short loc_67CDC19C
test	al, 2
jz	short loc_67CDC184
test	al, 4
jz	short loc_67CDC1CC
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+Val], eax
mov	eax, [ebp+14h]
mov	[esp+8Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CDC1CC
mov	edi, 1
			
mov	ebx, 1
			
mov	edx, [esp+8Ch+var_5C]
mov	edx, [edx+4]
mov	[esp+8Ch+var_5C], edx
test	edx, edx
jz	loc_67CDC2F0
			
mov	edx, [esp+8Ch+var_5C]
mov	ebp, [edx]
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Val], eax
mov	eax, [ebp+4]
mov	[esp+8Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CDC189
mov	eax, [ebp+10h]
mov	edx, [esp+8Ch+var_44]
test	edx, edx
jz	short loc_67CDC160
test	al, 1
jz	short loc_67CDC184
test	al, 4
jnz	short loc_67CDC168
			
lea	edx, [ebp+8]
mov	[esp+8Ch+var_3C], edx
mov	edi, [ebp+8]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
shl	ecx, 2
mov	[esp+8Ch+Str], ecx
call	g_malloc0
mov	[esp+8Ch+var_58], eax
mov	eax, [ebp+8]
mov	al, [eax]
test	al, al
jz	loc_67CDC608
mov	edx, [esp+8Ch+var_54]
cmp	byte ptr [edx],	0
jz	loc_67CDC2B1
mov	ebx, [esp+8Ch+var_54]
xor	esi, esi
xor	edx, edx
mov	[esp+8Ch+var_38], ebp
mov	ebp, [esp+8Ch+var_3C]
jmp	short loc_67CDC23A
cmp	al, 53h
jz	loc_67CDC3A0
			
inc	esi
mov	edx, esi
mov	eax, [ebp+0]
mov	al, [eax+esi]
test	al, al
jz	short loc_67CDC2A4
cmp	byte ptr [ebx],	0
jz	loc_67CDC4D4
cmp	al, 57h
jz	loc_67CDC328
jle	short loc_67CDC21C
cmp	al, 73h
jz	loc_67CDC400
cmp	al, 77h
jnz	short loc_67CDC224
mov	[esp+8Ch+Val], 20h 
mov	[esp+8Ch+Str], ebx 
mov	[esp+8Ch+var_64], edx
call	strchr
mov	edi, eax
test	eax, eax
mov	edx, [esp+8Ch+var_64]
jz	loc_67CDC548
mov	eax, [esp+8Ch+var_58]
lea	edx, [eax+edx*4]
mov	eax, edi
sub	eax, ebx
mov	[esp+8Ch+Val], eax
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_64], edx
call	g_strndup
mov	edx, [esp+8Ch+var_64]
mov	[edx], eax
lea	ebx, [edi+1]
inc	esi
mov	edx, esi
mov	eax, [ebp+0]
mov	al, [eax+esi]
test	al, al
jnz	short loc_67CDC231
nop
mov	ebp, [esp+8Ch+var_38]
cmp	byte ptr [ebx],	0
jz	loc_67CDC46C
			
mov	eax, [ebp+10h]
and	eax, 8
test	eax, eax
jnz	loc_67CDC46C
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], eax
call	g_strfreev
mov	esi, 1
mov	edi, 1
mov	ebx, 1
mov	edx, [esp+8Ch+var_5C]
mov	edx, [edx+4]
mov	[esp+8Ch+var_5C], edx
test	edx, edx
jnz	loc_67CDC19C
lea	esi, [esi+0]
mov	[esp+8Ch+Str], 0
call	g_strfreev
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	edx, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], edx
call	g_free
test	ebx, ebx
jnz	loc_67CDC584
			
mov	eax, 2
jmp	loc_67CDC069
align 4
mov	[esp+8Ch+Val], 20h 
mov	[esp+8Ch+Str], ebx 
mov	[esp+8Ch+var_64], edx
call	strchr
mov	edi, eax
test	eax, eax
mov	edx, [esp+8Ch+var_64]
jz	loc_67CDC4E0
mov	eax, [esp+8Ch+var_58]
lea	edx, [eax+edx*4]
mov	[esp+8Ch+Val], edi
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_64], edx
call	g_utf8_pointer_to_offset
mov	[esp+8Ch+Val], ebx
mov	ebx, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_60], eax
call	g_utf8_pointer_to_offset
mov	ecx, [esp+8Ch+var_60]
mov	[esp+8Ch+Size],	ecx 
mov	[esp+8Ch+Val], eax 
mov	eax, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], eax 
call	purple_markup_slice
mov	edx, [esp+8Ch+var_64]
mov	[edx], eax
lea	ebx, [edi+1]
jmp	loc_67CDC224
align 10h
mov	eax, [esp+8Ch+var_58]
lea	edx, [eax+edx*4]
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_64], edx
call	g_utf8_strlen
mov	edi, eax
mov	[esp+8Ch+Val], ebx
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_utf8_pointer_to_offset
inc	edi
mov	[esp+8Ch+Size],	edi 
mov	[esp+8Ch+Val], eax 
mov	eax, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], eax 
call	purple_markup_slice
mov	edx, [esp+8Ch+var_64]
mov	[edx], eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
lea	ebx, [ebx+ecx-1]
jmp	loc_67CDC224
align 10h
mov	eax, [esp+8Ch+var_58]
lea	edi, [eax+edx*4]
mov	[esp+8Ch+Str], ebx
call	g_strdup
mov	[edi], eax
jmp	short loc_67CDC3E8
align 4
call	g_unichar_to_utf8
sub	ebp, eax
mov	edx, [esp+8Ch+Dst]
sub	edx, ebx
lea	edx, [ebp+edx+1]
mov	[esp+8Ch+Size],	edx 
add	eax, ebx
mov	[esp+8Ch+Val], eax 
mov	[esp+8Ch+Str], ebx 
call	memmove
jmp	loc_67CDC13C
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebx 
call	strchr
test	eax, eax
jz	loc_67CDC13C
movzx	edx, byte ptr [eax]
mov	ebx, ds:g_utf8_skip
mov	ecx, [ebx]
movsx	ebx, byte ptr [ecx+edx]
add	ebx, eax
jmp	loc_67CDC0E1
align 4
			
mov	eax, [ebp+20h]
mov	[esp+8Ch+var_7C], eax
lea	edx, [esp+8Ch+var_24]
mov	[esp+8Ch+var_80], edx
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Size],	eax
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Val], eax
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+Str], edx
call	dword ptr [ebp+18h]
cmp	eax, 2
jz	loc_67CDC5CC
mov	ebx, eax
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], eax
call	g_strfreev
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	edx, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], edx
call	g_free
test	ebx, ebx
jnz	loc_67CDC660
xor	eax, eax
jmp	loc_67CDC069
align 4
mov	ebp, [esp+8Ch+var_38]
jmp	loc_67CDC2B1
align 10h
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
lea	edi, [ebx+ecx-1]
mov	eax, [esp+8Ch+var_58]
lea	ecx, [eax+edx*4]
mov	[esp+8Ch+Val], edi
mov	edx, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], edx
mov	[esp+8Ch+var_60], ecx
call	g_utf8_pointer_to_offset
mov	[esp+8Ch+Val], ebx
mov	ebx, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_64], eax
call	g_utf8_pointer_to_offset
mov	edx, [esp+8Ch+var_64]
mov	[esp+8Ch+Size],	edx 
mov	[esp+8Ch+Val], eax 
mov	eax, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], eax 
call	purple_markup_slice
mov	ecx, [esp+8Ch+var_60]
mov	[ecx], eax
mov	ebx, edi
jmp	loc_67CDC224
align 4
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
lea	edi, [ebx+ecx-1]
mov	eax, [esp+8Ch+var_58]
lea	edx, [eax+edx*4]
mov	eax, edi
sub	eax, ebx
mov	[esp+8Ch+Val], eax
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_64], edx
call	g_strndup
mov	edx, [esp+8Ch+var_64]
mov	[edx], eax
mov	ebx, edi
jmp	loc_67CDC224
align 4
test	edi, edi
jnz	short loc_67CDC5A1
mov	eax, 5
jmp	loc_67CDC069
align 4
mov	[esp+8Ch+var_44], 0
jmp	loc_67CDC08C
test	esi, esi
jnz	loc_67CDC63A
mov	eax, 4
jmp	loc_67CDC069
mov	[esp+8Ch+Str], esi
call	g_strdup
mov	[esp+8Ch+var_4C], eax
mov	[esp+8Ch+var_54], offset byte_67D371EC
jmp	loc_67CDC0BD
mov	eax, [esp+8Ch+var_24]
mov	[esp+8Ch+Str], eax
call	g_free
mov	[esp+8Ch+var_24], 0
mov	eax, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], eax
call	g_strfreev
mov	esi, 1
mov	edi, 1
mov	[esp+8Ch+var_30], 1
mov	ebx, 1
jmp	loc_67CDC189
mov	ebx, [esp+8Ch+var_54]
jmp	loc_67CDC2A8
mov	[esp+8Ch+Str], 0
call	g_strfreev
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	edx, [esp+8Ch+Dst]
mov	[esp+8Ch+Str], edx
call	g_free
jmp	loc_67CDC31C
mov	eax, [esp+8Ch+var_30]
test	eax, eax
jnz	short loc_67CDC64C
mov	eax, 3
jmp	loc_67CDC069
mov	eax, [esp+8Ch+var_24]
mov	edx, [esp+8Ch+var_40]
mov	[edx], eax
jmp	loc_67CDC31C
call	__stack_chk_fail
mov	eax, [esp+8Ch+var_24]
mov	ebx, [esp+8Ch+var_40]
mov	[ebx], eax
jmp	loc_67CDC064
align 10h
public purple_cmd_list
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D72100
xor	ebp, ebp
test	ebx, ebx
jnz	short loc_67CDC6C4
jmp	short loc_67CDC6E4
			
mov	[esp+3Ch+var_3C], edi
call	purple_conversation_get_type
cmp	eax, 2
mov	eax, [esi+10h]
jz	loc_67CDC730
test	al, 4
jnz	short loc_67CDC708
			
mov	eax, [esi+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	g_list_append
mov	ebp, eax
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CDC6E4
			
mov	esi, [ebx]
test	edi, edi
jz	short loc_67CDC6AC
mov	[esp+3Ch+var_3C], edi
call	purple_conversation_get_type
dec	eax
jnz	short loc_67CDC694
test	byte ptr [esi+10h], 1
jnz	short loc_67CDC694
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CDC6C4
xchg	ax, ax
			
mov	[esp+3Ch+var_38], offset strcmp
mov	[esp+3Ch+var_3C], ebp
call	g_list_sort
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDC739
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_3C], edi
call	purple_conversation_get_account
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_protocol_id
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+14h]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CDC6AC
jmp	short loc_67CDC6BD
align 10h
test	al, 2
jz	short loc_67CDC6BD
jmp	loc_67CDC6A8
call	__stack_chk_fail
align 10h
public purple_cmd_help
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D72100
mov	[esp+4Ch+var_30], 0
test	ebx, ebx
jnz	short loc_67CDC7A6
jmp	short loc_67CDC7DC
align 10h
			
mov	[esp+4Ch+var_4C], edi
call	purple_conversation_get_type
cmp	eax, 2
mov	eax, [ebp+10h]
jz	loc_67CDC830
test	al, 4
jnz	short loc_67CDC804
			
mov	eax, [ebp+1Ch]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[esp+4Ch+var_30], eax
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CDC7DC
			
mov	ebp, [ebx]
test	esi, esi
jz	short loc_67CDC7BF
mov	eax, [ebp+4]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CDC79F
test	edi, edi
jz	short loc_67CDC788
mov	[esp+4Ch+var_4C], edi
call	purple_conversation_get_type
dec	eax
jnz	short loc_67CDC770
test	byte ptr [ebp+10h], 1
jnz	short loc_67CDC770
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CDC7A6
nop
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDC83D
mov	[esp+4Ch+arg_4], offset	strcmp
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_sort
mov	[esp+4Ch+var_4C], edi
call	purple_conversation_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_protocol_id
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+14h]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jnz	loc_67CDC788
jmp	loc_67CDC79F
test	al, 2
jz	loc_67CDC79F
jmp	loc_67CDC784
call	__stack_chk_fail
align 4
public purple_cmds_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72104
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDC867
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_cmds_init
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	[esp+3Ch+var_20], esi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_INT_INT
mov	[esp+3Ch+var_38], offset aCmdAdded 
mov	[esp+3Ch+var_3C], offset dword_67D72104
call	purple_signal_register
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aCmdRemoved 
mov	[esp+3Ch+var_3C], offset dword_67D72104
call	purple_signal_register
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDC92A
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_cmds_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D72104
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDC95A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_account_get_connection
test	eax, eax
jz	short loc_67CDC987
mov	dword ptr [eax+2Ch], 0
mov	[esp], ebx
call	purple_account_get_password
mov	[esp], eax
call	g_strdup
mov	esi, eax
mov	[esp], ebx
call	purple_account_disconnect
mov	[esp+4], esi
mov	[esp], ebx
call	purple_account_set_password
mov	[esp], esi
call	g_free
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDC9C9
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+Time],	0 
call	time
sub	eax, [ebx+30h]
cmp	eax, 1Dh
jle	short loc_67CDCA0E
mov	eax, [ebx]
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0ACh]
test	eax, eax
jz	short loc_67CDCA0E
mov	[esp+2Ch+Time],	ebx
call	eax
			
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDCA24
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aActivatingKeep 
mov	[esp+2Ch+Time],	offset aConnection 
call	purple_debug_info
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_67CDC9D0
mov	[esp+2Ch+Time],	1Eh
call	purple_timeout_add_seconds
mov	[ebx+24h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDCA7D
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_connection_set_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDCAB8
test	edx, edx
jz	short loc_67CDCAD8
mov	[eax+0Ch], edx
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDCAF6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_connect 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDCAA6
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_2	
mov	[esp+2Ch+var_28], offset aPurple_connect 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDCAA6
call	__stack_chk_fail
align 4
public purple_connection_set_display_name
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDCB40
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+20h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDCB5E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDCB2E
call	__stack_chk_fail
align 4
public purple_connection_set_protocol_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDCB94
mov	[eax+1Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDCBB2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConnectionNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDCB82
call	__stack_chk_fail
align 4
public purple_connection_get_state
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDCBE4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDCC04
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDCBD2
call	__stack_chk_fail
align 4
public purple_connection_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDCC38
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDCC58
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDCC26
call	__stack_chk_fail
align 10h
public purple_connection_set_state
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	ebp, ebp
jz	loc_67CDCEA8
cmp	[ebp+8], eax
jz	short loc_67CDCCB8
mov	[ebp+8], eax
mov	ebx, ds:dword_67D72110
mov	[esp+5Ch+var_58], ebp
cmp	eax, 2
mov	eax, ds:dword_67D72114
mov	[esp+5Ch+Time],	eax
jz	short loc_67CDCD20
call	g_list_remove
mov	ds:dword_67D72114, eax
mov	eax, [ebp+8]
cmp	eax, 1
jz	short loc_67CDCD32
test	eax, eax
jz	short loc_67CDCCD0
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDCF63
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+Time],	ebp
call	purple_connection_get_account
mov	esi, eax
mov	[esp+5Ch+Time],	offset aPurpleLoggingL 
call	purple_prefs_get_bool
test	eax, eax
jnz	loc_67CDCE14
			
mov	[esp+5Ch+Time],	esi
call	purple_account_destroy_log
test	ebx, ebx
jz	short loc_67CDCCB8
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CDCCB8
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDCF63
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
call	g_list_append
mov	ds:dword_67D72114, eax
mov	eax, [ebp+8]
cmp	eax, 1
jnz	short loc_67CDCCB4
mov	[esp+5Ch+Time],	ebp
call	purple_connection_get_account
mov	esi, eax
mov	[esp+5Ch+Time],	eax
call	purple_account_get_presence
mov	edi, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	edi
call	purple_presence_set_login_time
mov	[esp+5Ch+Time],	offset aPurpleLoggingL 
call	purple_prefs_get_bool
test	eax, eax
jnz	loc_67CDCECC
			
test	ebx, ebx
jz	short loc_67CDCD82
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CDCD82
mov	[esp+5Ch+Time],	ebp
call	eax
			
mov	[esp+5Ch+Time],	esi
call	purple_blist_add_account
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aSignedOn_0 
mov	[esp+5Ch+Time],	offset dword_67D7210C
call	purple_signal_emit
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aAutojoin 
mov	[esp+5Ch+Time],	offset dword_67D7210C
call	purple_signal_emit_return_1
mov	[esp+5Ch+Time],	ebp
call	serv_set_permit_deny
mov	eax, [ebp+0]
test	eax, eax
jz	loc_67CDCCB8
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	loc_67CDCCB8
mov	edx, [eax+0ACh]
test	edx, edx
jz	loc_67CDCCB8
mov	eax, [ebp+24h]
test	eax, eax
jnz	loc_67CDCCB8
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDCF63
mov	eax, ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_67CDCA2C
align 4
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	esi
call	purple_account_get_log
test	eax, eax
jz	loc_67CDCCEE
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+var_38], eax
call	purple_account_get_username
mov	edi, eax
mov	[esp+5Ch+var_58], offset aSSignedOff 
mov	[esp+5Ch+Time],	offset aPidgin_2 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+var_34], eax
call	purple_account_get_username
mov	[esp+5Ch+var_4C], edi
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 4
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Time],	edx
call	purple_log_write
mov	[esp+5Ch+Time],	edi
call	g_free
jmp	loc_67CDCCEE
align 4
mov	[esp+5Ch+var_54], offset aGcNull 
mov	[esp+5Ch+var_58], offset aPurple_conne_4 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CDCCB8
align 4
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+Time],	esi
call	purple_account_get_log
test	eax, eax
jz	loc_67CDCD72
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+var_34], eax
call	purple_account_get_username
mov	[esp+5Ch+var_58], offset aSSignedOn 
mov	[esp+5Ch+Time],	offset aPidgin_2 
mov	[esp+5Ch+var_38], eax
call	libintl_dgettext
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+Time],	edi
call	purple_presence_get_login_time
mov	edi, eax
mov	[esp+5Ch+Time],	esi
call	purple_account_get_username
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 4
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	ecx
call	purple_log_write
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	eax
call	g_free
jmp	loc_67CDCD72
			
call	__stack_chk_fail
public _purple_connection_new_unregister
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CDD0D8
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_protocol_id
mov	[esp+5Ch+var_5C], eax
call	purple_find_prpl
mov	ebp, eax
test	eax, eax
jz	loc_67CDD10C
mov	eax, [ebp+10h]
mov	eax, [eax+4Ch]
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_is_disconnected
test	eax, eax
jz	loc_67CDD073
test	edi, edi
jz	short loc_67CDCFDB
cmp	byte ptr [edi],	0
jnz	loc_67CDD0AC
mov	edx, [esp+5Ch+var_38]
test	byte ptr [edx],	90h
jz	loc_67CDD19C
mov	[esp+5Ch+var_5C], 34h
call	g_malloc0
mov	esi, eax
mov	[eax], ebp
test	edi, edi
jz	short loc_67CDD005
cmp	byte ptr [edi],	0
jnz	loc_67CDD0C5
			
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_connection_set_account
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], esi
call	purple_connection_set_state
mov	[esp+5Ch+var_58], esi
mov	eax, ds:dword_67D72108
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	ds:dword_67D72108, eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_account_set_connection
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSigningOn 
mov	[esp+5Ch+var_5C], offset dword_67D7210C
call	purple_signal_emit
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aUnregistering_ 
mov	[esp+5Ch+var_5C], offset aConnection 
call	purple_debug_info
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDD1D0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+arg_8], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+arg_4], edx
mov	[esp+5Ch+arg_0], ebx
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx+110h]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	[esp+5Ch+var_5C], 34h
call	g_malloc0
mov	esi, eax
mov	[eax], ebp
cmp	byte ptr [edi],	0
jz	loc_67CDD005
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[esi+10h], eax
jmp	loc_67CDD005
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDD1D0
mov	[esp+5Ch+arg_8], offset	aAccountNull_2 
mov	[esp+5Ch+arg_4], offset	a_purple_connec	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aMissingProto_0 
mov	[esp+5Ch+var_5C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aUnregistration 
mov	[esp+5Ch+var_5C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD1D0
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD1D0
mov	[esp+5Ch+arg_8], eax
mov	[esp+5Ch+arg_4], offset	aCannotConnectT	
mov	[esp+5Ch+arg_0], offset	aConnection 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
			
call	__stack_chk_fail
align 4
public purple_connection_new_unregister
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], esi
xor	esi, esi
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDD21F
mov	[esp+1Ch+arg_C], ebx
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 14h
pop	ebx
pop	esi
jmp	_purple_connection_new_unregister
call	__stack_chk_fail
public _purple_connection_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CDD3BC
mov	[esp+5Ch+var_5C], ebx
call	purple_account_is_disconnected
test	eax, eax
jnz	short loc_67CDD270
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDD484
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_protocol_id
mov	[esp+5Ch+var_5C], eax
call	purple_find_prpl
mov	edx, eax
test	eax, eax
jz	loc_67CDD48C
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+5Ch+var_30], eax
test	ebp, ebp
jnz	loc_67CDD384
test	edi, edi
jz	loc_67CDD430
cmp	byte ptr [edi],	0
jz	loc_67CDD430
mov	[esp+5Ch+var_5C], 34h
mov	[esp+5Ch+var_34], edx
call	g_malloc0
mov	esi, eax
mov	edx, [esp+5Ch+var_34]
mov	[eax], edx
cmp	byte ptr [edi],	0
jnz	loc_67CDD474
			
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
call	purple_connection_set_account
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+var_5C], esi
call	purple_connection_set_state
mov	[esp+5Ch+var_58], esi
mov	eax, ds:dword_67D72108
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	ds:dword_67D72108, eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_account_set_connection
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSigningOn 
mov	[esp+5Ch+var_5C], offset dword_67D7210C
call	purple_signal_emit
mov	[esp+5Ch+var_54], esi
test	ebp, ebp
jnz	loc_67CDD3F0
mov	[esp+5Ch+var_58], offset aConnecting_GcP 
mov	[esp+5Ch+var_5C], offset aConnection 
call	purple_debug_info
call	purple_accounts_get_handle
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aAccountConne_1 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_emit
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDD484
mov	[esp+5Ch+arg_0], ebx
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+48h]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	eax, [esp+5Ch+var_30]
mov	ecx, [eax+0B0h]
test	ecx, ecx
jz	loc_67CDD256
mov	[esp+5Ch+var_5C], 34h
mov	[esp+5Ch+var_34], edx
call	g_malloc0
mov	esi, eax
mov	edx, [esp+5Ch+var_34]
mov	[eax], edx
test	edi, edi
jnz	loc_67CDD2C5
jmp	loc_67CDD2CE
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDD484
mov	[esp+5Ch+arg_8], offset	aAccountNull_2 
mov	[esp+5Ch+arg_4], offset	a_purple_conn_0	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+5Ch+var_58], offset aRegistering_Gc 
mov	[esp+5Ch+var_5C], offset aConnection 
call	purple_debug_info
mov	dword ptr [esi+28h], 1
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDD484
mov	[esp+5Ch+arg_0], ebx
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx+0B0h]
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
			
mov	eax, [esp+5Ch+var_30]
test	byte ptr [eax],	90h
jnz	loc_67CDD396
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD484
mov	[esp+5Ch+arg_8], eax
mov	[esp+5Ch+arg_4], offset	aCannotConnectT	
mov	[esp+5Ch+arg_0], offset	aConnection 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
align 4
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[esi+10h], eax
jmp	loc_67CDD2CE
			
call	__stack_chk_fail
align 4
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aMissingProto_0 
mov	[esp+5Ch+var_5C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	ebx, eax
test	ebp, ebp
jz	short loc_67CDD524
mov	[esp+5Ch+var_58], offset aRegistrationEr 
mov	[esp+5Ch+var_5C], offset aPidgin_2 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDD484
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+5Ch+var_58], offset aConnectionEr_1 
mov	[esp+5Ch+var_5C], offset aPidgin_2 
call	libintl_dgettext
jmp	short loc_67CDD4D0
align 4
public purple_connection_new
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CDD579
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	_purple_connection_new
call	__stack_chk_fail
align 10h
public _purple_connection_destroy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CDD79C
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_account
mov	edi, eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aDisconnectingC 
mov	[esp+3Ch+var_3C], offset aConnection 
call	purple_debug_info
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_state
mov	ebp, eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aSigningOff 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_emit
mov	eax, [esi+18h]
test	eax, eax
jz	short loc_67CDD614
lea	esi, [esi+0]
mov	ebx, [eax]
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	g_slist_remove
mov	[esi+18h], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_left
mov	eax, [esi+18h]
test	eax, eax
jnz	short loc_67CDD5EC
mov	eax, [esi]
test	eax, eax
jz	short loc_67CDD639
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CDD639
mov	eax, [eax+0ACh]
test	eax, eax
jz	short loc_67CDD639
mov	ebx, [esi+24h]
test	ebx, ebx
jnz	loc_67CDD754
			
mov	[esp+3Ch+var_3C], esi
call	purple_proxy_connect_cancel_with_handle
mov	eax, [esi]
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67CDD655
mov	[esp+3Ch+var_3C], esi
call	eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], edi
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_67CDD690
nop
mov	[esp+3Ch+var_38], 0
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_set_protocol_data
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CDD66C
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D72108
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	ds:dword_67D72108, eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], esi
call	purple_connection_set_state
cmp	ebp, 2
jnz	loc_67CDD78C
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aSignedOff_0 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_emit
mov	[esp+3Ch+var_3C], edi
call	purple_account_request_close_with_account
mov	[esp+3Ch+var_3C], esi
call	purple_request_close_with_handle
mov	[esp+3Ch+var_3C], esi
call	purple_notify_close_with_handle
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aDestroyingConn 
mov	[esp+3Ch+var_3C], offset aConnection 
call	purple_debug_info
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], edi
call	purple_account_set_connection
mov	eax, [esi+10h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [esi+20h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [esi+2Ch]
test	eax, eax
jnz	short loc_67CDD780
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDD7CC
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+3Ch+var_38], offset aDeactivatingKe 
mov	[esp+3Ch+var_3C], offset aConnection 
call	purple_debug_info
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	purple_timeout_remove
mov	dword ptr [esi+24h], 0
jmp	loc_67CDD639
align 10h
mov	[esp+3Ch+var_3C], eax
call	purple_timeout_remove
jmp	short loc_67CDD734
align 4
mov	[esp+3Ch+var_3C], edi
call	purple_blist_remove_account
jmp	loc_67CDD6BF
align 4
mov	[esp+3Ch+var_34], offset aGcNull 
mov	[esp+3Ch+var_38], offset a_purple_conn_1 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDD7CC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_connection_destroy
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD7FF
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	_purple_connection_destroy
call	__stack_chk_fail
public purple_connection_get_prpl
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDD830
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD850
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDD81D
call	__stack_chk_fail
align 4
public purple_connection_get_password
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CDD888
mov	eax, [edx+10h]
test	eax, eax
jz	short loc_67CDD8A8
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD8B0
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDD875
mov	eax, [edx+0Ch]
mov	eax, [eax+8]
jmp	short loc_67CDD875
call	__stack_chk_fail
align 4
public purple_connection_get_display_name
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDD8E4
mov	eax, [eax+20h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD904
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDD8D2
call	__stack_chk_fail
align 4
public purple_connection_get_protocol_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDD938
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDD958
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConnectionNull 
mov	[esp+2Ch+var_28], offset aPurple_conne_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDD926
call	__stack_chk_fail
align 10h
public purple_connection_update_progress
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	eax, [esp+1Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], esi
xor	esi, esi
test	edx, edx
jz	loc_67CDDA28
test	ecx, ecx
jz	loc_67CDDA40
cmp	ebx, eax
jnb	short loc_67CDD9E0
cmp	eax, 1
jbe	short loc_67CDDA10
mov	esi, ds:dword_67D72110
test	esi, esi
jz	loc_67CDDA5B
mov	esi, [esi]
test	esi, esi
jz	loc_67CDDA5B
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	loc_67CDDA56
mov	[esp+1Ch+arg_C], eax
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
mov	eax, esi
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 10h
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDA56
mov	[esp+1Ch+arg_8], offset	aStepCount 
			
mov	[esp+1Ch+arg_4], offset	aPurple_conne_9	
mov	[esp+1Ch+arg_0], 0
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 10h
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDDA56
mov	[esp+1Ch+arg_8], offset	aCount1	
jmp	short loc_67CDD9F4
align 4
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CDDA56
mov	[esp+1Ch+arg_8], offset	aGcNull	
jmp	short loc_67CDD9F4
align 10h
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CDDA56
mov	[esp+1Ch+arg_8], offset	aTextNull_0 
jmp	short loc_67CDD9F4
			
call	__stack_chk_fail
			
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CDDA56
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
align 10h
public purple_connection_notice
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDDABC
test	ecx, ecx
jz	short loc_67CDDAEC
mov	edx, ds:dword_67D72110
test	edx, edx
jz	short loc_67CDDAD8
mov	edx, [edx+0Ch]
test	edx, edx
jz	short loc_67CDDAD8
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CDDB0A
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aGcNull 
mov	[esp+2Ch+var_28], offset aPurple_conn_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDB0A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aTextNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conn_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDDAD8
			
call	__stack_chk_fail
align 10h
public purple_connection_error_is_fatal
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
cmp	eax, 10h	
jbe	short loc_67CDDB74
mov	[esp+3Ch+var_28], offset aPurple_conn_11 
mov	[esp+3Ch+var_2C], 287h
mov	[esp+3Ch+var_30], offset aConnection_c 
mov	[esp+3Ch+var_34], offset aFileSLineDSS_1 
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+var_3C], 0
call	g_log
mov	eax, 1
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDDB87
add	esp, 3Ch
retn
align 4
jmp	ds:off_67D37480[eax*4] 
align 4
			
xor	eax, eax	
jmp	short loc_67CDDB61
			
mov	eax, 1		
jmp	short loc_67CDDB61
call	__stack_chk_fail
public purple_connection_error_reason
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CDDCAC
cmp	esi, 10h
ja	loc_67CDDC88
test	edi, edi
jz	loc_67CDDCDC
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_67CDDBE4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDDD0B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], esi
call	purple_connection_error_is_fatal
mov	[ebx+28h], eax
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aConnectionEr_2 
mov	[esp+4Ch+var_4C], offset aConnection 
call	purple_debug_info
mov	ebp, ds:dword_67D72110
test	ebp, ebp
jz	short loc_67CDDC3D
mov	eax, [ebp+1Ch]
test	eax, eax
jz	short loc_67CDDC2D
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	eax
mov	eax, [ebp+10h]
test	eax, eax
jz	short loc_67CDDC3D
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	[esp+4Ch+var_3C], edi
mov	[esp+4Ch+var_40], esi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aConnectionEr_3 
mov	[esp+4Ch+var_4C], offset dword_67D7210C
call	purple_signal_emit
mov	[esp+4Ch+var_4C], ebx
call	purple_connection_get_account
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset loc_67CDC960
mov	[esp+4Ch+var_4C], 0
call	purple_timeout_add
mov	[ebx+2Ch], eax
jmp	loc_67CDDBCA
align 4
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aPurple_conn_12 
mov	[esp+4Ch+var_4C], offset aConnection 
call	purple_debug_error
mov	esi, 10h
jmp	loc_67CDDBBB
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDD0B
mov	[esp+4Ch+arg_8], offset	aGcNull	
mov	[esp+4Ch+arg_4], offset	aPurple_conn_13	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+4Ch+var_48], offset aPurple_conn_14 
mov	[esp+4Ch+var_4C], offset aConnection 
call	purple_debug_error
mov	[esp+4Ch+var_48], offset aUnknownError 
mov	[esp+4Ch+var_4C], offset aPidgin_2 
call	libintl_dgettext
mov	edi, eax
jmp	loc_67CDDBC3
			
call	__stack_chk_fail
public purple_connection_ssl_error
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
cmp	eax, 2
jz	short loc_67CDDD9C
cmp	eax, 3
jz	short loc_67CDDD94
cmp	eax, 1
jz	short loc_67CDDD64
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset aPurple_conn_15 
mov	[esp+3Ch+var_34], 266h
mov	[esp+3Ch+var_38], offset aConnection_c 
mov	[esp+3Ch+var_3C], 0
call	g_assertion_message
mov	esi, 5
			
mov	[esp+3Ch+var_3C], eax
call	purple_ssl_strerror
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_error_reason
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDDA0
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	esi, 0Fh
jmp	short loc_67CDDD69
align 4
xor	esi, esi
jmp	short loc_67CDDD69
call	__stack_chk_fail
align 4
public purple_connection_error
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	dword ptr [edx+28h], 1
sbb	eax, eax
not	eax
and	eax, 10h
mov	ecx, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	purple_connection_error_reason
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDDE9
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_connections_disconnect_all
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72108
test	eax, eax
jz	short loc_67CDDE25
nop
mov	eax, [eax]
mov	dword ptr [eax+28h], 1
mov	eax, [eax+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_account_disconnect
mov	eax, ds:dword_67D72108
test	eax, eax
jnz	short loc_67CDDE08
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDE35
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_connections_get_all
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72108
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDDE5F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_connections_get_connecting
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72114
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDDE87
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_connections_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72110, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDDEB3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_connections_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72110
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDDEDB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_connections_init
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aSigningOn 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aSignedOn_0 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aSigningOff 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aSignedOff_0 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	[esp+3Ch+var_3C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_3C], 10h
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_20], esi
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER_INT_POINTER
mov	[esp+3Ch+var_38], offset aConnectionEr_3 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	[esp+3Ch+var_38], 7
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_BOOLEAN__POINTER
mov	[esp+3Ch+var_38], offset aAutojoin 
mov	[esp+3Ch+var_3C], offset dword_67D7210C
call	purple_signal_register
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE0BE
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_connections_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D7210C
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE0EE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_connections_get_handle
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7210C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE117
add	esp, 1Ch
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE153
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE1A4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [ecx]
cmp	[edx], ebx
jz	short loc_67CDE1DC
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE200
add	esp, 28h
pop	ebx
retn
mov	ebx, [ecx+8]
cmp	[edx+8], ebx
jnz	short loc_67CDE1CB
mov	eax, [ecx+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [edx+4]
mov	[esp+2Ch+var_2C], eax
call	g_str_equal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CDE1CB
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp], eax
call	g_str_hash
mov	esi, eax
mov	eax, [ebx+8]
mov	[esp], eax
call	g_direct_hash
xor	eax, esi
xor	eax, [ebx]
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE24A
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_conv_chat_cb_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDE2C4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aDeletingChatBu 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE2D5
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE2D5
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE314
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	eax, [esp+20h]
mov	edx, [esp+24h]
mov	ecx, ds:__stack_chk_guard
mov	[esp+0Ch], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDE38C
mov	esi, [eax+10h]
mov	ecx, [eax+8]
test	ecx, ecx
jz	short loc_67CDE3A8
test	edx, edx
jz	short loc_67CDE394
mov	edi, [edx+10h]
mov	ebx, [edx+8]
test	ebx, ebx
jz	short loc_67CDE3A0
test	ecx, ecx
jz	short loc_67CDE374
cmp	esi, edi
jz	short loc_67CDE37C
ja	short loc_67CDE374
mov	eax, 1
			
mov	edx, [esp+0Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE3CB
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
			
mov	eax, 0FFFFFFFFh
jmp	short loc_67CDE361
align 4
mov	eax, [eax+0Ch]
cmp	eax, [edx+0Ch]
jz	short loc_67CDE3AC
test	eax, eax
jnz	short loc_67CDE374
mov	al, 1
jmp	short loc_67CDE361
xor	ecx, ecx
xor	esi, esi
test	edx, edx
jnz	short loc_67CDE348
			
xor	eax, eax
test	ecx, ecx
setnz	al
jmp	short loc_67CDE361
align 10h
mov	ebx, [edx]
test	ebx, ebx
jnz	short loc_67CDE352
jmp	short loc_67CDE394
mov	ecx, [eax]
jmp	short loc_67CDE344
mov	eax, [esp+0Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE3CB
mov	[esp+24h], ebx
mov	[esp+20h], ecx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	purple_utf8_strcasecmp
			
call	__stack_chk_fail
			
push	ebx
sub	esp, 38h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+Time],	0 
call	time
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], ebx
mov	eax, [ebx+4]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_38], eax
xor	eax, eax
cmp	dword ptr [ebx], 2
setz	al
mov	[esp+3Ch+Time],	eax
call	purple_log_new
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	0
call	g_list_append
mov	[ebx+14h], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE43F
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_utf8_collate
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE47E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	g_utf8_collate_key
mov	ebx, eax
mov	[esp+3Ch+var_3C], eax
call	g_str_hash
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE4D2
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_conversations_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72118, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE4FF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_conversation_get_features
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE530
mov	eax, [eax+28h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE550
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_convers 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE51E
call	__stack_chk_fail
align 4
public purple_conversation_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE584
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE5A4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE571
call	__stack_chk_fail
align 4
public purple_conversation_set_ui_ops
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDE5FC
mov	eax, [ebx+1Ch]
cmp	eax, esi
jz	short loc_67CDE5E9
test	eax, eax
jz	short loc_67CDE5DF
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CDE5DF
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	dword ptr [ebx+20h], 0
mov	[ebx+1Ch], esi
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE61A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDE5E9
call	__stack_chk_fail
align 10h
public purple_conversation_get_ui_ops
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE64C
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE66C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE63A
call	__stack_chk_fail
align 4
public purple_conversation_present
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDE6B4
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_ui_ops
test	eax, eax
jz	short loc_67CDE6D0
mov	eax, [eax+24h]
test	eax, eax
jz	short loc_67CDE6D0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE6E1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE6E1
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_conversation_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE714
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE734
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE702
call	__stack_chk_fail
align 4
public purple_conversation_get_gc
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE774
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_account
test	eax, eax
jz	short loc_67CDE794
mov	eax, [eax+1Ch]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE798
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE762
xor	eax, eax
jmp	short loc_67CDE762
call	__stack_chk_fail
align 10h
public purple_conversation_get_title
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE7CC
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE7EC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE7BA
call	__stack_chk_fail
align 4
public purple_conversation_foreach
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CDE838
mov	ebx, ds:dword_67D72124
test	ebx, ebx
jz	short loc_67CDE826
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	esi
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CDE818
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE856
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aFuncNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conve_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDE826
call	__stack_chk_fail
align 4
public purple_conversation_get_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE888
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE8A8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE876
call	__stack_chk_fail
align 10h
public purple_conversation_is_logging
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDE8DC
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE8FC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conve_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE8CA
call	__stack_chk_fail
align 4
public purple_conversation_close_logs
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDE95C
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_log_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	dword ptr [ebx+14h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDE97A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDE948
call	__stack_chk_fail
align 10h
public purple_conversation_get_im_data
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDE9BC
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_type
dec	eax
jnz	short loc_67CDE9B8
mov	eax, [ebx+18h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDE9DC
add	esp, 28h
pop	ebx
retn
align 4
xor	eax, eax
jmp	short loc_67CDE9A5
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDE9A5
call	__stack_chk_fail
align 4
public purple_conversation_get_chat_data
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDEA20
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jnz	short loc_67CDEA1C
mov	eax, [ebx+18h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEA40
add	esp, 28h
pop	ebx
retn
xor	eax, eax
jmp	short loc_67CDEA0B
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDEA0B
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], esi
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_48], offset aScreenname 
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_30], eax
call	purple_request_fields_get_string
mov	ebp, eax
mov	[esp+4Ch+var_48], offset aMessage 
mov	[esp+4Ch+var_4C], ebx
call	purple_request_fields_get_string
mov	edi, eax
mov	edx, [esp+4Ch+var_30]
mov	ebx, [edx+14h]
mov	[esp+4Ch+var_4C], esi
call	purple_conversation_get_gc
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	serv_chat_invite
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDEAC9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_conversation_set_data
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CDEB24
test	eax, eax
jz	short loc_67CDEB54
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEB6A
mov	[esp+2Ch+arg_8], esi
mov	[esp+2Ch+arg_4], eax
mov	eax, [ebx+24h]
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	g_hash_table_replace
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDEB6A
mov	[esp+2Ch+arg_8], offset	aConvNull 
mov	[esp+2Ch+arg_4], offset	aPurple_conv_13	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEB6A
mov	[esp+2Ch+arg_8], offset	aKeyNull_1 
jmp	short loc_67CDEB38
			
call	__stack_chk_fail
align 10h
public purple_conversation_get_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDEBB0
test	edx, edx
jz	short loc_67CDEBE0
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CDEBFE
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+24h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_lookup
align 10h
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEBFE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aKeyNull_1 
mov	[esp+2Ch+var_28], offset aPurple_conv_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDEBCC
			
call	__stack_chk_fail
align 4
public purple_get_conversations
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72124
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEC27
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_get_ims
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7211C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEC4F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_get_chats
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72120
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDEC77
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_find_conversation_with_account
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67CDED6C
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	purple_normalize
mov	[esp+3Ch+var_18], eax
mov	[esp+3Ch+var_14], esi
mov	[esp+3Ch+var_1C], ebx
cmp	ebx, 1
jnb	short loc_67CDED0C
mov	[esp+3Ch+var_28], offset aPurple_find_co 
mov	[esp+3Ch+var_2C], 399h
mov	[esp+3Ch+var_30], offset aConversation_c 
mov	[esp+3Ch+var_34], offset aFileSLineDSS_2 
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+var_3C], 0
call	g_log
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDED8F
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
cmp	ebx, 2
jbe	short loc_67CDED54
cmp	ebx, 4
jnz	short loc_67CDECBE
mov	[esp+3Ch+var_1C], 1
lea	ebx, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72128
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67CDECF4
mov	[esp+3Ch+var_1C], 2
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72128
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
jmp	short loc_67CDECF4
align 4
lea	eax, [esp+3Ch+var_1C]
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72128
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
jmp	short loc_67CDECF4
align 4
mov	[esp+3Ch+var_34], offset aNameNull_1 
mov	[esp+3Ch+var_38], offset aPurple_find_co 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CDECF4
call	__stack_chk_fail
public purple_conversation_write
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_50], edx
mov	ebp, [esp+7Ch+arg_C]
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_24], 0
test	ebx, ebx
jz	loc_67CDF0D8
mov	eax, [esp+7Ch+var_50]
test	eax, eax
jz	loc_67CDF0FC
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_ui_ops
mov	[esp+7Ch+var_40], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_account
mov	edi, eax
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
mov	[esp+7Ch+var_48], eax
test	edi, edi
jz	loc_67CDF2A3
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_connection
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jz	loc_67CDEED8
			
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
dec	eax
jz	loc_67CDEF0A
			
mov	edx, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], edx
call	g_strdup
mov	[esp+7Ch+var_24], eax
test	esi, esi
jz	short loc_67CDEEC0
cmp	byte ptr [esi],	0
jz	short loc_67CDEEC0
cmp	[esp+7Ch+var_48], 1
jz	short loc_67CDEED1
mov	eax, offset aWritingChatMsg 
mov	[esp+7Ch+var_64], ebp
mov	[esp+7Ch+var_68], ebx
lea	edx, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset dword_67D7212C
call	purple_signal_emit_return_1
mov	edx, [esp+7Ch+var_24]
test	edx, edx
jz	short loc_67CDEEA8
test	eax, eax
jz	loc_67CDEF28
mov	[esp+7Ch+var_7C], edx
call	g_free
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDF29E
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_name
mov	esi, eax
cmp	[esp+7Ch+var_48], 1
jnz	short loc_67CDEE63
mov	eax, offset aWritingImMsg 
jmp	short loc_67CDEE68
mov	eax, [esp+7Ch+var_4C]
test	eax, eax
jz	loc_67CDEE34
mov	[esp+7Ch+var_78], ebx
mov	edx, [esp+7Ch+var_4C]
mov	eax, [edx+18h]
mov	[esp+7Ch+var_7C], eax
call	g_slist_find
test	eax, eax
jz	short loc_67CDEEA8
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
dec	eax
jnz	loc_67CDEE43
mov	[esp+7Ch+var_78], ebx
mov	eax, ds:dword_67D72124
mov	[esp+7Ch+var_7C], eax
call	g_list_find
test	eax, eax
jnz	loc_67CDEE43
jmp	short loc_67CDEEA8
align 4
test	edi, edi
jz	short loc_67CDEFA0
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_protocol_id
mov	[esp+7Ch+var_7C], eax
call	purple_find_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
dec	eax
jz	short loc_67CDEF5A
mov	edx, [esp+7Ch+var_3C]
test	byte ptr [edx],	4
jnz	short loc_67CDEFA0
test	ebp, 1
jz	loc_67CDF194
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_username
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_find_buddy
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_alias
test	eax, eax
jz	loc_67CDF1D1
mov	eax, [edi+4]
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_3C], 1
jmp	short loc_67CDEFAD
align 10h
			
mov	edx, ebp
and	edx, 1
mov	[esp+7Ch+var_3C], edx
mov	[esp+7Ch+var_4C], esi
			
test	ebp, 40h
jz	loc_67CDF128
			
mov	ecx, [esp+7Ch+var_40]
test	ecx, ecx
jz	short loc_67CDEFF1
mov	edx, [esp+7Ch+var_40]
mov	eax, [edx+10h]
test	eax, eax
jz	short loc_67CDEFF1
mov	edx, [esp+7Ch+var_44]
mov	[esp+7Ch+var_68], edx
mov	[esp+7Ch+var_6C], ebp
mov	edx, [esp+7Ch+var_24]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], edx
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	eax
			
mov	eax, [ebx+4]
mov	[esp+7Ch+var_7C], eax
call	purple_account_get_connection
mov	edx, [esp+7Ch+var_3C]
test	edx, edx
jz	loc_67CDF120
test	eax, eax
jz	loc_67CDF244
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_display_name
mov	ecx, eax
test	eax, eax
jz	loc_67CDF244
			
mov	[esp+7Ch+var_7C], 18h
mov	[esp+7Ch+var_54], ecx
call	g_malloc0
mov	ecx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_7C], ecx
mov	[esp+7Ch+var_54], eax
call	g_strdup
mov	edx, [esp+7Ch+var_54]
mov	[edx], eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	edx, [esp+7Ch+var_54]
mov	[edx+14h], eax
mov	[edx+8], ebp
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+var_7C], eax
call	g_strdup
mov	edx, [esp+7Ch+var_54]
mov	[edx+4], eax
mov	eax, [esp+7Ch+var_44]
mov	[edx+0Ch], eax
mov	[edx+10h], ebx
mov	[esp+7Ch+var_78], edx
mov	eax, [ebx+2Ch]
mov	[esp+7Ch+var_7C], eax
call	g_list_prepend
mov	[ebx+2Ch], eax
mov	edx, [esp+7Ch+var_24]
cmp	[esp+7Ch+var_48], 1
jz	loc_67CDF238
mov	eax, offset aWroteChatMsg 
mov	[esp+7Ch+var_64], ebp
mov	[esp+7Ch+var_68], ebx
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_7C], eax
call	g_free
jmp	loc_67CDEEA8
align 4
mov	[esp+7Ch+var_74], offset aConvNull 
mov	[esp+7Ch+var_78], offset aPurple_conv_15 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	loc_67CDEEA8
align 4
mov	[esp+7Ch+var_74], offset aMessageNull 
mov	[esp+7Ch+var_78], offset aPurple_conv_15 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	loc_67CDEEA8
align 10h
mov	ecx, esi
jmp	loc_67CDF022
align 4
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_is_logging
test	eax, eax
jz	loc_67CDEFB9
mov	eax, [ebx+14h]
test	eax, eax
jz	loc_67CDF24E
mov	[esp+7Ch+var_38], edi
mov	[esp+7Ch+var_34], ebx
mov	ebx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_30], esi
mov	esi, eax
mov	edi, [esp+7Ch+var_44]
lea	esi, [esi+0]
mov	edx, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], edi
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], ebp
mov	edx, [esi]
mov	[esp+7Ch+var_7C], edx
call	purple_log_write
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CDF15C
mov	edi, [esp+7Ch+var_38]
mov	ebx, [esp+7Ch+var_34]
mov	esi, [esp+7Ch+var_30]
jmp	loc_67CDEFB9
align 4
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], edi
call	purple_find_buddy
test	eax, eax
jz	short loc_67CDF1C0
mov	[esp+7Ch+var_7C], eax
call	purple_buddy_get_contact_alias
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_3C], 0
jmp	loc_67CDEFAD
align 10h
mov	[esp+7Ch+var_4C], esi
mov	[esp+7Ch+var_3C], 0
jmp	loc_67CDEFAD
mov	eax, [esp+7Ch+var_3C]
test	eax, eax
jz	short loc_67CDF20B
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
call	purple_buddy_get_contact_alias
mov	edx, eax
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_54], edx
call	purple_buddy_get_name
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CDF268
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_display_name
test	eax, eax
jz	short loc_67CDF285
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_7C], eax
call	purple_connection_get_display_name
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_3C], 1
jmp	loc_67CDEFAD
mov	eax, offset aWroteImMsg	
jmp	loc_67CDF0A1
align 4
			
mov	eax, [ebx+4]
mov	ecx, [eax]
jmp	loc_67CDF022
mov	eax, ebx
call	sub_67CDE3D0
mov	eax, [ebx+14h]
test	eax, eax
jz	loc_67CDEFB9
jmp	loc_67CDF143
align 4
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_7C], eax
call	purple_buddy_get_contact_alias
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_3C], 1
jmp	loc_67CDEFAD
mov	[esp+7Ch+var_7C], edi
call	purple_account_get_username
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_3C], 1
jmp	loc_67CDEFAD
call	__stack_chk_fail
mov	[esp+7Ch+var_7C], ebx
call	purple_conversation_get_type
mov	[esp+7Ch+var_4C], 0
jmp	loc_67CDEE34
public purple_conversation_has_focus
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF2F8
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_ui_ops
test	eax, eax
jz	short loc_67CDF314
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CDF314
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF327
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF327
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
public purple_conversation_update
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDF374
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aConversationUp 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF392
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDF363
call	__stack_chk_fail
align 4
public purple_conversation_set_logging
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDF3DC
cmp	[eax+10h], edx
jz	short loc_67CDF3F8
mov	[eax+10h], edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF408
mov	[esp+2Ch+arg_4], 5
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_conversation_update
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CDF408
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_conversation_set_title
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF468
test	esi, esi
jz	short loc_67CDF498
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF4B6
mov	[esp+2Ch+arg_4], 0Bh
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_conversation_update
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF4B6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aTitleNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDF484
			
call	__stack_chk_fail
align 4
public purple_conversation_autoset_title
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CDF56C
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_account
mov	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_name
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_type
dec	eax
jz	short loc_67CDF528
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jz	short loc_67CDF54C
			
mov	eax, esi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_set_title
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF58A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
test	edi, edi
jz	short loc_67CDF505
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	purple_find_buddy
test	eax, eax
jz	short loc_67CDF505
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_get_contact_alias
test	eax, eax
jnz	short loc_67CDF507
jmp	short loc_67CDF505
align 4
test	edi, edi
jz	short loc_67CDF505
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	purple_blist_find_chat
test	eax, eax
jz	short loc_67CDF505
mov	[esp+2Ch+var_2C], eax
call	purple_chat_get_name
jmp	short loc_67CDF544
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDF513
call	__stack_chk_fail
align 10h
public purple_conversation_set_name
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CDF64C
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc
mov	esi, eax
mov	eax, [ebx]
mov	[esi], eax
mov	eax, [ebx+4]
mov	[esi+8], eax
mov	edx, [ebx+8]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_normalize
mov	[esi+4], eax
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72128
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+8], eax
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	purple_normalize
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esi+4], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72128
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF67B
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_conversation_autoset_title
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF67B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_conversation_set_account
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF6D0
mov	[esp+2Ch+var_2C], ebx
call	purple_conversation_get_account
cmp	eax, esi
jz	short loc_67CDF6EC
mov	[ebx+4], esi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF6FE
mov	[esp+2Ch+arg_4], 2
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_conversation_update
align 10h
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF6FE
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_conversation_set_features
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CDF744
mov	[eax+28h], edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF770
mov	[esp+2Ch+arg_4], 0Dh
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_conversation_update
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF770
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_conv_im_get_conversation
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDF7A4
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF7C4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_im 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDF791
call	__stack_chk_fail
align 4
public purple_conv_im_set_icon
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF834
mov	eax, [ebx+14h]
cmp	eax, esi
jz	short loc_67CDF806
mov	[esp+2Ch+var_2C], eax
call	purple_buddy_icon_unref
test	esi, esi
jz	short loc_67CDF830
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_icon_ref
mov	[ebx+14h], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_im_get_conversation
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF862
mov	[esp+2Ch+arg_4], 0Ah
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_conversation_update
xor	eax, eax
jmp	short loc_67CDF803
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF862
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_conv_im_get_icon
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDF894
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF8B4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDF882
call	__stack_chk_fail
align 4
public purple_conv_im_get_typing_state
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDF8E8
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDF908
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDF8D6
call	__stack_chk_fail
align 10h
public purple_conv_im_stop_typing_timeout
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF950
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CDF93D
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+8], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF96E
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDF93D
call	__stack_chk_fail
align 4
public purple_conv_im_start_typing_timeout
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDF9D4
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_67CDF9C8
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_im_get_conversation
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_67CDFE58
mov	[esp+2Ch+var_2C], esi
call	purple_timeout_add_seconds
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDF9F2
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_im_stop_typing_timeout
jmp	short loc_67CDF997
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDF9B6
call	__stack_chk_fail
align 4
public purple_conv_im_get_typing_timeout
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDFA24
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFA44
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDFA12
call	__stack_chk_fail
align 4
public purple_conv_im_set_type_again
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDFA9C
test	esi, esi
jnz	short loc_67CDFA88
mov	dword ptr [ebx+0Ch], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDFABA
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+Time],	0 
call	time
add	esi, eax
mov	[ebx+0Ch], esi
jmp	short loc_67CDFA73
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__6 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67CDFA73
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDFB54
mov	[esp], ebx
call	purple_conversation_get_gc
mov	edi, eax
mov	[esp], ebx
call	purple_conversation_get_name
mov	esi, eax
test	edi, edi
jz	short loc_67CDFB3D
test	esi, esi
jz	short loc_67CDFB3D
mov	[esp], ebx
call	purple_conversation_get_im_data
mov	dword ptr [esp+4], 1
mov	[esp], eax
call	purple_conv_im_set_type_again
mov	dword ptr [esp+8], 2
mov	[esp+4], esi
mov	[esp], edi
call	serv_send_typing
mov	dword ptr [esp+8], offset aTyped___ 
mov	dword ptr [esp+4], offset aConversation	
mov	dword ptr [esp], 1
call	purple_debug
			
xor	eax, eax
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFB72
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	dword ptr [esp+8], offset aConvNull 
mov	dword ptr [esp+4], offset aSend_typed_cb 
mov	dword ptr [esp], 0
call	g_return_if_fail_warning
jmp	short loc_67CDFB3D
call	__stack_chk_fail
align 4
public purple_conv_im_get_type_again
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDFBA4
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFBC4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDFB92
call	__stack_chk_fail
align 4
public purple_conv_im_start_send_typed_timeout
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDFC18
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_im_get_conversation
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset loc_67CDFAC0
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDFC36
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDFC06
call	__stack_chk_fail
align 4
public purple_conv_im_stop_send_typed_timeout
			
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CDFC7C
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CDFC69
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	dword ptr [ebx+10h], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDFC9A
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv__9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDFC69
call	__stack_chk_fail
align 10h
public purple_conv_im_get_send_typed_timeout
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDFCCC
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFCEC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CDFCBA
call	__stack_chk_fail
align 4
public purple_conv_im_update_typing
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CDFD34
mov	[esp+2Ch+var_2C], eax
call	purple_conv_im_get_conversation
mov	[esp+2Ch+var_28], 3
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_update
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDFD52
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CDFD23
call	__stack_chk_fail
align 4
public purple_conv_im_set_typing_state
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	loc_67CDFE24
cmp	[ebx+4], eax
jz	loc_67CDFE40
mov	[ebx+4], eax
cmp	eax, 1
jz	short loc_67CDFDFC
jb	short loc_67CDFDD4
cmp	eax, 2
jnz	short loc_67CDFDB4
mov	eax, [ebx]
mov	edx, [eax+8]
mov	[esp+2Ch+var_20], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aBuddyTyped 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CDFE51
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_conv_im_update_typing
align 4
mov	eax, [ebx]
mov	edx, [eax+8]
mov	[esp+2Ch+var_20], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aBuddyTypingSto 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
jmp	short loc_67CDFDB4
align 4
mov	eax, [ebx]
mov	edx, [eax+8]
mov	[esp+2Ch+var_20], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aBuddyTyping 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
jmp	short loc_67CDFDB4
align 4
mov	[esp+2Ch+var_24], offset aImNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFE51
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_im_data
mov	ebx, eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	purple_conv_im_set_typing_state
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_im_stop_typing_timeout
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFEA0
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_conv_im_write
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	edi, [esp+4Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
test	ebx, ebx
jz	loc_67CDFF88
test	ebp, ebp
jz	loc_67CDFFB8
mov	[esp+4Ch+var_4C], ebx
call	purple_conv_im_get_conversation
test	esi, 2
jnz	short loc_67CDFF68
mov	edx, [eax+1Ch]
test	edx, edx
jz	short loc_67CDFF34
mov	edx, [edx+0Ch]
test	edx, edx
jz	short loc_67CDFF34
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CDFFCE
mov	[esp+4Ch+arg_10], edi
mov	[esp+4Ch+arg_C], esi
mov	[esp+4Ch+arg_8], ebp
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_4], ecx
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
align 4
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CDFFCE
mov	[esp+4Ch+arg_10], edi
mov	[esp+4Ch+arg_C], esi
mov	[esp+4Ch+arg_8], ebp
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_4], ecx
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_conversation_write
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_34], eax
call	purple_conv_im_set_typing_state
mov	eax, [esp+4Ch+var_34]
jmp	loc_67CDFEF3
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CDFFCE
mov	[esp+4Ch+arg_8], offset	aImNull	
mov	[esp+4Ch+arg_4], offset	aPurple_conv_27	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CDFFCE
mov	[esp+4Ch+arg_8], offset	aMessageNull 
jmp	short loc_67CDFF9C
			
call	__stack_chk_fail
align 4
public purple_conv_present_error
			
push	esi
push	ebx
sub	esp, 34h
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67CE0084
test	edx, edx
jz	loc_67CE00A4
test	ebx, ebx
jz	short loc_67CE0064
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	4
call	purple_find_conversation_with_account
mov	esi, eax
test	eax, eax
jz	short loc_67CE0080
mov	[esp+3Ch+Time],	0 
call	time
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 200h
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+Time],	esi
call	purple_conversation_write
mov	eax, 1
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE00C4
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aWhatNull 
mov	[esp+3Ch+var_38], offset aPurple_conv_pr 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE0050
mov	[esp+3Ch+var_34], offset aWhoNull 
mov	[esp+3Ch+var_38], offset aPurple_conv_pr 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE0050
mov	[esp+3Ch+var_34], offset aAccountNull_3	
mov	[esp+3Ch+var_38], offset aPurple_conv_pr 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE0050
call	__stack_chk_fail
align 4
public purple_conv_send_confirm
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE0218
test	esi, esi
jz	loc_67CE0238
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_67CE0134
mov	eax, [eax+38h]
test	eax, eax
jz	short loc_67CE0134
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE0256
mov	[esp+7Ch+arg_4], esi
mov	[esp+7Ch+arg_0], ebx
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
			
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], offset aYouAreAboutToS 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+var_7C], 8
call	g_malloc0
mov	edi, eax
mov	[eax], ebx
mov	[eax+4], esi
mov	[esp+7Ch+var_78], offset aCancel_0 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset a_sendMessage 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
mov	[esp+7Ch+var_34], eax
call	libintl_dgettext
mov	[esp+7Ch+var_7C], ebx
mov	[esp+7Ch+var_30], eax
call	purple_conversation_get_account
mov	esi, eax
mov	[esp+7Ch+var_78], offset aSendMessage 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_48], 0
mov	ecx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_4C], ecx
mov	[esp+7Ch+var_50], offset loc_67CE10B8
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_54], edx
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], ebx
mov	[esp+7Ch+var_64], 0
mov	[esp+7Ch+var_68], esi
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], ebp
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], ebx
call	purple_request_action
			
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE0256
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_74], offset aConvNull 
mov	[esp+7Ch+var_78], offset aPurple_conv_se 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE0203
align 4
mov	[esp+7Ch+var_74], offset aMessageNull 
mov	[esp+7Ch+var_78], offset aPurple_conv_se 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE0203
			
call	__stack_chk_fail
align 4
public purple_conv_custom_smiley_add
push	esi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	short loc_67CE02C8
test	eax, eax
jz	short loc_67CE02C8
cmp	byte ptr [eax],	0
jz	short loc_67CE02C8
mov	ecx, [edx+1Ch]
test	ecx, ecx
jz	short loc_67CE02B4
mov	ecx, [ecx+2Ch]
test	ecx, ecx
jz	short loc_67CE02B4
mov	esi, [esp+2Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CE02DC
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], edx
add	esp, 24h
pop	ebx
pop	esi
jmp	ecx
align 4
			
mov	[esp+2Ch+var_28], offset aCouldNotFindAd 
mov	[esp+2Ch+var_2C], offset aConversation 
call	purple_debug_info
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE02DC
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_conv_custom_smiley_write
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	esi, [esp+1Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	loc_67CE03A8
test	eax, eax
jz	short loc_67CE0350
cmp	byte ptr [eax],	0
jz	short loc_67CE0350
mov	ecx, [edx+1Ch]
test	ecx, ecx
jz	short loc_67CE0380
mov	ecx, [ecx+30h]
test	ecx, ecx
jz	short loc_67CE0380
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	loc_67CE03BE
mov	[esp+1Ch+arg_C], esi
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], eax
mov	[esp+1Ch+arg_0], edx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	ecx
align 10h
			
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CE03BE
mov	[esp+1Ch+arg_8], offset	aSmileNullSmile	
mov	[esp+1Ch+arg_4], offset	aPurple_conv_cu	
mov	[esp+1Ch+arg_0], 0
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE03BE
mov	[esp+1Ch+arg_4], offset	aCouldNotFindTh	
mov	[esp+1Ch+arg_0], offset	aConversation 
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_info
align 4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE03BE
mov	[esp+1Ch+arg_8], offset	aConvNull 
jmp	short loc_67CE0364
			
call	__stack_chk_fail
align 4
public purple_conv_custom_smiley_close
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	loc_67CE0474
test	eax, eax
jz	short loc_67CE041C
cmp	byte ptr [eax],	0
jz	short loc_67CE041C
mov	ecx, [edx+1Ch]
test	ecx, ecx
jz	short loc_67CE044C
mov	ecx, [ecx+34h]
test	ecx, ecx
jz	short loc_67CE044C
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CE0492
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], edx
add	esp, 28h
pop	ebx
jmp	ecx
align 4
			
mov	[esp+2Ch+var_24], offset aSmileNullSmile 
mov	[esp+2Ch+var_28], offset aPurple_conv_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE0492
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE0492
mov	[esp+2Ch+arg_4], offset	aCouldNotFindCu	
mov	[esp+2Ch+arg_0], offset	aConversation 
add	esp, 28h
pop	ebx
jmp	purple_debug_info
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE0438
			
call	__stack_chk_fail
align 4
public purple_conv_chat_get_conversation
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE04C4
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE04E4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_ch 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE04B1
call	__stack_chk_fail
align 4
public purple_conv_chat_set_users
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	short loc_67CE051C
mov	[edx+4], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE053C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE050A
call	__stack_chk_fail
align 4
public purple_conv_chat_get_users
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE0570
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE0590
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE055E
call	__stack_chk_fail
align 4
public purple_conv_chat_set_ignored
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
jz	short loc_67CE05C8
mov	[edx+8], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE05E8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE05B6
call	__stack_chk_fail
align 10h
public purple_conv_chat_get_ignored
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE061C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE063C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE060A
call	__stack_chk_fail
align 4
public purple_conv_chat_get_ignored_user
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CE072C
test	edi, edi
jz	loc_67CE074C
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_get_ignored
mov	esi, eax
test	eax, eax
jnz	short loc_67CE068F
jmp	loc_67CE0728
align 4
			
mov	esi, [esi+4]
test	esi, esi
jz	loc_67CE0728
			
mov	ebx, [esi]
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], edi
call	purple_utf8_strcasecmp
test	eax, eax
jz	short loc_67CE06D0
mov	dl, [ebx]
cmp	dl, 2Bh
jz	short loc_67CE06EC
cmp	dl, 25h
jz	short loc_67CE06EC
cmp	dl, 40h
jnz	short loc_67CE0684
lea	ebp, [ebx+1]
cmp	byte ptr [ebx+1], 2Bh
jz	short loc_67CE0704
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	purple_utf8_strcasecmp
test	eax, eax
jnz	short loc_67CE0684
mov	ebx, ebp
lea	esi, [esi+0]
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE076F
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
lea	eax, [ebx+1]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	purple_utf8_strcasecmp
test	eax, eax
jz	short loc_67CE06D0
mov	dl, [ebx]
jmp	short loc_67CE06AD
align 4
lea	eax, [ebx+2]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	purple_utf8_strcasecmp
test	eax, eax
jz	short loc_67CE06CB
cmp	byte ptr [ebx+1], 2Bh
jnz	short loc_67CE06BB
mov	esi, [esi+4]
test	esi, esi
jnz	loc_67CE068F
			
xor	ebx, ebx
jmp	short loc_67CE06D0
mov	[esp+3Ch+var_34], offset aChatNull_0 
mov	[esp+3Ch+var_38], offset aPurple_conv_33 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE06D0
mov	[esp+3Ch+var_34], offset aUserNull 
mov	[esp+3Ch+var_38], offset aPurple_conv_33 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE06D0
call	__stack_chk_fail
public purple_conv_chat_is_user_ignored
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE07B8
test	edx, edx
jz	short loc_67CE07D8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_get_ignored_user
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE07F8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE07A7
mov	[esp+2Ch+var_24], offset aUserNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE07A7
call	__stack_chk_fail
align 10h
public purple_conv_chat_unignore
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE08B4
test	esi, esi
jz	loc_67CE08D8
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
jnz	short loc_67CE0850
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE08F9
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_chat_get_ignored_user
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_chat_get_ignored
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_list_find
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove_link
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_chat_set_ignored
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE08F9
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_free_1
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CE0838
align 4
mov	[esp+2Ch+var_24], offset aNameNull_1 
mov	[esp+2Ch+var_28], offset aPurple_conv_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CE0838
			
call	__stack_chk_fail
align 10h
public purple_conv_chat_ignore
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE0984
test	esi, esi
jz	loc_67CE09A4
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
jz	short loc_67CE094C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE09C5
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE09C5
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_conv_chat_set_ignored
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE0934
align 4
mov	[esp+2Ch+var_24], offset aNameNull_1 
mov	[esp+2Ch+var_28], offset aPurple_conv_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CE0934
			
call	__stack_chk_fail
align 4
public purple_conv_chat_set_topic
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE0A6C
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_conv_chat_get_conversation
mov	[esp+3Ch+var_38], 6
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_update
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_30], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aChatTopicChang 
mov	[esp+3Ch+var_3C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE0A9B
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE0A9B
mov	[esp+3Ch+arg_8], offset	aChatNull_0 
mov	[esp+3Ch+arg_4], offset	aPurple_conv_37	
mov	[esp+3Ch+arg_0], 0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
public purple_conv_chat_get_topic
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE0ACC
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE0AEC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_38 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE0ABA
call	__stack_chk_fail
align 4
public purple_conv_chat_set_id
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE0B24
mov	[eax+14h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE0B42
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_39 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE0B12
call	__stack_chk_fail
align 4
public purple_conv_chat_get_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE0B74
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE0B97
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CE0B62
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_24], 0
cmp	byte ptr [edx],	0
jnz	short loc_67CE0BD8
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE0FDD
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, ecx
mov	[esp+5Ch+Time],	ebx
mov	[esp+5Ch+var_3C], edx
call	purple_conversation_get_account
mov	esi, eax
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_gc
mov	[esp+5Ch+var_34], eax
test	esi, esi
mov	edx, [esp+5Ch+var_3C]
jz	loc_67CE0F60
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jz	loc_67CE0F84
mov	[esp+5Ch+Time],	ebx
mov	[esp+5Ch+var_3C], edx
call	purple_conversation_get_type
mov	[esp+5Ch+var_38], eax
test	ebp, 8000h
mov	edx, [esp+5Ch+var_3C]
jnz	loc_67CE0CDC
mov	[esp+5Ch+Time],	edx
mov	[esp+5Ch+var_3C], edx
test	ebp, 4000h
jz	loc_67CE0DB8
call	g_strdup
mov	edi, eax
mov	edx, [esp+5Ch+var_3C]
test	edi, edi
jz	short loc_67CE0C60
test	byte ptr [ebx+28h], 1
jz	short loc_67CE0C60
test	ebp, 800h
jz	loc_67CE0FA8
			
mov	[esp+5Ch+Time],	edx
call	g_strdup
mov	[esp+5Ch+var_24], eax
or	ebp, 1
mov	[esp+5Ch+var_30], ebp
cmp	[esp+5Ch+var_38], 1
mov	[esp+5Ch+Time],	ebx
jz	short loc_67CE0CE0
call	purple_conversation_get_chat_data
mov	[esp+5Ch+Time],	eax
call	purple_conv_chat_get_id
mov	[esp+5Ch+var_4C], eax
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSendingChatMsg 
mov	[esp+5Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
mov	ebp, [esp+5Ch+var_24]
test	ebp, ebp
jz	short loc_67CE0CC0
cmp	byte ptr [ebp+0], 0
jnz	loc_67CE0DC8
			
mov	[esp+5Ch+Time],	edi
call	g_free
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+Time],	eax
call	g_free
jmp	loc_67CE0BBD
align 4
xor	edi, edi
jmp	short loc_67CE0C60
call	purple_conversation_get_im_data
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_name
lea	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSendingImMsg 
mov	[esp+5Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
mov	ebp, [esp+5Ch+var_24]
test	ebp, ebp
jz	short loc_67CE0CC0
cmp	byte ptr [ebp+0], 0
jz	short loc_67CE0CC0
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_name
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	serv_send_im
mov	ebp, eax
test	eax, eax
jle	short loc_67CE0D81
test	edi, edi
jz	short loc_67CE0D81
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_4C], eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Time],	eax
call	purple_conv_im_write
			
mov	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+Time],	ebx
mov	[esp+5Ch+var_3C], edx
call	purple_conversation_get_name
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSentImMsg 
mov	[esp+5Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
jmp	short loc_67CE0E2A
align 4
call	purple_markup_linkify
mov	edi, eax
mov	edx, [esp+5Ch+var_3C]
jmp	loc_67CE0C4A
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_chat_data
mov	[esp+5Ch+Time],	eax
call	purple_conv_chat_get_id
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	serv_chat_send
mov	ebp, eax
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_chat_data
mov	[esp+5Ch+Time],	eax
call	purple_conv_chat_get_id
mov	[esp+5Ch+var_4C], eax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aSentChatMsg 
mov	[esp+5Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
test	ebp, ebp
jns	loc_67CE0CC0
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_name
mov	ebx, eax
cmp	ebp, 0FFFFFFF9h
jz	loc_67CE0EE4
cmp	ebp, 0FFFFD8B7h
jz	loc_67CE0FBC
mov	[esp+5Ch+var_58], offset aUnableToSendMe 
mov	[esp+5Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	ebx
call	purple_conv_present_error
test	eax, eax
jnz	loc_67CE0CC0
mov	[esp+5Ch+var_58], offset aUnableToSend_0 
mov	[esp+5Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	purple_notify_message
mov	[esp+5Ch+Time],	ebx
call	g_free
jmp	loc_67CE0CC0
mov	[esp+5Ch+var_58], offset aUnableToSend_1 
mov	[esp+5Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	ebx
call	purple_conv_present_error
test	eax, eax
jnz	loc_67CE0CC0
mov	[esp+5Ch+var_58], offset aUnableToSend_0 
mov	[esp+5Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aTheMessageIsTo 
mov	[esp+5Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
jmp	loc_67CE0EB7
align 10h
mov	[esp+5Ch+var_54], offset aAccountNull_4	
mov	[esp+5Ch+var_58], offset aCommon_send 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE0BBD
align 4
mov	[esp+5Ch+var_54], offset aGcNull_0 
mov	[esp+5Ch+var_58], offset aCommon_send 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE0BBD
align 4
mov	[esp+5Ch+Time],	edi
call	g_strdup
mov	[esp+5Ch+var_24], eax
jmp	loc_67CE0C6C
align 4
mov	[esp+5Ch+var_54], offset aNotYetConnecte 
mov	[esp+5Ch+var_58], offset aConversation 
mov	[esp+5Ch+Time],	4
call	purple_debug
jmp	loc_67CE0CC0
call	__stack_chk_fail
align 4
public purple_conv_im_send_with_flags
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE102C
test	ebx, ebx
jz	short loc_67CE105C
mov	[esp+2Ch+var_2C], eax
call	purple_conv_im_get_conversation
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE1072
mov	ecx, esi
mov	edx, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CE0B9C
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE1072
mov	[esp+2Ch+arg_8], offset	aImNull	
mov	[esp+2Ch+arg_4], offset	aPurple_conv_41	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE1072
mov	[esp+2Ch+arg_8], offset	aMessageNull 
jmp	short loc_67CE1040
			
call	__stack_chk_fail
align 4
public purple_conv_im_send
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_conv_im_send_with_flags
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE10B2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ecx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	ebx, [ecx]
mov	esi, [ecx+4]
mov	[esp], ecx
call	g_free
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE10F5
xor	ecx, ecx
mov	edx, esi
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CE0B9C
call	__stack_chk_fail
align 4
public purple_conv_chat_write
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], edx
mov	ecx, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE1238
test	esi, esi
jz	loc_67CE1284
test	ebp, ebp
jz	loc_67CE126C
mov	[esp+4Ch+Time],	ebx
mov	[esp+4Ch+var_38], ecx
call	purple_conv_chat_get_conversation
mov	edi, eax
mov	[esp+4Ch+Time],	eax
call	purple_conversation_get_gc
mov	[esp+4Ch+Time],	eax
call	purple_connection_get_account
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+Time],	ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
mov	ecx, [esp+4Ch+var_38]
jnz	loc_67CE12FB
test	ecx, ecx
js	loc_67CE129C
test	byte ptr [esp+4Ch+var_34], 80h
jz	short loc_67CE11FC
			
mov	eax, [edi+1Ch]
test	eax, eax
jz	short loc_67CE11C8
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CE11C8
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE12F6
mov	[esp+4Ch+arg_10], ecx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+arg_C], edx
mov	[esp+4Ch+arg_8], ebp
mov	[esp+4Ch+arg_4], esi
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE12F6
mov	[esp+4Ch+arg_10], ecx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+arg_C], edx
mov	[esp+4Ch+arg_8], ebp
mov	[esp+4Ch+arg_4], esi
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_conversation_write
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Time],	eax
mov	[esp+4Ch+var_38], ecx
call	purple_normalize
mov	edx, [ebx+18h]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+Time],	eax
call	purple_strequal
test	eax, eax
mov	ecx, [esp+4Ch+var_38]
jz	loc_67CE12C4
or	[esp+4Ch+var_34], 1
jmp	loc_67CE1187
align 4
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE12F6
mov	[esp+4Ch+arg_8], offset	aChatNull_0 
			
mov	[esp+4Ch+arg_4], offset	aPurple_conv_42	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE12F6
mov	[esp+4Ch+arg_8], offset	aMessageNull 
jmp	short loc_67CE1250
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE12F6
mov	[esp+4Ch+arg_8], offset	aWhoNull 
jmp	short loc_67CE1250
align 4
mov	[esp+4Ch+var_48], offset aPurple_conv_43 
mov	[esp+4Ch+Time],	offset aConversation 
call	purple_debug_error
mov	[esp+4Ch+Time],	0 
call	time
mov	ecx, eax
jmp	loc_67CE1180
align 4
mov	eax, [ebx+18h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	ebp
mov	[esp+4Ch+var_38], ecx
call	purple_utf8_has_word
test	eax, eax
mov	ecx, [esp+4Ch+var_38]
jz	short loc_67CE12EC
or	[esp+4Ch+var_34], 22h
jmp	loc_67CE1187
align 4
or	[esp+4Ch+var_34], 2
jmp	loc_67CE1187
			
call	__stack_chk_fail
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE12F6
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
public purple_conv_chat_send_with_flags
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE1358
test	ebx, ebx
jz	short loc_67CE1388
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_get_conversation
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE139E
mov	ecx, esi
mov	edx, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CE0B9C
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE139E
mov	[esp+2Ch+arg_8], offset	aChatNull_0 
mov	[esp+2Ch+arg_4], offset	aPurple_conv_44	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE139E
mov	[esp+2Ch+arg_8], offset	aMessageNull 
jmp	short loc_67CE136C
			
call	__stack_chk_fail
align 4
public purple_conv_chat_send
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_send_with_flags
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE13DE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_conv_chat_clear_users
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67CE150C
mov	[esp+5Ch+var_5C], edi
call	purple_conv_chat_get_conversation
mov	esi, eax
mov	[esp+5Ch+var_5C], eax
call	purple_conversation_get_ui_ops
mov	ebp, eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_30], eax
test	ebp, ebp
jz	short loc_67CE146F
mov	edx, [ebp+1Ch]
test	edx, edx
jz	short loc_67CE146F
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jz	loc_67CE152A
mov	ebx, [esp+5Ch+var_30]
xor	eax, eax
xchg	ax, ax
mov	ecx, [ebx]
mov	ecx, [ecx]
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], eax
call	g_list_prepend
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CE143C
mov	edx, [ebp+1Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], eax
call	edx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_list_free
			
mov	ebx, [esp+5Ch+var_30]
test	ebx, ebx
jz	short loc_67CE14D7
nop
mov	ebp, [ebx]
mov	[esp+5Ch+var_4C], 0
mov	edx, [ebp+0]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aChatBuddyLeavi 
mov	[esp+5Ch+var_5C], offset dword_67D7212C
call	purple_signal_emit
mov	[esp+5Ch+var_4C], 0
mov	edx, [ebp+0]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aChatBuddyLeft	
mov	[esp+5Ch+var_5C], offset dword_67D7212C
call	purple_signal_emit
mov	[esp+5Ch+var_5C], ebp
call	purple_conv_chat_cb_destroy
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CE1478
mov	eax, [edi+20h]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_remove_all
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_list_free
mov	dword ptr [edi+4], 0
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE1531
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], offset aChatNull_0 
mov	[esp+5Ch+var_58], offset aPurple_conv_45 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE14F5
xor	eax, eax
jmp	loc_67CE1456
call	__stack_chk_fail
align 4
public purple_conv_chat_set_nick
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE1590
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	purple_normalize
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE15AE
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_46 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE157B
call	__stack_chk_fail
align 4
public purple_conv_chat_get_nick
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE15E0
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE1600
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_47 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE15CE
call	__stack_chk_fail
align 4
public purple_find_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D72120
test	ebx, ebx
jnz	short loc_67CE1637
jmp	short loc_67CE1674
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CE1674
mov	esi, [ebx]
mov	[esp+3Ch+var_3C], esi
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_get_id
cmp	eax, edi
jnz	short loc_67CE1630
mov	[esp+3Ch+var_3C], esi
call	purple_conversation_get_gc
cmp	eax, ebp
jnz	short loc_67CE1630
lea	esi, [esi+0]
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE1678
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	esi, esi
jmp	short loc_67CE165C
call	__stack_chk_fail
align 10h
public purple_conv_chat_left
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE16C0
mov	dword ptr [eax+1Ch], 1
mov	[esp+2Ch+var_28], 0Ch
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_update
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE16DE
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE16B0
call	__stack_chk_fail
align 4
public purple_conv_chat_invite_user
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	ebx, [esp+7Ch+arg_4]
mov	ebp, [esp+7Ch+arg_8]
mov	ecx, [esp+7Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CE1944
test	ebx, ebx
jz	short loc_67CE1728
cmp	byte ptr [ebx],	0
jnz	loc_67CE18D4
			
mov	esi, [eax]
mov	edx, [esi+4]
mov	[esp+7Ch+var_34], edx
call	purple_request_fields_new
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aInviteToChat 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_group_new
mov	edi, eax
mov	[esp+7Ch+var_78], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_7C], eax
call	purple_request_fields_add_group
mov	[esp+7Ch+var_78], offset aBuddy_1 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aScreenname 
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
mov	[esp+7Ch+var_38], eax
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], 1
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_set_required
mov	[esp+7Ch+var_78], offset aScreenname 
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], eax
call	purple_request_field_set_type_hint
mov	[esp+7Ch+var_78], offset aMessage_0 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], offset aMessage 
call	purple_request_field_string_new
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_request_field_group_add_field
mov	[esp+7Ch+var_78], offset aCancel_0 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aInvite 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
mov	[esp+7Ch+var_3C], eax
call	libintl_dgettext
mov	[esp+7Ch+var_78], offset aPleaseEnterThe 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
mov	[esp+7Ch+var_38], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aInviteToChat 
mov	[esp+7Ch+var_7C], offset aPidgin_3 
call	libintl_dgettext
mov	[esp+7Ch+var_4C], esi
mov	[esp+7Ch+var_50], esi
mov	[esp+7Ch+var_54], ebx
mov	ebx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_58], ebx
mov	[esp+7Ch+var_5C], 0
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_60], ecx
mov	[esp+7Ch+var_64], offset sub_67CDEA48
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_68], edx
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], ebp
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	purple_request_fields
mov	ebx, [esp+7Ch+var_20]
xor	ebx, ds:__stack_chk_guard
jnz	loc_67CE197D
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	ebp, ebp
jz	loc_67CE1728
cmp	byte ptr [ebp+0], 0
jz	loc_67CE1728
mov	esi, [eax]
mov	edx, [esi+4]
mov	[esp+7Ch+var_34], edx
test	ecx, ecx
jnz	loc_67CE1731
mov	[esp+7Ch+var_7C], eax
call	purple_conv_chat_get_id
mov	esi, eax
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], edx
call	purple_account_get_connection
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE197D
mov	[esp+7Ch+arg_C], ebx
mov	[esp+7Ch+arg_8], ebp
mov	[esp+7Ch+arg_4], esi
mov	[esp+7Ch+arg_0], eax
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	serv_chat_invite
align 4
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE197D
mov	[esp+7Ch+arg_8], offset	aChat_0	
mov	[esp+7Ch+arg_4], offset	aPurple_conv_49	
mov	[esp+7Ch+arg_0], 0
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_conv_chat_has_left
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE19B0
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE19D3
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_50 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67CE199E
call	__stack_chk_fail
public purple_conversation_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CE1A70
test	edi, edi
jz	loc_67CE1BBC
test	ebp, ebp
jz	loc_67CE1BE0
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	purple_find_conversation_with_account
mov	ebx, eax
test	eax, eax
jz	loc_67CE1AA4
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jz	loc_67CE1CA0
			
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jz	short loc_67CE1A90
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_type
cmp	eax, 2
jz	loc_67CE1C04
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE1E2C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], offset aTypePurple_con 
mov	[esp+4Ch+var_48], offset aPurple_conv_51 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE1A53
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_has_left
test	eax, eax
jnz	short loc_67CE1A42
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_connection
test	eax, eax
jz	loc_67CE1DEC
mov	[esp+4Ch+var_4C], 30h
mov	[esp+4Ch+var_30], eax
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[eax+4], edi
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+8], eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+24h], eax
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+4]
mov	[ebx+28h], eax
cmp	esi, 1
jz	loc_67CE1D7C
cmp	esi, 2
jz	loc_67CE1CD8
			
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72124
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	ds:dword_67D72124, eax
mov	[esp+4Ch+var_4C], 0Ch
call	g_malloc
mov	ebp, eax
mov	eax, [ebx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebp+4], eax
mov	[ebp+8], edi
mov	[ebp+0], esi
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72128
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_autoset_title
mov	eax, ds:dword_67D72118
mov	[ebx+1Ch], eax
test	eax, eax
jz	short loc_67CE1B9C
mov	eax, [eax]
test	eax, eax
jz	short loc_67CE1B9C
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aConversationCr 
mov	[esp+4Ch+var_4C], offset dword_67D7212C
call	purple_signal_emit
jmp	loc_67CE1A53
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_4	
mov	[esp+4Ch+var_48], offset aPurple_conv_51 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE1A53
align 10h
mov	[esp+4Ch+var_44], offset aNameNull_1 
mov	[esp+4Ch+var_48], offset aPurple_conv_51 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE1A53
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_account
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_close_logs
mov	eax, ebx
call	sub_67CDE3D0
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_connection
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_display_name
mov	esi, eax
test	eax, eax
jz	loc_67CE1E10
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_set_nick
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_clear_users
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_set_topic
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	dword ptr [eax+1Ch], 0
mov	[esp+4Ch+var_48], 0Ch
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_update
jmp	loc_67CE1A53
align 10h
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_has_left
test	eax, eax
jnz	loc_67CE1A35
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aTryingToCreate 
mov	[esp+4Ch+var_4C], offset aConversation 
call	purple_debug_warning
jmp	loc_67CE1A35
align 4
mov	[esp+4Ch+var_4C], 24h
call	g_malloc0
mov	ebp, eax
mov	[ebx+18h], eax
mov	[eax], ebx
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset sub_67CDE444
mov	[esp+4Ch+var_4C], offset sub_67CDE484
call	g_hash_table_new_full
mov	[ebp+20h], eax
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72120
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	ds:dword_67D72120, eax
mov	eax, [edi+1Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_connection_get_display_name
test	eax, eax
jz	loc_67CE1E1F
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+18h]
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_set_nick
mov	[esp+4Ch+var_4C], offset aPurpleLoggin_0 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67CE1B24
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], ebx
call	purple_conversation_set_logging
mov	eax, ebx
call	sub_67CDE3D0
jmp	loc_67CE1B24
align 4
mov	[esp+4Ch+var_4C], 18h
call	g_malloc0
mov	[ebx+18h], eax
mov	[eax], ebx
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D7211C
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	ds:dword_67D7211C, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
call	purple_buddy_icons_find
test	eax, eax
jz	short loc_67CE1DD2
mov	[esp+4Ch+var_48], eax
mov	edx, [ebx+18h]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], eax
call	purple_conv_im_set_icon
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_icon_unref
mov	[esp+4Ch+var_4C], offset aPurpleLoggin_1 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67CE1B24
jmp	loc_67CE1D5E
align 4
mov	[esp+4Ch+var_44], offset aGcNull_0 
mov	[esp+4Ch+var_48], offset aPurple_conv_51 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE1A53
align 10h
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_username
mov	esi, eax
jmp	loc_67CE1C37
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_username
jmp	loc_67CE1D3B
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CE1EBC
mov	[esp+3Ch+var_3C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx], eax
mov	[ebx+10h], ebp
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+4], eax
mov	[esp+3Ch+var_30], offset g_free
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+14h], eax
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE1EDC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aNameNull_1 
mov	[esp+3Ch+var_38], offset aPurple_conv_52 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE1EA3
call	__stack_chk_fail
align 4
public purple_conv_chat_add_users
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edi, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_58], edx
mov	ebx, [esp+7Ch+arg_C]
mov	ecx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_40], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67CE22F4
test	esi, esi
jz	loc_67CE2334
mov	[esp+7Ch+Time],	edi
call	purple_conv_chat_get_conversation
mov	ebp, eax
mov	[esp+7Ch+Time],	eax
call	purple_conversation_get_ui_ops
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+Time],	ebp
call	purple_conversation_get_gc
mov	[esp+7Ch+var_34], eax
test	eax, eax
jz	loc_67CE2350
mov	[esp+7Ch+Time],	eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+7Ch+var_38], eax
test	eax, eax
jz	loc_67CE236C
test	ebx, ebx
jz	loc_67CE2244
mov	[esp+7Ch+var_50], ebx
mov	[esp+7Ch+var_54], esi
mov	[esp+7Ch+var_44], 0
jmp	loc_67CE20C5
align 4
			
mov	[esp+7Ch+var_48], ebx
			
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_6C], ecx
mov	[esp+7Ch+var_70], ebx
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], offset aChatBuddyJoini 
mov	[esp+7Ch+Time],	offset dword_67D7212C
call	purple_signal_emit_return_1
mov	edx, 1
test	eax, eax
jz	loc_67CE22B0
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], ecx
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+Time],	ebx
mov	[esp+7Ch+var_5C], edx
call	purple_conv_chat_cb_new
mov	esi, eax
mov	[esp+7Ch+var_78], ebx
mov	eax, [ebp+4]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
setnz	al
movzx	eax, al
mov	[esi+0Ch], eax
mov	[esp+7Ch+var_78], esi
mov	eax, [edi+4]
mov	[esp+7Ch+Time],	eax
call	g_list_prepend
mov	[edi+4], eax
mov	eax, [esi]
mov	[esp+7Ch+Time],	eax
call	g_strdup
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], eax
mov	eax, [edi+20h]
mov	[esp+7Ch+Time],	eax
call	g_hash_table_replace
mov	[esp+7Ch+var_78], esi
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Time],	eax
call	g_list_prepend
mov	[esp+7Ch+var_44], eax
mov	edx, [esp+7Ch+var_5C]
test	edx, edx
jnz	short loc_67CE2058
mov	eax, [esp+7Ch+var_40]
test	eax, eax
jnz	loc_67CE215C
			
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_68], edx
mov	ecx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_6C], ecx
mov	[esp+7Ch+var_70], ebx
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], offset aChatBuddyJoine 
mov	[esp+7Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
mov	edx, [esp+7Ch+var_54]
mov	edx, [edx+4]
mov	[esp+7Ch+var_54], edx
mov	ecx, [esp+7Ch+var_50]
mov	ecx, [ecx+4]
mov	[esp+7Ch+var_50], ecx
mov	esi, [esp+7Ch+var_58]
test	esi, esi
jz	short loc_67CE20AD
mov	edx, [esp+7Ch+var_58]
mov	edx, [edx+4]
mov	[esp+7Ch+var_58], edx
mov	ebx, [esp+7Ch+var_54]
test	ebx, ebx
jz	loc_67CE224C
mov	ecx, [esp+7Ch+var_50]
test	ecx, ecx
jz	loc_67CE224C
mov	edx, [esp+7Ch+var_54]
mov	ebx, [edx]
mov	ecx, [esp+7Ch+var_50]
mov	ecx, [ecx]
mov	[esp+7Ch+var_4C], ecx
mov	eax, [esp+7Ch+var_58]
test	eax, eax
jz	short loc_67CE2150
mov	edx, [esp+7Ch+var_58]
mov	edx, [edx]
mov	[esp+7Ch+var_3C], edx
mov	ecx, [esp+7Ch+var_38]
test	byte ptr [ecx],	4
jnz	loc_67CE1F94
mov	[esp+7Ch+var_78], ebx
mov	eax, [ebp+4]
mov	[esp+7Ch+Time],	eax
call	purple_normalize
mov	[esp+7Ch+var_78], eax
mov	eax, [edi+18h]
mov	[esp+7Ch+Time],	eax
call	purple_strequal
test	eax, eax
jz	loc_67CE2218
mov	eax, [ebp+4]
mov	[esp+7Ch+Time],	eax
call	purple_account_get_alias
mov	[esp+7Ch+var_48], eax
test	eax, eax
jnz	loc_67CE1F98
mov	eax, [esp+7Ch+var_34]
mov	[esp+7Ch+Time],	eax
call	purple_connection_get_display_name
test	eax, eax
jz	loc_67CE1F94
mov	[esp+7Ch+var_48], eax
jmp	loc_67CE1F98
align 10h
mov	[esp+7Ch+var_3C], 0
jmp	short loc_67CE20E7
align 4
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Time],	eax
call	g_markup_escape_text
mov	[esp+7Ch+var_48], eax
mov	eax, [esp+7Ch+var_3C]
test	eax, eax
jz	loc_67CE22C8
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	ecx, [esp+7Ch+var_3C]
mov	[esp+7Ch+Time],	ecx
call	g_markup_escape_text
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_78], offset aSISIEnteredThe 
mov	[esp+7Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_74], edx
mov	ecx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_78], ecx
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	eax, [esp+7Ch+var_3C]
mov	[esp+7Ch+Time],	eax
call	g_free
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Time],	eax
call	g_free
mov	[esp+7Ch+Time],	0 
call	time
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], 4004h
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+Time],	ebp
call	purple_conversation_write
mov	[esp+7Ch+Time],	esi
call	g_free
jmp	loc_67CE2058
align 4
mov	[esp+7Ch+var_78], ebx
mov	edx, [esp+7Ch+var_34]
mov	eax, [edx+0Ch]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67CE1F94
mov	[esp+7Ch+Time],	eax
call	purple_buddy_get_contact_alias
mov	[esp+7Ch+var_48], eax
jmp	loc_67CE1F98
mov	[esp+7Ch+var_44], 0
			
mov	[esp+7Ch+var_78], offset loc_67CDE31C
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Time],	eax
call	g_list_sort
mov	edx, [esp+7Ch+var_30]
test	edx, edx
jz	short loc_67CE228C
mov	ecx, [esp+7Ch+var_30]
mov	edx, [ecx+14h]
test	edx, edx
jz	short loc_67CE228C
mov	ecx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+Time],	ebp
mov	[esp+7Ch+var_5C], eax
call	edx
mov	eax, [esp+7Ch+var_5C]
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE2385
mov	[esp+7Ch+arg_0], eax
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
align 10h
mov	[esp+7Ch+var_78], ebx
mov	[esp+7Ch+Time],	edi
call	purple_conv_chat_is_user_ignored
xor	edx, edx
test	eax, eax
setnz	dl
jmp	loc_67CE1FC9
mov	[esp+7Ch+var_78], offset aSEnteredTheRoo 
mov	[esp+7Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_67CE21D2
align 4
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CE2385
mov	[esp+7Ch+arg_8], offset	aChatNull_0 
			
mov	[esp+7Ch+arg_4], offset	aPurple_conv_53	
mov	[esp+7Ch+arg_0], 0
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE2385
mov	[esp+7Ch+arg_8], offset	aUsersNull 
jmp	short loc_67CE230F
align 10h
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE2385
mov	[esp+7Ch+arg_8], offset	aGcNull_0 
jmp	short loc_67CE230F
align 4
mov	ecx, [esp+7Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE2385
mov	[esp+7Ch+arg_8], offset	aPrpl_infoNull 
jmp	short loc_67CE230F
			
call	__stack_chk_fail
align 4
public purple_conv_chat_add_user
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], 0
mov	[esp+5Ch+var_30], edx
call	g_list_append
mov	esi, eax
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], 0
call	g_list_append
mov	ebx, eax
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], 0
call	g_list_append
mov	edi, eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	purple_conv_chat_add_users
mov	[esp+5Ch+var_5C], esi
call	g_list_free
mov	[esp+5Ch+var_5C], ebx
call	g_list_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE2434
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_find
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE247C
test	edx, edx
jz	short loc_67CE24AC
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE24CA
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+20h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_lookup
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_54 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE24CA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNameNull_1 
mov	[esp+2Ch+var_28], offset aPurple_conv_54 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE2498
			
call	__stack_chk_fail
align 10h
public purple_conv_chat_user_get_flags
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE2514
test	edx, edx
jz	short loc_67CE2534
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_cb_find
test	eax, eax
jz	short loc_67CE2554
mov	eax, [eax+10h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE2558
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE2502
mov	[esp+2Ch+var_24], offset aUserNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE2502
xor	eax, eax
jmp	short loc_67CE2502
call	__stack_chk_fail
align 10h
public purple_conv_chat_find_user
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE25A4
test	edx, edx
jz	short loc_67CE25C4
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_conv_chat_cb_find
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE25E4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aChatNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE2593
mov	[esp+2Ch+var_24], offset aUserNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE2593
call	__stack_chk_fail
align 4
public purple_conv_chat_user_set_flags
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE2694
test	ebx, ebx
jz	loc_67CE26C4
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	purple_conv_chat_cb_find
test	eax, eax
jz	short loc_67CE267E
mov	ebp, [eax+10h]
cmp	ebp, edi
jz	short loc_67CE267E
mov	[eax+10h], edi
mov	[esp+4Ch+var_4C], esi
call	purple_conv_chat_get_conversation
mov	esi, eax
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_get_ui_ops
test	eax, eax
jz	short loc_67CE265A
mov	eax, [eax+20h]
test	eax, eax
jz	short loc_67CE265A
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	eax
			
mov	[esp+4Ch+var_38], edi
mov	[esp+4Ch+var_3C], ebp
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aChatBuddyFlags 
mov	[esp+4Ch+var_4C], offset dword_67D7212C
call	purple_signal_emit
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE26DA
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE26DA
mov	[esp+4Ch+arg_8], offset	aChatNull_0 
mov	[esp+4Ch+arg_4], offset	aPurple_conv_57	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE26DA
mov	[esp+4Ch+arg_8], offset	aUserNull 
jmp	short loc_67CE26A8
			
call	__stack_chk_fail
align 10h
public purple_conv_chat_remove_users
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_48], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CE2984
mov	eax, [esp+6Ch+var_34]
test	eax, eax
jz	loc_67CE29B8
mov	[esp+6Ch+Time],	ebp
call	purple_conv_chat_get_conversation
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+Time],	eax
call	purple_conversation_get_gc
mov	[esp+6Ch+var_38], eax
test	eax, eax
jz	loc_67CE29D0
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+6Ch+var_40], eax
test	eax, eax
jz	loc_67CE29E8
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_conversation_get_ui_ops
mov	[esp+6Ch+var_30], eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_4C], edx
mov	edx, [esp+6Ch+var_4C]
mov	ebx, [edx]
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], ebx
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aChatBuddyLeavi 
mov	[esp+6Ch+Time],	offset dword_67D7212C
call	purple_signal_emit_return_1
mov	esi, eax
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	ebp
call	purple_conv_chat_is_user_ignored
or	esi, eax
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	ebp
call	purple_conv_chat_cb_find
mov	edi, eax
test	eax, eax
jz	short loc_67CE27E7
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+4]
mov	[esp+6Ch+Time],	eax
call	g_list_remove
mov	[ebp+4], eax
mov	eax, [edi]
mov	[esp+6Ch+var_68], eax
mov	eax, [ebp+20h]
mov	[esp+6Ch+Time],	eax
call	g_hash_table_remove
mov	[esp+6Ch+Time],	edi
call	purple_conv_chat_cb_destroy
test	esi, esi
jnz	loc_67CE2887
mov	edx, [esp+6Ch+var_40]
test	byte ptr [edx],	4
jz	loc_67CE2908
mov	eax, ebx
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+Time],	eax
call	g_markup_escape_text
mov	edi, eax
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jz	short loc_67CE2825
mov	edx, [esp+6Ch+var_48]
cmp	byte ptr [edx],	0
jnz	loc_67CE2930
mov	[esp+6Ch+var_68], offset aSLeftTheRoom_	
mov	[esp+6Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+6Ch+Time],	edi
call	g_free
mov	[esp+6Ch+Time],	0 
call	time
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], 4004h
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], 0
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Time],	eax
call	purple_conversation_write
mov	[esp+6Ch+Time],	esi
call	g_free
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_5C], edx
mov	[esp+6Ch+var_60], ebx
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aChatBuddyLeft	
mov	[esp+6Ch+Time],	offset dword_67D7212C
call	purple_signal_emit
mov	edx, [esp+6Ch+var_4C]
mov	edx, [edx+4]
mov	[esp+6Ch+var_4C], edx
test	edx, edx
jnz	loc_67CE276C
mov	eax, [esp+6Ch+var_30]
test	eax, eax
jz	loc_67CE2A00
mov	edx, [esp+6Ch+var_30]
mov	eax, [edx+1Ch]
test	eax, eax
jz	loc_67CE2A00
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE2A14
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+arg_4], edx
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+arg_0], edx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	[esp+6Ch+var_68], ebx
mov	edx, [esp+6Ch+var_38]
mov	eax, [edx+0Ch]
mov	[esp+6Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67CE27FC
mov	[esp+6Ch+Time],	eax
call	purple_buddy_get_contact_alias
jmp	loc_67CE27FE
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+Time],	edx
call	g_markup_escape_text
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_68], offset aSLeftTheRoomS_ 
mov	[esp+6Ch+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	eax
call	g_free
jmp	loc_67CE2847
align 4
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE2A14
mov	[esp+6Ch+arg_8], offset	aChatNull_0 
			
mov	[esp+6Ch+arg_4], offset	aPurple_conv_58	
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE2A14
mov	[esp+6Ch+arg_8], offset	aUsersNull 
jmp	short loc_67CE299C
align 10h
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE2A14
mov	[esp+6Ch+arg_8], offset	aGcNull_0 
jmp	short loc_67CE299C
align 4
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE2A14
mov	[esp+6Ch+arg_8], offset	aPrpl_infoNull 
jmp	short loc_67CE299C
align 10h
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE2A14
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_conv_chat_remove_user
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 0
call	g_list_append
mov	ebx, eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_conv_chat_remove_users
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE2A76
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_list_free
call	__stack_chk_fail
align 4
public purple_conv_chat_rename_user
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 105Ch
call	sub_67D2FA40
sub	esp, eax
mov	ebx, [esp+10h+arg_105C]
mov	edi, [esp+10h+arg_1060]
mov	esi, [esp+10h+arg_1064]
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_1038], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE2E0C
test	edi, edi
jz	loc_67CE2E30
test	esi, esi
jz	loc_67CE2E54
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_get_conversation
mov	ebp, eax
mov	[esp+10h+Time],	eax
call	purple_conversation_get_ui_ops
mov	[esp+10h+arg_20], eax
mov	[esp+10h+Time],	ebp
call	purple_conversation_get_gc
mov	[esp+10h+arg_1C], eax
test	eax, eax
jz	loc_67CE2E9C
mov	eax, [esp+10h+arg_1C]
mov	[esp+10h+Time],	eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+10h+arg_18], eax
test	eax, eax
jz	loc_67CE2E78
mov	[esp+10h+var_C], edi
mov	eax, [ebp+4]
mov	[esp+10h+Time],	eax
call	purple_normalize
mov	[esp+10h+var_C], eax
mov	eax, [ebx+18h]
mov	[esp+10h+Time],	eax
call	purple_strequal
test	eax, eax
jnz	loc_67CE2C98
mov	edx, [esp+10h+arg_18]
test	byte ptr [edx],	4
jz	loc_67CE2EC0
mov	[esp+10h+arg_24], esi
mov	[esp+10h+arg_28], 0
			
mov	[esp+10h+var_C], edi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_user_get_flags
mov	[esp+10h+var_8], eax
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+var_C], eax
mov	[esp+10h+Time],	esi
call	purple_conv_chat_cb_new
mov	edx, eax
mov	[esp+10h+var_C], esi
mov	eax, [ebp+4]
mov	[esp+10h+Time],	eax
mov	[esp+10h+arg_14], edx
call	purple_find_buddy
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+10h+arg_14]
mov	[edx+0Ch], eax
mov	[esp+10h+var_C], edx
mov	eax, [ebx+4]
mov	[esp+10h+Time],	eax
call	g_list_prepend
mov	[ebx+4], eax
mov	edx, [esp+10h+arg_14]
mov	eax, [edx]
mov	[esp+10h+Time],	eax
call	g_strdup
mov	edx, [esp+10h+arg_14]
mov	[esp+10h+var_8], edx
mov	[esp+10h+var_C], eax
mov	eax, [ebx+20h]
mov	[esp+10h+Time],	eax
call	g_hash_table_replace
mov	eax, [esp+10h+arg_20]
test	eax, eax
jz	short loc_67CE2BF1
mov	edx, [esp+10h+arg_20]
mov	eax, [edx+18h]
test	eax, eax
jz	short loc_67CE2BF1
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+var_4], edx
mov	[esp+10h+var_8], esi
mov	[esp+10h+var_C], edi
mov	[esp+10h+Time],	ebp
call	eax
			
mov	[esp+10h+var_C], edi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_cb_find
mov	edx, eax
test	eax, eax
jz	short loc_67CE2C3A
mov	[esp+10h+var_C], eax
mov	eax, [ebx+4]
mov	[esp+10h+Time],	eax
mov	[esp+10h+arg_14], edx
call	g_list_remove
mov	[ebx+4], eax
mov	edx, [esp+10h+arg_14]
mov	eax, [edx]
mov	[esp+10h+var_C], eax
mov	eax, [ebx+20h]
mov	[esp+10h+Time],	eax
call	g_hash_table_remove
mov	edx, [esp+10h+arg_14]
mov	[esp+10h+Time],	edx
call	purple_conv_chat_cb_destroy
mov	[esp+10h+var_C], edi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
jz	short loc_67CE2CB8
mov	[esp+10h+var_C], edi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_unignore
mov	[esp+10h+var_C], esi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_ignore
mov	ecx, [esp+10h+arg_28]
test	ecx, ecx
jnz	short loc_67CE2CDC
mov	[esp+10h+Time],	offset aPurpleConversa 
call	purple_prefs_get_bool
test	eax, eax
jnz	short loc_67CE2CF8
			
mov	edx, [esp+10h+arg_1038]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE2F7C
add	esp, 105Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+10h+arg_18]
test	byte ptr [edx],	4
jz	loc_67CE2EF4
mov	[esp+10h+arg_24], esi
mov	[esp+10h+arg_28], 1
jmp	loc_67CE2B4E
align 4
mov	[esp+10h+var_C], esi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
jz	short loc_67CE2C62
mov	[esp+10h+var_C], esi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_unignore
mov	ecx, [esp+10h+arg_28]
test	ecx, ecx
jz	short loc_67CE2C6A
mov	[esp+10h+var_C], esi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_set_nick
mov	[esp+10h+Time],	offset aPurpleConversa 
call	purple_prefs_get_bool
test	eax, eax
jz	short loc_67CE2C7A
mov	[esp+10h+var_C], esi
mov	[esp+10h+Time],	ebx
call	purple_conv_chat_is_user_ignored
test	eax, eax
jnz	loc_67CE2C7A
mov	edx, [esp+10h+arg_28]
test	edx, edx
jnz	loc_67CE2DC0
mov	edx, [esp+10h+arg_18]
test	byte ptr [edx],	4
jz	loc_67CE2F14
			
mov	[esp+10h+var_C], 0FFFFFFFFh
mov	[esp+10h+Time],	edi
call	g_markup_escape_text
mov	edi, eax
mov	[esp+10h+var_C], 0FFFFFFFFh
mov	[esp+10h+Time],	esi
call	g_markup_escape_text
mov	esi, eax
mov	[esp+10h+var_C], offset	aSIsNowKnownAsS	
mov	[esp+10h+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+10h], esi
mov	[esp+10h+var_4], edi
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], 1000h
lea	ebx, [esp+10h+arg_38]
mov	[esp+10h+Time],	ebx
call	g_snprintf
mov	[esp+10h+Time],	edi
call	g_free
mov	[esp+10h+Time],	esi
call	g_free
mov	[esp+10h+Time],	0 
call	time
mov	[esp+10h], eax
mov	[esp+10h+var_4], 4004h
mov	[esp+10h+var_8], ebx
mov	[esp+10h+var_C], 0
mov	[esp+10h+Time],	ebp
call	purple_conversation_write
jmp	loc_67CE2C7A
align 10h
mov	[esp+10h+var_C], 0FFFFFFFFh
mov	[esp+10h+Time],	esi
call	g_markup_escape_text
mov	esi, eax
mov	[esp+10h+var_C], offset	aYouAreNowKnown	
mov	[esp+10h+Time],	offset aPidgin_3 
call	libintl_dgettext
mov	[esp+10h+var_4], esi
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], 1000h
lea	ebx, [esp+10h+arg_38]
mov	[esp+10h+Time],	ebx
call	g_snprintf
mov	[esp+10h+Time],	esi
call	g_free
jmp	short loc_67CE2D8D
mov	[esp+10h+var_8], offset	aChatNull_0 
mov	[esp+10h+var_C], offset	aPurple_conv_59	
mov	[esp+10h+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE2C7A
align 10h
mov	[esp+10h+var_8], offset	aOld_userNull 
mov	[esp+10h+var_C], offset	aPurple_conv_59	
mov	[esp+10h+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE2C7A
align 4
mov	[esp+10h+var_8], offset	aNew_userNull 
mov	[esp+10h+var_C], offset	aPurple_conv_59	
mov	[esp+10h+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE2C7A
align 4
mov	[esp+10h+var_8], offset	aPrpl_infoNull 
mov	[esp+10h+var_C], offset	aPurple_conv_59	
mov	[esp+10h+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE2C7A
align 4
mov	[esp+10h+var_8], offset	aGcNull_0 
mov	[esp+10h+var_C], offset	aPurple_conv_59	
mov	[esp+10h+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE2C7A
align 10h
mov	[esp+10h+var_C], esi
mov	edx, [esp+10h+arg_1C]
mov	eax, [edx+0Ch]
mov	[esp+10h+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67CE2B42
mov	[esp+10h+Time],	eax
call	purple_buddy_get_contact_alias
mov	[esp+10h+arg_24], eax
mov	[esp+10h+arg_28], 0
jmp	loc_67CE2B4E
mov	eax, [ebp+4]
mov	[esp+10h+Time],	eax
call	purple_account_get_alias
test	eax, eax
jz	short loc_67CE2F5F
mov	[esp+10h+arg_24], eax
mov	[esp+10h+arg_28], 1
jmp	loc_67CE2B4E
mov	[esp+10h+var_C], edi
mov	edx, [esp+10h+arg_1C]
mov	eax, [edx+0Ch]
mov	[esp+10h+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	short loc_67CE2F35
mov	[esp+10h+Time],	eax
call	purple_buddy_get_contact_alias
mov	edi, eax
mov	[esp+10h+var_C], esi
mov	edx, [esp+10h+arg_1C]
mov	eax, [edx+0Ch]
mov	[esp+10h+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67CE2D25
mov	[esp+10h+Time],	eax
call	purple_buddy_get_contact_alias
mov	esi, eax
jmp	loc_67CE2D25
mov	eax, [esp+10h+arg_1C]
mov	[esp+10h+Time],	eax
call	purple_connection_get_display_name
mov	[esp+10h+arg_24], esi
mov	[esp+10h+arg_28], 1
jmp	loc_67CE2B4E
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE2FB0
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE2FD0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aCbNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE2F9D
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_get_attribute
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE3018
test	edx, edx
jz	short loc_67CE3048
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE3066
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+14h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_lookup
align 4
mov	[esp+2Ch+var_24], offset aCbNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3066
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aKeyNull_1 
mov	[esp+2Ch+var_28], offset aPurple_conv_61 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE3034
			
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_get_attribute_keys
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_14], 0
test	eax, eax
jz	short loc_67CE30BC
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset sub_67CDE2DC
mov	eax, [eax+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE30DC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCbNull_0 
mov	[esp+2Ch+var_28], offset aPurple_conv_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE30AA
call	__stack_chk_fail
align 4
public purple_conv_chat_cb_set_attribute
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CE3184
test	esi, esi
jz	loc_67CE31B4
test	eax, eax
jz	loc_67CE31CC
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	ebp, eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_replace
mov	[esp+3Ch+var_3C], edi
call	purple_conv_chat_get_conversation
mov	esi, eax
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_get_ui_ops
test	eax, eax
jz	loc_67CE31E7
mov	edx, [eax+20h]
test	edx, edx
jz	loc_67CE31E7
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE31E2
mov	eax, [ebx]
mov	[esp+3Ch+arg_4], eax
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	edx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE31E2
mov	[esp+3Ch+arg_8], offset	aCbNull_0 
			
mov	[esp+3Ch+arg_4], offset	aPurple_conv_63	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE31E2
mov	[esp+3Ch+arg_8], offset	aKeyNull_1 
jmp	short loc_67CE3198
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE31E2
mov	[esp+3Ch+arg_8], offset	aValueNull_1 
jmp	short loc_67CE3198
			
call	__stack_chk_fail
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE31E2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
public purple_conv_chat_cb_set_attributes
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	edi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67CE32C0
test	ebx, ebx
jz	loc_67CE32F0
test	esi, esi
jnz	short loc_67CE3240
jmp	loc_67CE3306
align 4
test	esi, esi
jz	short loc_67CE3273
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	ebp, eax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	eax, [edi+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_replace
mov	ebx, [ebx+4]
mov	esi, [esi+4]
test	ebx, ebx
jnz	short loc_67CE323C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_conv_chat_get_conversation
mov	ebx, eax
mov	[esp+4Ch+var_4C], eax
call	purple_conversation_get_ui_ops
test	eax, eax
jz	loc_67CE331C
mov	eax, [eax+20h]
test	eax, eax
jz	loc_67CE331C
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE3330
mov	edx, [edi]
mov	[esp+4Ch+arg_4], edx
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE3330
mov	[esp+4Ch+arg_8], offset	aCbNull_0 
			
mov	[esp+4Ch+arg_4], offset	aPurple_conv_64	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3330
mov	[esp+4Ch+arg_8], offset	aKeysNull 
jmp	short loc_67CE32D4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE3330
mov	[esp+4Ch+arg_8], offset	aValuesNull 
jmp	short loc_67CE32D4
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3330
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_conversation_get_extended_menu
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_14], 0
test	eax, eax
jz	short loc_67CE338C
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], edx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aConversationEx 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE33AC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull 
mov	[esp+2Ch+var_28], offset aPurple_conv_65 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE337B
call	__stack_chk_fail
align 4
public purple_conversation_clear_message_history
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, [ebx+2Ch]
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CDE158
mov	[esp+2Ch+var_2C], esi
call	g_list_foreach
mov	[esp+2Ch+var_2C], esi
call	g_list_free
mov	dword ptr [ebx+2Ch], 0
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aClearedMessage 
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE341C
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_conversation_destroy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CE3634
mov	[esp+4Ch+var_4C], ebp
call	purple_request_close_with_handle
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_ui_ops
mov	ebx, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_gc
mov	esi, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_name
mov	edi, eax
test	esi, esi
jz	short loc_67CE349E
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_type
dec	eax
jz	loc_67CE3600
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_type
cmp	eax, 2
jz	loc_67CE35AC
			
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72124
mov	[esp+4Ch+var_4C], eax
call	g_list_remove
mov	ds:dword_67D72124, eax
mov	eax, [ebp+0]
cmp	eax, 1
jz	loc_67CE3658
cmp	eax, 2
jz	loc_67CE3784
			
mov	eax, [ebp+8]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+4]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_28], eax
mov	eax, [ebp+4]
mov	[esp+4Ch+var_24], eax
mov	eax, [ebp+0]
mov	[esp+4Ch+var_2C], eax
lea	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72128
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_remove
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aDeletingConver 
mov	[esp+4Ch+var_4C], offset dword_67D7212C
call	purple_signal_emit
mov	eax, [ebp+8]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebp+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebp+8], 0
mov	dword ptr [ebp+0Ch], 0
mov	eax, [ebp+0]
cmp	eax, 1
jz	loc_67CE3674
cmp	eax, 2
jz	loc_67CE36B8
			
mov	eax, [ebp+24h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_destroy
mov	dword ptr [ebp+24h], 0
test	ebx, ebx
jz	short loc_67CE3575
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CE3575
mov	[esp+4Ch+var_4C], ebp
call	eax
			
mov	dword ptr [ebp+20h], 0
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_close_logs
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_clear_message_history
mov	[esp+4Ch+var_4C], ebp
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE37CD
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_get_id
mov	edi, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_has_left
test	eax, eax
jz	loc_67CE37BC
mov	[esp+4Ch+var_4C], ebp
call	purple_conversation_get_chat_data
mov	[esp+4Ch+var_4C], eax
call	purple_conv_chat_has_left
test	eax, eax
jnz	loc_67CE349E
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	serv_got_chat_left
jmp	loc_67CE349E
align 10h
mov	[esp+4Ch+var_4C], offset aPurpleConver_0 
call	purple_prefs_get_bool
test	eax, eax
jnz	loc_67CE37A0
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+0CCh]
test	eax, eax
jz	loc_67CE349E
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	eax
jmp	loc_67CE349E
mov	[esp+4Ch+var_44], offset aConvNull 
mov	[esp+4Ch+var_48], offset aPurple_conv_66 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	loc_67CE3594
align 4
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D7211C
mov	[esp+4Ch+var_4C], eax
call	g_list_remove
mov	ds:dword_67D7211C, eax
jmp	loc_67CE34C9
align 4
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_4C], eax
call	purple_conv_im_stop_typing_timeout
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_4C], eax
call	purple_conv_im_stop_send_typed_timeout
mov	eax, [ebp+18h]
mov	eax, [eax+14h]
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_icon_unref
mov	eax, [ebp+18h]
mov	dword ptr [eax+14h], 0
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebp+18h], 0
jmp	loc_67CE3553
align 4
mov	eax, [ebp+18h]
mov	eax, [eax+20h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_destroy
mov	eax, [ebp+18h]
mov	dword ptr [eax+20h], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset purple_conv_chat_cb_destroy
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_list_foreach
mov	eax, [ebp+18h]
mov	eax, [eax+4]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset g_free
mov	eax, [ebp+18h]
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	g_list_foreach
mov	eax, [ebp+18h]
mov	eax, [eax+8]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [ebp+18h]
mov	dword ptr [eax+4], 0
mov	dword ptr [eax+8], 0
mov	eax, [eax+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebp+18h]
mov	dword ptr [eax+0Ch], 0
mov	eax, [eax+10h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebp+18h]
mov	dword ptr [eax+10h], 0
mov	eax, [eax+18h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	dword ptr [ebp+18h], 0
jmp	loc_67CE3553
align 4
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72120
mov	[esp+4Ch+var_4C], eax
call	g_list_remove
mov	ds:dword_67D72120, eax
jmp	loc_67CE34C9
align 10h
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	serv_send_typing
jmp	loc_67CE3614
align 4
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	serv_chat_leave
jmp	loc_67CE35D6
call	__stack_chk_fail
align 4
public purple_conversation_get_message_history
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+2Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE37F9
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_conversation_message_get_sender
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE382C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE384C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aMsg 
mov	[esp+2Ch+var_28], offset aPurple_conv_67 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE3819
call	__stack_chk_fail
align 4
public purple_conversation_message_get_message
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE3880
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE38A0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aMsg 
mov	[esp+2Ch+var_28], offset aPurple_conv_68 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE386E
call	__stack_chk_fail
align 4
public purple_conversation_message_get_flags
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE38D4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE38F4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aMsg 
mov	[esp+2Ch+var_28], offset aPurple_conv_69 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE38C2
call	__stack_chk_fail
align 4
public purple_conversation_message_get_timestamp
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE3928
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3948
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aMsg 
mov	[esp+2Ch+var_28], offset aPurple_conv_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE3916
call	__stack_chk_fail
align 10h
public purple_conversation_do_command
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CE397B
cmp	byte ptr [edi],	0
jnz	short loc_67CE39EC
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_30], edx
call	g_markup_escape_text
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_24], 0
test	esi, esi
jz	short loc_67CE39FA
			
test	ebx, ebx
jz	short loc_67CE39A7
mov	edi, ebx
mov	[esp+4Ch+var_40], esi 
mov	[esp+4Ch+var_44], edi 
mov	[esp+4Ch+var_48], ebp 
mov	[esp+4Ch+var_4C], edx 
call	purple_cmd_do_command
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_free
xor	eax, eax
test	esi, esi
setz	al
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3A00
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	ebx, ebx
mov	[esp+4Ch+var_24], 0
test	esi, esi
jnz	short loc_67CE39A1
lea	esi, [esp+4Ch+var_24]
jmp	short loc_67CE39A1
call	__stack_chk_fail
align 4
public purple_conversations_get_handle
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7212C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE3A2B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_conversations_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset sub_67CDE11C
mov	[esp+6Ch+var_68], offset sub_67CDE1AC
mov	[esp+6Ch+var_6C], offset loc_67CDE208
call	g_hash_table_new_full
mov	ds:dword_67D72128, eax
mov	[esp+6Ch+var_6C], offset aPurpleConver_1 
call	purple_prefs_add_none
mov	[esp+6Ch+var_6C], offset aPurpleConver_2 
call	purple_prefs_add_none
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], offset aPurpleConversa 
call	purple_prefs_add_bool
mov	[esp+6Ch+var_6C], offset aPurpleConver_3 
call	purple_prefs_add_none
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], offset aPurpleConver_0 
call	purple_prefs_add_bool
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
mov	[esp+6Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aWritingImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aWroteImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 4
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aSentAttention	
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 4
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aGotAttention 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aSendingImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aSentImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new_outgoing
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
mov	[esp+6Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aReceivingImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aReceivedImMsg	
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT
mov	[esp+6Ch+var_68], offset aBlockedImMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
mov	[esp+6Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aWritingChatMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aWroteChatMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aSendingChatMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aSentChatMsg 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new_outgoing
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
mov	[esp+6Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aReceivingChatM 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aReceivedChatMs 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aConversationCr 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_UINT
mov	[esp+6Ch+var_68], offset aConversationUp 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aDeletingConver 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+var_68], offset aBuddyTyping 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+var_68], offset aBuddyTyped 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+var_68], offset aBuddyTypingSto 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_UINT
mov	[esp+6Ch+var_68], offset aChatBuddyJoini 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 4
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_UINT_UINT
mov	[esp+6Ch+var_68], offset aChatBuddyJoine 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 8
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 4
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_UINT_UINT
mov	[esp+6Ch+var_68], offset aChatBuddyFlags 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 4
call	purple_value_new
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatBuddyLeavi 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatBuddyLeft	
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 14h
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aDeletingChatBu 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new_outgoing
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatInvitingUs 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatInvitedUse 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Fh
call	purple_value_new
mov	[esp+6Ch+var_6C], 0Dh
mov	[esp+6Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_6C], 7
call	purple_value_new
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], edi
mov	[esp+6Ch+var_54], esi
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], offset purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatInvited 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], offset aGhashtable 
mov	[esp+6Ch+var_6C], 11h
call	purple_value_new
mov	ebp, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 1
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_48], ebp
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 5
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatInviteBloc 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aChatJoined 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Fh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatJoinFailed 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aChatLeft 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+6Ch+var_6C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 3
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+6Ch+var_68], offset aChatTopicChang 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 1
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER
mov	[esp+6Ch+var_68], offset aClearedMessage 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	[esp+6Ch+var_68], offset aGlist_0 
mov	[esp+6Ch+var_6C], 11h
call	purple_value_new
mov	ebx, eax
mov	[esp+6Ch+var_68], 8
mov	[esp+6Ch+var_6C], 1
call	purple_value_new
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], 2
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+6Ch+var_68], offset aConversationEx 
mov	[esp+6Ch+var_6C], offset dword_67D7212C
call	purple_signal_register
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE4B27
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public purple_conversations_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72124
test	eax, eax
jz	short loc_67CE4B57
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_destroy
mov	eax, ds:dword_67D72124
test	eax, eax
jnz	short loc_67CE4B44
mov	eax, ds:dword_67D72128
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_2C], offset dword_67D7212C
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE4B80
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ecx
call	g_build_filename
mov	ebx, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_rename
test	eax, eax
jnz	short loc_67CE4BE0
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	eax, 1
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE4C1B
add	esp, 34h
pop	ebx
pop	esi
retn
align 10h
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aErrorRenamingS 
mov	[esp+3Ch+var_3C], offset aCore 
call	purple_debug_error
mov	[esp+3Ch+var_3C], ebx
call	g_free
xor	eax, eax
jmp	short loc_67CE4BCD
call	__stack_chk_fail
public purple_core_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE4C7C
mov	eax, ds:dword_67D72130
test	eax, eax
jz	short loc_67CE4C9C
mov	[esp+5Ch+var_54], offset aPurple_get_cor 
mov	[esp+5Ch+var_58], offset aPurple_core_in 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE4E60
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], offset aUiNull_0 
mov	[esp+5Ch+var_58], offset aPurple_core_in 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE4C61
call	wpurple_locale_dir
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aPidgin_4 
call	libintl_bindtextdomain
call	wpurple_init
call	g_type_init
mov	[esp+5Ch+var_5C], 8
call	g_malloc0
mov	esi, eax
mov	ds:dword_67D72130, eax
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	[esi], eax
mov	dword ptr [esi+4], 0
mov	ebx, ds:dword_67D72134
call	purple_signals_init
call	purple_util_init
mov	[esp+5Ch+var_58], offset aGhashtable_0 
mov	[esp+5Ch+var_5C], 11h
call	purple_value_new
mov	[esp+5Ch+var_5C], 0Dh
mov	[esp+5Ch+var_30], eax
call	purple_value_new
mov	ebp, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+5Ch+var_5C], 4
call	purple_value_new
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_40], edx
mov	[esp+5Ch+var_44], ebp
mov	[esp+5Ch+var_48], edi
mov	[esp+5Ch+var_4C], 3
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset purple_marshal_BOOLEAN__POINTER_POINTER_POINTER
mov	[esp+5Ch+var_58], offset aUriHandler 
mov	[esp+5Ch+var_5C], esi
call	purple_signal_register
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID
mov	[esp+5Ch+var_58], offset aQuitting 
mov	[esp+5Ch+var_5C], esi
call	purple_signal_register
call	purple_prefs_init
call	purple_debug_init
test	ebx, ebx
jz	short loc_67CE4DAA
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CE4DA1
call	eax
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CE4DAA
call	eax
			
call	purple_ciphers_init
call	purple_cmds_init
call	purple_plugins_init
mov	[esp+5Ch+var_5C], offset aDll 
call	purple_plugins_probe
call	purple_theme_manager_init
call	purple_imgstore_init
call	purple_status_init
call	purple_buddy_icons_init
call	purple_connections_init
call	purple_accounts_init
call	purple_savedstatuses_init
call	purple_notify_init
call	purple_certificate_init
call	purple_conversations_init
call	purple_blist_init
call	purple_log_init
call	purple_network_init
call	purple_privacy_init
call	purple_pounces_init
call	purple_proxy_init
call	purple_dnsquery_init
call	purple_sound_init
call	purple_ssl_init
call	purple_stun_init
call	purple_xfers_init
call	purple_idle_init
call	purple_smileys_init
mov	[esp+5Ch+var_5C], 0FFFFFFFFh 
call	purple_network_get_my_ip
test	ebx, ebx
jz	short loc_67CE4E51
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CE4E51
call	eax
			
call	purple_theme_manager_refresh
mov	eax, 1
jmp	loc_67CE4C61
call	__stack_chk_fail
align 4
public purple_core_quit
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72130
test	ebx, ebx
jz	loc_67CE4FA0
mov	[esp+2Ch+var_28], offset aQuitting 
mov	[esp+2Ch+var_2C], ebx
call	purple_signal_emit
call	purple_connections_disconnect_all
call	purple_certificate_uninit
call	purple_ssl_uninit
mov	[esp+2Ch+var_28], offset aUnloadingNorma 
mov	[esp+2Ch+var_2C], offset aMain 
call	purple_debug_info
mov	[esp+2Ch+var_2C], 0
call	purple_plugins_unload
call	purple_smileys_uninit
call	purple_idle_uninit
call	purple_pounces_uninit
call	purple_blist_uninit
call	purple_ciphers_uninit
call	purple_notify_uninit
call	purple_conversations_uninit
call	purple_connections_uninit
call	purple_buddy_icons_uninit
call	purple_savedstatuses_uninit
call	purple_status_uninit
call	purple_accounts_uninit
call	purple_sound_uninit
call	purple_theme_manager_uninit
call	purple_xfers_uninit
call	purple_proxy_uninit
call	purple_dnsquery_uninit
call	purple_imgstore_uninit
call	purple_network_uninit
mov	[esp+2Ch+var_28], offset aUnloadingAllPl 
mov	[esp+2Ch+var_2C], offset aMain 
call	purple_debug_info
call	purple_plugins_destroy_all
mov	eax, ds:dword_67D72134
test	eax, eax
jz	short loc_67CE4F4E
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CE4F4E
call	eax
			
call	purple_prefs_uninit
call	purple_plugins_uninit
call	purple_cmds_uninit
call	purple_util_uninit
call	purple_log_uninit
call	purple_signals_uninit
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
call	wpurple_cleanup
mov	ds:dword_67D72130, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE4FBE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aCoreNull 
mov	[esp+2Ch+var_28], offset aPurple_core_qu 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE4F8D
call	__stack_chk_fail
align 4
public purple_core_quit_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_core_quit
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE4FE9
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_core_get_version
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset a2_10_11 
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5013
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_core_get_ui
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72130
test	eax, eax
jz	short loc_67CE5044
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5064
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aCoreNull 
mov	[esp+2Ch+var_28], offset aPurple_core_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE5031
call	__stack_chk_fail
align 4
public purple_get_core
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72130
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE508F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_core_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72134, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE50BB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_core_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72134
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE50E3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_core_ensure_single_instance
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5108
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_core_migrate
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
call	purple_user_dir
mov	[esp+15Ch+var_13C], eax
call	purple_home_dir
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	offset a_gaim_0	
mov	[esp+15Ch+File], eax
call	g_strconcat
mov	[esp+15Ch+var_140], eax
mov	[esp+15Ch+ElementSize],	10h
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	loc_67CE54D0
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	offset aMigrating 
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_strconcat
mov	[esp+15Ch+var_130], eax
mov	[esp+15Ch+ElementSize],	10h
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CE51BE
mov	[esp+15Ch+ElementSize],	10h
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	loc_67CE54C4
mov	[esp+15Ch+ElementSize],	4
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jnz	short loc_67CE51F1
mov	[esp+15Ch+ElementSize],	1C0h
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_mkdir
inc	eax
jz	loc_67CE56C8
mov	[esp+15Ch+ElementSize],	offset aW 
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_fopen
test	eax, eax
jz	loc_67CE5566
mov	[esp+15Ch+File], eax 
call	fclose
mov	[esp+15Ch+var_124], 0
lea	edx, [esp+15Ch+var_124]
mov	[esp+15Ch+Count], edx
mov	[esp+15Ch+ElementSize],	0
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_dir_open_utf8
mov	[esp+15Ch+var_134], eax
test	eax, eax
jz	loc_67CE5680
lea	edi, [esp+15Ch+DstBuf]
mov	eax, [esp+15Ch+var_134]
mov	[esp+15Ch+File], eax
call	g_dir_read_name_utf8
mov	ebp, eax
test	eax, eax
jz	loc_67CE5754
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	ebp
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_build_filename
mov	esi, eax
mov	[esp+15Ch+ElementSize],	4
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	loc_67CE5388
mov	[esp+15Ch+ElementSize],	offset aIcons_1	
mov	[esp+15Ch+File], ebp
call	purple_strequal
test	eax, eax
jz	loc_67CE5520
mov	[esp+15Ch+var_124], 0
lea	edx, [esp+15Ch+var_124]
mov	[esp+15Ch+Count], edx
mov	[esp+15Ch+ElementSize],	0
mov	[esp+15Ch+File], esi
call	g_dir_open_utf8
mov	ebp, eax
test	eax, eax
jz	loc_67CE5830
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	offset aIcons_1	
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_build_filename
mov	[esp+15Ch+var_138], eax
mov	[esp+15Ch+ElementSize],	4
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	loc_67CE5634
mov	[esp+15Ch+var_144], esi
jmp	short loc_67CE535F
align 4
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	esi
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+File], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+15Ch+ElementSize],	4
mov	[esp+15Ch+File], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CE5357
mov	ecx, [esp+15Ch+var_138]
mov	edx, esi
mov	eax, ebx
call	sub_67CE4B88
test	eax, eax
jz	loc_67CE560C
mov	[esp+15Ch+File], ebx
call	g_free
mov	[esp+15Ch+File], ebp
call	g_dir_read_name_utf8
mov	esi, eax
test	eax, eax
jnz	short loc_67CE5314
mov	esi, [esp+15Ch+var_144]
mov	[esp+15Ch+File], ebp
call	g_dir_close
			
mov	[esp+15Ch+File], esi
call	g_free
jmp	loc_67CE5249
align 4
mov	[esp+15Ch+ElementSize],	1
mov	[esp+15Ch+File], esi
call	g_file_test_utf8
test	eax, eax
jz	loc_67CE5500
mov	[esp+15Ch+ElementSize],	offset aRb_0 
mov	[esp+15Ch+File], esi
call	g_fopen
mov	ebx, eax
test	eax, eax
jz	loc_67CE5800
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	ebp
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+File], eax
call	g_build_filename
mov	[esp+15Ch+var_144], eax
mov	[esp+15Ch+ElementSize],	offset aWb_2 
mov	[esp+15Ch+File], eax
call	g_fopen
mov	ebp, eax
test	eax, eax
jz	loc_67CE5874
			
test	byte ptr [ebx+0Ch], 10h
jnz	loc_67CE55B4
mov	[esp+15Ch+var_150], ebx	
mov	[esp+15Ch+Count], 100h 
mov	[esp+15Ch+ElementSize],	1 
mov	[esp+15Ch+File], edi 
call	fread
cmp	eax, 100h
jz	short loc_67CE5427
test	byte ptr [ebx+0Ch], 10h
jz	loc_67CE55E8
mov	[esp+15Ch+var_150], ebp	
mov	[esp+15Ch+Count], 1 
mov	[esp+15Ch+ElementSize],	eax 
mov	[esp+15Ch+File], edi 
call	fwrite
test	eax, eax
jnz	short loc_67CE53F0
test	byte ptr [ebp+0Ch], 20h
jz	short loc_67CE53F0
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorWriting_0 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
mov	[esp+15Ch+File], ebp 
call	fclose
mov	[esp+15Ch+File], ebx 
call	fclose
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+File], eax
call	g_free
mov	[esp+15Ch+File], esi
call	g_free
mov	eax, [esp+15Ch+var_134]
mov	[esp+15Ch+File], eax
call	g_dir_close
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_free
xor	eax, eax
jmp	short loc_67CE54E1
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, 1
			
mov	edx, [esp+15Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE58C6
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+15Ch+Count], esi
mov	[esp+15Ch+ElementSize],	offset aNotARegularFil 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_warning
jmp	loc_67CE5379
align 10h
mov	[esp+15Ch+ElementSize],	offset aPlugins	
mov	[esp+15Ch+File], ebp
call	purple_strequal
test	eax, eax
jnz	loc_67CE5379
mov	ecx, [esp+15Ch+var_13C]
mov	edx, ebp
mov	eax, esi
call	sub_67CE4B88
test	eax, eax
jnz	loc_67CE5379
lea	esi, [esi+0]
			
mov	[esp+15Ch+File], esi
call	g_free
mov	eax, [esp+15Ch+var_134]
mov	[esp+15Ch+File], eax
call	g_dir_close
jmp	short loc_67CE5595
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorOpeningFi 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
			
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_free
xor	eax, eax
jmp	loc_67CE54E1
mov	[esp+15Ch+File], ebp 
call	fclose
test	eax, eax
jnz	loc_67CE5720
mov	[esp+15Ch+File], ebx 
call	fclose
test	eax, eax
jnz	loc_67CE56F0
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+File], eax
call	g_free
jmp	loc_67CE5379
align 4
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Count], esi
mov	[esp+15Ch+ElementSize],	offset aErrorReading_0 
jmp	loc_67CE546C
mov	esi, [esp+15Ch+var_144]
mov	[esp+15Ch+File], ebx
call	g_free
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+File], eax
call	g_free
mov	[esp+15Ch+File], ebp
call	g_dir_close
jmp	loc_67CE5550
align 4
mov	[esp+15Ch+ElementSize],	1C0h
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+File], eax
call	g_mkdir
inc	eax
jnz	loc_67CE530B
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_138]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorCreatingD 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
jmp	short loc_67CE5618
mov	eax, [esp+15Ch+var_124]
test	eax, eax
jz	loc_67CE57F6
mov	eax, [eax+8]
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorOpeningDi 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
mov	eax, [esp+15Ch+var_124]
test	eax, eax
jz	loc_67CE5595
mov	[esp+15Ch+File], eax
call	g_error_free
jmp	loc_67CE5595
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_13C]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorCreatingD 
jmp	loc_67CE5589
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Count], esi
mov	[esp+15Ch+ElementSize],	offset aErrorClosingSS 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_warning
jmp	loc_67CE55D4
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorWriting_1 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
jmp	loc_67CE55C4
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_unlink
test	eax, eax
jnz	short loc_67CE57B4
mov	[esp+15Ch+Count], 0
mov	[esp+15Ch+ElementSize],	offset aIcons_1	
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+15Ch+File], eax
call	_purple_buddy_icon_set_old_icons_dir
mov	[esp+15Ch+File], ebx
call	g_free
mov	eax, [esp+15Ch+var_140]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_free
mov	eax, 1
jmp	loc_67CE54E1
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorUnlinking 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+File], eax
call	g_free
xor	eax, eax
jmp	loc_67CE54E1
mov	eax, offset aUnknownError_0 
jmp	loc_67CE568F
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Count], esi
mov	[esp+15Ch+ElementSize],	offset aErrorOpening_0 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
jmp	loc_67CE5550
mov	eax, [esp+15Ch+var_124]
test	eax, eax
jz	loc_67CE58BC
mov	eax, [eax+8]
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Count], esi
mov	[esp+15Ch+ElementSize],	offset aErrorOpeningDi 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
mov	eax, [esp+15Ch+var_124]
test	eax, eax
jz	loc_67CE5550
mov	[esp+15Ch+File], eax
call	g_error_free
jmp	loc_67CE5550
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+File], eax
call	wpurple_strerror
mov	[esp+15Ch+var_150], eax
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+Count], eax
mov	[esp+15Ch+ElementSize],	offset aErrorOpeningFi 
mov	[esp+15Ch+File], offset	aCore 
call	purple_debug_error
mov	[esp+15Ch+File], ebx 
call	fclose
mov	eax, [esp+15Ch+var_144]
mov	[esp+15Ch+File], eax
call	g_free
jmp	loc_67CE5550
mov	eax, offset aUnknownError_0 
jmp	loc_67CE583F
call	__stack_chk_fail
align 4
public purple_core_get_ui_info
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72134
test	eax, eax
jz	short loc_67CE58FC
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CE58FC
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE590E
add	esp, 1Ch
jmp	eax
align 4
			
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE590E
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	ebp, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE59C4
test	ecx, ecx
jz	loc_67CE5A54
mov	edi, edx
mov	ebx, ds:dword_67D72138
mov	eax, ds:dword_67D7213C
test	eax, eax
jnz	short loc_67CE5973
test	ebx, ebx
jz	short loc_67CE59AA
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CE59AA
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CE5973
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	esi
mov	[esp+4Ch+var_30], ecx
call	eax
test	eax, eax
mov	ecx, [esp+4Ch+var_30]
jz	short loc_67CE59AA
			
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	ecx
call	g_strdup_vprintf
mov	ebp, eax
mov	edx, ds:dword_67D7213C
test	edx, edx
jnz	short loc_67CE59E4
test	ebx, ebx
jz	short loc_67CE59A2
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CE59A2
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	esi
call	eax
			
mov	[esp+4Ch+Time],	ebp
call	g_free
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE5A96
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aLevelPurple_de 
mov	[esp+4Ch+var_48], offset aPurple_debug_v 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67CE59AA
align 4
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_24], eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+Time],	eax 
call	localtime
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aHMS 
call	purple_utf8_strftime
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aS 
call	g_strdup_printf
test	edi, edi
jz	short loc_67CE5A78
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aSSS 
mov	[esp+4Ch+var_30], eax
call	g_print
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Time],	eax
call	g_free
jmp	loc_67CE598B
align 4
mov	[esp+4Ch+var_44], offset aFormatNull 
mov	[esp+4Ch+var_48], offset aPurple_debug_v 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE59AA
align 4
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	offset aSS 
mov	[esp+4Ch+var_30], eax
call	g_print
mov	eax, [esp+4Ch+var_30]
jmp	short loc_67CE5A44
call	__stack_chk_fail
align 4
public purple_debug
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jnz	short loc_67CE5AEC
mov	[esp+2Ch+var_24], offset aLevelPurple_de 
mov	[esp+2Ch+var_28], offset aPurple_debug 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5B1E
add	esp, 28h
pop	ebx
retn
align 4
test	ecx, ecx
jz	short loc_67CE5B00
lea	ebx, [esp+2Ch+arg_C]
mov	[esp+2Ch+var_2C], ebx
call	sub_67CE5914
jmp	short loc_67CE5AD8
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5AD8
call	__stack_chk_fail
align 4
public purple_debug_misc
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67CE5B60
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
mov	eax, 1
call	sub_67CE5914
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5B7E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug_m 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5B4F
call	__stack_chk_fail
align 4
public purple_debug_info
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67CE5BC0
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
mov	eax, 2
call	sub_67CE5914
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5BDE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5BAF
call	__stack_chk_fail
align 4
public purple_debug_warning
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67CE5C20
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
mov	eax, 3
call	sub_67CE5914
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5C3E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug_w 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5C0F
call	__stack_chk_fail
align 4
public purple_debug_error
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67CE5C80
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
mov	eax, 4
call	sub_67CE5914
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5C9E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug_e 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5C6F
call	__stack_chk_fail
align 4
public purple_debug_fatal
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67CE5CE0
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
mov	eax, 5
call	sub_67CE5914
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5CFE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFormatNull 
mov	[esp+2Ch+var_28], offset aPurple_debug_f 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE5CCF
call	__stack_chk_fail
align 4
public purple_debug_set_enabled
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D7213C, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5D2B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_is_enabled
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7213C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5D53
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72138, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5D7F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_is_verbose
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72140
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5DA7
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_set_verbose
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72140, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5DD3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_is_unsafe
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72144
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5DFB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_set_unsafe
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72144, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5E27
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72138
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5E4F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_debug_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurple_unsafe_ 
call	g_getenv_utf8
test	eax, eax
jz	short loc_67CE5E7C
mov	ds:dword_67D72144, 1
mov	[esp+2Ch+var_2C], offset aPurple_verbose 
call	g_getenv_utf8
test	eax, eax
jz	short loc_67CE5E96
mov	ds:dword_67D72140, 1
mov	[esp+2Ch+var_2C], offset aPurpleDebug 
call	purple_prefs_add_none
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], offset aPurpleDebugTim 
call	purple_prefs_add_bool
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE5EC6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx]
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_strdup
mov	ebp, eax
mov	dword ptr [esp+5Ch+hostshort], eax 
call	wpurple_gethostbyname
mov	edx, eax
test	eax, eax
jz	loc_67CE5FB4
lea	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_40], eax
mov	ecx, 10h
xor	eax, eax
mov	edi, [esp+5Ch+var_40]
rep stosb
lea	eax, [esp+5Ch+var_2C]
movsx	ecx, word ptr [edx+0Ah]
mov	esi, [edx+0Ch]
mov	esi, [esi]
mov	edi, eax
rep movsb
mov	eax, [edx+8]
mov	[esp+5Ch+var_30], ax
movzx	eax, word ptr [ebx+4]
mov	dword ptr [esp+5Ch+hostshort], eax 
call	htons
push	edx
mov	[esp+5Ch+var_2E], ax
mov	[esp+5Ch+var_58], 10h
mov	eax, [ebx+1Ch]
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_slist_append
mov	[ebx+1Ch], eax
mov	[esp+5Ch+var_58], 10h
lea	edx, [esp+5Ch+var_30]
mov	dword ptr [esp+5Ch+hostshort], edx
call	g_memdup
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+1Ch]
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_slist_append
mov	[ebx+1Ch], eax
mov	dword ptr [esp+5Ch+hostshort], ebp
call	g_free
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67CE6490
mov	dword ptr [esp+5Ch+hostshort], 0
call	purple_timeout_add
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE5FE6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	WSAGetLastError
mov	edi, eax
mov	esi, [ebx]
mov	[esp+5Ch+var_58], offset aErrorResolving 
mov	dword ptr [esp+5Ch+hostshort], offset aPidgin_5	
call	libintl_dgettext
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_strdup_printf
mov	[ebx+20h], eax
jmp	short loc_67CE5F7C
call	__stack_chk_fail
align 4
public purple_dnsquery_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72148
test	eax, eax
jz	short loc_67CE6014
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CE6014
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	ecx, [ebx+18h]
test	ecx, ecx
jz	short loc_67CE6038
mov	dword ptr [ebx+8], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE60B2
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_67CE6073
nop
mov	edx, [eax]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+1Ch], eax
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	edx, [eax]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+1Ch], eax
test	eax, eax
jnz	short loc_67CE6040
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
test	eax, eax
jnz	short loc_67CE60A8
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE60B2
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	short loc_67CE6085
			
call	__stack_chk_fail
align 4
public purple_dnsquery_a_account
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	ecx, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE61B4
test	edi, edi
jz	loc_67CE617C
test	ebp, ebp
jz	loc_67CE61D4
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aPerformingDnsL 
mov	[esp+5Ch+var_5C], offset aDnsquery 
mov	[esp+5Ch+var_30], edx
mov	[esp+5Ch+var_34], ecx
call	purple_debug_info
mov	[esp+5Ch+var_5C], 24h
call	g_malloc0
mov	ebx, eax
mov	[esp+5Ch+var_5C], esi
call	g_strdup
mov	[ebx], eax
mov	[esp+5Ch+var_5C], eax
call	g_strchug
mov	[esp+5Ch+var_5C], eax
call	g_strchomp
mov	[ebx+4], edi
mov	[ebx+8], ebp
mov	ecx, [esp+5Ch+var_34]
mov	[ebx+0Ch], ecx
mov	edx, [esp+5Ch+var_30]
mov	[ebx+14h], edx
mov	eax, [ebx]
cmp	byte ptr [eax],	0
jz	loc_67CE61F4
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset loc_67CE64F0
mov	[esp+5Ch+var_5C], 0
call	purple_timeout_add
mov	[ebx+10h], eax
jmp	short loc_67CE619A
align 4
mov	[esp+5Ch+var_54], offset aPort0	
mov	[esp+5Ch+var_58], offset aPurple_dnsquer 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE6237
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_54], offset aHostnameNull 
mov	[esp+5Ch+var_58], offset aPurple_dnsquer 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE619A
mov	[esp+5Ch+var_54], offset aCallbackNull 
mov	[esp+5Ch+var_58], offset aPurple_dnsquer 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE619A
mov	[esp+5Ch+var_5C], ebx
call	purple_dnsquery_destroy
mov	[esp+5Ch+var_48], offset aPurple_dnsquer 
mov	[esp+5Ch+var_4C], 3A9h
mov	[esp+5Ch+var_50], offset aDnsquery_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_3 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
xor	ebx, ebx
jmp	loc_67CE619A
call	__stack_chk_fail
public purple_dnsquery_a
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 0
call	purple_dnsquery_a_account
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE6286
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
			
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esi]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aIpResolvedForS 
mov	[esp+3Ch+var_3C], offset aDnsquery 
mov	[esp+3Ch+var_20], eax
call	purple_debug_info
mov	edx, [esi+8]
test	edx, edx
mov	eax, [esp+3Ch+var_20]
jz	short loc_67CE6324
mov	[esp+3Ch+var_34], 0
mov	ecx, [esi+0Ch]
mov	[esp+3Ch+var_38], ecx
mov	[esp+3Ch+var_3C], eax
call	edx
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE632A
mov	[esp+3Ch+arg_0], esi
add	esp, 34h
pop	ebx
pop	esi
jmp	purple_dnsquery_destroy
mov	edx, [eax]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	g_slist_remove
mov	ebx, eax
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_slist_remove
test	eax, eax
jnz	short loc_67CE62FC
jmp	short loc_67CE62E2
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aS_0 
mov	[esp+2Ch+var_2C], offset aDnsquery 
call	purple_debug_error
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CE637B
mov	[esp+2Ch+var_24], esi
mov	edx, [ebx+0Ch]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], 0
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6395
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_dnsquery_destroy
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 434h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+43Ch+var_10], eax
xor	eax, eax
mov	[esp+43Ch+var_414], 0
lea	eax, [esp+43Ch+var_414]
mov	[esp+43Ch+var_424], eax
mov	[esp+43Ch+var_428], 1
mov	[esp+43Ch+var_42C], 0
mov	[esp+43Ch+var_430], 0
mov	[esp+43Ch+var_434], 0
mov	[esp+43Ch+var_438], ebx
mov	[esp+43Ch+var_43C], offset sub_67CE5ECC
call	g_thread_create_full
mov	[ebx+18h], eax
test	eax, eax
jz	short loc_67CE6414
mov	eax, [esp+43Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6488
add	esp, 434h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+43Ch+var_414]
test	eax, eax
jz	short loc_67CE6470
mov	esi, [eax+8]
test	esi, esi
jz	short loc_67CE6470
mov	[esp+43Ch+var_438], offset aThreadCreation 
mov	[esp+43Ch+var_43C], offset aPidgin_5 
call	libintl_dgettext
mov	[esp+43Ch+var_430], esi
mov	[esp+43Ch+var_434], eax
mov	[esp+43Ch+var_438], 400h
lea	esi, [esp+43Ch+var_410]
mov	[esp+43Ch+var_43C], esi
call	g_snprintf
mov	eax, [esp+43Ch+var_414]
mov	[esp+43Ch+var_43C], eax
call	g_error_free
mov	[esp+43Ch+var_438], esi
mov	[esp+43Ch+var_43C], ebx
call	sub_67CE6330
jmp	short loc_67CE63FB
align 10h
			
mov	[esp+43Ch+var_438], offset aUnknownReason 
mov	[esp+43Ch+var_43C], offset aPidgin_5 
call	libintl_dgettext
mov	esi, eax
jmp	short loc_67CE6423
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	dword ptr [eax+18h], 0
mov	edx, [eax+20h]
test	edx, edx
jz	short loc_67CE64D0
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	sub_67CE6330
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE64E8
add	esp, 2Ch
retn
align 10h
mov	edx, [eax+1Ch]
mov	dword ptr [eax+1Ch], 0
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	sub_67CE628C
jmp	short loc_67CE64BD
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+40h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	dword ptr [ebx+10h], 0
lea	eax, [esp+20h]
mov	[esp+4], eax
mov	eax, [ebx]
mov	[esp], eax
call	wpurple_inet_aton
test	eax, eax
jnz	short loc_67CE6588
mov	eax, [ebx+14h]
mov	[esp], eax
call	purple_proxy_get_setup
mov	[esp], eax
call	purple_proxy_info_get_type
cmp	eax, 5
jz	loc_67CE65F4
mov	eax, ds:dword_67D72148
test	eax, eax
jz	loc_67CE65E8
mov	eax, [eax]
test	eax, eax
jz	loc_67CE65E8
mov	dword ptr [esp+8], offset sub_67CE6330
mov	dword ptr [esp+4], offset sub_67CE628C
mov	[esp], ebx
call	eax
test	eax, eax
jz	short loc_67CE65E8
			
xor	eax, eax
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE6619
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	word ptr [esp+1Ch], 2
movzx	eax, word ptr [ebx+4]
mov	[esp], eax
call	htons
push	esi
mov	[esp+1Eh], ax
mov	dword ptr [esp+4], 10h
mov	dword ptr [esp], 0
call	g_slist_append
mov	esi, eax
mov	dword ptr [esp+4], 10h
lea	edx, [esp+1Ch]
mov	[esp], edx
call	g_memdup
mov	[esp+4], eax
mov	[esp], esi
call	g_slist_append
mov	[esp+4], eax
mov	[esp], ebx
call	sub_67CE628C
jmp	short loc_67CE656D
align 4
			
mov	eax, ebx
call	sub_67CE639C
jmp	loc_67CE656D
mov	dword ptr [esp+4], offset aAbortingDnsLoo 
mov	dword ptr [esp], offset	aPidgin_5 
call	libintl_dgettext
mov	[esp+4], eax
mov	[esp], ebx
call	sub_67CE6330
jmp	loc_67CE656D
call	__stack_chk_fail
align 10h
public purple_dnsquery_get_host
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE664C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE666C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aQuery_dataNull 
mov	[esp+2Ch+var_28], offset aPurple_dnsqu_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE6639
call	__stack_chk_fail
align 4
public purple_dnsquery_get_port
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE66A0
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE66C0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aQuery_dataNull 
mov	[esp+2Ch+var_28], offset aPurple_dnsqu_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE668E
call	__stack_chk_fail
align 4
public purple_dnsquery_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72148, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE66EF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_dnsquery_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72148
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE6717
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_dnsquery_init
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE673A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_dnsquery_uninit
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE675E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, ds:dword_67D7214C
test	edx, edx
jz	short loc_67CE67B8
mov	edx, [edx]
test	edx, edx
jz	short loc_67CE67B8
cmp	dword ptr [eax+0Ch], 21h
jz	short loc_67CE67B0
mov	ecx, offset loc_67CE6D80
mov	[esp+2Ch+var_24], offset sub_67CE6D14
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], eax
call	edx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE67BC
add	esp, 2Ch
retn
align 10h
mov	ecx, offset sub_67CE6E44
jmp	short loc_67CE678E
align 4
			
xor	eax, eax
jmp	short loc_67CE679F
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	loc_67CE6950
mov	eax, [esp+4Ch+var_30]
mov	edx, [eax+4]
test	edx, edx
jz	loc_67CE6950
mov	[esp+4Ch+var_48], offset sub_67CE6C28
mov	[esp+4Ch+var_4C], eax
call	g_list_sort
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	loc_67CE6950
mov	edx, eax
mov	eax, [eax]
mov	ecx, [eax+108h]
mov	ebx, edx
mov	[esp+4Ch+var_3C], edx
mov	[esp+4Ch+var_38], 1
lea	esi, [esi+0]
			
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx+4]
test	eax, eax
jz	short loc_67CE6849
mov	edx, [eax]
test	edx, edx
jz	short loc_67CE6849
cmp	[edx+108h], ecx
jz	loc_67CE6937
			
cmp	[esp+4Ch+var_38], 1
jle	loc_67CE6944
mov	ebp, ebx
xor	esi, esi
xor	edi, edi
mov	[esp+4Ch+var_34], ebx
mov	ebx, [esp+4Ch+var_38]
xchg	ax, ax
mov	[esp+4Ch+var_4C], 8
call	g_malloc
mov	edx, [ebp+0]
mov	[eax], edx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
inc	esi
mov	ebp, [ebp+4]
cmp	esi, ebx
jnz	short loc_67CE6864
mov	ebx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_list_reverse
mov	esi, eax
test	eax, eax
jz	short loc_67CE68F3
lea	esi, [esi+0]
mov	edx, esi
xor	ecx, ecx
mov	eax, [edx]
mov	edi, [eax]
add	ecx, [edi+104h]
mov	[eax+4], ecx
mov	edx, [edx+4]
test	edx, edx
jnz	short loc_67CE68A4
test	ecx, ecx
jnz	short loc_67CE6924
xor	eax, eax
mov	edi, [esi]
mov	edx, esi
cmp	[edi+4], eax
jge	short loc_67CE68D2
nop
mov	edx, [edx+4]
mov	edi, [edx]
cmp	[edi+4], eax
jl	short loc_67CE68C8
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
call	g_list_delete_link
mov	esi, eax
mov	eax, [edi]
mov	[ebx], eax
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	ebx, [ebx+4]
test	esi, esi
jnz	short loc_67CE68A0
mov	edx, [esp+4Ch+var_3C]
mov	edx, [edx+4]
mov	[esp+4Ch+var_3C], edx
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jz	short loc_67CE6950
mov	edx, [esp+4Ch+var_3C]
mov	eax, [edx]
mov	ecx, [eax+108h]
mov	ebx, edx
mov	[esp+4Ch+var_38], 1
jmp	loc_67CE682C
align 4
inc	ecx
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], 1
call	g_random_int_range
jmp	short loc_67CE68BE
inc	[esp+4Ch+var_38]
mov	[esp+4Ch+var_3C], eax
jmp	loc_67CE682C
mov	[esp+4Ch+var_3C], eax
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jnz	short loc_67CE6906
			
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE6968
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_24], 0
mov	ebx, [esi+0Ch]
mov	[esp+5Ch+var_48], 0
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+Count], 0
movzx	eax, bx
mov	[esp+5Ch+Str2],	eax
mov	eax, [esi+10h]
mov	[esp+5Ch+Str1],	eax
call	DnsQuery_UTF8
sub	esp, 18h
mov	edi, eax
test	eax, eax
jnz	short loc_67CE6A18
cmp	ebx, 21h
jz	loc_67CE6B18
cmp	ebx, 10h
jz	short loc_67CE6A40
			
mov	[esp+5Ch+Count], esi
mov	[esp+5Ch+Str2],	offset sub_67CE6FD0
mov	[esp+5Ch+Str1],	0
call	purple_timeout_add
mov	[esp+5Ch+Str1],	0
call	g_thread_exit
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE6C21
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+Str1],	eax
call	g_win32_error_message
mov	ebp, eax
cmp	ebx, 21h
jz	loc_67CE6BF0
cmp	ebx, 10h
jz	loc_67CE6BD4
			
mov	[esp+5Ch+Str1],	ebp
call	g_free
jmp	short loc_67CE69DA
align 10h
mov	ebx, [esp+5Ch+var_24]
test	ebx, ebx
jz	loc_67CE6C12
mov	[esp+5Ch+var_34], 0
jmp	short loc_67CE6A62
align 4
			
mov	ebx, [ebx]
test	ebx, ebx
jz	loc_67CE6AF4
			
cmp	word ptr [ebx+8], 10h
jnz	short loc_67CE6A58
mov	eax, [esi+10h]
mov	[esp+5Ch+Str2],	eax 
mov	eax, [ebx+4]
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_67CE6A58
mov	[esp+5Ch+Str1],	4
call	g_malloc0
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+Str1],	offset byte_67D39470
call	g_string_new
mov	edi, [ebx+18h]
test	edi, edi
jz	short loc_67CE6ABE
xor	edi, edi
lea	ebp, [ebx+18h]
nop
mov	edx, [ebp+edi*4+4]
mov	[esp+5Ch+Str2],	edx
mov	[esp+5Ch+Str1],	eax
call	g_string_append
inc	edi
cmp	edi, [ebx+18h]
jb	short loc_67CE6AA8
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Str1],	eax
call	g_string_free
mov	edx, [esp+5Ch+var_30]
mov	[edx], eax
mov	[esp+5Ch+Str2],	edx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str1],	eax
call	g_list_append
mov	[esp+5Ch+var_34], eax
mov	ebx, [ebx]
test	ebx, ebx
jnz	loc_67CE6A62
xchg	ax, ax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	eax
call	DnsRecordListFree
sub	esp, 8
mov	eax, [esp+5Ch+var_34]
mov	[esi+1Ch], eax
jmp	loc_67CE69DA
align 4
mov	ebx, [esp+5Ch+var_24]
test	ebx, ebx
jz	loc_67CE6C0C
xor	ebp, ebp
jmp	short loc_67CE6B2E
			
mov	ebx, [ebx]
test	ebx, ebx
jz	short loc_67CE6BAC
			
cmp	word ptr [ebx+8], 21h
jnz	short loc_67CE6B28
mov	eax, [esi+10h]
mov	[esp+5Ch+Str2],	eax 
mov	eax, [ebx+4]
mov	[esp+5Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_67CE6B28
mov	[esp+5Ch+Str1],	10Ch
call	g_malloc0
mov	edi, eax
mov	[esp+5Ch+Count], 0FFh 
mov	eax, [ebx+18h]
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Str1],	edi 
call	strncpy
mov	byte ptr [edi+0FFh], 0
movzx	eax, word ptr [ebx+1Ch]
mov	[edi+108h], eax
movzx	eax, word ptr [ebx+20h]
mov	[edi+100h], eax
movzx	eax, word ptr [ebx+1Eh]
mov	[edi+104h], eax
mov	[esp+5Ch+Str2],	edi
mov	[esp+5Ch+Str1],	ebp
call	g_list_prepend
mov	ebp, eax
mov	ebx, [ebx]
test	ebx, ebx
jnz	short loc_67CE6B2E
lea	esi, [esi+0]
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+Str2],	1
mov	[esp+5Ch+Str1],	eax
call	DnsRecordListFree
sub	esp, 8
mov	eax, ebp
call	sub_67CE67C4
mov	[esi+1Ch], eax
jmp	loc_67CE69DA
align 4
mov	[esp+5Ch+Count], edi
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aCouldnTLookUpT 
call	g_strdup_printf
mov	[esi+18h], eax
jmp	loc_67CE6A34
mov	[esp+5Ch+Count], edi
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Str1],	offset aCouldnTLookUpS 
call	g_strdup_printf
mov	[esi+18h], eax
jmp	loc_67CE6A34
xor	eax, eax
xor	ebp, ebp
jmp	short loc_67CE6BB0
xor	eax, eax
mov	[esp+5Ch+var_34], 0
jmp	loc_67CE6AF8
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [eax+108h]
cmp	[edx+108h], ecx
jz	short loc_67CE6C68
setnl	al
movzx	eax, al
lea	eax, [eax+eax-1]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE6C7A
add	esp, 1Ch
retn
align 4
mov	ecx, [eax+104h]
cmp	[edx+104h], ecx
jnz	short loc_67CE6C4D
xor	eax, eax
jmp	short loc_67CE6C57
call	__stack_chk_fail
align 10h
public purple_srv_txt_query_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7214C
test	eax, eax
jz	short loc_67CE6CA8
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CE6CA8
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+8]
test	eax, eax
jnz	short loc_67CE6CD0
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CE6CDF
mov	dword ptr [ebx], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6D0E
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	eax, [ebx+14h]
test	eax, eax
jnz	short loc_67CE6CB6
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6D0E
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aS_1 
mov	[esp+2Ch+var_2C], offset aDnssrv 
call	purple_debug_error
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CE6D61
mov	edx, [ebx+4]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], 0
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6D7A
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_srv_txt_query_destroy
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE6E10
mov	[esp+2Ch+var_2C], ebx
call	g_list_length
mov	[esp+2Ch+var_20], eax
mov	eax, [esi+10h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aTxtEntriesReso 
mov	[esp+2Ch+var_2C], offset aDnssrv 
call	purple_debug_info
mov	eax, [esi]
test	eax, eax
jz	short loc_67CE6DF0
mov	edx, [esi+4]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6E3E
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_srv_txt_query_destroy
align 10h
			
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CE6DF0
jmp	short loc_67CE6DD5
align 10h
mov	[esp+2Ch+var_24], offset aEntriesNull 
mov	[esp+2Ch+var_28], offset aPurple_txt_que 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE6E3E
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CE6F44
mov	edx, [ebp+0]
test	edx, edx
jz	loc_67CE6F64
call	sub_67CE67C4
mov	ebx, eax
mov	[esp+4Ch+var_4C], eax
call	g_list_length
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_40], eax
mov	eax, [ebp+10h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aSrvRecordsReso 
mov	[esp+4Ch+var_4C], offset aDnssrv 
call	purple_debug_info
mov	eax, [esp+4Ch+var_34]
shl	eax, 5
add	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_34]
lea	eax, [edx+eax*2]
shl	eax, 2
mov	[esp+4Ch+var_4C], eax
call	g_malloc
mov	[esp+4Ch+var_30], eax
test	ebx, ebx
jz	loc_67CE6F96
mov	edx, eax
mov	eax, ebx
lea	esi, [esi+0]
mov	esi, [eax]
mov	edi, edx
mov	ecx, 43h
rep movsd
mov	eax, [eax+4]
add	edx, 10Ch
test	eax, eax
jnz	short loc_67CE6ED4
mov	eax, [ebp+4]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	dword ptr [ebp+0]
mov	[esp+4Ch+var_4C], ebp
call	purple_srv_txt_query_destroy
lea	esi, [esi+0]
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CE6F10
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE6FCB
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aRecordsNull 
mov	[esp+4Ch+var_48], offset aPurple_srv_que 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE6F2C
align 4
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_38], eax
call	purple_srv_txt_query_destroy
mov	eax, [esp+4Ch+var_38]
mov	ebx, eax
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CE6F78
jmp	short loc_67CE6F2C
mov	eax, [ebp+4]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	dword ptr [ebp+0]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE6FCB
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_srv_txt_query_destroy
			
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_67CE7048
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aS_2 
mov	[esp+4Ch+var_4C], offset aDnssrv 
call	purple_debug_error
mov	eax, [ebx+0Ch]
cmp	eax, 21h
jz	loc_67CE70D0
cmp	eax, 10h
jz	short loc_67CE7070
			
mov	dword ptr [ebx+14h], 0
mov	dword ptr [ebx+8], 0
mov	[esp+4Ch+var_4C], ebx
call	purple_srv_txt_query_destroy
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE71E5
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebx+0Ch]
cmp	eax, 21h
jz	loc_67CE70F8
cmp	eax, 10h
jz	short loc_67CE7088
mov	[esp+4Ch+var_48], offset aUnknownQueryTy 
mov	[esp+4Ch+var_4C], offset aDnssrv 
call	purple_debug_error
jmp	short loc_67CE7016
align 10h
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CE7016
mov	edx, [ebx+4]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], 0
call	eax
jmp	short loc_67CE7016
mov	esi, [ebx+1Ch]
mov	[esp+4Ch+var_4C], esi
call	g_list_length
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aFoundDTxtEntri 
mov	[esp+4Ch+var_4C], offset aDnssrv 
call	purple_debug_info
mov	eax, [ebx]
test	eax, eax
jz	loc_67CE7016
mov	dword ptr [ebx+1Ch], 0
mov	edx, [ebx+4]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
call	eax
jmp	loc_67CE7016
align 10h
mov	eax, [ebx]
test	eax, eax
jz	loc_67CE7016
mov	edx, [ebx+4]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], 0
call	eax
jmp	loc_67CE7016
align 4
mov	ebp, [ebx+1Ch]
mov	[esp+4Ch+var_4C], ebp
call	g_list_length
mov	[esp+4Ch+var_34], eax
mov	esi, [ebx]
test	esi, esi
jz	loc_67CE71D8
test	eax, eax
jle	loc_67CE71D8
shl	eax, 5
add	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_34]
lea	eax, [edx+eax*2]
shl	eax, 2
mov	[esp+4Ch+var_4C], eax
call	g_malloc0
mov	[esp+4Ch+var_30], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_3C], eax
test	ebp, ebp
jz	short loc_67CE718D
mov	[esp+4Ch+var_38], ebx
xchg	ax, ax
mov	ebx, [ebp+0]
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebp
call	g_list_delete_link
mov	ebp, eax
mov	edx, [esp+4Ch+var_38]
mov	ecx, [edx]
test	ecx, ecx
jz	short loc_67CE717D
mov	edi, [esp+4Ch+var_3C]
mov	esi, ebx
mov	ecx, 43h
rep movsd
mov	eax, [esp+4Ch+var_3C]
add	eax, 10Ch
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_4C], ebx
call	g_free
test	ebp, ebp
jnz	short loc_67CE7148
mov	ebx, [esp+4Ch+var_38]
mov	dword ptr [ebx+1Ch], 0
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aFoundDSrvEntri 
mov	[esp+4Ch+var_4C], offset aDnssrv 
call	purple_debug_info
mov	eax, [ebx]
test	eax, eax
jz	loc_67CE7016
mov	edx, [ebx+4]
mov	[esp+4Ch+var_44], edx
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	eax
jmp	loc_67CE7016
align 4
			
mov	[esp+4Ch+var_30], 0
jmp	loc_67CE7136
call	__stack_chk_fail
align 4
public purple_srv_resolve_account
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	esi, [esp+5Ch+arg_8]
mov	ebx, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_30], edx
mov	edi, [esp+5Ch+arg_14]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	[esp+5Ch+var_24], 0
test	ebp, ebp
jz	loc_67CE7370
cmp	byte ptr [ebp+0], 0
jz	loc_67CE7370
test	esi, esi
jz	loc_67CE7370
cmp	byte ptr [esi],	0
jz	loc_67CE7370
test	ebx, ebx
jz	loc_67CE7370
cmp	byte ptr [ebx],	0
jz	loc_67CE7370
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_get_setup
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
cmp	eax, 5
jz	loc_67CE740C
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], offset a_S__S_S 
mov	[esp+5Ch+var_34], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aQueryingSrvRec 
mov	[esp+5Ch+var_5C], offset aDnssrv 
call	purple_debug_info
mov	ecx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], ecx
call	g_free
mov	[esp+5Ch+var_5C], 20h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+0Ch], 21h
mov	[eax+4], edi
mov	[eax+10h], ebp
mov	edx, [esp+5Ch+var_30]
mov	[eax], edx
call	sub_67CE6764
test	eax, eax
jz	short loc_67CE7304
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE7447
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], 1
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], offset sub_67CE6970
call	g_thread_create_full
mov	[ebx+14h], eax
test	eax, eax
jz	loc_67CE73D8
mov	edi, [ebx+18h]
test	edi, edi
jz	short loc_67CE72E8
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67CE6FD0
mov	[esp+5Ch+var_5C], 0
call	purple_timeout_add
mov	[ebx+8], eax
jmp	loc_67CE72E8
align 10h
			
mov	[esp+5Ch+var_58], offset aWrongArguments 
mov	[esp+5Ch+var_5C], offset aDnssrv 
call	purple_debug_error
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
mov	edx, [esp+5Ch+var_30]
call	edx
mov	[esp+5Ch+var_48], offset aPurple_srv_res 
mov	[esp+5Ch+var_4C], 2FAh
mov	[esp+5Ch+var_50], offset aDnssrv_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_4 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
xor	ebx, ebx
jmp	loc_67CE72E8
mov	eax, [esp+5Ch+var_24]
test	eax, eax
jz	short loc_67CE7440
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CE7440
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aSrvThreadCreat 
call	g_strdup_printf
mov	[ebx+18h], eax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	g_error_free
jmp	loc_67CE7347
align 4
mov	[esp+5Ch+var_58], offset aAbortingSrvLoo 
mov	[esp+5Ch+var_5C], offset aDnssrv 
call	purple_debug_info
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
mov	edx, [esp+5Ch+var_30]
call	edx
xor	ebx, ebx
jmp	loc_67CE72E8
			
mov	eax, offset byte_67D39470
jmp	short loc_67CE73E7
call	__stack_chk_fail
public purple_srv_resolve
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_28], eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 0
call	purple_srv_resolve_account
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE749E
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_txt_resolve_account
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_4]
mov	ebx, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	edi, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_24], 0
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_get_setup
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
cmp	eax, 5
jz	loc_67CE7614
mov	[esp+5Ch+var_5C], ebx
call	g_strdup
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], offset aS_S 
mov	[esp+5Ch+var_30], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aQueryingTxtRec 
mov	[esp+5Ch+var_5C], offset aDnssrv 
call	purple_debug_info
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_free
mov	[esp+5Ch+var_5C], 20h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+0Ch], 10h
mov	[eax+4], edi
mov	[eax+10h], ebp
mov	[eax], esi
call	sub_67CE6764
test	eax, eax
jz	short loc_67CE7578
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE763C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], 1
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], offset sub_67CE6970
call	g_thread_create_full
mov	[ebx+14h], eax
test	eax, eax
jz	short loc_67CE75DC
mov	ebp, [ebx+18h]
test	ebp, ebp
jz	short loc_67CE755B
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67CE6FD0
mov	[esp+5Ch+var_5C], 0
call	purple_timeout_add
mov	[ebx+8], eax
jmp	short loc_67CE755B
align 4
mov	eax, [esp+5Ch+var_24]
test	eax, eax
jz	short loc_67CE760C
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CE760C
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aTxtThreadCreat 
call	g_strdup_printf
mov	[ebx+18h], eax
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	g_error_free
jmp	short loc_67CE75B7
			
mov	eax, offset byte_67D39470
jmp	short loc_67CE75EB
align 4
mov	[esp+5Ch+var_58], offset aAbortingTxtLoo 
mov	[esp+5Ch+var_5C], offset aDnssrv 
call	purple_debug_info
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], 0
call	esi
xor	ebx, ebx
jmp	loc_67CE755B
call	__stack_chk_fail
align 4
public purple_txt_resolve
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 0
call	purple_txt_resolve_account
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE768E
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_txt_cancel
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE76BF
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_srv_txt_query_destroy
call	__stack_chk_fail
public purple_srv_cancel
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE76EF
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_srv_txt_query_destroy
call	__stack_chk_fail
public purple_txt_response_get_content
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7720
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7740
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aRespNull 
mov	[esp+2Ch+var_28], offset aPurple_txt_res 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE770D
call	__stack_chk_fail
align 4
public purple_txt_response_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE7784
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE77B1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aRespNull 
mov	[esp+2Ch+var_28], offset aPurple_txt_r_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE77B1
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_srv_txt_query_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D7214C, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE77DF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_srv_txt_query_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7214C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7807
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_srv_txt_query_get_query
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7838
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7858
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aQuery_dataNu_0 
mov	[esp+2Ch+var_28], offset aPurple_srv_txt 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE7826
call	__stack_chk_fail
align 10h
public purple_srv_txt_query_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE788C
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE78AC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aQuery_dataNu_0 
mov	[esp+2Ch+var_28], offset aPurple_srv_t_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE787A
call	__stack_chk_fail
align 4
public purple_eventloop_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72150, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE78DB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_eventloop_get_ui_ops
			
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72150
test	eax, eax
jz	short loc_67CE7908
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE792E
add	esp, 3Ch
retn
align 4
mov	[esp+3Ch+var_34], offset aEventloop_ui_o 
mov	[esp+3Ch+var_38], offset aPurple_eventlo 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CE78F7
call	__stack_chk_fail
align 4
public purple_input_get_error
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CE7980
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	eax
mov	esi, eax
call	_errno
mov	edx, [ebx]
mov	[eax], edx
mov	eax, esi
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE79B0
add	esp, 34h
pop	ebx
pop	esi
retn
mov	[esp+3Ch+var_14], 4
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_2C], eax 
mov	[esp+3Ch+var_30], ebx 
mov	[esp+3Ch+var_34], 1007h	
mov	[esp+3Ch+var_38], 0FFFFh 
mov	[esp+3Ch+var_3C], esi 
call	wpurple_getsockopt
mov	esi, eax
jmp	short loc_67CE796C
call	__stack_chk_fail
align 4
public purple_input_remove
			
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE79E9
mov	[esp+1Ch+arg_0], ebx
mov	eax, [eax+0Ch]
add	esp, 18h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 10h
public purple_input_add
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	ebp, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	edx, [esp+2Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7A3F
mov	[esp+2Ch+arg_C], ebp
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
mov	eax, [eax+8]
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
call	__stack_chk_fail
public purple_timeout_remove
			
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7A75
mov	[esp+1Ch+arg_0], ebx
mov	eax, [eax+4]
add	esp, 18h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 4
public purple_timeout_add_seconds
			
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edi, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	esi, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	edx, [eax+14h]
test	edx, edx
jz	short loc_67CE7AC8
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE7AF6
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
mov	[esp+1Ch+arg_0], edi
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	edx
align 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7AF6
mov	[esp+1Ch+arg_8], esi
mov	[esp+1Ch+arg_4], ebx
lea	edx, [edi+edi*4]
lea	edx, [edx+edx*4]
lea	edx, [edx+edx*4]
shl	edx, 3
mov	[esp+1Ch+arg_0], edx
mov	eax, [eax]
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	eax
			
call	__stack_chk_fail
align 4
public purple_timeout_add
			
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	ebx, [esp+1Ch+arg_0]
mov	esi, [esp+1Ch+arg_4]
mov	edi, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_eventloop_get_ui_ops
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7B40
mov	[esp+1Ch+arg_8], edi
mov	[esp+1Ch+arg_4], esi
mov	[esp+1Ch+arg_0], ebx
mov	eax, [eax]
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	eax
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CE7B72
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_byte_array_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE7BA1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE7C6C
mov	ebx, edx
call	purple_debug_is_verbose
test	eax, eax
jz	short loc_67CE7C28
xor	ecx, ecx
nop
cmp	ebx, ds:dword_67D39FC0[ecx*8]
jz	loc_67CE7C98
inc	ecx
cmp	ecx, 7
jnz	short loc_67CE7BD0
mov	edx, offset aInvalidState 
mov	eax, [esi+4Ch]
xor	ecx, ecx
lea	esi, [esi+0]
cmp	eax, ds:dword_67D39FC0[ecx*8]
jz	loc_67CE7C8C
inc	ecx
cmp	ecx, 7
jnz	short loc_67CE7BF0
mov	eax, offset aInvalidState 
mov	[esp+3Ch+var_2C], edx
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aChangingStatus 
mov	[esp+3Ch+var_3C], offset aXfer 
call	purple_debug_info
cmp	[esi+4Ch], ebx
jz	short loc_67CE7C3D 
mov	[esi+4Ch], ebx
mov	eax, [esi+4]
cmp	eax, 1
jz	short loc_67CE7C60
cmp	eax, 2
jz	short loc_67CE7C54
			
mov	eax, [esp+3Ch+var_10] 
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE7D8C
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
cmp	ebx, 6		
ja	short loc_67CE7C3D 
jmp	ds:off_67D39878[ebx*4] 
cmp	ebx, 6		
ja	short loc_67CE7C3D 
jmp	ds:off_67D39894[ebx*4] 
mov	[esp+3Ch+var_34], offset aXferNull 
mov	[esp+3Ch+var_38], offset aPurple_xfer_se 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE7C3D 
align 4
mov	eax, ds:off_67D39FC4[ecx*8]
jmp	loc_67CE7C08
mov	edx, ds:off_67D39FC4[ecx*8]
jmp	loc_67CE7BE8
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileSendCancel 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileSendComple 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileSendStart	
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileSendAccept 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileRecvCancel 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileRecvComple 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileRecvStart	
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
			
mov	[esp+3Ch+var_34], esi 
mov	[esp+3Ch+var_38], offset aFileRecvAccept 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_emit
jmp	loc_67CE7C3D	
call	__stack_chk_fail
align 4
public purple_xfers_get_all
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72154
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7DB7
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_xfer_ref
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE7E10
inc	dword ptr [ebx]
call	purple_debug_is_verbose
test	eax, eax
jz	short loc_67CE7DFC
mov	eax, [ebx]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aRefDPD 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_info
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE7E2E
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_re 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE7DFC
call	__stack_chk_fail
align 4
public purple_xfer_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7E60
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7E80
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE7E4E
call	__stack_chk_fail
align 4
public purple_xfer_get_account
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7EB4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7ED4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE7EA2
call	__stack_chk_fail
align 4
public purple_xfer_get_remote_user
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7F08
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7F28
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE7EF6
call	__stack_chk_fail
align 10h
public purple_xfer_get_status
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE7F5C
mov	eax, [eax+4Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7F7C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE7F4A
call	__stack_chk_fail
align 4
public purple_xfer_is_canceled
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE7FD4
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_status
cmp	eax, 5
jz	short loc_67CE7FCC
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_status
cmp	eax, 6
setz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE7FF7
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, 1
jmp	short loc_67CE7FB9
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_is 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67CE7FB9
call	__stack_chk_fail
public purple_xfer_is_completed
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8034
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_get_status
cmp	eax, 4
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8057
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67CE8024
call	__stack_chk_fail
public purple_xfer_get_filename
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8088
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE80A8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE8076
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+0Ch]
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_account
mov	edi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_type
mov	esi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_filename
mov	[esp+5Ch+var_38], ebx
mov	[esp+5Ch+var_3C], 0
mov	[esp+5Ch+var_40], ebp
mov	[esp+5Ch+var_44], edi
mov	[esp+5Ch+var_48], offset sub_67CE9E04
mov	[esp+5Ch+var_4C], offset loc_67CEAAC0
xor	edx, edx
cmp	esi, 2
setz	dl
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	purple_request_file
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE813F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public purple_xfer_get_local_filename
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8170
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8190
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE815E
call	__stack_chk_fail
align 4
public purple_xfer_get_bytes_sent
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE81C4
mov	eax, [eax+38h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE81E4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE81B2
call	__stack_chk_fail
align 4
public purple_xfer_get_bytes_remaining
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8218
mov	eax, [eax+3Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8238
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE8206
call	__stack_chk_fail
align 10h
public purple_xfer_get_size
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE826C
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE828C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer__8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE825A
call	__stack_chk_fail
align 4
public purple_xfer_get_progress
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE8300
mov	[esp+3Ch+var_3C], ebx
call	purple_xfer_get_size
test	eax, eax
jnz	short loc_67CE82CC
fldz
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8320
add	esp, 34h
pop	ebx
pop	esi
retn
mov	[esp+3Ch+var_3C], ebx
call	purple_xfer_get_bytes_sent
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_xfer_get_size
xor	ebx, ebx
mov	dword ptr [esp+3Ch+var_24], esi
mov	dword ptr [esp+3Ch+var_24+4], ebx
fild	[esp+3Ch+var_24]
xor	edx, edx
mov	dword ptr [esp+3Ch+var_24], eax
mov	dword ptr [esp+3Ch+var_24+4], edx
fild	[esp+3Ch+var_24]
fdivp	st(1), st
jmp	short loc_67CE82BA
align 10h
mov	[esp+3Ch+var_34], offset aXferNull 
mov	[esp+3Ch+var_38], offset aPurple_xfer__9 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
fldz
jmp	short loc_67CE82BA
fstp	st
call	__stack_chk_fail
align 4
public purple_xfer_get_local_port
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8354
mov	eax, [eax+28h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8377
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CE8342
call	__stack_chk_fail
public purple_xfer_get_remote_ip
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE83A8
mov	eax, [eax+24h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE83C8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE8396
call	__stack_chk_fail
align 10h
public purple_xfer_get_remote_port
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE83FC
mov	eax, [eax+2Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE841F
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CE83EA
call	__stack_chk_fail
public purple_xfer_get_start_time
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE8450
mov	eax, [eax+40h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8470
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE843E
call	__stack_chk_fail
align 4
public purple_xfer_get_end_time
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE84A4
mov	eax, [eax+44h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE84C4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE8492
call	__stack_chk_fail
align 4
public purple_xfer_set_message
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE8510
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE852E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE84FE
call	__stack_chk_fail
align 4
public purple_xfer_set_filename
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE8578
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+14h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8596
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8566
call	__stack_chk_fail
align 4
public purple_xfer_set_local_filename
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE85E0
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE85FE
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE85CE
call	__stack_chk_fail
align 4
public purple_xfer_set_size
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE8644
mov	[ebx+1Ch], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_sent
sub	esi, eax
mov	[ebx+3Ch], esi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8662
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8630
call	__stack_chk_fail
align 4
public purple_xfer_set_bytes_sent
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE86A8
mov	[ebx+38h], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_size
sub	eax, esi
mov	[ebx+3Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE86C6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8694
call	__stack_chk_fail
align 4
public purple_xfer_get_ui_ops
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CE86F8
mov	eax, [eax+74h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE8718
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CE86E6
call	__stack_chk_fail
align 10h
public purple_xfer_set_completed
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CE8780
dec	eax
jz	short loc_67CE87A0
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE8766
mov	esi, [eax+0Ch]
test	esi, esi
jz	short loc_67CE8766
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_progress
fstp	[esp+4Ch+var_48]
mov	[esp+4Ch+Time],	ebx
call	esi
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE88E9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	dword ptr [esp+4Ch+var_48+4], offset aXferNull 
mov	dword ptr [esp+4Ch+var_48], offset aPurple_xfer_21 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67CE8766
align 10h
mov	edx, 4
mov	eax, ebx
call	sub_67CE7BA8
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_filename
test	eax, eax
jz	loc_67CE887C
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_filename
mov	dword ptr [esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	eax
call	g_markup_escape_text
mov	esi, eax
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_local_filename
test	eax, eax
jz	short loc_67CE87F3
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_type
cmp	eax, 2
jz	loc_67CE889C
mov	dword ptr [esp+4Ch+var_48], offset aTransferOfFile 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+4Ch+var_48], esi
mov	[esp+4Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+4Ch+Time],	esi
call	g_free
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_account
mov	dword ptr [esp+4Ch+var_48+4], eax
mov	eax, [ebx+0Ch]
mov	dword ptr [esp+4Ch+var_48], eax
mov	[esp+4Ch+Time],	1
call	purple_find_conversation_with_account
mov	esi, eax
test	eax, eax
jz	short loc_67CE886E
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], 4
mov	dword ptr [esp+4Ch+var_48+4], edi
mov	dword ptr [esp+4Ch+var_48], 0
mov	[esp+4Ch+Time],	esi
call	purple_conversation_write
mov	[esp+4Ch+Time],	edi
call	g_free
jmp	loc_67CE8742
align 4
mov	dword ptr [esp+4Ch+var_48], offset aFileTransferCo 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+4Ch+Time],	eax
call	g_strdup
mov	edi, eax
jmp	short loc_67CE881D
mov	[esp+4Ch+Time],	ebx
call	purple_xfer_get_local_filename
mov	dword ptr [esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+Time],	eax
call	g_markup_escape_text
mov	ebp, eax
mov	dword ptr [esp+4Ch+var_48], offset aTransferOfFi_0 
mov	[esp+4Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+4Ch+var_48+4], esi
mov	dword ptr [esp+4Ch+var_48], ebp
mov	[esp+4Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+4Ch+Time],	ebp
call	g_free
jmp	loc_67CE8815
call	__stack_chk_fail
align 10h
public purple_xfer_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE89FC
test	ebp, ebp
jz	loc_67CE8A50
test	edi, edi
jz	loc_67CE8A74
mov	[esp+3Ch+var_3C], 80h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 1
mov	[eax+4], esi
mov	[eax+8], ebp
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+0Ch], eax
mov	edi, ds:dword_67D72158
mov	[ebx+74h], edi
mov	dword ptr [ebx+10h], 0
mov	dword ptr [ebx+48h], 1000h
mov	dword ptr [ebx+30h], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], 14h
call	g_malloc0
mov	esi, eax
mov	dword ptr [eax], 0
test	edi, edi
jz	loc_67CE8A3C
mov	eax, [edi+20h]
test	eax, eax
jz	loc_67CE8A3C
mov	dword ptr [esi+4], 0
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D7215C
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	[esp+3Ch+var_3C], ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE89C3
mov	eax, [eax]
test	eax, eax
jz	short loc_67CE89C3
mov	[esp+3Ch+var_3C], ebx
call	eax
			
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D72154
mov	[esp+3Ch+var_3C], eax
call	g_list_prepend
mov	ds:dword_67D72154, eax
call	purple_debug_is_verbose
test	eax, eax
jnz	short loc_67CE8A1C
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE8A97
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aTypePurple_xfe 
mov	[esp+3Ch+var_38], offset aPurple_xfer_ne 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CE89E2
mov	eax, [ebx]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aNewPD	
mov	[esp+3Ch+var_3C], offset aXfer 
call	purple_debug_info
jmp	short loc_67CE89E2
			
mov	[esp+3Ch+var_3C], 1000h
call	g_byte_array_sized_new
mov	[esi+4], eax
jmp	loc_67CE8997
mov	[esp+3Ch+var_34], offset aAccountNull_5	
mov	[esp+3Ch+var_38], offset aPurple_xfer_ne 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE89E2
align 4
mov	[esp+3Ch+var_34], offset aWhoNull_0 
mov	[esp+3Ch+var_38], offset aPurple_xfer_ne 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CE89E2
call	__stack_chk_fail
public purple_xfer_set_init_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8ACC
mov	[eax+50h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8AEA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8ABA
call	__stack_chk_fail
align 10h
public purple_xfer_set_request_denied_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8B20
mov	[eax+54h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8B3E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8B0E
call	__stack_chk_fail
align 4
public purple_xfer_set_read_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8B74
mov	[eax+68h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8B92
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8B62
call	__stack_chk_fail
align 4
public purple_xfer_set_write_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8BC8
mov	[eax+6Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8BE6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8BB6
call	__stack_chk_fail
align 4
public purple_xfer_set_ack_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8C1C
mov	[eax+70h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8C3A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8C0A
call	__stack_chk_fail
align 10h
public purple_xfer_set_start_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8C70
mov	[eax+58h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8C8E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8C5E
call	__stack_chk_fail
align 4
public purple_xfer_set_end_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8CC4
mov	[eax+5Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8CE2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8CB2
call	__stack_chk_fail
align 4
public purple_xfer_set_cancel_send_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8D18
mov	[eax+60h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8D36
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8D06
call	__stack_chk_fail
align 4
public purple_xfer_set_cancel_recv_fnc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CE8D6C
mov	[eax+64h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE8D8A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE8D5A
call	__stack_chk_fail
align 10h
public purple_xfer_read
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CE8E6C
test	ebx, ebx
jz	loc_67CE8E90
mov	[esp+3Ch+var_3C], esi
call	purple_xfer_get_size
test	eax, eax
jnz	short loc_67CE8E04
mov	edi, [esi+48h]
			
mov	edx, [esi+68h]
test	edx, edx
jz	loc_67CE8EB4
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	edx
mov	edx, eax
test	eax, eax
js	short loc_67CE8DE9
mov	eax, edx
cmp	[esi+48h], eax
jz	short loc_67CE8E20
			
mov	eax, edx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE8EFB
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+var_3C], esi
call	purple_xfer_get_bytes_remaining
mov	edi, [esi+48h]
cmp	eax, edi
jnb	short loc_67CE8DC8
mov	[esp+3Ch+var_3C], esi
call	purple_xfer_get_bytes_remaining
mov	edi, eax
jmp	short loc_67CE8DC8
align 10h
fld	ds:flt_67D3A4A0
push	edx
fimul	[esp+40h+var_40]
pop	ecx
fld	ds:flt_67D3A4A4
fucomp	st(1)
fnstsw	ax
test	ah, 45h
jz	short loc_67CE8E48
fstp	st
mov	ecx, 0FFFFh
mov	[esi+48h], ecx
jmp	short loc_67CE8DE9
align 4
fnstcw	[esp+3Ch+var_1E]
mov	ax, [esp+3Ch+var_1E]
mov	ah, 0Ch
mov	[esp+3Ch+var_20], ax
fldcw	[esp+3Ch+var_20]
fistp	[esp+3Ch+var_2C]
fldcw	[esp+3Ch+var_1E]
mov	ecx, dword ptr [esp+3Ch+var_2C]
jmp	short loc_67CE8E41
align 4
mov	[esp+3Ch+var_34], offset aXferNull 
mov	[esp+3Ch+var_38], offset aPurple_xfer_31 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	edx, edx
jmp	loc_67CE8DE9
align 10h
mov	[esp+3Ch+var_34], offset aBufferNull 
mov	[esp+3Ch+var_38], offset aPurple_xfer_31 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	edx, edx
jmp	loc_67CE8DE9
align 4
mov	[esp+3Ch+var_3C], edi
call	g_malloc0
mov	[ebx], eax
mov	[esp+3Ch+var_34], edi 
mov	[esp+3Ch+var_38], eax 
mov	eax, [esi+30h]
mov	[esp+3Ch+var_3C], eax 
call	wpurple_read
mov	edx, eax
cmp	eax, 0
jl	short loc_67CE8EE8
jnz	loc_67CE8DE2
mov	edx, 0FFFFFFFFh
jmp	loc_67CE8DE9
call	_errno
cmp	dword ptr [eax], 0Bh
jnz	short loc_67CE8EDE
xor	eax, eax
xor	edx, edx
jmp	loc_67CE8DE4
call	__stack_chk_fail
public purple_xfer_write
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE9014
test	edi, edi
jz	loc_67CE9034
test	esi, esi
jz	short loc_67CE8F98
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_remaining
cmp	esi, eax
ja	loc_67CE8FD0
mov	eax, esi
mov	edx, [ebx+6Ch]
test	edx, edx
jz	loc_67CE8FE3
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	edx
mov	esi, eax
test	eax, eax
js	short loc_67CE8FB6
mov	edi, esi
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_sent
add	edi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_size
cmp	edi, eax
jb	short loc_67CE8FB6
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_is_completed
test	eax, eax
jnz	short loc_67CE8FB6
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_set_completed
jmp	short loc_67CE8FB6
align 4
mov	[esp+2Ch+var_24], offset aSize0	
mov	[esp+2Ch+var_28], offset aPurple_xfer_wr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CE9057
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_bytes_remaining
mov	edx, [ebx+6Ch]
test	edx, edx
jnz	loc_67CE8F4E
mov	[esp+2Ch+var_24], eax 
mov	[esp+2Ch+var_28], edi 
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax 
call	wpurple_write
mov	esi, eax
test	eax, eax
jns	loc_67CE8F61
call	_errno
cmp	dword ptr [eax], 0Bh
jnz	short loc_67CE8FB6
xor	edi, edi
xor	esi, esi
jmp	loc_67CE8F63
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_wr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CE8FB6
mov	[esp+2Ch+var_24], offset aBufferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_wr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67CE8FB6
call	__stack_chk_fail
public purple_xfer_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE909C
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE90B8
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CE90B8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE90C9
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_ad 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE90C9
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
public purple_xfer_error
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	esi, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	esi, esi
jz	loc_67CE91D8
test	edi, edi
jz	loc_67CE9198
test	eax, eax
jz	short loc_67CE9120
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	purple_find_buddy
test	eax, eax
jz	short loc_67CE9120
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_get_alias
mov	ebx, eax
			
dec	edi
jz	loc_67CE91C8
mov	[esp+3Ch+var_38], offset aFileTransferFr 
mov	[esp+3Ch+var_3C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], 0
call	purple_notify_message
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE91EE
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE91EE
mov	[esp+3Ch+arg_8], offset	aTypePurple_xfe	
mov	[esp+3Ch+arg_4], offset	aPurple_xfer_er	
mov	[esp+3Ch+arg_0], 0
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	[esp+3Ch+var_38], offset aFileTransferTo 
jmp	loc_67CE912F
align 4
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE91EE
mov	[esp+3Ch+arg_8], offset	aMsgNull 
jmp	short loc_67CE91AC
			
call	__stack_chk_fail
align 4
public purple_xfer_update_progress
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE9244
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE9230
mov	esi, [eax+0Ch]
test	esi, esi
jz	short loc_67CE9230
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_progress
fstp	[esp+2Ch+var_28]
mov	[esp+2Ch+var_2C], ebx
call	esi
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9262
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [esp+2Ch+var_28+4], offset aXferNull 
mov	dword ptr [esp+2Ch+var_28], offset aPurple_xfer_up 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE9230
call	__stack_chk_fail
align 4
public purple_xfer_get_thumbnail
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	ebx, ebx
jz	short loc_67CE9299
mov	edx, [eax+0Ch]
mov	[ebx], edx
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE92AD
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	[esp+5Ch+var_30], ecx
mov	edi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE9424
mov	esi, edx
test	edx, edx
jz	loc_67CE9444
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	ebx
call	purple_xfer_get_thumbnail
mov	ebp, eax
mov	[esp+5Ch+Time],	ebx
call	purple_xfer_get_account
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	1
call	purple_find_conversation_with_account
mov	ebx, eax
test	eax, eax
jz	loc_67CE93DA
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+Time],	esi
call	g_markup_escape_text
mov	esi, eax
cmp	[esp+5Ch+var_30], 1
sbb	edx, edx
and	edx, 0FFFFFE00h
add	edx, 204h
test	edi, edi
jz	loc_67CE93F0
test	ebp, ebp
jz	loc_67CE93F0
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	ebp
mov	[esp+5Ch+var_34], edx
call	g_memdup
mov	[esp+5Ch+var_54], 0
mov	ecx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+Time],	eax
call	purple_imgstore_add_with_id
mov	ebp, eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	offset aImgIdDS	
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_4C], eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_write
mov	[esp+5Ch+Time],	ebp
call	purple_imgstore_unref_by_id
mov	[esp+5Ch+Time],	edi
call	g_free
mov	[esp+5Ch+Time],	esi
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9465
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+5Ch+Time],	0 
mov	[esp+5Ch+var_34], edx
call	time
mov	[esp+5Ch+var_4C], eax
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_write
jmp	short loc_67CE93D2
align 4
mov	[esp+5Ch+var_54], offset aXferNull 
mov	[esp+5Ch+var_58], offset aPurple_xfer_co 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67CE93DA
align 4
mov	[esp+5Ch+var_54], offset aMessageNull_0	
mov	[esp+5Ch+var_58], offset aPurple_xfer_co 
mov	[esp+5Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CE93DA
call	__stack_chk_fail
align 4
public purple_xfer_conversation_write
			
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CE94A5
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	sub_67CE92B4
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	_errno
mov	esi, [eax]
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_type
mov	edi, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_account
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], ebp
call	g_filename_to_utf8_utf8
mov	ebp, eax
cmp	edi, 1
jz	loc_67CE95A0
cmp	edi, 2
jz	loc_67CE95B8
mov	[esp+5Ch+var_5C], esi
call	wpurple_strerror
mov	esi, eax
mov	[esp+5Ch+var_58], offset aErrorAccessing 
			
mov	[esp+5Ch+var_5C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	[esp+5Ch+var_54], 1
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_conversation_write
mov	[esp+5Ch+var_50], esi
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	purple_xfer_error
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE95CF
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_5C], esi
call	wpurple_strerror
mov	esi, eax
mov	[esp+5Ch+var_58], offset aErrorReading_1 
jmp	loc_67CE952D
align 4
mov	[esp+5Ch+var_5C], esi
call	wpurple_strerror
mov	esi, eax
mov	[esp+5Ch+var_58], offset aErrorWriting_2 
jmp	loc_67CE952D
call	__stack_chk_fail
public purple_xfer_cancel_local
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE9714
mov	[esp+2Ch+Time],	ebx
call	purple_request_close_with_handle
mov	edx, 5
mov	eax, ebx
call	sub_67CE7BA8
mov	[esp+2Ch+Time],	0 
call	time
mov	[ebx+44h], eax
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_get_filename
test	eax, eax
jz	loc_67CE9744
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_get_filename
mov	esi, eax
mov	[esp+2Ch+var_28], offset aYouCancelledTh 
mov	[esp+2Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_conversation_write
mov	[esp+2Ch+Time],	esi
call	g_free
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_get_type
dec	eax
jz	loc_67CE9704
mov	eax, [ebx+64h]
test	eax, eax
jz	short loc_67CE9686
mov	[esp+2Ch+Time],	ebx
call	eax
			
mov	eax, [ebx+34h]
test	eax, eax
jnz	short loc_67CE96F0
mov	eax, [ebx+30h]
cmp	eax, 0FFFFFFFFh
jz	short loc_67CE969D
mov	[esp+2Ch+Time],	eax 
call	wpurple_close
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_67CE96B3
mov	[esp+2Ch+Time],	eax 
call	fclose
mov	dword ptr [ebx+20h], 0
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE96CB
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CE96CB
mov	[esp+2Ch+Time],	ebx
call	eax
			
mov	dword ptr [ebx+3Ch], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE9767
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_xfer_unref
mov	[esp+2Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
jmp	short loc_67CE968D
align 4
mov	eax, [ebx+60h]
test	eax, eax
jnz	loc_67CE9681
jmp	loc_67CE9686
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_ca 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9767
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_28], offset aFileTransferCa 
mov	[esp+2Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+2Ch+Time],	eax
call	g_strdup
mov	esi, eax
jmp	loc_67CE964F
			
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+File],	ebx
call	purple_xfer_get_type
mov	edi, eax
mov	[esp+3Ch+File],	ebx
call	purple_xfer_get_ui_ops
mov	ecx, [ebx+40h]
test	ecx, ecx
jnz	short loc_67CE9804
test	eax, eax
jz	loc_67CE985C
mov	edx, [eax+1Ch]
test	edx, edx
jz	loc_67CE9850
			
mov	eax, [ebx+30h]
cmp	eax, 0FFFFFFFFh
jz	short loc_67CE97D0
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+Origin], offset sub_67CEA4D4
mov	[esp+3Ch+Offset], esi
mov	[esp+3Ch+File],	eax
call	purple_input_add
mov	[ebx+34h], eax
mov	[esp+3Ch+File],	0 
call	time
mov	[ebx+40h], eax
mov	eax, [ebx+58h]
test	eax, eax
jz	short loc_67CE97EB
mov	[esp+3Ch+File],	ebx
call	eax
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE98DB
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+3Ch+Offset], offset aTransferIsBein 
mov	[esp+3Ch+File],	offset aXfer 
call	purple_debug_error
mov	[esp+3Ch+var_28], offset aBegin_transfer 
mov	[esp+3Ch+Time],	513h
mov	[esp+3Ch+var_30], offset aFt_c 
mov	[esp+3Ch+Origin], offset aFileSLineDSS_5 
mov	[esp+3Ch+Offset], 8
mov	[esp+3Ch+File],	0
call	g_log
jmp	short loc_67CE97EB
align 10h
mov	eax, [eax+18h]
test	eax, eax
jnz	loc_67CE97AD
nop
cmp	edi, 2
jz	short loc_67CE98D4
mov	edi, offset aRb_1 
mov	[esp+3Ch+File],	ebx
call	purple_xfer_get_local_filename
mov	[esp+3Ch+Offset], edi
mov	[esp+3Ch+File],	eax
call	g_fopen
mov	[ebx+20h], eax
test	eax, eax
jz	short loc_67CE98B4
mov	[esp+3Ch+Origin], 0 
mov	edx, [ebx+38h]
mov	[esp+3Ch+Offset], edx 
mov	[esp+3Ch+File],	eax 
call	fseek
test	eax, eax
jz	loc_67CE97AD
mov	[esp+3Ch+Offset], offset aCouldnTSeek 
mov	[esp+3Ch+File],	offset aXfer 
call	purple_debug_error
mov	[esp+3Ch+File],	ebx
call	purple_xfer_get_local_filename
mov	edx, eax
mov	eax, ebx
call	sub_67CE94AC
mov	[esp+3Ch+File],	ebx
call	purple_xfer_cancel_local
jmp	loc_67CE97EB
align 4
mov	edi, offset aWb	
jmp	short loc_67CE9866
call	__stack_chk_fail
public purple_xfer_start
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE99FC
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_type
test	eax, eax
jz	short loc_67CE9968
mov	[esp+5Ch+var_5C], ebx
call	purple_xfer_get_type
mov	ecx, eax
mov	edx, 3
mov	eax, ebx
mov	[esp+5Ch+var_30], ecx
call	sub_67CE7BA8
test	esi, esi
mov	ecx, [esp+5Ch+var_30]
jnz	short loc_67CE993D
mov	esi, 0FFFFFFFFh
cmp	ecx, 2
jz	short loc_67CE999C
mov	[ebx+30h], esi
mov	edx, 2
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE9A15
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_67CE976C
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE9A15
mov	[esp+5Ch+arg_8], offset	aPurple_xfer_32	
mov	[esp+5Ch+arg_4], offset	aPurple_xfer_st	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
test	edi, edi
jz	short loc_67CE99EC
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[ebx+24h], eax
mov	[ebx+2Ch], ebp
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset sub_67CE9A1C
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+8]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], 0
call	purple_proxy_connect
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9A15
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[ebx+30h], esi
mov	edx, 1
jmp	loc_67CE994A
align 4
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9A15
mov	[esp+5Ch+arg_8], offset	aXferNull 
jmp	loc_67CE9980
			
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
test	edx, edx
js	short loc_67CE9A54
mov	[eax+30h], edx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CE9A6C
mov	edx, 1
add	esp, 1Ch
jmp	loc_67CE976C
align 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE9A6C
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_xfer_cancel_local
			
call	__stack_chk_fail
align 4
public purple_xfer_unref
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE9BAC
mov	eax, [ebx]
test	eax, eax
jz	loc_67CE9B7C
dec	eax
mov	[ebx], eax
call	purple_debug_is_verbose
test	eax, eax
jz	short loc_67CE9AC3
mov	eax, [ebx]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aUnrefDPD 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_info
cmp	dword ptr [ebx], 0
jnz	loc_67CE9B98
call	purple_debug_is_verbose
test	eax, eax
jnz	loc_67CE9BCC
mov	[esp+2Ch+var_2C], ebx
call	purple_request_close_with_handle
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_status
cmp	eax, 3
jz	loc_67CE9BF0
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE9B0A
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CE9B0A
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72154
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72154, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CE9BFD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aXferRef0 
mov	[esp+2Ch+var_28], offset aPurple_xfer_un 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9BFD
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_un 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CE9B98
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aDestroyedPD 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_info
jmp	loc_67CE9AD9
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_cancel_local
jmp	loc_67CE9AF2
			
call	__stack_chk_fail
align 4
public purple_xfer_request_denied
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CE9C58
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aXferPDenied 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_misc
mov	eax, [ebx+54h]
test	eax, eax
jz	short loc_67CE9C3F
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9C85
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_unref
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9C85
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_request_denied
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_unref
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE9CC2
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, 5
mov	eax, ebx
call	sub_67CE7BA8
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_request_denied
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_unref
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CE9D0A
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_xfer_end
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CE9DD0
mov	[esp+2Ch+Time],	ebx
call	purple_xfer_is_completed
test	eax, eax
jz	short loc_67CE9D98
mov	[esp+2Ch+Time],	0 
call	time
mov	[ebx+44h], eax
mov	eax, [ebx+5Ch]
test	eax, eax
jz	short loc_67CE9D52
mov	[esp+2Ch+Time],	ebx
call	eax
mov	eax, [ebx+34h]
test	eax, eax
jnz	short loc_67CE9DB4
mov	eax, [ebx+30h]
cmp	eax, 0FFFFFFFFh
jz	short loc_67CE9D69
mov	[esp+2Ch+Time],	eax 
call	wpurple_close
			
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_67CE9D7F
mov	[esp+2Ch+Time],	eax 
call	fclose
mov	dword ptr [ebx+20h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9DFD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_unref
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9DFD
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_cancel_local
align 4
mov	[esp+2Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
mov	eax, [ebx+30h]
cmp	eax, 0FFFFFFFFh
jnz	short loc_67CE9D61
jmp	short loc_67CE9D69
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_en 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9DFD
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, 5
mov	eax, ebx
call	sub_67CE7BA8
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_type
mov	[esp+2Ch+var_2C], ebx
dec	eax
jz	short loc_67CE9E50
call	purple_xfer_request_denied
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CE9E57
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_xfer_unref
align 10h
call	purple_xfer_cancel_local
jmp	short loc_67CE9E36
call	__stack_chk_fail
public purple_xfer_cancel_remote
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CEA038
mov	[esp+3Ch+Time],	ebx
call	purple_request_close_with_handle
mov	edx, 6
mov	eax, ebx
call	sub_67CE7BA8
mov	[esp+3Ch+Time],	0 
call	time
mov	[ebx+44h], eax
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_account
mov	edi, eax
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+Time+4], eax
mov	[esp+3Ch+Time],	edi
call	purple_find_buddy
mov	esi, eax
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_filename
test	eax, eax
jz	loc_67CE9FD8
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_filename
mov	ebp, eax
test	esi, esi
jz	loc_67CE9FD0
mov	[esp+3Ch+Time],	esi
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+3Ch+Time+4], offset aSCancelledTheT 
mov	[esp+3Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Time+4], esi
mov	[esp+3Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+Time+4], esi
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_conversation_write
mov	ebp, [ebx+0Ch]
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_type
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+Time+4], edi
mov	[esp+3Ch+Time],	eax
call	purple_xfer_error
mov	[esp+3Ch+Time],	esi
call	g_free
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_type
dec	eax
jz	loc_67CEA028
mov	eax, [ebx+64h]
test	eax, eax
jz	short loc_67CE9F60
mov	[esp+3Ch+Time],	ebx
call	eax
			
mov	eax, [ebx+34h]
test	eax, eax
jnz	loc_67CEA014
mov	eax, [ebx+30h]
cmp	eax, 0FFFFFFFFh
jz	short loc_67CE9F7B
mov	[esp+3Ch+Time],	eax 
call	wpurple_close
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_67CE9F91
mov	[esp+3Ch+Time],	eax 
call	fclose
mov	dword ptr [ebx+20h], 0
mov	[esp+3Ch+Time],	ebx
call	purple_xfer_get_ui_ops
test	eax, eax
jz	short loc_67CE9FA9
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_67CE9FA9
mov	[esp+3Ch+Time],	ebx
call	eax
			
mov	dword ptr [ebx+3Ch], 0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEA070
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_xfer_unref
mov	esi, [ebx+0Ch]
jmp	loc_67CE9EE4
test	esi, esi
jz	loc_67CEA068
mov	[esp+3Ch+Time],	esi
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+3Ch+Time+4], offset aSCancelledTheF 
mov	[esp+3Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+3Ch+Time+4], esi
mov	[esp+3Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_67CE9F0A
align 4
mov	[esp+3Ch+Time],	eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
jmp	loc_67CE9F6B
mov	eax, [ebx+60h]
test	eax, eax
jnz	loc_67CE9F5B
jmp	loc_67CE9F60
mov	[esp+3Ch+var_34], offset aXferNull 
mov	[esp+3Ch+Time+4], offset aPurple_xfer_34 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA070
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	esi, [ebx+0Ch]
jmp	loc_67CE9FEA
			
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_24], 0
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_ui_ops
mov	edi, eax
mov	eax, [esi+4]
cmp	eax, 2
jz	short loc_67CEA0DC
dec	eax
jz	loc_67CEA154
			
mov	[esp+6Ch+Str], esi
call	purple_xfer_is_completed
test	eax, eax
jz	short loc_67CEA0C1
mov	[esp+6Ch+Str], esi
call	purple_xfer_end
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEA4CC
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Size],	eax
mov	[esp+6Ch+Str], esi
call	purple_xfer_read
mov	ebp, eax
cmp	eax, 0
jle	loc_67CEA338
test	edi, edi
jz	loc_67CEA358
mov	eax, [edi+18h]
test	eax, eax
jz	loc_67CEA358
mov	[esp+6Ch+Size+4], ebp
mov	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+Size],	edx
mov	[esp+6Ch+Str], esi
call	eax
mov	ebx, eax
cmp	ebx, ebp
jz	loc_67CEA390
mov	[esp+6Ch+Size],	offset aUnableToWriteW 
mov	[esp+6Ch+Str], offset aFiletransfer 
call	purple_debug_error
mov	[esp+6Ch+Str], esi
call	purple_xfer_cancel_local
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Str], eax
call	g_free
jmp	loc_67CEA0C1
align 4
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_bytes_remaining
mov	ebx, [esi+48h]
cmp	eax, ebx
jb	loc_67CEA380
mov	[esp+6Ch+Size],	esi
mov	eax, ds:dword_67D7215C
mov	[esp+6Ch+Str], eax
call	g_hash_table_lookup
mov	ebp, eax
test	ebx, ebx
jnz	short loc_67CEA1A0
mov	eax, [esi+34h]
test	eax, eax
jz	loc_67CEA0C1
mov	[esp+6Ch+Str], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
jmp	loc_67CEA0C1
align 10h
mov	eax, [eax+4]
test	eax, eax
jz	loc_67CEA2C2
mov	edx, [eax+4]
cmp	ebx, edx
ja	loc_67CEA2C0
xor	ecx, ecx
mov	[esp+6Ch+Size+4], ecx
mov	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+Size],	edx
mov	[esp+6Ch+Str], eax
call	g_byte_array_append
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Str], eax
call	g_free
mov	edx, [ebp+4]
mov	eax, [edx]
mov	[esp+6Ch+var_24], eax
mov	ecx, [edx+4]
mov	[esp+6Ch+Size+4], ecx
mov	[esp+6Ch+Size],	eax
mov	[esp+6Ch+Str], esi
mov	[esp+6Ch+var_40], ecx
call	purple_xfer_write
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
mov	ecx, [esp+6Ch+var_40]
jz	loc_67CEA476
test	eax, eax
js	short loc_67CEA213
cmp	eax, ecx
jz	loc_67CEA426
test	edi, edi
jz	short loc_67CEA233
mov	eax, [edi+20h]
test	eax, eax
jz	short loc_67CEA233
sub	ecx, ebx
mov	[esp+6Ch+Size+4], ecx
mov	ecx, [esp+6Ch+var_24]
add	ecx, ebx
mov	[esp+6Ch+Size],	ecx
mov	[esp+6Ch+Str], esi
call	eax
			
mov	eax, [ebp+4]
test	eax, eax
jz	short loc_67CEA256
mov	[esp+6Ch+var_24], 0
mov	[esp+6Ch+Size+4], ebx
mov	[esp+6Ch+Size],	0
mov	[esp+6Ch+Str], eax
call	g_byte_array_remove_range
test	ebx, ebx
jle	loc_67CEA0AD
			
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_size
test	eax, eax
jz	short loc_67CEA26D
sub	[esi+3Ch], ebx
add	[esi+38h], ebx
mov	eax, [esi+70h]
test	eax, eax
jz	short loc_67CEA288
mov	[esp+6Ch+Size+4], ebx
mov	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+Size],	edx
mov	[esp+6Ch+Str], esi
call	eax
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Str], eax
call	g_free
test	edi, edi
jz	loc_67CEA0AD
mov	ebx, [edi+0Ch]
test	ebx, ebx
jz	loc_67CEA0AD
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_progress
fstp	qword ptr [esp+6Ch+Size]
mov	[esp+6Ch+Str], esi
call	ebx
jmp	loc_67CEA0AD
align 10h
sub	ebx, edx
test	edi, edi
jz	loc_67CEA3D0
mov	eax, [edi+1Ch]
test	eax, eax
jz	loc_67CEA3D0
mov	[esp+6Ch+Size+4], ebx
lea	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+Size],	edx
mov	[esp+6Ch+Str], esi
call	eax
cmp	eax, 0
jnz	loc_67CEA40A
mov	eax, [esi+34h]
test	eax, eax
jnz	loc_67CEA497
or	dword ptr [ebp+0], 2
mov	[esp+6Ch+var_58], offset aDo_transfer 
mov	[esp+6Ch+var_5C], 4A4h
mov	[esp+6Ch+File],	offset aFt_c 
mov	[esp+6Ch+Size+4], offset aFileSLineDSS_5 
mov	[esp+6Ch+Size],	8
mov	[esp+6Ch+Str], 0
call	g_log
jmp	loc_67CEA0C1
align 4
jz	loc_67CEA0AD
mov	[esp+6Ch+Str], esi
call	purple_xfer_cancel_remote
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Str], eax
call	g_free
jmp	loc_67CEA0C1
align 4
			
mov	eax, [esi+20h]
mov	[esp+6Ch+File],	eax 
mov	[esp+6Ch+Size+4], ebp 
mov	[esp+6Ch+Size],	1 
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Str], eax 
call	fwrite
mov	ebx, eax
jmp	loc_67CEA11D
align 10h
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_bytes_remaining
mov	ebx, eax
jmp	loc_67CEA167
align 10h
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_size
test	eax, eax
jz	loc_67CEA25E
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_bytes_sent
lea	ebp, [ebx+eax]
mov	[esp+6Ch+Str], esi
call	purple_xfer_get_size
cmp	ebp, eax
jb	loc_67CEA25E
mov	[esp+6Ch+Size],	1
mov	[esp+6Ch+Str], esi
call	purple_xfer_set_completed
jmp	loc_67CEA25E
			
mov	[esp+6Ch+Str], ebx
call	g_malloc
mov	[esp+6Ch+var_24], eax
mov	edx, [esi+20h]
mov	[esp+6Ch+File],	edx 
mov	[esp+6Ch+Size+4], ebx 
mov	[esp+6Ch+Size],	1 
mov	[esp+6Ch+Str], eax 
call	fread
mov	ecx, eax
cmp	eax, ebx
jz	short loc_67CEA412
mov	[esp+6Ch+Size],	offset aUnableToReadWh 
jmp	loc_67CEA12D
jl	loc_67CEA4AB
mov	ecx, eax
mov	eax, [ebp+4]
test	eax, eax
jnz	loc_67CEA1B8
mov	eax, [esp+6Ch+var_24]
jmp	loc_67CEA1E4
mov	eax, [esi+48h]
xor	edx, edx
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+Time+4], edx
fild	qword ptr [esp+6Ch+Time]
fmul	ds:flt_67D3A4A0
fld	ds:flt_67D3A4A4
fucomp	st(1)
fnstsw	ax
test	ah, 45h
jnz	short loc_67CEA48E
fnstcw	word ptr [esp+6Ch+var_30+2]
mov	ax, word ptr [esp+6Ch+var_30+2]
mov	ah, 0Ch
mov	word ptr [esp+6Ch+var_30], ax
fldcw	word ptr [esp+6Ch+var_30]
fistp	qword ptr [esp+6Ch+Time]
fldcw	word ptr [esp+6Ch+var_30+2]
mov	eax, [esp+6Ch+Time]
mov	ecx, eax
mov	[esi+48h], ecx
jmp	loc_67CEA233
mov	[esp+6Ch+Str], esi
call	purple_xfer_cancel_remote
mov	ebx, [ebp+4]
test	ebx, ebx
jnz	loc_67CEA0C1
jmp	loc_67CEA141
fstp	st
mov	ecx, 0FFFFh
jmp	short loc_67CEA46E
mov	[esp+6Ch+Str], eax
call	purple_input_remove
mov	dword ptr [esi+34h], 0
jmp	loc_67CEA2FA
mov	[esp+6Ch+Size],	offset aUnableToReadWh 
mov	[esp+6Ch+Str], offset aFiletransfer 
call	purple_debug_error
mov	[esp+6Ch+Str], esi
call	purple_xfer_cancel_local
jmp	loc_67CEA0C1
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+20h]
test	eax, eax
jz	short loc_67CEA508
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA568
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_67CEA078
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [eax]
test	dl, 1
jz	short loc_67CEA528
mov	dword ptr [eax], 0
jmp	short loc_67CEA4EE
or	edx, 2
mov	[eax], edx
mov	eax, [ebx+34h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+34h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA568
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], offset	aPrplIsReadyOnF	
mov	[esp+2Ch+arg_0], offset	aXfer 
add	esp, 28h
pop	ebx
jmp	purple_debug_misc
			
call	__stack_chk_fail
align 10h
public purple_xfer_prpl_ready
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CEA618
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
mov	eax, [eax]
mov	edx, eax
or	edx, 2
mov	[esi], edx
mov	edx, [ebx+20h]
test	edx, edx
jz	short loc_67CEA5E8
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPrplAndUiReady 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_misc
mov	dword ptr [esi], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA636
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CEA078
align 4
test	al, 1
jnz	short loc_67CEA5AF
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPrplIsReadyOnF 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_misc
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA636
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_pr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEA604
			
call	__stack_chk_fail
align 4
public purple_xfer_ui_ready
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CEA720
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
mov	eax, [eax]
mov	edx, eax
or	edx, 1
mov	[esi], edx
test	al, 2
jz	short loc_67CEA6F4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aUiAndPrplReady 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_misc
mov	[esp+2Ch+var_2C], ebx
call	purple_xfer_get_type
dec	eax
setz	al
movzx	eax, al
inc	eax
mov	ecx, [ebx+34h]
test	ecx, ecx
jz	short loc_67CEA6CC
			
mov	dword ptr [esi], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEA73E
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CEA078
align 4
mov	edx, [ebx+30h]
cmp	edx, 0FFFFFFFFh
jz	short loc_67CEA6A7
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_67CEA4D4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	purple_input_add
mov	[ebx+34h], eax
jmp	short loc_67CEA6A7
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aUiIsReadyOnFtP 
mov	[esp+2Ch+var_2C], offset aXfer 
call	purple_debug_misc
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEA73E
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aXferNull 
mov	[esp+2Ch+var_28], offset aPurple_xfer_ui 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEA70C
			
call	__stack_chk_fail
align 4
public purple_xfer_request_accepted
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	esi, [esp+7Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CEA836
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_get_type
mov	[esp+7Ch+var_50], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_get_account
mov	edi, eax
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aRequestAccepte 
mov	[esp+7Ch+var_7C], offset aXfer 
call	purple_debug_misc
test	esi, esi
jz	loc_67CEA900
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_find_buddy
mov	ebp, eax
cmp	[esp+7Ch+var_50], 1
jz	loc_67CEA850
mov	dword ptr [ebx+4Ch], 2
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_set_local_filename
test	ebp, ebp
jz	loc_67CEA8F8
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_alias
mov	edi, eax
mov	esi, [ebx+14h]
mov	[esp+7Ch+var_78], offset aStartingTransf 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_conversation_write
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_add
mov	[esp+7Ch+var_7C], ebx
call	dword ptr [ebx+50h]
			
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEAA66
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_get_ui_ops
mov	[esp+7Ch+var_50], eax
mov	[esp+7Ch+var_78], offset a__ 
mov	[esp+7Ch+var_7C], esi
call	g_strrstr
test	eax, eax
jz	loc_67CEA92C
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], esi
call	g_filename_to_utf8_utf8
mov	esi, eax
mov	[esp+7Ch+var_78], offset aSIsNotAValidFi 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	ebp, eax
mov	[esp+7Ch+var_70], eax
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], 1
call	purple_xfer_error
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	[esp+7Ch+var_7C], ebp
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_unref
jmp	loc_67CEA836
mov	edi, [ebx+0Ch]
jmp	loc_67CEA7E3
cmp	[esp+7Ch+var_50], 2
jz	loc_67CEAA10
mov	[esp+7Ch+var_74], offset aFilenameNull_0 
mov	[esp+7Ch+var_78], offset aPurple_xfer_35 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
jmp	loc_67CEA836
mov	[esp+7Ch+var_78], offset a___0 
mov	[esp+7Ch+var_7C], esi
call	g_strrstr
test	eax, eax
jnz	loc_67CEA874
mov	ecx, [esp+7Ch+var_50]
test	ecx, ecx
jz	loc_67CEAA32
mov	eax, [esp+7Ch+var_50]
mov	edx, [eax+1Ch]
test	edx, edx
jz	loc_67CEAA27
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_set_local_filename
mov	[esp+7Ch+var_7C], esi
call	g_path_get_basename
mov	edi, eax
mov	[esp+7Ch+var_6C], 0
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_filename_to_utf8_utf8
mov	esi, eax
mov	[esp+7Ch+var_7C], edi
call	g_free
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_set_filename
test	ebp, ebp
jz	short loc_67CEAA22
mov	[esp+7Ch+var_7C], ebp
call	purple_buddy_get_alias
mov	edi, eax
mov	[esp+7Ch+var_78], offset aOfferingToSend 
mov	[esp+7Ch+var_7C], offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+var_7C], esi
call	g_free
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_conversation_write
mov	[esp+7Ch+var_7C], edi
call	g_free
jmp	loc_67CEA828
mov	dword ptr [ebx+4Ch], 2
mov	[esp+7Ch+var_7C], ebx
call	dword ptr [ebx+50h]
jmp	loc_67CEA836
mov	edi, [ebx+0Ch]
jmp	short loc_67CEA9C1
mov	edi, [eax+18h]
test	edi, edi
jnz	loc_67CEA95F
lea	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], esi
call	g_stat
inc	eax
jz	short loc_67CEAA6B
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_set_local_filename
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_set_size
jmp	loc_67CEA96B
call	__stack_chk_fail
mov	edx, esi
mov	eax, ebx
call	sub_67CE94AC
mov	[esp+7Ch+var_7C], ebx
call	purple_xfer_unref
jmp	loc_67CEA836
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_xfer_request_accepted
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEAAB8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	ebx, [esp+60h]
mov	esi, [esp+64h]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_xfer_get_type
mov	edi, eax
lea	eax, [esp+28h]
mov	[esp+4], eax
mov	[esp], esi
call	g_stat
test	eax, eax
jz	short loc_67CEAB10
cmp	edi, 2
jz	short loc_67CEAB4C
mov	edx, esi
mov	eax, ebx
call	sub_67CE94AC
mov	[esp], ebx
call	purple_xfer_cancel_local
jmp	short loc_67CEAB2A
align 10h
cmp	edi, 1
jz	short loc_67CEAB84
cmp	edi, 2
jz	loc_67CEAC14
			
mov	[esp+4], esi
mov	[esp], ebx
call	purple_xfer_request_accepted
			
mov	[esp], ebx
call	purple_xfer_unref
mov	eax, [esp+4Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEAD8A
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp], esi
call	g_path_get_dirname
mov	edi, eax
mov	dword ptr [esp+4], 0
mov	[esp], eax
call	g_access
test	eax, eax
jnz	loc_67CEACCC
mov	[esp+4], esi
mov	[esp], ebx
call	purple_xfer_request_accepted
mov	[esp], edi
call	g_free
jmp	short loc_67CEAB2A
mov	edi, [esp+3Ch]
test	edi, edi
jz	loc_67CEAD24
mov	ax, [esp+2Eh]
and	eax, 0FFFFF000h
cmp	ax, 4000h
jz	loc_67CEAD80
mov	dword ptr [esp+4], 0
mov	[esp], esi
call	g_access
test	eax, eax
jz	loc_67CEAB1E
mov	[esp], ebx
call	purple_xfer_ref
mov	dword ptr [esp+4], offset aFileIsNotReada 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+18h], ebx
mov	dword ptr [esp+14h], offset sub_67CE80B0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	dword ptr [esp], 0
call	purple_notify_message
jmp	loc_67CEAB2A
align 4
mov	ax, [esp+2Eh]
and	eax, 0FFFFF000h
cmp	ax, 4000h
jnz	loc_67CEAB1E
mov	dword ptr [esp+10h], 0
mov	dword ptr [esp+0Ch], 0
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0FFFFFFFFh
mov	[esp], esi
call	g_filename_to_utf8_utf8
mov	edi, eax
mov	dword ptr [esp+4], offset aSIsNotARegular 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+4], edi
mov	[esp], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp], edi
call	g_free
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], esi
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	dword ptr [esp], 0
call	purple_notify_message
mov	[esp], esi
call	g_free
mov	[esp], ebx
call	purple_xfer_request_denied
jmp	loc_67CEAB2A
align 4
mov	[esp], ebx
call	purple_xfer_ref
mov	dword ptr [esp+4], offset aDirectoryIsNot 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	[esp+18h], ebx
mov	dword ptr [esp+14h], offset sub_67CE80B0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	dword ptr [esp], 0
call	purple_notify_message
jmp	loc_67CEAB7A
align 4
mov	dword ptr [esp+4], offset aCannotSendAFil 
mov	dword ptr [esp], offset	aPidgin_6 
call	libintl_dgettext
mov	dword ptr [esp+18h], 0
mov	dword ptr [esp+14h], 0
mov	dword ptr [esp+10h], 0
mov	[esp+0Ch], eax
mov	dword ptr [esp+8], 0
mov	dword ptr [esp+4], 0
mov	dword ptr [esp], 0
call	purple_notify_message
mov	[esp], ebx
call	purple_xfer_cancel_local
jmp	loc_67CEAB2A
align 10h
mov	dword ptr [esp+4], offset aCannotSendADir 
jmp	short loc_67CEAD2C
call	__stack_chk_fail
align 10h
public purple_xfer_request
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CEB04C
mov	ebp, [ebx+50h]
test	ebp, ebp
jz	loc_67CEB070
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_ref
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_type
cmp	eax, 2
jz	short loc_67CEADF4
mov	[esp+7Ch+Time],	ebx
call	sub_67CE80B0
			
mov	eax, [esp+7Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEB2B4
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset aFileRecvReques 
mov	[esp+7Ch+Time],	offset dword_67D72160
call	purple_signal_emit
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_status
mov	[esp+7Ch+Time],	ebx
cmp	eax, 5
jz	loc_67CEB094
call	purple_xfer_get_filename
test	eax, eax
jz	loc_67CEB0A0
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
mov	esi, eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_filename
mov	edi, eax
test	esi, esi
jz	loc_67CEB044
mov	[esp+7Ch+Time],	esi
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+7Ch+var_78], offset aSIsOfferingToS 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+Time],	1
xor	ecx, ecx
mov	edx, eax
mov	eax, ebx
call	sub_67CE92B4
mov	[esp+7Ch+Time],	esi
call	g_free
mov	eax, [ebx+18h]
test	eax, eax
jnz	loc_67CEADD9
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_status
cmp	eax, 2
jz	loc_67CEADD1
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
mov	esi, eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_filename
test	eax, eax
jz	loc_67CEB1ED
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_size
mov	[esp+7Ch+Time],	eax
call	purple_str_size_to_units
mov	edi, eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_filename
mov	ebp, eax
test	esi, esi
jz	loc_67CEB226
mov	[esp+7Ch+Time],	esi
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+7Ch+var_78], offset aSWantsToSendYo 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_70], edi
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+Time],	edi
call	g_free
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CEAF87
mov	[esp+7Ch+Time],	0 
call	time
mov	edx, eax
mov	ebp, [ebx+10h]
mov	edi, [ebx+0Ch]
mov	eax, [ebx+8]
mov	[esp+7Ch+Time],	eax
mov	[esp+7Ch+var_30], edx
call	purple_account_get_connection
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_6C], edx
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], edi
mov	[esp+7Ch+Time],	eax
call	serv_got_im
lea	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_thumbnail
mov	edi, eax
mov	[esp+7Ch+var_78], offset a_cancel_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
test	eax, eax
jz	loc_67CEB22E
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset a_accept_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_40], offset sub_67CE9CC8
mov	[esp+7Ch+var_44], ebp
mov	[esp+7Ch+var_48], offset sub_67CE80B0
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_50], 2
mov	[esp+7Ch+var_54], ebx
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_58], eax
mov	[esp+7Ch+var_5C], edi
mov	[esp+7Ch+var_60], 0
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_64], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], 0FFFFFFFFh
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+Time],	ebx
call	purple_request_action_with_icon
			
mov	[esp+7Ch+Time],	esi
call	g_free
jmp	loc_67CEADD9
align 4
mov	esi, [ebx+0Ch]
jmp	loc_67CEAE5D
mov	[esp+7Ch+var_74], offset aXferNull 
mov	[esp+7Ch+var_78], offset aPurple_xfer_36 
mov	[esp+7Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CEADD9
align 10h
mov	[esp+7Ch+var_74], offset aXferOps_initNu 
mov	[esp+7Ch+var_78], offset aPurple_xfer_36 
mov	[esp+7Ch+Time],	0
call	g_return_if_fail_warning
jmp	loc_67CEADD9
align 4
call	purple_xfer_cancel_local
jmp	loc_67CEADD9
align 10h
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_status
cmp	eax, 2
jz	loc_67CEAE2D
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_78], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67CEB1E5
mov	[esp+7Ch+Time],	eax
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+7Ch+var_78], offset aAcceptFileTran 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_remote_ip
test	eax, eax
jz	short loc_67CEB113
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_remote_port
test	eax, eax
jnz	loc_67CEB1A6
xor	esi, esi
mov	[esp+7Ch+var_78], offset a_cancel_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	ebp, eax
mov	[esp+7Ch+var_78], offset a_accept_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset sub_67CE9C8C
mov	[esp+7Ch+var_4C], ebp
mov	[esp+7Ch+var_50], offset sub_67CEAA84
mov	[esp+7Ch+var_54], eax
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], ebx
mov	[esp+7Ch+var_60], 0
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_64], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], 0FFFFFFFFh
mov	[esp+7Ch+var_70], esi
mov	[esp+7Ch+var_74], edi
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+Time],	ebx
call	purple_request_action
mov	[esp+7Ch+Time],	edi
call	g_free
jmp	loc_67CEB035
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_remote_port
mov	ebp, eax
mov	[esp+7Ch+Time],	ebx
call	purple_xfer_get_remote_ip
mov	esi, eax
mov	[esp+7Ch+var_78], offset aAFileIsAvailab 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_67CEB115
mov	esi, [ebx+0Ch]
jmp	loc_67CEB0D5
test	esi, esi
jz	loc_67CEB2AC
mov	[esp+7Ch+Time],	esi
call	purple_buddy_get_alias
mov	esi, eax
mov	[esp+7Ch+var_78], offset aSWantsToSend_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_78], esi
mov	[esp+7Ch+Time],	eax
call	g_strdup_printf
mov	esi, eax
jmp	loc_67CEAF3D
mov	esi, [ebx+0Ch]
jmp	loc_67CEAF0B
call	libintl_dgettext
mov	edi, eax
mov	[esp+7Ch+var_78], offset a_accept_0 
mov	[esp+7Ch+Time],	offset aPidgin_6 
call	libintl_dgettext
mov	[esp+7Ch+var_48], offset sub_67CE9CC8
mov	[esp+7Ch+var_4C], edi
mov	[esp+7Ch+var_50], offset sub_67CE80B0
mov	[esp+7Ch+var_54], eax
mov	[esp+7Ch+var_58], 2
mov	[esp+7Ch+var_5C], ebx
mov	[esp+7Ch+var_60], 0
mov	eax, [ebx+0Ch]
mov	[esp+7Ch+var_64], eax
mov	eax, [ebx+8]
mov	[esp+7Ch+var_68], eax
mov	[esp+7Ch+var_6C], 0FFFFFFFFh
mov	[esp+7Ch+var_70], 0
mov	[esp+7Ch+var_74], esi
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+Time],	ebx
call	purple_request_action
jmp	loc_67CEB035
mov	esi, [ebx+0Ch]
jmp	loc_67CEB1FF
call	__stack_chk_fail
align 4
public purple_xfer_get_thumbnail_mimetype
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEB2F2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_xfer_set_thumbnail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D7215C
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	ebx, eax
mov	eax, [eax+8]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_3C], eax
call	g_free
test	edi, edi
jz	short loc_67CEB34B
test	esi, esi
jnz	short loc_67CEB374
mov	dword ptr [ebx+8], 0
mov	dword ptr [ebx+0Ch], 0
mov	dword ptr [ebx+10h], 0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB393
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	g_memdup
mov	[ebx+8], eax
mov	[ebx+0Ch], esi
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx+10h], eax
jmp	short loc_67CEB360
call	__stack_chk_fail
public purple_xfer_prepare_thumbnail
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+74h]
mov	eax, [eax+24h]
test	eax, eax
jz	short loc_67CEB3D4
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CEB3E5
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 18h
pop	ebx
jmp	eax
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB3E5
add	esp, 18h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_xfers_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72160
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEB40F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_xfers_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_30], offset sub_67CE7B48
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset loc_67D2EBBC
mov	[esp+3Ch+var_3C], offset g_direct_hash
call	g_hash_table_new_full
mov	ds:dword_67D7215C, eax
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileRecvAccept 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileSendAccept 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileRecvStart	
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileSendStart	
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileSendCancel 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileRecvCancel 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileSendComple 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileRecvComple 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	[esp+3Ch+var_38], 0Eh
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aFileRecvReques 
mov	[esp+3Ch+var_3C], offset dword_67D72160
call	purple_signal_register
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB6BF
add	esp, 3Ch
retn
call	__stack_chk_fail
public purple_xfers_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D72160
call	purple_signals_disconnect_by_handle
mov	[esp+2Ch+var_2C], offset dword_67D72160
call	purple_signals_unregister_by_instance
mov	eax, ds:dword_67D7215C
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_67D7215C, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB711
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_xfers_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72158, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB73F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_xfers_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72158
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEB767
add	esp, 1Ch
retn
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_presence
mov	esi, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72178
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72178, eax
mov	[esp+2Ch+var_2C], esi
call	purple_presence_is_idle
test	eax, eax
jz	short loc_67CEB7E2
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_username
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSettingSUnidle 
mov	[esp+2Ch+var_2C], offset aIdle 
call	purple_debug_info
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	purple_presence_set_idle
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEB7F4
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+Time],	offset aPurpleAwayMins 
call	purple_prefs_get_int
lea	eax, [eax+eax*2]
lea	ebx, [eax+eax*4]
shl	ebx, 2
call	purple_blist_get_handle
mov	[esp+3Ch+var_38], offset aUpdateIdle_0 
mov	[esp+3Ch+Time],	eax
call	purple_signal_emit
mov	[esp+3Ch+Time],	offset aPurpleAwayIdle 
call	purple_prefs_get_string
mov	esi, eax
mov	[esp+3Ch+Time],	offset aPurpleAwayAway 
call	purple_prefs_get_bool
mov	edi, eax
mov	[esp+3Ch+var_38], offset aSystem 
mov	[esp+3Ch+Time],	esi
call	purple_strequal
test	eax, eax
jz	loc_67CEB90C
mov	eax, ds:dword_67D72174
test	eax, eax
jz	loc_67CEB90C
mov	eax, [eax]
test	eax, eax
jz	loc_67CEB90C
call	eax
mov	esi, eax
mov	edx, 1
mov	ebp, 1
			
mov	eax, ebx
sub	eax, esi
js	loc_67CEB954
mov	ds:dword_67D72170, eax
test	edi, edi
jnz	loc_67CEB962
mov	eax, ds:dword_67D72168
test	eax, eax
jnz	short loc_67CEB8C6
mov	[esp+3Ch+Time],	offset aPurpleAwayMins 
call	purple_prefs_get_int
lea	eax, [eax+eax*2]
lea	edi, [eax+eax*4]
shl	edi, 2
			
call	purple_savedstatus_is_idleaway
test	eax, eax
jz	short loc_67CEB8D7
cmp	esi, edi
jl	loc_67CEBAAC
			
test	ebp, ebp
jz	short loc_67CEB8EB
cmp	esi, ebx
jl	short loc_67CEB8EB
jmp	loc_67CEBA0D
mov	eax, [eax]
call	sub_67CEB76C
			
mov	eax, ds:dword_67D72178
test	eax, eax
jnz	short loc_67CEB8E4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEBAD8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+3Ch+var_38], offset aPurple_0 
mov	[esp+3Ch+Time],	esi
call	purple_strequal
test	eax, eax
jnz	loc_67CEB9B8
test	edi, edi
jz	short loc_67CEB99C
mov	eax, ds:dword_67D72174
test	eax, eax
jz	loc_67CEB9F0
mov	eax, [eax]
test	eax, eax
jz	loc_67CEB9F0
call	eax
mov	esi, eax
mov	edx, 1
xor	ebp, ebp
mov	eax, ebx
sub	eax, esi
jns	loc_67CEB89B
mov	ds:dword_67D72170, edx
test	edi, edi
jz	loc_67CEB8A8
mov	[esp+3Ch+Time],	offset aPurpleAwayMins 
call	purple_prefs_get_int
lea	eax, [eax+eax*2]
lea	edi, [eax+eax*4]
shl	edi, 2
cmp	esi, edi
jle	loc_67CEB8C6
mov	[esp+3Ch+Time],	1
call	purple_savedstatus_set_idleaway
mov	ds:dword_67D72168, 0
jmp	loc_67CEB8D7
align 4
mov	edx, ds:dword_67D72168
test	edx, edx
jz	short loc_67CEB9D8
mov	ds:dword_67D72170, 0
jmp	loc_67CEB8F4
align 4
mov	[esp+3Ch+Time],	0 
call	time
mov	esi, eax
sub	esi, ds:Time
xor	edx, edx
mov	ebp, 1
jmp	loc_67CEB891
mov	ds:dword_67D72168, 1
mov	[esp+3Ch+Time],	0
call	purple_savedstatus_set_idleaway
jmp	short loc_67CEB9A6
			
mov	[esp+3Ch+Time],	0 
call	time
mov	esi, eax
sub	esi, ds:Time
xor	edx, edx
xor	ebp, ebp
jmp	loc_67CEB891
call	purple_connections_get_all
mov	ebx, eax
test	eax, eax
jz	loc_67CEB8F4
mov	eax, [ebx]
mov	[esp+3Ch+Time],	eax
call	purple_connection_get_account
mov	edi, eax
mov	[esp+3Ch+Time],	eax
call	purple_account_get_presence
mov	ebp, eax
mov	[esp+3Ch+Time],	eax
call	purple_presence_is_idle
test	eax, eax
jnz	short loc_67CEBA9A
mov	[esp+3Ch+Time],	edi
call	purple_account_get_username
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aSettingSIdleDS 
mov	[esp+3Ch+Time],	offset aIdle 
call	purple_debug_info
mov	[esp+3Ch+Time],	0 
call	time
sub	eax, esi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+Time],	ebp
call	purple_presence_set_idle
mov	[esp+3Ch+var_38], edi
mov	eax, ds:dword_67D72178
mov	[esp+3Ch+Time],	eax
call	g_list_prepend
mov	ds:dword_67D72178, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	loc_67CEBA1C
jmp	loc_67CEB8F4
align 4
mov	[esp+3Ch+Time],	0
call	purple_savedstatus_set_idleaway
mov	eax, ds:dword_67D72170
sub	edi, esi
test	eax, eax
jnz	short loc_67CEBACE
mov	ds:dword_67D72170, edi
jmp	loc_67CEB8D7
cmp	eax, edi
jle	loc_67CEB8D7
jmp	short loc_67CEBAC3
call	__stack_chk_fail
align 10h
			
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67CEB7FC
mov	eax, ds:dword_67D72170
test	eax, eax
jnz	short loc_67CEBB18
mov	ds:dword_67D7216C, 0
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEBB3A
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CEBAE0
add	eax, 2
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_add_seconds
mov	ds:dword_67D7216C, eax
jmp	short loc_67CEBB06
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7216C
test	eax, eax
jz	short loc_67CEBB5F
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D7216C, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBB7D
add	esp, 2Ch
jmp	sub_67CEBAE0
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBBA6
add	esp, 1Ch
jmp	sub_67CEB7FC
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBBCE
add	esp, 1Ch
jmp	sub_67CEB7FC
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEBC02
add	esp, 2Ch
jmp	sub_67CEB76C
call	__stack_chk_fail
align 4
public purple_idle_touch
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+Time],	offset Time 
call	time
mov	ecx, ds:dword_67D72168
test	ecx, ecx
jnz	short loc_67CEBC54
mov	eax, ds:dword_67D7216C
test	eax, eax
jnz	short loc_67CEBC64
mov	ds:dword_67D7216C, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBC6E
add	esp, 2Ch
jmp	sub_67CEBAE0
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBC6E
add	esp, 2Ch
retn
mov	[esp+2Ch+Time],	eax
call	purple_timeout_remove
jmp	short loc_67CEBC35
			
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleAwayMins 
call	purple_prefs_get_int
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CEBAE0
lea	eax, [eax+eax*2]
lea	eax, [eax+eax*4]
lea	eax, ds:2[eax*4]
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_add_seconds
mov	ds:dword_67D7216C, eax
call	purple_idle_touch
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEBCCF
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_idle_set
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:Time, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBCFB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_idle_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72174, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBD27
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_idle_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72174
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEBD4F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_idle_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	purple_conversations_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CEBBAC
mov	[esp+3Ch+var_34], offset dword_67D7217C
mov	[esp+3Ch+var_38], offset aSentImMsg_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
call	purple_connections_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CEBB84
mov	[esp+3Ch+var_34], offset dword_67D7217C
mov	[esp+3Ch+var_38], offset aSigningOn_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
call	purple_connections_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CEBBD4
mov	[esp+3Ch+var_34], offset dword_67D7217C
mov	[esp+3Ch+var_38], offset aSigningOff_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset sub_67CEBB40
mov	[esp+3Ch+var_38], offset aPurpleAwayIdle 
mov	[esp+3Ch+var_3C], offset dword_67D7217C
call	purple_prefs_connect_callback
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset sub_67CEBC74
mov	[esp+3Ch+var_3C], 0
call	purple_timeout_add
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBE39
add	esp, 3Ch
retn
call	__stack_chk_fail
align 10h
public purple_idle_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D7217C
call	purple_signals_disconnect_by_handle
mov	[esp+2Ch+var_2C], offset dword_67D7217C
call	purple_prefs_disconnect_by_handle
mov	eax, ds:dword_67D7216C
test	eax, eax
jz	short loc_67CEBE77
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D7216C, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEBE91
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_imgstore_add
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CEBF20
test	edi, edi
jnz	short loc_67CEBEF4
mov	[esp+3Ch+var_34], offset aSize0_0 
mov	[esp+3Ch+var_38], offset aPurple_imgstor 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEBF40
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], 14h
call	g_malloc
mov	ebx, eax
mov	[eax+10h], esi
mov	[eax+8], edi
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx+0Ch], eax
mov	byte ptr [ebx+4], 1
mov	dword ptr [ebx], 0
jmp	short loc_67CEBEDC
align 10h
mov	[esp+3Ch+var_34], offset aDataNull_0 
mov	[esp+3Ch+var_38], offset aPurple_imgstor 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CEBEDC
call	__stack_chk_fail
align 4
public purple_imgstore_new_from_file
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_1C], 0
mov	[esp+2Ch+var_14], 0
test	ebx, ebx
jz	short loc_67CEBF74
cmp	byte ptr [ebx],	0
jnz	short loc_67CEBFA4
mov	[esp+2Ch+var_24], offset aPathNullPath0	
mov	[esp+2Ch+var_28], offset aPurple_imgst_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC01A
add	esp, 28h
pop	ebx
retn
align 4
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
lea	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], eax
lea	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_file_get_contents_utf8
test	eax, eax
jz	short loc_67CEBFE4
mov	[esp+2Ch+var_24], ebx
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_add
jmp	short loc_67CEBF92
align 4
mov	eax, [esp+2Ch+var_14]
mov	eax, [eax+8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aErrorReading_2 
mov	[esp+2Ch+var_2C], offset aImgstore 
call	purple_debug_error
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_error_free
xor	eax, eax
jmp	loc_67CEBF92
call	__stack_chk_fail
align 10h
public purple_imgstore_add_with_id
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_add
mov	ebx, eax
test	eax, eax
jz	short loc_67CEC0A4
lea	esi, [esi+0]
mov	edx, ds:dword_67D72180
xchg	ax, ax
inc	edx
jz	short loc_67CEC05C
mov	ds:dword_67D72180, edx
mov	[ebx], edx
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72184
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67CEC054
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72184
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [ebx]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC0A8
add	esp, 28h
pop	ebx
retn
xor	eax, eax
jmp	short loc_67CEC093
call	__stack_chk_fail
align 10h
public purple_imgstore_find_by_id
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_20], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+3Ch+var_20]
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72184
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CEC101
mov	edx, [eax]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aRetrievedImage 
mov	[esp+3Ch+var_3C], offset aImgstore 
mov	[esp+3Ch+var_24], eax
call	purple_debug_misc
mov	eax, [esp+3Ch+var_24]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC111
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_imgstore_get_data
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEC144
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC164
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEC132
call	__stack_chk_fail
align 4
public purple_imgstore_get_size
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEC198
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC1B8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEC186
call	__stack_chk_fail
align 10h
public purple_imgstore_get_filename
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEC1EC
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC20C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEC1DA
call	__stack_chk_fail
align 4
public purple_imgstore_get_extension
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEC250
mov	edx, [eax+8]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+10h]
mov	[esp+2Ch+var_2C], eax
call	purple_util_get_image_extension
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC270
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEC23D
call	__stack_chk_fail
align 4
public purple_imgstore_ref
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEC2A4
inc	byte ptr [eax+4]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC2CA
add	esp, 3Ch
retn
align 4
mov	[esp+3Ch+var_34], offset aImgNull_0 
mov	[esp+3Ch+var_38], offset aPurple_imgst_5 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CEC292
call	__stack_chk_fail
align 10h
public purple_imgstore_ref_by_id
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_find_by_id
test	eax, eax
jz	short loc_67CEC308
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC334
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_imgstore_ref
align 4
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC334
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_imgstore_unref
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CEC362
mov	al, [ebx+4]
test	al, al
jz	short loc_67CEC378
dec	eax
mov	[ebx+4], al
test	al, al
jz	short loc_67CEC398
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC3EB
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aImgRefcount0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CEC362
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aImageDeletin_0 
mov	[esp+2Ch+var_2C], offset dword_67D72188
call	purple_signal_emit
mov	eax, [ebx]
test	eax, eax
jnz	short loc_67CEC3D8
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	ebx, ebx
jmp	short loc_67CEC362
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72184
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
jmp	short loc_67CEC3B6
call	__stack_chk_fail
public purple_imgstore_unref_by_id
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_find_by_id
test	eax, eax
jz	short loc_67CEC428
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC454
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_imgstore_unref
align 4
mov	[esp+2Ch+var_24], offset aImgNull_0 
mov	[esp+2Ch+var_28], offset aPurple_imgst_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC454
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_imgstore_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72188
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC47F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_imgstore_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 12h
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aImageDeletin_0 
mov	[esp+3Ch+var_3C], offset dword_67D72188
call	purple_signal_register
mov	[esp+3Ch+var_38], offset loc_67D2EE44
mov	[esp+3Ch+var_3C], offset g_int_hash
call	g_hash_table_new
mov	ds:dword_67D72184, eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEC4FF
add	esp, 3Ch
retn
call	__stack_chk_fail
public purple_imgstore_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72184
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_2C], offset dword_67D72188
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEC53B
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_log_compare
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_4]
mov	eax, [eax+10h]
mov	edx, [esp+1Ch+arg_0]
sub	eax, [edx+10h]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC56C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67CEC5A0
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC5A4
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67CEC590
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEC5E2
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [ecx+4]
cmp	[edx+4], ebx
jz	short loc_67CEC618
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC632
add	esp, 28h
pop	ebx
retn
mov	eax, [ecx]
mov	[esp+2Ch+var_28], eax
mov	eax, [edx]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CEC607
call	__stack_chk_fail
align 4
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC665
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_str_hash
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_34], edx
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
call	purple_user_dir
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aLogs 
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	g_dir_open_utf8
mov	[esp+4Ch+var_38], eax
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_38]
test	eax, eax
jz	loc_67CEC8BF
xchg	ax, ax
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_dir_read_name_utf8
test	eax, eax
jz	loc_67CEC850
mov	[esp+4Ch+var_4C], eax
call	purple_unescape_filename
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	esi, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
mov	ebx, ecx
not	ebx
lea	ebp, [ebx-1]
cmp	ebp, 4
jbe	loc_67CEC870
lea	edi, [esi+ebx-5]
mov	[esp+4Ch+var_48], offset a_log 
mov	[esp+4Ch+var_4C], edi
call	purple_strequal
test	eax, eax
jz	loc_67CEC870
mov	[esp+4Ch+var_4C], 14h
call	g_slice_alloc
mov	[esp+4Ch+var_3C], eax
mov	byte ptr [edi],	0
mov	dword ptr [eax], 0
cmp	ebp, 9
ja	loc_67CEC891
			
mov	eax, [esp+4Ch+var_3C]
mov	[eax+10h], esi
mov	[eax+4], esi
call	purple_blist_get_root
mov	edi, eax
test	eax, eax
jnz	short loc_67CEC78E
jmp	loc_67CEC87D
align 4
			
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_sibling_next
mov	edi, eax
test	eax, eax
jz	loc_67CEC87D
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_type
test	eax, eax
jnz	short loc_67CEC77C
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_first_child
mov	ebx, eax
test	eax, eax
jnz	short loc_67CEC7BA
jmp	short loc_67CEC77C
align 4
			
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_sibling_next
mov	ebx, eax
test	eax, eax
jz	short loc_67CEC77C
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_type
dec	eax
jnz	short loc_67CEC7AC
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_first_child
mov	ebp, eax
test	eax, eax
jz	short loc_67CEC7AC
nop
mov	[esp+4Ch+var_4C], ebp
call	purple_buddy_get_name
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
mov	[esp+4Ch+var_4C], ebp
test	eax, eax
jnz	short loc_67CEC7FC
call	purple_blist_node_get_sibling_next
mov	ebp, eax
test	eax, eax
jnz	short loc_67CEC7D4
jmp	short loc_67CEC7AC
call	purple_buddy_get_account
mov	edx, [esp+4Ch+var_3C]
mov	[edx+8], eax
mov	dword ptr [edx+0Ch], 1
mov	[esp+4Ch+var_4C], ebp
call	purple_blist_node_get_sibling_next
mov	[esp+4Ch+var_4C], ebx
call	purple_blist_node_get_sibling_next
mov	[esp+4Ch+var_4C], edi
call	purple_blist_node_get_sibling_next
mov	eax, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
mov	edx, [esp+4Ch+var_34]
call	edx
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_dir_read_name_utf8
test	eax, eax
jnz	loc_67CEC6F4
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC8D3
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_dir_close
			
mov	[esp+4Ch+var_4C], esi
call	g_free
jmp	loc_67CEC6E0
			
mov	eax, [esp+4Ch+var_3C]
mov	dword ptr [eax+8], 0
mov	dword ptr [eax+0Ch], 0
jmp	short loc_67CEC827
lea	ebx, [esi+ebx-0Ah]
mov	[esp+4Ch+var_48], offset a_chat	
mov	[esp+4Ch+var_4C], ebx
call	purple_strequal
test	eax, eax
jz	loc_67CEC75F
mov	eax, [esp+4Ch+var_3C]
mov	dword ptr [eax], 1
mov	byte ptr [ebx],	0
jmp	loc_67CEC75F
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC8D3
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_4C], eax
call	purple_normalize
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aS_log	
call	g_strdup_printf
mov	esi, eax
call	purple_user_dir
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aLogs 
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	ebx, eax
lea	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_stat
test	eax, eax
jnz	short loc_67CEC970
mov	edi, [esp+4Ch+var_20]
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, edi
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEC974
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 10h
xor	edi, edi
jmp	short loc_67CEC94A
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, eax
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CECA08
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_utf8_validate
test	eax, eax
jnz	short loc_67CEC9C4
mov	[esp+3Ch+var_3C], esi
call	purple_utf8_salvage
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	ebx, esi
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_markup_escape_text
mov	esi, eax
mov	[esp+3Ch+var_3C], ebx
call	g_free
mov	[esp+3Ch+var_3C], esi
call	purple_markup_linkify
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECA0C
add	esp, 34h
pop	ebx
pop	esi
retn
mov	ebx, esi
jmp	short loc_67CEC994
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	ebx, [eax+18h]
mov	eax, [ebx]
mov	[esp+4Ch+File],	eax
call	purple_stringref_value
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+Offset], offset aRb 
mov	[esp+4Ch+File],	eax
call	g_fopen
mov	esi, eax
test	eax, eax
jz	loc_67CECB14
mov	eax, [ebx+8]
inc	eax
mov	[esp+4Ch+File],	eax
call	g_malloc
mov	edi, eax
mov	[esp+4Ch+Origin], 0 
mov	eax, [ebx+4]
mov	[esp+4Ch+Offset], eax 
mov	[esp+4Ch+File],	esi 
call	fseek
test	eax, eax
jz	short loc_67CECAF0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Origin], eax
mov	[esp+4Ch+Offset], offset aUnableToReadFr 
mov	[esp+4Ch+File],	offset aLog 
call	purple_debug_error
mov	[esp+4Ch+File],	esi 
call	fclose
mov	eax, [ebx+8]
mov	byte ptr [edi+eax], 0
mov	dword ptr [ebp+0], 0
mov	[esp+4Ch+Offset], offset SubStr	
mov	[esp+4Ch+File],	edi 
call	strstr
test	eax, eax
jz	loc_67CECB50
mov	dword ptr [ebp+0], 1
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CECB6C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_40], esi 
mov	[esp+4Ch+Origin], 1 
mov	eax, [ebx+8]
mov	[esp+4Ch+Offset], eax 
mov	[esp+4Ch+File],	edi 
call	fread
dec	eax
jz	short loc_67CECA9E
jmp	loc_67CECA82
align 4
mov	[esp+4Ch+Origin], offset aFile 
mov	[esp+4Ch+Offset], offset aOld_logger_rea 
mov	[esp+4Ch+File],	0
call	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECB6C
mov	[esp+4Ch+arg_0], offset	byte_67D3A76C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CECB6C
xor	edx, edx
mov	eax, edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CEC97C
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+18h]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_stringref_unref
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 0Ch
call	g_slice_free1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CECBB5
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+18h]
test	ebx, ebx
jz	short loc_67CECBFF
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CECBE5
mov	[esp+2Ch+File],	eax 
call	fclose
mov	eax, [ebx]
mov	[esp+2Ch+File],	eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+File],	0Ch
call	g_slice_free1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CECC10
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+18h]
test	ebx, ebx
jz	short loc_67CECC6E
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CECC54
mov	[esp+2Ch+var_28], offset aBodyHtml 
mov	[esp+2Ch+File],	eax
call	libintl_fprintf
mov	eax, [ebx+4]
mov	[esp+2Ch+File],	eax 
call	fclose
mov	eax, [ebx]
mov	[esp+2Ch+File],	eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+File],	0Ch
call	g_slice_free1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CECC7F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+18h]
mov	eax, [esp+2Ch+arg_4]
mov	dword ptr [eax], 0
test	ebx, ebx
jz	short loc_67CECD04
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CECD04
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+Val], edx
mov	[esp+2Ch+Str], eax
call	g_file_get_contents_utf8
test	eax, eax
jz	short loc_67CECD24
mov	ebx, [esp+2Ch+var_14]
mov	[esp+2Ch+Val], 0Ah 
mov	[esp+2Ch+Str], ebx 
call	strchr
test	eax, eax
jz	short loc_67CECD48
inc	eax
mov	edx, ebx
call	sub_67CEC97C
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECD53
add	esp, 28h
pop	ebx
retn
align 4
			
mov	[esp+2Ch+Val], offset aFontColorRedBU 
mov	[esp+2Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+2Ch+Str], eax
call	g_strdup
jmp	short loc_67CECCF2
align 4
mov	ebx, [ebx]
mov	[esp+2Ch+Val], offset aFontColorRedBC 
mov	[esp+2Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+2Ch+Val], ebx
mov	[esp+2Ch+Str], eax
call	g_strdup_printf
jmp	short loc_67CECCF2
xor	edx, edx
mov	eax, ebx
call	sub_67CEC97C
jmp	short loc_67CECCF2
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [eax+18h]
mov	eax, [esp+2Ch+arg_4]
mov	dword ptr [eax], 1
test	ebx, ebx
jz	short loc_67CECDE8
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CECDE8
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+Val], edx
mov	[esp+2Ch+Str], eax
call	g_file_get_contents_utf8
test	eax, eax
jz	short loc_67CECE08
mov	ebx, [esp+2Ch+var_14]
mov	[esp+2Ch+Val], 0Ah 
mov	[esp+2Ch+Str], ebx 
call	strchr
test	eax, eax
jz	short loc_67CECDD5
inc	eax
mov	[esp+2Ch+Str], eax
call	g_strdup
mov	ebx, eax
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+Str], eax
call	g_free
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECE2E
add	esp, 28h
pop	ebx
retn
			
mov	[esp+2Ch+Val], offset aFontColorRedBU 
mov	[esp+2Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+2Ch+Str], eax
call	g_strdup
mov	ebx, eax
jmp	short loc_67CECDD5
mov	ebx, [ebx]
mov	[esp+2Ch+Val], offset aFontColorRedBC 
mov	[esp+2Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+2Ch+Val], ebx
mov	[esp+2Ch+Str], eax
call	g_strdup_printf
mov	ebx, eax
jmp	short loc_67CECDD5
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 44h
mov	ebx, eax
mov	[esp+4Ch+var_20], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
cmp	dword ptr [ebx], 2
jz	short loc_67CECEA8
mov	[esp+4Ch+Time],	0 
call	time
mov	edx, [esp+4Ch+var_20]
lea	ecx, [edx+4B0h]
cmp	eax, ecx
setnle	al
movzx	eax, al
mov	esi, eax
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], edx
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aLogTimestamp 
mov	[esp+4Ch+Time],	offset dword_67D7219C
call	purple_signal_emit_return_1
test	eax, eax
jz	short loc_67CECEB0
			
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECEE3
add	esp, 44h
pop	ebx
pop	esi
retn
align 4
mov	esi, 1
jmp	short loc_67CECE6F
align 10h
lea	eax, [esp+4Ch+var_20]
mov	[esp+4Ch+Time],	eax 
call	localtime
mov	[esp+4Ch+Time],	eax
test	esi, esi
jnz	short loc_67CECED4
call	purple_time_format
mov	[esp+4Ch+Time],	eax
call	g_strdup
jmp	short loc_67CECE93
align 4
call	purple_date_format_long
mov	[esp+4Ch+Time],	eax
call	g_strdup
jmp	short loc_67CECE93
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	g_int_hash
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_str_hash
add	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECF25
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_log_common_is_deletable
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CECF64
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67CECF84
mov	edx, [eax]
xor	eax, eax
test	edx, edx
setnz	al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CECF88
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aLogNull 
mov	[esp+2Ch+var_28], offset aPurple_log_com 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CECF53
xor	eax, eax
jmp	short loc_67CECF53
call	__stack_chk_fail
align 10h
public purple_log_common_deleter
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CED000
mov	ebx, [eax+18h]
test	ebx, ebx
jz	short loc_67CECFFC
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CECFFC
mov	[esp+2Ch+var_2C], eax
call	g_unlink
test	eax, eax
jz	short loc_67CECFF4
inc	eax
jz	short loc_67CED020
mov	eax, [ebx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aFailedToDele_0 
mov	[esp+2Ch+var_2C], offset aLog 
call	purple_debug_error
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CED051
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, 1
jmp	short loc_67CECFE0
align 4
			
xor	eax, eax
jmp	short loc_67CECFE0
mov	[esp+2Ch+var_24], offset aLogNull 
mov	[esp+2Ch+var_28], offset aPurple_log_c_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CECFE0
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	[esp+2Ch+var_20], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aFailedToDele_1 
mov	[esp+2Ch+var_2C], offset aLog 
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CECFE0
call	__stack_chk_fail
align 4
public purple_log_common_sizer
			
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_0]
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67CED0A8
mov	eax, [eax]
test	eax, eax
jz	short loc_67CED08B
lea	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	g_stat
test	eax, eax
jz	short loc_67CED0A0
xor	eax, eax
			
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CED0C8
add	esp, 4Ch
retn
align 10h
mov	eax, [esp+4Ch+var_20]
jmp	short loc_67CED08D
align 4
mov	[esp+4Ch+var_44], offset aDataNull_1 
mov	[esp+4Ch+var_48], offset aPurple_log_c_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CED08D
call	__stack_chk_fail
align 10h
public purple_log_set_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CED124
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
cmp	eax, [ebx+4]
jz	short loc_67CED102
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 14h
call	g_slice_free1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CED142
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aSetNull 
mov	[esp+2Ch+var_28], offset aPurple_log_set 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CED112
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CED1C0
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CED194
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CED1D2
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_log_set_free
align 4
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_67CED177
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_hash_table_replace
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CED1D2
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], esi
call	g_hash_table_insert
jmp	short loc_67CED1AB
			
call	__stack_chk_fail
align 4
public purple_log_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ecx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], eax
mov	esi, [esp+4Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 20h
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_34], ecx
call	g_slice_alloc
mov	ebx, eax
mov	ecx, [esp+4Ch+var_34]
mov	[eax], ecx
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebx+4], eax
mov	[ebx+8], edi
mov	[ebx+0Ch], ebp
mov	edx, [esp+4Ch+var_30]
mov	[ebx+10h], edx
mov	eax, ds:dword_67D7218C
mov	[ebx+14h], eax
mov	dword ptr [ebx+18h], 0
test	esi, esi
jz	short loc_67CED2A0
mov	[esp+4Ch+var_4C], 24h
call	g_slice_alloc
mov	[ebx+1Ch], eax
mov	ecx, 9
mov	edi, eax
rep movsd
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CED288
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CED288
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CED2A9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	dword ptr [ebx+1Ch], 0
jmp	short loc_67CED278
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 10ECh
call	sub_67D2FA40
sub	esp, eax
mov	edx, [esp+10h+arg_10F0]
mov	[esp+10h+arg_38], edx
mov	edx, [esp+10h+arg_10F4]
mov	[esp+10h+arg_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_10C8], eax
xor	eax, eax
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+Format], edx
mov	edx, [esp+10h+arg_3C]
mov	[esp+10h+FileHandle], edx
call	purple_normalize
mov	[esp+10h+Format], eax
mov	[esp+10h+FileHandle], offset aS_log 
call	g_strdup_printf
mov	ebx, eax
call	purple_user_dir
mov	[esp+10h+var_4], 0
mov	[esp+10h+File],	ebx
mov	[esp+10h+Format], offset aLogs 
mov	[esp+10h+FileHandle], eax
call	g_build_filename
mov	[esp+10h+arg_24], eax
mov	[esp+10h+FileHandle], eax
call	purple_stringref_new
mov	[esp+10h+arg_28], eax
mov	[esp+10h+arg_50], 0
mov	[esp+10h+FileHandle], ebx
call	g_free
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_value
mov	[esp+10h+File],	0
mov	[esp+10h+Format], 0
mov	[esp+10h+FileHandle], eax
call	g_open
mov	esi, eax
cmp	eax, 0FFFFFFFFh
jz	loc_67CEDB10
mov	[esp+10h+Format], offset aRb 
mov	[esp+10h+FileHandle], eax 
call	_fdopen
mov	ebp, eax
test	eax, eax
jz	loc_67CEDB10
lea	ebx, [esp+10h+arg_5C]
mov	[esp+10h+Format], ebx
mov	[esp+10h+FileHandle], esi
call	_fstat
inc	eax
jz	loc_67CEDC1B
mov	esi, [esp+10h+arg_78]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+10h+arg_24]
repne scasb
not	ecx
mov	eax, [esp+10h+arg_24]
mov	dword ptr [eax+ecx-4], 786469h
mov	[esp+10h+File],	0
mov	[esp+10h+Format], 0
mov	[esp+10h+FileHandle], eax
call	g_open
mov	edi, eax
cmp	eax, 0FFFFFFFFh
jz	loc_67CED56C
mov	[esp+10h+Format], ebx
mov	[esp+10h+FileHandle], eax
call	_fstat
test	eax, eax
jnz	loc_67CED564
cmp	esi, [esp+10h+arg_78]
jg	loc_67CED548
mov	[esp+10h+Format], offset aRb 
mov	[esp+10h+FileHandle], edi 
call	_fdopen
mov	esi, eax
test	eax, eax
jz	loc_67CEDBA2
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+File],	edx
mov	[esp+10h+Format], offset aUsingIndexS 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_info
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], eax
call	g_free
mov	[esp+10h+arg_2C], 0
lea	ebx, [esp+10h+Buf]
lea	edi, [esp+10h+arg_54]
xchg	ax, ax
			
mov	[esp+10h+File],	esi 
mov	[esp+10h+Format], 1000h	
mov	[esp+10h+FileHandle], ebx 
call	fgets
test	eax, eax
jz	loc_67CED870
lea	edx, [esp+10h+arg_58]
mov	[esp+10h], edx
mov	[esp+10h+var_4], edi
lea	eax, [esp+10h+arg_50]
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aDDLu 
mov	[esp+10h+FileHandle], ebx 
call	sscanf
cmp	eax, 3
jnz	short loc_67CED468
mov	[esp+10h+arg_0], 0
mov	dword ptr [esp+10h], 0FFFFFFFFh
mov	[esp+10h+var_4], 0
mov	edx, [esp+10h+arg_3C]
mov	[esp+10h+File],	edx
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+Format], edx
mov	[esp+10h+FileHandle], 0
call	purple_log_new
mov	edx, eax
mov	eax, ds:dword_67D721A8
mov	[edx+14h], eax
mov	eax, [esp+10h+arg_58]
mov	[edx+10h], eax
mov	[esp+10h+FileHandle], 0Ch
mov	[esp+10h+arg_18], edx
call	g_slice_alloc
mov	ecx, eax
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
mov	[esp+10h+arg_1C], ecx
call	purple_stringref_ref
mov	ecx, [esp+10h+arg_1C]
mov	[ecx], eax
mov	eax, [esp+10h+arg_50]
mov	[ecx+4], eax
mov	eax, [esp+10h+arg_54]
mov	[ecx+8], eax
mov	edx, [esp+10h+arg_18]
mov	[edx+18h], ecx
mov	[esp+10h+Format], edx
mov	eax, [esp+10h+arg_2C]
mov	[esp+10h+FileHandle], eax
call	g_list_prepend
mov	[esp+10h+arg_2C], eax
jmp	loc_67CED468
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+File],	edx
mov	[esp+10h+Format], offset aIndexSExistsBu 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_warning
mov	[esp+10h+FileHandle], edi 
call	wpurple_close
			
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+Format], edx
mov	[esp+10h+FileHandle], offset aS_xxxxxx 
call	g_strdup_printf
mov	[esp+10h+arg_34], eax
mov	[esp+10h+FileHandle], eax
call	g_mkstemp_utf8
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	loc_67CED900
mov	[esp+10h+Format], offset aWb_0 
mov	[esp+10h+FileHandle], eax 
call	_fdopen
mov	[esp+10h+arg_44], eax
test	eax, eax
jz	loc_67CEDC48
			
mov	[esp+10h+arg_2C], 0
mov	[esp+10h+arg_48], 0
mov	[esp+10h+arg_30], 0
lea	ebx, [esp+10h+Buf]
lea	eax, [esp+10h+Tm]
mov	[esp+10h+arg_20], eax
lea	esi, [esi+0]
			
mov	[esp+10h+File],	ebp 
mov	[esp+10h+Format], 1000h	
mov	[esp+10h+FileHandle], ebx 
call	fgets
test	eax, eax
jz	loc_67CED7BC
mov	[esp+10h+Format], offset aNewC 
mov	[esp+10h+FileHandle], ebx 
call	strstr
test	eax, eax
jz	short loc_67CED5E0
mov	[esp+10h+Format], 40h 
mov	[esp+10h+FileHandle], ebx 
call	strchr
mov	edx, eax
test	eax, eax
jz	short loc_67CED5E0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 1
jbe	short loc_67CED5E0
lea	edi, [edx+1]
mov	[esp+10h+Format], offset Control 
mov	[esp+10h+FileHandle], edi 
call	strcspn
mov	esi, eax
cmp	eax, 1Fh
jle	short loc_67CED658
mov	esi, 1Fh
mov	[esp+10h+FileHandle], ebp 
call	ftell
mov	[esp+10h+arg_40], eax
mov	edx, [esp+10h+arg_30]
test	edx, edx
jz	short loc_67CED6C8
mov	edx, eax
sub	edx, [esp+10h+arg_50]
sub	edx, esi
mov	[esp+10h+arg_54], edx
mov	[esp+10h+Format], offset aH3Br 
mov	[esp+10h+FileHandle], ebx 
mov	[esp+10h+arg_18], edx
call	strstr
test	eax, eax
mov	edx, [esp+10h+arg_18]
jz	loc_67CEDB96
sub	edx, 3Fh
mov	[esp+10h+arg_54], edx
mov	[esp+10h+Format], 0Dh 
mov	[esp+10h+FileHandle], ebx 
mov	[esp+10h+arg_18], edx
call	strchr
test	eax, eax
mov	edx, [esp+10h+arg_18]
jz	short loc_67CED6C0
dec	edx
mov	[esp+10h+arg_54], edx
test	edx, edx
jnz	loc_67CEDA38
			
mov	eax, [esp+10h+arg_40]
mov	[esp+10h+arg_50], eax
mov	[esp+10h+var_4], edi
mov	[esp+10h+File],	offset aS_3 
mov	[esp+10h+Format], esi
lea	edx, [esp+10h+Src]
mov	[esp+10h+FileHandle], edx
call	g_snprintf
mov	ecx, 24h
xor	eax, eax
mov	edi, [esp+10h+arg_20]
rep stosb
lea	eax, [esp+10h+Tm.tm_year]
mov	[esp+10h+arg_8], eax
lea	eax, [esp+10h+Tm]
mov	[esp+10h+arg_4], eax
lea	eax, [esp+10h+Tm.tm_min]
mov	[esp+10h+arg_0], eax
lea	eax, [esp+10h+Tm.tm_hour]
mov	[esp+10h], eax
lea	eax, [esp+10h+Tm.tm_mday]
mov	[esp+10h+var_4], eax
lea	esi, [esp+10h+arg_A4]
mov	[esp+10h+File],	esi
mov	[esp+10h+Format], offset aS3sDDDDD 
lea	edx, [esp+10h+Src]
mov	[esp+10h+FileHandle], edx 
call	sscanf
cmp	eax, 6
jz	short loc_67CED76E
mov	[esp+10h+Format], offset aInvalidDateFor 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_warning
mov	[esp+10h+Format], offset aJan 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	loc_67CED890
mov	[esp+10h+Tm.tm_mon], 0
			
sub	[esp+10h+Tm.tm_year], 76Ch
lea	eax, [esp+10h+Tm]
mov	[esp+10h+FileHandle], eax 
call	mktime
mov	[esp+10h+arg_48], eax
mov	[esp+10h+arg_30], 1
jmp	loc_67CED5E0
mov	eax, [esp+10h+arg_30]
test	eax, eax
jnz	loc_67CED94C
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_unref
mov	[esp+10h+FileHandle], ebp 
call	fclose
mov	eax, [esp+10h+arg_44]
test	eax, eax
jz	short loc_67CED84C
mov	eax, [esp+10h+arg_44]
mov	[esp+10h+FileHandle], eax 
call	fclose
mov	eax, [esp+10h+arg_34]
test	eax, eax
jz	loc_67CEDBD6
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+Format], eax
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_rename
test	eax, eax
jnz	loc_67CED8B8
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+File],	edx
mov	[esp+10h+Format], offset aBuiltIndexS 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_info
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_free
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], edx
call	g_free
			
mov	eax, [esp+10h+arg_2C]
mov	edx, [esp+10h+arg_10C8]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CEDD14
add	esp, 10ECh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+10h+FileHandle], esi 
call	fclose
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_unref
mov	[esp+10h+FileHandle], ebp 
call	fclose
jmp	short loc_67CED84C
align 10h
mov	[esp+10h+Format], offset aFeb 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	loc_67CEDB6E
mov	[esp+10h+Tm.tm_mon], 1
jmp	loc_67CED791
call	_errno
mov	eax, [eax]
mov	[esp+10h+FileHandle], eax
call	wpurple_strerror
mov	[esp+10h], eax
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+var_4], edx
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aFailedToRename 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_warning
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_unlink
jmp	loc_67CED834
call	_errno
mov	eax, [eax]
mov	[esp+10h+FileHandle], eax
call	wpurple_strerror
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aFailedToOpenIn 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_error
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], eax
call	g_free
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_free
mov	[esp+10h+arg_44], 0
jmp	loc_67CED5B3
mov	[esp+10h+FileHandle], ebp 
call	ftell
sub	eax, [esp+10h+arg_50]
mov	[esp+10h+arg_54], eax
test	eax, eax
jz	loc_67CED7C8
mov	[esp+10h+arg_0], 0
mov	dword ptr [esp+10h], 0FFFFFFFFh
mov	[esp+10h+var_4], 0
mov	edx, [esp+10h+arg_3C]
mov	[esp+10h+File],	edx
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+Format], edx
mov	[esp+10h+FileHandle], 0
call	purple_log_new
mov	esi, eax
mov	eax, ds:dword_67D721A8
mov	[esi+14h], eax
mov	eax, [esp+10h+arg_48]
mov	[esi+10h], eax
mov	[esp+10h+FileHandle], 0Ch
call	g_slice_alloc
mov	ebx, eax
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_ref
mov	[ebx], eax
mov	eax, [esp+10h+arg_50]
mov	[ebx+4], eax
mov	eax, [esp+10h+arg_54]
mov	[ebx+8], eax
mov	[esi+18h], ebx
mov	[esp+10h+Format], esi
mov	eax, [esp+10h+arg_2C]
mov	[esp+10h+FileHandle], eax
call	g_list_prepend
mov	[esp+10h+arg_2C], eax
mov	eax, [esp+10h+arg_44]
test	eax, eax
jz	loc_67CED878
mov	eax, [esi+10h]
mov	[esp+10h], eax
mov	eax, [ebx+8]
mov	[esp+10h+var_4], eax
mov	eax, [ebx+4]
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aDDLu_0 
mov	eax, [esp+10h+arg_44]
mov	[esp+10h+FileHandle], eax
call	libintl_fprintf
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_unref
mov	[esp+10h+FileHandle], ebp 
call	fclose
jmp	loc_67CED7E4
mov	[esp+10h+arg_0], 0
mov	dword ptr [esp+10h], 0FFFFFFFFh
mov	[esp+10h+var_4], 0
mov	edx, [esp+10h+arg_3C]
mov	[esp+10h+File],	edx
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+Format], edx
mov	[esp+10h+FileHandle], 0
call	purple_log_new
mov	ecx, eax
mov	eax, ds:dword_67D721A8
mov	[ecx+14h], eax
mov	eax, [esp+10h+arg_48]
mov	[ecx+10h], eax
mov	[esp+10h+FileHandle], 0Ch
mov	[esp+10h+arg_1C], ecx
call	g_slice_alloc
mov	edx, eax
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
mov	[esp+10h+arg_18], edx
call	purple_stringref_ref
mov	edx, [esp+10h+arg_18]
mov	[edx], eax
mov	eax, [esp+10h+arg_50]
mov	[edx+4], eax
mov	eax, [esp+10h+arg_54]
mov	[edx+8], eax
mov	ecx, [esp+10h+arg_1C]
mov	[ecx+18h], edx
mov	[esp+10h+Format], ecx
mov	eax, [esp+10h+arg_2C]
mov	[esp+10h+FileHandle], eax
call	g_list_prepend
mov	[esp+10h+arg_2C], eax
mov	eax, [esp+10h+arg_44]
test	eax, eax
mov	edx, [esp+10h+arg_18]
mov	ecx, [esp+10h+arg_1C]
jz	loc_67CED6C8
mov	eax, [ecx+10h]
mov	[esp+10h], eax
mov	eax, [edx+8]
mov	[esp+10h+var_4], eax
mov	eax, [edx+4]
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aDDLu_0 
mov	eax, [esp+10h+arg_44]
mov	[esp+10h+FileHandle], eax
call	libintl_fprintf
jmp	loc_67CED6C8
			
call	_errno
mov	eax, [eax]
mov	[esp+10h+FileHandle], eax
call	wpurple_strerror
mov	ebx, eax
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_value
mov	[esp+10h+var_4], ebx
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aFailedToOpenLo 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_error
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_unref
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], edx
call	g_free
mov	[esp+10h+arg_2C], 0
jmp	loc_67CED84C
mov	[esp+10h+Format], offset aMar 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	loc_67CEDCA8
mov	[esp+10h+Tm.tm_mon], 2
jmp	loc_67CED791
sub	edx, 1Ch
mov	[esp+10h+arg_54], edx
jmp	loc_67CED69F
call	_errno
mov	eax, [eax]
mov	[esp+10h+FileHandle], eax
call	wpurple_strerror
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aFailedToOpen_0 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_error
jmp	loc_67CED56C
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], edx
call	g_free
mov	[esp+10h+arg_0], offset	aOld_logger_lis	
mov	dword ptr [esp+10h], 779h
mov	[esp+10h+var_4], offset	aLog_c 
mov	[esp+10h+File],	offset aFileSLineDSS_6 
mov	[esp+10h+Format], 8
mov	[esp+10h+FileHandle], 0
call	g_log
jmp	loc_67CED84C
mov	eax, [esp+10h+arg_28]
mov	[esp+10h+FileHandle], eax
call	purple_stringref_unref
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], edx
call	g_free
mov	[esp+10h+FileHandle], ebp 
call	fclose
mov	[esp+10h+arg_2C], 0
jmp	loc_67CED84C
call	_errno
mov	eax, [eax]
mov	[esp+10h+FileHandle], eax
call	wpurple_strerror
mov	[esp+10h+File],	eax
mov	[esp+10h+Format], offset aFailedToFdopen 
mov	[esp+10h+FileHandle], offset aLog 
call	purple_debug_error
mov	[esp+10h+FileHandle], ebx 
call	wpurple_close
mov	ecx, [esp+10h+arg_34]
test	ecx, ecx
jz	short loc_67CEDC97
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_unlink
mov	eax, [esp+10h+arg_34]
mov	[esp+10h+FileHandle], eax
call	g_free
mov	edx, [esp+10h+arg_24]
mov	[esp+10h+FileHandle], edx
call	g_free
jmp	loc_67CED5B3
mov	[esp+10h+Format], offset aApr 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDCCC
mov	[esp+10h+Tm.tm_mon], 3
jmp	loc_67CED791
mov	[esp+10h+Format], offset aMay 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDCF0
mov	[esp+10h+Tm.tm_mon], 4
jmp	loc_67CED791
mov	[esp+10h+Format], offset aJun 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDD19
mov	[esp+10h+Tm.tm_mon], 5
jmp	loc_67CED791
call	__stack_chk_fail
mov	[esp+10h+Format], offset aJul 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDD3D
mov	[esp+10h+Tm.tm_mon], 6
jmp	loc_67CED791
mov	[esp+10h+Format], offset aAug 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDD61
mov	[esp+10h+Tm.tm_mon], 7
jmp	loc_67CED791
mov	[esp+10h+Format], offset aSep 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDD85
mov	[esp+10h+Tm.tm_mon], 8
jmp	loc_67CED791
mov	[esp+10h+Format], offset aOct 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDDA9
mov	[esp+10h+Tm.tm_mon], 9
jmp	loc_67CED791
mov	[esp+10h+Format], offset aNov 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CEDDCD
mov	[esp+10h+Tm.tm_mon], 0Ah
jmp	loc_67CED791
mov	[esp+10h+Format], offset aDec 
mov	[esp+10h+FileHandle], esi
call	purple_strequal
test	eax, eax
jz	loc_67CED791
mov	[esp+10h+Tm.tm_mon], 0Bh
jmp	loc_67CED791
align 4
public purple_log_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CEDE68
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67CEDE22
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CEDE22
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_67CEDE44
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 24h
call	g_slice_free1
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], 20h
call	g_slice_free1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEDE86
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aLog 
mov	[esp+2Ch+var_28], offset aPurple_log_fre 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEDE54
call	__stack_chk_fail
align 4
public purple_log_write
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	ecx, [esp+5Ch+arg_8]
mov	ebx, [esp+5Ch+arg_C]
mov	edi, [esp+5Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CEDFEC
mov	eax, [esi+14h]
test	eax, eax
jz	loc_67CEE010
mov	eax, [eax+0Ch]
test	eax, eax
jz	loc_67CEE034
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], esi
call	eax
mov	ebp, eax
mov	[esp+5Ch+var_5C], 8
call	g_malloc
mov	ebx, eax
mov	eax, [esi+4]
mov	[esp+5Ch+var_58], eax
mov	eax, [esi+8]
mov	[esp+5Ch+var_5C], eax
call	purple_normalize
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	[ebx], eax
mov	eax, [esi+8]
mov	[ebx+4], eax
lea	edi, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72190
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup_extended
test	eax, eax
jnz	short loc_67CEDFA4
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72194
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup_extended
test	eax, eax
jnz	short loc_67CEDF88
mov	eax, [ebx]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEE055
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
add	ebp, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72194
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_replace
jmp	short loc_67CEDF6F
align 4
mov	edx, [ebx]
mov	eax, [esp+5Ch+var_24]
add	eax, ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72190
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_30], edx
call	g_hash_table_replace
mov	[esp+5Ch+var_5C], 8
call	g_malloc
mov	ebx, eax
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[ebx], eax
mov	eax, [esi+8]
mov	[ebx+4], eax
jmp	loc_67CEDF3C
mov	[esp+5Ch+var_54], offset aLog 
mov	[esp+5Ch+var_58], offset aPurple_log_wri 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67CEDF6F
align 10h
mov	[esp+5Ch+var_54], offset aLogLogger 
mov	[esp+5Ch+var_58], offset aPurple_log_wri 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67CEDF6F
align 4
mov	[esp+5Ch+var_54], offset aLogLoggerWrite 
mov	[esp+5Ch+var_58], offset aPurple_log_wri 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67CEDF6F
call	__stack_chk_fail
align 4
public purple_log_read
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CEE0BC
mov	ecx, [eax+14h]
test	ecx, ecx
jz	short loc_67CEE0BC
mov	ecx, [ecx+18h]
test	ecx, ecx
jz	short loc_67CEE0E4
test	edx, edx
jz	short loc_67CEE0DC
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	ecx
mov	[esp+3Ch+var_38], 0Dh
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	purple_str_strip_char
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE102
add	esp, 3Ch
retn
align 4
			
mov	[esp+3Ch+var_34], offset aLogLogLogger 
mov	[esp+3Ch+var_38], offset aPurple_log_rea 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEE0AA
lea	edx, [esp+3Ch+var_14]
jmp	short loc_67CEE089
align 4
mov	[esp+3Ch+var_38], offset aBFontColorRedT 
mov	[esp+3Ch+var_3C], offset aPidgin_7 
call	libintl_dgettext
mov	[esp+3Ch+var_3C], eax
call	g_strdup
jmp	short loc_67CEE0AA
call	__stack_chk_fail
align 4
public purple_log_get_size
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEE144
mov	edx, [eax+14h]
test	edx, edx
jz	short loc_67CEE144
mov	edx, [edx+1Ch]
test	edx, edx
jz	short loc_67CEE160
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CEE172
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
			
mov	[esp+2Ch+var_24], offset aLogLogLogger 
mov	[esp+2Ch+var_28], offset aPurple_log_get 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE172
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_log_get_total_size
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], 8
call	g_malloc
mov	[esp+5Ch+var_30], eax
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	purple_normalize
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	edx, [esp+5Ch+var_30]
mov	[edx], eax
mov	eax, [esp+5Ch+var_3C]
mov	[edx+4], eax
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], edx
mov	eax, ds:dword_67D72190
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup_extended
test	eax, eax
jnz	loc_67CEE2DC
mov	esi, ds:dword_67D72198
test	esi, esi
jz	loc_67CEE300
mov	[esp+5Ch+var_40], 0
jmp	short loc_67CEE240
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	eax
add	[esp+5Ch+var_40], eax
mov	esi, [esi+4]
test	esi, esi
jz	short loc_67CEE2A5
			
mov	edx, [esi]
mov	eax, [edx+20h]
test	eax, eax
jnz	short loc_67CEE21C
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67CEE239
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], edx
call	eax
mov	edi, eax
xor	ebx, ebx
test	eax, eax
jz	short loc_67CEE29A
lea	esi, [esi+0]
mov	ebp, [edi]
mov	[esp+5Ch+var_5C], ebp
call	purple_log_get_size
add	ebx, eax
mov	[esp+5Ch+var_5C], ebp
call	purple_log_free
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], edi
call	g_list_delete_link
mov	edi, eax
test	eax, eax
jnz	short loc_67CEE274
add	[esp+5Ch+var_40], ebx
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CEE240
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D72190
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_replace
mov	eax, [esp+5Ch+var_40]
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE30C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_40], eax
mov	edx, [esp+5Ch+var_30]
mov	eax, [edx]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	short loc_67CEE2C2
xor	eax, eax
mov	[esp+5Ch+var_40], 0
jmp	short loc_67CEE2A9
call	__stack_chk_fail
align 4
public purple_log_get_activity_score
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_3C], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_40], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
lea	eax, [esp+5Ch+Time1]
mov	[esp+5Ch+Time],	eax 
call	time
mov	[esp+5Ch+Time],	8
call	g_malloc
mov	[esp+5Ch+var_38], eax
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+Time+4], edx
mov	edx, [esp+5Ch+var_44]
mov	[esp+5Ch+Time],	edx
call	purple_normalize
mov	[esp+5Ch+Time],	eax
call	g_strdup
mov	edx, [esp+5Ch+var_38]
mov	[edx], eax
mov	eax, [esp+5Ch+var_44]
mov	[edx+4], eax
lea	eax, [esp+5Ch+var_28]
mov	dword ptr [esp+5Ch+var_54+4], eax
mov	dword ptr [esp+5Ch+var_54], 0
mov	[esp+5Ch+Time+4], edx
mov	eax, ds:dword_67D72194
mov	[esp+5Ch+Time],	eax
call	g_hash_table_lookup_extended
test	eax, eax
jnz	loc_67CEE4B8
mov	ebx, ds:dword_67D72198
test	ebx, ebx
jz	loc_67CEE4D8
fldz
fstp	[esp+5Ch+var_4C]
mov	eax, [ebx]
mov	eax, [eax+14h]
test	eax, eax
jz	loc_67CEE450
mov	edx, [esp+5Ch+var_44]
mov	dword ptr [esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+Time+4], edx
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Time],	edx
call	eax
mov	esi, eax
test	eax, eax
jz	short loc_67CEE450
mov	edi, [esi]
mov	[esp+5Ch+Time],	edi
call	purple_log_get_size
mov	ebp, eax
mov	eax, [edi+10h]
mov	[esp+5Ch+Time+4], eax 
mov	eax, [esp+5Ch+Time1]
mov	[esp+5Ch+Time],	eax 
call	difftime
fdiv	ds:flt_67D3B2D8
fstp	[esp+5Ch+var_54]
mov	[esp+5Ch+Time],	0
mov	[esp+5Ch+Time+4], 3FE00000h
call	pow
push	ebp
fimul	[esp+60h+var_60]
pop	ebp
fadd	[esp+5Ch+var_4C]
fstp	[esp+5Ch+var_4C]
mov	[esp+5Ch+Time],	edi
call	purple_log_free
mov	[esp+5Ch+Time+4], esi
mov	[esp+5Ch+Time],	esi
call	g_list_delete_link
mov	esi, eax
test	eax, eax
jnz	short loc_67CEE3EC
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	loc_67CEE3C0
fld	[esp+5Ch+var_4C]
fstp	qword ptr [esp+5Ch+Time]
call	ceil
fnstcw	[esp+5Ch+var_2E]
mov	ax, [esp+5Ch+var_2E]
mov	ah, 0Ch
mov	[esp+5Ch+var_30], ax
fldcw	[esp+5Ch+var_30]
fistp	[esp+5Ch+var_34]
fldcw	[esp+5Ch+var_2E]
mov	ebx, [esp+5Ch+var_34]
mov	eax, ebx
mov	dword ptr [esp+5Ch+var_54], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Time+4], eax
mov	eax, ds:dword_67D72194
mov	[esp+5Ch+Time],	eax
call	g_hash_table_replace
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE4DE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebx, [esp+5Ch+var_28]
mov	edx, [esp+5Ch+var_38]
mov	eax, [edx]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Time],	eax
call	g_free
jmp	short loc_67CEE4A2
xor	eax, eax
xor	ebx, ebx
jmp	short loc_67CEE489
call	__stack_chk_fail
align 4
public purple_log_is_deletable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEE540
mov	edx, [eax+14h]
test	edx, edx
jz	short loc_67CEE560
mov	ecx, [edx+2Ch]
test	ecx, ecx
jz	short loc_67CEE580
mov	edx, [edx+30h]
test	edx, edx
jz	short loc_67CEE528
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CEE584
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE584
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aLogNull 
mov	[esp+2Ch+var_28], offset aPurple_log_is_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEE52D
mov	[esp+2Ch+var_24], offset aLogLoggerNull	
mov	[esp+2Ch+var_28], offset aPurple_log_is_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CEE52D
xor	eax, eax
jmp	short loc_67CEE52D
			
call	__stack_chk_fail
align 4
public purple_log_delete
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEE5F8
mov	edx, [eax+14h]
test	edx, edx
jz	short loc_67CEE5C8
mov	edx, [edx+2Ch]
test	edx, edx
jz	short loc_67CEE5E4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CEE616
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aLogLoggerNull	
mov	[esp+2Ch+var_28], offset aPurple_log_del 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE616
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aLogNull 
mov	[esp+2Ch+var_28], offset aPurple_log_del 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEE5E4
			
call	__stack_chk_fail
align 4
public purple_log_get_log_dir
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], edx
mov	ebx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_protocol_id
mov	[esp+5Ch+var_5C], eax
call	purple_find_prpl
test	eax, eax
jz	loc_67CEE748
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], ebx
call	dword ptr [eax+28h]
mov	ebp, eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_username
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_normalize
mov	[esp+5Ch+var_5C], eax
call	purple_escape_filename
mov	[esp+5Ch+var_5C], eax
call	g_strdup
mov	esi, eax
cmp	edi, 1
jz	short loc_67CEE70C
cmp	edi, 2
jz	short loc_67CEE704
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebx
call	purple_normalize
mov	[esp+5Ch+var_5C], eax
call	purple_escape_filename
mov	ebx, eax
			
call	purple_user_dir
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aLogs 
mov	[esp+5Ch+var_5C], eax
call	g_build_filename
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE74C
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebx, offset a_system 
jmp	short loc_67CEE6B6
align 4
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], ebx
call	purple_normalize
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aS_chat 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_5C], eax
call	purple_escape_filename
mov	ebx, eax
mov	[esp+5Ch+var_5C], edi
call	g_free
jmp	loc_67CEE6B6
align 4
xor	eax, eax
jmp	short loc_67CEE6EF
call	__stack_chk_fail
align 4
public purple_log_logger_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67CEE88C
test	ebp, ebp
jz	loc_67CEE8AC
test	esi, esi
jle	loc_67CEE86C
mov	[esp+3Ch+var_3C], 44h
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+4], eax
mov	[esp+3Ch+var_3C], ebp
call	g_strdup
mov	[ebx], eax
mov	eax, [esp+3Ch+arg_C]
mov	[ebx+8], eax
cmp	esi, 1
jz	loc_67CEE855
mov	eax, [esp+3Ch+arg_10]
mov	[ebx+0Ch], eax
cmp	esi, 2
jz	loc_67CEE855
mov	eax, [esp+3Ch+arg_14]
mov	[ebx+10h], eax
cmp	esi, 3
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_18]
mov	[ebx+14h], eax
cmp	esi, 4
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_1C]
mov	[ebx+18h], eax
cmp	esi, 5
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_20]
mov	[ebx+1Ch], eax
cmp	esi, 6
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_24]
mov	[ebx+20h], eax
cmp	esi, 7
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_28]
mov	[ebx+24h], eax
cmp	esi, 8
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_2C]
mov	[ebx+28h], eax
cmp	esi, 9
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_30]
mov	[ebx+2Ch], eax
cmp	esi, 0Ah
jz	short loc_67CEE855
mov	eax, [esp+3Ch+arg_34]
mov	[ebx+30h], eax
cmp	esi, 0Bh
jz	short loc_67CEE855
mov	[esp+3Ch+var_30], edi
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aDroppingNewFun 
mov	[esp+3Ch+var_3C], offset aLog 
call	purple_debug_info
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEE8CC
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aFunctions1 
mov	[esp+3Ch+var_38], offset aPurple_log_log 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CEE855
mov	[esp+3Ch+var_34], offset aIdNull_0 
mov	[esp+3Ch+var_38], offset aPurple_log_log 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CEE855
mov	[esp+3Ch+var_34], offset aNameNull_2 
mov	[esp+3Ch+var_38], offset aPurple_log_log 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CEE855
call	__stack_chk_fail
align 4
public purple_log_logger_free
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEE915
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public purple_log_logger_add
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CEE95C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72198
mov	[esp+2Ch+var_2C], eax
call	g_slist_find
test	eax, eax
jz	short loc_67CEE97C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEE9CE
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aLogger 
mov	[esp+2Ch+var_28], offset aPurple_log_l_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEE948
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72198
mov	[esp+2Ch+var_2C], eax
call	g_slist_append
mov	ds:dword_67D72198, eax
mov	ebx, [ebx+4]
mov	[esp+2Ch+var_2C], offset aPurpleLoggingF 
call	purple_prefs_get_string
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CEE948
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEE9CE
mov	[esp+2Ch+arg_0], offset	aPurpleLoggingF	
add	esp, 28h
pop	ebx
jmp	purple_prefs_trigger_callback
			
call	__stack_chk_fail
align 4
public purple_log_logger_remove
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEEA14
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72198
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	ds:dword_67D72198, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEEA32
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aLogger 
mov	[esp+2Ch+var_28], offset aPurple_log_l_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEEA01
call	__stack_chk_fail
align 4
public purple_log_logger_set
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CEEA64
mov	ds:dword_67D7218C, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEEA82
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aLogger 
mov	[esp+2Ch+var_28], offset aPurple_log_l_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CEEA54
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72198
test	ebx, ebx
jnz	short loc_67CEEAB3
jmp	short loc_67CEEAE4
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CEEAE4
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CEEAAC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEEB04
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_log_logger_set
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEEB04
mov	eax, ds:dword_67D721A4
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_log_logger_set
			
call	__stack_chk_fail
align 4
public purple_log_logger_get
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7218C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEEB2F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_log_logger_get_options
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72198
test	ebx, ebx
jz	short loc_67CEEB8F
xchg	ax, ax
mov	esi, [ebx]
mov	edx, [esi+0Ch]
test	edx, edx
jz	short loc_67CEEB76
mov	edx, [esi]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	edx, [esi+4]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CEEB50
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEEB93
add	esp, 24h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_67CEEB7D
call	__stack_chk_fail
public purple_log_get_logs
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D72198
xor	esi, esi
test	ebx, ebx
jz	short loc_67CEEBF7
xchg	ax, ax
mov	eax, [ebx]
mov	edx, [eax+14h]
test	edx, edx
jz	short loc_67CEEBF0
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], edi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	edx
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], eax
call	g_list_concat
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CEEBC8
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEEC1B
mov	[esp+4Ch+arg_4], offset	purple_log_compare
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_sort
call	__stack_chk_fail
public purple_log_set_compare
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_67CEEC6C
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CEEC6C
mov	[esp+2Ch+Str1],	eax
call	purple_account_get_username
mov	edi, eax
mov	eax, [ebx+8]
mov	[esp+2Ch+Str1],	eax
call	purple_account_get_username
mov	[esp+2Ch+Str2],	edi 
mov	[esp+2Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_67CEEC86
			
mov	eax, [esi+10h]
mov	[esp+2Ch+Str2],	eax 
mov	eax, [ebx+10h]
mov	[esp+2Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_67CEEC86
mov	eax, [esi]
sub	eax, [ebx]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEEC99
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_log_set_compare
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEECDA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_log_get_log_sets
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], offset purple_log_set_free
mov	[esp+6Ch+var_68], offset sub_67CEECA0
mov	[esp+6Ch+var_6C], offset sub_67CECEE8
call	g_hash_table_new_full
mov	[esp+6Ch+var_48], eax
mov	ebx, ds:dword_67D72198
test	ebx, ebx
jz	short loc_67CEED45
mov	esi, [esp+6Ch+var_48]
mov	eax, [ebx]
mov	eax, [eax+28h]
test	eax, eax
jz	short loc_67CEED3E
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], offset sub_67CED148
call	eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CEED28
call	purple_user_dir
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], offset aLogs 
mov	[esp+6Ch+var_6C], eax
call	g_build_filename
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	g_dir_open_utf8
mov	[esp+6Ch+var_34], eax
test	eax, eax
jz	loc_67CEF0CA
xchg	ax, ax
			
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], eax
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CEF09A
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	g_build_filename
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	g_dir_open_utf8
mov	[esp+6Ch+var_40], eax
test	eax, eax
jz	loc_67CEF089
mov	[esp+6Ch+var_6C], ebx
call	purple_unescape_filename
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	ebx, eax
call	purple_accounts_get_all
mov	esi, eax
mov	[esp+6Ch+var_38], 0
test	eax, eax
jz	short loc_67CEEE6A
xor	edi, edi
jmp	short loc_67CEEE13
align 4
			
mov	esi, [esi+4]
test	esi, esi
jz	short loc_67CEEE66
			
mov	eax, [esi]
mov	[esp+6Ch+var_6C], eax
call	purple_account_get_protocol_id
mov	[esp+6Ch+var_6C], eax
call	purple_find_prpl
test	eax, eax
jz	short loc_67CEEE0C
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+6Ch+var_68], 0
mov	edx, [esi]
mov	[esp+6Ch+var_6C], edx
call	dword ptr [eax+28h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CEEE0C
mov	eax, [esi]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	g_list_prepend
mov	edi, eax
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CEEE13
mov	[esp+6Ch+var_38], edi
mov	[esp+6Ch+var_6C], ebx
call	g_free
xchg	ax, ax
			
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CEF060
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	g_build_filename
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	g_dir_open_utf8
mov	[esp+6Ch+var_4C], eax
test	eax, eax
jz	loc_67CEF04C
mov	[esp+6Ch+var_6C], ebx
call	purple_unescape_filename
mov	ebx, eax
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_list_first
mov	esi, eax
test	eax, eax
jnz	short loc_67CEEEF7
jmp	loc_67CEF044
align 4
mov	esi, [esi+4]
test	esi, esi
jz	loc_67CEF044
mov	[esp+6Ch+var_68], ebx
mov	eax, [esi]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CEEEEC
mov	esi, [esi]
jmp	short loc_67CEEF3B
align 10h
jz	loc_67CEEFDE
			
test	esi, esi
jz	short loc_67CEEF24
cmp	byte ptr [ebp+0], 0
jnz	loc_67CEF008
mov	dword ptr [ebx+0Ch], 0
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_6C], eax
call	sub_67CED148
			
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_dir_read_name_utf8
mov	edi, eax
test	eax, eax
jz	loc_67CEF024
mov	[esp+6Ch+var_6C], 14h
call	g_slice_alloc
mov	ebx, eax
mov	[esp+6Ch+var_6C], edi
call	purple_unescape_filename
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	dword ptr [ebx], 0
mov	[ebx+4], ebp
mov	[ebx+8], esi
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], esi
mov	[esp+6Ch+var_50], ecx
call	purple_normalize
mov	[esp+6Ch+var_6C], eax
call	g_strdup
mov	[ebx+10h], eax
cmp	edi, 6
mov	ecx, [esp+6Ch+var_50]
jbe	loc_67CEEF10
lea	ecx, [ebp+ecx-8]
mov	[esp+6Ch+var_68], offset a_system 
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_50], ecx
call	purple_strequal
test	eax, eax
mov	ecx, [esp+6Ch+var_50]
jz	short loc_67CEEFDE
mov	dword ptr [ebx], 2
mov	byte ptr [ecx],	0
			
lea	edi, [ebp+edi-5]
mov	[esp+6Ch+var_68], offset a_chat	
mov	[esp+6Ch+var_6C], edi
call	purple_strequal
test	eax, eax
jz	loc_67CEEF16
mov	dword ptr [ebx], 1
mov	byte ptr [edi],	0
jmp	loc_67CEEF16
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], esi
call	purple_find_buddy
test	eax, eax
setnz	al
movzx	eax, al
mov	[ebx+0Ch], eax
jmp	loc_67CEEF2B
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_dir_close
jmp	loc_67CEEE74
align 4
			
xor	esi, esi
jmp	loc_67CEEF3B
align 4
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	loc_67CEEE74
align 10h
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	g_list_free
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], eax
call	g_dir_close
jmp	loc_67CEED8C
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	loc_67CEED8C
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], eax
call	g_dir_close
mov	eax, [esp+6Ch+var_48]
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEF0D8
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], eax
call	g_free
jmp	short loc_67CEF0B2
call	__stack_chk_fail
align 10h
public purple_log_get_system_logs
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72198
xor	edi, edi
test	ebx, ebx
jz	short loc_67CEF127
lea	esi, [esi+0]
mov	edx, [ebx]
mov	edx, [edx+24h]
test	edx, edx
jz	short loc_67CEF120
mov	[esp+2Ch+var_2C], esi
call	edx
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	g_list_concat
mov	edi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CEF104
mov	[esp+2Ch+var_28], offset purple_log_compare
mov	[esp+2Ch+var_2C], edi
call	g_list_sort
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEF14A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public purple_log_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7219C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CEF173
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_log_init
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_10], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], offset aPurpleLogging	
call	purple_prefs_add_none
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], offset aPurpleLoggin_2 
call	purple_prefs_add_bool
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], offset aPurpleLoggin_3 
call	purple_prefs_add_bool
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], offset aPurpleLoggin_4 
call	purple_prefs_add_bool
mov	[esp+5Ch+var_58], offset aHtml_0 
mov	[esp+5Ch+var_5C], offset aPurpleLoggingF 
call	purple_prefs_add_string
mov	[esp+5Ch+var_58], offset aHtml_1 
mov	[esp+5Ch+var_5C], offset aPidgin_7 
call	libintl_dgettext
mov	[esp+5Ch+var_28], offset purple_log_common_is_deletable
mov	[esp+5Ch+var_2C], offset purple_log_common_deleter
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_34], offset sub_67CF0470
mov	[esp+5Ch+var_38], offset sub_67CF06C4
mov	[esp+5Ch+var_3C], offset purple_log_common_sizer
mov	[esp+5Ch+var_40], offset sub_67CECD58
mov	[esp+5Ch+var_44], offset sub_67CF04C0
mov	[esp+5Ch+var_48], offset sub_67CECC18
mov	[esp+5Ch+var_4C], offset sub_67CEFA48
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aHtml_0 
call	purple_log_logger_new
mov	ds:dword_67D721A0, eax
mov	[esp+5Ch+var_5C], eax
call	purple_log_logger_add
mov	[esp+5Ch+var_58], offset aPlainText 
mov	[esp+5Ch+var_5C], offset aPidgin_7 
call	libintl_dgettext
mov	[esp+5Ch+var_28], offset purple_log_common_is_deletable
mov	[esp+5Ch+var_2C], offset purple_log_common_deleter
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_34], offset sub_67CF03D0
mov	[esp+5Ch+var_38], offset sub_67CF067C
mov	[esp+5Ch+var_3C], offset purple_log_common_sizer
mov	[esp+5Ch+var_40], offset sub_67CECC84
mov	[esp+5Ch+var_44], offset sub_67CF0420
mov	[esp+5Ch+var_48], offset sub_67CECBBC
mov	[esp+5Ch+var_4C], offset sub_67CEF708
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0Bh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aTxt 
call	purple_log_logger_new
mov	ds:dword_67D721A4, eax
mov	[esp+5Ch+var_5C], eax
call	purple_log_logger_add
mov	[esp+5Ch+var_58], offset aOldFlatFormat	
mov	[esp+5Ch+var_5C], offset aPidgin_7 
call	libintl_dgettext
mov	[esp+5Ch+var_30], offset sub_67CEC66C
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_38], offset sub_67CEC8D8
mov	[esp+5Ch+var_3C], offset sub_67CEC574
mov	[esp+5Ch+var_40], offset sub_67CECA14
mov	[esp+5Ch+var_44], offset sub_67CED2B0
mov	[esp+5Ch+var_48], offset sub_67CECB74
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 9
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], offset aOld 
call	purple_log_logger_new
mov	ds:dword_67D721A8, eax
mov	[esp+5Ch+var_5C], eax
call	purple_log_logger_add
mov	[esp+5Ch+var_5C], 4
call	purple_value_new
mov	edi, eax
mov	[esp+5Ch+var_5C], 7
call	purple_value_new
mov	esi, eax
mov	[esp+5Ch+var_58], 0Dh
mov	[esp+5Ch+var_5C], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	[esp+5Ch+var_40], edi
mov	[esp+5Ch+var_44], esi
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], 3
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset purple_marshal_POINTER__POINTER_INT_BOOLEAN
mov	[esp+5Ch+var_58], offset aLogTimestamp 
mov	[esp+5Ch+var_5C], offset dword_67D7219C
call	purple_signal_register
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset loc_67CEEA88
mov	[esp+5Ch+var_58], offset aPurpleLoggingF 
mov	[esp+5Ch+var_5C], 0
call	purple_prefs_connect_callback
mov	[esp+5Ch+var_5C], offset aPurpleLoggingF 
call	purple_prefs_trigger_callback
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset sub_67CEC5AC
mov	[esp+5Ch+var_58], offset sub_67CEC5E8
mov	[esp+5Ch+var_5C], offset sub_67CEC638
call	g_hash_table_new_full
mov	ds:dword_67D72190, eax
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset sub_67CEC5AC
mov	[esp+5Ch+var_58], offset sub_67CEC5E8
mov	[esp+5Ch+var_5C], offset sub_67CEC638
call	g_hash_table_new_full
mov	ds:dword_67D72194, eax
mov	eax, [esp+5Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEF48F
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public purple_log_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D7219C
call	purple_signals_unregister_by_instance
mov	eax, ds:dword_67D721A0
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_remove
mov	eax, ds:dword_67D721A0
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_free
mov	ds:dword_67D721A0, 0
mov	eax, ds:dword_67D721A4
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_remove
mov	eax, ds:dword_67D721A4
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_free
mov	ds:dword_67D721A4, 0
mov	eax, ds:dword_67D721A8
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_remove
mov	eax, ds:dword_67D721A8
mov	[esp+2Ch+var_2C], eax
call	purple_log_logger_free
mov	ds:dword_67D721A8, 0
mov	eax, ds:dword_67D72190
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72194
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CEF544
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_log_common_writer
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebp, [ebx+18h]
test	ebp, ebp
jz	short loc_67CEF588
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEF701
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [ebx+8]
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx]
mov	[esp+5Ch+Time],	eax
call	purple_log_get_log_dir
mov	edi, eax
test	eax, eax
jz	short loc_67CEF56D
mov	[esp+5Ch+var_58], 1C0h
mov	[esp+5Ch+Time],	eax
call	purple_build_dir
lea	eax, [ebx+10h]
mov	[esp+5Ch+Time],	eax 
call	localtime
mov	ebp, eax
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	offset aZ 
call	purple_utf8_strftime
mov	[esp+5Ch+Time],	eax
call	purple_escape_filename
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+Time],	offset aYMD_HMSZ 
mov	[esp+5Ch+var_30], eax
call	purple_utf8_strftime
test	esi, esi
mov	edx, [esp+5Ch+var_30]
jz	loc_67CEF684
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	offset aSSS_0 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	edi
call	g_build_filename
mov	esi, eax
mov	[esp+5Ch+Time],	edi
call	g_free
mov	[esp+5Ch+Time],	ebp
call	g_free
mov	[esp+5Ch+Time],	0Ch
call	g_slice_alloc0
mov	edi, eax
mov	[ebx+18h], eax
mov	[esp+5Ch+var_58], offset aA 
mov	[esp+5Ch+Time],	esi
call	g_fopen
mov	[edi+4], eax
test	eax, eax
jz	short loc_67CEF690
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CEF701
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	esi, offset byte_67D3A76C
jmp	loc_67CEF5FB
align 10h
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], offset aCouldNotCrea_0 
mov	[esp+5Ch+var_58], offset aLog 
mov	[esp+5Ch+Time],	4
call	purple_debug
mov	edi, [ebx+0Ch]
test	edi, edi
jz	short loc_67CEF663
mov	[esp+5Ch+Time],	0 
call	time
mov	edi, eax
mov	[esp+5Ch+var_58], offset aLoggingOfThisC 
mov	[esp+5Ch+Time],	offset aPidgin_7 
call	libintl_dgettext
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], 200h
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+Time],	eax
call	purple_conversation_write
jmp	loc_67CEF663
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ecx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], ecx
mov	ecx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], ecx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_34], edx
mov	ebp, [esp+5Ch+arg_10]
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ecx
xor	ecx, ecx
mov	eax, [ebx+8]
mov	[esp+5Ch+File],	eax
call	purple_account_get_protocol_id
mov	[esp+5Ch+File],	eax
call	purple_find_prpl
mov	edi, [ebx+18h]
xor	esi, esi
test	edi, edi
jz	loc_67CEF920
			
mov	eax, [edi+4]
test	eax, eax
jz	loc_67CEF86C
mov	[esp+5Ch+File],	ebp
call	purple_markup_strip_html
mov	ebp, eax
mov	edx, [esp+5Ch+var_34]
mov	eax, ebx
call	sub_67CECE34
mov	edx, eax
cmp	dword ptr [ebx], 2
jz	loc_67CEF8BC
test	byte ptr [esp+5Ch+var_38], 3
jnz	loc_67CEF818
test	[esp+5Ch+var_38], 0A04h
jnz	loc_67CEF8E8
test	byte ptr [esp+5Ch+var_38], 40h
jnz	loc_67CEF9D8
test	byte ptr [esp+5Ch+var_38], 80h
jnz	loc_67CEF9B8
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jz	loc_67CEFA34
mov	eax, offset asc_67D3AC59 
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], eax
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aSSSS 
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+var_3C], edx
call	libintl_fprintf
add	esi, eax
mov	edx, [esp+5Ch+var_3C]
nop
			
mov	[esp+5Ch+File],	edx
call	g_free
mov	[esp+5Ch+File],	ebp
call	g_free
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax 
call	fflush
jmp	short loc_67CEF86E
align 4
test	byte ptr [esp+5Ch+var_38], 8
jnz	short loc_67CEF888
mov	[esp+5Ch+var_58], 0FFFFFFFFh 
mov	[esp+5Ch+File],	ebp 
mov	[esp+5Ch+var_3C], eax
call	purple_message_meify
test	eax, eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_4C], ebp
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edx
jz	loc_67CEF8FC
mov	[esp+5Ch+var_58], offset aSSS_1	
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
call	libintl_fprintf
add	esi, eax
mov	edx, [esp+5Ch+var_3C]
jmp	short loc_67CEF7F8
align 4
			
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CEFA42
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aSSAutoReplyS 
mov	[esp+5Ch+File],	offset aPidgin_7 
mov	[esp+5Ch+var_3C], eax
call	libintl_dgettext
mov	[esp+5Ch+var_4C], ebp
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], ecx
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], eax
jmp	short loc_67CEF857
align 4
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aS@S 
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+var_3C], edx
call	libintl_fprintf
add	esi, eax
mov	edx, [esp+5Ch+var_3C]
jmp	loc_67CEF7F8
align 4
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSS_0 
jmp	short loc_67CEF8CC
align 4
mov	[esp+5Ch+var_58], offset aSSS_2	
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+var_3C], edx
call	libintl_fprintf
add	esi, eax
mov	edx, [esp+5Ch+var_3C]
jmp	loc_67CEF7F8
align 10h
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+5Ch+var_58], 0
mov	edx, [ebx+8]
mov	[esp+5Ch+File],	edx
call	dword ptr [eax+28h]
mov	esi, eax
mov	[esp+5Ch+var_58], offset a_txt 
mov	[esp+5Ch+File],	ebx
call	purple_log_common_writer
mov	edi, [ebx+18h]
mov	eax, [edi+4]
test	eax, eax
jz	loc_67CEF86C
cmp	dword ptr [ebx], 2
jz	loc_67CEF9E5
mov	eax, [ebx+8]
mov	[esp+5Ch+File],	eax
call	purple_account_get_username
mov	edx, eax
lea	eax, [ebx+10h]
mov	[esp+5Ch+File],	eax 
mov	[esp+5Ch+var_3C], edx
call	localtime
mov	[esp+5Ch+File],	eax
call	purple_date_format_full
mov	[esp+5Ch+var_48], esi
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aConversationWi 
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
call	libintl_fprintf
mov	esi, eax
jmp	loc_67CEF75B
align 4
mov	[esp+5Ch+var_4C], ebp
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSSS_3	
jmp	loc_67CEF904
align 4
mov	[esp+5Ch+File],	ebp
call	g_free
jmp	loc_67CEF86E
lea	eax, [ebx+10h]
mov	[esp+5Ch+File],	eax 
call	localtime
mov	[esp+5Ch+File],	eax
call	purple_date_format_full
mov	edx, eax
mov	eax, [ebx+8]
mov	[esp+5Ch+File],	eax
mov	[esp+5Ch+var_3C], edx
call	purple_account_get_username
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSystemLogForAc 
mov	eax, [edi+4]
mov	[esp+5Ch+File],	eax
call	libintl_fprintf
mov	esi, eax
jmp	loc_67CEF75B
align 4
mov	eax, offset byte_67D3A76C
mov	[esp+5Ch+var_30], eax
jmp	loc_67CEF7C6
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebp, [esp+7Ch+arg_0]
mov	eax, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_3C], eax
mov	ebx, [esp+7Ch+arg_8]
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_34], edx
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_38], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+8]
mov	[esp+7Ch+Str], eax
call	purple_account_get_protocol_id
mov	[esp+7Ch+Str], eax
call	purple_find_prpl
mov	edx, [ebp+18h]
mov	[esp+7Ch+var_44], edx
mov	[esp+7Ch+var_40], 0
test	edx, edx
jz	loc_67CEFFD8
mov	eax, [esp+7Ch+var_44]
mov	eax, [eax+4]
test	eax, eax
jz	loc_67CEFE5C
mov	[esp+7Ch+Size],	0FFFFFFFFh
mov	[esp+7Ch+Str], ebx
call	g_markup_escape_text
mov	[esp+7Ch+var_30], eax
mov	ebx, [esp+7Ch+var_38]
xor	esi, esi
lea	edi, [esp+7Ch+var_24]
mov	eax, ebp
mov	ebp, esi
mov	esi, eax
jmp	short loc_67CEFB15
			
mov	[esp+7Ch+Str], offset aId_1 
call	g_quark_try_string
mov	[esp+7Ch+Size],	eax
mov	[esp+7Ch+Str], edi
call	g_datalist_id_get_data
test	eax, eax
jz	short loc_67CEFB10
mov	[esp+7Ch+Str], eax 
call	atoi
test	eax, eax
jnz	short loc_67CEFB68
			
mov	ebx, [esp+7Ch+var_28]
inc	ebx
mov	[esp+7Ch+var_6C], edi
lea	edx, [esp+7Ch+var_28]
mov	[esp+7Ch+File],	edx
lea	eax, [esp+7Ch+var_2C]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	ebx
mov	[esp+7Ch+Str], offset aImg_1 
call	purple_markup_find_tag
test	eax, eax
jz	loc_67CEFCD4
test	ebp, ebp
jz	loc_67CEFCC0
mov	eax, [esp+7Ch+var_2C]
cmp	eax, ebx
jbe	short loc_67CEFAE8
sub	eax, ebx
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	ebx
mov	[esp+7Ch+Str], ebp
call	g_string_append_len
jmp	short loc_67CEFAE8
align 4
mov	[esp+7Ch+Str], eax
call	purple_imgstore_find_by_id
mov	ebx, eax
test	eax, eax
jz	loc_67CEFDF4
mov	[esp+7Ch+Str], eax
call	purple_imgstore_get_data
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+Str], ebx
call	purple_imgstore_get_size
mov	[esp+7Ch+var_48], eax
mov	eax, [esi+8]
mov	[esp+7Ch+Count], eax
mov	eax, [esi+4]
mov	[esp+7Ch+Size],	eax
mov	eax, [esi]
mov	[esp+7Ch+Str], eax
call	purple_log_get_log_dir
mov	edx, eax
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Size],	eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str], eax
mov	[esp+7Ch+var_54], edx
call	purple_util_get_image_filename
mov	ebx, eax
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Size],	eax
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str], edx
call	g_build_filename
mov	[esp+7Ch+Filename], eax
mov	[esp+7Ch+Size],	10h
mov	[esp+7Ch+Str], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67CEFC24
			
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aImgSrcS	
mov	[esp+7Ch+Str], ebp
call	g_string_append_printf
mov	[esp+7Ch+Str], ebx
call	g_free
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Str], eax
call	g_free
jmp	loc_67CEFB10
align 4
mov	[esp+7Ch+Size],	offset aWb_0 
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Str], eax
call	g_fopen
mov	edx, eax
test	eax, eax
jz	loc_67CEFF0C
mov	[esp+7Ch+File],	eax 
mov	[esp+7Ch+Count], 1 
mov	eax, [esp+7Ch+var_48]
mov	[esp+7Ch+Size],	eax 
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+Str], eax 
mov	[esp+7Ch+var_54], edx
call	fwrite
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	loc_67CEFDC0
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	offset aErrorWriting_3 
mov	[esp+7Ch+Str], offset aLog 
call	purple_debug_error
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str], edx 
call	fclose
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Str], eax 
call	_unlink
jmp	loc_67CEFBF6
align 10h
mov	[esp+7Ch+Str], offset byte_67D3A76C
call	g_string_new
mov	ebp, eax
jmp	loc_67CEFB49
align 4
mov	eax, esi
mov	esi, ebp
mov	ebp, eax
test	esi, esi
jz	loc_67CEFE3E
mov	[esp+7Ch+Size],	ebx
mov	[esp+7Ch+Str], esi
call	g_string_append
mov	[esp+7Ch+Size],	0
mov	[esp+7Ch+Str], esi
call	g_string_free
mov	ebx, eax
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Size],	edi
mov	[esp+7Ch+Str], eax
call	purple_markup_html_to_xhtml
cmp	[esp+7Ch+var_38], ebx
jz	short loc_67CEFD22
mov	[esp+7Ch+Str], ebx
call	g_free
			
mov	edx, [esp+7Ch+var_34]
mov	eax, ebp
call	sub_67CECE34
mov	ebx, eax
cmp	dword ptr [ebp+0], 2
jz	loc_67CEFF56
test	byte ptr [esp+7Ch+var_3C], 4
jnz	loc_67CEFEE0
test	[esp+7Ch+var_3C], 800h
jnz	loc_67CEFF40
test	[esp+7Ch+var_3C], 200h
jnz	loc_67CEFF6C
test	byte ptr [esp+7Ch+var_3C], 80h
jnz	loc_67CEFE80
test	byte ptr [esp+7Ch+var_3C], 8
jz	loc_67CEFF85
test	byte ptr [esp+7Ch+var_3C], 1
jnz	loc_67CF01BE
test	byte ptr [esp+7Ch+var_3C], 2
jz	loc_67CEFEAF
mov	esi, [esp+7Ch+var_24]
mov	[esp+7Ch+Size],	offset aFontColorA82f2 
mov	[esp+7Ch+Str], offset aPidgin_7	
call	libintl_dgettext
mov	[esp+7Ch+var_6C], esi
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+File],	edx
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	eax
jmp	loc_67CEFE9C
align 10h
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	offset aWroteImageFile 
mov	[esp+7Ch+Str], offset aLog 
mov	[esp+7Ch+var_54], edx
call	purple_debug_info
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Str], edx 
call	fclose
jmp	loc_67CEFBF6
align 4
mov	eax, esi
mov	esi, ebp
mov	ebp, eax
mov	[esp+7Ch+Size],	1
mov	[esp+7Ch+Str], esi
call	g_string_free
mov	[esp+7Ch+var_68], offset aConvert_image_ 
mov	[esp+7Ch+var_6C], 330h
mov	[esp+7Ch+File],	offset aLog_c 
mov	[esp+7Ch+Count], offset	aFileSLineDSS_6	
mov	[esp+7Ch+Size],	8
mov	[esp+7Ch+Str], 0
call	g_log
mov	[esp+7Ch+Count], 0
mov	[esp+7Ch+Size],	edi
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+Str], edx
call	purple_markup_html_to_xhtml
jmp	loc_67CEFD22
align 4
			
mov	[esp+7Ch+var_40], 0
mov	eax, [esp+7Ch+var_40]
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF01CF
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aFontColor6c258 
			
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	[esp+7Ch+var_40], eax
			
mov	[esp+7Ch+Str], ebx
call	g_free
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str], eax
call	g_free
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+Str], eax
call	g_free
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax 
call	fflush
jmp	short loc_67CEFE64
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aFontSize2SFont 
			
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	[esp+7Ch+var_40], eax
jmp	short loc_67CEFEAF
align 4
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	offset aUnableToCrea_1 
mov	[esp+7Ch+Str], offset aLog 
call	purple_debug_error
jmp	loc_67CEFBF6
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aFontSize2SFo_0 
jmp	short loc_67CEFEF4
mov	[esp+7Ch+File],	eax
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Count], eax
mov	[esp+7Ch+Size],	offset aS@SBr 
jmp	short loc_67CEFEF4
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aFontColorFf000 
jmp	loc_67CEFEF4
test	byte ptr [esp+7Ch+var_3C], 2
jnz	loc_67CF0185
test	byte ptr [esp+7Ch+var_3C], 1
jz	loc_67CF011F
mov	[esp+7Ch+Size],	0FFFFFFFFh 
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str], eax 
call	purple_message_meify
test	eax, eax
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
jnz	loc_67CF0178
mov	[esp+7Ch+Size],	offset aFontColor16569 
jmp	loc_67CEFE9C
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	[esp+7Ch+Size],	0
mov	edx, [ebp+8]
mov	[esp+7Ch+Str], edx
call	dword ptr [eax+28h]
mov	esi, eax
mov	[esp+7Ch+Size],	offset a_html 
mov	[esp+7Ch+Str], ebp
call	purple_log_common_writer
mov	eax, [ebp+18h]
mov	[esp+7Ch+var_44], eax
mov	eax, [eax+4]
test	eax, eax
jz	loc_67CEFE5C
lea	eax, [ebp+10h]
mov	[esp+7Ch+Str], eax 
call	localtime
mov	[esp+7Ch+Str], eax
call	purple_date_format_full
mov	edi, eax
mov	[esp+7Ch+Size],	offset aHtmlHead 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
mov	[esp+7Ch+Filename], eax
mov	[esp+7Ch+Size],	offset aMetaHttpEquivC 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Filename], eax
mov	[esp+7Ch+Size],	offset aTitle 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	eax, [esp+7Ch+Filename]
mov	[esp+7Ch+Filename], eax
cmp	dword ptr [ebp+0], 2
mov	eax, [ebp+8]
mov	[esp+7Ch+Str], eax
jz	loc_67CF0154
call	purple_account_get_username
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], edi
mov	eax, [ebp+4]
mov	[esp+7Ch+Size],	eax
mov	[esp+7Ch+Str], offset aConversation_0 
call	g_strdup_printf
mov	esi, eax
mov	[esp+7Ch+Count], esi
mov	[esp+7Ch+Size],	offset aS_3 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
mov	edi, [esp+7Ch+Filename]
add	edi, eax
mov	[esp+7Ch+Size],	offset aTitleHeadBody 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	edi, eax
mov	[esp+7Ch+Count], esi
mov	[esp+7Ch+Size],	offset aH3SH3 
mov	edx, [esp+7Ch+var_44]
mov	eax, [edx+4]
mov	[esp+7Ch+Str], eax
call	libintl_fprintf
add	eax, edi
mov	[esp+7Ch+var_40], eax
mov	[esp+7Ch+Str], esi
call	g_free
jmp	loc_67CEFAB3
mov	[esp+7Ch+Size],	offset aUnhandledMessa 
mov	[esp+7Ch+Str], offset aLog 
call	purple_debug_error
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aFontSize2SFo_1 
jmp	loc_67CEFE9C
call	purple_account_get_username
mov	[esp+7Ch+File],	edi
mov	[esp+7Ch+Count], esi
mov	[esp+7Ch+Size],	eax
mov	[esp+7Ch+Str], offset aSystemLogFor_0 
call	g_strdup_printf
mov	esi, eax
jmp	loc_67CF00B7
			
mov	[esp+7Ch+Size],	offset aFontColor06258 
jmp	loc_67CEFE9C
mov	[esp+7Ch+Size],	0FFFFFFFFh 
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str], eax 
call	purple_message_meify
test	eax, eax
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
jnz	short loc_67CF0178
mov	[esp+7Ch+Size],	offset aFontColorA82_0 
jmp	loc_67CEFE9C
mov	esi, [esp+7Ch+var_24]
mov	[esp+7Ch+Size],	offset aFontColor165_0 
jmp	loc_67CEFD98
call	__stack_chk_fail
public purple_log_common_lister
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	edx, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_58], edx
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_54], edx
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_5C], edx
mov	esi, [esp+8Ch+arg_C]
mov	edx, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_50], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+8Ch+var_5C]
test	eax, eax
jz	loc_67CF03C0
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_84], edx
mov	edx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], edx
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_log_get_log_dir
mov	[esp+8Ch+var_64], eax
test	eax, eax
jz	loc_67CF03C0
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 0
mov	[esp+8Ch+var_8C], eax
call	g_dir_open_utf8
mov	ebp, eax
test	eax, eax
jz	loc_67CF03B3
mov	[esp+8Ch+var_60], 0
nop
			
mov	[esp+8Ch+var_8C], ebp
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CF0380
mov	[esp+8Ch+var_88], esi
mov	[esp+8Ch+var_8C], ebx
call	purple_str_has_suffix
test	eax, eax
jz	short loc_67CF0278
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
lea	edx, [ecx-1]
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
add	ecx, 10h
cmp	edx, ecx
jb	short loc_67CF0278
mov	[esp+8Ch+var_7C], 0 
mov	[esp+8Ch+var_80], 0 
lea	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_84], edx 
mov	[esp+8Ch+var_88], 0 
mov	[esp+8Ch+var_8C], ebx 
call	purple_str_to_time
test	eax, eax
jz	loc_67CF03AC
lea	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_78], edx
mov	[esp+8Ch+var_7C], eax
mov	[esp+8Ch+var_80], 0
mov	edx, [esp+8Ch+var_5C]
mov	[esp+8Ch+var_84], edx
mov	edx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], edx
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_8C], edx
call	purple_log_new
mov	edi, eax
mov	edx, [esp+8Ch+var_50]
mov	[eax+14h], edx
mov	[esp+8Ch+var_8C], 0Ch
call	g_slice_alloc0
mov	edx, eax
mov	[edi+18h], eax
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], ebx
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
mov	[esp+8Ch+var_68], edx
call	g_build_filename
mov	edx, [esp+8Ch+var_68]
mov	[edx], eax
mov	[esp+8Ch+var_88], edi
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_8C], eax
call	g_list_prepend
mov	[esp+8Ch+var_60], eax
mov	[esp+8Ch+var_8C], ebp
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jnz	loc_67CF028A
xchg	ax, ax
mov	[esp+8Ch+var_8C], ebp
call	g_dir_close
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	g_free
mov	eax, [esp+8Ch+var_60]
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF03CA
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
xor	edx, edx
jmp	loc_67CF02F0
mov	eax, [esp+8Ch+var_64]
mov	[esp+8Ch+var_8C], eax
call	g_free
nop
			
mov	[esp+8Ch+var_60], 0
jmp	short loc_67CF0394
call	__stack_chk_fail
align 10h
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721A4
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], offset a_txt 
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset a_system 
mov	[esp+3Ch+var_3C], 2
call	purple_log_common_lister
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF041B
add	esp, 3Ch
retn
call	__stack_chk_fail
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721A4
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], offset a_txt 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_log_common_lister
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF046B
add	esp, 3Ch
retn
call	__stack_chk_fail
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721A0
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], offset a_html	
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset a_system 
mov	[esp+3Ch+var_3C], 2
call	purple_log_common_lister
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF04BB
add	esp, 3Ch
retn
call	__stack_chk_fail
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721A0
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], offset a_html	
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_log_common_lister
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF050B
add	esp, 3Ch
retn
call	__stack_chk_fail
public purple_log_common_total_sizer
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	ecx, [esp+6Ch+arg_4]
mov	eax, [esp+6Ch+arg_8]
mov	esi, [esp+6Ch+arg_C]
mov	ebx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], ebx
xor	ebx, ebx
test	eax, eax
jz	loc_67CF066C
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+var_6C], edx
call	purple_log_get_log_dir
mov	[esp+6Ch+var_54], eax
test	eax, eax
jz	loc_67CF066C
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+var_6C], eax
call	g_dir_open_utf8
mov	ebp, eax
mov	[esp+6Ch+var_50], 0
test	eax, eax
jz	loc_67CF0630
lea	esi, [esi+0]
			
mov	[esp+6Ch+var_6C], ebp
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CF0628
mov	[esp+6Ch+var_68], esi
mov	[esp+6Ch+var_6C], ebx
call	purple_str_has_suffix
test	eax, eax
jz	short loc_67CF0584
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
lea	edx, [ecx-1]
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
add	ecx, 10h
cmp	edx, ecx
jb	short loc_67CF0584
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	g_build_filename
mov	ebx, eax
lea	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], eax
call	g_stat
test	eax, eax
jz	short loc_67CF0654
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aErrorStatingLo 
mov	[esp+6Ch+var_6C], offset aLog 
call	purple_debug_error
mov	[esp+6Ch+var_6C], ebx
call	g_free
mov	[esp+6Ch+var_6C], ebp
call	g_dir_read_name_utf8
mov	ebx, eax
test	eax, eax
jnz	loc_67CF0596
mov	[esp+6Ch+var_6C], ebp
call	g_dir_close
mov	eax, [esp+6Ch+var_54]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_50]
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0676
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+var_6C], ebx
call	g_free
mov	ebx, [esp+6Ch+var_30]
add	[esp+6Ch+var_50], ebx
jmp	loc_67CF0584
align 4
			
mov	[esp+6Ch+var_50], 0
jmp	short loc_67CF063C
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], offset a_txt 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_log_common_total_sizer
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF06BE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], offset a_html	
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_log_common_total_sizer
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0706
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_get_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF072C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_get
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0752
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_create_media
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0776
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_get_media
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF079A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_manager_get_media_by_account
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF07BE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_remove_media
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF07E2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_create_output_window
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0806
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_set_output_window
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF082A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_manager_remove_output_window
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF084E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_remove_output_windows
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0872
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_set_ui_caps
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0896
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_get_ui_caps
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF08BA
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_manager_set_backend_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF08DE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_manager_get_backend_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0904
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF092C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_session_ids
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0952
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_account
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0976
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_prpl_data
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF099A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_set_prpl_data
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF09BE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_error
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF09E2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_end
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0A06
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_stream_info
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0A2A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_set_params
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0A4E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_available_params
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D721AC
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0A77
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_media_param_is_supported
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0A9A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_add_stream
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0ABE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_manager
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF0AE6
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF0AE6
cmp	dword ptr [eax], 4
jz	short loc_67CF0B2C
			
mov	[esp+2Ch+var_28], 4
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67CF0B2C
mov	[esp+2Ch+var_24], offset aPurple_is_medi 
mov	[esp+2Ch+var_28], offset aPurple_media_g 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0B52
add	esp, 28h
pop	ebx
retn
align 4
			
mov	[esp+2Ch+var_20], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aManager 
mov	[esp+2Ch+var_2C], ebx
call	g_object_get
mov	eax, [esp+2Ch+var_14]
jmp	short loc_67CF0B18
call	__stack_chk_fail
align 4
public purple_media_get_session_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0B76
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_codecs
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0B9A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_get_local_candidates
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0BBE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_add_remote_candidates
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0BE2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_active_local_candidates
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0C06
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_get_active_remote_candidates
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0C2A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_set_remote_codecs
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0C4E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_candidates_prepared
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0C72
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_set_send_codec
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0C96
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_codecs_ready
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0CBA
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_is_initiator
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0CDE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_accepted
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0D02
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_set_input_volume
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0D26
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_set_output_volume
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0D4A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_media_set_output_window
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF0D6E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_media_remove_output_windows
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0D92
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF0E0C
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF0E2C
mov	edi, ecx
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], edx
call	g_ascii_strdown
mov	esi, eax
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	edi, eax
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CF0E4C
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0E60
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aMfNull 
mov	[esp+2Ch+var_28], offset aFields_set 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF0DF7
align 4
mov	[esp+2Ch+var_24], offset aMfMapNull 
mov	[esp+2Ch+var_28], offset aFields_set 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF0DF7
align 4
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+4], eax
jmp	short loc_67CF0DE5
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_20], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSS_1 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	g_string_append_printf
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF0EAA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	edi, edx
mov	ebp, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
jmp	loc_67CF0FBD
align 10h
			
mov	[esp+4Ch+Val], ebx
mov	[esp+4Ch+Str], esi
call	g_strndup
mov	ebx, eax
mov	[esp+4Ch+Val], 3Ah 
mov	[esp+4Ch+Str], eax 
call	strchr
mov	esi, eax
test	eax, eax
jz	loc_67CF1038
mov	byte ptr [eax],	0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Val], offset asc_67D3B347 
mov	[esp+4Ch+Str], ebx
call	g_strsplit
mov	[esp+4Ch+Val], eax
mov	[esp+4Ch+Str], offset byte_67D3B34B
mov	[esp+4Ch+var_38], eax
call	g_strjoinv
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+Str], eax
call	g_strchug
mov	[esp+4Ch+Str], eax
call	g_strchomp
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str], edx
call	g_strfreev
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+Val], offset asc_67D3B347 
inc	esi
mov	[esp+4Ch+Str], esi
call	g_strsplit
mov	[esp+4Ch+Val], eax
mov	[esp+4Ch+Str], offset byte_67D3B34B
mov	[esp+4Ch+var_38], eax
call	g_strjoinv
mov	esi, eax
mov	[esp+4Ch+Str], eax
call	g_strchug
mov	[esp+4Ch+Str], eax
call	g_strchomp
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+Str], edx
call	g_strfreev
mov	ecx, esi
mov	edx, [esp+4Ch+var_34]
mov	eax, [esp+4Ch+var_30]
call	sub_67CF0D98
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], eax
call	g_free
mov	[esp+4Ch+Str], ebx
call	g_free
mov	[esp+4Ch+Str], esi
call	g_free
			
mov	[esp+4Ch+var_44], offset asc_67D3B344 
mov	eax, [ebp+0]
mov	[esp+4Ch+Val], eax
mov	eax, [edi]
mov	[esp+4Ch+Str], eax
call	g_strstr_len
test	eax, eax
jz	short loc_67CF1048
mov	esi, [edi]
mov	ebx, eax
sub	ebx, esi
lea	ecx, [eax+2]
mov	[edi], ecx
mov	edx, [ebp+0]
sub	edx, 2
sub	edx, ebx
mov	[ebp+0], edx
test	ebx, ebx
jz	short loc_67CF1048
cmp	byte ptr [eax-1], 3Bh
jnz	loc_67CF0ED0
mov	[esp+4Ch+var_44], offset asc_67D3B344 
mov	[esp+4Ch+Val], edx
mov	[esp+4Ch+Str], ecx
call	g_strstr_len
test	eax, eax
jz	loc_67CF0ED0
mov	edx, eax
sub	edx, [edi]
mov	ebx, eax
sub	ebx, esi
add	eax, 2
mov	[edi], eax
mov	eax, [ebp+0]
sub	eax, 2
sub	eax, edx
mov	[ebp+0], eax
jmp	loc_67CF0ED0
align 4
mov	[esp+4Ch+Str], ebx
call	g_free
jmp	loc_67CF0FBD
align 4
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF105C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF10AC
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	dword ptr [ebx], 0
mov	dword ptr [ebx+4], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF10CA
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_24], offset aMfNull 
mov	[esp+2Ch+var_28], offset aFields_destroy 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF109B
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF1130
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67CF1150
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edx
call	g_ascii_strdown
mov	esi, eax
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1170
add	esp, 34h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+3Ch+var_34], offset aMfNull 
mov	[esp+3Ch+var_38], offset aFields_get 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF111C
mov	[esp+3Ch+var_34], offset aMfMapNull 
mov	[esp+3Ch+var_38], offset aFields_get 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF111C
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF11C8
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_67CF0E68
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	[esp+2Ch+var_28], offset asc_67D3B344 
mov	[esp+2Ch+var_2C], ebx
call	g_string_append
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF11E6
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aMfNull 
mov	[esp+2Ch+var_28], offset aFields_write 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF11B4
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF1238
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1256
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_24], offset aMfNull 
mov	[esp+2Ch+var_28], offset aFields_init 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF1227
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	ebx, eax
call	sub_67CF11EC
mov	[ebx+8], esi
mov	[esp+2Ch+var_2C], 0
call	g_string_new
mov	[ebx+0Ch], eax
mov	[esp+2Ch+var_28], ebx
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[esi+8], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF12B9
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_mime_part_new
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF12EC
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF131A
add	esp, 2Ch
jmp	sub_67CF125C
align 4
mov	[esp+2Ch+var_24], offset aDocNull 
mov	[esp+2Ch+var_28], offset aPurple_mime_pa 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF131A
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_mime_part_get_fields
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF134C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF136C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF133A
call	__stack_chk_fail
align 4
public purple_mime_part_get_field
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF13A4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF13D2
add	esp, 2Ch
jmp	sub_67CF10D0
align 4
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF13D2
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_mime_part_get_field_decoded
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF1410
call	sub_67CF10D0
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF143E
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_mime_decode_field
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF143E
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_mime_part_set_field
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67CF147C
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CF14A9
add	esp, 18h
pop	ebx
jmp	sub_67CF0D98
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF14A9
mov	[esp+1Ch+arg_8], offset	aPartNull 
mov	[esp+1Ch+arg_4], offset	aPurple_mime__3	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 10h
public purple_mime_part_get_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF14E0
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CF1500
mov	eax, [eax]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1520
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF14D0
mov	[esp+2Ch+var_24], offset aPartDataNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF14D0
call	__stack_chk_fail
align 4
public purple_mime_part_get_data_decoded
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF1664
test	edi, edi
jz	loc_67CF1698
test	ebp, ebp
jz	loc_67CF16B0
mov	esi, [ebx+0Ch]
test	esi, esi
jz	loc_67CF16C8
mov	[esp+3Ch+var_38], offset aContentTransfe 
mov	[esp+3Ch+var_3C], ebx
call	purple_mime_part_get_field
mov	esi, eax
test	eax, eax
jz	loc_67CF161C
mov	[esp+3Ch+var_38], offset a7bit 
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_67CF161C
mov	[esp+3Ch+var_38], offset a8bit 
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_67CF161C
mov	[esp+3Ch+var_38], offset aBase16 
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_67CF16E0
mov	[esp+3Ch+var_38], offset aBase64 
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_67CF164C
mov	[esp+3Ch+var_38], offset aQuotedPrintabl 
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	loc_67CF1700
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aPurple_mime__5 
mov	[esp+3Ch+var_3C], offset aMime 
call	purple_debug_warning
mov	dword ptr [edi], 0
mov	dword ptr [ebp+0], 0
jmp	short loc_67CF1634
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[edi], eax
mov	eax, [ebx+0Ch]
mov	eax, [eax+4]
mov	[ebp+0], eax
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF16F8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_38], ebp
mov	eax, [ebx+0Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	purple_base64_decode
mov	[edi], eax
jmp	short loc_67CF1634
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF16F8
mov	[esp+3Ch+arg_8], offset	aPartNull 
			
mov	[esp+3Ch+arg_4], offset	aPurple_mime__6	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF16F8
mov	[esp+3Ch+arg_8], offset	aDataNull_2 
jmp	short loc_67CF167C
align 10h
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF16F8
mov	[esp+3Ch+arg_8], offset	aLenNull 
jmp	short loc_67CF167C
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF16F8
mov	[esp+3Ch+arg_8], offset	aPartDataNull 
jmp	short loc_67CF167C
align 10h
mov	[esp+3Ch+var_38], ebp
mov	eax, [ebx+0Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	purple_base16_decode
mov	[edi], eax
jmp	loc_67CF1634
			
call	__stack_chk_fail
align 10h
mov	[esp+3Ch+var_38], ebp
mov	eax, [ebx+0Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	purple_quotedp_decode
mov	[edi], eax
jmp	loc_67CF1634
public purple_mime_part_get_length
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF174C
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CF176C
mov	eax, [eax+4]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF178C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF1739
mov	[esp+2Ch+var_24], offset aPartDataNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF1739
call	__stack_chk_fail
align 4
public purple_mime_part_set_data
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF17E0
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	[esp+2Ch+var_2C], esi
call	g_string_new
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF17FE
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aPartNull 
mov	[esp+2Ch+var_28], offset aPurple_mime__8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF17CE
call	__stack_chk_fail
align 4
public purple_mime_document_new
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	ebx, eax
call	sub_67CF11EC
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1839
mov	eax, ebx
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_mime_document_parsen
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_2C], ebx
test	eax, eax
jz	loc_67CF1A04
call	purple_mime_document_new
mov	esi, eax
test	ebx, ebx
jnz	short loc_67CF1890
			
mov	eax, esi
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF1A94
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
lea	ecx, [esp+6Ch+var_2C]
lea	edx, [esp+6Ch+var_30]
mov	eax, esi
call	sub_67CF0EB0
mov	edx, offset aContentType 
mov	eax, esi
call	sub_67CF10D0
mov	ebx, eax
test	eax, eax
jz	short loc_67CF1876
mov	[esp+6Ch+Val], offset aMultipart 
mov	[esp+6Ch+Str], eax
call	purple_str_has_prefix
test	eax, eax
jz	short loc_67CF1876
mov	[esp+6Ch+var_64], offset aBoundary 
mov	[esp+6Ch+Val], 0FFFFFFFFh
mov	[esp+6Ch+Str], ebx
call	g_strstr_len
test	eax, eax
jz	short loc_67CF1876
cmp	byte ptr [eax+9], 22h
jz	loc_67CF1A74
lea	ebx, [eax+9]
mov	[esp+6Ch+Val], 20h 
mov	[esp+6Ch+Str], ebx 
call	strchr
test	eax, eax
jz	loc_67CF1A45
			
sub	eax, ebx
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], ebx
call	g_strndup
mov	[esp+6Ch+var_40], eax
test	eax, eax
jz	loc_67CF1876
mov	ebx, [esp+6Ch+var_2C]
mov	ebp, [esp+6Ch+var_30]
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], offset aS_4 
call	g_strdup_printf
mov	[esp+6Ch+var_48], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_4C], ecx
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], ebx
mov	[esp+6Ch+Str], ebp
call	g_strstr_len
mov	edi, eax
test	eax, eax
jz	loc_67CF1A28
xchg	ax, ax
			
mov	ebp, [esp+6Ch+var_4C]
add	ebp, edi
sub	ebx, [esp+6Ch+var_4C]
cmp	ebx, 1
jbe	short loc_67CF1985
add	ebp, 2
sub	ebx, 2
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], ebx
mov	[esp+6Ch+Str], ebp
call	g_strstr_len
mov	edi, eax
test	eax, eax
jz	loc_67CF1A28
mov	ecx, eax
sub	ecx, ebp
jz	short loc_67CF1970
mov	eax, esi
mov	[esp+6Ch+var_50], ecx
call	sub_67CF125C
mov	[esp+6Ch+var_44], eax
mov	[esp+6Ch+var_28], ebp
mov	ecx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_24], ecx
lea	ecx, [esp+6Ch+var_24]
lea	edx, [esp+6Ch+var_28]
call	sub_67CF0EB0
mov	eax, [esp+6Ch+var_24]
cmp	eax, 4
jbe	short loc_67CF19E1
sub	eax, 4
mov	[esp+6Ch+var_24], eax
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Val], eax
mov	edx, [esp+6Ch+var_44]
mov	eax, [edx+0Ch]
mov	[esp+6Ch+Str], eax
call	g_string_append_len
jmp	loc_67CF1970
align 4
mov	[esp+6Ch+var_64], offset aBufNull_0 
mov	[esp+6Ch+Val], offset aPurple_mime_do 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67CF1876
align 4
			
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+Str], eax
call	g_free
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Str], eax
call	g_free
jmp	loc_67CF1876
mov	[esp+6Ch+Val], 3Bh 
mov	[esp+6Ch+Str], ebx 
call	strchr
test	eax, eax
jnz	loc_67CF1906
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
lea	eax, [ebx+ecx-1]
jmp	loc_67CF1906
align 4
lea	ebx, [eax+0Ah]
mov	[esp+6Ch+Val], 22h 
mov	[esp+6Ch+Str], ebx 
call	strchr
test	eax, eax
jnz	loc_67CF1906
jmp	loc_67CF1876
call	__stack_chk_fail
align 4
public purple_mime_document_parse
push	edi
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CF1AE0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], edx
call	purple_mime_document_parsen
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1B00
add	esp, 28h
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aBufNull_0 
mov	[esp+2Ch+var_28], offset aPurple_mime__9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF1ACD
call	__stack_chk_fail
align 4
public purple_mime_document_write
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CF1C34
test	ebx, ebx
jz	loc_67CF1C14
mov	edx, offset aContentType 
mov	eax, esi
call	sub_67CF10D0
mov	edi, eax
test	eax, eax
jz	loc_67CF1BC8
mov	[esp+3Ch+var_38], offset aMultipart 
mov	[esp+3Ch+Str], edi
call	purple_str_has_prefix
test	eax, eax
jz	short loc_67CF1BC8
mov	[esp+3Ch+var_38], 3Dh 
mov	[esp+3Ch+Str], edi 
call	strrchr
test	eax, eax
jz	short loc_67CF1BC8
lea	edi, [eax+1]
mov	edx, ebx
mov	eax, esi
call	sub_67CF1178
mov	esi, [esi+8]
test	esi, esi
jz	short loc_67CF1BFF
nop
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aS_5 
mov	[esp+3Ch+Str], ebx
call	g_string_append_printf
mov	ebp, [esi]
mov	edx, ebx
mov	eax, ebp
call	sub_67CF1178
mov	eax, [ebp+0Ch]
mov	eax, [eax]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aS_6 
mov	[esp+3Ch+Str], ebx
call	g_string_append_printf
mov	edx, [esi+4]
test	edx, edx
jz	short loc_67CF1BE4
mov	esi, edx
jmp	short loc_67CF1B84
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1C52
mov	edx, ebx
mov	eax, esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CF1178
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aS_7 
mov	[esp+3Ch+Str], ebx
call	g_string_append_printf
mov	edx, [esi+4]
test	edx, edx
jnz	short loc_67CF1BC3
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1C52
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aStrNull 
mov	[esp+3Ch+var_38], offset aPurple_mime_10 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
jmp	short loc_67CF1BFF
align 4
mov	[esp+3Ch+var_34], offset aDocNull 
mov	[esp+3Ch+var_38], offset aPurple_mime_10 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
jmp	short loc_67CF1BFF
			
call	__stack_chk_fail
align 4
public purple_mime_document_get_fields
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF1C84
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1CA4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aDocNull 
mov	[esp+2Ch+var_28], offset aPurple_mime_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF1C72
call	__stack_chk_fail
align 4
public purple_mime_document_get_field
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF1CDC
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF1D0A
add	esp, 2Ch
jmp	sub_67CF10D0
align 4
mov	[esp+2Ch+var_24], offset aDocNull 
mov	[esp+2Ch+var_28], offset aPurple_mime_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1D0A
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_mime_document_set_field
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67CF1D48
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CF1D75
add	esp, 18h
pop	ebx
jmp	sub_67CF0D98
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1D75
mov	[esp+1Ch+arg_8], offset	aDocNull 
mov	[esp+1Ch+arg_4], offset	aPurple_mime_13	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_mime_document_get_parts
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF1DA8
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1DC8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aDocNull 
mov	[esp+2Ch+var_28], offset aPurple_mime_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF1D96
call	__stack_chk_fail
align 10h
public purple_mime_document_free
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF1E54
mov	eax, esi
call	sub_67CF1064
mov	eax, [esi+8]
test	eax, eax
jz	short loc_67CF1E39
xchg	ax, ax
mov	ebx, [eax]
mov	eax, ebx
call	sub_67CF1064
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	dword ptr [ebx+0Ch], 0
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	edx, [esi+8]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], edx
call	g_list_delete_link
mov	[esi+8], eax
test	eax, eax
jnz	short loc_67CF1DF8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1E66
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1E66
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_pmp_get_public_ip
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1E8A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_pmp_create_map
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1EAE
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_pmp_destroy_map
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1ED2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_pmp_init
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1EF6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aS_8 
mov	[esp+2Ch+var_2C], offset aNetwork 
call	purple_debug_warning
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF1F42
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF1F7A
mov	[esp+1Ch+arg_4], offset	aDoneRemovingUp	
mov	[esp+1Ch+arg_0], offset	aNetwork 
add	esp, 1Ch
jmp	purple_debug_info
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
mov	eax, 1060h
call	sub_67D2FA40
sub	esp, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+0Ch+arg_104C], eax
xor	eax, eax
lea	edx, [esp+0Ch+qsRestrictions]
mov	ecx, 3Ch
mov	edi, edx
rep stosb
mov	[esp+0Ch+qsRestrictions.dwSize], 3Ch
mov	[esp+0Ch+qsRestrictions.dwNameSpace], 0Fh
lea	eax, [esp+0Ch+hLookup]
mov	[esp+0Ch+lphLookup], eax 
mov	[esp+0Ch+dwControlFlags], 0FF0h	
mov	[esp+0Ch+lpqsRestrictions], edx	
call	WSALookupServiceBeginA
sub	esp, 0Ch
test	eax, eax
jnz	loc_67CF20B8
mov	[esp+0Ch+dwBufferLength], 1000h
xor	ebx, ebx
lea	edi, [esp+0Ch+qsResults]
lea	esi, [esp+0Ch+dwBufferLength]
jmp	short loc_67CF2014
align 4
			
mov	[esp+0Ch+lphLookup], edx
mov	[esp+0Ch+dwControlFlags], offset aFoundNetworkS	
mov	[esp+0Ch+lpqsRestrictions], offset aNetwork 
call	purple_debug_info
mov	[esp+0Ch+dwBufferLength], 1000h
mov	[esp+0Ch], edi	
mov	[esp+0Ch+lphLookup], esi 
mov	[esp+0Ch+dwControlFlags], 0 
mov	eax, [esp+0Ch+hLookup]
mov	[esp+0Ch+lpqsRestrictions], eax	
call	WSALookupServiceNextA
sub	esp, 10h
test	eax, eax
jnz	short loc_67CF2048
inc	ebx
mov	edx, [esp+0Ch+qsResults.lpszServiceInstanceName]
test	edx, edx
jnz	short loc_67CF1FF4
mov	edx, offset aNull_1 
jmp	short loc_67CF1FF4
align 4
call	WSAGetLastError
mov	esi, eax
cmp	eax, 277Eh
jz	short loc_67CF2090
cmp	eax, 2776h
jz	short loc_67CF2090
mov	[esp+0Ch+lpqsRestrictions], eax
call	g_win32_error_message
mov	ebx, eax
mov	[esp+0Ch], esi
mov	[esp+0Ch+lphLookup], eax
mov	[esp+0Ch+dwControlFlags], offset aGotUnexpectedN 
mov	[esp+0Ch+lpqsRestrictions], offset aNetwork 
call	purple_debug_error
mov	[esp+0Ch+lpqsRestrictions], ebx
call	g_free
mov	ebx, 0FFFFFFFFh
			
mov	eax, [esp+0Ch+hLookup]
mov	[esp+0Ch+lpqsRestrictions], eax	
call	WSALookupServiceEnd
push	eax
mov	eax, ebx
mov	edx, [esp+0Ch+arg_104C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF20F4
add	esp, 1060h
pop	ebx
pop	esi
pop	edi
retn
call	WSAGetLastError
mov	ebx, eax
mov	[esp+0Ch+lpqsRestrictions], eax
call	g_win32_error_message
mov	esi, eax
mov	[esp+0Ch], ebx
mov	[esp+0Ch+lphLookup], eax
mov	[esp+0Ch+dwControlFlags], offset aCouldnTRetriev 
mov	[esp+0Ch+lpqsRestrictions], offset aNetwork 
call	purple_debug_warning
mov	[esp+0Ch+lpqsRestrictions], esi
call	g_free
mov	ebx, 0FFFFFFFFh
jmp	short loc_67CF209D
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 10ACh
call	sub_67D2FA40
sub	esp, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_1088], eax
xor	eax, eax
mov	[esp+10h+Time],	0 
call	time
sub	eax, 1Fh
mov	[esp+10h+arg_18], eax
call	WSACreateEvent
mov	ebp, eax
test	eax, eax
jz	loc_67CF253E
mov	esi, ds:g_threads_got_initialized
mov	eax, [esi]
lea	edx, [esp+10h+qsRestrictions]
mov	[esp+10h+arg_14], edx
			
mov	[esp+10h+arg_24], 0
test	eax, eax
jz	short loc_67CF2173
mov	edx, ds:g_thread_functions_for_glib_use
mov	ebx, [edx+4]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF24D8
mov	[esp+10h+Time],	eax
call	ebx
mov	ebx, ds:dword_67D721E0
test	ebx, ebx
jz	loc_67CF2416
mov	eax, ds:hLookup
test	eax, eax
jz	loc_67CF238E
mov	eax, [esi]
test	eax, eax
jz	short loc_67CF21AE
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+0Ch]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF24E9
mov	[esp+10h+Time],	eax
call	ebx
lea	edx, [esp+10h+arg_28]
mov	ecx, 10h
xor	eax, eax
mov	edi, edx
rep stosb
mov	[esp+10h+arg_28], 2
mov	[esp+10h+arg_48], ebp
lea	eax, [esp+10h+arg_38]
mov	[esp+10h+arg_2C], eax
mov	[esp+10h+arg_8], edx
lea	eax, [esp+10h+arg_24]
mov	[esp+10h+arg_4], eax
mov	[esp+10h+dwBufferLength], 0
mov	dword ptr [esp+10h], 0
mov	[esp+10h+var_4], 0
mov	[esp+10h+lphLookup], 0
mov	[esp+10h+dwControlFlags], 88000019h
mov	eax, ds:hLookup
mov	[esp+10h+Time],	eax
call	ds:dword_67D721E4
sub	esp, 20h
inc	eax
jz	loc_67CF231C
			
mov	[esp+30h+hHandle], 0 
call	time
sub	eax, [esp+30h+var_4]
cmp	eax, 1Dh
jle	loc_67CF237C
mov	[esp+30h+bAlertable], 1	
mov	[esp+30h+dwMilliseconds], 0FFFFFFFFh 
mov	[esp+30h+hHandle], ebp 
call	WaitForSingleObjectEx
sub	esp, 0Ch
mov	[esp+30h+hHandle], 0 
call	time
mov	[esp+30h+var_4], eax
mov	edi, [esi]
test	edi, edi
jz	short loc_67CF2281
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+4]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF24FA
mov	[esp+30h+hHandle], eax
call	ebx
mov	ebx, ds:dword_67D721E0
test	ebx, ebx
jz	loc_67CF2416
mov	[esp+30h+dwBufferLength], 1000h
lea	edi, [esp+30h+qsRestrictions.lpszContext]
lea	ebx, [esp+30h+dwBufferLength]
jmp	short loc_67CF22AC
mov	[esp+30h+dwBufferLength], 1000h
mov	[esp+30h+lpqsResults], edi 
mov	[esp+30h+bAlertable], ebx 
mov	[esp+30h+dwMilliseconds], 0 
mov	eax, ds:hLookup
mov	[esp+30h+hHandle], eax 
call	WSALookupServiceNextA
sub	esp, 10h
test	eax, eax
jz	short loc_67CF22A4
mov	[esp+30h+hHandle], ebp 
call	WSAResetEvent
push	edx
mov	ecx, [esi]
test	ecx, ecx
jz	short loc_67CF22F9
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+0Ch]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF252D
mov	[esp+30h+hHandle], eax
call	ebx
mov	[esp+30h+bAlertable], 0
mov	[esp+30h+dwMilliseconds], offset loc_67CF25CC
mov	[esp+30h+hHandle], 0
call	purple_timeout_add
mov	eax, [esi]
jmp	loc_67CF214C
call	WSAGetLastError
mov	ebx, eax
cmp	eax, 6
jz	loc_67CF2455
cmp	eax, 3E5h
jz	loc_67CF221D
mov	[esp+30h+hHandle], eax
call	g_win32_error_message
mov	edi, eax
mov	[esp+30h+bAlertable], ebx
mov	[esp+30h+dwMilliseconds], eax
mov	[esp+30h+hHandle], offset aUnableToWaitFo 
call	g_strdup_printf
mov	[esp+30h+bAlertable], eax
mov	[esp+30h+dwMilliseconds], offset sub_67CF1EFC
mov	[esp+30h+hHandle], 0
call	purple_timeout_add
mov	[esp+30h+hHandle], edi
call	g_free
jmp	loc_67CF221D
align 4
mov	[esp+30h+hHandle], 7530h 
call	Sleep
push	eax
jmp	loc_67CF2236
mov	ecx, 3Ch
xor	eax, eax
mov	edi, [esp+10h+arg_14]
rep stosb
mov	[esp+10h+qsRestrictions.dwSize], 3Ch
mov	[esp+10h+qsRestrictions.dwNameSpace], 0Fh
mov	[esp+10h+lphLookup], offset hLookup 
mov	[esp+10h+dwControlFlags], 0 
lea	eax, [esp+10h+qsRestrictions]
mov	[esp+10h+Time],	eax 
call	WSALookupServiceBeginA
sub	esp, 0Ch
inc	eax
jnz	loc_67CF218E
call	WSAGetLastError
mov	edi, eax
mov	[esp+10h+Time],	eax
call	g_win32_error_message
mov	ebx, eax
mov	[esp+10h+lphLookup], edi
mov	[esp+10h+dwControlFlags], eax
mov	[esp+10h+Time],	offset aCouldnTRetriev 
call	g_strdup_printf
mov	[esp+10h+lphLookup], eax
mov	[esp+10h+dwControlFlags], offset sub_67CF1EFC
mov	[esp+10h+Time],	0
call	purple_timeout_add
mov	[esp+10h+Time],	ebx
call	g_free
			
mov	[esp+10h+Time],	ebp 
call	WSACloseEvent
push	edx
mov	ecx, [esi]
test	ecx, ecx
jnz	loc_67CF250B
mov	[esp+10h+Time],	0
call	g_thread_exit
xor	eax, eax
mov	edx, [esp+10h+arg_1088]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF25C7
add	esp, 10ACh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+30h+hHandle], offset aInvalidNlaHand 
call	g_strdup
mov	[esp+30h+bAlertable], eax
mov	[esp+30h+dwMilliseconds], offset sub_67CF1EFC
mov	[esp+30h+hHandle], 0
call	purple_timeout_add
mov	eax, [esi]
test	eax, eax
jz	short loc_67CF2499
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+4]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF25B6
mov	[esp+30h+hHandle], eax
call	ebx
mov	eax, ds:hLookup
mov	[esp+30h+hHandle], eax 
call	WSALookupServiceEnd
push	eax
mov	ds:hLookup, 0
mov	eax, [esi]
test	eax, eax
jz	short loc_67CF2526
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+0Ch]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF25A5
mov	[esp+30h+hHandle], eax
call	ebx
mov	eax, [esi]
jmp	loc_67CF214C
mov	[esp+10h+Time],	offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF216E
mov	[esp+10h+Time],	offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF21A9
mov	[esp+30h+hHandle], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF227C
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+0Ch]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	short loc_67CF2594
mov	[esp+10h+Time],	eax
call	ebx
jmp	loc_67CF2429
xor	eax, eax
jmp	loc_67CF214C
mov	[esp+30h+hHandle], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF22F4
call	WSAGetLastError
mov	esi, eax
mov	[esp+10h+Time],	eax
call	g_win32_error_message
mov	ebx, eax
mov	[esp+10h+lphLookup], esi
mov	[esp+10h+dwControlFlags], eax
mov	[esp+10h+Time],	offset aCouldnTCreateW 
call	g_strdup_printf
mov	[esp+10h+lphLookup], eax
mov	[esp+10h+dwControlFlags], offset sub_67CF1EFC
mov	[esp+10h+Time],	0
call	purple_timeout_add
mov	[esp+10h+Time],	ebx
call	g_free
mov	[esp+10h+Time],	0
call	g_thread_exit
jmp	loc_67CF2435
mov	[esp+10h+Time],	offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF251C
mov	[esp+30h+hHandle], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF24CC
mov	[esp+30h+hHandle], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF2494
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_40], eax
xor	eax, eax
call	purple_connections_get_ui_ops
mov	esi, eax
call	sub_67CF1F80
mov	ebx, eax
test	eax, eax
js	short loc_67CF2642
mov	eax, ds:dword_67D721CC
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aReceivedNetwor 
mov	[esp+5Ch+var_5C], offset aNetwork 
call	purple_debug_info
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], offset aNetworkConfigu 
mov	[esp+5Ch+var_5C], offset dword_67D721DC
call	purple_signal_emit
test	ebx, ebx
jz	short loc_67CF2658
test	esi, esi
jz	short loc_67CF263C
mov	eax, [esi+14h]
test	eax, eax
jz	short loc_67CF263C
call	eax
			
mov	ds:dword_67D721CC, ebx
xor	eax, eax
mov	edx, [esp+5Ch+var_40]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF266E
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, ds:dword_67D721CC
test	eax, eax
jle	short loc_67CF263C
test	esi, esi
jz	short loc_67CF263C
mov	eax, [esi+18h]
test	eax, eax
jnz	short loc_67CF263A
jmp	short loc_67CF263C
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	ebx, [esp+0B8h+var_58]
mov	esi, [esp+0B8h+var_54]
mov	eax, [esp+0B8h+var_50]
mov	edx, ds:__stack_chk_guard
mov	[esp+0B8h+var_6C], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF26D0
mov	[esp+0B8h+var_B0], eax
mov	[esp+0B8h+var_B4], offset aLookupOfIpAddr 
mov	[esp+0B8h+var_B8], offset aNetwork 
call	purple_debug_error
mov	[esp+0B8h+var_B8], ebx
call	g_slist_free
			
mov	eax, [esp+0B8h+var_6C]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF276D
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
align 10h
test	ebx, ebx
jz	short loc_67CF26B6
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CF2728
mov	eax, [eax]
movzx	edx, word ptr [eax]
mov	[esp+0B8h+var_AC], 2Eh 
lea	edi, [esp+0B8h+var_9A]
mov	[esp+0B8h+var_B0], edi 
cmp	dx, 17h
jz	short loc_67CF2758
add	eax, 4
mov	[esp+0B8h+var_B4], eax 
mov	[esp+0B8h+var_B8], edx 
call	wpurple_inet_ntop
mov	[esp+0B8h+var_B8], edi
call	g_strdup
mov	[esi], eax
mov	[esp+0B8h+var_B0], eax
mov	[esp+0B8h+var_B4], offset aSetIpAddressS 
mov	[esp+0B8h+var_B8], offset aNetwork 
call	purple_debug_info
nop
			
mov	[esp+0B8h+var_B4], ebx
mov	[esp+0B8h+var_B8], ebx
call	g_slist_delete_link
mov	ebx, eax
mov	eax, [eax]
mov	[esp+0B8h+var_B8], eax
call	g_free
mov	[esp+0B8h+var_B4], ebx
mov	[esp+0B8h+var_B8], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF2728
jmp	loc_67CF26B6
align 4
add	eax, 8
mov	[esp+0B8h+var_B4], eax 
mov	[esp+0B8h+var_B8], 17h 
call	wpurple_inet_ntop
jmp	short loc_67CF2705
call	__stack_chk_fail
align 4
public purple_network_ip_atoi
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF27F8
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], offset a__0 
mov	[esp+2Ch+Str], eax
call	g_strsplit
mov	esi, eax
mov	edx, [eax]
test	edx, edx
jz	short loc_67CF27EC
xor	ebx, ebx
nop
mov	[esp+2Ch+Str], edx 
call	atoi
mov	ds:byte_67D721B0[ebx], al
inc	ebx
mov	edx, [esi+ebx*4]
test	edx, edx
jnz	short loc_67CF27B0
mov	[esp+2Ch+Str], esi
call	g_strfreev
mov	eax, offset byte_67D721B0
cmp	ebx, 4
jnz	short loc_67CF2818
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF281C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+Str], eax
call	g_strfreev
xor	eax, eax
jmp	short loc_67CF27D8
mov	[esp+2Ch+var_24], offset aIpNull 
mov	[esp+2Ch+var_28], offset aPurple_network 
mov	[esp+2Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF27D8
xor	eax, eax
jmp	short loc_67CF27D8
call	__stack_chk_fail
align 4
public purple_network_set_public_ip
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF285C
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleNetworkP 
call	purple_prefs_set_string
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF287A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIpNull 
mov	[esp+2Ch+var_28], offset aPurple_netwo_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF284B
call	__stack_chk_fail
align 10h
public purple_network_get_public_ip
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleNetworkP 
call	purple_prefs_get_string
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF28AA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_network_get_local_system_ip
			
push	edi
push	esi
push	ebx
sub	esp, 430h
mov	ebx, [esp+43Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+43Ch+var_10], eax
xor	eax, eax
mov	[esp+43Ch+hostlong], 7F000001h 
call	htonl
push	ecx
mov	edi, eax
test	ebx, ebx
js	loc_67CF29A2
mov	[esp+43Ch+var_418], 400h
lea	esi, [esp+43Ch+var_410]
mov	[esp+43Ch+var_414], esi
lea	eax, [esp+43Ch+var_418]
mov	[esp+43Ch+var_434], eax	
mov	[esp+43Ch+var_438], 8912h 
mov	[esp+43Ch+hostlong], ebx 
call	wpurple_ioctl
			
mov	ecx, [esp+43Ch+var_418]
add	ecx, esi
mov	edx, esi
lea	esi, [esi+0]
			
cmp	edx, ecx
jnb	short loc_67CF2984
add	edx, 18h
cmp	word ptr [edx-10h], 2
jnz	short loc_67CF2918
mov	ebx, edx
sub	ebx, esi
mov	ebx, [esp+ebx+43Ch+netlong]
cmp	ebx, edi
jz	short loc_67CF2918
mov	[esp+43Ch+hostlong], ebx 
call	ntohl
push	edx
movzx	edx, al
mov	[esp+43Ch+var_424], edx
movzx	edx, ah
mov	[esp+43Ch+var_428], edx
mov	edx, eax
shr	edx, 10h
and	edx, 0FFh
mov	[esp+43Ch+var_42C], edx
shr	eax, 18h
mov	[esp+43Ch+var_430], eax
mov	[esp+43Ch+var_434], offset aLu_Lu_Lu_Lu	
mov	[esp+43Ch+var_438], 10h
mov	[esp+43Ch+hostlong], offset dword_67D721B4
call	g_snprintf
mov	eax, offset dword_67D721B4
jmp	short loc_67CF2989
align 4
mov	eax, offset a0_0_0_0 
mov	edx, [esp+43Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF29FD
add	esp, 430h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+43Ch+var_434], 0
mov	[esp+43Ch+var_438], 1
mov	[esp+43Ch+hostlong], 2
call	wpurple_socket
mov	ebx, eax
mov	[esp+43Ch+var_418], 400h
lea	esi, [esp+43Ch+var_410]
mov	[esp+43Ch+var_414], esi
lea	eax, [esp+43Ch+var_418]
mov	[esp+43Ch+var_434], eax	
mov	[esp+43Ch+var_438], 8912h 
mov	[esp+43Ch+hostlong], ebx 
call	wpurple_ioctl
test	ebx, ebx
js	loc_67CF290D
mov	[esp+43Ch+hostlong], ebx 
call	wpurple_close
jmp	loc_67CF290D
call	__stack_chk_fail
align 4
public purple_network_get_all_local_system_ips
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 43Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+44Ch+var_20], eax
xor	eax, eax
mov	[esp+44Ch+var_444], 0
mov	[esp+44Ch+var_448], 1
mov	[esp+44Ch+var_44C], 2
call	wpurple_socket
mov	ebx, eax
mov	[esp+44Ch+var_438], 400h
lea	ebp, [esp+44Ch+var_420]
mov	[esp+44Ch+var_434], ebp
lea	eax, [esp+44Ch+var_438]
mov	[esp+44Ch+var_444], eax	
mov	[esp+44Ch+var_448], 8912h 
mov	[esp+44Ch+var_44C], ebx	
call	wpurple_ioctl
mov	[esp+44Ch+var_44C], ebx	
call	wpurple_close
mov	ecx, [esp+44Ch+var_438]
lea	eax, [ebp+ecx+0]
cmp	ebp, eax
jnb	loc_67CF2B28
mov	edx, ebp
xor	edi, edi
lea	esi, [esp+44Ch+var_430]
jmp	short loc_67CF2A8E
mov	edx, ebx
lea	eax, [ebp+ecx+0]
cmp	ebx, eax
jnb	short loc_67CF2AF4
			
lea	ebx, [edx+18h]
cmp	word ptr [ebx-10h], 2
jnz	short loc_67CF2A84
mov	[esp+44Ch+var_440], 10h	
mov	[esp+44Ch+var_444], esi	
add	edx, 0Ch
mov	[esp+44Ch+var_448], edx	
mov	[esp+44Ch+var_44C], 2 
call	wpurple_inet_ntop
mov	[esp+44Ch+var_444], esi
mov	[esp+44Ch+var_448], offset aFoundLocalIFWi 
mov	[esp+44Ch+var_44C], offset aNetwork 
call	purple_debug_info
mov	[esp+44Ch+var_448], offset a127_0_0_1 
mov	[esp+44Ch+var_44C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CF2B10
mov	ecx, [esp+44Ch+var_438]
mov	edx, ebx
lea	eax, [ebp+ecx+0]
cmp	ebx, eax
jb	short loc_67CF2A8E
lea	esi, [esi+0]
			
mov	eax, edi
mov	edx, [esp+44Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2B2C
add	esp, 43Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+44Ch+var_44C], esi
call	g_strdup
mov	[esp+44Ch+var_448], eax
mov	[esp+44Ch+var_44C], edi
call	g_list_append
mov	edi, eax
jmp	short loc_67CF2AE3
xor	edi, edi
jmp	short loc_67CF2AF4
call	__stack_chk_fail
align 4
public purple_network_get_my_ip
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleNetworkA 
call	purple_prefs_get_bool
test	eax, eax
jnz	short loc_67CF2B8C
call	purple_network_get_public_ip
mov	ebx, eax
test	eax, eax
jz	short loc_67CF2B6F
mov	[esp+2Ch+var_2C], eax
call	purple_network_ip_atoi
test	eax, eax
jnz	short loc_67CF2BAC
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2BD5
mov	[esp+2Ch+arg_0], esi 
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_network_get_local_system_ip
align 4
mov	[esp+2Ch+var_2C], 0
call	purple_stun_discover
test	eax, eax
jz	short loc_67CF2BA1
cmp	dword ptr [eax], 2
jz	short loc_67CF2BC0
call	purple_upnp_get_public_ip
mov	ebx, eax
test	eax, eax
jz	short loc_67CF2BC8
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2BD5
add	esp, 24h
pop	ebx
pop	esi
retn
lea	ebx, [eax+8]
jmp	short loc_67CF2BAC
align 4
call	purple_pmp_get_public_ip
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF2BAC
jmp	short loc_67CF2B6F
			
call	__stack_chk_fail
align 4
public purple_network_listen_map_external
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	dword_67D303E4,	eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF2C03
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_network_listen_cancel
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_67CF2C2A
mov	[esp+2Ch+var_2C], eax
call	purple_upnp_cancel_port_mapping
mov	eax, [ebx+1Ch]
test	eax, eax
jle	short loc_67CF2C39
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF2C52
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public purple_network_get_port_from_fd
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
js	short loc_67CF2CB0
mov	[esp+3Ch+var_24], 10h
lea	edx, [esp+3Ch+var_24]
mov	[esp+3Ch+var_34], edx 
lea	edx, [esp+3Ch+var_20]
mov	[esp+3Ch+var_38], edx 
mov	dword ptr [esp+3Ch+netshort], eax 
call	wpurple_getsockname
inc	eax
jz	short loc_67CF2CD0
movzx	eax, word ptr [esp+3Ch+var_20.sa_data]
mov	dword ptr [esp+3Ch+netshort], eax 
call	ntohs
push	edx
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2CFB
add	esp, 3Ch
retn
mov	[esp+3Ch+var_34], offset aFd0 
mov	[esp+3Ch+var_38], offset aPurple_netwo_1 
mov	dword ptr [esp+3Ch+netshort], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF2CA0
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+3Ch+netshort], eax
call	wpurple_strerror
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aGetsocknameS 
mov	dword ptr [esp+3Ch+netshort], offset aNetwork 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CF2CA0
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
test	eax, eax
jz	loc_67CF2DDC
mov	ecx, [ebx+0Ch]
test	ecx, ecx
jnz	short loc_67CF2D7C
mov	dword ptr [ebx+0Ch], 1
cmp	dword ptr [ebx+4], 1
jz	loc_67CF2E40
mov	esi, offset aUdp 
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax 
call	purple_network_get_port_from_fd
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_67CF2D00
mov	[esp+2Ch+var_28], esi
movzx	eax, ax
mov	[esp+2Ch+var_2C], eax
call	purple_upnp_set_port_mapping
mov	[ebx+18h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF2E53
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax 
call	purple_network_get_port_from_fd
mov	edx, [ebx+4]
mov	[esp+2Ch+var_24], edx
movzx	eax, ax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D721C4
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CF2DB6
mov	edx, [ebx+14h]
mov	[esp+2Ch+var_28], edx
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	dword ptr [ebx+18h], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF2E53
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_network_listen_cancel
align 4
mov	[esp+2Ch+var_28], offset aCouldnTCreateU 
mov	[esp+2Ch+var_2C], offset aNetwork 
call	purple_debug_warning
mov	esi, [ebx+8]
test	esi, esi
jz	short loc_67CF2DA1
mov	dword ptr [ebx+8], 0
mov	dword ptr [ebx+0Ch], 0
cmp	dword ptr [ebx+4], 1
jz	short loc_67CF2E4C
mov	esi, offset aUdp 
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax 
call	purple_network_get_port_from_fd
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_67CF2D00
mov	[esp+2Ch+var_28], esi
movzx	eax, ax
mov	[esp+2Ch+var_2C], eax
call	purple_upnp_remove_port_mapping
mov	[ebx+18h], eax
jmp	loc_67CF2D65
align 10h
mov	esi, offset aTcp 
jmp	loc_67CF2D3D
align 4
mov	esi, offset aTcp 
jmp	short loc_67CF2E10
			
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax 
call	purple_network_get_port_from_fd
mov	edx, [ebx+4]
mov	[esp+2Ch+var_24], edx
movzx	eax, ax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D721C8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CF2EAC
mov	edx, [ebx+14h]
mov	[esp+2Ch+var_28], edx
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	[esp+2Ch+var_2C], ebx
call	purple_network_listen_cancel
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2EC7
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_network_is_available
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ecx, ds:dword_67D721CC
test	ecx, ecx
jle	short loc_67CF2EFC
mov	eax, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF2F0B
add	esp, 1Ch
retn
align 4
xor	eax, eax
mov	edx, ds:dword_67D721D0
test	edx, edx
setnz	al
jmp	short loc_67CF2EE9
call	__stack_chk_fail
public purple_network_force_online
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ds:dword_67D721D0, 1
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF2F38
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_network_set_stun_server
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF2FB4
cmp	byte ptr [ebx],	0
jz	short loc_67CF2FB4
call	purple_network_is_available
test	eax, eax
jz	short loc_67CF2FD4
mov	[esp+3Ch+var_38], offset aRunningDnsQuer 
mov	[esp+3Ch+var_3C], offset aNetwork 
call	purple_debug_info
mov	[esp+3Ch+var_2C], offset dword_67D721D4
mov	[esp+3Ch+var_30], offset loc_67CF2674
mov	[esp+3Ch+var_34], 0D96h
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], 0
call	purple_dnsquery_a_account
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF2FEA
add	esp, 38h
pop	ebx
retn
align 4
			
mov	eax, ds:dword_67D721D4
test	eax, eax
jz	short loc_67CF2FA1
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	ds:dword_67D721D4, 0
jmp	short loc_67CF2FA1
align 4
mov	[esp+3Ch+var_38], offset aNetworkIsUnava 
mov	[esp+3Ch+var_3C], offset aNetwork 
call	purple_debug_info
jmp	short loc_67CF2FA1
call	__stack_chk_fail
align 10h
public purple_network_set_turn_server
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF306C
cmp	byte ptr [ebx],	0
jz	short loc_67CF306C
call	purple_network_is_available
test	eax, eax
jz	short loc_67CF308C
mov	[esp+3Ch+var_38], offset aRunningDnsQu_0 
mov	[esp+3Ch+var_3C], offset aNetwork 
call	purple_debug_info
mov	[esp+3Ch+var_3C], offset aPurpleNetworkT 
call	purple_prefs_get_int
mov	[esp+3Ch+var_2C], offset dword_67D721D8
mov	[esp+3Ch+var_30], offset loc_67CF2674
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], 0
call	purple_dnsquery_a_account
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF30A2
add	esp, 38h
pop	ebx
retn
align 4
			
mov	eax, ds:dword_67D721D8
test	eax, eax
jz	short loc_67CF3059
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	ds:dword_67D721D8, 0
jmp	short loc_67CF3059
align 4
mov	[esp+3Ch+var_38], offset aNetworkIsUna_0 
mov	[esp+3Ch+var_3C], offset aNetwork 
call	purple_debug_info
jmp	short loc_67CF3059
call	__stack_chk_fail
align 4
public purple_network_get_stun_ip
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721D4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF30CB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_network_get_turn_ip
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721D8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF30F3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_network_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D721DC
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF311B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_network_remove_port_mapping
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax 
call	purple_network_get_port_from_fd
movzx	ebx, ax
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D721C4
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67CF31C8
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D721C8
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67CF3180
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF322B
add	esp, 38h
pop	ebx
retn
align 10h
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aRemovingNatPmp 
mov	[esp+3Ch+var_3C], offset aNetwork 
mov	[esp+3Ch+var_20], eax
call	purple_debug_info
mov	[esp+3Ch+var_38], ebx
mov	eax, [esp+3Ch+var_20]
dec	eax
setz	al
movzx	eax, al
mov	[esp+3Ch+var_3C], eax
call	purple_pmp_destroy_map
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D721C8
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_remove
jmp	short loc_67CF3168
align 4
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aRemovingUpnpPo 
mov	[esp+3Ch+var_3C], offset aNetwork 
mov	[esp+3Ch+var_20], eax
call	purple_debug_info
mov	edx, offset aUdp 
mov	eax, [esp+3Ch+var_20]
dec	eax
jz	short loc_67CF3224
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset sub_67CF1F48
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], ebx
call	purple_upnp_remove_port_mapping
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D721C4
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_remove
jmp	loc_67CF3168
align 4
mov	edx, offset aTcp 
jmp	short loc_67CF31F0
call	__stack_chk_fail
public purple_network_convert_idn_to_ascii
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CF326C
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx], eax
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF328F
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aOutNull 
mov	[esp+2Ch+var_28], offset aPurple_netwo_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67CF3258
call	__stack_chk_fail
public _purple_network_set_common_socket_flags
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
js	short loc_67CF3304
mov	[esp+2Ch+var_28], 3 
mov	[esp+2Ch+var_2C], ebx 
call	wpurple_fcntl
or	ah, 8
mov	[esp+2Ch+var_24], eax 
mov	[esp+2Ch+var_28], 4 
mov	[esp+2Ch+var_2C], ebx 
call	wpurple_fcntl
test	eax, eax
jnz	short loc_67CF32EC
mov	al, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF3324
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_28], offset aCouldnTSetO_no 
mov	[esp+2Ch+var_2C], offset aNetwork 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67CF32D8
mov	[esp+2Ch+var_24], offset aFd0 
mov	[esp+2Ch+var_28], offset a_purple_networ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF32D8
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, ecx
mov	ecx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_44], ecx
mov	ecx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_40], ecx
movzx	ebp, ax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	dword ptr [esp+6Ch+var_34], 1
cmp	edx, 2
jz	short loc_67CF3368
test	edx, edx
jnz	loc_67CF3618
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], esi
mov	dword ptr [esp+6Ch+hostshort], 2
call	wpurple_socket
mov	ebx, eax
test	eax, eax
js	loc_67CF35E8
mov	[esp+6Ch+var_5C], 4 
lea	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_60], eax 
mov	[esp+6Ch+var_64], 4 
mov	[esp+6Ch+var_68], 0FFFFh 
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	wpurple_setsockopt
test	eax, eax
jnz	loc_67CF34C8
lea	edx, [esp+6Ch+var_30]
mov	ecx, 10h
xor	eax, eax
mov	edi, edx
rep stosb
mov	[esp+6Ch+var_30], 2
mov	dword ptr [esp+6Ch+hostshort], ebp 
mov	[esp+6Ch+var_48], edx
call	htons
push	edi
mov	[esp+6Ch+var_2E], ax
mov	[esp+6Ch+var_64], 10h 
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_68], edx 
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	wpurple_bind
test	eax, eax
jnz	loc_67CF35C8
cmp	esi, 1
jz	loc_67CF34F4
mov	dword ptr [esp+6Ch+hostshort], ebx
call	_purple_network_set_common_socket_flags
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	purple_network_get_port_from_fd
movzx	ebp, ax
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aListeningOnPor 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_info
mov	dword ptr [esp+6Ch+hostshort], 20h
call	g_malloc0
mov	edi, eax
mov	[eax], ebx
mov	dword ptr [eax+0Ch], 1
mov	dword ptr [eax+8], 1
mov	edx, [esp+6Ch+var_44]
mov	[eax+10h], edx
mov	edx, [esp+6Ch+var_40]
mov	[eax+14h], edx
mov	[eax+4], esi
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	purple_socket_speaks_ipv4
test	eax, eax
jz	short loc_67CF347F
mov	ebx, dword_67D303E4
test	ebx, ebx
jnz	loc_67CF3544
			
mov	[esp+6Ch+var_68], offset aSkippingExtern 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_info
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset sub_67CF2E58
mov	dword ptr [esp+6Ch+hostshort], 0
call	purple_timeout_add
mov	[edi+1Ch], eax
			
mov	eax, edi
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CF3641
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+6Ch+hostshort], eax
call	wpurple_strerror
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSetsockoptS 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_warning
jmp	loc_67CF33BA
mov	[esp+6Ch+var_68], 4 
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	wpurple_listen
test	eax, eax
jz	loc_67CF340B
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+6Ch+hostshort], eax
call	wpurple_strerror
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aListenS 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_warning
mov	dword ptr [esp+6Ch+hostshort], ebx 
call	wpurple_close
xor	edi, edi
jmp	loc_67CF34AE
align 4
mov	dword ptr [esp+6Ch+hostshort], offset aPurpleNetworkM 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67CF347F
dec	esi
setz	bl
mov	[esp+6Ch+var_60], 0E10h
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], ebp
movzx	eax, bl
mov	dword ptr [esp+6Ch+hostshort], eax
call	purple_pmp_create_map
test	eax, eax
jnz	short loc_67CF35A8
test	bl, bl
jnz	loc_67CF3637
mov	eax, offset aUdp 
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], offset sub_67CF2D00
mov	[esp+6Ch+var_68], eax
mov	dword ptr [esp+6Ch+hostshort], ebp
call	purple_upnp_set_port_mapping
mov	[edi+18h], eax
jmp	loc_67CF34AE
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aCreatedNatPmpM 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_info
jmp	loc_67CF3493
align 4
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+6Ch+hostshort], eax
call	wpurple_strerror
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aBindS	
jmp	loc_67CF3527
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+6Ch+hostshort], eax
call	wpurple_strerror
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], offset aSocketS 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_warning
xor	edi, edi
jmp	loc_67CF34AE
align 4
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aAddressFamilyD 
mov	dword ptr [esp+6Ch+hostshort], offset aNetwork 
call	purple_debug_warning
xor	edi, edi
jmp	loc_67CF34AE
mov	eax, offset aTcp 
jmp	loc_67CF3588
call	__stack_chk_fail
align 4
public purple_network_listen_range_family
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], eax
mov	edi, [esp+4Ch+arg_10]
mov	ebp, [esp+4Ch+arg_14]
mov	ebx, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset aPurpleNetwor_0 
mov	[esp+4Ch+var_34], edx
call	purple_prefs_get_bool
test	eax, eax
mov	edx, [esp+4Ch+var_34]
jnz	short loc_67CF36CC
cmp	si, bx
jnb	short loc_67CF369E
mov	esi, edx
jmp	short loc_67CF369E
align 4
inc	ebx
cmp	bx, si
ja	short loc_67CF36B7
			
movzx	eax, bx
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
mov	ecx, [esp+4Ch+var_30]
xor	edx, edx
call	sub_67CF332C
test	eax, eax
jz	short loc_67CF3698
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF36F1
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], offset aPurpleNetwor_1 
call	purple_prefs_get_int
mov	ebx, eax
mov	[esp+4Ch+var_4C], offset aPurpleNetwor_2 
call	purple_prefs_get_int
mov	esi, eax
cmp	bx, ax
jbe	short loc_67CF369E
xor	eax, eax
jmp	short loc_67CF36B7
call	__stack_chk_fail
align 4
public purple_network_listen_range
sub	esp, 3Ch
movzx	eax, [esp+3Ch+arg_0]
movzx	edx, [esp+3Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_28], ecx
mov	ecx, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], ecx
mov	ecx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], ecx
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_network_listen_range_family
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF374D
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_network_listen_family
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, [esp+2Ch+arg_C]
mov	esi, [esp+2Ch+arg_10]
movzx	eax, word ptr [esp+2Ch+arg_0]
mov	edi, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edi
xor	edi, edi
test	ax, ax
jnz	short loc_67CF37B4
mov	[esp+2Ch+var_24], offset aPort0_0 
mov	[esp+2Ch+var_28], offset aPurple_netwo_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF37D3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	edi, [esp+2Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CF37D3
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CF332C
			
call	__stack_chk_fail
public purple_network_listen
sub	esp, 3Ch
movzx	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], edx
mov	edx, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], eax
call	purple_network_listen_family
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF3824
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_network_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_14], 0
call	sub_67CF1F80
mov	ds:dword_67D721E0, 1
test	eax, eax
js	loc_67CF3A94
mov	ds:dword_67D721CC, eax
mov	[esp+3Ch+var_38], offset aWsanspioctl 
mov	[esp+3Ch+var_3C], offset aWs2_32_dll 
call	wpurple_find_and_loadproc
mov	ds:dword_67D721E4, eax
test	eax, eax
jz	short loc_67CF38BF
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_24], eax
mov	[esp+3Ch+var_28], 1
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], offset sub_67CF20FC
call	g_thread_create_full
test	eax, eax
jz	loc_67CF3AA4
			
mov	[esp+3Ch+var_3C], offset aPurpleNetwork	
call	purple_prefs_add_none
mov	[esp+3Ch+var_38], offset byte_67D3BC3A
mov	[esp+3Ch+var_3C], offset aPurpleNetworkS 
call	purple_prefs_add_string
mov	[esp+3Ch+var_38], offset byte_67D3BC3A
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_3 
call	purple_prefs_add_string
mov	[esp+3Ch+var_38], 0D96h
mov	[esp+3Ch+var_3C], offset aPurpleNetworkT 
call	purple_prefs_add_int
mov	[esp+3Ch+var_38], 0D96h
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_4 
call	purple_prefs_add_int
mov	[esp+3Ch+var_38], offset byte_67D3BC3A
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_5 
call	purple_prefs_add_string
mov	[esp+3Ch+var_38], offset byte_67D3BC3A
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_6 
call	purple_prefs_add_string
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], offset aPurpleNetworkA 
call	purple_prefs_add_bool
mov	[esp+3Ch+var_38], offset byte_67D3BC3A
mov	[esp+3Ch+var_3C], offset aPurpleNetworkP 
call	purple_prefs_add_string
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], offset aPurpleNetworkM 
call	purple_prefs_add_bool
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_0 
call	purple_prefs_add_bool
mov	[esp+3Ch+var_38], 400h
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_1 
call	purple_prefs_add_int
mov	[esp+3Ch+var_38], 800h
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_2 
call	purple_prefs_add_int
mov	[esp+3Ch+var_3C], offset aPurpleNetworkM 
call	purple_prefs_get_bool
test	eax, eax
jnz	short loc_67CF39DB
mov	[esp+3Ch+var_3C], offset aPurpleNetworkA 
call	purple_prefs_get_bool
test	eax, eax
jz	short loc_67CF39EF
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], 0
call	purple_upnp_discover
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID
mov	[esp+3Ch+var_38], offset aNetworkConfigu 
mov	[esp+3Ch+var_3C], offset dword_67D721DC
call	purple_signal_register
call	purple_pmp_init
call	purple_upnp_init
mov	[esp+3Ch+var_3C], offset aPurpleNetworkS 
call	purple_prefs_get_string
mov	[esp+3Ch+var_3C], eax
call	purple_network_set_stun_server
mov	[esp+3Ch+var_3C], offset aPurpleNetwor_3 
call	purple_prefs_get_string
mov	[esp+3Ch+var_3C], eax
call	purple_network_set_turn_server
mov	[esp+3Ch+var_38], offset loc_67D2EBBC
mov	[esp+3Ch+var_3C], offset g_direct_hash
call	g_hash_table_new
mov	ds:dword_67D721C4, eax
mov	[esp+3Ch+var_38], offset loc_67D2EBBC
mov	[esp+3Ch+var_3C], offset g_direct_hash
call	g_hash_table_new
mov	ds:dword_67D721C8, eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF3AD3
add	esp, 3Ch
retn
align 4
mov	ds:dword_67D721CC, 1
jmp	loc_67CF38BF
align 4
mov	eax, [esp+3Ch+var_14]
test	eax, eax
jz	short loc_67CF3ACC
mov	eax, [eax+8]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aCouldnTCreateN 
mov	[esp+3Ch+var_3C], offset aNetwork 
call	purple_debug_error
jmp	loc_67CF38BF
mov	eax, offset byte_67D3BC3A
jmp	short loc_67CF3AAF
call	__stack_chk_fail
public purple_network_uninit
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:g_threads_got_initialized
mov	esi, [ebx]
test	esi, esi
jz	short loc_67CF3B0F
mov	eax, ds:g_thread_functions_for_glib_use
mov	esi, [eax+4]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF3C14
mov	[esp+2Ch+hLookup], eax
call	esi
mov	ds:dword_67D721E0, 0
mov	ecx, ds:hLookup
test	ecx, ecx
jz	short loc_67CF3B52
mov	[esp+2Ch+var_28], offset aTerminatingThe 
mov	[esp+2Ch+hLookup], offset aNetwork 
call	purple_debug_warning
mov	eax, ds:hLookup
mov	[esp+2Ch+hLookup], eax 
call	WSALookupServiceEnd
push	edx
inc	eax
jz	short loc_67CF3BC4
mov	ds:hLookup, 0
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF3B72
mov	eax, ds:g_thread_functions_for_glib_use
mov	ebx, [eax+0Ch]
mov	eax, ds:dword_67D721E8
test	eax, eax
jz	loc_67CF3C00
mov	[esp+2Ch+hLookup], eax
call	ebx
mov	[esp+2Ch+var_28], offset aNetworkConfigu 
mov	[esp+2Ch+hLookup], offset dword_67D721DC
call	purple_signal_unregister
mov	eax, ds:dword_67D721D4
test	eax, eax
jz	short loc_67CF3B97
mov	[esp+2Ch+hLookup], eax
call	g_free
mov	eax, ds:dword_67D721C4
mov	[esp+2Ch+hLookup], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D721C8
mov	[esp+2Ch+hLookup], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF3C25
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	WSAGetLastError
mov	esi, eax
mov	[esp+2Ch+hLookup], eax
call	g_win32_error_message
mov	edi, eax
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aUnableToKillNl 
mov	[esp+2Ch+hLookup], offset aNetwork 
call	purple_debug_warning
mov	[esp+2Ch+hLookup], edi
call	g_free
jmp	loc_67CF3B48
align 10h
mov	[esp+2Ch+hLookup], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF3B6D
align 4
mov	[esp+2Ch+hLookup], offset dword_67D721E8
call	g_static_mutex_get_mutex_impl
jmp	loc_67CF3B0A
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF3C70
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF3C8E
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_notify_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF3C5E
call	__stack_chk_fail
align 4
public purple_notify_message
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	ecx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	ebx, [esp+4Ch+arg_14]
mov	esi, [esp+4Ch+arg_18]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CF3D5C
mov	edx, ds:dword_67D721F0
test	edx, edx
jz	short loc_67CF3D38
mov	edx, [edx]
test	edx, edx
jz	short loc_67CF3D38
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ecx
call	edx
mov	ebp, eax
test	eax, eax
jz	short loc_67CF3D38
mov	[esp+4Ch+var_4C], 14h
call	g_malloc0
mov	edi, eax
mov	dword ptr [eax], 0
mov	edx, [esp+4Ch+var_30]
mov	[eax+4], edx
mov	[eax+8], ebp
mov	[eax+0Ch], ebx
mov	[eax+10h], esi
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D721F4
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [edi+8]
jmp	short loc_67CF3D43
align 4
			
test	ebx, ebx
jz	short loc_67CF3D58
mov	[esp+4Ch+var_4C], esi
call	ebx
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF3D7C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_67CF3D43
mov	[esp+4Ch+var_44], offset aPrimaryNull 
mov	[esp+4Ch+var_48], offset aPurple_notif_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF3D43
call	__stack_chk_fail
align 4
public purple_notify_email
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	edx, [esp+5Ch+arg_C]
mov	ecx, [esp+5Ch+arg_10]
mov	esi, [esp+5Ch+arg_14]
mov	ebx, [esp+5Ch+arg_18]
mov	[esp+5Ch+var_30], ebx
mov	ebx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], ebx
xor	ebx, ebx
mov	ebx, ds:dword_67D721F0
test	ebx, ebx
jz	loc_67CF3E68
cmp	dword ptr [ebx+4], 0
jz	loc_67CF3E68
mov	[esp+5Ch+var_48], ecx
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aDisplayingEmai 
mov	[esp+5Ch+var_5C], offset dword_67D721F8
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_38], edx
mov	[esp+5Ch+var_3C], ecx
call	purple_signal_emit
mov	ecx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_4C], ecx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], edx
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebp
call	dword ptr [ebx+4]
mov	edi, eax
test	eax, eax
jz	short loc_67CF3E68
mov	[esp+5Ch+var_5C], 14h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 1
mov	[eax+4], ebp
mov	[eax+8], edi
mov	[eax+0Ch], esi
mov	edx, [esp+5Ch+var_30]
mov	[eax+10h], edx
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D721F4
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [ebx+8]
jmp	short loc_67CF3E77
align 4
			
test	esi, esi
jz	short loc_67CF3E8C
mov	ebx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], ebx
call	esi
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF3E90
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_67CF3E77
call	__stack_chk_fail
align 4
public purple_notify_emails
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_38], edx
mov	ebx, [esp+6Ch+arg_4]
mov	esi, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_30], esi
mov	edi, [esp+6Ch+arg_C]
mov	ebp, [esp+6Ch+arg_10]
mov	eax, [esp+6Ch+arg_14]
mov	ecx, [esp+6Ch+arg_18]
mov	edx, [esp+6Ch+arg_1C]
mov	esi, [esp+6Ch+arg_20]
mov	[esp+6Ch+var_34], esi
mov	esi, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], esi
xor	esi, esi
cmp	ebx, 1
jz	loc_67CF3FE4
mov	esi, ds:dword_67D721F0
test	esi, esi
jz	loc_67CF3FD0
cmp	dword ptr [esi+8], 0
jz	loc_67CF3FD0
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], ecx
mov	[esp+6Ch+var_5C], eax
mov	[esp+6Ch+var_60], ebp
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aDisplayingEm_0 
mov	[esp+6Ch+var_6C], offset dword_67D721F8
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_40], ecx
call	purple_signal_emit
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_54], ecx
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_58], eax
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], edi
mov	edi, [esp+6Ch+var_30]
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], ebx
mov	edi, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], edi
call	dword ptr [esi+8]
mov	esi, eax
test	eax, eax
mov	edx, [esp+6Ch+var_44]
jz	short loc_67CF3FD0
mov	[esp+6Ch+var_6C], 14h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 2
mov	[eax+4], edi
mov	[eax+8], esi
mov	edx, [esp+6Ch+var_44]
mov	[eax+0Ch], edx
mov	edx, [esp+6Ch+var_34]
mov	[eax+10h], edx
mov	[esp+6Ch+var_68], eax
mov	eax, ds:dword_67D721F4
mov	[esp+6Ch+var_6C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [ebx+8]
			
mov	edi, [esp+6Ch+var_20]
xor	edi, ds:__stack_chk_guard
jnz	loc_67CF405C
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
test	edx, edx
jz	short loc_67CF4044
mov	esi, [esp+6Ch+var_34]
mov	[esp+6Ch+var_6C], esi
call	edx
xor	eax, eax
jmp	short loc_67CF3FB8
align 4
test	ecx, ecx
jz	short loc_67CF4050
mov	ecx, [ecx]
test	eax, eax
jz	short loc_67CF4054
mov	eax, [eax]
test	ebp, ebp
jz	short loc_67CF404C
mov	ebx, [ebp+0]
test	edi, edi
jz	short loc_67CF4058
mov	esi, [edi]
mov	edi, [esp+6Ch+var_20]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67CF405C
mov	edi, [esp+6Ch+var_34]
mov	[esp+6Ch+arg_18], edi
mov	[esp+6Ch+arg_14], edx
mov	[esp+6Ch+arg_10], ecx
mov	[esp+6Ch+arg_C], eax
mov	[esp+6Ch+arg_8], ebx
mov	[esp+6Ch+arg_4], esi
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+arg_0], edx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_notify_email
align 4
xor	eax, eax
jmp	loc_67CF3FB8
align 4
xor	ebx, ebx
jmp	short loc_67CF3FF7
xor	ecx, ecx
jmp	short loc_67CF3FEA
xor	eax, eax
jmp	short loc_67CF3FF0
xor	esi, esi
jmp	short loc_67CF3FFD
			
call	__stack_chk_fail
align 4
public purple_notify_formatted
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	ecx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	ebx, [esp+4Ch+arg_14]
mov	esi, [esp+4Ch+arg_18]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CF412C
mov	edx, ds:dword_67D721F0
test	edx, edx
jz	short loc_67CF4108
mov	edx, [edx+0Ch]
test	edx, edx
jz	short loc_67CF4108
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ecx
call	edx
mov	ebp, eax
test	eax, eax
jz	short loc_67CF4108
mov	[esp+4Ch+var_4C], 14h
call	g_malloc0
mov	edi, eax
mov	dword ptr [eax], 3
mov	edx, [esp+4Ch+var_30]
mov	[eax+4], edx
mov	[eax+8], ebp
mov	[eax+0Ch], ebx
mov	[eax+10h], esi
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D721F4
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [edi+8]
jmp	short loc_67CF4113
align 4
			
test	ebx, ebx
jz	short loc_67CF4128
mov	[esp+4Ch+var_4C], esi
call	ebx
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF414C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_67CF4113
mov	[esp+4Ch+var_44], offset aPrimaryNull 
mov	[esp+4Ch+var_48], offset aPurple_notif_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF4113
call	__stack_chk_fail
align 4
public purple_notify_searchresults
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], eax
mov	edx, [esp+5Ch+arg_8]
mov	ecx, [esp+5Ch+arg_C]
mov	ebp, [esp+5Ch+arg_10]
mov	ebx, [esp+5Ch+arg_14]
mov	esi, [esp+5Ch+arg_18]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D721F0
test	eax, eax
jz	short loc_67CF41FC
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF41FC
mov	[esp+5Ch+var_48], esi
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], ecx
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], edi
call	eax
test	eax, eax
jz	short loc_67CF41FC
mov	[esp+5Ch+var_5C], 14h
mov	[esp+5Ch+var_34], eax
call	g_malloc0
mov	ebp, eax
mov	dword ptr [eax], 4
mov	[eax+4], edi
mov	edx, [esp+5Ch+var_34]
mov	[eax+8], edx
mov	[eax+0Ch], ebx
mov	[eax+10h], esi
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D721F4
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [ebp+8]
jmp	short loc_67CF4207
align 4
			
test	ebx, ebx
jz	short loc_67CF421C
mov	[esp+5Ch+var_5C], esi
call	ebx
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4220
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	eax, eax
jmp	short loc_67CF4207
call	__stack_chk_fail
align 4
public purple_notify_searchresults_free
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CF42FC
mov	ebx, [esi+8]
test	ebx, ebx
jz	short loc_67CF4273
mov	edi, [ebx]
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], edi
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF424C
mov	ebx, [esi+4]
test	ebx, ebx
jz	short loc_67CF42B0
xchg	ax, ax
mov	edi, [ebx]
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	[esp+2Ch+var_2C], edi
call	g_list_foreach
mov	[esp+2Ch+var_2C], edi
call	g_list_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF427C
mov	ebx, [esi]
test	ebx, ebx
jz	short loc_67CF42DE
xchg	ax, ax
mov	edi, [ebx]
mov	eax, [edi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], edi
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF42B8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF432B
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF432B
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_notify_searchresults_new_rows
push	esi
push	ebx
sub	esp, 14h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721F0
test	eax, eax
jz	short loc_67CF4380
mov	esi, [eax+10h]
test	esi, esi
jz	short loc_67CF4380
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67CF4392
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
mov	eax, [eax+14h]
add	esp, 14h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4392
add	esp, 14h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_notify_searchresults_button_add
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF43F4
test	esi, esi
jz	short loc_67CF4424
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	[eax+4], esi
mov	[eax], edi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF443A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF443A
mov	[esp+2Ch+arg_8], offset	aResultsNull 
mov	[esp+2Ch+arg_4], offset	aPurple_notif_3	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF443A
mov	[esp+2Ch+arg_8], offset	aCbNull_1 
jmp	short loc_67CF4408
			
call	__stack_chk_fail
align 10h
public purple_notify_searchresults_button_add_labeled
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CF44F8
test	ebp, ebp
jz	loc_67CF4510
test	ebx, ebx
jz	loc_67CF452C
cmp	byte ptr [ebx],	0
jnz	short loc_67CF44B0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF4545
mov	[esp+3Ch+arg_8], offset	aLabel0	
			
mov	[esp+3Ch+arg_4], offset	aPurple_notif_4	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 10h
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	edi, eax
mov	[eax+4], ebp
mov	dword ptr [eax], 0
mov	[esp+3Ch+var_3C], ebx
call	g_strdup
mov	[edi+8], eax
mov	[esp+3Ch+var_38], edi
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	g_list_append
mov	[esi+8], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4545
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4545
mov	[esp+3Ch+arg_8], offset	aResultsNull 
jmp	short loc_67CF4493
align 10h
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4545
mov	[esp+3Ch+arg_8], offset	aCbNull_1 
jmp	loc_67CF4493
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4545
mov	[esp+3Ch+arg_8], offset	aLabelNull 
jmp	loc_67CF4493
			
call	__stack_chk_fail
align 4
public purple_notify_searchresults_new
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4576
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_notify_searchresults_column_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CF45C0
test	eax, eax
jz	short loc_67CF45E0
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF45FE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF45AC
align 10h
mov	[esp+2Ch+var_24], offset aColumnNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF45AC
call	__stack_chk_fail
align 4
public purple_notify_searchresults_row_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CF4648
test	eax, eax
jz	short loc_67CF4668
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+4], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4686
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4636
align 4
mov	[esp+2Ch+var_24], offset aRowNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4636
call	__stack_chk_fail
align 4
public purple_notify_searchresults_column_new
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF46D0
mov	[esp+2Ch+var_2C], 4
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF46F0
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aTitleNull_0 
mov	[esp+2Ch+var_28], offset aPurple_notif_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF46BC
call	__stack_chk_fail
align 4
public purple_notify_searchresults_get_columns_count
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF472C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF475A
mov	eax, [eax]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_list_length
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF475A
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_notify_searchresults_get_rows_count
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF4794
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF47C2
mov	eax, [eax+4]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_list_length
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_notif_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF47C2
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_notify_searchresults_column_get_title
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF4804
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_list_nth_data
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4824
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_noti_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF47F3
call	__stack_chk_fail
align 4
public purple_notify_searchresults_row_get
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF4868
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF4896
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+4]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_list_nth_data
align 4
mov	[esp+2Ch+var_24], offset aResultsNull 
mov	[esp+2Ch+var_28], offset aPurple_noti_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4896
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_notify_userinfo
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF4994
mov	edx, ds:dword_67D721F0
test	edx, edx
jz	loc_67CF496C
mov	eax, [edx+18h]
test	eax, eax
jz	loc_67CF496C
mov	[esp+5Ch+var_5C], esi
mov	[esp+5Ch+var_34], edx
call	purple_connection_get_account
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aDisplayingUser 
mov	[esp+5Ch+var_5C], offset dword_67D721F8
call	purple_signal_emit
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], esi
mov	edx, [esp+5Ch+var_34]
call	dword ptr [edx+18h]
mov	edi, eax
test	eax, eax
jz	short loc_67CF496C
mov	[esp+5Ch+var_5C], 14h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 5
mov	[eax+4], esi
mov	[eax+8], edi
mov	[eax+0Ch], ebp
mov	edx, [esp+5Ch+var_30]
mov	[eax+10h], edx
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D721F4
mov	[esp+5Ch+var_5C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [ebx+8]
jmp	short loc_67CF497B
align 4
			
test	ebp, ebp
jz	short loc_67CF4990
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	ebp
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF49B4
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
xor	eax, eax
jmp	short loc_67CF497B
mov	[esp+5Ch+var_54], offset aWhoNull_1 
mov	[esp+5Ch+var_58], offset aPurple_noti_12 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF497B
call	__stack_chk_fail
align 4
public purple_notify_user_info_entry_new
			
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx], eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	dword ptr [ebx+8], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4A14
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_notify_user_info_new
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 4
call	g_malloc0
mov	dword ptr [eax], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4A4C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_notify_user_info_destroy
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi]
test	ebx, ebx
jz	short loc_67CF4AA2
xchg	ax, ax
mov	eax, [ebx]
call	sub_67CF3C2C
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF4A70
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4AA6
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
xor	eax, eax
jmp	short loc_67CF4A80
call	__stack_chk_fail
align 4
public purple_notify_user_info_get_entries
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF4AD8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4AF8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_infoNull	
mov	[esp+2Ch+var_28], offset aPurple_noti_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF4AC5
call	__stack_chk_fail
align 10h
public purple_notify_user_info_get_text_with_newline
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], offset byte_67D3BF5A
call	g_string_new
mov	edi, eax
mov	esi, [ebx]
test	esi, esi
jnz	short loc_67CF4BAC
jmp	loc_67CF4BE8
align 4
			
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF4B6B
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aBSB 
mov	[esp+3Ch+var_3C], edi
call	g_string_append_printf
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF4B6B
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CF4B7E
mov	[esp+3Ch+var_38], offset asc_67D3BF65 
mov	[esp+3Ch+var_3C], edi
call	g_string_append
			
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CF4B7E
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	g_string_append
			
cmp	dword ptr [ebx+8], 1
jz	short loc_67CF4BC8
mov	eax, [esi+4]
test	eax, eax
jz	short loc_67CF4B9F
mov	eax, [eax]
cmp	dword ptr [eax+8], 1
jz	short loc_67CF4B9F
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	g_string_append
			
cmp	dword ptr [ebx+8], 2
jz	short loc_67CF4C0C
mov	esi, [esi+4]
test	esi, esi
jz	short loc_67CF4BE8
			
mov	ebx, [esi]
cmp	dword ptr [ebx+8], 2
jnz	short loc_67CF4B34
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	g_string_append
jmp	loc_67CF4B34
align 4
mov	[esp+3Ch+var_38], offset aHr 
mov	[esp+3Ch+var_3C], edi
call	g_string_append
cmp	dword ptr [ebx+8], 1
jnz	short loc_67CF4B84
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67CF4BAC
lea	esi, [esi+0]
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4C1A
mov	[esp+3Ch+arg_4], 0
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], edi
call	g_string_append
jmp	short loc_67CF4BA5
call	__stack_chk_fail
align 10h
public purple_notify_user_info_entry_get_label
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF4C4C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4C6C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF4C39
call	__stack_chk_fail
align 4
public purple_notify_user_info_entry_set_label
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF4CB8
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4CD6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4CA4
call	__stack_chk_fail
align 4
public purple_notify_user_info_entry_get_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF4D08
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4D28
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF4CF6
call	__stack_chk_fail
align 10h
public purple_notify_user_info_entry_set_value
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF4D74
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4D92
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4D62
call	__stack_chk_fail
align 4
public purple_notify_user_info_entry_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF4DC4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF4DE4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF4DB2
call	__stack_chk_fail
align 4
public purple_notify_user_info_entry_set_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF4E1C
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4E3A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_info_entr 
mov	[esp+2Ch+var_28], offset aPurple_noti_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4E0A
call	__stack_chk_fail
align 10h
public purple_notify_user_info_add_pair
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_entry_new
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4E88
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_notify_user_info_add_pair_plaintext
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	g_markup_escape_text
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_notify_user_info_entry_new
mov	edi, eax
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	[esp+2Ch+var_28], edi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4EF8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
public purple_notify_user_info_prepend_pair
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_entry_new
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4F48
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_notify_user_info_remove_entry
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CF4F94
test	eax, eax
jz	short loc_67CF4FB4
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	[ebx], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF4FD2
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aUser_infoNull	
mov	[esp+2Ch+var_28], offset aPurple_noti_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4F80
align 4
mov	[esp+2Ch+var_24], offset aEntryNull 
mov	[esp+2Ch+var_28], offset aPurple_noti_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF4F80
call	__stack_chk_fail
align 4
public purple_notify_user_info_add_section_header
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_entry_new
mov	dword ptr [eax+8], 2
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF5027
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_notify_user_info_prepend_section_header
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_user_info_entry_new
mov	dword ptr [eax+8], 2
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF507B
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_notify_user_info_add_section_break
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], 0
call	purple_notify_user_info_entry_new
mov	dword ptr [eax+8], 1
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF50CF
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_notify_user_info_prepend_section_break
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], 0
call	purple_notify_user_info_entry_new
mov	dword ptr [eax+8], 1
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF5123
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_notify_user_info_remove_last_item
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_last
mov	esi, eax
test	eax, eax
jz	short loc_67CF5163
mov	eax, [eax]
call	sub_67CF3C2C
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF5175
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_notify_uri
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF51FC
mov	edx, ds:dword_67D721F0
test	edx, edx
jz	short loc_67CF5218
mov	edx, [edx+1Ch]
test	edx, edx
jz	short loc_67CF5218
mov	[esp+2Ch+var_2C], eax
call	edx
mov	edi, eax
test	eax, eax
jz	short loc_67CF5218
mov	[esp+2Ch+var_2C], 14h
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 6
mov	[eax+4], esi
mov	[eax+8], edi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D721F4
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D721F4, eax
mov	eax, [ebx+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF521C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aUriNull 
mov	[esp+2Ch+var_28], offset aPurple_noti_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67CF51E9
call	__stack_chk_fail
align 4
public purple_notify_close
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67CF52D4
mov	edi, ds:dword_67D721F0
mov	edx, ds:dword_67D721F4
test	edx, edx
jz	short loc_67CF526A
mov	ebx, [edx]
cmp	[ebx+8], esi
jz	short loc_67CF5280
mov	eax, edx
jmp	short loc_67CF5263
mov	ebx, [eax]
cmp	[ebx+8], esi
jz	short loc_67CF5280
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_67CF525C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF52F5
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], edx
call	g_list_remove
mov	ds:dword_67D721F4, eax
test	edi, edi
jz	short loc_67CF52A7
mov	eax, [edi+20h]
test	eax, eax
jz	short loc_67CF52A7
mov	[esp+2Ch+var_28], esi
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CF52B6
mov	edx, [ebx+10h]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF52F5
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aUi_handleNul_0 
mov	[esp+2Ch+var_28], offset aPurple_noti_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CF526A
			
call	__stack_chk_fail
align 4
public purple_notify_close_with_handle
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67CF53A4
mov	edi, ds:dword_67D721F0
mov	eax, ds:dword_67D721F4
xor	esi, esi
test	eax, eax
jz	short loc_67CF533B
mov	ebx, [eax]
cmp	[ebx+4], ebp
jz	short loc_67CF5350
mov	esi, eax
mov	eax, [esi+4]
test	eax, eax
jnz	short loc_67CF532B
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF53C5
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D721F4
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	ds:dword_67D721F4, eax
test	edi, edi
jz	short loc_67CF537F
mov	eax, [edi+20h]
test	eax, eax
jz	short loc_67CF537F
mov	edx, [ebx+8]
mov	[esp+3Ch+var_38], edx
mov	edx, [ebx]
mov	[esp+3Ch+var_3C], edx
call	eax
			
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67CF538E
mov	edx, [ebx+10h]
mov	[esp+3Ch+var_3C], edx
call	eax
mov	[esp+3Ch+var_3C], ebx
call	g_free
test	esi, esi
jnz	short loc_67CF5334
mov	eax, ds:dword_67D721F4
jmp	short loc_67CF5327
align 4
mov	[esp+3Ch+var_34], offset aHandleNull 
mov	[esp+3Ch+var_38], offset aPurple_noti_23 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67CF533B
call	__stack_chk_fail
align 4
public purple_notify_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D721F0, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF53F3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_notify_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D721F0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF541B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_notify_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D721F8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF5443
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_notify_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	edi, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	esi, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	[esp+5Ch+var_3C], edi
mov	[esp+5Ch+var_40], esi
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 4
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER
mov	[esp+5Ch+var_58], offset aDisplayingEmai 
mov	[esp+5Ch+var_5C], offset dword_67D721F8
call	purple_signal_register
mov	[esp+5Ch+var_5C], 8
call	purple_value_new
mov	ebp, eax
mov	[esp+5Ch+var_5C], 0Fh
call	purple_value_new
mov	edi, eax
mov	[esp+5Ch+var_5C], 0Fh
call	purple_value_new
mov	esi, eax
mov	[esp+5Ch+var_5C], 0Fh
call	purple_value_new
mov	ebx, eax
mov	[esp+5Ch+var_5C], 0Fh
call	purple_value_new
mov	[esp+5Ch+var_38], ebp
mov	[esp+5Ch+var_3C], edi
mov	[esp+5Ch+var_40], esi
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 5
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
mov	[esp+5Ch+var_58], offset aDisplayingEm_0 
mov	[esp+5Ch+var_5C], offset dword_67D721F8
call	purple_signal_register
mov	[esp+5Ch+var_58], 11h
mov	[esp+5Ch+var_5C], 1
call	purple_value_new
mov	esi, eax
mov	[esp+5Ch+var_5C], 0Dh
call	purple_value_new
mov	ebx, eax
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], 1
call	purple_value_new
mov	[esp+5Ch+var_40], esi
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 3
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER_POINTER_POINTER
mov	[esp+5Ch+var_58], offset aDisplayingUser 
mov	[esp+5Ch+var_5C], offset dword_67D721F8
call	purple_signal_register
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF55D4
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_notify_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D721F8
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF5606
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 18h
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	cl, [eax]
mov	[edx], cl
movzx	ebx, byte ptr [eax]
shl	ebx, 7
mov	cl, [eax+1]
shr	cl, 1
or	ecx, ebx
mov	[edx+1], cl
movzx	ebx, byte ptr [eax+1]
shl	ebx, 6
mov	cl, [eax+2]
shr	cl, 2
or	ecx, ebx
mov	[edx+2], cl
movzx	ebx, byte ptr [eax+2]
shl	ebx, 5
mov	cl, [eax+3]
shr	cl, 3
or	ecx, ebx
mov	[edx+3], cl
movzx	ebx, byte ptr [eax+3]
shl	ebx, 4
mov	cl, [eax+4]
shr	cl, 4
or	ecx, ebx
mov	[edx+4], cl
movzx	ebx, byte ptr [eax+4]
shl	ebx, 3
mov	cl, [eax+5]
shr	cl, 5
or	ecx, ebx
mov	[edx+5], cl
movzx	ebx, byte ptr [eax+5]
shl	ebx, 2
mov	cl, [eax+6]
shr	cl, 6
or	ecx, ebx
mov	[edx+6], cl
movzx	eax, byte ptr [eax+6]
shl	eax, 1
mov	[edx+7], al
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF56A4
add	esp, 18h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	edi, edx
mov	ebp, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], offset aDes_0	
call	purple_ciphers_find_cipher
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_new
mov	ebx, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	purple_cipher_context_set_key
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_3C], eax
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], 8
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_encrypt
mov	[esp+4Ch+var_4C], ebx
call	purple_cipher_context_destroy
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF572A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	edi, eax
mov	ebx, edx
mov	esi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
lea	edx, [esp+1Ch+var_18]
mov	eax, edi
call	sub_67CF560C
lea	ecx, [esp+1Ch+var_18]
mov	edx, esi
mov	eax, ebx
call	sub_67CF56AC
lea	eax, [edi+7]
lea	edx, [esp+1Ch+var_18]
call	sub_67CF560C
lea	edx, [esi+8]
lea	ecx, [esp+1Ch+var_18]
mov	eax, ebx
call	sub_67CF56AC
lea	eax, [edi+0Eh]
lea	edx, [esp+1Ch+var_18]
call	sub_67CF560C
lea	edx, [esi+10h]
lea	ecx, [esp+1Ch+var_18]
mov	eax, ebx
call	sub_67CF56AC
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF57A6
add	esp, 10h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_ntlm_gen_type1
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_38], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
mov	ebp, 0FFFFFFFFh
xor	eax, eax
mov	ecx, ebp
mov	edi, esi
repne scasb
mov	ebx, ecx
not	ebx
lea	edx, [ebx-1]
mov	ecx, ebp
mov	edi, [esp+4Ch+var_38]
repne scasb
not	ecx
lea	ebp, [ecx-1]
add	ebx, 1Fh
mov	[esp+4Ch+var_34], ebx
lea	eax, [edx+ebp+20h]
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_3C], edx
call	g_malloc0
mov	ebx, eax
mov	byte ptr [eax],	4Eh
mov	byte ptr [eax+1], 54h
mov	byte ptr [eax+2], 4Ch
mov	byte ptr [eax+3], 4Dh
mov	byte ptr [eax+4], 53h
mov	byte ptr [eax+5], 53h
mov	byte ptr [eax+6], 50h
mov	byte ptr [eax+7], 0
mov	dword ptr [eax+8], 1
mov	dword ptr [eax+0Ch], 0B203h
mov	[eax+12h], bp
mov	[eax+10h], bp
mov	ecx, [esp+4Ch+var_34]
mov	[eax+14h], ecx
mov	edx, [esp+4Ch+var_3C]
mov	[eax+1Ah], dx
mov	[eax+18h], dx
mov	dword ptr [eax+1Ch], 20h
lea	eax, [eax+20h]
mov	edi, eax
mov	ecx, edx
rep movsb
mov	eax, [esp+4Ch+var_34]
add	eax, ebx
mov	edi, eax
mov	esi, [esp+4Ch+var_38]
mov	ecx, ebp
rep movsb
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebx
call	purple_base64_encode
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_3C], eax
call	g_free
mov	eax, [esp+4Ch+var_3C]
mov	ecx, [esp+4Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF58A5
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_ntlm_parse_type2
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_base64_decode
test	eax, eax
jz	short loc_67CF58DE
cmp	[esp+3Ch+var_14], 26h
ja	short loc_67CF592C
mov	[esp+3Ch+var_38], offset aUnableToParseT 
mov	[esp+3Ch+var_3C], offset aNtlm 
mov	[esp+3Ch+var_20], eax
call	purple_debug_error
mov	ds:dword_67D721FC, 0
mov	ds:dword_67D72200, 0
mov	eax, [esp+3Ch+var_20]
			
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, offset dword_67D721FC
mov	ecx, [esp+3Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF594A
add	esp, 38h
pop	ebx
retn
mov	edx, [eax+18h]
mov	ecx, [eax+1Ch]
mov	ds:dword_67D721FC, edx
mov	ds:dword_67D72200, ecx
test	ebx, ebx
jz	short loc_67CF590E
movzx	edx, word ptr [eax+14h]
mov	[ebx], edx
jmp	short loc_67CF590E
call	__stack_chk_fail
align 10h
public purple_ntlm_gen_type3
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 16Ch
mov	eax, [esp+17Ch+arg_0]
mov	[esp+17Ch+var_140], eax
mov	ebx, [esp+17Ch+arg_4]
mov	edx, [esp+17Ch+arg_8]
mov	[esp+17Ch+var_13C], edx
mov	ecx, [esp+17Ch+arg_C]
mov	[esp+17Ch+var_138], ecx
mov	edx, [esp+17Ch+arg_10]
mov	[esp+17Ch+var_134], edx
mov	ecx, [esp+17Ch+arg_14]
mov	[esp+17Ch+var_14C], ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+17Ch+var_20], eax
xor	eax, eax
mov	[esp+17Ch+var_120], 4Bh
mov	[esp+17Ch+var_11F], 47h
mov	[esp+17Ch+var_11E], 53h
mov	[esp+17Ch+var_11D], 21h
mov	[esp+17Ch+var_11C], 40h
mov	[esp+17Ch+var_11B], 23h
mov	[esp+17Ch+var_11A], 24h
mov	[esp+17Ch+var_119], 25h
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+17Ch+var_138]
repne scasb
not	ecx
lea	edx, [ecx+ecx-2]
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+17Ch+var_140]
repne scasb
not	ecx
lea	ecx, [ecx+ecx-2]
mov	[esp+17Ch+var_158], ecx
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+17Ch+var_13C]
repne scasb
not	ecx
lea	ecx, [ecx+ecx-2]
mov	[esp+17Ch+var_150], ecx
mov	ecx, [esp+17Ch+var_158]
add	ecx, edx
mov	[esp+17Ch+var_154], ecx
mov	esi, [esp+17Ch+var_150]
add	esi, ecx
cmp	[esp+17Ch+var_14C], 1
sbb	eax, eax
not	eax
and	eax, 10h
lea	ecx, [esi+70h]
mov	[esp+17Ch+var_130], ecx
add	eax, ecx
mov	[esp+17Ch+var_148], eax
mov	[esp+17Ch+var_17C], eax
mov	[esp+17Ch+var_15C], edx
call	g_malloc0
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+17Ch+var_144], ecx
mov	byte ptr [ebp+0], 4Eh
mov	byte ptr [ebp+1], 54h
mov	byte ptr [ebp+2], 4Ch
mov	byte ptr [ebp+3], 4Dh
mov	byte ptr [ebp+4], 53h
mov	byte ptr [ebp+5], 53h
mov	byte ptr [ebp+6], 50h
mov	dword ptr [ebp+8], 3
mov	word ptr [ebp+0Eh], 18h
mov	word ptr [ebp+0Ch], 18h
lea	eax, [esi+40h]
mov	[ebp+10h], eax
mov	word ptr [ebp+16h], 18h
mov	word ptr [ebp+14h], 18h
add	esi, 58h
mov	[ebp+18h], esi
mov	edx, [esp+17Ch+var_15C]
mov	[ebp+1Eh], dx
mov	[ebp+1Ch], dx
mov	dword ptr [ebp+20h], 40h
mov	ecx, [esp+17Ch+var_158]
mov	[ebp+26h], cx
mov	[ebp+24h], cx
lea	eax, [edx+40h]
mov	[ebp+28h], eax
mov	ecx, [esp+17Ch+var_150]
mov	[ebp+2Eh], cx
mov	[ebp+2Ch], cx
mov	eax, [esp+17Ch+var_154]
add	eax, 40h
mov	[ebp+30h], eax
mov	esi, [esp+17Ch+var_14C]
test	esi, esi
jz	short loc_67CF5AEF
mov	ecx, [esp+17Ch+var_130]
mov	[ebp+38h], ecx
mov	word ptr [ebp+36h], 10h
mov	word ptr [ebp+34h], 10h
mov	dword ptr [ebp+3Ch], 8201h
lea	eax, [ebp+40h]
mov	[esp+17Ch+var_154], eax
mov	[esp+17Ch+var_164], 0
mov	[esp+17Ch+var_168], 0
mov	[esp+17Ch+var_16C], 0
mov	[esp+17Ch+var_170], offset aUtf8 
mov	[esp+17Ch+var_174], offset aUtf16le 
mov	[esp+17Ch+var_178], 0FFFFFFFFh
mov	ecx, [esp+17Ch+var_138]
mov	[esp+17Ch+var_17C], ecx
mov	[esp+17Ch+var_15C], edx
call	g_convert
test	eax, eax
mov	edx, [esp+17Ch+var_15C]
jz	loc_67CF5E35
mov	edi, [esp+17Ch+var_154]
mov	esi, eax
mov	ecx, edx
rep movsb
mov	[esp+17Ch+var_17C], eax
call	g_free
mov	[esp+17Ch+var_154], edi
mov	[esp+17Ch+var_164], 0
mov	[esp+17Ch+var_168], 0
mov	[esp+17Ch+var_16C], 0
mov	[esp+17Ch+var_170], offset aUtf8 
mov	[esp+17Ch+var_174], offset aUtf16le 
mov	[esp+17Ch+var_178], 0FFFFFFFFh
mov	eax, [esp+17Ch+var_140]
mov	[esp+17Ch+var_17C], eax
call	g_convert
test	eax, eax
jz	loc_67CF5E4E
mov	edi, [esp+17Ch+var_154]
mov	esi, eax
mov	ecx, [esp+17Ch+var_158]
rep movsb
mov	[esp+17Ch+var_17C], eax
call	g_free
mov	[esp+17Ch+var_154], edi
mov	[esp+17Ch+var_164], 0
mov	[esp+17Ch+var_168], 0
mov	[esp+17Ch+var_16C], 0
mov	[esp+17Ch+var_170], offset aUtf8 
mov	[esp+17Ch+var_174], offset aUtf16le 
mov	[esp+17Ch+var_178], 0FFFFFFFFh
mov	edx, [esp+17Ch+var_13C]
mov	[esp+17Ch+var_17C], edx
call	g_convert
test	eax, eax
jz	loc_67CF5E67
mov	edi, [esp+17Ch+var_154]
mov	esi, eax
mov	ecx, [esp+17Ch+var_150]
rep movsb
mov	[esp+17Ch+var_17C], eax
call	g_free
mov	[esp+17Ch+var_154], edi
mov	edx, [esp+17Ch+var_144]
cmp	edx, 0Eh
jle	loc_67CF5E1E
mov	edx, 0Eh
xor	esi, esi
lea	edi, [esp+17Ch+var_118]
mov	[esp+17Ch+var_158], ebp
mov	ebp, esi
mov	esi, ebx
mov	ebx, edx
lea	esi, [esi+0]
movsx	eax, byte ptr [esi+ebp]
mov	[esp+17Ch+var_17C], eax
call	g_ascii_toupper
mov	[edi+ebp], al
inc	ebp
cmp	ebp, ebx
jnz	short loc_67CF5C3C
mov	ebx, esi
mov	esi, ebp
mov	ebp, [esp+17Ch+var_158]
cmp	esi, 0Dh
jg	short loc_67CF5C6A
lea	esi, [esi+0]
			
mov	byte ptr [edi+esi], 0
inc	esi
cmp	esi, 0Dh
jle	short loc_67CF5C60
lea	edx, [esp+17Ch+var_128]
mov	eax, edi
call	sub_67CF560C
lea	ecx, [esp+17Ch+var_FA]
mov	[esp+17Ch+var_158], ecx
lea	ecx, [esp+17Ch+var_128]
lea	edx, [esp+17Ch+var_FA]
lea	eax, [esp+17Ch+var_120]
call	sub_67CF56AC
lea	edx, [esp+17Ch+var_128]
lea	eax, [esp+17Ch+var_111]
call	sub_67CF560C
lea	ecx, [esp+17Ch+var_128]
lea	edx, [esp+17Ch+var_F2]
lea	eax, [esp+17Ch+var_120]
call	sub_67CF56AC
mov	[esp+17Ch+var_EA], 0
mov	[esp+17Ch+var_E6], 0
lea	esi, [esp+17Ch+var_D0]
mov	ecx, esi
mov	edx, [esp+17Ch+var_134]
lea	eax, [esp+17Ch+var_FA]
call	sub_67CF5730
mov	ecx, 6
mov	edi, [esp+17Ch+var_154]
rep movsd
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
lea	edi, [ecx-1]
test	edi, edi
jle	loc_67CF5E80
xor	eax, eax
lea	esi, [esp+17Ch+var_A0]
lea	esi, [esi+0]
mov	dl, [ebx+eax]
mov	[esi+eax*2], dl
mov	byte ptr [esi+eax*2+1],	0
inc	eax
cmp	edi, eax
jnz	short loc_67CF5D10
mov	[esp+17Ch+var_17C], offset aMd4_0 
call	purple_ciphers_find_cipher
mov	[esp+17Ch+var_178], 0
mov	[esp+17Ch+var_17C], eax
call	purple_cipher_context_new
mov	ebx, eax
shl	edi, 1
mov	[esp+17Ch+var_174], edi
mov	[esp+17Ch+var_178], esi
mov	[esp+17Ch+var_17C], eax
call	purple_cipher_context_append
mov	[esp+17Ch+var_170], 0
lea	edi, [esp+17Ch+var_E5]
mov	[esp+17Ch+var_174], edi
mov	[esp+17Ch+var_178], 15h
mov	[esp+17Ch+var_17C], ebx
call	purple_cipher_context_digest
mov	[esp+17Ch+var_17C], ebx
call	purple_cipher_context_destroy
mov	[esp+17Ch+var_D5], 0
mov	[esp+17Ch+var_D1], 0
lea	esi, [esp+17Ch+var_B8]
mov	ecx, esi
mov	edx, [esp+17Ch+var_134]
mov	eax, edi
call	sub_67CF5730
mov	edi, [esp+17Ch+var_154]
add	edi, 18h
mov	ecx, 6
rep movsd
mov	eax, [esp+17Ch+var_14C]
test	eax, eax
jz	short loc_67CF5DE4
mov	dword ptr [ebp+3Ch], 409082D4h
lea	esi, [esp+17Ch+var_10A]
mov	ebx, esi
lea	esi, [esi+0]
call	rand
mov	[ebx], al
inc	ebx
cmp	ebx, [esp+17Ch+var_158]
jnz	short loc_67CF5DC8
mov	edi, [esp+17Ch+var_154]
add	edi, 30h
mov	ecx, 4
rep movsd
mov	ecx, [esp+17Ch+var_148]
mov	[esp+17Ch+var_178], ecx
mov	[esp+17Ch+var_17C], ebp
call	purple_base64_encode
mov	[esp+17Ch+var_17C], ebp
mov	[esp+17Ch+var_15C], eax
call	g_free
mov	eax, [esp+17Ch+var_15C]
mov	edx, [esp+17Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF5E8C
add	esp, 16Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ecx, [esp+17Ch+var_144]
test	ecx, ecx
jg	loc_67CF5C29
xor	esi, esi
lea	edi, [esp+17Ch+var_118]
jmp	loc_67CF5C60
mov	[esp+17Ch+var_178], offset aUnableToEncode 
mov	[esp+17Ch+var_17C], offset aNtlm 
call	purple_debug_info
jmp	loc_67CF5B5F
mov	[esp+17Ch+var_178], offset aUnableToEnco_0 
mov	[esp+17Ch+var_17C], offset aNtlm 
call	purple_debug_info
jmp	loc_67CF5BBB
mov	[esp+17Ch+var_178], offset aUnableToEnco_1 
mov	[esp+17Ch+var_17C], offset aNtlm 
call	purple_debug_info
jmp	loc_67CF5C17
lea	esi, [esp+17Ch+var_A0]
jmp	loc_67CF5D20
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 5Ch 
mov	[esp+4Ch+Str], ebx 
call	strrchr
test	eax, eax
jz	short loc_67CF5EBF
lea	ebx, [eax+1]
mov	[esp+4Ch+var_48], 2Eh 
mov	[esp+4Ch+Str], ebx 
call	strrchr
test	eax, eax
jz	short loc_67CF5F50
mov	edi, offset a_dll 
mov	ecx, 5
mov	esi, eax
repe cmpsb
setnbe	dl
setb	cl
sub	edx, ecx
movsx	edx, dl
mov	edi, offset a_sl 
mov	ecx, 4
mov	esi, eax
repe cmpsb
setnbe	cl
setb	[esp+4Ch+var_2D]
sub	cl, [esp+4Ch+var_2D]
movsx	ebp, cl
mov	edi, offset a_so 
mov	ecx, 4
mov	esi, eax
repe cmpsb
setnbe	cl
setb	[esp+4Ch+var_2D]
sub	cl, [esp+4Ch+var_2D]
movsx	ecx, cl
and	ebp, edx
test	ebp, ecx
jnz	short loc_67CF5F50
sub	eax, ebx
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+Str], ebx
call	g_strndup
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF5F5A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+4Ch+Str], ebx
call	g_strdup
jmp	short loc_67CF5F3A
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	edx, [esp+1Ch+Str2]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+Str1]
mov	eax, [eax+10h]
cmp	dword ptr [eax+0Ch], 2
jz	short loc_67CF5F9C
mov	eax, [edx+10h]
cmp	dword ptr [eax+0Ch], 2
setz	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF5FCF
add	esp, 1Ch
retn
mov	edx, [edx+10h]
cmp	dword ptr [edx+0Ch], 2
jnz	short loc_67CF5FC8
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF5FCF
mov	edx, [edx+24h]
mov	[esp+1Ch+Str2],	edx 
mov	eax, [eax+24h]
mov	[esp+1Ch+Str1],	eax 
add	esp, 1Ch
jmp	strcmp
align 4
mov	eax, 0FFFFFFFFh
jmp	short loc_67CF5F8C
			
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+Str1]
mov	edx, [esp+1Ch+Str2]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF6013
mov	edx, [edx+10h]
mov	edx, [edx+24h]
mov	[esp+1Ch+Str2],	edx 
mov	eax, [eax+10h]
mov	eax, [eax+24h]
mov	[esp+1Ch+Str1],	eax 
add	esp, 1Ch
jmp	strcmp
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+Str1]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CF6058
mov	edx, [esi+8]
test	edx, edx
jle	short loc_67CF6050
xor	ebx, ebx
mov	eax, [eax+ebx*4]
mov	[esp+2Ch+var_2C], eax
call	purple_value_destroy
inc	ebx
cmp	[esi+8], ebx
mov	eax, [esi+0Ch]
jg	short loc_67CF603C
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67CF6067
mov	[esp+2Ch+var_2C], eax
call	purple_value_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6081
mov	[esp+2Ch+Str1],	esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF60E4
cmp	byte ptr [ebx],	0
jz	short loc_67CF60E4
test	edx, edx
jz	short loc_67CF60E4
mov	ebp, 0FFFFFFFFh
mov	ecx, ebp
mov	edi, edx
repne scasb
mov	esi, ecx
not	esi
mov	ecx, ebp
mov	edi, ebx
repne scasb
not	ecx
lea	eax, [esi-1]
sub	ecx, esi
js	short loc_67CF60E4
mov	[esp+3Ch+MaxCount], eax	
mov	[esp+3Ch+Str2],	edx 
add	ecx, ebx
mov	[esp+3Ch+Str1],	ecx 
call	strncmp
test	eax, eax
setz	al
movzx	eax, al
jmp	short loc_67CF60E6
align 4
			
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF60FA
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	ebp, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	short loc_67CF6170
mov	esi, ds:dword_67D72204
test	esi, esi
jnz	short loc_67CF612B
jmp	short loc_67CF6170
			
mov	esi, [esi+4]
test	esi, esi
jz	short loc_67CF6170
mov	edi, [esi]
mov	eax, [edi+10h]
cmp	dword ptr [eax+0Ch], 1
jnz	short loc_67CF6124
mov	eax, [eax+4Ch]
mov	ebx, [eax]
test	ebx, ebx
jnz	short loc_67CF614B
jmp	short loc_67CF6124
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF6124
mov	edx, [ebx]
mov	eax, ebp
call	sub_67CF6088
test	eax, eax
jz	short loc_67CF6144
mov	eax, edi
mov	edx, [esp+2Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6174
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
xor	edi, edi
jmp	short loc_67CF6158
call	__stack_chk_fail
align 4
public purple_plugin_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 38h
call	g_malloc0
mov	ebx, eax
mov	[eax], edi
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF61C5
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_plugin_disable
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF620C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72218
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	short loc_67CF622C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6244
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plugin_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF61F8
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72218
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	ds:dword_67D72218, eax
jmp	short loc_67CF61F8
call	__stack_chk_fail
align 4
public purple_plugin_is_loaded
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF6278
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6298
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plugi_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6266
call	__stack_chk_fail
align 10h
public purple_plugin_is_unloadable
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF62CC
mov	eax, [eax+20h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF62EC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plugi_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF62BA
call	__stack_chk_fail
align 4
public purple_plugin_get_id
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF6328
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF6348
mov	eax, [eax+20h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6368
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6315
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6315
call	__stack_chk_fail
align 10h
public purple_plugin_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF63B4
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF63D4
mov	eax, [eax+24h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF63F4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF63A1
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF63A1
call	__stack_chk_fail
align 4
public purple_plugin_get_version
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF6430
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF6450
mov	eax, [eax+28h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6470
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF641D
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF641D
call	__stack_chk_fail
align 4
public purple_plugin_get_summary
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF64BC
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF64DC
mov	eax, [eax+2Ch]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF64FC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF64A9
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF64A9
call	__stack_chk_fail
align 4
public purple_plugin_get_description
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF6548
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF6568
mov	eax, [eax+30h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6588
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6535
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6535
call	__stack_chk_fail
align 10h
public purple_plugin_get_author
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF65D4
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF65F4
mov	eax, [eax+34h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_8 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6614
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF65C1
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF65C1
call	__stack_chk_fail
align 4
public purple_plugin_get_homepage
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF6650
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF6670
mov	eax, [eax+38h]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6690
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPlugin 
mov	[esp+2Ch+var_28], offset aPurple_plugi_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF663D
mov	[esp+2Ch+var_24], offset aPluginInfo 
mov	[esp+2Ch+var_28], offset aPurple_plugi_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF663D
call	__stack_chk_fail
align 4
public purple_plugin_ipc_register
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	ecx, [esp+4Ch+arg_C]
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_30], eax
mov	esi, [esp+4Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF6784
test	ebp, ebp
jz	loc_67CF67A4
test	edx, edx
jz	loc_67CF67C4
test	ecx, ecx
jz	loc_67CF67E4
mov	edi, [ebx+18h]
test	edi, edi
jz	loc_67CF6808
mov	[esp+4Ch+var_4C], 14h
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_34]
mov	[eax], edx
mov	ecx, [esp+4Ch+var_38]
mov	[eax+4], ecx
mov	[eax+8], esi
mov	edx, [esp+4Ch+var_30]
mov	[eax+10h], edx
test	esi, esi
jle	short loc_67CF6747
lea	eax, ds:0[esi*4]
mov	[esp+4Ch+var_4C], eax
call	g_malloc0
mov	[ebx+0Ch], eax
xor	eax, eax
xchg	ax, ax
mov	ecx, [esp+eax*4+4Ch+arg_18]
mov	edx, [ebx+0Ch]
mov	[edx+eax*4], ecx
inc	eax
cmp	eax, esi
jnz	short loc_67CF6738
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	eax, [edi]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_replace
inc	dword ptr [edi+4]
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF6854
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aPluginNull 
mov	[esp+4Ch+var_48], offset aPurple_plugi_9 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6769
mov	[esp+4Ch+var_44], offset aCommandNull 
mov	[esp+4Ch+var_48], offset aPurple_plugi_9 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6769
mov	[esp+4Ch+var_44], offset aFuncNull_1 
mov	[esp+4Ch+var_48], offset aPurple_plugi_9 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6769
mov	[esp+4Ch+var_44], offset aMarshalNull 
mov	[esp+4Ch+var_48], offset aPurple_plugi_9 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CF6769
align 4
mov	[esp+4Ch+var_4C], 8
mov	[esp+4Ch+var_34], edx
mov	[esp+4Ch+var_38], ecx
call	g_malloc0
mov	edi, eax
mov	[ebx+18h], eax
mov	[esp+4Ch+var_40], offset loc_67CF6018
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	[edi], eax
mov	ecx, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_34]
jmp	loc_67CF66F1
call	__stack_chk_fail
align 4
public purple_plugin_ipc_unregister
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	loc_67CF6908
test	esi, esi
jz	loc_67CF6928
mov	ebx, [edi+18h]
test	ebx, ebx
jz	short loc_67CF68E4
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CF68E4
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
dec	dword ptr [ebx+4]
jz	short loc_67CF68C8
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF6949
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	dword ptr [edi+18h], 0
jmp	short loc_67CF68B1
align 4
			
mov	eax, [edi+10h]
mov	eax, [eax+24h]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aIpcCommandSWas 
mov	[esp+2Ch+var_2C], offset aPlugins_0 
call	purple_debug_error
jmp	short loc_67CF68B1
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF68B1
align 4
mov	[esp+2Ch+var_24], offset aCommandNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67CF68B1
call	__stack_chk_fail
align 10h
public purple_plugin_ipc_unregister_all
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF699C
mov	esi, [ebx+18h]
test	esi, esi
jz	short loc_67CF6988
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	dword ptr [ebx+18h], 0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF69BA
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF6988
call	__stack_chk_fail
align 10h
public purple_plugin_ipc_get_params
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF6A78
test	esi, esi
jz	loc_67CF6A98
mov	eax, [ebx+18h]
test	eax, eax
jz	short loc_67CF6A50
mov	[esp+4Ch+var_48], esi
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
mov	[esp+4Ch+var_30], edx
call	g_hash_table_lookup
test	eax, eax
mov	edx, [esp+4Ch+var_30]
jz	short loc_67CF6A50
test	ebp, ebp
jz	short loc_67CF6A21
mov	ecx, [eax+8]
mov	[ebp+0], ecx
test	edx, edx
jz	short loc_67CF6A2A
mov	ecx, [eax+0Ch]
mov	[edx], ecx
test	edi, edi
jz	loc_67CF6AB8
mov	eax, [eax+10h]
mov	[edi], eax
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6AC2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	eax, [ebx+10h]
mov	eax, [eax+24h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aIpcCommandSWas 
mov	[esp+4Ch+var_4C], offset aPlugins_0 
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CF6A3C
align 4
mov	[esp+4Ch+var_44], offset aPluginNull 
mov	[esp+4Ch+var_48], offset aPurple_plug_12 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6A3C
mov	[esp+4Ch+var_44], offset aCommandNull 
mov	[esp+4Ch+var_48], offset aPurple_plug_12 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6A3C
mov	eax, 1
jmp	loc_67CF6A3C
call	__stack_chk_fail
align 4
public purple_plugin_ipc_call
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF6AEF
mov	dword ptr [ebx], 0
test	esi, esi
jz	short loc_67CF6B60
test	edi, edi
jz	loc_67CF6B80
mov	eax, [esi+18h]
test	eax, eax
jz	loc_67CF6BA0
mov	[esp+2Ch+var_28], edi
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF6BA0
lea	edx, [esp+2Ch+arg_C]
lea	ecx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edx
mov	edx, [eax]
mov	[esp+2Ch+var_2C], edx
call	dword ptr [eax+4]
test	ebx, ebx
jz	short loc_67CF6B46
mov	dword ptr [ebx], 1
mov	eax, [esp+2Ch+var_14]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6BC6
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6B4A
mov	[esp+2Ch+var_24], offset aCommandNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF6B4A
			
mov	eax, [esi+10h]
mov	eax, [eax+24h]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aIpcCommandSWas 
mov	[esp+2Ch+var_2C], offset aPlugins_0 
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CF6B4A
call	__stack_chk_fail
align 4
public purple_plugins_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D72210
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6BEF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_plugins_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D72210
call	purple_signals_disconnect_by_handle
mov	[esp+2Ch+var_2C], offset dword_67D72210
call	purple_signals_unregister_by_instance
mov	eax, ds:dword_67D72230
test	eax, eax
jz	short loc_67CF6C48
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D72230
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:dword_67D72230, eax
test	eax, eax
jnz	short loc_67CF6C24
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6C58
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugins_add_search_path
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF6CA8
mov	[esp+2Ch+var_24], offset strcmp
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72230
mov	[esp+2Ch+var_2C], eax
call	g_list_find_custom
test	eax, eax
jz	short loc_67CF6CC8
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6CE8
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aPathNull 
mov	[esp+2Ch+var_28], offset aPurple_plugins 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF6C94
align 4
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72230
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D72230, eax
jmp	short loc_67CF6C94
call	__stack_chk_fail
align 10h
public purple_plugins_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	wpurple_lib_dir
mov	[esp+3Ch+var_3C], eax
call	purple_plugins_add_search_path
mov	[esp+3Ch+var_38], 9
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aPluginLoad 
mov	[esp+3Ch+var_3C], offset dword_67D72210
call	purple_signal_register
mov	[esp+3Ch+var_38], 9
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset purple_marshal_VOID__POINTER
mov	[esp+3Ch+var_38], offset aPluginUnload 
mov	[esp+3Ch+var_3C], offset dword_67D72210
call	purple_signal_register
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6DA3
add	esp, 3Ch
retn
call	__stack_chk_fail
public purple_plugins_get_search_paths
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72230
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6DCB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_plugins_save_loaded
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D72204
xor	edi, edi
test	ebx, ebx
jz	short loc_67CF6E1E
xchg	ax, ax
mov	esi, [ebx]
mov	eax, [esi+10h]
mov	eax, [eax+0Ch]
dec	eax
cmp	eax, 1
jbe	short loc_67CF6E17
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D72218
mov	[esp+3Ch+var_3C], eax
call	g_list_find
test	eax, eax
jz	short loc_67CF6E48
			
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF6DF4
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	purple_prefs_set_path_list
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6E5B
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
align 4
mov	eax, [esi+0Ch]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	g_list_append
mov	edi, eax
jmp	short loc_67CF6E17
call	__stack_chk_fail
public purple_plugin_register
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF6F20
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72224
mov	[esp+2Ch+var_2C], eax
call	g_list_find
test	eax, eax
jz	short loc_67CF6EAC
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF6F71
add	esp, 28h
pop	ebx
retn
align 4
mov	edx, [ebx+10h]
mov	eax, [edx+0Ch]
cmp	eax, 1
jz	short loc_67CF6EF4
cmp	eax, 2
jz	loc_67CF6F44
			
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72228
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D72228, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72224
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	ds:dword_67D72224, eax
mov	eax, 1
jmp	short loc_67CF6E95
align 4
mov	eax, [edx+4Ch]
test	eax, eax
jnz	short loc_67CF6EC0
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSIsNotLoadable 
mov	[esp+2Ch+var_2C], offset aPlugins_0 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CF6E95
align 10h
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CF6E95
align 4
mov	ecx, [edx+4Ch]
test	ecx, ecx
jnz	loc_67CF6EC0
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSIsNotLoadab_0 
mov	[esp+2Ch+var_2C], offset aPlugins_0 
call	purple_debug_error
xor	eax, eax
jmp	loc_67CF6E95
call	__stack_chk_fail
align 4
public purple_plugins_enabled
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	al, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF6F98
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugins_register_probe_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72234, eax
mov	eax, [esp+1Ch+arg_4]
mov	ds:dword_67D72238, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF6FD0
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_plugins_unregister_probe_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ds:dword_67D72234, 0
mov	ds:dword_67D72238, 0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF700A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugins_register_load_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72208, eax
mov	eax, [esp+1Ch+arg_4]
mov	ds:dword_67D7220C, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF7040
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_plugins_unregister_load_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ds:dword_67D72208, 0
mov	ds:dword_67D7220C, 0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF707A
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugins_register_unload_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D7221C, eax
mov	eax, [esp+1Ch+arg_4]
mov	ds:dword_67D72220, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF70B0
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_plugins_unregister_unload_notify_cb
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	ds:dword_67D7221C, 0
mov	ds:dword_67D72220, 0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF70EA
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugins_find_with_name
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72224
test	ebx, ebx
jnz	short loc_67CF711B
jmp	short loc_67CF7148
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF7148
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+10h]
mov	eax, [eax+24h]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CF7114
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF714C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	esi, esi
jmp	short loc_67CF7133
call	__stack_chk_fail
align 4
public purple_plugins_find_with_filename
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72224
test	ebx, ebx
jnz	short loc_67CF717F
jmp	short loc_67CF71AC
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF71AC
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CF7178
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF71B0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
xor	esi, esi
jmp	short loc_67CF7194
call	__stack_chk_fail
align 4
public purple_plugins_find_with_basename
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CF722C
mov	ebx, ds:dword_67D72224
test	ebx, ebx
jz	short loc_67CF720B
mov	esi, [ebx]
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CF7204
call	sub_67CF5E94
mov	ebp, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
mov	[esp+3Ch+var_3C], ebp
test	eax, eax
jnz	short loc_67CF7224
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF71DC
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF724C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	g_free
jmp	short loc_67CF720D
align 4
mov	[esp+3Ch+var_34], offset aBasenameNull 
mov	[esp+3Ch+var_38], offset aPurple_plug_15 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CF720D
call	__stack_chk_fail
align 4
public purple_plugins_find_with_id
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CF72B4
mov	ebx, ds:dword_67D72224
test	ebx, ebx
jnz	short loc_67CF7283
jmp	short loc_67CF72B0
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF72B0
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+10h]
mov	eax, [eax+20h]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CF727C
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF72D4
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	esi, esi
jmp	short loc_67CF729B
mov	[esp+2Ch+var_24], offset aIdNull_1 
mov	[esp+2Ch+var_28], offset aPurple_plug_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67CF729B
call	__stack_chk_fail
align 4
public purple_plugin_unload
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67CF74E7
mov	[esp+3Ch+var_3C], edi
call	purple_plugin_is_loaded
test	eax, eax
jnz	short loc_67CF733C
mov	[esp+3Ch+var_34], offset aPurple_plug_17 
mov	[esp+3Ch+var_38], offset aPurple_plug_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF7629
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [edi+10h]
mov	eax, [eax+24h]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aUnloadingPlugi 
mov	[esp+3Ch+var_3C], offset aPlugins_0 
call	purple_debug_info
mov	eax, [edi+24h]
test	eax, eax
jnz	loc_67CF74C6
lea	esi, [esi+0]
mov	eax, [edi+10h]
mov	ebx, [eax+18h]
test	ebx, ebx
jnz	short loc_67CF7393
jmp	short loc_67CF73C4
mov	eax, [edi+10h]
mov	eax, [eax+20h]
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+24h]
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	[esi+24h], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF73C4
			
mov	ebp, [ebx]
mov	[esp+3Ch+var_3C], ebp
call	purple_plugins_find_with_id
mov	esi, eax
test	eax, eax
jnz	short loc_67CF7374
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aUnableToRemove 
mov	[esp+3Ch+var_3C], offset aPlugins_0 
call	purple_debug_error
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF7393
xchg	ax, ax
			
mov	eax, [edi]
test	eax, eax
jz	loc_67CF750C
mov	eax, [edi+10h]
mov	edx, [eax+40h]
test	edx, edx
jz	short loc_67CF73E8
mov	[esp+3Ch+var_3C], edi
call	edx
test	eax, eax
jz	loc_67CF7503
mov	eax, [edi+10h]
cmp	dword ptr [eax+0Ch], 2
jz	loc_67CF75A6
			
mov	[esp+3Ch+var_3C], edi
call	purple_request_close_with_handle
mov	[esp+3Ch+var_3C], edi
call	purple_notify_close_with_handle
mov	[esp+3Ch+var_3C], edi
call	purple_signals_disconnect_by_handle
mov	[esp+3Ch+var_3C], edi
call	purple_plugin_ipc_unregister_all
mov	[esp+3Ch+var_38], edi
mov	eax, ds:dword_67D72204
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	ds:dword_67D72204, eax
mov	eax, [edi+10h]
test	eax, eax
jz	short loc_67CF7439
cmp	dword ptr [eax+0Ch], 2
jz	loc_67CF760E
			
mov	[esp+3Ch+var_38], edi
mov	eax, ds:dword_67D72218
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	ds:dword_67D72218, eax
mov	dword ptr [edi+4], 0
mov	eax, [edi+14h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [edi+14h], 0
mov	eax, ds:dword_67D7221C
test	eax, eax
jz	short loc_67CF7480
mov	edx, ds:dword_67D72220
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], edi
call	eax 
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aPluginUnload 
mov	[esp+3Ch+var_3C], offset dword_67D72210
call	purple_signal_emit
mov	[esp+3Ch+var_3C], edi
call	purple_prefs_disconnect_by_handle
mov	eax, 1
jmp	loc_67CF7324
mov	[esp+3Ch+var_3C], ebx
call	purple_plugin_unload
test	eax, eax
jz	loc_67CF753D
xchg	ax, ax
			
mov	eax, esi
test	esi, esi
jz	loc_67CF7368
mov	esi, [eax+4]
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	purple_plugins_find_with_id
mov	ebx, eax
test	eax, eax
jz	short loc_67CF74BC
mov	[esp+3Ch+var_3C], eax
call	purple_plugin_is_loaded
test	eax, eax
jz	short loc_67CF74BC
jmp	short loc_67CF74AA
mov	[esp+3Ch+var_34], offset aPluginNull 
mov	[esp+3Ch+var_38], offset aPurple_plug_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	loc_67CF7324
align 4
mov	eax, [edi+0Ch]
call	sub_67CF6100
test	eax, eax
jz	short loc_67CF7503
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0Ch]
test	eax, eax
jz	loc_67CF73F2
mov	[esp+3Ch+var_3C], edi
call	eax
test	eax, eax
jnz	loc_67CF73F2
xor	eax, eax
jmp	loc_67CF7324
mov	eax, [edi+14h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+10h]
mov	eax, [eax+24h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	esi, eax
mov	eax, [edi+10h]
mov	eax, [eax+24h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	ebx, eax
mov	[esp+3Ch+var_38], offset aSRequiresSButI 
mov	[esp+3Ch+var_3C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], eax
call	g_strdup_printf
mov	[edi+14h], eax
xor	eax, eax
jmp	loc_67CF7324
mov	esi, [eax+4Ch]
mov	ebx, [esi+4]
test	ebx, ebx
jz	short loc_67CF75C1
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_account_user_split_destroy
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF75B0
mov	ebx, [esi+8]
test	ebx, ebx
jz	short loc_67CF75D9
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_account_option_destroy
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF75C8
mov	eax, [esi+4]
test	eax, eax
jz	short loc_67CF75EF
mov	[esp+3Ch+var_3C], eax
call	g_list_free
mov	dword ptr [esi+4], 0
mov	eax, [esi+8]
test	eax, eax
jz	loc_67CF73F2
mov	[esp+3Ch+var_3C], eax
call	g_list_free
mov	dword ptr [esi+8], 0
jmp	loc_67CF73F2
mov	[esp+3Ch+var_38], edi
mov	eax, ds:dword_67D72214
mov	[esp+3Ch+var_3C], eax
call	g_list_remove
mov	ds:dword_67D72214, eax
jmp	loc_67CF7439
call	__stack_chk_fail
align 10h
public purple_plugins_unload
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72224
test	ebx, ebx
jnz	short loc_67CF765B
jmp	short loc_67CF7680
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF7680
			
mov	esi, [ebx]
mov	eax, [esi+10h]
cmp	[eax+0Ch], edi
jnz	short loc_67CF7654
mov	[esp+2Ch+var_2C], esi
call	purple_plugin_is_loaded
test	eax, eax
jz	short loc_67CF7654
mov	[esp+2Ch+var_2C], esi
call	purple_plugin_unload
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF765B
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF7693
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public purple_plugins_unload_all
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72204
test	eax, eax
jz	short loc_67CF76C3
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_unload
mov	eax, ds:dword_67D72204
test	eax, eax
jnz	short loc_67CF76B0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF76D3
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_plugin_destroy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CF77E8
mov	[esp+5Ch+var_5C], ebx
call	purple_plugin_is_loaded
test	eax, eax
jnz	loc_67CF7788
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D72224
mov	[esp+5Ch+var_5C], eax
call	g_list_remove
mov	ds:dword_67D72224, eax
mov	eax, ds:dword_67D72228
test	eax, eax
jz	short loc_67CF7736
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+var_5C], eax
call	g_list_remove
mov	ds:dword_67D72228, eax
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CF7742
cmp	dword ptr [eax], 5
jz	short loc_67CF7798
			
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CF7751
mov	[esp+5Ch+var_5C], eax
call	g_module_close
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF7931
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], ebx
call	purple_plugin_unload
jmp	loc_67CF7706
align 4
cmp	dword ptr [eax+4], 2
jnz	short loc_67CF7742
mov	eax, [eax+18h]
mov	[esp+5Ch+var_5C], eax
call	g_list_free
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF780C
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67CF77C8
cmp	dword ptr [eax+0Ch], 1
jz	short loc_67CF7830
mov	eax, [eax+44h]
test	eax, eax
jz	short loc_67CF77C8
mov	[esp+5Ch+var_5C], ebx
call	eax
			
mov	[esp+5Ch+var_5C], offset aPurple_leakche 
call	g_getenv_utf8
test	eax, eax
jz	loc_67CF78C0
			
mov	esi, [ebx+0Ch]
			
mov	[esp+5Ch+var_5C], esi
jmp	loc_67CF7757
align 4
mov	[esp+5Ch+var_54], offset aPluginNull 
mov	[esp+5Ch+var_58], offset aPurple_plug_19 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67CF776F
align 4
mov	esi, [ebx+0Ch]
mov	eax, esi
call	sub_67CF6100
test	eax, eax
jz	short loc_67CF77DF
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67CF77DF
mov	[esp+5Ch+var_5C], ebx
call	eax
jmp	short loc_67CF77DC
align 10h
mov	eax, [eax+4Ch]
mov	[esp+5Ch+var_40], eax
test	eax, eax
jz	short loc_67CF7897
mov	edi, [eax]
test	edi, edi
jz	short loc_67CF7897
lea	esi, [esi+0]
mov	eax, ds:dword_67D72224
test	eax, eax
jnz	short loc_67CF7856
jmp	short loc_67CF7878
align 10h
			
mov	eax, esi
test	esi, esi
jz	short loc_67CF7878
mov	esi, [eax+4]
mov	ebp, [eax]
mov	eax, [ebp+0Ch]
test	eax, eax
jz	short loc_67CF7850
mov	edx, [edi]
call	sub_67CF6088
test	eax, eax
jz	short loc_67CF7850
mov	[esp+5Ch+var_5C], ebp
call	purple_plugin_destroy
jmp	short loc_67CF7850
align 4
			
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_67CF7844
mov	edx, [esp+5Ch+var_40]
mov	eax, [edx]
mov	[esp+5Ch+var_5C], eax
call	g_list_free
mov	eax, [esp+5Ch+var_40]
mov	dword ptr [eax], 0
			
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D7222C
mov	[esp+5Ch+var_5C], eax
call	g_list_remove
mov	ds:dword_67D7222C, eax
mov	eax, [ebx+10h]
test	eax, eax
jnz	loc_67CF77BC
jmp	loc_67CF77C8
align 10h
mov	[esp+5Ch+var_38], 1001h
mov	[esp+5Ch+var_34], 0
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+var_2C], 0
mov	[esp+5Ch+var_28], 0
mov	[esp+5Ch+var_24], 0
lea	ecx, [esp+5Ch+var_38]
mov	edx, eax
mov	eax, ecx
rol	edi, 3
rol	edi, 0Dh
rol	edi, 1Dh
rol	edi, 13h
xchg	ebx, ebx
mov	[esp+5Ch+var_3C], edx
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jnz	loc_67CF77DC
mov	eax, [ebx+8]
test	eax, eax
jz	loc_67CF77DC
mov	[esp+5Ch+var_5C], eax
call	g_module_close
mov	esi, [ebx+0Ch]
jmp	loc_67CF77DF
call	__stack_chk_fail
align 4
public purple_plugins_destroy_all
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72224
test	eax, eax
jz	short loc_67CF7963
nop
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_destroy
mov	eax, ds:dword_67D72224
test	eax, eax
jnz	short loc_67CF7950
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF7973
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_plugin_probe
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aProbingS 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_misc
test	esi, esi
jz	loc_67CF7C4C
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+uMode], esi
call	g_file_test_utf8
test	eax, eax
jz	loc_67CF7C44
mov	eax, esi
call	sub_67CF5E94
mov	edi, eax
mov	[esp+5Ch+uMode], eax
call	purple_plugins_find_with_basename
mov	ebx, eax
mov	[esp+5Ch+uMode], edi
call	g_free
test	ebx, ebx
jz	short loc_67CF7A2C
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+uMode], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CF7A14
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF7FFB
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+uMode], ebx
call	purple_plugin_is_unloadable
test	eax, eax
jz	loc_67CF7C20
mov	[esp+5Ch+uMode], ebx
call	purple_plugin_destroy
mov	edx, offset aDll_0 
mov	eax, esi
call	sub_67CF6088
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+uMode], eax
call	purple_plugin_new
mov	ebx, eax
mov	ecx, [eax]
test	ecx, ecx
jnz	loc_67CF7BC4
mov	eax, [eax+0Ch]
call	sub_67CF6100
test	eax, eax
jz	loc_67CF7DE7
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	esi, [eax+4]
mov	[esp+5Ch+uMode], ebx
call	esi
test	eax, eax
jz	loc_67CF7DE7
mov	esi, [ebx+10h]
test	esi, esi
jz	loc_67CF7DE7
mov	edi, [esi+10h]
test	edi, edi
jz	short loc_67CF7AAA
call	purple_core_get_ui
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx+10h]
mov	eax, [eax+10h]
mov	[esp+5Ch+uMode], eax
call	purple_strequal
test	eax, eax
jz	loc_67CF7CB8
mov	esi, [ebx+10h]
mov	eax, [esi+20h]
test	eax, eax
jz	loc_67CF7C70
cmp	byte ptr [eax],	0
jz	loc_67CF7C70
mov	eax, [esi]
cmp	eax, 5
jz	loc_67CF7D18
lea	edx, [eax-2]
cmp	edx, 2
ja	loc_67CF7F29
mov	[esp+5Ch+uMode], 68h
call	g_malloc0
mov	[ebx+10h], eax
mov	edi, [esi]
mov	[eax], edi
mov	edx, [esi+4]
mov	[eax+0Ch], edx
mov	edx, [esi+8]
mov	[eax+10h], edx
mov	edx, [esi+0Ch]
mov	[eax+14h], edx
mov	edx, [esi+10h]
mov	[eax+18h], edx
mov	edx, [esi+18h]
mov	[eax+20h], edx
mov	edx, [esi+1Ch]
mov	[eax+24h], edx
mov	edx, [esi+20h]
mov	[eax+28h], edx
mov	edx, [esi+24h]
mov	[eax+2Ch], edx
mov	edx, [esi+28h]
mov	[eax+30h], edx
mov	edx, [esi+2Ch]
mov	[eax+34h], edx
mov	edx, [esi+30h]
mov	[eax+38h], edx
mov	edx, [esi+34h]
mov	[eax+3Ch], edx
mov	edx, [esi+38h]
mov	[eax+40h], edx
mov	edx, [esi+3Ch]
mov	[eax+44h], edx
mov	edx, [esi+40h]
mov	[eax+48h], edx
mov	edx, [esi+44h]
mov	[eax+4Ch], edx
cmp	edi, 2
jbe	short loc_67CF7B5E
mov	edx, [esi+48h]
mov	[eax+50h], edx
cmp	edi, 3
jz	short loc_67CF7B5E
mov	edx, [esi+4Ch]
mov	[eax+54h], edx
			
mov	[esp+5Ch+var_58], offset aPluginMagicMis 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], 5
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+uMode], eax
call	g_strdup_printf
mov	[ebx+14h], eax
mov	[esp+5Ch+var_4C], 5
mov	eax, [ebx+10h]
mov	eax, [eax]
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_1 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF79F8
align 4
mov	[esp+5Ch+uMode], 1 
call	SetErrorMode
push	edx
mov	ebp, eax
mov	[esp+5Ch+var_58], 2
mov	[esp+5Ch+uMode], esi
call	g_module_open_utf8
mov	[ebx+8], eax
test	eax, eax
jz	loc_67CF7E78
lea	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aPurple_init_pl 
mov	[esp+5Ch+uMode], eax
call	g_module_symbol
test	eax, eax
jz	loc_67CF7D89
mov	esi, [esp+5Ch+var_24]
mov	[esp+5Ch+uMode], ebp 
call	SetErrorMode
push	ebp
jmp	loc_67CF7A69
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aNotLoadingS_An 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_warning
jmp	loc_67CF79F8
xor	ebx, ebx
jmp	loc_67CF79F8
align 4
mov	[esp+5Ch+var_54], offset aFilenameNull_1 
mov	[esp+5Ch+var_58], offset aPurple_plug_20 
mov	[esp+5Ch+uMode], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CF79F8
align 10h
			
mov	[esp+5Ch+var_58], offset aThisPluginHasN 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+uMode], eax
call	g_strdup
mov	[ebx+14h], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_2 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF79F8
align 4
mov	eax, [ebx+10h]
mov	edi, [eax+10h]
call	purple_core_get_ui
mov	esi, eax
mov	[esp+5Ch+var_58], offset aYouAreUsingSBu 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+uMode], eax
call	g_strdup_printf
mov	[ebx+14h], eax
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_3 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF79F8
align 4
mov	edi, [esi+4]
mov	ebp, [esi+8]
cmp	edi, 2
jnz	loc_67CF7DF8
cmp	ebp, 0Ah
ja	loc_67CF7DF8
cmp	dword ptr [esi+0Ch], 2
jnz	loc_67CF79F8
mov	eax, [esi+4Ch]
mov	ecx, [eax+28h]
test	ecx, ecx
jz	loc_67CF7FB1
mov	edx, [eax+48h]
test	edx, edx
jz	loc_67CF7FB1
mov	eax, [eax+4Ch]
test	eax, eax
jz	loc_67CF7FB1
mov	eax, [esi+50h]
test	eax, eax
jz	loc_67CF79F8
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSHasAPrefs_inf 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
jmp	loc_67CF79F8
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotUsableBe 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	eax, [ebx+8]
mov	[esp+5Ch+uMode], eax
call	g_module_close
call	g_module_error
test	eax, eax
jz	short loc_67CF7DD7
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aErrorClosingMo 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+8], 0
mov	[esp+5Ch+uMode], ebp 
call	SetErrorMode
push	eax
			
mov	[esp+5Ch+uMode], ebx
call	purple_plugin_destroy
xor	ebx, ebx
jmp	loc_67CF79F8
align 4
			
mov	[esp+5Ch+var_58], offset aAbiVersionMism 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+var_4C], 0Ah
mov	[esp+5Ch+var_50], 2
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+uMode], eax
call	g_strdup_printf
mov	[ebx+14h], eax
mov	eax, [ebx+10h]
mov	[esp+5Ch+var_44], 0Ah
mov	[esp+5Ch+var_48], 2
mov	edx, [eax+8]
mov	[esp+5Ch+var_4C], edx
mov	eax, [eax+4]
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_4 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF79F8
align 4
call	g_module_error
test	eax, eax
jz	short loc_67CF7EC8
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+uMode], eax
mov	[esp+5Ch+var_30], eax
call	purple_str_has_prefix
test	eax, eax
mov	edx, [esp+5Ch+var_30]
jz	loc_67CF7F5F
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	edx, [edx+ecx-1]
mov	al, [edx]
cmp	al, 3Ah
jz	loc_67CF7F95
cmp	al, 20h
jz	loc_67CF7F9E
			
test	al, al
jnz	loc_67CF7F66
			
mov	[esp+5Ch+var_58], offset aUnknownError_1 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+uMode], eax
call	g_strdup
mov	[ebx+14h], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_5 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	[esp+5Ch+var_58], 3
mov	[esp+5Ch+uMode], esi
call	g_module_open_utf8
mov	[ebx+8], eax
test	eax, eax
jz	loc_67CF7DDE
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF7BEE
mov	[esp+5Ch+var_4C], 5
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_1 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	[esp+5Ch+uMode], ebx
call	purple_plugin_destroy
xor	ebx, ebx
jmp	loc_67CF79F8
mov	al, [edx]
jmp	loc_67CF7EC0
mov	[esp+5Ch+uMode], edx
call	g_strdup
mov	[ebx+14h], eax
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_6 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
jmp	loc_67CF7F02
mov	al, [edx+1]
inc	edx
jmp	loc_67CF7EB8
mov	ecx, edx
inc	ecx
jz	loc_67CF7EC8
mov	al, [edx+1]
mov	edx, ecx
jmp	loc_67CF7EC0
			
mov	[esp+5Ch+var_58], offset aPluginDoesNotI 
mov	[esp+5Ch+uMode], offset	aPidgin_8 
call	libintl_dgettext
mov	[esp+5Ch+uMode], eax
call	g_strdup
mov	[ebx+14h], eax
mov	[esp+5Ch+var_50], eax
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aSIsNotLoadab_6 
mov	[esp+5Ch+uMode], offset	aPlugins_0 
call	purple_debug_error
mov	dword ptr [ebx+20h], 1
jmp	loc_67CF79F8
call	__stack_chk_fail
public purple_plugin_load
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CF8078
mov	[esp+4Ch+var_4C], edi
call	purple_plugin_is_loaded
test	eax, eax
jz	short loc_67CF8044
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF8291
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_4C], edi
call	purple_plugin_is_unloadable
test	eax, eax
jnz	short loc_67CF8073
mov	esi, [edi+14h]
test	esi, esi
jz	short loc_67CF8098
mov	[esp+4Ch+var_44], offset aPluginErrorNul 
mov	[esp+4Ch+var_48], offset aPurple_plug_21 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67CF802B
align 4
mov	[esp+4Ch+var_44], offset aPluginNull 
mov	[esp+4Ch+var_48], offset aPurple_plug_21 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF802B
mov	eax, [edi+10h]
mov	ebx, [eax+18h]
xor	esi, esi
test	ebx, ebx
jnz	short loc_67CF80C5
jmp	loc_67CF828A
align 4
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_list_append
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_67CF8154
mov	ebp, [ebx]
mov	[esp+4Ch+var_4C], ebp
call	purple_plugins_find_with_id
test	eax, eax
jnz	short loc_67CF80AC
mov	[esp+4Ch+var_48], offset aTheRequiredPlu 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aUnableToLoadTh 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_34], 0
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], 0
call	purple_notify_message
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_4C], esi
call	g_list_free
xor	eax, eax
jmp	loc_67CF802B
test	eax, eax
jz	loc_67CF828A
mov	ebx, eax
jmp	short loc_67CF8167
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CF81B8
mov	ebp, [ebx]
mov	[esp+4Ch+var_4C], ebp
call	purple_plugin_is_loaded
test	eax, eax
jnz	short loc_67CF8160
mov	[esp+4Ch+var_4C], ebp
call	purple_plugin_load
test	eax, eax
jnz	short loc_67CF8160
mov	eax, [edi+10h]
mov	ebx, [eax+24h]
mov	[esp+4Ch+var_48], offset aTheRequiredP_0 
mov	[esp+4Ch+var_4C], offset aPidgin_8 
call	libintl_dgettext
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_48], offset aUnableToLoadYo 
jmp	loc_67CF80FD
align 4
mov	ebx, esi
xchg	ax, ax
mov	ebp, [ebx]
mov	eax, [edi+10h]
mov	eax, [eax+20h]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+24h]
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	[ebp+24h], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF81BC
mov	[esp+4Ch+var_4C], esi
call	g_list_free
mov	ebx, [edi]
test	ebx, ebx
jz	short loc_67CF8264
mov	eax, [edi+10h]
mov	eax, [eax+3Ch]
test	eax, eax
jz	short loc_67CF8202
mov	[esp+4Ch+var_4C], edi
call	eax
test	eax, eax
jz	loc_67CF8073
			
mov	[esp+4Ch+var_44], offset sub_67CF5FD4
mov	[esp+4Ch+var_48], edi
mov	eax, ds:dword_67D72204
mov	[esp+4Ch+var_4C], eax
call	g_list_insert_sorted
mov	ds:dword_67D72204, eax
mov	dword ptr [edi+4], 1
mov	eax, ds:dword_67D72208
test	eax, eax
jz	short loc_67CF823F
mov	edx, ds:dword_67D7220C
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], edi
call	eax 
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aPluginLoad 
mov	[esp+4Ch+var_4C], offset dword_67D72210
call	purple_signal_emit
mov	eax, 1
jmp	loc_67CF802B
align 4
mov	eax, [edi+0Ch]
call	sub_67CF6100
test	eax, eax
jz	loc_67CF8073
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+8]
test	eax, eax
jnz	loc_67CF81F5
jmp	loc_67CF8202
			
xor	esi, esi
jmp	loc_67CF81DD
call	__stack_chk_fail
align 4
public purple_plugin_reload
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8310
mov	[esp+2Ch+var_2C], ebx
call	purple_plugin_is_loaded
test	eax, eax
jnz	short loc_67CF82EC
mov	[esp+2Ch+var_24], offset aPurple_plug_17 
mov	[esp+2Ch+var_28], offset aPurple_plug_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8330
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_plugin_unload
test	eax, eax
jnz	short loc_67CF82FC
xor	eax, eax
jmp	short loc_67CF82D9
mov	[esp+2Ch+var_2C], ebx
call	purple_plugin_load
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CF82D9
align 10h
mov	[esp+2Ch+var_24], offset aPluginNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF82D9
call	__stack_chk_fail
align 4
public purple_plugins_probe
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	g_module_supported
test	eax, eax
jz	loc_67CF84CE
mov	edx, ds:dword_67D72230
mov	[esp+4Ch+var_30], edx
test	edx, edx
jz	loc_67CF8400
lea	esi, [esi+0]
mov	eax, [esp+4Ch+var_30]
mov	eax, [eax]
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	g_dir_open_utf8
mov	edi, eax
test	eax, eax
jnz	short loc_67CF83D7
jmp	short loc_67CF83ED
align 4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], ebp
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	g_build_filename
mov	ebx, eax
test	esi, esi
jz	short loc_67CF83C7
mov	edx, esi
mov	eax, ebp
call	sub_67CF6088
test	eax, eax
jz	short loc_67CF83CF
mov	[esp+4Ch+var_4C], ebx
call	purple_plugin_probe
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	[esp+4Ch+var_4C], edi
call	g_dir_read_name_utf8
mov	ebp, eax
test	eax, eax
jnz	short loc_67CF839C
mov	[esp+4Ch+var_4C], edi
call	g_dir_close
mov	eax, [esp+4Ch+var_30]
mov	eax, [eax+4]
mov	[esp+4Ch+var_30], eax
test	eax, eax
jnz	loc_67CF8370
			
mov	eax, ds:dword_67D72228
lea	esi, [esi+0]
			
test	eax, eax
jz	short loc_67CF8458
mov	ebx, [eax]
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_list_remove
mov	ds:dword_67D72228, eax
test	ebx, ebx
jz	short loc_67CF8408
mov	edx, [ebx+10h]
test	edx, edx
jz	short loc_67CF8408
mov	edx, [edx+0Ch]
cmp	edx, 1
jz	short loc_67CF8484
cmp	edx, 2
jnz	short loc_67CF8408
mov	[esp+4Ch+var_4C], ebx
call	purple_plugin_load
test	eax, eax
jnz	loc_67CF84E2
			
mov	[esp+4Ch+var_4C], ebx
call	purple_plugin_destroy
mov	eax, ds:dword_67D72228
test	eax, eax
jnz	short loc_67CF840C
mov	eax, ds:dword_67D72234
test	eax, eax
jz	short loc_67CF84CE
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CF851B
mov	edx, ds:dword_67D72238
mov	[esp+4Ch+arg_0], edx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	[esp+4Ch+var_4C], ebx
call	purple_plugin_load
test	eax, eax
jz	short loc_67CF8447
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D7222C
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	ds:dword_67D7222C, eax
mov	eax, [ebx+10h]
mov	eax, [eax+4Ch]
mov	ebx, [eax]
test	ebx, ebx
jz	loc_67CF8400
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+4Ch+var_4C], eax
call	purple_plugins_probe
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CF84B8
jmp	loc_67CF8400
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF851B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [ebx+10h]
mov	eax, [eax+20h]
mov	[esp+4Ch+var_4C], eax
call	purple_find_prpl
test	eax, eax
jnz	loc_67CF8447
mov	[esp+4Ch+var_44], offset sub_67CF5F60
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72214
mov	[esp+4Ch+var_4C], eax
call	g_list_insert_sorted
mov	ds:dword_67D72214, eax
jmp	loc_67CF8400
			
call	__stack_chk_fail
public purple_plugins_load_saved
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67CF8678
mov	[esp+4Ch+Str], eax
call	purple_prefs_get_path_list
mov	[esp+4Ch+var_30], eax
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF8598
jmp	loc_67CF8658
align 4
			
mov	edx, [ebp+0Ch]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aLoadingSavedPl 
mov	[esp+4Ch+Str], offset aPlugins_0 
call	purple_debug_info
mov	[esp+4Ch+Str], ebp
call	purple_plugin_load
mov	[esp+4Ch+Str], edi
call	g_free
mov	eax, [ebx]
mov	[esp+4Ch+Str], eax
call	g_free
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_67CF8658
mov	esi, [ebx]
test	esi, esi
jz	short loc_67CF858D
mov	[esp+4Ch+var_48], 2Fh 
mov	[esp+4Ch+Str], esi 
call	strrchr
mov	edi, eax
mov	[esp+4Ch+var_48], 5Ch 
mov	[esp+4Ch+Str], esi 
test	eax, eax
jz	short loc_67CF8634
call	strrchr
cmp	edi, eax
jnb	short loc_67CF85CE
test	eax, eax
jz	short loc_67CF8640
mov	edi, eax
mov	eax, edi
inc	eax
jz	short loc_67CF8640
call	sub_67CF5E94
mov	edi, eax
mov	[esp+4Ch+Str], esi
call	purple_plugins_find_with_filename
mov	ebp, eax
test	eax, eax
jnz	loc_67CF8558
test	edi, edi
jz	short loc_67CF8602
mov	[esp+4Ch+Str], edi
call	purple_plugins_find_with_basename
mov	ebp, eax
test	eax, eax
jnz	loc_67CF8558
			
mov	[esp+4Ch+Str], esi
call	purple_plugin_probe
mov	ebp, eax
test	eax, eax
jnz	loc_67CF8558
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aUnableToFindSa 
mov	[esp+4Ch+Str], offset aPlugins_0 
call	purple_debug_error
jmp	loc_67CF857B
align 4
call	strrchr
test	eax, eax
jnz	short loc_67CF85CC
lea	esi, [esi+0]
			
mov	[esp+4Ch+Str], esi
call	purple_plugins_find_with_filename
mov	ebp, eax
xor	edi, edi
test	eax, eax
jnz	loc_67CF8558
jmp	short loc_67CF8602
align 4
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF86A8
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_free
mov	[esp+4Ch+var_44], offset aKeyNull_2 
mov	[esp+4Ch+var_48], offset aPurple_plug_23 
mov	[esp+4Ch+Str], 0
call	g_return_if_fail_warning
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF86A8
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_plugins_get_loaded
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72204
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF86D3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_plugins_get_protocols
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72214
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF86FB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_plugins_get_all
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72224
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8723
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_plugin_action_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 14h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx], eax
mov	[ebx+4], esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8771
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_plugin_action_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF87B4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF87E1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aActionNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF87E1
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_plugin_pref_destroy
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF8860
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ebx, [esi+14h]
test	ebx, ebx
jz	short loc_67CF8844
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_list_delete_link
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CF881C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF888E
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF888E
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_plugin_pref_frame_new
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 4
call	g_malloc0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF88BE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_plugin_pref_frame_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8918
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_plugin_pref_destroy
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8945
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_24], offset aFrameNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8945
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_plugin_pref_frame_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67CF8990
test	eax, eax
jz	short loc_67CF89B0
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF89CE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aFrameNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF897C
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF897C
call	__stack_chk_fail
align 4
public purple_plugin_pref_frame_get_prefs
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF8A04
mov	eax, [eax]
test	eax, eax
jz	short loc_67CF8A24
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8A4A
add	esp, 3Ch
retn
align 4
mov	[esp+3Ch+var_34], offset aFrameNull 
mov	[esp+3Ch+var_38], offset aPurple_plug_28 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF89F1
mov	[esp+3Ch+var_34], offset aFramePrefsNull 
mov	[esp+3Ch+var_38], offset aPurple_plug_28 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67CF89F1
call	__stack_chk_fail
align 10h
public purple_plugin_pref_new
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 24h
call	g_malloc0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8A7A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_plugin_pref_new_with_name
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF8AC4
mov	[esp+2Ch+var_2C], 24h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8AE4
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aNameNull_3 
mov	[esp+2Ch+var_28], offset aPurple_plug_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF8AB0
call	__stack_chk_fail
align 4
public purple_plugin_pref_new_with_label
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF8B34
mov	[esp+2Ch+var_2C], 24h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8B54
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aLabelNull_0 
mov	[esp+2Ch+var_28], offset aPurple_plug_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF8B1D
call	__stack_chk_fail
align 4
public purple_plugin_pref_new_with_name_and_label
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CF8BB8
test	edi, edi
jz	short loc_67CF8BD8
mov	[esp+2Ch+var_2C], 24h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+4], eax
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8BF8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aNameNull_3 
mov	[esp+2Ch+var_28], offset aPurple_plug_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF8BA0
mov	[esp+2Ch+var_24], offset aLabelNull_0 
mov	[esp+2Ch+var_28], offset aPurple_plug_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF8BA0
call	__stack_chk_fail
align 10h
public purple_plugin_pref_set_name
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8C48
test	esi, esi
jz	short loc_67CF8C68
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8C86
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF8C34
align 4
mov	[esp+2Ch+var_24], offset aNameNull_3 
mov	[esp+2Ch+var_28], offset aPurple_plug_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF8C34
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF8CB8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8CD8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF8CA5
call	__stack_chk_fail
align 10h
public purple_plugin_pref_set_label
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8D28
test	esi, esi
jz	short loc_67CF8D48
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8D66
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF8D16
align 4
mov	[esp+2Ch+var_24], offset aLabelNull_0 
mov	[esp+2Ch+var_28], offset aPurple_plug_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF8D16
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_label
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF8D98
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF8DB8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF8D86
call	__stack_chk_fail
align 10h
public purple_plugin_pref_set_bounds
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8E54
mov	eax, [ebx]
test	eax, eax
jz	loc_67CF8E84
mov	[esp+2Ch+var_2C], eax
call	purple_prefs_get_type
cmp	eax, 2
jnz	short loc_67CF8E24
cmp	esi, edi
jg	short loc_67CF8E1C
mov	[ebx+0Ch], esi
mov	[ebx+10h], edi
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF8E9A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, esi
mov	esi, edi
mov	edi, eax
jmp	short loc_67CF8DFC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8E9A
mov	eax, [ebx]
mov	[esp+2Ch+arg_8], eax
mov	[esp+2Ch+arg_4], offset	aPurple_plug_36	
mov	[esp+2Ch+arg_0], offset	aPluginpref 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8E9A
mov	[esp+2Ch+arg_8], offset	aPrefNull 
mov	[esp+2Ch+arg_4], offset	aPurple_plug_37	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8E9A
mov	[esp+2Ch+arg_8], offset	aPrefNameNull 
jmp	short loc_67CF8E68
			
call	__stack_chk_fail
align 10h
public purple_plugin_pref_get_bounds
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF8F2C
mov	eax, [ebx]
test	eax, eax
jz	loc_67CF8F5C
mov	[esp+2Ch+var_2C], eax
call	purple_prefs_get_type
cmp	eax, 2
jnz	short loc_67CF8EFC
mov	eax, [ebx+0Ch]
mov	[esi], eax
mov	eax, [ebx+10h]
mov	[edi], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF8F72
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8F72
mov	eax, [ebx]
mov	[esp+2Ch+arg_8], eax
mov	[esp+2Ch+arg_4], offset	aPurple_plug_38	
mov	[esp+2Ch+arg_0], offset	aPluginpref 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8F72
mov	[esp+2Ch+arg_8], offset	aPrefNull 
mov	[esp+2Ch+arg_4], offset	aPurple_plug_39	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8F72
mov	[esp+2Ch+arg_8], offset	aPrefNameNull 
jmp	short loc_67CF8F40
			
call	__stack_chk_fail
align 4
public purple_plugin_pref_set_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF8FA8
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF8FC6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF8F96
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF8FF8
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF9018
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF8FE6
call	__stack_chk_fail
align 10h
public purple_plugin_pref_add_choice
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF908C
test	esi, esi
jz	short loc_67CF90BC
test	edi, edi
jz	loc_67CF90D4
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+14h], eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+14h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF90FD
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF90FD
mov	[esp+2Ch+arg_8], offset	aPrefNull 
			
mov	[esp+2Ch+arg_4], offset	aPurple_plug_42	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF90FD
mov	[esp+2Ch+arg_8], offset	aLabelNull_0 
jmp	short loc_67CF90A0
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_prefs_get_type
cmp	eax, 2
jz	loc_67CF904D
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF90FD
mov	[esp+2Ch+arg_8], offset	aChoicePurple_p	
jmp	short loc_67CF90A0
			
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_choices
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF9130
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF9150
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_43 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF911E
call	__stack_chk_fail
align 4
public purple_plugin_pref_set_max_length
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9188
mov	[eax+18h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF91A6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_44 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF9176
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_max_length
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF91D8
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF91F8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF91C6
call	__stack_chk_fail
align 10h
public purple_plugin_pref_set_masked
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9230
mov	[eax+1Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF924E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_46 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF921E
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_masked
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF9280
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF92A0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_47 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF926E
call	__stack_chk_fail
align 4
public purple_plugin_pref_set_format_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9300
cmp	dword ptr [eax+8], 3
jz	short loc_67CF92F8
mov	[esp+2Ch+var_24], offset aPrefTypePurple 
mov	[esp+2Ch+var_28], offset aPurple_plug_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF931E
add	esp, 2Ch
retn
align 4
mov	[eax+20h], edx
jmp	short loc_67CF92E5
align 10h
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF92E5
call	__stack_chk_fail
align 4
public purple_plugin_pref_get_format_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CF935C
cmp	dword ptr [eax+8], 3
jz	short loc_67CF9354
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF937C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67CF9343
align 4
mov	[esp+2Ch+var_24], offset aPrefNull 
mov	[esp+2Ch+var_28], offset aPurple_plug_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF9343
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF93BA
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9401
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_28], offset aEvent	
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aType_1 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF944F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aParam	
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_new_child
mov	ebx, eax
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aName_3 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF94BE
mov	[esp+2Ch+arg_8], 0FFFFFFFFh
mov	[esp+2Ch+arg_4], edi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	xmlnode_insert_data
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF9508
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CF9527
mov	[esp+2Ch+arg_8], ecx
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_string_append_len
align 4
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], edx
call	g_string_new_len
mov	[ebx], eax
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67CF9527
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_30], edx
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_3C], edx
mov	ebp, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_40], offset g_free
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	[esp+4Ch+var_38], eax
mov	edx, [esp+4Ch+var_3C]
mov	ecx, [edx]
test	ecx, ecx
jz	short loc_67CF95DA
mov	ebx, [esp+4Ch+var_3C]
add	ebx, 4
mov	esi, [esp+4Ch+var_3C]
xor	eax, eax
lea	esi, [esi+0]
mov	eax, [ebp+eax+0]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edi, eax
mov	eax, [esi]
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
mov	eax, ebx
sub	eax, [esp+4Ch+var_3C]
mov	esi, ebx
add	ebx, 4
mov	edx, [ebx-4]
test	edx, edx
jnz	short loc_67CF959C
mov	edx, [esp+4Ch+var_34]
mov	eax, [edx]
test	eax, eax
jz	short loc_67CF95FE
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], eax
call	g_string_free
mov	edx, [esp+4Ch+var_34]
mov	dword ptr [edx], 0
mov	[esp+4Ch+var_48], offset aPounce 
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jz	short loc_67CF9670
mov	[esp+4Ch+var_48], offset aUi_0 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF974C
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+10h], eax
mov	edx, [esp+4Ch+var_34]
mov	dword ptr [edx+8], 0
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CF98A2
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_destroy
mov	[esp+4Ch+var_48], offset aAccount_1 
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jz	short loc_67CF96B8
mov	[esp+4Ch+var_48], offset aProtocol_1 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF97FD
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+18h], eax
jmp	short loc_67CF964C
align 4
mov	[esp+4Ch+var_48], offset aOption 
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jnz	short loc_67CF971C
mov	[esp+4Ch+var_48], offset aEvent	
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jz	loc_67CF976D
mov	[esp+4Ch+var_48], offset aType_1 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF983F
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+1Ch], eax
jmp	loc_67CF964C
mov	[esp+4Ch+var_48], offset aType_1 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF981E
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+20h], eax
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetUiParamet 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF9641
mov	[esp+4Ch+var_48], offset aAction 
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jnz	short loc_67CF97D1
mov	[esp+4Ch+var_48], offset aParam	
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	purple_strequal
test	eax, eax
jz	loc_67CF964C
mov	[esp+4Ch+var_48], offset aName_3 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CF9881
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+28h], eax
jmp	loc_67CF964C
mov	[esp+4Ch+var_48], offset aType_1 
mov	eax, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CF9860
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_34]
mov	[edx+24h], eax
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetProtocolP 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetTypeParam 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetTypePar_0 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetTypePar_1 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF964C
mov	[esp+4Ch+var_44], offset aUnsetNameParam 
mov	[esp+4Ch+var_48], offset aPounce 
mov	[esp+4Ch+var_4C], 4
call	purple_debug
jmp	loc_67CF964C
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
test	eax, eax
jz	short loc_67CF98D1
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9942
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+30h]
mov	ebx, [esp+34h]
mov	eax, [esp+38h]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edi, [ebx+4]
test	edi, edi
jnz	short loc_67CF9980
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF99D0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	dword ptr [esp+4], offset aAction 
mov	[esp], eax
call	xmlnode_new_child
mov	edi, eax
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aType_1 
mov	[esp], eax
call	xmlnode_set_attrib
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF99D0
mov	[esp+38h], edi
mov	dword ptr [esp+34h], offset loc_67CF9454
mov	eax, [ebx+8]
mov	[esp+30h], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_hash_table_foreach
			
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9A10
test	edx, edx
jz	short loc_67CF9A30
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF9A50
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aFind_action_da 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF99FE
mov	[esp+2Ch+var_24], offset aNameNull_4 
mov	[esp+2Ch+var_28], offset aFind_action_da 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CF99FE
call	__stack_chk_fail
align 4
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72240
test	eax, eax
jnz	short loc_67CF9A90
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CFAFF8
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D72240, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9AA0
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_pounces_load
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_user_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aPounces_xml 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+2Ch+var_1C], 0
mov	[esp+2Ch+var_14], 0
test	eax, eax
jz	loc_67CF9BE8
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
lea	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], eax
lea	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_file_get_contents_utf8
test	eax, eax
jz	loc_67CF9C08
mov	[esp+2Ch+var_2C], 30h
call	g_malloc0
mov	[esp+2Ch+var_20], offset sub_67CF98A8
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset off_67D303E8
call	g_markup_parse_context_new
mov	esi, eax
mov	[esp+2Ch+var_20], 0
mov	eax, [esp+2Ch+var_18]
mov	[esp+2Ch+var_24], eax
mov	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_markup_parse_context_parse
test	eax, eax
jz	short loc_67CF9BCC
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	g_markup_parse_context_end_parse
test	eax, eax
jz	short loc_67CF9BAC
mov	[esp+2Ch+var_2C], esi
call	g_markup_parse_context_free
mov	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ds:dword_67D7223C, 1
mov	eax, 1
jmp	short loc_67CF9BF4
align 4
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset aErrorParsingS	
mov	[esp+2Ch+var_28], offset aPounce 
mov	[esp+2Ch+var_2C], 4
call	purple_debug
mov	[esp+2Ch+var_2C], esi
call	g_markup_parse_context_free
mov	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
			
mov	ds:dword_67D7223C, 1
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF9C45
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+2Ch+var_14]
mov	eax, [eax+8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], offset aErrorReadingPo 
mov	[esp+2Ch+var_28], offset aPounce 
mov	[esp+2Ch+var_2C], 4
call	purple_debug
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_error_free
jmp	short loc_67CF9BE8
call	__stack_chk_fail
align 4
public purple_pounce_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	ecx, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CF9D6C
test	edi, edi
jz	loc_67CF9D8C
test	edx, edx
jz	loc_67CF9DAC
test	ebp, ebp
jz	loc_67CF9D38
mov	[esp+4Ch+var_4C], 20h
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	g_malloc0
mov	ebx, eax
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx], eax
mov	[ebx+0Ch], edi
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[ebx+10h], eax
mov	[ebx+4], ebp
mov	ecx, [esp+4Ch+var_34]
mov	[ebx+8], ecx
mov	[esp+4Ch+var_40], offset sub_67CF93C0
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+14h], eax
mov	eax, [ebx]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72248
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CF9D18
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CF9D18
mov	[esp+4Ch+var_4C], ebx
call	eax
			
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72244
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	ds:dword_67D72244, eax
call	sub_67CF9A58
jmp	short loc_67CF9D56
align 4
mov	[esp+4Ch+var_44], offset aEvent0 
mov	[esp+4Ch+var_48], offset aPurple_pounce_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CF9DCC
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aUi_typeNull 
mov	[esp+4Ch+var_48], offset aPurple_pounce_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF9D56
mov	[esp+4Ch+var_44], offset aPouncerNull 
mov	[esp+4Ch+var_48], offset aPurple_pounce_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF9D56
mov	[esp+4Ch+var_44], offset aPounceeNull 
mov	[esp+4Ch+var_48], offset aPurple_pounce_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67CF9D56
call	__stack_chk_fail
align 4
public purple_pounce_destroy
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CF9E68
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72248
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	esi, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72244
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D72244, eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
test	esi, esi
jz	short loc_67CF9E47
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67CF9E47
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9E96
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CF9A58
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9E96
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_pounce_set_events
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9F00
test	edx, edx
jnz	short loc_67CF9EE8
mov	[esp+2Ch+var_24], offset aEventsPurple_p 
mov	[esp+2Ch+var_28], offset aPurple_pounc_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9F1E
add	esp, 2Ch
retn
align 4
mov	[eax+4], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF9F1E
add	esp, 2Ch
jmp	sub_67CF9A58
align 10h
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF9ED7
			
call	__stack_chk_fail
align 4
public purple_pounce_set_options
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9F58
mov	[eax+8], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CF9F84
add	esp, 2Ch
jmp	sub_67CF9A58
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CF9F84
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_pounce_set_pouncer
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CF9FC4
test	edx, edx
jz	short loc_67CF9FF0
mov	[eax+0Ch], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA00E
add	esp, 2Ch
jmp	sub_67CF9A58
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA00E
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aPouncerNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CF9FE0
			
call	__stack_chk_fail
align 4
public purple_pounce_set_pouncee
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFA060
test	esi, esi
jz	short loc_67CFA090
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA0AE
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CF9A58
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA0AE
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aPounceeNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFA07C
			
call	__stack_chk_fail
align 4
public purple_pounce_set_save
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFA0E8
mov	[eax+18h], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA114
add	esp, 2Ch
jmp	sub_67CF9A58
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA114
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_pounce_action_register
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFA168
test	esi, esi
jz	short loc_67CFA188
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67CFA1A8
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFA220
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFA150
align 4
mov	[esp+2Ch+var_24], offset aNameNull_4 
mov	[esp+2Ch+var_28], offset aPurple_pounc_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFA150
align 4
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	edi, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[edi], eax
mov	dword ptr [edi+4], 0
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[edi+8], eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA220
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CF9A58
			
call	__stack_chk_fail
align 4
public purple_pounce_action_set_enabled
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFA270
test	edx, edx
jz	short loc_67CFA2A0
call	sub_67CF99D8
test	eax, eax
jz	short loc_67CFA2B8
mov	[eax+4], ebx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA2CE
add	esp, 18h
pop	ebx
jmp	sub_67CF9A58
align 10h
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA2CE
mov	[esp+1Ch+arg_8], offset	aPounceNull 
			
mov	[esp+1Ch+arg_4], offset	aPurple_pounc_7	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
align 10h
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA2CE
mov	[esp+1Ch+arg_8], offset	aActionNull_0 
jmp	short loc_67CFA284
align 4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA2CE
mov	[esp+1Ch+arg_8], offset	aAction_dataNul	
jmp	short loc_67CFA284
			
call	__stack_chk_fail
align 4
public purple_pounce_action_set_attribute
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFA364
test	edx, edx
jz	loc_67CFA398
test	ebx, ebx
jz	loc_67CFA3B0
call	sub_67CF99D8
mov	edi, eax
test	eax, eax
jz	loc_67CFA3C8
test	esi, esi
jz	loc_67CFA3E0
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFA3F4
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CF9A58
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CFA3F4
mov	[esp+2Ch+arg_8], offset	aPounceNull 
			
mov	[esp+2Ch+arg_4], offset	aPurple_pounc_8	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA3F4
mov	[esp+2Ch+arg_8], offset	aActionNull_0 
jmp	short loc_67CFA37C
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA3F4
mov	[esp+2Ch+arg_8], offset	aAttrNull 
jmp	short loc_67CFA37C
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA3F4
mov	[esp+2Ch+arg_8], offset	aAction_dataNul	
jmp	short loc_67CFA37C
align 10h
mov	[esp+2Ch+var_28], ebx
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
jmp	loc_67CFA346
			
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
test	eax, eax
jz	loc_67CFA53C
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], eax
call	g_string_free
mov	edi, eax
mov	dword ptr [ebx], 0
mov	[esp+3Ch+var_38], offset aAccount_1 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jnz	loc_67CFA500
mov	[esp+3Ch+var_38], offset aPouncee 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jnz	short loc_67CFA4C8
mov	[esp+3Ch+var_38], offset aOption 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jnz	loc_67CFA544
mov	[esp+3Ch+var_38], offset aEvent	
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	loc_67CFA578
mov	[esp+3Ch+var_38], offset aSignOn 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFA5D4
or	dword ptr [ebx+8], 1
			
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+1Ch], 0
jmp	short loc_67CFA4DE
align 4
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+14h], eax
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFA884
mov	[esp+3Ch+arg_0], edi
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 10h
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+2Ch], eax
mov	esi, [ebx+18h]
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], edi
call	_purple_oscar_convert
mov	[esp+3Ch+var_3C], eax
call	g_strdup
mov	[ebx+18h], eax
mov	[esp+3Ch+var_3C], esi
call	g_free
jmp	short loc_67CFA4DE
align 4
xor	edi, edi
jmp	loc_67CFA437
align 4
mov	[esp+3Ch+var_38], offset aOnAway 
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA55F
or	dword ptr [ebx+0Ch], 1
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+20h], 0
jmp	loc_67CFA4DE
align 4
mov	[esp+3Ch+var_38], offset aAction 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFA5F8
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CFA5BC
mov	edx, [ebx+24h]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_pounce_action_register
mov	[esp+3Ch+var_34], 1
mov	eax, [ebx+24h]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+4]
mov	[esp+3Ch+var_3C], eax
call	purple_pounce_action_set_enabled
mov	eax, [ebx+24h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+24h], 0
jmp	loc_67CFA4DE
align 4
mov	[esp+3Ch+var_38], offset aSignOff 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFA704
or	dword ptr [ebx+8], 2
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aParam	
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFA644
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67CFA62D
mov	[esp+3Ch+var_30], edi
mov	edx, [ebx+28h]
mov	[esp+3Ch+var_34], edx
mov	edx, [ebx+24h]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_pounce_action_set_attribute
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+28h], 0
jmp	loc_67CFA4DE
mov	[esp+3Ch+var_38], offset aEvents 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	loc_67CFA724
mov	eax, [ebx+18h]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_accounts_find
mov	esi, eax
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+2Ch], 0
mov	dword ptr [ebx+18h], 0
test	esi, esi
jz	loc_67CFA85E
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aCreatingPounce 
mov	[esp+3Ch+var_38], offset aPounce 
mov	[esp+3Ch+var_3C], 2
call	purple_debug
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx+8]
mov	[esp+3Ch+var_30], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_3C], eax
call	purple_pounce_new
mov	[ebx+4], eax
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+14h], 0
jmp	loc_67CFA4DE
mov	[esp+3Ch+var_38], offset aAway 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA758
or	dword ptr [ebx+8], 4
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aSave_0 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFA77C
mov	eax, [ebx+4]
test	eax, eax
jz	loc_67CFA4DE
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], eax
call	purple_pounce_set_save
jmp	loc_67CFA4DE
mov	[esp+3Ch+var_38], offset aReturnFromAway 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFA83E
or	dword ptr [ebx+8], 8
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aPounce 
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	loc_67CFA4DE
mov	dword ptr [ebx+4], 0
mov	dword ptr [ebx+8], 0
mov	dword ptr [ebx+0Ch], 0
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+24h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	dword ptr [ebx+10h], 0
mov	dword ptr [ebx+4], 0
mov	dword ptr [ebx+18h], 0
mov	dword ptr [ebx+1Ch], 0
mov	dword ptr [ebx+20h], 0
mov	dword ptr [ebx+24h], 0
mov	dword ptr [ebx+28h], 0
mov	dword ptr [ebx+2Ch], 0
jmp	loc_67CFA4DE
mov	[esp+3Ch+var_38], offset aIdle_0 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA889
or	dword ptr [ebx+8], 10h
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_34], offset aAccountForPoun 
mov	[esp+3Ch+var_38], offset aPounce 
mov	[esp+3Ch+var_3C], 4
call	purple_debug
call	sub_67CF9A58
jmp	loc_67CFA6ED
call	__stack_chk_fail
mov	[esp+3Ch+var_38], offset aReturnFromIdle 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA8A9
or	dword ptr [ebx+8], 20h
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aStartTyping 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA8C9
or	dword ptr [ebx+8], 40h
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aTyped	
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA8EC
or	dword ptr [ebx+8], 80h
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aStopTyping 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFA90F
or	dword ptr [ebx+8], 100h
jmp	loc_67CFA4B2
mov	[esp+3Ch+var_38], offset aMessageReceive 
mov	eax, [ebx+1Ch]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFA4B2
or	dword ptr [ebx+8], 200h
jmp	loc_67CFA4B2
align 4
public purple_pounce_set_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFA96C
mov	[eax+1Ch], edx
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFA998
add	esp, 2Ch
jmp	sub_67CF9A58
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_pounc_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFA998
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_pounce_get_events
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFA9CC
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFA9EC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFA9BA
call	__stack_chk_fail
align 4
public purple_pounce_get_options
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFAA20
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFAA40
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFAA0E
call	__stack_chk_fail
align 4
public purple_pounce_get_pouncer
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFAA74
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFAA94
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFAA62
call	__stack_chk_fail
align 4
public purple_pounce_destroy_all_by_account
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CFAAF8
mov	eax, ds:dword_67D72244
test	eax, eax
jz	short loc_67CFAAD7
xchg	ax, ax
mov	ebx, [eax]
mov	esi, [eax+4]
mov	[esp+2Ch+var_2C], ebx
call	purple_pounce_get_pouncer
cmp	eax, edi
jz	short loc_67CFAAEC
mov	eax, esi
test	esi, esi
jnz	short loc_67CFAAC0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFAB16
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_pounce_destroy
jmp	short loc_67CFAAD1
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_6	
mov	[esp+2Ch+var_28], offset aPurple_poun_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFAAD7
call	__stack_chk_fail
align 4
public purple_pounce_get_pouncee
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFAB48
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFAB68
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFAB36
call	__stack_chk_fail
align 10h
public purple_pounce_destroy_all_by_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFABFC
mov	[esp+4Ch+Str1],	ebx
call	purple_buddy_get_account
mov	ebp, eax
mov	[esp+4Ch+Str1],	ebx
call	purple_buddy_get_name
mov	[esp+4Ch+var_30], eax
mov	esi, ds:dword_67D72244
xchg	ax, ax
			
test	esi, esi
jz	short loc_67CFABE8
mov	ebx, [esi]
mov	esi, [esi+4]
mov	[esp+4Ch+Str1],	ebx
call	purple_pounce_get_pouncer
mov	edi, eax
mov	[esp+4Ch+Str1],	ebx
call	purple_pounce_get_pouncee
cmp	edi, ebp
jnz	short loc_67CFABA8
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+Str2],	edx 
mov	[esp+4Ch+Str1],	eax 
call	strcmp
test	eax, eax
jnz	short loc_67CFABA8
mov	[esp+4Ch+Str1],	ebx
call	purple_pounce_destroy
test	esi, esi
jnz	short loc_67CFABAC
nop
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFAC1A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aBuddyNull_1 
mov	[esp+4Ch+Str2],	offset aPurple_poun_15 
mov	[esp+4Ch+Str1],	0
call	g_return_if_fail_warning
jmp	short loc_67CFABE8
call	__stack_chk_fail
align 10h
public purple_pounce_get_save
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFAC4C
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFAC6C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFAC3A
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D7223C
test	eax, eax
jz	loc_67CFAFDC
mov	[esp+4Ch+var_4C], offset aPounces 
call	xmlnode_new
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_44], offset a1_0_0	
mov	[esp+4Ch+var_48], offset aVersion_1 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
mov	eax, ds:dword_67D72244
mov	[esp+4Ch+var_38], eax
test	eax, eax
jnz	loc_67CFADA6
jmp	loc_67CFAF84
align 4
			
mov	[esp+4Ch+var_48], offset aEvents 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	ebp, eax
test	bl, 1
jnz	loc_67CFAF74
test	bl, 2
jnz	loc_67CFAF38
test	bl, 4
jnz	loc_67CFAF4D
test	bl, 8
jnz	loc_67CFAF62
			
test	bl, 10h
jnz	loc_67CFAF24
test	bl, 20h
jnz	loc_67CFAF10
test	bl, 40h
jnz	loc_67CFAEFC
test	bl, 80h
jnz	loc_67CFAEE8
test	bh, 1
jnz	loc_67CFAED4
and	bh, 2
jnz	loc_67CFAEC0
mov	[esp+4Ch+var_48], offset aActions 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset loc_67CF9948
mov	eax, [edi+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_foreach
mov	[esp+4Ch+var_4C], edi
call	purple_pounce_get_save
test	eax, eax
jz	short loc_67CFAD83
mov	[esp+4Ch+var_48], offset aSave_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	[esp+4Ch+var_48], esi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_insert_child
mov	eax, [esp+4Ch+var_38]
mov	eax, [eax+4]
mov	[esp+4Ch+var_38], eax
test	eax, eax
jz	loc_67CFAF84
mov	eax, [esp+4Ch+var_38]
mov	edi, [eax]
mov	[esp+4Ch+var_4C], edi
call	purple_pounce_get_pouncer
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	purple_pounce_get_events
mov	ebx, eax
mov	[esp+4Ch+var_4C], edi
call	purple_pounce_get_options
mov	[esp+4Ch+var_34], eax
mov	[esp+4Ch+var_4C], offset aPounce 
call	xmlnode_new
mov	esi, eax
mov	eax, [edi]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aUi_0 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_set_attrib
mov	[esp+4Ch+var_48], offset aAccount_1 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	edx, eax
mov	eax, [ebp+18h]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aProtocol_1 
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_3C], edx
call	xmlnode_set_attrib
mov	[esp+4Ch+var_4C], ebp
call	purple_account_get_username
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	purple_normalize
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], eax
mov	edx, [esp+4Ch+var_3C]
mov	[esp+4Ch+var_4C], edx
call	xmlnode_insert_data
mov	[esp+4Ch+var_48], offset aPouncee 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	purple_pounce_get_pouncee
mov	[esp+4Ch+var_44], 0FFFFFFFFh
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_insert_data
mov	[esp+4Ch+var_48], offset aOptions 
mov	[esp+4Ch+var_4C], esi
call	xmlnode_new_child
test	byte ptr [esp+4Ch+var_34], 1
jz	loc_67CFACD4
mov	[esp+4Ch+var_48], offset aOption 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_new_child
mov	[esp+4Ch+var_44], offset aOnAway 
mov	[esp+4Ch+var_48], offset aType_1 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_set_attrib
jmp	loc_67CFACD4
align 10h
mov	edx, offset aMessageReceive 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD40
align 4
mov	edx, offset aStopTyping	
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD37
align 4
mov	edx, offset aTyped 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD2E
align 4
mov	edx, offset aStartTyping 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD25
align 10h
mov	edx, offset aReturnFromIdle 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD1C
align 4
mov	edx, offset aIdle_0 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD13
align 4
mov	edx, offset aSignOff 
mov	eax, ebp
call	sub_67CF9408
test	bl, 4
jz	loc_67CFAD01
mov	edx, offset aAway 
mov	eax, ebp
call	sub_67CF9408
test	bl, 8
jz	loc_67CFAD0A
mov	edx, offset aReturnFromAway 
mov	eax, ebp
call	sub_67CF9408
jmp	loc_67CFAD0A
align 4
mov	edx, offset aSignOn 
call	sub_67CF9408
jmp	loc_67CFACEF
align 4
			
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_to_formatted_str
mov	ebx, eax
mov	[esp+4Ch+var_44], 0FFFFFFFFh 
mov	[esp+4Ch+var_48], eax 
mov	[esp+4Ch+var_4C], offset aPounces_xml 
call	purple_util_write_data_to_file
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFAFF2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], offset aAttemptedToS_1 
mov	[esp+4Ch+var_4C], offset aPounce 
call	purple_debug_error
jmp	short loc_67CFAFC6
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67CFAC74
mov	ds:dword_67D72240, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB027
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_pounce_action_is_enabled
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFB068
test	edx, edx
jz	short loc_67CFB088
call	sub_67CF99D8
test	eax, eax
jz	short loc_67CFB0A8
mov	eax, [eax+4]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB0C8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFB057
mov	[esp+2Ch+var_24], offset aActionNull_0 
mov	[esp+2Ch+var_28], offset aPurple_poun_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFB057
mov	[esp+2Ch+var_24], offset aAction_dataNul 
mov	[esp+2Ch+var_28], offset aPurple_poun_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFB057
call	__stack_chk_fail
align 10h
public purple_pounce_action_get_attribute
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFB130
test	edx, edx
jz	short loc_67CFB160
test	ebx, ebx
jz	loc_67CFB180
call	sub_67CF99D8
test	eax, eax
jz	loc_67CFB1A0
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67CFB1BE
mov	[esp+2Ch+arg_4], ebx
mov	eax, [eax+8]
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	g_hash_table_lookup
align 10h
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB1BE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aActionNull_0 
mov	[esp+2Ch+var_28], offset aPurple_poun_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFB14C
align 10h
mov	[esp+2Ch+var_24], offset aAttrNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFB14C
align 10h
mov	[esp+2Ch+var_24], offset aAction_dataNul 
mov	[esp+2Ch+var_28], offset aPurple_poun_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFB14C
			
call	__stack_chk_fail
align 4
public purple_pounce_get_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFB1F0
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB210
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPounceNull 
mov	[esp+2Ch+var_28], offset aPurple_poun_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFB1DE
call	__stack_chk_fail
align 4
public purple_pounce_execute
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	edi, edi
jz	loc_67CFB394
test	eax, eax
jz	loc_67CFB3AC
mov	edx, [esp+4Ch+var_34]
test	edx, edx
jz	loc_67CFB344
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_30], eax
mov	esi, ds:dword_67D72244
lea	esi, [esi+0]
			
test	esi, esi
jz	loc_67CFB374
mov	ebx, [esi]
mov	esi, [esi+4]
mov	[esp+4Ch+var_4C], edi
call	purple_account_get_presence
mov	ebp, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_events
test	[esp+4Ch+var_34], eax
jz	short loc_67CFB278
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_pouncer
cmp	eax, edi
jnz	short loc_67CFB278
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_pouncee
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	purple_utf8_strcasecmp
test	eax, eax
jnz	short loc_67CFB278
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67CFB2E8
test	al, 1
jz	short loc_67CFB278
mov	[esp+4Ch+var_4C], ebp
call	purple_presence_is_available
test	eax, eax
jnz	short loc_67CFB278
mov	eax, [ebx]
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72248
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67CFB278
mov	ebp, [eax+4]
test	ebp, ebp
jz	loc_67CFB278
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_data
mov	[esp+4Ch+var_44], eax
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebx
call	ebp
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_save
test	eax, eax
jnz	loc_67CFB278
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_destroy
jmp	loc_67CFB278
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB3C2
mov	[esp+4Ch+arg_8], offset	aEventsPurple_p	
			
mov	[esp+4Ch+arg_4], offset	aPurple_poun_20	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB3C2
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB3C2
mov	[esp+4Ch+arg_8], offset	aPouncerNull 
jmp	short loc_67CFB358
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB3C2
mov	[esp+4Ch+arg_8], offset	aPounceeNull 
jmp	short loc_67CFB358
			
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67CFB403
mov	[esp+1Ch+arg_8], 200h
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_pounce_execute
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67CFB484
mov	[esp+2Ch+var_2C], eax
call	purple_conversation_get_im_data
mov	[esp+2Ch+var_2C], eax
call	purple_conv_im_get_typing_state
cmp	eax, 2
jz	short loc_67CFB47C
cmp	eax, 1
sbb	eax, eax
and	eax, 0C0h
add	eax, 40h
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB496
mov	[esp+2Ch+arg_8], eax
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_pounce_execute
mov	eax, 80h
jmp	short loc_67CFB45A
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB496
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	edi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp], ebx
call	purple_buddy_get_account
mov	esi, eax
mov	[esp], ebx
call	purple_buddy_get_name
mov	[esp+8], edi
mov	[esp+4], eax
mov	[esp], esi
call	purple_pounce_execute
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB4EA
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_name
mov	edi, eax
mov	[esp+4Ch+var_4C], esi
call	purple_status_is_available
mov	ebx, eax
mov	[esp+4Ch+var_4C], ebp
call	purple_status_is_available
test	ebx, ebx
jz	short loc_67CFB554
test	eax, eax
jz	short loc_67CFB584
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB59A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	eax, eax
jz	short loc_67CFB53E
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB59A
mov	[esp+4Ch+arg_8], 4
mov	[esp+4Ch+arg_4], edi
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_pounce_execute
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB59A
mov	[esp+4Ch+arg_8], 8
jmp	short loc_67CFB56C
			
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_account
mov	ebp, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_name
test	edi, edi
jz	short loc_67CFB5EC
test	esi, esi
jz	short loc_67CFB618
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB62E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
test	esi, esi
jz	short loc_67CFB5D8
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB62E
mov	[esp+3Ch+arg_8], 20h
mov	[esp+3Ch+arg_4], eax
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_pounce_execute
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB62E
mov	[esp+3Ch+arg_8], 10h
jmp	short loc_67CFB604
			
call	__stack_chk_fail
align 4
public purple_find_pounce
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	edi, edi
jz	loc_67CFB743
test	eax, eax
jz	loc_67CFB720
test	esi, esi
jnz	short loc_67CFB6A0
mov	[esp+4Ch+var_44], offset aEventsPurple_p 
mov	[esp+4Ch+var_48], offset aPurple_find_po 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFB766
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[esp+4Ch+var_30], eax
mov	ebp, ds:dword_67D72244
test	ebp, ebp
jnz	short loc_67CFB70F
xchg	ax, ax
xor	ebx, ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_free
jmp	short loc_67CFB685
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_pouncer
cmp	eax, edi
jnz	short loc_67CFB708
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_pouncee
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	purple_normalize
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	purple_utf8_strcasecmp
test	eax, eax
jz	short loc_67CFB6C6
			
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_67CFB6C4
mov	ebx, [ebp+0]
mov	[esp+4Ch+var_4C], ebx
call	purple_pounce_get_events
test	eax, esi
jz	short loc_67CFB708
jmp	short loc_67CFB6D4
mov	[esp+4Ch+var_44], offset aPounceeNull 
mov	[esp+4Ch+var_48], offset aPurple_find_po 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CFB685
mov	[esp+4Ch+var_44], offset aPouncerNull 
mov	[esp+4Ch+var_48], offset aPurple_find_po 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67CFB685
call	__stack_chk_fail
align 4
public purple_pounces_register_handler
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67CFB7F4
test	edi, edi
jz	loc_67CFB824
mov	[esp+4Ch+var_4C], 10h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx], eax
mov	[ebx+4], edi
mov	edx, [esp+4Ch+var_30]
mov	[ebx+8], edx
mov	[ebx+0Ch], ebp
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB83A
mov	[esp+4Ch+arg_8], ebx
mov	[esp+4Ch+arg_4], eax
mov	eax, ds:dword_67D72248
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_insert
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB83A
mov	[esp+4Ch+arg_8], offset	aUiNull_1 
mov	[esp+4Ch+arg_4], offset	aPurple_pounces	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB83A
mov	[esp+4Ch+arg_8], offset	aCbNull_2 
jmp	short loc_67CFB808
			
call	__stack_chk_fail
align 10h
public purple_pounces_unregister_handler
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFB878
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72248
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFB896
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aUiNull_1 
mov	[esp+2Ch+var_28], offset aPurple_poun_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFB868
call	__stack_chk_fail
align 4
public purple_pounces_get_all
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72244
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB8BF
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_pounces_get_all_for_ui
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CFB938
mov	ebx, ds:dword_67D72244
xor	ebp, ebp
test	ebx, ebx
jnz	short loc_67CFB8F3
jmp	short loc_67CFB91C
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CFB91C
			
mov	esi, [ebx]
mov	[esp+3Ch+var_38], edi
mov	eax, [esi]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFB8EC
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebp
call	g_list_prepend
mov	ebp, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFB8F3
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB96A
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
mov	[esp+3Ch+var_34], offset aUiNull_1 
mov	[esp+3Ch+var_38], offset aPurple_poun_22 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB96A
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_pounces_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7224C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFB993
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_pounces_init
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	purple_blist_get_handle
mov	esi, eax
call	purple_conversations_get_handle
mov	ebx, eax
mov	[esp+3Ch+var_30], offset sub_67CF9384
mov	[esp+3Ch+var_34], offset g_free
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72248, eax
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB5A0
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddyIdleCha_0 
mov	[esp+3Ch+var_3C], esi
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB4F0
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddyStatusC_0 
mov	[esp+3Ch+var_3C], esi
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 1
mov	[esp+3Ch+var_30], offset loc_67CFB49C
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddySignedO_0 
mov	[esp+3Ch+var_3C], esi
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], offset loc_67CFB49C
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddySignedO_1 
mov	[esp+3Ch+var_3C], esi
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB408
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddyTyping_0	
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB408
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddyTyped_0 
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB408
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aBuddyTypingS_0 
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_connect
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67CFB3C8
mov	[esp+3Ch+var_34], offset dword_67D7224C
mov	[esp+3Ch+var_38], offset aReceivedImMs_0 
mov	[esp+3Ch+var_3C], ebx
call	purple_signal_connect
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFBB31
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_pounces_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72240
test	eax, eax
jz	short loc_67CFBB66
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D72240, 0
call	sub_67CFAC74
mov	[esp+2Ch+var_2C], offset dword_67D7224C
call	purple_signals_disconnect_by_handle
mov	eax, ds:dword_67D72248
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_67D72248, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFBB99
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	edi, edx
test	edx, edx
jz	short loc_67CFBBEE
mov	ebx, [edi+0Ch]
test	ebx, ebx
jz	short loc_67CFBBE7
nop
mov	ecx, [ebx]
mov	eax, [ecx+4]
mov	[esp+3Ch+var_30], eax
mov	eax, [ebp+8]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebp+0]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	dword ptr [ecx]
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFBBC4
mov	edi, [edi+10h]
test	edi, edi
jnz	short loc_67CFBBBC
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFBC02
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	[esp+5Ch+var_58], offset aPref 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aName_4 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	eax, [ebx]
cmp	eax, 2
jz	loc_67CFBD18
cmp	eax, 3
jz	loc_67CFBD6C
cmp	eax, 4
jz	loc_67CFBDA8
cmp	eax, 5
jz	short loc_67CFBCA8
cmp	eax, 6
jz	loc_67CFBE08
dec	eax
jz	loc_67CFBE9A
			
mov	ebx, [ebx+18h]
test	ebx, ebx
jz	short loc_67CFBC90
nop
mov	edx, ebx
mov	eax, esi
call	sub_67CFBC08
mov	ebx, [ebx+14h]
test	ebx, ebx
jnz	short loc_67CFBC80
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFBEBB
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [ebx+8]
test	eax, eax
jz	loc_67CFBEA7
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], eax
call	g_filename_to_utf8_utf8
mov	edi, eax
mov	[esp+5Ch+var_54], offset aPath 
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aValue_0 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	[esp+5Ch+var_5C], edi
call	g_free
jmp	loc_67CFBC78
align 4
mov	[esp+5Ch+var_54], offset aInt_1	
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+8]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aD_1 
mov	[esp+5Ch+var_58], 15h
lea	edi, [esp+5Ch+var_35]
mov	[esp+5Ch+var_5C], edi
call	g_snprintf
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aValue_0 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
jmp	loc_67CFBC78
mov	[esp+5Ch+var_54], offset aString_1 
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	eax, [ebx+8]
test	eax, eax
jz	loc_67CFBEB1
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aValue_0 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
jmp	loc_67CFBC78
mov	[esp+5Ch+var_54], offset aStringlist 
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	edi, [ebx+8]
test	edi, edi
jnz	short loc_67CFBDEB
jmp	loc_67CFBC78
			
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aValue_0 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	edi, [edi+4]
test	edi, edi
jz	loc_67CFBC78
mov	[esp+5Ch+var_58], offset aItem 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_new_child
mov	edx, [edi]
test	edx, edx
jnz	short loc_67CFBDCC
mov	edx, offset byte_67D3DB40
jmp	short loc_67CFBDCC
mov	[esp+5Ch+var_54], offset aPathlist 
mov	[esp+5Ch+var_58], offset aType_2 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_set_attrib
mov	edi, [ebx+8]
test	edi, edi
jnz	short loc_67CFBE8D
jmp	loc_67CFBC78
			
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], eax
call	g_filename_to_utf8_utf8
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aItem 
mov	[esp+5Ch+var_5C], esi
call	xmlnode_new_child
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aValue_0 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	edi, [edi+4]
test	edi, edi
jz	loc_67CFBC78
mov	eax, [edi]
test	eax, eax
jnz	short loc_67CFBE2C
mov	eax, offset byte_67D3DB40
jmp	short loc_67CFBE2C
mov	[esp+5Ch+var_54], offset aBool_1 
jmp	loc_67CFBD20
mov	eax, offset byte_67D3DB40
jmp	loc_67CFBCB3
mov	eax, offset byte_67D3DB40
jmp	loc_67CFBD8F
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CFBF0C
mov	esi, edx
mov	eax, [edi+0Ch]
mov	ecx, eax
test	eax, eax
jz	short loc_67CFBEF2
xchg	ax, ax
mov	ebx, [ecx]
cmp	[ebx+0Ch], esi
jz	short loc_67CFBF20
mov	ecx, [ecx+4]
test	ecx, ecx
jnz	short loc_67CFBEE4
mov	ebx, [edi+18h]
test	ebx, ebx
jz	short loc_67CFBF0C
lea	esi, [esi+0]
mov	edx, esi
mov	eax, ebx
call	sub_67CFBEC0
mov	ebx, [ebx+14h]
test	ebx, ebx
jnz	short loc_67CFBEFC
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFBF3E
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	[edi+0Ch], eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [edi+0Ch]
mov	ecx, eax
jmp	short loc_67CFBEEE
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67CFBFD4
mov	esi, edx
mov	edx, [edi+0Ch]
test	edx, edx
jz	short loc_67CFBF7E
mov	ebx, [edx]
mov	ecx, edx
cmp	[ebx+8], esi
jnz	short loc_67CFBF77
jmp	short loc_67CFBFB4
align 10h
mov	ebx, [ecx]
cmp	[ebx+8], esi
jz	short loc_67CFBFB4
mov	ecx, [ecx+4]
test	ecx, ecx
jnz	short loc_67CFBF70
mov	ebx, [edi+18h]
test	ebx, ebx
jnz	short loc_67CFBF8F
jmp	short loc_67CFBFD4
align 4
mov	ebx, [ebx+14h]
test	ebx, ebx
jz	short loc_67CFBFD4
mov	edx, esi
mov	eax, ebx
call	sub_67CFBF44
test	eax, eax
jz	short loc_67CFBF88
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFBFD8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], edx
call	g_slist_delete_link
mov	[edi+0Ch], eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, 1
jmp	short loc_67CFBFA1
align 4
			
xor	eax, eax
jmp	short loc_67CFBFA1
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72250
test	eax, eax
jz	loc_67CFC0A4
mov	[esp+2Ch+var_2C], offset aPref 
call	xmlnode_new
mov	esi, eax
mov	[esp+2Ch+var_24], offset a1 
mov	[esp+2Ch+var_28], offset aVersion_2 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_24], offset asc_67D3DBC8 
mov	[esp+2Ch+var_28], offset aName_4 
mov	[esp+2Ch+var_2C], esi
call	xmlnode_set_attrib
mov	ebx, ds:dword_67D72274
test	ebx, ebx
jz	short loc_67CFC058
lea	esi, [esi+0]
mov	edx, ebx
mov	eax, esi
call	sub_67CFBC08
mov	ebx, [ebx+14h]
test	ebx, ebx
jnz	short loc_67CFC048
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	xmlnode_to_formatted_str
mov	ebx, eax
mov	[esp+2Ch+var_24], 0FFFFFFFFh 
mov	[esp+2Ch+var_28], eax 
mov	[esp+2Ch+var_2C], offset aPrefs_xml 
call	purple_util_write_data_to_file
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	[esp+2Ch+var_2C], esi
call	xmlnode_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC0BA
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_28], offset aAttemptedToS_2 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFC092
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67CFBFE0
mov	ds:dword_67D72280, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFC0EF
add	esp, 1Ch
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	ecx, ds:dword_67D72250
test	ecx, ecx
jnz	short loc_67CFC124
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC169
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aSChangedSchedu 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_misc
mov	edx, ds:dword_67D72280
test	edx, edx
jnz	short loc_67CFC111
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67CFC0C0
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D72280, eax
jmp	short loc_67CFC111
call	__stack_chk_fail
align 10h
			
sub	esp, 2Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFC188
cmp	byte ptr [eax],	2Fh
jz	short loc_67CFC1B8
mov	[esp+2Ch+var_24], offset aNameNullName_0 
mov	[esp+2Ch+var_28], offset aFind_pref 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFC1DF
add	esp, 2Ch
retn
align 4
cmp	byte ptr [eax+1], 0
jz	short loc_67CFC1D8
mov	edx, ds:dword_67D72258
test	edx, edx
jz	short loc_67CFC1A4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	g_hash_table_lookup
jmp	short loc_67CFC1A6
align 4
mov	eax, offset dword_67D7225C
jmp	short loc_67CFC1A6
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Str], edx
call	g_strdup
mov	ebx, eax
mov	[esp+4Ch+var_48], 2Fh 
mov	[esp+4Ch+Str], eax 
call	strrchr
test	eax, eax
jz	loc_67CFC35C
mov	byte ptr [eax],	0
cmp	byte ptr [ebx],	0
jz	loc_67CFC32C
			
mov	[esp+4Ch+var_48], offset asc_67D3DBC8 
mov	[esp+4Ch+Str], ebx
call	purple_strequal
test	eax, eax
jz	loc_67CFC30C
mov	[esp+4Ch+Str], ebx
call	g_free
mov	edi, offset dword_67D7225C
mov	[esp+4Ch+var_48], 2Fh 
mov	[esp+4Ch+Str], esi 
call	strrchr
test	eax, eax
jz	loc_67CFC348
inc	eax
mov	[esp+4Ch+Str], eax
call	g_strdup
mov	ebx, eax
mov	ebp, [edi+18h]
test	ebp, ebp
jnz	short loc_67CFC283
jmp	short loc_67CFC2BC
align 4
mov	ebp, [ebp+14h]
test	ebp, ebp
jz	short loc_67CFC2BC
mov	[esp+4Ch+var_48], ebx
mov	eax, [ebp+4]
mov	[esp+4Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFC27C
mov	[esp+4Ch+Str], ebx
call	g_free
xor	ebp, ebp
			
mov	eax, ebp
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFC377
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+4Ch+Str], 1Ch
call	g_malloc0
mov	ebp, eax
mov	eax, [esp+4Ch+var_30]
mov	[ebp+0], eax
mov	[ebp+4], ebx
mov	[ebp+10h], edi
mov	eax, [edi+18h]
test	eax, eax
jnz	short loc_67CFC2E2
jmp	short loc_67CFC357
mov	eax, edx
mov	edx, [eax+14h]
test	edx, edx
jnz	short loc_67CFC2E0
mov	[eax+14h], ebp
mov	[esp+4Ch+Str], esi
call	g_strdup
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], eax
mov	eax, ds:dword_67D72258
mov	[esp+4Ch+Str], eax
call	g_hash_table_insert
jmp	short loc_67CFC2A0
align 4
mov	eax, ebx
call	sub_67CFC170
mov	edi, eax
mov	[esp+4Ch+Str], ebx
call	g_free
test	edi, edi
jnz	loc_67CFC24F
xor	ebp, ebp
jmp	loc_67CFC2A0
mov	[esp+4Ch+Str], ebx
call	g_free
mov	[esp+4Ch+Str], offset asc_67D3DBC8 
call	g_strdup
mov	ebx, eax
jmp	loc_67CFC22A
align 4
mov	[esp+4Ch+Str], esi
call	g_strdup
mov	ebx, eax
jmp	loc_67CFC272
mov	[edi+18h], ebp
jmp	short loc_67CFC2EC
mov	[esp+4Ch+Str], ebx
call	g_free
mov	[esp+4Ch+Str], offset a_ 
call	g_strdup
mov	ebx, eax
jmp	loc_67CFC22A
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CFC422
cmp	ebx, offset dword_67D7225C
jz	short loc_67CFC414
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_string_new
mov	ebx, [ebx+10h]
test	ebx, ebx
jnz	short loc_67CFC3DA
jmp	short loc_67CFC3E1
align 4
mov	[esp+2Ch+var_28], 2Fh
mov	[esp+2Ch+var_2C], eax
call	g_string_prepend_c
mov	edx, [ebx+4]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_string_prepend
mov	ebx, [ebx+10h]
test	ebx, ebx
jz	short loc_67CFC3E1
mov	edx, [ebx+4]
test	edx, edx
jnz	short loc_67CFC3B4
			
mov	[esp+2Ch+var_28], 2Fh
mov	[esp+2Ch+var_2C], eax
call	g_string_prepend_c
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_string_free
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFC426
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], offset asc_67D3DBC8 
call	g_strdup
jmp	short loc_67CFC401
xor	eax, eax
jmp	short loc_67CFC401
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jnz	short loc_67CFC44D
jmp	loc_67CFC506
align 4
call	sub_67CFC42C
mov	eax, [esi+18h]
test	eax, eax
jnz	short loc_67CFC448
cmp	esi, offset dword_67D7225C
jz	loc_67CFC506
mov	eax, [esi+10h]
mov	edx, [eax+18h]
cmp	edx, esi
jz	loc_67CFC574
test	edx, edx
jz	short loc_67CFC493
mov	eax, [edx+14h]
cmp	eax, esi
jnz	short loc_67CFC482
jmp	loc_67CFC57F
align 10h
mov	eax, edx
test	eax, eax
jz	short loc_67CFC493
mov	edx, [eax+14h]
cmp	edx, esi
jnz	short loc_67CFC480
mov	edx, [esi+14h]
mov	[eax+14h], edx
			
mov	eax, esi
call	sub_67CFC37C
mov	ebx, eax
mov	ecx, ds:dword_67D72250
test	ecx, ecx
jnz	loc_67CFC52C
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72258
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	[esp+2Ch+var_2C], ebx
call	g_free
cmp	dword ptr [esi], 6 
ja	short loc_67CFC4EC 
mov	eax, [esi]
jmp	ds:off_67D3DC28[eax*4] 
align 4
mov	eax, [ebx+4]
mov	[esi+0Ch], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_slist_free_1
			
mov	ebx, [esi+0Ch]	
test	ebx, ebx
jnz	short loc_67CFC4D4
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC586
add	esp, 24h
pop	ebx
pop	esi
retn
			
mov	eax, [esi+8]	
mov	[esp+2Ch+var_2C], eax
call	g_free
			
mov	dword ptr [esi+8], 0 
jmp	short loc_67CFC4EC 
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aRemovingPrefS	
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_info
jmp	loc_67CFC4AA
			
mov	[esp+2Ch+var_24], 0 
mov	[esp+2Ch+var_28], offset g_free
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
jmp	loc_67CFC4EC	
mov	edx, [esi+14h]
mov	[eax+18h], edx
jmp	loc_67CFC493
mov	eax, edx
jmp	loc_67CFC48D
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, ds:dword_67D72254
test	edx, edx
jz	short loc_67CFC5BD
mov	[esp+2Ch+var_28], offset aPref 
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CFC5D0
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC5F7
add	esp, 2Ch
retn
align 10h
mov	eax, ds:dword_67D72254
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D72254
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_list_delete_link
mov	ds:dword_67D72254, eax
jmp	short loc_67CFC5BD
call	__stack_chk_fail
public purple_prefs_load
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_user_dir
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aPrefs_xml 
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	esi, eax
mov	[esp+4Ch+var_2C], 0
mov	[esp+4Ch+var_24], 0
test	eax, eax
jz	loc_67CFC86B
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aReadingS 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_info
lea	ebp, [esp+4Ch+var_24]
mov	[esp+4Ch+var_40], ebp
lea	edi, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], edi
lea	edx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
call	g_file_get_contents_utf8
test	eax, eax
jnz	loc_67CFC735
mov	[esp+4Ch+var_4C], 23h
call	wpurple_get_special_folder
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_error_free
mov	[esp+4Ch+var_24], 0
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	loc_67CFC87C
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset aPrefs_xml 
mov	[esp+4Ch+var_48], offset aPurple_1 
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	[esp+4Ch+var_34], eax
mov	ebx, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aReadingS 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_info
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
lea	edx, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], edx
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_file_get_contents_utf8
test	eax, eax
jz	loc_67CFC834
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], offset off_67D303FC
call	g_markup_parse_context_new
mov	esi, eax
mov	[esp+4Ch+var_40], 0
mov	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	g_markup_parse_context_parse
test	eax, eax
jz	loc_67CFC808
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	g_markup_parse_context_end_parse
mov	[esp+4Ch+var_44], ebx
test	eax, eax
jz	short loc_67CFC7F4
mov	[esp+4Ch+var_48], offset aFinishedReadin 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_info
mov	[esp+4Ch+var_4C], esi
call	g_markup_parse_context_free
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	ds:dword_67D72250, 1
mov	eax, 1
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFC886
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], offset aErrorParsing_0 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_error
mov	[esp+4Ch+var_4C], esi
call	g_markup_parse_context_free
mov	eax, [esp+4Ch+var_2C]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	ds:dword_67D72250, 1
xor	eax, eax
jmp	short loc_67CFC7DA
align 4
mov	eax, [esp+4Ch+var_24]
mov	eax, [eax+8]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aErrorReadingPr 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_error
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_4C], eax
call	g_error_free
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	ds:dword_67D72250, 1
xor	eax, eax
jmp	loc_67CFC7DA
mov	eax, offset byte_67D3DB40
jmp	loc_67CFC6C3
call	__stack_chk_fail
align 4
public purple_prefs_add_none
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC8B4
xor	eax, eax
add	esp, 1Ch
jmp	sub_67CFC1E4
call	__stack_chk_fail
align 4
public purple_prefs_add_bool
			
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_0]
mov	al, 1
call	sub_67CFC1E4
test	eax, eax
jz	short loc_67CFC8E1
mov	[eax+8], ebx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC8F2
add	esp, 18h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_prefs_add_int
			
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_0]
mov	al, 2
call	sub_67CFC1E4
test	eax, eax
jz	short loc_67CFC91D
mov	[eax+8], ebx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC92E
add	esp, 18h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_prefs_add_string
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFC96C
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	g_utf8_validate
test	eax, eax
jz	short loc_67CFC99C
mov	edx, esi
mov	eax, 3
call	sub_67CFC1E4
mov	esi, eax
test	eax, eax
jz	short loc_67CFC989
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esi+8], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFC9B6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aPurple_prefs_a 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFC989
call	__stack_chk_fail
align 4
public purple_prefs_add_string_list
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, edi
mov	al, 4
call	sub_67CFC1E4
mov	esi, eax
test	eax, eax
jnz	short loc_67CFCA07
jmp	short loc_67CFCA4C
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esi+8], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CFCA4C
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67CFCA48
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ecx
call	g_utf8_validate
test	eax, eax
jnz	short loc_67CFC9E8
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_0 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFCA04
align 4
xor	eax, eax
jmp	short loc_67CFC9EA
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCA5F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public purple_prefs_add_path
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+2Ch+arg_0]
mov	al, 5
call	sub_67CFC1E4
mov	ebx, eax
test	eax, eax
jz	short loc_67CFCA94
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCAA6
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_prefs_add_path_list
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+2Ch+arg_0]
mov	al, 6
call	sub_67CFC1E4
mov	esi, eax
test	eax, eax
jnz	short loc_67CFCAF3
jmp	short loc_67CFCAF7
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esi+8], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFCAD4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCB09
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_prefs_remove
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFCB40
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCB50
add	esp, 1Ch
jmp	sub_67CFC42C
align 10h
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCB50
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_prefs_destroy
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset asc_67D3DBC8 
call	purple_prefs_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCB82
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_prefs_trigger_callback
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFCBC0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCBE9
mov	edx, eax
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_67CFBBA0
align 10h
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_t 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCBE9
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
public purple_prefs_set_generic
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFCC30
mov	[eax+8], esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCC5A
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CFBBA0
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_s 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCC5A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public purple_prefs_set_bool
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFCCD8
cmp	dword ptr [eax], 1
jnz	short loc_67CFCCAC
cmp	[eax+8], esi
jz	short loc_67CFCCC4
mov	[eax+8], esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCCF6
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CFBBA0
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_1 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCCF6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCCF6
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_prefs_add_bool
			
call	__stack_chk_fail
align 4
public purple_prefs_set_int
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFCD74
cmp	dword ptr [eax], 2
jnz	short loc_67CFCD48
cmp	[eax+8], esi
jz	short loc_67CFCD60
mov	[eax+8], esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCD92
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67CFBBA0
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_2 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFCD92
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCD92
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_prefs_add_int
			
call	__stack_chk_fail
align 4
public purple_prefs_set_string
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, edi
call	sub_67CFC170
mov	ebx, eax
test	esi, esi
jz	short loc_67CFCDDE
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], esi
call	g_utf8_validate
test	eax, eax
jz	loc_67CFCE6C
test	ebx, ebx
jz	loc_67CFCE8C
mov	eax, [ebx]
cmp	eax, 3
jz	short loc_67CFCDF2
cmp	eax, 5
jnz	short loc_67CFCE1C
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFCE38
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFCEAB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_3 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFCE05
align 4
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCEAB
mov	edx, ebx
mov	eax, edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_67CFBBA0
align 4
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_4 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	loc_67CFCE05
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFCEAB
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_prefs_add_string
			
call	__stack_chk_fail
public purple_prefs_set_string_list
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, edi
call	sub_67CFC170
mov	esi, eax
test	eax, eax
jz	loc_67CFCFE0
cmp	dword ptr [eax], 4
jz	short loc_67CFCF10
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_5 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD003
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	dword ptr [esi+8], 0
test	ebx, ebx
jnz	short loc_67CFCF6B
jmp	loc_67CFCFFF
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[esi+8], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67CFCFAC
			
mov	edx, [ebx]
test	edx, edx
jz	short loc_67CFCFD8
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], edx
call	g_utf8_validate
test	eax, eax
jnz	short loc_67CFCF48
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_6 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFCF6B
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_reverse
mov	[esi+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD003
mov	edx, esi
mov	eax, edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_67CFBBA0
align 4
xor	eax, eax
jmp	loc_67CFCF4A
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD003
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_prefs_add_string_list
xor	eax, eax
jmp	short loc_67CFCFAF
			
call	__stack_chk_fail
public purple_prefs_set_path
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, esi
call	sub_67CFC170
mov	ebx, eax
test	eax, eax
jz	short loc_67CFD0A4
cmp	dword ptr [eax], 5
jz	short loc_67CFD060
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aPurple_prefs_7 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD0C3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_28], edi
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CFD04B
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[ebx+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD0C3
mov	edx, ebx
mov	eax, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_67CFBBA0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD0C3
mov	[esp+2Ch+arg_4], edi
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_prefs_add_path
			
call	__stack_chk_fail
public purple_prefs_set_path_list
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, edi
call	sub_67CFC170
mov	esi, eax
test	eax, eax
jz	loc_67CFD1A8
cmp	dword ptr [eax], 6
jz	short loc_67CFD128
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aPurple_prefs_8 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD1CB
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	eax, [eax+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	dword ptr [esi+8], 0
test	ebx, ebx
jz	short loc_67CFD1C7
lea	esi, [esi+0]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_prepend
mov	[esi+8], eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFD15C
mov	[esp+2Ch+var_2C], eax
call	g_list_reverse
mov	[esi+8], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD1CB
mov	edx, esi
mov	eax, edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	loc_67CFBBA0
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD1CB
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_prefs_add_path_list
xor	eax, eax
jmp	short loc_67CFD17F
			
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+var_30]
mov	ebp, [eax+18h]
test	ebp, ebp
jz	short loc_67CFD234
nop
mov	esi, [ebp+14h]
mov	ebx, [edi+18h]
test	ebx, ebx
jnz	short loc_67CFD20F
jmp	loc_67CFD298
align 4
mov	ebx, [ebx+14h]
test	ebx, ebx
jz	loc_67CFD298
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebp+4]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFD204
mov	edx, ebx
mov	eax, ebp
call	sub_67CFD1D0
mov	ebp, esi
test	esi, esi
jnz	short loc_67CFD1F4
mov	eax, [esp+4Ch+var_30]
call	sub_67CFC37C
mov	esi, eax
mov	eax, edi
call	sub_67CFC37C
mov	ebx, eax
mov	edx, [edi]
mov	eax, [esp+4Ch+var_30]
cmp	[eax], edx
jz	short loc_67CFD2C6
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aUnableToRename 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_error
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	[esp+4Ch+var_4C], ebx
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD39F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, ebp
call	sub_67CFC37C
mov	ebx, eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aUnableToFindRe 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_error
mov	[esp+4Ch+var_4C], ebx
call	g_free
jmp	loc_67CFD22E
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aRenamingSToS 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_info
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [esp+4Ch+var_30]
cmp	dword ptr [eax], 6 
ja	short loc_67CFD30F 
mov	eax, [eax]
jmp	ds:off_67D3DFB8[eax*4] 
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_path_list
			
mov	[esp+4Ch+var_4C], ebx 
call	g_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFD39F
mov	eax, [esp+4Ch+var_30]
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67CFC42C
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_path
jmp	short loc_67CFD30F 
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_string_list
jmp	short loc_67CFD30F 
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_string
jmp	short loc_67CFD30F 
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_int
jmp	short loc_67CFD30F 
			
mov	edx, [esp+4Ch+var_30] 
mov	eax, [edx+8]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_prefs_set_bool
jmp	loc_67CFD30F	
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], edx
mov	ebp, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_68], offset aPref 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], edx
call	purple_strequal
test	eax, eax
jz	loc_67CFD54C
mov	edx, [esp+6Ch+var_40]
mov	eax, [edx]
test	eax, eax
jz	loc_67CFD56A
mov	ebx, [esp+6Ch+var_40]
add	ebx, 4
mov	edi, [esp+6Ch+var_40]
xor	esi, esi
mov	[esp+6Ch+var_30], 0
mov	[esp+6Ch+var_3C], 0
mov	[esp+6Ch+var_38], 0
jmp	short loc_67CFD436
align 4
mov	esi, [ebp+esi+0]
mov	[esp+6Ch+var_3C], esi
			
mov	esi, ebx
sub	esi, [esp+6Ch+var_40]
mov	edi, ebx
add	ebx, 4
mov	eax, [ebx-4]
test	eax, eax
jz	short loc_67CFD4AC
mov	[esp+6Ch+var_68], offset aName_4 
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67CFD41C
mov	[esp+6Ch+var_68], offset aType_2 
mov	eax, [edi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFD488
add	esi, ebp
mov	[esp+6Ch+var_68], offset aBool_1 
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFD514
mov	[esp+6Ch+var_38], 1
jmp	short loc_67CFD424
align 4
mov	[esp+6Ch+var_68], offset aValue_0 
mov	eax, [edi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFD424
mov	esi, [ebp+esi+0]
mov	[esp+6Ch+var_30], esi
jmp	loc_67CFD424
align 4
mov	eax, [esp+6Ch+var_38]
dec	eax
cmp	eax, 1
jbe	loc_67CFD53C
mov	[esp+6Ch+var_68], offset aItem 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], edx
call	purple_strequal
test	eax, eax
jnz	loc_67CFD590
mov	edi, [esp+6Ch+var_3C]
test	edi, edi
jz	short loc_67CFD4FA
mov	[esp+6Ch+var_68], offset asc_67D3DBC8 
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+Str], edx
call	purple_strequal
test	eax, eax
jz	loc_67CFD63F
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD8A6
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_68], offset aInt_1	
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFD618
mov	[esp+6Ch+var_38], 2
jmp	loc_67CFD424
align 4
mov	ebp, [esp+6Ch+var_30]
test	ebp, ebp
jnz	loc_67CFD4BA
jmp	short loc_67CFD4FA
align 4
mov	[esp+6Ch+var_68], offset aItem 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], edx
call	purple_strequal
test	eax, eax
jnz	loc_67CFD3E6
jmp	short loc_67CFD4FA
mov	[esp+6Ch+var_68], offset aItem 
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], edx
call	purple_strequal
test	eax, eax
jz	loc_67CFD4FA
mov	[esp+6Ch+var_30], 0
xchg	ax, ax
mov	[esp+6Ch+Str], offset byte_67D3DB40
call	g_string_new
mov	esi, eax
mov	ebx, ds:dword_67D72254
test	ebx, ebx
jz	short loc_67CFD5CF
mov	edx, [ebx]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Str], eax
call	g_string_prepend
mov	[esp+6Ch+var_68], 2Fh
mov	[esp+6Ch+Str], eax
call	g_string_prepend_c
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFD5A8
mov	esi, eax
mov	eax, [esi]
call	sub_67CFC170
mov	ebx, eax
test	eax, eax
jz	short loc_67CFD5F0
mov	eax, [eax]
cmp	eax, 4
jz	loc_67CFD75B
cmp	eax, 6
jz	loc_67CFD718
			
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD8A6
mov	[esp+6Ch+arg_4], 1
mov	[esp+6Ch+arg_0], esi
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
mov	[esp+6Ch+var_68], offset aString_1 
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFD6EA
mov	[esp+6Ch+var_38], 3
jmp	loc_67CFD424
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+Str], edx
call	g_string_new
mov	ebx, ds:dword_67D72254
test	ebx, ebx
jz	short loc_67CFD67D
lea	esi, [esi+0]
mov	[esp+6Ch+var_68], 2Fh
mov	[esp+6Ch+Str], eax
call	g_string_prepend_c
mov	edx, [ebx]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Str], eax
call	g_string_prepend
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFD658
mov	[esp+6Ch+var_68], 2Fh
mov	[esp+6Ch+Str], eax
call	g_string_prepend_c
mov	ebx, eax
cmp	[esp+6Ch+var_38], 6 
jbe	short loc_67CFD70D
			
mov	eax, [ebx]	
mov	[esp+6Ch+Str], eax
call	purple_prefs_add_none
			
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+Str], edx
call	g_strdup
mov	[esp+6Ch+var_68], eax
mov	eax, ds:dword_67D72254
mov	[esp+6Ch+Str], eax
call	g_list_prepend
mov	ds:dword_67D72254, eax
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFD8A6
mov	[esp+6Ch+arg_4], 1
mov	[esp+6Ch+arg_0], ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
mov	[esp+6Ch+var_68], offset aStringlist 
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67CFD769
mov	[esp+6Ch+var_38], 4
jmp	loc_67CFD424
mov	edx, [esp+6Ch+var_38]
jmp	ds:off_67D3DFD4[edx*4] 
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], edx
call	g_filename_from_utf8_utf8
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx+8]
mov	[esp+6Ch+Str], eax
call	g_list_append
mov	[ebx+8], eax
jmp	loc_67CFD5F0
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], edx
call	g_strdup
jmp	short loc_67CFD744
mov	[esp+6Ch+var_68], offset aPath 
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFD868
mov	[esp+6Ch+var_38], 5
jmp	loc_67CFD424
			
mov	edx, [esp+6Ch+var_30] 
mov	[esp+6Ch+Str], edx 
call	atoi
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_bool
jmp	loc_67CFD6A0
			
mov	esi, [esp+6Ch+var_30] 
test	esi, esi
jz	loc_67CFD88F
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], edx
call	g_filename_from_utf8_utf8
mov	esi, eax
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_path
mov	[esp+6Ch+Str], esi
call	g_free
jmp	loc_67CFD6A0
			
mov	[esp+6Ch+var_68], 0 
mov	eax, [eax]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_string_list
jmp	loc_67CFD6A0
			
mov	edx, [esp+6Ch+var_30] 
mov	[esp+6Ch+var_68], edx
mov	eax, [eax]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_string
jmp	loc_67CFD6A0
			
mov	edx, [esp+6Ch+var_30] 
mov	[esp+6Ch+Str], edx 
call	atoi
mov	[esp+6Ch+var_68], eax
mov	eax, [ebx]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_int
jmp	loc_67CFD6A0
			
mov	[esp+6Ch+var_68], 0 
mov	eax, [eax]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_path_list
jmp	loc_67CFD6A0
mov	[esp+6Ch+var_68], offset aPathlist 
mov	eax, [esi]
mov	[esp+6Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFD4FA
mov	[esp+6Ch+var_38], 6
jmp	loc_67CFD424
mov	[esp+6Ch+var_68], 0
mov	eax, [eax]
mov	[esp+6Ch+Str], eax
call	purple_prefs_set_path
jmp	loc_67CFD6A0
			
call	__stack_chk_fail
align 4
public purple_prefs_exists
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CFC170
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFD8DB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_prefs_get_type
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFD910
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFD914
add	esp, 1Ch
retn
align 10h
xor	eax, eax
jmp	short loc_67CFD8FD
call	__stack_chk_fail
align 4
public purple_prefs_get_bool
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFD970
cmp	dword ptr [eax], 1
jnz	short loc_67CFD954
mov	eax, [eax+8]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFD98C
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_g 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFD942
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_prefs_9 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFD942
call	__stack_chk_fail
align 4
public purple_prefs_get_int
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFD9E8
cmp	dword ptr [eax], 2
jnz	short loc_67CFD9CC
mov	eax, [eax+8]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDA04
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_10 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFD9BA
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_11 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFD9BA
call	__stack_chk_fail
align 4
public purple_prefs_get_string
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDA60
cmp	dword ptr [eax], 3
jnz	short loc_67CFDA44
mov	eax, [eax+8]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDA7C
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_12 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFDA32
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_13 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFDA32
call	__stack_chk_fail
align 4
public purple_prefs_get_string_list
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDB1C
cmp	dword ptr [eax], 4
jnz	short loc_67CFDAF0
mov	ebx, [eax+8]
xor	esi, esi
test	ebx, ebx
jz	short loc_67CFDAD3
lea	esi, [esi+0]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFDAB4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDB36
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_reverse
align 10h
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_14 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDB36
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_15 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFDB08
			
call	__stack_chk_fail
align 4
public purple_prefs_get_path
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDB90
cmp	dword ptr [eax], 5
jnz	short loc_67CFDB74
mov	eax, [eax+8]
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDBAC
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_16 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFDB62
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_17 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFDB62
call	__stack_chk_fail
align 4
public purple_prefs_get_path_list
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDC4C
cmp	dword ptr [eax], 6
jnz	short loc_67CFDC20
mov	ebx, [eax+8]
xor	esi, esi
test	ebx, ebx
jz	short loc_67CFDC03
lea	esi, [esi+0]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFDBE4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDC66
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_reverse
align 10h
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_18 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDC66
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aPurple_pref_19 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFDC38
			
call	__stack_chk_fail
align 4
public purple_prefs_rename
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, esi
call	sub_67CFC170
mov	ebx, eax
test	eax, eax
jz	short loc_67CFDCD4
mov	eax, edi
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDCB8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDCE7
mov	edx, eax
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CFD1D0
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aUnableToRena_0 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFDCE7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
public purple_prefs_rename_boolean_toggle
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, esi
call	sub_67CFC170
mov	ebx, eax
test	eax, eax
jz	short loc_67CFDD3A
cmp	dword ptr [eax], 1
jnz	short loc_67CFDD54
mov	ecx, [eax+18h]
test	ecx, ecx
jz	short loc_67CFDD74
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aUnableToRena_1 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFDE08
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aUnableToRena_2 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFDD3A
align 4
mov	eax, edi
call	sub_67CFC170
test	eax, eax
jz	short loc_67CFDDE7
mov	edx, [eax]
cmp	[ebx], edx
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
jz	short loc_67CFDDA4
mov	[esp+2Ch+var_28], offset aUnableToRename 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	short loc_67CFDD3A
align 4
mov	[esp+2Ch+var_28], offset aRenamingAndTog 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_info
xor	eax, eax
mov	edx, [ebx+8]
test	edx, edx
setz	al
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_prefs_set_bool
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFDE08
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67CFC42C
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aUnableToRena_0 
mov	[esp+2Ch+var_2C], offset aPrefs	
call	purple_debug_error
jmp	loc_67CFDD3A
			
call	__stack_chk_fail
align 10h
public purple_prefs_connect_callback
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], edx
mov	ebx, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFDEA4
test	esi, esi
jz	loc_67CFDEC4
mov	eax, ebx
call	sub_67CFC170
mov	edi, eax
test	eax, eax
jz	loc_67CFDEE4
mov	[esp+4Ch+var_4C], 10h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[eax+4], ebp
mov	eax, ds:dword_67D72278
inc	eax
mov	ds:dword_67D72278, eax
mov	[ebx+8], eax
mov	edx, [esp+4Ch+var_30]
mov	[ebx+0Ch], edx
mov	[esp+4Ch+var_48], ebx
mov	eax, [edi+0Ch]
mov	[esp+4Ch+var_4C], eax
call	g_slist_append
mov	[edi+0Ch], eax
mov	eax, [ebx+8]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFDF00
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aNameNull_5 
mov	[esp+4Ch+var_48], offset aPurple_prefs_c 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFDE90
mov	[esp+4Ch+var_44], offset aFuncNull_2 
mov	[esp+4Ch+var_48], offset aPurple_prefs_c 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFDE90
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aPurple_pref_20 
mov	[esp+4Ch+var_4C], offset aPrefs	
call	purple_debug_error
xor	eax, eax
jmp	short loc_67CFDE90
call	__stack_chk_fail
align 4
public purple_prefs_disconnect_callback
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFDF33
mov	eax, offset dword_67D7225C
add	esp, 1Ch
jmp	sub_67CFBF44
call	__stack_chk_fail
public purple_prefs_disconnect_by_handle
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67CFDF68
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFDF94
mov	eax, offset dword_67D7225C
add	esp, 2Ch
jmp	sub_67CFBEC0
align 4
mov	[esp+2Ch+var_24], offset aHandleNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prefs_d 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFDF94
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_prefs_get_children_names
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, ebp
call	sub_67CFC170
mov	edx, eax
mov	ax, ds:word_67D3E340
mov	[esp+3Ch+var_22], ax
test	edx, edx
jz	short loc_67CFE038
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
cmp	byte ptr [ebp+ecx-2], 2Fh
jz	short loc_67CFDFE3
mov	byte ptr [esp+3Ch+var_22], 2Fh
mov	ebx, [edx+18h]
test	ebx, ebx
jz	short loc_67CFE038
xor	esi, esi
lea	edi, [esp+3Ch+var_22]
mov	eax, [ebx+4]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], offset aSSS_4	
call	g_strdup_printf
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_list_append
mov	esi, eax
mov	ebx, [ebx+14h]
test	ebx, ebx
jnz	short loc_67CFDFF0
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFE03C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	esi, esi
jmp	short loc_67CFE020
call	__stack_chk_fail
align 4
public purple_prefs_update_old
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aPurple_2 
mov	[esp+2Ch+var_2C], offset aCore_0 
call	purple_prefs_rename
mov	[esp+2Ch+var_2C], offset aPurpleAwayAuto 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_0 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_1 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_2 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_3 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleAwayDefa 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleBuddiesU 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_4 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_5 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_6 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_7 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_8 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConver_9 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleConve_10 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleLoggin_5 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleLoggin_6 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleLoggin_7 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleLoggin_8 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleStatusSc 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPluginsCoreAut 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPluginsCoreA_0 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPluginsCoreA_1 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPluginsCoreA_2 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPluginsCoreA_3 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleSoundWhi 
call	purple_prefs_exists
test	eax, eax
jnz	loc_67CFE1B8
			
mov	[esp+2Ch+var_2C], offset aPurpleSoundWhi 
call	purple_prefs_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFE1DE
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_2C], offset aPurpleSoundWhi 
call	purple_prefs_get_bool
test	eax, eax
jz	short loc_67CFE19A
mov	[esp+2Ch+var_28], 3
mov	[esp+2Ch+var_2C], offset aPurpleSoundW_0 
call	purple_prefs_set_int
jmp	short loc_67CFE19A
call	__stack_chk_fail
align 4
public purple_prefs_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D7227C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFE207
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_prefs_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72258, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset sub_67CFC0F4
mov	[esp+2Ch+var_28], offset asc_67D3DBC8 
mov	[esp+2Ch+var_2C], offset dword_67D7227C
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_2C], offset aPurple_2 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPlugins_1 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPluginsCore 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPluginsLopl 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPluginsPrpl 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPurpleAway 
call	purple_prefs_add_none
mov	[esp+2Ch+var_28], offset aSystem_0 
mov	[esp+2Ch+var_2C], offset aPurpleAwayId_0 
call	purple_prefs_add_string
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], offset aPurpleAwayAw_0 
call	purple_prefs_add_bool
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], offset aPurpleAwayMi_0 
call	purple_prefs_add_int
mov	[esp+2Ch+var_2C], offset aPurpleAwayAuto 
call	purple_prefs_exists
test	eax, eax
jz	short loc_67CFE30B
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_0 
call	purple_prefs_exists
test	eax, eax
jnz	short loc_67CFE388
			
mov	[esp+2Ch+var_28], offset aAwayidle 
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_4 
call	purple_prefs_add_string
			
mov	[esp+2Ch+var_2C], offset aPurpleBuddies	
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPurpleContact	
call	purple_prefs_add_none
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset aPurpleContac_0 
call	purple_prefs_add_bool
mov	[esp+2Ch+var_2C], offset aPurpleContactO 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleContactA 
call	purple_prefs_remove
mov	[esp+2Ch+var_2C], offset aPurpleContactI 
call	purple_prefs_remove
call	purple_prefs_load
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFE3E1
add	esp, 2Ch
jmp	purple_prefs_update_old
mov	[esp+2Ch+var_2C], offset aPurpleAwayAuto 
call	purple_prefs_get_bool
test	eax, eax
jz	short loc_67CFE3C8
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_0 
call	purple_prefs_get_bool
test	eax, eax
jnz	loc_67CFE30B
mov	[esp+2Ch+var_28], offset aAway_0 
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_4 
call	purple_prefs_add_string
jmp	loc_67CFE31F
align 4
mov	[esp+2Ch+var_28], offset aNever	
mov	[esp+2Ch+var_2C], offset aPurpleAwayAu_4 
call	purple_prefs_add_string
jmp	loc_67CFE31F
call	__stack_chk_fail
align 4
public purple_prefs_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72280
test	eax, eax
jz	short loc_67CFE416
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D72280, 0
call	sub_67CFBFE0
mov	[esp+2Ch+var_2C], offset dword_67D7227C
call	purple_prefs_disconnect_by_handle
mov	ds:dword_67D72250, 0
call	purple_prefs_destroy
mov	eax, ds:dword_67D72258
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_67D72258, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFE458
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_privacy_permit_add
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CFE598
test	edi, edi
jz	loc_67CFE5BC
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	ebx, eax
mov	ebp, [esi+30h]
xor	eax, eax
test	ebp, ebp
jnz	short loc_67CFE4BB
jmp	short loc_67CFE4F3
align 4
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_67CFE4F0
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_str_equal
test	eax, eax
jz	short loc_67CFE4B4
mov	[esp+4Ch+var_4C], ebx
call	g_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFE5E9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esi+30h]
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_slist_append
mov	[esi+30h], eax
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jz	short loc_67CFE570
			
mov	eax, ds:dword_67D72284
test	eax, eax
jz	short loc_67CFE522
mov	eax, [eax]
test	eax, eax
jz	short loc_67CFE522
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	eax
			
call	purple_blist_get_ui_ops
test	eax, eax
jz	short loc_67CFE537
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CFE537
mov	[esp+4Ch+var_4C], esi
call	eax
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	purple_find_buddy
mov	ebx, eax
test	eax, eax
jz	loc_67CFE5DF
call	purple_blist_get_handle
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyPrivacy_0 
mov	[esp+4Ch+var_4C], eax
call	purple_signal_emit
mov	eax, 1
jmp	loc_67CFE4D8
mov	[esp+4Ch+var_4C], esi
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CFE50A
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_connection
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	serv_add_permit
jmp	loc_67CFE50A
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_7	
mov	[esp+4Ch+var_48], offset aPurple_privacy 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CFE4D8
align 4
mov	[esp+4Ch+var_44], offset aWhoNull_2 
mov	[esp+4Ch+var_48], offset aPurple_privacy 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CFE4D8
mov	eax, 1
jmp	loc_67CFE4D8
call	__stack_chk_fail
align 10h
public purple_privacy_permit_remove
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CFE6EC
test	edi, edi
jz	loc_67CFE74C
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	purple_normalize
mov	ebx, eax
mov	ebp, [esi+30h]
test	ebp, ebp
jnz	short loc_67CFE647
jmp	loc_67CFE708
mov	ebp, [ebp+4]
test	ebp, ebp
jz	loc_67CFE708
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_str_equal
test	eax, eax
jz	short loc_67CFE63C
mov	edx, [ebp+0]
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_48], ebp
mov	eax, [esi+30h]
mov	[esp+4Ch+var_4C], eax
call	g_slist_delete_link
mov	[esi+30h], eax
mov	edx, [esp+4Ch+var_34]
test	edx, edx
jz	loc_67CFE720
			
mov	eax, ds:dword_67D72284
test	eax, eax
jz	short loc_67CFE698
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67CFE698
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	eax
			
call	purple_blist_get_ui_ops
test	eax, eax
jz	short loc_67CFE6AD
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CFE6AD
mov	[esp+4Ch+var_4C], esi
call	eax
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	purple_find_buddy
mov	ebx, eax
test	eax, eax
jz	short loc_67CFE6D8
call	purple_blist_get_handle
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyPrivacy_0 
mov	[esp+4Ch+var_4C], eax
call	purple_signal_emit
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_free
mov	eax, 1
jmp	short loc_67CFE70A
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_7	
mov	[esp+4Ch+var_48], offset aPurple_priva_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFE76C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_4C], esi
call	purple_account_is_connected
test	eax, eax
jz	loc_67CFE67F
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_connection
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	serv_rem_permit
jmp	loc_67CFE67F
align 4
mov	[esp+4Ch+var_44], offset aWhoNull_2 
mov	[esp+4Ch+var_48], offset aPurple_priva_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFE70A
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+30h]
jmp	short loc_67CFE7A5
align 10h
mov	ebp, [ebx]
mov	ebx, [ebx+4]
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], esi
call	purple_find_buddy
test	eax, eax
jz	short loc_67CFE810
			
test	ebx, ebx
jnz	short loc_67CFE790
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], esi
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_67CFE7F9
nop
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_get_name
mov	ebp, eax
mov	[esp+3Ch+var_34], offset g_utf8_collate
mov	[esp+3Ch+var_38], eax
mov	eax, [esi+30h]
mov	[esp+3Ch+var_3C], eax
call	g_slist_find_custom
test	eax, eax
jz	short loc_67CFE824
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67CFE7C0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFE836
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], esi
call	purple_privacy_permit_remove
jmp	short loc_67CFE7A5
align 4
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], esi
call	purple_privacy_permit_add
jmp	short loc_67CFE7E7
call	__stack_chk_fail
align 4
public purple_privacy_deny_add
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67CFE978
test	edi, edi
jz	loc_67CFE99C
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	purple_normalize
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	ebx, eax
mov	ebp, [esi+34h]
xor	eax, eax
test	ebp, ebp
jnz	short loc_67CFE897
jmp	short loc_67CFE8CF
align 10h
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_67CFE8CC
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_str_equal
test	eax, eax
jz	short loc_67CFE890
mov	[esp+4Ch+var_4C], ebx
call	g_free
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFE9C9
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esi+34h]
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	g_slist_append
mov	[esi+34h], eax
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
jz	short loc_67CFE950
			
mov	eax, ds:dword_67D72284
test	eax, eax
jz	short loc_67CFE8FF
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67CFE8FF
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], esi
call	eax
			
call	purple_blist_get_ui_ops
test	eax, eax
jz	short loc_67CFE914
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CFE914
mov	[esp+4Ch+var_4C], esi
call	eax
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	purple_find_buddy
mov	ebx, eax
test	eax, eax
jz	loc_67CFE9BF
call	purple_blist_get_handle
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aBuddyPrivacy_0 
mov	[esp+4Ch+var_4C], eax
call	purple_signal_emit
mov	eax, 1
jmp	loc_67CFE8B4
align 10h
mov	[esp+4Ch+var_4C], esi
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CFE8E6
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_connection
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	serv_add_deny
jmp	loc_67CFE8E6
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_7	
mov	[esp+4Ch+var_48], offset aPurple_priva_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CFE8B4
align 4
mov	[esp+4Ch+var_44], offset aWhoNull_2 
mov	[esp+4Ch+var_48], offset aPurple_priva_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67CFE8B4
mov	eax, 1
jmp	loc_67CFE8B4
call	__stack_chk_fail
align 10h
public purple_privacy_deny_remove
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67CFEB38
test	esi, esi
jz	loc_67CFEACC
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_normalize
mov	edi, eax
mov	ebp, [ebx+34h]
test	ebp, ebp
jnz	short loc_67CFEA27
jmp	loc_67CFEAE8
mov	ebp, [ebp+4]
test	ebp, ebp
jz	loc_67CFEAE8
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_str_equal
test	eax, eax
jz	short loc_67CFEA1C
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_find_buddy
mov	edi, eax
mov	edx, [ebp+0]
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_48], ebp
mov	eax, [ebx+34h]
mov	[esp+4Ch+var_4C], eax
call	g_slist_delete_link
mov	[ebx+34h], eax
mov	ebp, [esp+4Ch+var_34]
test	ebp, ebp
jz	loc_67CFEB08
			
mov	eax, ds:dword_67D72284
test	eax, eax
jz	short loc_67CFEA86
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67CFEA86
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	eax
			
test	edi, edi
jz	short loc_67CFEAA3
call	purple_blist_get_handle
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], offset aBuddyPrivacy_0 
mov	[esp+4Ch+var_4C], eax
call	purple_signal_emit
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_free
call	purple_blist_get_ui_ops
test	eax, eax
jz	short loc_67CFEB00
mov	eax, [eax+30h]
test	eax, eax
jz	short loc_67CFEB00
mov	[esp+4Ch+var_4C], ebx
call	eax
mov	eax, 1
jmp	short loc_67CFEAEA
align 4
mov	[esp+4Ch+var_44], offset aWhoNull_2 
mov	[esp+4Ch+var_48], offset aPurple_priva_2 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFEB58
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	eax, 1
jmp	short loc_67CFEAEA
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_account_is_connected
test	eax, eax
jz	loc_67CFEA6D
mov	[esp+4Ch+var_4C], ebx
call	purple_account_get_connection
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	serv_rem_deny
jmp	loc_67CFEA6D
align 4
mov	[esp+4Ch+var_44], offset aAccountNull_7	
mov	[esp+4Ch+var_48], offset aPurple_priva_2 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFEAEA
call	__stack_chk_fail
align 10h
public purple_privacy_allow
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	esi, [ebx+38h]
cmp	esi, 5		
jbe	short loc_67CFEBD8
			
mov	[esp+5Ch+var_48], offset aPurple_priva_3 
mov	[esp+5Ch+var_4C], 12Ch
mov	[esp+5Ch+var_50], offset aPrivacy_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_7 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
			
mov	eax, [esp+5Ch+var_20] 
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFECD6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jmp	ds:off_67D3E94C[esi*4] 
align 10h
			
mov	[esp+5Ch+var_58], edi 
mov	[esp+5Ch+var_5C], ebx
call	purple_find_buddy
test	eax, eax
jz	loc_67CFECC8
			
cmp	[ebx+38h], esi
jz	short loc_67CFEBBF 
mov	[esp+5Ch+var_5C], ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CFEBBF 
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_connection
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFECD6
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	serv_set_permit_deny
align 10h
			
test	eax, eax	
jz	short loc_67CFEC7C
			
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_permit_add
mov	dword ptr [ebx+38h], 3
jmp	short loc_67CFEBF9
align 10h
			
mov	[esp+5Ch+var_54], ebp 
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_permit_add
jmp	short loc_67CFEBF4
align 4
			
mov	[esp+5Ch+var_54], ebp 
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_deny_remove
jmp	loc_67CFEBF4
align 4
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], ebx
call	purple_normalize
mov	[esp+5Ch+var_30], eax
mov	esi, [ebx+30h]
nop
			
test	esi, esi
jz	short loc_67CFEC34
mov	ecx, [esi]
mov	esi, [esi+4]
mov	[esp+5Ch+var_58], ecx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_34], ecx
call	purple_strequal
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jnz	short loc_67CFEC90
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_permit_remove
jmp	short loc_67CFEC90
align 4
mov	edx, ebp
mov	eax, ebx
call	sub_67CFE774
jmp	loc_67CFEC34
			
call	__stack_chk_fail
align 4
public purple_privacy_deny
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	eax, [esp+5Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	esi, [ebx+38h]
cmp	esi, 5		
jbe	short loc_67CFED54
			
mov	[esp+5Ch+var_48], offset aPurple_priva_4 
mov	[esp+5Ch+var_4C], 160h
mov	[esp+5Ch+var_50], offset aPrivacy_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_7 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
			
mov	eax, [esp+5Ch+var_20] 
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFEE6B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jmp	ds:off_67D3E964[esi*4] 
align 4
			
mov	[esp+5Ch+var_58], ebp 
mov	[esp+5Ch+var_5C], ebx
call	purple_find_buddy
test	eax, eax
jz	loc_67CFEE18
mov	edx, edi
mov	eax, ebx
call	sub_67CFE774
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_permit_remove
mov	dword ptr [ebx+38h], 3
			
mov	[esp+5Ch+var_5C], ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67CFED3B 
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_connection
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFEE6B
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	serv_set_permit_deny
			
test	eax, eax	
jz	short loc_67CFEE20
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_deny_add
mov	dword ptr [ebx+38h], 4
jmp	short loc_67CFED90
align 4
			
mov	[esp+5Ch+var_54], edi 
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_permit_remove
mov	eax, [ebx+38h]
			
cmp	esi, eax
jnz	short loc_67CFED90
jmp	loc_67CFED3B	
			
mov	[esp+5Ch+var_54], edi 
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_deny_add
mov	eax, [ebx+38h]
jmp	short loc_67CFEDF7
align 4
mov	eax, [ebx+38h]
jmp	short loc_67CFEDF7
align 10h
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_normalize
mov	[esp+5Ch+var_30], eax
mov	esi, [ebx+34h]
nop
			
test	esi, esi
jz	short loc_67CFEDC8
mov	ecx, [esi]
mov	esi, [esi+4]
mov	[esp+5Ch+var_58], ecx
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_34], ecx
call	purple_strequal
test	eax, eax
mov	ecx, [esp+5Ch+var_34]
jnz	short loc_67CFEE34
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ecx
mov	[esp+5Ch+var_5C], ebx
call	purple_privacy_deny_remove
jmp	short loc_67CFEE34
			
call	__stack_chk_fail
public purple_privacy_check
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
cmp	dword ptr [ebx+38h], 5 
jbe	short loc_67CFEEE0
			
mov	[esp+3Ch+var_28], offset aPurple_priva_5 
mov	[esp+3Ch+var_2C], 188h
mov	[esp+3Ch+var_30], offset aPrivacy_c 
mov	[esp+3Ch+var_34], offset aFileSLineDSS_7 
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+var_3C], 0
call	g_log
			
mov	eax, 1		
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFEF7C
add	esp, 34h
pop	ebx
pop	esi
retn
align 10h
mov	edx, [ebx+38h]
jmp	ds:off_67D3E97C[edx*4] 
align 4
			
mov	[esp+3Ch+var_38], eax 
mov	[esp+3Ch+var_3C], ebx
call	purple_normalize
mov	esi, eax
mov	ebx, [ebx+30h]
test	ebx, ebx
jz	short loc_67CFEF1D 
lea	esi, [esi+0]
mov	edx, [ebx]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], esi
call	g_str_equal
test	eax, eax
jnz	short loc_67CFEEC3 
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67CFEF04
			
			
xor	eax, eax	
jmp	short loc_67CFEEC8
align 4
			
mov	[esp+3Ch+var_38], eax 
mov	[esp+3Ch+var_3C], ebx
call	purple_find_buddy
test	eax, eax
setnz	al
movzx	eax, al
jmp	short loc_67CFEEC8
align 4
			
mov	[esp+3Ch+var_38], eax 
mov	[esp+3Ch+var_3C], ebx
call	purple_normalize
mov	esi, eax
mov	ebx, [ebx+34h]
test	ebx, ebx
jnz	short loc_67CFEF63
jmp	loc_67CFEEC3	
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	loc_67CFEEC3	
mov	edx, [ebx]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], esi
call	g_str_equal
test	eax, eax
jz	short loc_67CFEF58
xor	eax, eax
jmp	loc_67CFEEC8
call	__stack_chk_fail
align 4
public purple_privacy_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D72284, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFEFAB
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_privacy_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72284
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFEFD3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_privacy_init
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFEFF6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D722C0
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	ds:dword_67D722C0, eax
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67CFF032
mov	[esp+2Ch+var_2C], eax
call	purple_dnsquery_destroy
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67CFF06F
lea	esi, [esi+0]
mov	edx, [eax]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+28h], eax
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	edx, [eax]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_slist_remove
mov	[ebx+28h], eax
test	eax, eax
jnz	short loc_67CFF03C
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF093
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 38h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
cmp	[ebx+48h], edx
jnb	short loc_67CFF108
mov	eax, [ebx+44h]
cmp	edx, eax
ja	short loc_67CFF0C8
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF10F
add	esp, 38h
pop	ebx
retn
mov	[esp+3Ch+var_30], edx
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aReallocingFrom 
mov	[esp+3Ch+var_3C], offset aS5 
mov	[esp+3Ch+var_20], edx
call	purple_debug_info
mov	edx, [esp+3Ch+var_20]
mov	[ebx+44h], edx
mov	[esp+3Ch+var_38], edx
mov	eax, [ebx+40h]
mov	[esp+3Ch+var_3C], eax
call	g_realloc
mov	[ebx+40h], eax
xor	eax, eax
jmp	short loc_67CFF0B7
align 4
mov	eax, 1
jmp	short loc_67CFF0B7
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
cmp	al, 7
ja	loc_67CFF1F8
cmp	dl, 1
ja	loc_67CFF1F8
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
lea	ecx, [esp+3Ch+var_14]
mov	[esp+3Ch+Size],	ecx
lea	ecx, [esp+3Ch+var_18]
mov	[esp+3Ch+Src], ecx
movzx	eax, al
movzx	edx, dl
lea	eax, [edx+eax*2]
mov	eax, ds:off_67D3FD80[eax*4]
mov	[esp+3Ch+Dst], eax
call	g_spawn_command_line_sync_utf8
test	eax, eax
jz	loc_67CFF1F8
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+Dst], eax
call	g_free
mov	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+Dst], eax
call	g_strchug
mov	[esp+3Ch+Dst], eax
call	g_strchomp
mov	edx, [esp+3Ch+var_18]
mov	al, [edx]
cmp	al, 27h
jz	short loc_67CFF1A5
cmp	al, 22h
jnz	short loc_67CFF1FA
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
mov	ebx, ecx
not	ebx
lea	esi, [ebx-1]
mov	[esp+3Ch+Size],	esi 
lea	eax, [edx+1]
mov	[esp+3Ch+Src], eax 
mov	[esp+3Ch+Dst], edx 
call	memmove
mov	eax, [esp+3Ch+var_18]
dec	esi
jz	short loc_67CFF1E1
lea	ecx, [eax+ebx-3]
mov	dl, [ecx]
cmp	dl, 27h
jz	short loc_67CFF210
cmp	dl, 22h
jz	short loc_67CFF210
			
mov	[esp+3Ch+Dst], eax
call	g_strchug
mov	[esp+3Ch+Dst], eax
call	g_strchomp
mov	edx, [esp+3Ch+var_18]
jmp	short loc_67CFF1FA
align 4
			
xor	edx, edx
			
mov	eax, edx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF219
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 10h
			
mov	byte ptr [ecx],	0
mov	eax, [esp+3Ch+var_18]
jmp	short loc_67CFF1E1
call	__stack_chk_fail
align 10h
public purple_proxy_info_new
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 14h
call	g_malloc0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF24A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_proxy_info_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFF2A4
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF2D1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF2D1
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_proxy_info_set_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFF308
mov	[eax], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF326
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF2F5
call	__stack_chk_fail
align 4
public purple_proxy_info_set_host
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFF370
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF38E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF35E
call	__stack_chk_fail
align 4
public purple_proxy_info_set_port
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67CFF3C4
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF3E2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF3B2
call	__stack_chk_fail
align 4
public purple_proxy_info_set_username
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFF42C
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF44A
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF41A
call	__stack_chk_fail
align 10h
public purple_proxy_info_set_password
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFF494
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF4B2
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF482
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	edi, ds:dword_67D72288
mov	dword ptr [esp+4], offset aPurpleProxyTyp 
mov	[esp], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67CFF528
mov	dword ptr [esp+4], offset aNone_0 
mov	[esp], esi
call	purple_strequal
test	eax, eax
jz	loc_67CFF5C0
xor	eax, eax
			
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFF6C3
mov	[esp+34h], eax
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_proxy_info_set_type
mov	dword ptr [esp+4], offset aPurpleProxyHos 
mov	[esp], ebx
call	purple_strequal
test	eax, eax
jnz	short loc_67CFF59C
mov	dword ptr [esp+4], offset aPurpleProxyPor 
mov	[esp], ebx
call	purple_strequal
test	eax, eax
jnz	loc_67CFF5E0
mov	dword ptr [esp+4], offset aPurpleProxyUse 
mov	[esp], ebx
call	purple_strequal
test	eax, eax
jnz	loc_67CFF624
mov	dword ptr [esp+4], offset aPurpleProxyPas 
mov	[esp], ebx
call	purple_strequal
test	eax, eax
jnz	loc_67CFF668
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFF6C3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFF6C3
mov	[esp+34h], esi
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_proxy_info_set_host
align 10h
mov	dword ptr [esp+4], offset aHttp_0 
mov	[esp], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFF604
mov	eax, 1
jmp	loc_67CFF505
align 10h
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFF6C3
mov	[esp+34h], esi
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_proxy_info_set_port
align 4
mov	dword ptr [esp+4], offset aSocks4_0 
mov	[esp], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFF648
mov	eax, 2
jmp	loc_67CFF505
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67CFF6C3
mov	[esp+34h], esi
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_proxy_info_set_username
align 4
mov	dword ptr [esp+4], offset aSocks5_0 
mov	[esp], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFF688
mov	eax, 3
jmp	loc_67CFF505
align 4
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF6C3
mov	[esp+34h], esi
mov	[esp+30h], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_proxy_info_set_password
align 4
mov	dword ptr [esp+4], offset aTor_0 
mov	[esp], esi
call	purple_strequal
test	eax, eax
jz	short loc_67CFF6A6
mov	eax, 5
jmp	loc_67CFF505
mov	dword ptr [esp+4], offset aEnvvar_0 
mov	[esp], esi
call	purple_strequal
cmp	eax, 1
sbb	eax, eax
or	eax, 4
jmp	loc_67CFF505
			
call	__stack_chk_fail
public purple_proxy_info_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFF6F4
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF714
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFF6E1
call	__stack_chk_fail
align 4
public purple_proxy_info_get_host
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFF748
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF768
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFF736
call	__stack_chk_fail
align 10h
public purple_proxy_info_get_port
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFF79C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF7BC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFF78A
call	__stack_chk_fail
align 4
public purple_proxy_info_get_username
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFF7F0
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF810
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFF7DE
call	__stack_chk_fail
align 4
public purple_proxy_info_get_password
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67CFF844
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF864
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_proxy_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67CFF832
call	__stack_chk_fail
align 4
public purple_global_proxy_get_info
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72288
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67CFF88F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_global_proxy_set_info
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67CFF8D0
mov	eax, ds:dword_67D72288
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_info_destroy
mov	ds:dword_67D72288, ebx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67CFF8EE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aInfoNull 
mov	[esp+2Ch+var_28], offset aPurple_global_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67CFF8BE
call	__stack_chk_fail
align 4
public purple_proxy_get_setup
			
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_10], eax
xor	eax, eax
mov	esi, ds:dword_67D7228C
test	esi, esi
jz	loc_67CFFA7C
test	ebx, ebx
jz	short loc_67CFF968
mov	[esp+5Ch+Str], ebx
call	purple_account_get_proxy_info
test	eax, eax
jz	short loc_67CFF968
mov	[esp+5Ch+Str], ebx
call	purple_account_get_proxy_info
mov	ebx, eax
mov	[esp+5Ch+Str], eax
call	purple_proxy_info_get_type
inc	eax
jz	short loc_67CFF968
test	ebx, ebx
jz	short loc_67CFF968
			
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_get_type
cmp	eax, 4
jz	short loc_67CFF980
			
mov	eax, ebx
			
mov	edx, [esp+5Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67CFFF77
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
call	purple_running_gnome
test	eax, eax
jnz	loc_67CFFA9B
			
mov	ebx, ds:dword_67D72288
jmp	short loc_67CFF940
align 10h
mov	[esp+5Ch+Str], offset aHttp_proxy 
call	g_getenv_utf8
test	eax, eax
jz	loc_67CFFC30
			
lea	edx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_48], edx
lea	edx, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], 0
lea	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], edx
lea	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+Val], edx
mov	[esp+5Ch+Str], eax
call	purple_url_parse
test	eax, eax
jz	short loc_67CFF94D
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_host
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	g_free
mov	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_username
mov	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+Str], eax
call	g_free
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_password
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Str], eax
call	g_free
mov	eax, [esp+5Ch+var_24]
cmp	eax, 50h
jz	loc_67CFFE58
			
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_port
mov	[esp+5Ch+Str], offset aHttp_proxy_use 
call	g_getenv_utf8
test	eax, eax
jz	loc_67CFFE28
			
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_username
mov	[esp+5Ch+Str], offset aHttp_proxy_pas 
call	g_getenv_utf8
test	eax, eax
jz	loc_67CFFDF8
			
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	purple_proxy_info_set_password
jmp	loc_67CFF94D
align 4
call	purple_proxy_info_new
mov	ds:dword_67D7228C, eax
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], eax
call	purple_proxy_info_set_type
jmp	loc_67CFF917
mov	[esp+5Ch+Str], offset aGsettings 
call	g_find_program_in_path_utf8
mov	esi, 1
test	eax, eax
jz	loc_67CFFF15
mov	[esp+5Ch+Str], eax
call	g_free
mov	edx, esi
xor	eax, eax
call	sub_67CFF114
mov	ebx, eax
test	eax, eax
jz	loc_67CFF975
mov	[esp+5Ch+Val], offset aNone_0 
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jnz	loc_67CFFE7D
mov	[esp+5Ch+Val], offset aManual 
mov	[esp+5Ch+Str], ebx
call	purple_strequal
mov	[esp+5Ch+Str], ebx
test	eax, eax
jz	loc_67CFFE99
call	g_free
mov	eax, ds:dword_67D72294
test	eax, eax
jz	short loc_67CFFB22
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D72294, 0
mov	eax, ds:dword_67D7229C
test	eax, eax
jz	short loc_67CFFB3D
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D7229C, 0
mov	eax, ds:dword_67D722A0
test	eax, eax
jz	short loc_67CFFB58
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D722A0, 0
mov	edx, esi
mov	eax, 1
call	sub_67CFF114
mov	ebx, eax
test	eax, eax
jz	loc_67CFF975
mov	[esp+5Ch+Val], offset aTrue_0 
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67CFFEA9
mov	[esp+5Ch+Str], ebx
call	g_free
mov	eax, ds:dword_67D72294
mov	[esp+5Ch+Str], eax
call	g_free
mov	edx, esi
mov	eax, 4
call	sub_67CFF114
mov	ds:dword_67D72294, eax
test	eax, eax
jz	loc_67CFF975
mov	ds:dword_67D72290, 1
cmp	byte ptr [eax],	0
jz	loc_67CFFF30
mov	edx, esi
mov	eax, 6
call	sub_67CFF114
mov	ds:dword_67D7229C, eax
test	eax, eax
jz	loc_67CFFEF3
mov	edx, esi
mov	eax, 7
call	sub_67CFF114
mov	ds:dword_67D722A0, eax
test	eax, eax
jz	loc_67CFFF7C
mov	edx, esi
mov	eax, 5
call	sub_67CFF114
mov	ebx, eax
test	eax, eax
jz	loc_67CFFFB5
mov	[esp+5Ch+Str], ebx 
call	atoi
mov	ds:dword_67D72298, eax
mov	[esp+5Ch+Str], ebx
call	g_free
mov	ebx, offset dword_67D72290
jmp	loc_67CFF940
align 10h
mov	[esp+5Ch+Str], offset aHttp_proxy_0 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFF994
mov	[esp+5Ch+Str], offset aHttpproxy 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFF994
cmp	ds:dword_67D722A4, 0
jz	loc_67D00174
mov	edx, ds:dword_67D722A8
test	edx, edx
jz	loc_67D00137
lea	ebx, [esp+5Ch+var_20]
mov	ecx, 4
xor	eax, eax
mov	edi, ebx
rep stosd
mov	[esp+5Ch+Str], ebx
call	edx 
push	ebx
test	eax, eax
jz	loc_67D00155
cmp	[esp+5Ch+var_20], 0
jnz	loc_67D00123
mov	eax, [esp+5Ch+var_18]
test	eax, eax
jz	loc_67D00005
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Val], 0FFFFFFFFh
mov	[esp+5Ch+Str], eax
call	g_utf16_to_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67CFFDB2
cmp	byte ptr [eax],	0
jz	loc_67CFFDB2
mov	[esp+5Ch+Val], 3Bh 
mov	[esp+5Ch+Str], eax 
call	strchr
test	eax, eax
jz	loc_67D0011C
mov	[esp+5Ch+var_54], offset aHttp_1 
mov	[esp+5Ch+Val], 0FFFFFFFFh
mov	[esp+5Ch+Str], ebx
call	g_strstr_len
test	eax, eax
jz	loc_67D00032
lea	esi, [eax+5]
mov	[esp+5Ch+Val], 3Bh 
mov	[esp+5Ch+Str], esi 
call	strchr
test	eax, eax
jz	short loc_67CFFD34
mov	byte ptr [eax],	0
			
mov	[esp+5Ch+Val], 1
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_type
mov	edx, 50h
mov	eax, esi
call	sub_67D2FD3C
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_username
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_password
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_get_port
mov	esi, eax
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_get_host
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], offset aWindowsProxySe 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
			
mov	[esp+5Ch+Str], ebx
call	g_free
mov	eax, [esp+5Ch+hMem]
test	eax, eax
jz	short loc_67CFFDCB
mov	[esp+5Ch+Str], eax 
call	GlobalFree
push	ecx
mov	eax, [esp+5Ch+var_18]
test	eax, eax
jz	short loc_67CFFDDC
mov	[esp+5Ch+Str], eax 
call	GlobalFree
push	edx
mov	eax, [esp+5Ch+var_14]
test	eax, eax
jz	short loc_67CFFDED
mov	[esp+5Ch+Str], eax 
call	GlobalFree
push	eax
mov	eax, offset dword_67D722AC
jmp	loc_67CFF94F
align 4
mov	[esp+5Ch+Str], offset aHttp_proxy_p_0 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFA69
mov	[esp+5Ch+Str], offset aHttpproxypass 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFA69
jmp	loc_67CFF94D
align 4
mov	[esp+5Ch+Str], offset aHttp_proxy_u_0 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFA49
mov	[esp+5Ch+Str], offset aHttpproxyuser 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFA49
jmp	loc_67CFFA55
align 4
mov	[esp+5Ch+Str], offset aHttp_proxy_por 
call	g_getenv_utf8
test	eax, eax
jz	loc_67CFFF46
			
mov	[esp+5Ch+Str], eax 
call	atoi
mov	[esp+5Ch+var_24], eax
jmp	loc_67CFFA29
mov	ds:dword_67D72290, 0
mov	[esp+5Ch+Str], ebx
call	g_free
mov	ebx, offset dword_67D72290
jmp	loc_67CFF940
call	g_free
mov	ebx, ds:dword_67D72288
jmp	loc_67CFF940
mov	[esp+5Ch+Str], ebx
call	g_free
mov	edx, esi
mov	eax, 2
call	sub_67CFF114
mov	ds:dword_67D72294, eax
test	eax, eax
jz	loc_67CFF975
cmp	byte ptr [eax],	0
jz	loc_67CFFB8E
mov	ds:dword_67D72290, 3
mov	edx, esi
mov	eax, 3
call	sub_67CFF114
mov	ebx, eax
test	eax, eax
jnz	loc_67CFFC0F
			
mov	eax, ds:dword_67D72294
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D72294, 0
mov	ebx, ds:dword_67D72288
jmp	loc_67CFF940
mov	[esp+5Ch+Str], offset aGconftool2 
call	g_find_program_in_path_utf8
test	eax, eax
jz	loc_67CFF975
xor	esi, esi
jmp	loc_67CFFAB4
mov	[esp+5Ch+Val], offset aGnomeProxySett 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
jmp	short loc_67CFFEF3
mov	[esp+5Ch+Str], offset aHttp_proxy_p_1 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFE6C
mov	[esp+5Ch+Str], offset aHttpproxyport 
call	g_getenv_utf8
test	eax, eax
jnz	loc_67CFFE6C
mov	eax, [esp+5Ch+var_24]
jmp	loc_67CFFA29
call	__stack_chk_fail
mov	eax, ds:dword_67D72294
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D72294, 0
mov	eax, ds:dword_67D7229C
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D7229C, 0
mov	ebx, ds:dword_67D72288
jmp	loc_67CFF940
mov	eax, ds:dword_67D72294
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D72294, 0
mov	eax, ds:dword_67D7229C
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D7229C, 0
mov	eax, ds:dword_67D722A0
mov	[esp+5Ch+Str], eax
call	g_free
mov	ds:dword_67D722A0, 0
mov	ebx, ds:dword_67D72288
jmp	loc_67CFF940
mov	[esp+5Ch+Val], offset aNoWindowsProxy 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_type
jmp	loc_67CFFDBA
mov	[esp+5Ch+var_54], offset aSocks	
mov	[esp+5Ch+Val], 0FFFFFFFFh
mov	[esp+5Ch+Str], ebx
call	g_strstr_len
test	eax, eax
jz	loc_67D000EF
lea	esi, [eax+6]
mov	[esp+5Ch+Val], 3Bh 
mov	[esp+5Ch+Str], esi 
call	strchr
test	eax, eax
jz	short loc_67D0006C
mov	byte ptr [eax],	0
mov	[esp+5Ch+Val], 3
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_type
mov	edx, 438h
mov	eax, esi
call	sub_67D2FD3C
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_username
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_password
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_get_port
mov	esi, eax
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_get_host
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], offset aWindowsProxy_0 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
jmp	loc_67CFFDB2
mov	[esp+5Ch+Val], offset aWindowsProxy_1 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
mov	[esp+5Ch+Val], 0
mov	[esp+5Ch+Str], offset dword_67D722AC
call	purple_proxy_info_set_type
jmp	loc_67CFFDB2
mov	esi, ebx
jmp	loc_67CFFD34
mov	[esp+5Ch+Val], offset aWindowsProxy_2 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_error
			
mov	[esp+5Ch+Val], offset aNoEnvironmentS 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_info
mov	eax, ds:dword_67D7228C
jmp	loc_67CFF94F
call	GetLastError
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], offset aErrorReadingWi 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_error
jmp	short loc_67D00137
mov	ds:dword_67D722A4, 1
mov	[esp+5Ch+Val], offset aWinhttpgetiepr 
mov	[esp+5Ch+Str], offset aWinhttp_dll 
call	wpurple_find_and_loadproc
mov	edx, eax
mov	ds:dword_67D722A8, eax
test	eax, eax
jnz	loc_67CFFC73
mov	[esp+5Ch+Val], offset aUnableToReadWi 
mov	[esp+5Ch+Str], offset aProxy_0 
call	purple_debug_warning
jmp	loc_67CFFC65
align 4
public purple_proxy_connect
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ecx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	eax, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D00370
test	ebp, ebp
jle	loc_67D0034C
test	edx, edx
jz	loc_67D00394
mov	[esp+5Ch+var_5C], 50h
mov	[esp+5Ch+var_38], edx
mov	[esp+5Ch+var_34], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+14h], 0FFFFFFFFh
mov	dword ptr [eax+18h], 1
mov	ecx, [esp+5Ch+var_34]
mov	[eax], ecx
mov	edx, [esp+5Ch+var_38]
mov	[eax+4], edx
mov	edx, [esp+5Ch+var_30]
mov	[eax+8], edx
mov	[esp+5Ch+var_5C], edi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[ebx+10h], ebp
mov	[esp+5Ch+var_5C], esi
call	purple_proxy_get_setup
mov	[ebx+20h], eax
mov	[ebx+4Ch], esi
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
test	eax, eax
jz	short loc_67D00288
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_host
test	eax, eax
jz	loc_67D003B8
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_port
test	eax, eax
jle	loc_67D003B8
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
cmp	eax, 0
jnz	short loc_67D002F4
mov	eax, ebp
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], offset sub_67D03440
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	purple_dnsquery_a_account
mov	[ebx+24h], eax
test	eax, eax
jz	loc_67D00424
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D722C0
mov	[esp+5Ch+var_5C], eax
call	g_slist_prepend
mov	ds:dword_67D722C0, eax
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D00446
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jl	short loc_67D002FB
cmp	eax, 5
jle	short loc_67D0032C
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aInvalidProxy_0 
mov	[esp+5Ch+var_5C], offset aProxy_0 
call	purple_debug_error
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	short loc_67D002D7
align 4
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_host
mov	edi, eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_port
jmp	loc_67D0029A
align 4
mov	[esp+5Ch+var_54], offset aPort0_1 
mov	[esp+5Ch+var_58], offset aPurple_proxy_c 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D002D7
align 10h
mov	[esp+5Ch+var_54], offset aHostNull 
mov	[esp+5Ch+var_58], offset aPurple_proxy_c 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D002D7
align 4
mov	[esp+5Ch+var_54], offset aConnect_cbNull 
mov	[esp+5Ch+var_58], offset aPurple_proxy_c 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D002D7
align 4
			
mov	[esp+5Ch+var_58], offset aEitherTheHostN 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aInvalidProxySe 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	loc_67D002D7
mov	[esp+5Ch+var_58], offset aDnsQueryFailed 
mov	[esp+5Ch+var_5C], offset aProxy_0 
call	purple_debug_error
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	loc_67D002D7
call	__stack_chk_fail
align 4
public purple_proxy_connect_udp
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ecx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	esi, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	eax, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D00604
test	edi, edi
jle	loc_67D005E0
test	edx, edx
jz	loc_67D00628
mov	[esp+5Ch+var_5C], 50h
mov	[esp+5Ch+var_38], edx
mov	[esp+5Ch+var_34], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+14h], 0FFFFFFFFh
mov	dword ptr [eax+18h], 2
mov	ecx, [esp+5Ch+var_34]
mov	[eax], ecx
mov	edx, [esp+5Ch+var_38]
mov	[eax+4], edx
mov	edx, [esp+5Ch+var_30]
mov	[eax+8], edx
mov	[esp+5Ch+var_5C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[ebx+10h], edi
mov	[esp+5Ch+var_5C], ebp
call	purple_proxy_get_setup
mov	[ebx+20h], eax
mov	[ebx+4Ch], ebp
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
test	eax, eax
jz	short loc_67D00518
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_host
test	eax, eax
jz	loc_67D0064C
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_port
test	eax, eax
jle	loc_67D0064C
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
cmp	eax, 0
jnz	short loc_67D00580
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], offset sub_67D03440
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], ebp
call	purple_dnsquery_a_account
mov	[ebx+24h], eax
test	eax, eax
jz	loc_67D006B8
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D722C0
mov	[esp+5Ch+var_5C], eax
call	g_slist_prepend
mov	ds:dword_67D722C0, eax
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D006C6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
jl	short loc_67D00587
cmp	eax, 5
jle	short loc_67D005B8
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aInvalidProxy_0 
mov	[esp+5Ch+var_5C], offset aProxy_0 
call	purple_debug_error
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	short loc_67D00565
align 4
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_type
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aIgnoringProxyT 
mov	[esp+5Ch+var_5C], offset aProxy_0 
call	purple_debug_info
jmp	loc_67D00528
mov	[esp+5Ch+var_54], offset aPort0_1 
mov	[esp+5Ch+var_58], offset aPurple_prox_10 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D00565
align 4
mov	[esp+5Ch+var_54], offset aHostNull 
mov	[esp+5Ch+var_58], offset aPurple_prox_10 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D00565
align 4
mov	[esp+5Ch+var_54], offset aConnect_cbNull 
mov	[esp+5Ch+var_58], offset aPurple_prox_10 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D00565
align 4
			
mov	[esp+5Ch+var_58], offset aEitherTheHostN 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	esi, eax
mov	[esp+5Ch+var_58], offset aInvalidProxySe 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	loc_67D00565
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	loc_67D00565
call	__stack_chk_fail
align 4
public purple_proxy_connect_socks5_account
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ecx, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	ebp, [esp+5Ch+arg_8]
mov	esi, [esp+5Ch+arg_C]
mov	edi, [esp+5Ch+arg_10]
mov	edx, [esp+5Ch+arg_14]
mov	eax, [esp+5Ch+arg_18]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D00800
test	edi, edi
js	loc_67D007E0
test	edx, edx
jz	loc_67D00820
mov	[esp+5Ch+var_5C], 50h
mov	[esp+5Ch+var_3C], edx
mov	[esp+5Ch+var_38], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax+14h], 0FFFFFFFFh
mov	dword ptr [eax+18h], 1
mov	ecx, [esp+5Ch+var_38]
mov	[eax], ecx
mov	edx, [esp+5Ch+var_3C]
mov	[eax+4], edx
mov	edx, [esp+5Ch+var_30]
mov	[eax+8], edx
mov	[esp+5Ch+var_5C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	[ebx+10h], edi
mov	[ebx+20h], ebp
mov	edx, [esp+5Ch+var_34]
mov	[ebx+4Ch], edx
mov	[esp+5Ch+var_5C], ebp
call	purple_proxy_info_get_port
mov	esi, eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_host
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset loc_67D0157C
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	eax, [ebx+4Ch]
mov	[esp+5Ch+var_58], eax
mov	eax, [ebx]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_connect
test	eax, eax
jz	loc_67D00840
mov	[ebx+2Ch], eax
mov	[esp+5Ch+var_58], ebx
mov	eax, ds:dword_67D722C0
mov	[esp+5Ch+var_5C], eax
call	g_slist_prepend
mov	ds:dword_67D722C0, eax
			
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D00862
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_54], offset aPort0_2 
mov	[esp+5Ch+var_58], offset aPurple_prox_11 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D007C5
mov	[esp+5Ch+var_54], offset aHostNull 
mov	[esp+5Ch+var_58], offset aPurple_prox_11 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D007C5
mov	[esp+5Ch+var_54], offset aConnect_cbNull 
mov	[esp+5Ch+var_58], offset aPurple_prox_11 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D007C5
mov	[esp+5Ch+var_58], offset aUnableToInitia 
mov	[esp+5Ch+var_5C], offset aProxy_0 
call	purple_debug_error
mov	eax, ebx
call	sub_67CFEFFC
xor	ebx, ebx
jmp	loc_67D007C5
call	__stack_chk_fail
align 4
public purple_proxy_connect_socks5
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_14]
mov	[esp+3Ch+var_24], eax
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_28], eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_proxy_connect_socks5_account
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D008C2
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_proxy_connect_cancel
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D00900
xor	edx, edx
mov	eax, ebx
call	sub_67D00934
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0092D
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67CFEFFC
align 10h
mov	[esp+2Ch+var_24], offset aConnect_dataNu 
mov	[esp+2Ch+var_28], offset aPurple_prox_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0092D
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+2Ch]
test	eax, eax
jz	short loc_67D0095E
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	dword ptr [ebx+2Ch], 0
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	short loc_67D009DC
mov	eax, [ebx+14h]
test	eax, eax
js	short loc_67D0097B
mov	[esp+2Ch+var_2C], eax 
call	wpurple_close
mov	dword ptr [ebx+14h], 0FFFFFFFFh
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+30h], 0
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+40h], 0
test	esi, esi
jz	short loc_67D009F0
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aConnectionAtte 
mov	[esp+2Ch+var_2C], offset aProxy_0 
call	purple_debug_error
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67D00A04
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00A31
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	loc_67D02820
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
jmp	loc_67D00965
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00A31
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	dword ptr [ebx+4]
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00A31
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67CFEFFC
			
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup_vprintf
mov	ebx, eax
mov	edx, eax
mov	eax, esi
call	sub_67D00934
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00A85
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_20], eax
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aConnectedToSD_ 
mov	[esp+2Ch+var_2C], offset aProxy_0 
call	purple_debug_info
mov	[esp+2Ch+var_24], 0
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	dword ptr [ebx+4]
mov	dword ptr [ebx+14h], 0FFFFFFFFh
xor	edx, edx
mov	eax, ebx
call	sub_67D00934
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00AFE
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67CFEFFC
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
call	sub_67D00A8C
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D00B2D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	dword ptr [esp+3Ch+var_14], 0
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D722C0
mov	[esp+3Ch+var_3C], eax
call	g_slist_find
test	eax, eax
jz	loc_67D00BF3
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_30], eax
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aConnectingToSD 
mov	[esp+3Ch+var_3C], offset aProxy_0 
call	purple_debug_info
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_38], eax 
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax 
call	purple_input_get_error
test	eax, eax
jnz	short loc_67D00C04
mov	eax, dword ptr [esp+3Ch+var_14]
cmp	eax, 2734h
jz	short loc_67D00C20
test	eax, eax
jz	short loc_67D00C14
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx+10h]
mov	[esp+3Ch+var_30], eax
mov	eax, [ebx+0Ch]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aErrorConnectin 
mov	[esp+3Ch+var_3C], offset aProxy_0 
call	purple_debug_error
mov	eax, dword ptr [esp+3Ch+var_14]
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	edx, eax
mov	eax, ebx
call	sub_67D00934
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00C36
add	esp, 38h
pop	ebx
retn
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+3Ch+var_14], eax
jmp	short loc_67D00BB0
align 4
mov	eax, ebx
call	sub_67D00A8C
jmp	short loc_67D00BF3
align 10h
mov	[esp+3Ch+var_38], offset aRet0ErrorEinpr 
mov	[esp+3Ch+var_3C], offset aProxy_0 
call	purple_debug_info
jmp	short loc_67D00BF3
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+38h]
mov	esi, [ebx+34h]
sub	esi, eax
mov	[esp+2Ch+var_24], esi 
add	eax, [ebx+30h]
mov	[esp+2Ch+var_28], eax 
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax 
call	wpurple_write
test	eax, eax
jle	short loc_67D00CCC
cmp	esi, eax
jbe	short loc_67D00C8C
add	[ebx+38h], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00CFF
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword ptr [ebx+30h], 0
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	[esp+2Ch+var_20], ebx
mov	eax, [ebx+3Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
jmp	short loc_67D00C79
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D00C79
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D00CFF
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00934
			
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	edi, [ebx+0Ch]
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	ebp, [ecx-1]
add	ecx, 6
mov	[ebx+34h], ecx
mov	[esp+3Ch+var_3C], ecx
call	g_malloc
mov	[ebx+30h], eax
mov	dword ptr [ebx+38h], 0
mov	byte ptr [eax],	5
mov	byte ptr [eax+1], 1
mov	byte ptr [eax+2], 0
mov	byte ptr [eax+3], 3
mov	edx, ebp
mov	[eax+4], dl
lea	edx, [eax+5]
mov	esi, [ebx+0Ch]
mov	edi, edx
mov	ecx, ebp
rep movsb
mov	edx, [ebx+10h]
mov	ecx, edx
sar	ecx, 8
mov	[eax+ebp+5], cl
mov	[eax+ebp+6], dl
mov	dword ptr [ebx+3Ch], offset loc_67D01A84
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset sub_67D00C3C
mov	[esp+3Ch+var_38], 2
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	[esp+3Ch+var_34], 2
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_67D00C3C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00DC3
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+10h]
mov	[esp+15Ch+var_150], eax
mov	eax, [ebx+0Ch]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aUsingConnectTu 
mov	[esp+15Ch+var_15C], offset aProxy_0 
call	purple_debug_info
mov	[esp+15Ch+var_15C], 1000h
call	g_string_sized_new
mov	esi, eax
mov	edx, [ebx+10h]
mov	eax, [ebx+0Ch]
mov	[esp+15Ch+var_148], edx
mov	[esp+15Ch+var_14C], eax
mov	[esp+15Ch+var_150], edx
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aConnectSDHttp1 
mov	[esp+15Ch+var_15C], esi
call	g_string_append_printf
mov	eax, [ebx+20h]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_username
test	eax, eax
jz	loc_67D00F21
mov	[esp+15Ch+var_158], 100h 
lea	ebp, [esp+15Ch+var_120]
mov	[esp+15Ch+var_15C], ebp	
call	wpurple_gethostname
mov	[esp+15Ch+var_21], 0
test	eax, eax
js	loc_67D00FAC
cmp	[esp+15Ch+var_120], 0
jz	loc_67D00FAC
mov	eax, [ebx+20h]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_password
test	eax, eax
jz	loc_67D00FEB
mov	eax, [ebx+20h]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_password
mov	edi, eax
mov	eax, [ebx+20h]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_username
mov	[esp+15Ch+var_154], edi
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+var_15C], offset aSS_2 
call	g_strdup_printf
mov	edx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+15Ch+var_158], ecx
mov	[esp+15Ch+var_15C], edx
mov	[esp+15Ch+var_130], edx
call	purple_base64_encode
mov	edi, eax
mov	edx, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], edx
call	g_free
mov	[esp+15Ch+var_158], offset byte_67D3EFED
mov	[esp+15Ch+var_15C], ebp
call	purple_ntlm_gen_type1
mov	ebp, eax
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+var_154], edi
mov	[esp+15Ch+var_158], offset aProxyAuthoriza 
mov	[esp+15Ch+var_15C], esi
call	g_string_append_printf
mov	[esp+15Ch+var_15C], ebp
call	g_free
mov	[esp+15Ch+var_15C], edi
call	g_free
mov	[esp+15Ch+var_158], offset asc_67D3F0D8	
mov	[esp+15Ch+var_15C], esi
call	g_string_append
mov	eax, [esi+4]
mov	[ebx+34h], eax
mov	[esp+15Ch+var_158], 0
mov	[esp+15Ch+var_15C], esi
call	g_string_free
mov	[ebx+30h], eax
mov	dword ptr [ebx+38h], 0
mov	dword ptr [ebx+3Ch], offset sub_67D02D40
mov	[esp+15Ch+var_150], ebx
mov	[esp+15Ch+var_154], offset sub_67D00C3C
mov	[esp+15Ch+var_158], 2
mov	eax, [ebx+14h]
mov	[esp+15Ch+var_15C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	[esp+15Ch+var_154], 2
mov	eax, [ebx+14h]
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+var_15C], ebx
call	sub_67D00C3C
mov	eax, [esp+15Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D00FF5
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+15Ch+var_158], offset aGethostnameFai 
mov	[esp+15Ch+var_15C], offset aProxy_0 
call	purple_debug_warning
mov	[esp+15Ch+var_154], 100h
mov	[esp+15Ch+var_158], offset aLocalhost 
mov	[esp+15Ch+var_15C], ebp
call	g_strlcpy
mov	eax, [ebx+20h]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_password
test	eax, eax
jnz	loc_67D00E8D
mov	edi, offset byte_67D3EFED
jmp	loc_67D00E9A
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	dword ptr [esp+4Ch+var_24], 274Ch
mov	[esp+4Ch+var_48], offset aConnected_ 
mov	[esp+4Ch+var_4C], offset aSocks4Proxy 
call	purple_debug_info
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	loc_67D01164
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], eax 
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax 
call	purple_input_get_error
test	eax, eax
jz	short loc_67D01084
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+4Ch+var_24], eax
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	edx, eax
mov	eax, ebx
call	sub_67D00934
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D011C8
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, dword ptr [esp+4Ch+var_24]
test	eax, eax
jnz	short loc_67D0105B
mov	[esp+4Ch+var_4C], offset aPurpleProxySoc 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67D01178
mov	[esp+4Ch+var_48], offset aAttemptingToUs 
mov	[esp+4Ch+var_4C], offset aSocks4Proxy 
call	purple_debug_info
mov	esi, [ebx+10h]
mov	edi, [ebx+0Ch]
mov	ecx, 0FFFFFFFFh
xor	eax, eax
repne scasb
not	ecx
lea	ebp, [ecx+9]
mov	[esp+4Ch+var_4C], ebp
call	g_malloc0
mov	edx, eax
mov	[ebx+30h], eax
mov	byte ptr [eax],	4
mov	byte ptr [eax+1], 1
mov	eax, esi
sar	eax, 8
mov	[edx+2], al
mov	eax, esi
mov	[edx+3], al
mov	byte ptr [edx+4], 0
mov	byte ptr [edx+5], 0
mov	byte ptr [edx+6], 0
mov	byte ptr [edx+7], 1
mov	byte ptr [edx+8], 0
mov	esi, [ebx+0Ch]
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
dec	ecx
add	edx, 9
mov	edi, edx
rep movsb
mov	[ebx+34h], ebp
mov	dword ptr [ebx+38h], 0
mov	dword ptr [ebx+3Ch], offset loc_67D0133C
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], offset sub_67D00C3C
mov	[esp+4Ch+var_48], 2
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	[esp+4Ch+var_44], 2
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_67D00C3C
jmp	loc_67D0106C
mov	[esp+4Ch+var_4C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
jmp	loc_67D01039
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_40], offset loc_67D011D0
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_44], eax
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+4Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_dnsquery_a_account
mov	[ebx+24h], eax
test	eax, eax
jnz	loc_67D0106C
mov	[esp+4Ch+var_48], offset aDnsQueryFailed 
mov	[esp+4Ch+var_4C], offset aProxy_0 
call	purple_debug_error
mov	eax, ebx
call	sub_67CFEFFC
jmp	loc_67D0106C
call	__stack_chk_fail
align 10h
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, [esp+88h+var_48]
mov	esi, [esp+88h+var_44]
mov	edx, [esp+88h+var_40]
mov	ecx, ds:__stack_chk_guard
mov	[esp+88h+var_5C], ecx
xor	ecx, ecx
mov	dword ptr [esi+24h], 0
test	edx, edx
jz	short loc_67D01218
mov	eax, esi
call	sub_67D00934
			
mov	eax, [esp+88h+var_5C]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D01334
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
test	eax, eax
jz	loc_67D01308
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], eax
call	g_slist_delete_link
mov	edi, [eax]
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], eax
call	g_slist_delete_link
mov	[esp+88h+var_65], 4
mov	[esp+88h+var_64], 1
mov	ecx, [esi+10h]
mov	edx, ecx
sar	edx, 8
mov	[esp+88h+var_63], dl
mov	[esp+88h+var_62], cl
mov	edx, [edi+4]
mov	[esp+88h+var_61], edx
mov	[esp+88h+var_5D], 0
mov	[esp+88h+var_88], edi
mov	[esp+88h+var_6C], eax
call	g_free
mov	eax, [esp+88h+var_6C]
test	eax, eax
jz	short loc_67D0129C
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], eax
call	g_slist_delete_link
mov	ebx, eax
mov	eax, [eax]
mov	[esp+88h+var_88], eax
call	g_free
mov	[esp+88h+var_84], ebx
mov	[esp+88h+var_88], ebx
call	g_slist_delete_link
test	eax, eax
jnz	short loc_67D01274
mov	[esp+88h+var_84], 9
lea	eax, [esp+88h+var_65]
mov	[esp+88h+var_88], eax
call	g_memdup
mov	[esi+30h], eax
mov	dword ptr [esi+34h], 9
mov	dword ptr [esi+38h], 0
mov	dword ptr [esi+3Ch], offset loc_67D0133C
mov	[esp+0Ch], esi
mov	[esp+88h+var_80], offset sub_67D00C3C
mov	[esp+88h+var_84], 2
mov	eax, [esi+14h]
mov	[esp+88h+var_88], eax
call	purple_input_add
mov	[esi+1Ch], eax
mov	[esp+88h+var_80], 2
mov	eax, [esi+14h]
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], esi
call	sub_67D00C3C
jmp	loc_67D01200
align 4
mov	ebx, [esi+0Ch]
mov	[esp+88h+var_84], offset aErrorResolvi_0 
mov	[esp+88h+var_88], offset aPidgin_9 
call	libintl_dgettext
mov	[esp+88h+var_80], ebx
mov	[esp+88h+var_84], eax
mov	[esp+88h+var_88], esi
call	sub_67D00A38
jmp	loc_67D01200
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [ebx+40h]
test	eax, eax
jz	loc_67D013E8
mov	ecx, [ebx+48h]
mov	edx, [ebx+44h]
sub	edx, ecx
mov	[esp+8], edx
add	eax, ecx
mov	[esp+4], eax
mov	eax, [ebx+14h]
mov	[esp], eax
call	wpurple_read
mov	esi, eax
cmp	eax, 0
jl	short loc_67D013BC
jz	short loc_67D013DC
add	esi, [ebx+48h]
cmp	esi, 3
jbe	short loc_67D013C8
mov	eax, [ebx+40h]
cmp	byte ptr [eax+1], 5Ah
jz	short loc_67D0140C
call	_errno
mov	eax, [eax]
mov	[esp], eax
call	wpurple_strerror
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D01424
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00934
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jnz	short loc_67D013DC
xchg	ax, ax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D01424
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
add	esi, [ebx+48h]
cmp	esi, 3
jbe	short loc_67D01392
jmp	short loc_67D01389
align 4
mov	dword ptr [ebx+44h], 0Ch
mov	dword ptr [esp], 0Ch
call	g_malloc
mov	[ebx+40h], eax
mov	dword ptr [ebx+48h], 0
xor	ecx, ecx
jmp	loc_67D0135E
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D01424
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00A8C
			
call	__stack_chk_fail
align 4
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	dword ptr [esp+3Ch+var_2C], 274Ch
mov	[esp+3Ch+var_38], offset aConnected_ 
mov	[esp+3Ch+var_3C], offset aSocks5Proxy 
call	purple_debug_info
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	loc_67D0154C
lea	eax, [esp+3Ch+var_2C]
mov	[esp+3Ch+var_38], eax 
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax 
call	purple_input_get_error
test	eax, eax
jz	short loc_67D014B4
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_3C], eax
call	wpurple_strerror
mov	edx, eax
mov	eax, ebx
call	sub_67D00934
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D01574
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, dword ptr [esp+3Ch+var_2C]
test	eax, eax
jnz	short loc_67D0148B
mov	[esp+3Ch+var_25], 5
mov	eax, [ebx+20h]
mov	[esp+3Ch+var_3C], eax
call	purple_proxy_info_get_username
test	eax, eax
jz	loc_67D01560
mov	[esp+3Ch+var_24], 3
mov	[esp+3Ch+var_23], 0
mov	[esp+3Ch+var_22], 3
mov	[esp+3Ch+var_21], 2
mov	ebp, 5
mov	[ebx+34h], ebp
mov	[esp+3Ch+var_3C], ebp
call	g_malloc
mov	[ebx+30h], eax
lea	esi, [esp+3Ch+var_25]
mov	edi, eax
mov	ecx, ebp
rep movsb
mov	dword ptr [ebx+3Ch], offset sub_67D016C0
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset sub_67D00C3C
mov	[esp+3Ch+var_38], 2
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_3C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	[esp+3Ch+var_34], 2
mov	eax, [ebx+14h]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	sub_67D00C3C
jmp	loc_67D0149C
align 4
mov	[esp+3Ch+var_3C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
jmp	loc_67D01469
mov	[esp+3Ch+var_24], 1
mov	[esp+3Ch+var_23], 0
mov	ebp, 3
jmp	loc_67D014ED
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+40h]
mov	edi, [esp+44h]
mov	esi, [esp+48h]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch], eax
xor	eax, eax
mov	[esp+8], ebx
mov	dword ptr [esp+4], offset aConnectDataIsP 
mov	dword ptr [esp], offset	aProxy_0 
call	purple_debug_error
mov	[esp+4], ebx
mov	eax, ds:dword_67D722C0
mov	[esp], eax
call	g_slist_find
test	eax, eax
jz	loc_67D01694
mov	dword ptr [ebx+2Ch], 0
test	esi, esi
jz	short loc_67D01614
mov	dword ptr [esp+4], offset aUnableToConnec 
mov	dword ptr [esp], offset	aProxy_0 
call	purple_debug_error
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D016BB
mov	[esp+48h], esi
mov	[esp+44h], edi
mov	eax, [ebx+8]
mov	[esp+40h], eax
mov	eax, [ebx+4]
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 4
mov	dword ptr [esp+4], offset aInitiatingSock 
mov	dword ptr [esp], offset	aProxy_0 
call	purple_debug_info
mov	eax, [ebx+20h]
mov	[esp], eax
call	purple_proxy_info_get_port
mov	esi, eax
mov	eax, [ebx+20h]
mov	[esp], eax
call	purple_proxy_info_get_host
mov	[esp+14h], esi
mov	[esp+10h], eax
mov	eax, [ebx+10h]
mov	[esp+0Ch], eax
mov	eax, [ebx+0Ch]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aConnectingTo_0 
mov	dword ptr [esp], offset	aProxy_0 
call	purple_debug_info
mov	[ebx+14h], edi
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D016BB
mov	dword ptr [esp+48h], 2
mov	[esp+44h], edi
mov	[esp+40h], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	sub_67D0142C
mov	eax, [esp+2Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D016BB
mov	dword ptr [esp+44h], offset aDataHadGoneOut 
mov	dword ptr [esp+40h], offset aProxy_0 
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_error
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+40h]
test	eax, eax
jz	loc_67D0184C
mov	[esp+5Ch+var_58], offset aAbleToRead_ 
mov	[esp+5Ch+var_5C], offset aSocks5Proxy 
call	purple_debug_info
mov	edx, [ebx+48h]
mov	eax, [ebx+44h]
sub	eax, edx
mov	[esp+5Ch+var_54], eax 
add	edx, [ebx+40h]
mov	[esp+5Ch+var_58], edx 
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_5C], eax 
call	wpurple_read
cmp	eax, 0
jz	loc_67D017D0
jl	loc_67D017F8
add	eax, [ebx+48h]
mov	[ebx+48h], eax
cmp	eax, 1
jbe	short loc_67D0178C
mov	eax, [ebx+1Ch]
mov	[esp+5Ch+var_5C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx+40h]
cmp	byte ptr [eax],	5
jnz	short loc_67D017A0
mov	dl, [eax+1]
cmp	dl, 0FFh
jz	short loc_67D017A0
cmp	dl, 2
jz	loc_67D01870
cmp	dl, 3
jz	loc_67D01998
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	dword ptr [ebx+40h], 0
mov	esi, [esp+5Ch+var_20]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D017F0
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D00D04
align 4
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D017F0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	[esp+5Ch+var_58], offset aReceivedInvali 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	esi, [esp+5Ch+var_20]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D017F0
mov	edx, eax
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D00934
mov	[esp+5Ch+var_58], offset aServerClosedTh 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D017C0
			
call	__stack_chk_fail
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D0178C
call	_errno
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+5Ch+var_58], offset aLostConnection 
mov	[esp+5Ch+var_5C], offset aPidgin_9 
call	libintl_dgettext
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D017F0
mov	[esp+5Ch+arg_8], esi
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D00A38
align 4
mov	dword ptr [ebx+44h], 2
mov	[esp+5Ch+var_5C], 2
call	g_malloc
mov	[ebx+40h], eax
mov	dword ptr [ebx+48h], 0
jmp	loc_67D016E1
align 10h
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_username
mov	esi, eax
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_password
mov	ebp, eax
test	esi, esi
jz	loc_67D01A62
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	eax, [ecx-1]
mov	[esp+5Ch+var_38], eax
lea	edx, [ecx+2]
mov	[esp+5Ch+var_2E], al
inc	ecx
mov	[esp+5Ch+var_34], ecx
test	ebp, ebp
jz	loc_67D01A50
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
dec	ecx
mov	[esp+5Ch+var_3C], ecx
mov	[esp+5Ch+var_2D], cl
mov	eax, [esp+5Ch+var_3C]
add	eax, edx
mov	[ebx+34h], eax
mov	[esp+5Ch+var_5C], eax
mov	[esp+5Ch+var_40], edx
call	g_malloc
mov	[ebx+30h], eax
mov	dword ptr [ebx+38h], 0
mov	byte ptr [eax],	1
mov	cl, [esp+5Ch+var_2E]
mov	[eax+1], cl
test	esi, esi
mov	edx, [esp+5Ch+var_40]
jz	short loc_67D0190C
add	eax, 2
mov	edi, eax
mov	ecx, [esp+5Ch+var_38]
rep movsb
mov	eax, [ebx+30h]
mov	cl, [esp+5Ch+var_2D]
mov	esi, [esp+5Ch+var_34]
mov	[eax+esi], cl
test	ebp, ebp
jz	short loc_67D0192B
add	edx, [ebx+30h]
mov	edi, edx
mov	esi, ebp
mov	ecx, [esp+5Ch+var_3C]
rep movsb
mov	eax, [ebx+40h]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	dword ptr [ebx+40h], 0
mov	dword ptr [ebx+3Ch], offset loc_67D023EC
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_67D00C3C
mov	[esp+5Ch+var_58], 2
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_5C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D017F0
mov	[esp+5Ch+arg_8], 2
mov	eax, [ebx+14h]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D00C3C
align 4
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_username
mov	edi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	ebp, [ecx-1]
add	ecx, 6
mov	[ebx+34h], ecx
mov	[esp+5Ch+var_5C], ecx
call	g_malloc
mov	[ebx+30h], eax
mov	dword ptr [ebx+38h], 0
mov	byte ptr [eax],	1
mov	byte ptr [eax+1], 2
mov	byte ptr [eax+2], 11h
mov	byte ptr [eax+3], 1
mov	byte ptr [eax+4], 85h
mov	byte ptr [eax+5], 2
mov	edx, ebp
mov	[eax+6], dl
mov	eax, [ebx+20h]
mov	[esp+5Ch+var_5C], eax
call	purple_proxy_info_get_username
mov	edx, [ebx+30h]
add	edx, 7
mov	edi, edx
mov	esi, eax
mov	ecx, ebp
rep movsb
mov	eax, [ebx+40h]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	dword ptr [ebx+40h], 0
mov	dword ptr [ebx+3Ch], offset sub_67D01D08
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_67D00C3C
mov	[esp+5Ch+var_58], 2
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_5C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jz	loc_67D01976
jmp	loc_67D017F0
mov	[esp+5Ch+var_2D], 0
mov	[esp+5Ch+var_3C], 0
jmp	loc_67D018D0
mov	[esp+5Ch+var_34], 2
mov	[esp+5Ch+var_2E], 0
mov	edx, 3
mov	[esp+5Ch+var_38], 0
jmp	loc_67D018B2
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	esi, [ebx+40h]
test	esi, esi
jz	loc_67D01C44
mov	eax, [ebx+48h]
mov	edx, [ebx+44h]
sub	edx, eax
mov	[esp+8], edx
add	eax, esi
mov	[esp+4], eax
mov	eax, [ebx+14h]
mov	[esp], eax
call	wpurple_read
cmp	eax, 0
jz	short loc_67D01B38
jl	loc_67D01BE8
add	eax, [ebx+48h]
mov	[ebx+48h], eax
cmp	eax, 3
jbe	short loc_67D01B24
cmp	byte ptr [esi],	5
jz	loc_67D01B60
mov	dword ptr [esp+4], offset aBadData_ 
mov	dword ptr [esp], offset	aSocks5Proxy 
call	purple_debug_error
mov	dword ptr [esp+4], offset aReceivedInvali 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D01B58
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00934
align 4
			
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D01B58
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [esp+4], offset aServerClosedTh 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D01B13
			
call	__stack_chk_fail
align 10h
movzx	eax, byte ptr [esi+1]
test	al, al
jnz	short loc_67D01BA4
movzx	eax, byte ptr [esi+3]
cmp	al, 3
jz	loc_67D01C6C
cmp	al, 4
jz	loc_67D01CEC
cmp	al, 1
jz	loc_67D01CD1
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aInvalidAtypRec 
mov	dword ptr [esp], offset	aSocks5Proxy 
call	purple_debug_error
jmp	loc_67D01AF3
align 4
cmp	al, 8
ja	loc_67D01ADF
mov	eax, ds:off_67D3FEA0[eax*4]
mov	[esp+8], eax
mov	dword ptr [esp+4], offset aS_23	
mov	dword ptr [esp], offset	aSocks5Proxy 
call	purple_debug_error
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D01B58
movzx	eax, byte ptr [esi+1]
mov	edx, ds:off_67D3FEA0[eax*4]
jmp	loc_67D01B15
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_67D01B24
call	_errno
mov	eax, [eax]
mov	[esp], eax
call	wpurple_strerror
mov	esi, eax
mov	dword ptr [esp+4], offset aLostConnection 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D01B58
mov	[esp+38h], esi
mov	[esp+34h], eax
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00A38
align 4
mov	dword ptr [ebx+44h], 5
mov	dword ptr [esp], 5
call	g_malloc
mov	esi, eax
mov	[ebx+40h], eax
mov	dword ptr [ebx+48h], 0
xor	eax, eax
jmp	loc_67D01AA6
align 4
mov	edx, 5
mov	eax, ebx
call	sub_67CFF098
test	eax, eax
jz	loc_67D01B24
movzx	edx, byte ptr [esi+4]
add	edx, 5
mov	eax, ebx
call	sub_67CFF098
test	eax, eax
jz	loc_67D01B24
movzx	eax, byte ptr [esi+4]
lea	esi, [esi+eax+5]
xchg	ax, ax
			
sub	esi, [ebx+40h]
lea	edx, [esi+2]
mov	eax, ebx
call	sub_67CFF098
test	eax, eax
jz	loc_67D01B24
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D01B58
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00A8C
mov	edx, 8
mov	eax, ebx
call	sub_67CFF098
test	eax, eax
jz	loc_67D01B24
add	esi, 8
jmp	short loc_67D01CA0
align 4
mov	edx, 14h
mov	eax, ebx
call	sub_67CFF098
test	eax, eax
jz	loc_67D01B24
add	esi, 14h
jmp	short loc_67D01CA0
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 0CCh
mov	eax, [esp+0DCh+arg_0]
mov	[esp+0DCh+var_C0], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+0DCh+var_20], edx
xor	edx, edx
mov	[esp+0DCh+Size], offset	aGotChapRespons	
mov	[esp+0DCh+Src],	offset aSocks5Proxy 
mov	[esp+0DCh+Dst],	2
call	purple_debug
mov	eax, [esp+0DCh+var_C0]
mov	edx, [eax+40h]
test	edx, edx
jz	loc_67D023BA
mov	eax, [eax+48h]
mov	ecx, [esp+0DCh+var_C0]
mov	edx, [ecx+44h]
cmp	edx, eax
jz	loc_67D022CC
sub	edx, eax
mov	[esp+0DCh+Size], edx 
mov	edx, [esp+0DCh+var_C0]
add	eax, [edx+40h]
mov	[esp+0DCh+Src],	eax 
mov	eax, [edx+14h]
mov	[esp+0DCh+Dst],	eax 
call	wpurple_read
cmp	eax, 0
jz	loc_67D02269
jl	loc_67D02363
mov	edx, [esp+0DCh+var_C0]
add	eax, [edx+48h]
mov	[edx+48h], eax
cmp	eax, 1
jbe	loc_67D01EAF
mov	eax, [esp+0DCh+var_C0]
mov	edi, [eax+40h]
movzx	edx, byte ptr [edi]
mov	[esp+0DCh+Size], edx
mov	[esp+0DCh+Src],	offset aReadingChapMes 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_misc
cmp	byte ptr [edi],	1
jnz	loc_67D01FB0
mov	dl, [edi+1]
mov	byte ptr [esp+0DCh+var_B4], dl
movzx	ecx, dl
mov	[esp+0DCh+var_BC], ecx
mov	[esp+0DCh+Size], ecx
mov	[esp+0DCh+Src],	offset aExpectingDAttr 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_misc
lea	ebx, [edi+2]
mov	eax, [esp+0DCh+var_BC]
test	eax, eax
jz	loc_67D022EF
mov	eax, [esp+0DCh+var_C0]
mov	esi, [eax+40h]
mov	ebp, esi
sub	ebp, ebx
add	ebp, [eax+48h]
cmp	ebp, 1
jle	loc_67D023AF
mov	al, [edi+3]
movzx	edx, al
lea	ecx, [edx+2]
cmp	ecx, ebp
jg	loc_67D023AF
mov	ecx, [esp+0DCh+var_BC]
dec	ecx
mov	[esp+0DCh+var_BC], ecx
xor	esi, esi
lea	edi, [ebx+2]
test	al, al
movzx	eax, byte ptr [ebx]
jz	loc_67D01ED0
cmp	al, 1
jz	loc_67D01F5C
jnb	loc_67D01F2C
movzx	eax, byte ptr [ebx+2]
mov	[esp+0DCh+Size], eax
mov	[esp+0DCh+Src],	offset aReceivedStatus 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
cmp	byte ptr [ebx+2], 0
jz	loc_67D0222F
mov	[esp+0DCh+Src],	offset aSocks5ChapAuth 
mov	[esp+0DCh+Dst],	offset aProxy_0	
call	purple_debug_warning
mov	[esp+0DCh+Src],	offset aAuthentication 
			
mov	[esp+0DCh+Dst],	offset aPidgin_9 
call	libintl_dgettext
mov	edx, eax
mov	eax, [esp+0DCh+var_C0]
call	sub_67D00934
			
mov	edx, [esp+0DCh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D023E6
add	esp, 0CCh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+0DCh+Size], eax
mov	[esp+0DCh+Src],	offset aAttributeXValu 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_error
mov	ebx, edi
lea	ecx, [esi+1]
mov	[esp+0DCh+var_B8], ecx
cmp	esi, [esp+0DCh+var_BC]
jz	loc_67D022EF
mov	eax, [esp+0DCh+var_C0]
mov	esi, [eax+40h]
mov	ebp, esi
sub	ebp, ebx
add	ebp, [eax+48h]
cmp	ebp, 1
jle	loc_67D02276
mov	al, [ebx+1]
movzx	edx, al
lea	edi, [edx+2]
cmp	ebp, edi
jl	loc_67D02276
mov	esi, ecx
jmp	loc_67D01E3A
align 4
cmp	al, 3
jz	loc_67D01FBD
cmp	al, 11h
jz	short loc_67D01F7A
mov	[esp+0DCh+var_D0], edx
mov	[esp+0DCh+Size], eax
mov	[esp+0DCh+Src],	offset aReceivedUnused 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
			
movzx	ebx, byte ptr [ebx+1]
add	ebx, edi
jmp	short loc_67D01EEA
mov	[esp+0DCh+var_D0], edi
mov	[esp+0DCh+Size], edx
mov	[esp+0DCh+Src],	offset aReceivedTextMe 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
jmp	short loc_67D01F54
movzx	eax, byte ptr [ebx+2]
mov	[esp+0DCh+Size], eax
mov	[esp+0DCh+Src],	offset aReceivedAlgori 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
cmp	byte ptr [ebx+2], 85h
jz	short loc_67D01F54
mov	[esp+0DCh+Src],	offset aServerTriedToS 
mov	[esp+0DCh+Dst],	offset aProxy_0	
call	purple_debug_warning
mov	[esp+0DCh+Src],	offset aReceivedInvali 
jmp	loc_67D01E98
mov	[esp+0DCh+var_B8], edi
mov	[esp+0DCh+Src],	offset aReceivedChalle 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+34h], 14h
mov	[esp+0DCh+Dst],	14h
call	g_malloc
mov	edx, [esp+0DCh+var_C0]
mov	[edx+30h], eax
mov	dword ptr [edx+38h], 0
add	eax, 4
mov	[esp+0DCh+var_B4], eax
mov	eax, [edx+20h]
mov	[esp+0DCh+Dst],	eax
call	purple_proxy_info_get_password
mov	esi, eax
mov	bl, [ebx+1]
mov	[esp+0DCh+var_AD], bl
mov	[esp+0DCh+Dst],	offset aMd5_1 
call	purple_ciphers_find_cipher
mov	[esp+0DCh+Src],	0
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_new
mov	[esp+0DCh+var_BC], eax
lea	ebx, [esp+0DCh+var_A2]
xor	eax, eax
mov	ecx, 41h
mov	edi, ebx
rep stosb
lea	ebp, [esp+0DCh+var_61]
mov	cl, 41h
mov	edi, ebp
rep stosb
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	eax, [ecx-1]
cmp	eax, 40h
ja	loc_67D021F1
mov	edi, ebx
mov	ecx, eax
rep movsb
mov	edi, ebp
mov	esi, ebx
mov	ecx, eax
rep movsb
xor	eax, eax
lea	esi, [esi+0]
xor	byte ptr [ebx+eax], 36h
xor	byte ptr [ebp+eax+0], 5Ch
inc	eax
cmp	eax, 40h
jnz	short loc_67D02078
mov	[esp+0DCh+Src],	0
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_reset
mov	[esp+0DCh+Size], 40h
mov	[esp+0DCh+Src],	ebx
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_append
movzx	eax, [esp+0DCh+var_AD]
mov	[esp+0DCh+Size], eax
mov	edx, [esp+0DCh+var_B8]
mov	[esp+0DCh+Src],	edx
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_append
mov	[esp+0DCh+var_D0], 0
mov	[esp+0DCh+Size], ebx
mov	[esp+0DCh+Src],	41h
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_digest
mov	[esp+0DCh+Src],	0
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_reset
mov	[esp+0DCh+Size], 40h
mov	[esp+0DCh+Src],	ebp
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_append
mov	[esp+0DCh+Size], 10h
mov	[esp+0DCh+Src],	ebx
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_append
mov	[esp+0DCh+var_D0], 0
mov	edx, [esp+0DCh+var_B4]
mov	[esp+0DCh+Size], edx
mov	[esp+0DCh+Src],	10h
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_digest
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_destroy
mov	edx, [esp+0DCh+var_C0]
mov	eax, [edx+30h]
mov	byte ptr [eax],	1
mov	eax, [edx+30h]
mov	byte ptr [eax+1], 1
mov	eax, [edx+30h]
mov	byte ptr [eax+2], 4
mov	eax, [edx+30h]
mov	byte ptr [eax+3], 10h
mov	eax, [edx+1Ch]
mov	[esp+0DCh+Dst],	eax
call	purple_input_remove
mov	ecx, [esp+0DCh+var_C0]
mov	eax, [ecx+40h]
mov	[esp+0DCh+Dst],	eax
call	g_free
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+40h], 0
mov	dword ptr [eax+3Ch], offset sub_67D01D08
mov	[esp+0DCh+var_D0], eax
mov	[esp+0DCh+Size], offset	sub_67D00C3C
mov	[esp+0DCh+Src],	2
mov	eax, [eax+14h]
mov	[esp+0DCh+Dst],	eax
call	purple_input_add
mov	ecx, [esp+0DCh+var_C0]
mov	[ecx+1Ch], eax
mov	[esp+0DCh+Size], 2
mov	eax, [ecx+14h]
mov	[esp+0DCh+Src],	eax
mov	[esp+0DCh+Dst],	ecx
call	sub_67D00C3C
jmp	loc_67D01EAF
mov	[esp+0DCh+Size], eax
mov	[esp+0DCh+Src],	esi
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_append
mov	[esp+0DCh+var_D0], 0
mov	[esp+0DCh+Size], ebx
mov	[esp+0DCh+Src],	41h
mov	eax, [esp+0DCh+var_BC]
mov	[esp+0DCh+Dst],	eax
call	purple_cipher_context_digest
mov	eax, 10h
jmp	loc_67D0206B
mov	edx, [esp+0DCh+var_C0]
mov	eax, [edx+1Ch]
mov	[esp+0DCh+Dst],	eax
call	purple_input_remove
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+1Ch], 0
mov	eax, [eax+40h]
mov	[esp+0DCh+Dst],	eax
call	g_free
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+40h], 0
call	sub_67D00D04
jmp	loc_67D01EAF
mov	[esp+0DCh+Src],	offset aServerClosedTh 
jmp	loc_67D01E98
			
mov	edx, esi
mov	esi, [esp+0DCh+var_B8]
mov	eax, esi
mov	cl, byte ptr [esp+0DCh+var_B4]
sub	ecx, eax
mov	[edx+1], cl
mov	[esp+0DCh+Size], ebp 
mov	[esp+0DCh+Src],	ebx 
mov	eax, [esp+0DCh+var_C0]
mov	eax, [eax+40h]
mov	[esp+0DCh+var_C4], eax
add	eax, 2
mov	[esp+0DCh+Dst],	eax 
call	memmove
add	ebp, 2
mov	eax, [esp+0DCh+var_C0]
mov	[eax+48h], ebp
mov	[esp+0DCh+Size], esi
mov	[esp+0DCh+Src],	offset aNeedMoreDataTo 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
jmp	loc_67D01EAF
mov	[esp+0DCh+Src],	offset aThisIsAboutToS 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_error
mov	eax, [esp+0DCh+var_C0]
mov	edx, [eax+44h]
mov	eax, [eax+48h]
jmp	loc_67D01D69
			
mov	edx, [esp+0DCh+var_C0]
mov	eax, [edx+40h]
sub	ebx, eax
js	loc_67D01EAF
mov	esi, [edx+48h]
sub	esi, ebx
test	esi, esi
jle	short loc_67D02330
mov	[esp+0DCh+Size], esi 
add	ebx, eax
mov	[esp+0DCh+Src],	ebx 
mov	[esp+0DCh+Dst],	eax 
call	memmove
mov	eax, [esp+0DCh+var_C0]
mov	[eax+48h], esi
cmp	esi, 1
ja	loc_67D01DA7
jmp	loc_67D01EAF
align 10h
mov	[esp+0DCh+Src],	offset aWaitingForAnot 
mov	[esp+0DCh+Dst],	offset aSocks5Proxy 
call	purple_debug_info
mov	edx, [esp+0DCh+var_C0]
mov	eax, [edx+40h]
mov	[esp+0DCh+Dst],	eax
call	g_free
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+40h], 0
jmp	loc_67D01EAF
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_67D01EAF
call	_errno
mov	eax, [eax]
mov	[esp+0DCh+Dst],	eax
call	wpurple_strerror
mov	ebx, eax
mov	[esp+0DCh+Src],	offset aLostConnection 
mov	[esp+0DCh+Dst],	offset aPidgin_9 
call	libintl_dgettext
mov	[esp+0DCh+Size], ebx
mov	[esp+0DCh+Src],	eax
mov	eax, [esp+0DCh+var_C0]
mov	[esp+0DCh+Dst],	eax
call	sub_67D00A38
jmp	loc_67D01EAF
			
mov	edx, esi
xor	eax, eax
xor	esi, esi
jmp	loc_67D0227E
mov	eax, [esp+0DCh+var_C0]
mov	dword ptr [eax+44h], 103h
mov	[esp+0DCh+Dst],	103h
call	g_malloc
mov	edx, [esp+0DCh+var_C0]
mov	[edx+40h], eax
mov	dword ptr [edx+48h], 0
xor	eax, eax
jmp	loc_67D01D5A
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	ecx, [ebx+40h]
test	ecx, ecx
jz	loc_67D0255C
mov	dword ptr [esp+4], offset aGotAuthRespons 
mov	dword ptr [esp], offset	aSocks5Proxy 
call	purple_debug_info
mov	edx, [ebx+48h]
mov	eax, [ebx+44h]
sub	eax, edx
mov	[esp+8], eax
add	edx, [ebx+40h]
mov	[esp+4], edx
mov	eax, [ebx+14h]
mov	[esp], eax
call	wpurple_read
cmp	eax, 0
jz	short loc_67D024B8
jl	loc_67D02508
add	eax, [ebx+48h]
mov	[ebx+48h], eax
cmp	eax, 1
jbe	short loc_67D024A4
mov	eax, [ebx+1Ch]
mov	[esp], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
mov	eax, [ebx+40h]
cmp	byte ptr [eax],	1
jnz	short loc_67D02473
cmp	byte ptr [eax+1], 0
jz	short loc_67D024E0
mov	dword ptr [esp+4], offset aReceivedInvali 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D024D8
mov	edx, eax
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00934
align 4
			
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D024D8
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [esp+4], offset aServerClosedTh 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D02493
			
call	__stack_chk_fail
align 10h
mov	[esp], eax
call	g_free
mov	dword ptr [ebx+40h], 0
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D024D8
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00D04
align 4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D024A4
call	_errno
mov	eax, [eax]
mov	[esp], eax
call	wpurple_strerror
mov	esi, eax
mov	dword ptr [esp+4], offset aLostConnection 
mov	dword ptr [esp], offset	aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D024D8
mov	[esp+38h], esi
mov	[esp+34h], eax
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D00A38
align 4
mov	dword ptr [ebx+44h], 2
mov	dword ptr [esp], 2
call	g_malloc
mov	[ebx+40h], eax
mov	dword ptr [ebx+48h], 0
jmp	loc_67D0240B
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	dword ptr [esp+2Ch+var_14], 274Ch
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_20], eax
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aConnectedToSD_ 
mov	[esp+2Ch+var_2C], offset aProxy_0 
call	purple_debug_info
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	short loc_67D02620
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax 
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax 
call	purple_input_get_error
test	eax, eax
jz	short loc_67D02608
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+2Ch+var_14], eax
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	edx, eax
mov	eax, ebx
call	sub_67D00934
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D02651
add	esp, 28h
pop	ebx
retn
mov	eax, dword ptr [esp+2Ch+var_14]
test	eax, eax
jnz	short loc_67D025E6
cmp	dword ptr [ebx+10h], 50h
jz	short loc_67D02634
mov	eax, ebx
call	sub_67D00DC8
jmp	short loc_67D025F7
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
mov	dword ptr [ebx+1Ch], 0
jmp	short loc_67D025C4
align 4
mov	[esp+2Ch+var_28], offset aHttpProxyConne 
mov	[esp+2Ch+var_2C], offset aProxy_0 
call	purple_debug_info
mov	eax, ebx
call	sub_67D00A8C
jmp	short loc_67D025F7
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	esi, edx
mov	edi, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_4C], eax
call	purple_proxy_info_get_port
mov	ebp, eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_4C], eax
call	purple_proxy_info_get_host
test	eax, eax
jz	loc_67D027D4
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_4C], eax
call	purple_proxy_info_get_host
mov	[esp+4Ch+var_38], ebp
mov	[esp+4Ch+var_3C], eax
mov	eax, [ebx+10h]
mov	[esp+4Ch+var_40], eax
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aConnectingTo_1 
mov	[esp+4Ch+var_4C], offset aProxy_0 
call	purple_debug_info
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 1
movzx	eax, word ptr [esi]
mov	[esp+4Ch+var_4C], eax
call	wpurple_socket
mov	[ebx+14h], eax
test	eax, eax
js	loc_67D027E0
mov	[esp+4Ch+var_4C], eax
call	_purple_network_set_common_socket_flags
mov	[esp+4Ch+var_44], edi 
mov	[esp+4Ch+var_48], esi 
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax 
call	wpurple_connect
test	eax, eax
jnz	short loc_67D02750
mov	[esp+4Ch+var_48], offset aConnectedImmed 
mov	[esp+4Ch+var_4C], offset aProxy_0 
call	purple_debug_info
mov	[esp+4Ch+var_44], 2
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_67D02580
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0281A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	_errno
cmp	dword ptr [eax], 2734h
jz	short loc_67D02798
call	_errno
cmp	dword ptr [eax], 4
jz	short loc_67D02798
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0281A
mov	edx, eax
mov	eax, ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D00934
align 4
			
mov	[esp+4Ch+var_48], offset aConnectionInPr 
mov	[esp+4Ch+var_4C], offset aProxy_0 
call	purple_debug_info
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], offset sub_67D02580
mov	[esp+4Ch+var_48], 2
mov	eax, [ebx+14h]
mov	[esp+4Ch+var_4C], eax
call	purple_input_add
mov	[ebx+1Ch], eax
jmp	loc_67D02735
align 4
mov	eax, offset aNull_2 
jmp	loc_67D0269B
align 10h
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+4Ch+var_48], offset aUnableToCrea_2 
mov	[esp+4Ch+var_4C], offset aPidgin_9 
call	libintl_dgettext
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	sub_67D00A38
jmp	loc_67D02735
			
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+28h]
mov	edx, [eax]
mov	[esp+8Ch+var_60], edx
mov	[esp+8Ch+var_88], edx
mov	dword ptr [esp+8Ch+in.S_un], eax
call	g_slist_remove
mov	[ebx+28h], eax
mov	ebp, [eax]
mov	[esp+8Ch+var_88], ebp
mov	dword ptr [esp+8Ch+in.S_un], eax
call	g_slist_remove
mov	[ebx+28h], eax
mov	eax, [ebp+4]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	inet_ntoa
push	esi
lea	edi, [esp+8Ch+var_4E]
mov	ecx, 2Eh
mov	esi, eax
rep movsb
lea	eax, [esp+8Ch+var_4E]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aAttemptingConn 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
cmp	dword ptr [ebx+18h], 2
jz	loc_67D02B4C
mov	eax, [ebx+20h]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_proxy_info_get_type
cmp	eax, 5		
jbe	short loc_67D028CC
			
mov	dword ptr [esp+8Ch+in.S_un], ebp 
call	g_free
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D02D39
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_67D3F6E8[eax*4] 
align 4
			
mov	ecx, [esp+8Ch+var_60] 
mov	edx, ebp
mov	eax, ebx
call	sub_67D02658
jmp	short loc_67D028AC 
align 4
			
mov	eax, [ebx+20h]	
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_proxy_info_get_port
mov	esi, eax
mov	eax, [ebx+20h]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_proxy_info_get_host
mov	[esp+8Ch+var_78], esi
mov	[esp+8Ch+var_7C], eax
mov	eax, [ebx+10h]
mov	[esp+8Ch+var_80], eax
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aConnectingTo_2 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 1
movzx	eax, word ptr [ebp+0]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_socket
mov	[ebx+14h], eax
test	eax, eax
js	loc_67D02BF0
mov	dword ptr [esp+8Ch+in.S_un], eax
call	_purple_network_set_common_socket_flags
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_84], eax 
mov	[esp+8Ch+var_88], ebp 
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	wpurple_connect
test	eax, eax
jz	loc_67D02C9C
call	_errno
cmp	dword ptr [eax], 2734h
jz	short loc_67D0298F
call	_errno
cmp	dword ptr [eax], 4
jnz	loc_67D02BD3
mov	[esp+8Ch+var_88], offset aConnectionIn_0 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], offset sub_67D00FFC
jmp	loc_67D02B2F
			
mov	eax, [ebx+20h]	
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_proxy_info_get_port
mov	esi, eax
mov	eax, [ebx+20h]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_proxy_info_get_host
mov	[esp+8Ch+var_78], esi
mov	[esp+8Ch+var_7C], eax
mov	eax, [ebx+10h]
mov	[esp+8Ch+var_80], eax
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aConnectingTo_0 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 1
movzx	eax, word ptr [ebp+0]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_socket
mov	[ebx+14h], eax
test	eax, eax
js	loc_67D02BF0
mov	dword ptr [esp+8Ch+in.S_un], eax
call	_purple_network_set_common_socket_flags
mov	edx, [esp+8Ch+var_60]
mov	[esp+8Ch+var_84], edx 
mov	[esp+8Ch+var_88], ebp 
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	wpurple_connect
test	eax, eax
jz	loc_67D02CCC
call	_errno
cmp	dword ptr [eax], 2734h
jz	short loc_67D02A5F
call	_errno
cmp	dword ptr [eax], 4
jnz	loc_67D02BD3
mov	[esp+8Ch+var_88], offset aConnectionInPr 
mov	dword ptr [esp+8Ch+in.S_un], offset aSocks5Proxy 
call	purple_debug_info
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], offset sub_67D0142C
jmp	loc_67D02B2F
			
mov	eax, [ebx+10h]	
mov	[esp+8Ch+var_80], eax
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aConnectingTo_3 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 1
movzx	eax, word ptr [ebp+0]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_socket
mov	[ebx+14h], eax
test	eax, eax
js	loc_67D02BF0
mov	dword ptr [esp+8Ch+in.S_un], eax
call	_purple_network_set_common_socket_flags
mov	edx, [esp+8Ch+var_60]
mov	[esp+8Ch+var_84], edx 
mov	[esp+8Ch+var_88], ebp 
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	wpurple_connect
test	eax, eax
jz	loc_67D02CFC
call	_errno
cmp	dword ptr [eax], 2734h
jz	short loc_67D02B0F
call	_errno
cmp	dword ptr [eax], 4
jnz	loc_67D02BD3
mov	[esp+8Ch+var_88], offset aConnectionInPr 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], offset sub_67D00B34
			
mov	[esp+8Ch+var_88], 2
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	purple_input_add
mov	[ebx+1Ch], eax
jmp	loc_67D028AC	
align 4
mov	eax, [ebx+10h]
mov	[esp+8Ch+var_80], eax
mov	eax, [ebx+0Ch]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+var_88], offset aUdpConnectingT 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 0
mov	[esp+8Ch+var_88], 2
movzx	eax, word ptr [ebp+0]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_socket
mov	[ebx+14h], eax
test	eax, eax
js	short loc_67D02BF0
mov	dword ptr [esp+8Ch+in.S_un], eax
call	_purple_network_set_common_socket_flags
mov	eax, [esp+8Ch+var_60]
mov	[esp+8Ch+var_84], eax 
mov	[esp+8Ch+var_88], ebp 
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	wpurple_connect
test	eax, eax
jz	short loc_67D02C2C
call	_errno
cmp	dword ptr [eax], 2734h
jz	loc_67D02D14
call	_errno
cmp	dword ptr [eax], 4
jz	loc_67D02D14
			
call	_errno
mov	eax, [eax]
			
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_strerror
mov	edx, eax
mov	eax, ebx
call	sub_67D00934
jmp	loc_67D028AC	
			
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+8Ch+in.S_un], eax
call	wpurple_strerror
mov	esi, eax
mov	[esp+8Ch+var_88], offset aUnableToCrea_2 
mov	dword ptr [esp+8Ch+in.S_un], offset aPidgin_9 
call	libintl_dgettext
mov	[esp+8Ch+var_84], esi
mov	[esp+8Ch+var_88], eax
mov	dword ptr [esp+8Ch+in.S_un], ebx
call	sub_67D00A38
jmp	loc_67D028AC	
align 4
mov	dword ptr [esp+8Ch+var_54], 274Ch
mov	[esp+8Ch+var_88], offset aUdpConnectedIm 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
lea	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+var_88], eax 
mov	eax, [ebx+14h]
mov	dword ptr [esp+8Ch+in.S_un], eax 
call	purple_input_get_error
test	eax, eax
jz	short loc_67D02C70
call	_errno
mov	eax, [eax]
mov	dword ptr [esp+8Ch+var_54], eax
jmp	loc_67D02BDA
align 10h
mov	eax, dword ptr [esp+8Ch+var_54]
test	eax, eax
jnz	loc_67D02BDA
mov	[esp+8Ch+var_84], ebx
mov	[esp+8Ch+var_88], offset sub_67D00B04
mov	dword ptr [esp+8Ch+in.S_un], 0Ah
call	purple_timeout_add
jmp	loc_67D028AC	
align 4
mov	[esp+8Ch+var_88], offset aConnectedImmed 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 2
mov	eax, [ebx+14h]
mov	[esp+8Ch+var_88], eax
mov	dword ptr [esp+8Ch+in.S_un], ebx
call	sub_67D00FFC
jmp	loc_67D028AC	
mov	[esp+8Ch+var_88], offset aConnectedImmed 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_84], 2
mov	eax, [ebx+14h]
mov	[esp+8Ch+var_88], eax
mov	dword ptr [esp+8Ch+in.S_un], ebx
call	sub_67D0142C
jmp	loc_67D028AC	
mov	dword ptr [esp+8Ch+var_54], 274Ch
mov	[esp+8Ch+var_88], offset aConnectedImmed 
jmp	loc_67D02C3C
align 4
			
mov	[esp+8Ch+var_88], offset aUdpConnectionI 
mov	dword ptr [esp+8Ch+in.S_un], offset aProxy_0 
call	purple_debug_info
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], offset sub_67D00B34
jmp	loc_67D02B2F
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	ebp, [esp+15Ch+arg_0]
mov	edx, [esp+15Ch+arg_8]
mov	[esp+15Ch+var_134], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+40h]
test	eax, eax
jz	loc_67D0304C
mov	ebx, [ebp+48h]
add	eax, ebx
mov	[esp+15Ch+Src],	eax
not	ebx
add	ebx, [ebp+44h]
mov	[esp+15Ch+Radix], ebx 
mov	[esp+15Ch+Val],	eax 
mov	eax, [ebp+14h]
mov	[esp+15Ch+Str],	eax 
call	wpurple_read
mov	esi, eax
cmp	eax, 0
jz	loc_67D02EB4
jl	loc_67D02FC8
add	[ebp+48h], eax
mov	eax, [esp+15Ch+Src]
mov	byte ptr [eax+esi], 0
mov	[esp+15Ch+Radix], offset asc_67D3F700 
mov	eax, [ebp+48h]
mov	[esp+15Ch+Val],	eax
mov	eax, [ebp+40h]
mov	[esp+15Ch+Str],	eax
call	g_strstr_len
mov	[esp+15Ch+Src],	eax
test	eax, eax
jz	loc_67D02FB8
mov	byte ptr [eax],	0
mov	edx, [ebp+40h]
mov	ebx, [esp+15Ch+Src]
add	ebx, 4
sub	ebx, edx
mov	edi, offset aHttp_2 
mov	ecx, 5
mov	esi, edx
repe cmpsb
jz	loc_67D02FF4
mov	[esp+15Ch+var_130], 1
mov	[esp+15Ch+var_138], 0
			
mov	[esp+15Ch+Val],	offset aContentLength 
mov	[esp+15Ch+Str],	edx
call	g_strrstr
test	eax, eax
jz	loc_67D0303C
lea	edi, [eax+10h]
mov	[esp+15Ch+Src],	edi
mov	[esp+15Ch+Val],	0Dh 
mov	[esp+15Ch+Str],	edi 
call	strchr
mov	esi, eax
test	eax, eax
jz	loc_67D033FE
mov	byte ptr [eax],	0
lea	eax, [esp+15Ch+var_124]
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	offset aU_0 
mov	eax, [esp+15Ch+Src]
mov	[esp+15Ch+Str],	eax 
call	sscanf
dec	eax
jz	loc_67D02EF0
mov	eax, [esp+15Ch+Src]
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	offset aCouldnTReadCon 
mov	[esp+15Ch+Str],	offset aProxy_0	
call	purple_debug_error
mov	byte ptr [esi],	0Dh
			
mov	ebx, [ebp+40h]
mov	[esp+15Ch+Val],	offset aUnableToParseR 
			
mov	[esp+15Ch+Str],	offset aPidgin_9 
call	libintl_dgettext
mov	[esp+15Ch+Radix], ebx
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	ebp
call	sub_67D00A38
jmp	short loc_67D02ED1
align 4
mov	[esp+15Ch+Val],	offset aServerClosedTh 
mov	[esp+15Ch+Str],	offset aPidgin_9 
call	libintl_dgettext
mov	edx, eax
mov	eax, ebp
call	sub_67D00934
			
mov	eax, [esp+15Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D033F9
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	byte ptr [esi],	0Dh
mov	eax, [esp+15Ch+var_124]
add	eax, ebx
sub	eax, [ebp+48h]
lea	ebx, [esp+15Ch+var_129]
jmp	short loc_67D02F08
align 4
			
mov	eax, [esp+15Ch+var_124]
lea	edx, [eax-1]
mov	[esp+15Ch+var_124], edx
test	eax, eax
jz	short loc_67D02F38
mov	[esp+15Ch+Radix], 1 
mov	[esp+15Ch+Val],	ebx 
mov	eax, [ebp+14h]
mov	[esp+15Ch+Str],	eax 
call	wpurple_read
test	eax, eax
jns	short loc_67D02F04
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D02F04
			
mov	edi, [esp+15Ch+var_130]
test	edi, edi
jnz	loc_67D02E89
cmp	[esp+15Ch+var_138], 0C8h
jz	loc_67D03070
mov	eax, [ebp+40h]
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	offset aProxyServerRep 
mov	[esp+15Ch+Str],	offset aProxy_0	
call	purple_debug_error
cmp	[esp+15Ch+var_138], 197h
jz	loc_67D03120
cmp	[esp+15Ch+var_138], 193h
jz	loc_67D03110
mov	[esp+15Ch+Val],	offset aHttpProxyCon_0 
mov	[esp+15Ch+Str],	offset aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+15Ch+var_138]
mov	[esp+15Ch+Radix], edx
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	ebp
call	sub_67D00A38
jmp	loc_67D02ED1
align 4
cmp	ebx, esi
jnz	loc_67D02ED1
mov	edx, [ebp+40h]
jmp	loc_67D02DE7
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_67D02ED1
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+Str],	eax
call	wpurple_strerror
mov	ebx, eax
mov	[esp+15Ch+Val],	offset aLostConnection 
jmp	loc_67D02E94
add	edx, 5
mov	[esp+15Ch+Src],	edx
mov	[esp+15Ch+Radix], 0Ah 
lea	esi, [esp+15Ch+Src]
mov	[esp+15Ch+Val],	esi 
mov	[esp+15Ch+Str],	edx 
call	strtol
test	eax, eax
jz	short loc_67D03024
mov	eax, [esp+15Ch+Src]
cmp	byte ptr [eax],	2Eh
jz	loc_67D030B4
			
mov	edx, [ebp+40h]
mov	[esp+15Ch+var_130], 1
mov	[esp+15Ch+var_138], 0
jmp	loc_67D02E0B
mov	[esp+15Ch+Src],	0
jmp	loc_67D02F38
align 4
mov	dword ptr [ebp+44h], 2000h
mov	[esp+15Ch+Str],	2000h
call	g_malloc
mov	[ebp+40h], eax
mov	dword ptr [ebp+48h], 0
xor	ebx, ebx
jmp	loc_67D02D78
mov	eax, [ebp+1Ch]
mov	[esp+15Ch+Str],	eax
call	purple_input_remove
mov	dword ptr [ebp+1Ch], 0
mov	eax, [ebp+40h]
mov	[esp+15Ch+Str],	eax
call	g_free
mov	dword ptr [ebp+40h], 0
mov	[esp+15Ch+Val],	offset aHttpProxyConne 
mov	[esp+15Ch+Str],	offset aProxy_0	
call	purple_debug_info
mov	eax, ebp
call	sub_67D00A8C
jmp	loc_67D02ED1
inc	eax
mov	[esp+15Ch+Src],	eax
mov	[esp+15Ch+Radix], 0Ah 
mov	[esp+15Ch+Val],	esi 
mov	[esp+15Ch+Str],	eax 
call	strtol
mov	eax, [esp+15Ch+Src]
cmp	byte ptr [eax],	20h
jnz	loc_67D03024
inc	eax
mov	[esp+15Ch+Src],	eax
mov	[esp+15Ch+Radix], 0Ah 
mov	[esp+15Ch+Val],	esi 
mov	[esp+15Ch+Str],	eax 
call	strtol
mov	[esp+15Ch+var_138], eax
mov	eax, [esp+15Ch+Src]
xor	edx, edx
cmp	byte ptr [eax],	20h
setnz	dl
mov	[esp+15Ch+var_130], edx
mov	edx, [ebp+40h]
jmp	loc_67D02E0B
align 10h
mov	ebx, [ebp+10h]
mov	[esp+15Ch+Val],	offset aAccessDeniedHt 
jmp	loc_67D02E94
mov	[esp+15Ch+Val],	offset aProxyAuthentic 
mov	eax, [ebp+40h]
mov	[esp+15Ch+Str],	eax
call	g_strrstr
mov	esi, eax
test	eax, eax
jz	loc_67D03306
mov	eax, [ebp+20h]
mov	[esp+15Ch+Str],	eax
call	purple_proxy_info_get_username
mov	ebx, eax
mov	[esp+15Ch+Val],	100h 
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+Str],	eax 
call	wpurple_gethostname
mov	[esp+15Ch+var_21], 0
test	eax, eax
js	short loc_67D03171
cmp	[esp+15Ch+var_120], 0
jnz	short loc_67D031A1
mov	[esp+15Ch+Val],	offset aGethostnameFai 
mov	[esp+15Ch+Str],	offset aProxy_0	
call	purple_debug_warning
mov	[esp+15Ch+Radix], 100h
mov	[esp+15Ch+Val],	offset aLocalhost 
lea	edx, [esp+15Ch+var_120]
mov	[esp+15Ch+Str],	edx
call	g_strlcpy
test	ebx, ebx
jz	loc_67D033B8
mov	[esp+15Ch+Val],	5Ch 
mov	[esp+15Ch+Str],	ebx 
call	strchr
mov	edi, eax
test	eax, eax
jz	loc_67D033B8
mov	byte ptr [eax],	0
cmp	byte ptr [esi+18h], 20h
jnz	loc_67D032EF
lea	ecx, [esi+19h]
lea	edx, [eax+1]
mov	[esp+15Ch+var_138], edx
mov	al, [esi]
mov	edx, esi
cmp	al, 0Dh
jnz	short loc_67D031EB
jmp	short loc_67D031EF
inc	edx
mov	al, [edx]
cmp	al, 0Dh
jz	short loc_67D031EF
test	al, al
jnz	short loc_67D031E4
			
mov	byte ptr [edx],	0
mov	[esp+15Ch+Val],	0
mov	[esp+15Ch+Str],	ecx
call	purple_ntlm_parse_type2
mov	edx, eax
mov	eax, [ebp+20h]
mov	[esp+15Ch+Str],	eax
mov	[esp+15Ch+var_13C], edx
call	purple_proxy_info_get_password
mov	[esp+15Ch+var_148], 0
mov	edx, [esp+15Ch+var_13C]
mov	[esp+15Ch+var_14C], edx
mov	[esp+15Ch+var_150], ebx
lea	edx, [esp+15Ch+var_120]
mov	[esp+15Ch+Radix], edx
mov	[esp+15Ch+Val],	eax
mov	edx, [esp+15Ch+var_138]
mov	[esp+15Ch+Str],	edx
call	purple_ntlm_gen_type3
mov	ebx, eax
mov	byte ptr [edi],	5Ch
mov	edx, [ebp+10h]
mov	eax, [ebp+0Ch]
mov	[esp+15Ch+var_148], ebx
mov	[esp+15Ch+var_14C], edx
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Radix], edx
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	offset aConnectSDHtt_0 
call	g_strdup_printf
mov	edi, eax
mov	[esp+15Ch+Str],	ebx
call	g_free
mov	eax, [ebp+1Ch]
mov	[esp+15Ch+Str],	eax
call	purple_input_remove
mov	eax, [ebp+40h]
mov	[esp+15Ch+Str],	eax
call	g_free
mov	dword ptr [ebp+40h], 0
mov	[ebp+30h], edi
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
dec	ecx
mov	[ebp+34h], ecx
mov	dword ptr [ebp+38h], 0
mov	dword ptr [ebp+3Ch], offset sub_67D02D40
mov	[esp+15Ch+var_150], ebp
mov	[esp+15Ch+Radix], offset sub_67D00C3C
mov	[esp+15Ch+Val],	2
mov	eax, [ebp+14h]
mov	[esp+15Ch+Str],	eax
call	purple_input_add
mov	[ebp+1Ch], eax
mov	edx, [esp+15Ch+var_134]
mov	[esp+15Ch+Radix], edx
mov	eax, [ebp+14h]
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	ebp
call	sub_67D00C3C
jmp	loc_67D02ED1
mov	[esp+15Ch+Val],	ebx
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+Str],	eax
call	purple_ntlm_gen_type1
mov	ebx, eax
jmp	loc_67D03241
mov	[esp+15Ch+Val],	offset aProxyAuthent_0 
mov	eax, [ebp+40h]
mov	[esp+15Ch+Str],	eax
call	g_strrstr
test	eax, eax
jz	loc_67D033B8
mov	eax, [ebp+20h]
mov	[esp+15Ch+Str],	eax
call	purple_proxy_info_get_username
mov	ebx, eax
mov	eax, [ebp+20h]
mov	[esp+15Ch+Str],	eax
call	purple_proxy_info_get_password
test	eax, eax
jz	loc_67D033EF
test	ebx, ebx
jz	loc_67D033E5
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	ebx
mov	[esp+15Ch+Str],	offset aSS_2 
call	g_strdup_printf
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+15Ch+Val],	ecx
mov	[esp+15Ch+Str],	esi
call	purple_base64_encode
mov	ebx, eax
mov	[esp+15Ch+Str],	esi
call	g_free
mov	edx, [ebp+10h]
mov	eax, [ebp+0Ch]
mov	[esp+15Ch+var_148], ebx
mov	[esp+15Ch+var_14C], edx
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+Radix], edx
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	offset aConnectSDHtt_1 
call	g_strdup_printf
mov	edi, eax
mov	[esp+15Ch+Str],	ebx
call	g_free
jmp	loc_67D03274
			
mov	[esp+15Ch+Val],	offset aHttpProxyCon_0 
mov	[esp+15Ch+Str],	offset aPidgin_9 
call	libintl_dgettext
mov	[esp+15Ch+Radix], 197h
mov	[esp+15Ch+Val],	eax
mov	[esp+15Ch+Str],	ebp
call	sub_67D00A38
jmp	loc_67D02ED1
mov	ebx, offset byte_67D3EFED
jmp	loc_67D03349
mov	eax, offset byte_67D3EFED
jmp	loc_67D03341
call	__stack_chk_fail
lea	eax, [esp+15Ch+var_124]
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	offset aU_0 
mov	[esp+15Ch+Str],	edi 
call	sscanf
dec	eax
jz	loc_67D02EF3
mov	eax, [esp+15Ch+Src]
mov	[esp+15Ch+Radix], eax
mov	[esp+15Ch+Val],	offset aCouldnTReadCon 
mov	[esp+15Ch+Str],	offset aProxy_0	
call	purple_debug_error
jmp	loc_67D02E89
align 10h
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
mov	dword ptr [ebx+24h], 0
test	edx, edx
jz	short loc_67D03480
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D034C4
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67D00934
align 10h
test	eax, eax
jz	short loc_67D034A0
mov	[ebx+28h], eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D034C4
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	loc_67D02820
align 10h
mov	[esp+2Ch+var_28], offset aUnableToResolv 
mov	[esp+2Ch+var_2C], offset aPidgin_9 
call	libintl_dgettext
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D034C4
mov	edx, eax
jmp	short loc_67D03473
			
call	__stack_chk_fail
align 4
public purple_proxy_connect_cancel_with_handle
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722C0
test	eax, eax
jz	short loc_67D034FB
lea	esi, [esi+0]
mov	edx, [eax]
mov	esi, [eax+4]
cmp	[edx], ebx
jz	short loc_67D03510
mov	eax, esi
test	esi, esi
jnz	short loc_67D034EC
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0351A
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_2C], edx
call	purple_proxy_connect_cancel
jmp	short loc_67D034F5
call	__stack_chk_fail
align 10h
public purple_proxy_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D722C4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03543
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_proxy_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_proxy_info_new
mov	ds:dword_67D72288, eax
mov	[esp+2Ch+var_2C], offset aPurpleProxy 
call	purple_prefs_add_none
mov	[esp+2Ch+var_28], offset aNone_0 
mov	[esp+2Ch+var_2C], offset aPurpleProxyTyp 
call	purple_prefs_add_string
mov	[esp+2Ch+var_28], offset byte_67D3EFED
mov	[esp+2Ch+var_2C], offset aPurpleProxyHos 
call	purple_prefs_add_string
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset aPurpleProxyPor 
call	purple_prefs_add_int
mov	[esp+2Ch+var_28], offset byte_67D3EFED
mov	[esp+2Ch+var_2C], offset aPurpleProxyUse 
call	purple_prefs_add_string
mov	[esp+2Ch+var_28], offset byte_67D3EFED
mov	[esp+2Ch+var_2C], offset aPurpleProxyPas 
call	purple_prefs_add_string
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset aPurpleProxySoc 
call	purple_prefs_add_bool
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset loc_67CFF4B8
mov	[esp+2Ch+var_28], offset aPurpleProxyTyp 
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset loc_67CFF4B8
mov	[esp+2Ch+var_28], offset aPurpleProxyHos 
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset loc_67CFF4B8
mov	[esp+2Ch+var_28], offset aPurpleProxyPor 
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset loc_67CFF4B8
mov	[esp+2Ch+var_28], offset aPurpleProxyUse 
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset loc_67CFF4B8
mov	[esp+2Ch+var_28], offset aPurpleProxyPas 
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_2C], offset aPurpleProxyTyp 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleProxyHos 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleProxyPor 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleProxyUse 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleProxyPas 
call	purple_prefs_trigger_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D036E4
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_proxy_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722C0
test	eax, eax
jz	short loc_67D03722
nop
xor	edx, edx
mov	eax, [eax]
call	sub_67D00934
mov	eax, ds:dword_67D722C0
mov	eax, [eax]
call	sub_67CFEFFC
mov	eax, ds:dword_67D722C0
test	eax, eax
jnz	short loc_67D03704
mov	[esp+2Ch+var_2C], offset dword_67D722C4
call	purple_prefs_disconnect_by_handle
mov	eax, ds:dword_67D72288
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_info_destroy
mov	ds:dword_67D72288, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D03755
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_attention_type_set_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D0378C
mov	[eax], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D037AA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_attenti 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D03779
call	__stack_chk_fail
align 10h
public purple_attention_type_set_incoming_desc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D037E0
mov	[eax+4], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D037FE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D037CE
call	__stack_chk_fail
align 4
public purple_attention_type_set_outgoing_desc
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D03834
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D03852
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D03822
call	__stack_chk_fail
align 4
public purple_attention_type_set_icon_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D03888
mov	[eax+0Ch], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D038A6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D03876
call	__stack_chk_fail
align 4
public purple_attention_type_set_unlocalized_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D038DC
mov	[eax+10h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D038FA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D038CA
call	__stack_chk_fail
align 10h
public purple_attention_type_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 20h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	purple_attention_type_set_name
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], ebx
call	purple_attention_type_set_incoming_desc
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_attention_type_set_outgoing_desc
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_attention_type_set_unlocalized_name
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0397E
mov	eax, ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_attention_type_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D039B0
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D039D0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0399D
call	__stack_chk_fail
align 4
public purple_attention_type_get_incoming_desc
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D03A04
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03A24
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D039F2
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, eax
mov	ebp, edx
mov	ebx, ecx
mov	edi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], edi
mov	eax, [esi+0Ch]
mov	[esp+5Ch+Time],	eax
call	purple_get_attention_type_from_code
mov	edi, eax
mov	[esp+5Ch+Time],	esi
call	purple_connection_get_account
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67D03B3C
mov	[esp+5Ch+Time],	eax
call	purple_buddy_get_contact_alias
mov	[esp+5Ch+var_30], eax
test	edi, edi
jz	loc_67D03B20
mov	[esp+5Ch+Time],	edi
call	purple_attention_type_get_incoming_desc
test	eax, eax
jz	short loc_67D03B20
mov	[esp+5Ch+Time],	edi
call	purple_attention_type_get_incoming_desc
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aGot_attentionG 
mov	[esp+5Ch+Time],	offset aServer_0 
call	purple_debug_info
mov	eax, [esp+5Ch+var_34]
cmp	ebp, 0FFFFFFFFh
jz	short loc_67D03B48
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], edi
mov	[esp+5Ch+var_50], 2006h
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+Time],	esi
call	serv_got_chat_in
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03B66
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
			
mov	[esp+5Ch+var_58], offset aSHasRequestedY 
mov	[esp+5Ch+Time],	offset aPidgin_10 
call	libintl_dgettext
jmp	loc_67D03AAD
align 4
mov	[esp+5Ch+var_30], ebx
jmp	loc_67D03A91
align 4
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 2006h
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	esi
call	serv_got_im
jmp	short loc_67D03B04
call	__stack_chk_fail
align 4
public purple_attention_type_get_outgoing_desc
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D03B98
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03BB8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D03B86
call	__stack_chk_fail
align 10h
public purple_attention_type_get_icon_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D03BF4
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D03C14
cmp	byte ptr [eax],	0
jz	short loc_67D03C14
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03C18
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D03BE3
			
xor	eax, eax
jmp	short loc_67D03BE3
call	__stack_chk_fail
align 10h
public purple_attention_type_get_unlocalized_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D03C4C
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03C6C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aTypeNull 
mov	[esp+2Ch+var_28], offset aPurple_atten_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D03C3A
call	__stack_chk_fail
align 4
public purple_prpl_got_account_idle
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D03CFC
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67D03CD0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D03D12
mov	[esp+2Ch+arg_8], offset	asc_67D3FF90 
mov	[esp+2Ch+arg_4], offset	aPurple_prpl_go	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_presence
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03D12
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_presence_set_idle
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03D12
mov	[esp+2Ch+arg_8], offset	aAccountNull_8 
jmp	short loc_67D03CB5
			
call	__stack_chk_fail
align 4
public purple_prpl_got_account_login_time
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D03DA8
mov	[esp+2Ch+Time],	ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67D03D78
test	esi, esi
jnz	short loc_67D03D52
mov	[esp+2Ch+Time],	0 
call	time
mov	esi, eax
mov	[esp+2Ch+Time],	ebx
call	purple_account_get_presence
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D03DC6
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_presence_set_login_time
mov	[esp+2Ch+var_24], offset asc_67D3FF90 
mov	[esp+2Ch+var_28], offset aPurple_prpl__0 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D03DC6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_8	
mov	[esp+2Ch+var_28], offset aPurple_prpl__0 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67D03D94
			
call	__stack_chk_fail
align 4
public purple_prpl_got_account_status
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D03E64
test	esi, esi
jz	loc_67D03E84
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67D03E30
mov	[esp+2Ch+var_24], offset asc_67D3FF90 
mov	[esp+2Ch+var_28], offset aPurple_prpl__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D03EC9
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_presence
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_status
test	eax, eax
jz	short loc_67D03EA8
lea	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 1
mov	[esp+2Ch+var_2C], eax
call	purple_status_set_active_with_attrs
jmp	short loc_67D03E18
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_8	
mov	[esp+2Ch+var_28], offset aPurple_prpl__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D03E18
align 4
mov	[esp+2Ch+var_24], offset aStatus_idNul_0 
mov	[esp+2Ch+var_28], offset aPurple_prpl__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D03E18
align 4
mov	[esp+2Ch+var_24], offset aStatusNull 
mov	[esp+2Ch+var_28], offset aPurple_prpl__1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D03E18
call	__stack_chk_fail
align 10h
public purple_prpl_got_account_actions
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D03F3C
mov	[esp+2Ch+var_2C], ebx
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67D03F20
mov	[esp+2Ch+var_24], offset asc_67D3FF90 
mov	[esp+2Ch+var_28], offset aPurple_prpl__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D03F5A
add	esp, 28h
pop	ebx
retn
call	purple_accounts_get_handle
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aAccountActio_0 
mov	[esp+2Ch+var_2C], eax
call	purple_signal_emit
jmp	short loc_67D03F0F
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_8	
mov	[esp+2Ch+var_28], offset aPurple_prpl__2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D03F0F
call	__stack_chk_fail
align 10h
public purple_prpl_got_user_idle
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D04030
test	esi, esi
jz	loc_67D04048
mov	[esp+3Ch+var_3C], ebx
call	purple_account_is_connected
test	eax, eax
jz	short loc_67D03FF4
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_67D03FDE
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_buddy_get_presence
mov	esi, eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], ebx
call	g_slist_delete_link
mov	ebx, eax
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_presence_set_idle
test	ebx, ebx
jnz	short loc_67D03FB0
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0405E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], ebx
call	purple_account_is_connecting
test	eax, eax
jnz	short loc_67D03F9E
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0405E
mov	[esp+3Ch+arg_8], offset	asc_67D3FFFC 
			
mov	[esp+3Ch+arg_4], offset	aPurple_prpl__3	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0405E
mov	[esp+3Ch+arg_8], offset	aAccountNull_8 
jmp	short loc_67D04014
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0405E
mov	[esp+3Ch+arg_8], offset	aNameNull_6 
jmp	short loc_67D04014
			
call	__stack_chk_fail
align 4
public purple_prpl_got_user_login_time
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67D04150
test	edx, edx
jz	loc_67D04120
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+Time],	eax
call	purple_find_buddies
mov	ebx, eax
test	eax, eax
jz	short loc_67D040FB
test	ebp, ebp
jz	short loc_67D04110
lea	esi, [esi+0]
			
mov	esi, [ebx]
mov	[esp+3Ch+Time],	esi
call	purple_buddy_get_presence
mov	edi, eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	ebx
call	g_slist_delete_link
mov	ebx, eax
mov	[esp+3Ch+Time],	edi
call	purple_presence_get_login_time
cmp	ebp, eax
jz	short loc_67D040F7
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+Time],	edi
call	purple_presence_set_login_time
call	purple_blist_get_handle
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aBuddyGotLogi_0 
mov	[esp+3Ch+Time],	eax
call	purple_signal_emit
test	ebx, ebx
jnz	short loc_67D040AC
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04166
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+Time],	0 
call	time
mov	ebp, eax
jmp	short loc_67D040AC
mov	ecx, [esp+3Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D04166
mov	[esp+3Ch+arg_8], offset	aNameNull_6 
mov	[esp+3Ch+arg_4], offset	aPurple_prpl__4	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04166
mov	[esp+3Ch+arg_8], offset	aAccountNull_8 
jmp	short loc_67D04134
			
call	__stack_chk_fail
align 4
public purple_prpl_got_user_status
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_30], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_3C], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ecx, [esp+5Ch+var_38]
test	ecx, ecx
jz	loc_67D042F0
mov	edx, [esp+5Ch+var_30]
test	edx, edx
jz	loc_67D04314
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jz	loc_67D042D0
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	purple_account_is_connected
test	eax, eax
jz	loc_67D0429C
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	purple_find_buddies
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_67D04282
mov	ebp, eax
mov	esi, [ebp+0]
mov	[esp+5Ch+var_5C], esi
call	purple_buddy_get_presence
mov	edi, eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_status
mov	ebx, eax
test	eax, eax
jz	short loc_67D04247
mov	[esp+5Ch+var_5C], edi
call	purple_presence_get_active_status
lea	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+var_5C], ebx
mov	[esp+5Ch+var_40], eax
call	purple_status_set_active_with_attrs
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	purple_blist_update_buddy_status
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67D041F0
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+var_5C], eax
call	g_slist_free
mov	[esp+5Ch+var_5C], ebx
call	purple_status_is_online
test	eax, eax
jnz	short loc_67D04282
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	purple_account_get_connection
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	serv_got_typing_stopped
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D04335
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
call	purple_account_is_connecting
test	eax, eax
jnz	loc_67D041CE
mov	[esp+5Ch+var_54], offset asc_67D3FFFC 
mov	[esp+5Ch+var_58], offset aPurple_prpl__5 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_67D04282
align 10h
mov	[esp+5Ch+var_54], offset aStatus_idNul_0 
mov	[esp+5Ch+var_58], offset aPurple_prpl__5 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	short loc_67D04282
align 10h
mov	[esp+5Ch+var_54], offset aAccountNull_8	
mov	[esp+5Ch+var_58], offset aPurple_prpl__5 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67D04282
align 4
mov	[esp+5Ch+var_54], offset aNameNull_6 
mov	[esp+5Ch+var_58], offset aPurple_prpl__5 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
jmp	loc_67D04282
call	__stack_chk_fail
align 4
public purple_prpl_got_user_status_deactive
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D04458
test	esi, esi
jz	loc_67D04470
test	edi, edi
jz	loc_67D04488
mov	[esp+4Ch+var_4C], ebx
call	purple_account_is_connected
test	eax, eax
jz	loc_67D04418
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	purple_find_buddies
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	loc_67D0449E
mov	ebx, eax
jmp	short loc_67D043A7
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D043F2
			
mov	esi, [ebx]
mov	[esp+4Ch+var_4C], esi
call	purple_buddy_get_presence
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_status
mov	ebp, eax
test	eax, eax
jz	short loc_67D043A0
mov	[esp+4Ch+var_4C], eax
call	purple_status_is_active
test	eax, eax
jz	short loc_67D043A0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], ebp
call	purple_status_set_active
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
call	purple_blist_update_buddy_status
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D043A7
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D044B2
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_slist_free
align 4
mov	[esp+4Ch+var_4C], ebx
call	purple_account_is_connecting
test	eax, eax
jnz	loc_67D04382
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D044B2
mov	[esp+4Ch+arg_8], offset	asc_67D3FFFC 
			
mov	[esp+4Ch+arg_4], offset	aPurple_prpl__6	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D044B2
mov	[esp+4Ch+arg_8], offset	aAccountNull_8 
jmp	short loc_67D0443C
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D044B2
mov	[esp+4Ch+arg_8], offset	aNameNull_6 
jmp	short loc_67D0443C
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D044B2
mov	[esp+4Ch+arg_8], offset	aStatus_idNul_0	
jmp	short loc_67D0443C
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D044B2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_prpl_get_statuses
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D04530
test	edi, edi
jz	loc_67D04564
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_status_types
mov	ebx, eax
xor	esi, esi
test	eax, eax
jz	short loc_67D04513
xchg	ax, ax
mov	[esp+2Ch+var_28], edi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_status_new
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_list_prepend
mov	esi, eax
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D044F0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04582
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_list_reverse
align 10h
mov	[esp+2Ch+var_24], offset aAccountNull_8	
mov	[esp+2Ch+var_28], offset aPurple_prpl_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D04582
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull 
mov	[esp+2Ch+var_28], offset aPurple_prpl_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0454C
			
call	__stack_chk_fail
align 4
public purple_prpl_got_attention
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Time],	esi
call	purple_connection_get_account
mov	ebp, eax
mov	[esp+4Ch+Time],	edi
mov	ecx, ebx
mov	edx, 0FFFFFFFFh
mov	eax, esi
call	sub_67D03A2C
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	4
call	purple_find_conversation_with_account
mov	esi, eax
test	eax, eax
jz	short loc_67D04616
mov	[esp+4Ch+Time],	0 
call	time
mov	[esp+4Ch+Time],	esi
call	purple_conversation_get_account
mov	ebp, eax
call	purple_conversations_get_handle
mov	[esp+4Ch+var_38], edi
mov	[esp+4Ch+var_3C], esi
mov	[esp+4Ch+var_40], ebx
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aGotAttention_0 
mov	[esp+4Ch+Time],	eax
call	purple_signal_emit
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0462A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_prpl_got_attention_in_chat
push	esi
push	ebx
sub	esp, 14h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], esi
xor	esi, esi
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D0466B
mov	[esp+1Ch+arg_0], ebx
add	esp, 14h
pop	ebx
pop	esi
jmp	sub_67D03A2C
call	__stack_chk_fail
public purple_prpl_initiate_media
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0468E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_prpl_get_media_caps
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D046B2
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_prpl_got_media_caps
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D046D6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_find_prpl
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D04750
mov	[esp+2Ch+var_28], offset aPrplXmpp 
mov	[esp+2Ch+var_2C], edi
call	g_strcmp0
test	eax, eax
jnz	short loc_67D04770
			
mov	edi, offset aPrplJabber_0 
call	purple_plugins_get_protocols
mov	ebx, eax
test	eax, eax
jnz	short loc_67D04723
jmp	short loc_67D0476C
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0476C
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi+10h]
mov	eax, [eax+20h]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D0471C
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D047A1
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aIdNull_2 
mov	[esp+2Ch+var_28], offset aPurple_find_pr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	esi, esi
jmp	short loc_67D0473B
mov	[esp+2Ch+var_28], offset aPrplGtalk 
mov	[esp+2Ch+var_2C], edi
call	g_strcmp0
test	eax, eax
jz	short loc_67D04709
mov	[esp+2Ch+var_28], offset aPrplFacebookXm 
mov	[esp+2Ch+var_2C], edi
call	g_strcmp0
test	eax, eax
jnz	loc_67D0470E
jmp	loc_67D04709
call	__stack_chk_fail
align 4
public purple_prpl_send_attention
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	esi, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D04988
test	esi, esi
jz	loc_67D049B8
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+Time],	eax
call	purple_account_get_protocol_id
mov	[esp+5Ch+Time],	eax
call	purple_find_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+114h]
mov	[esp+5Ch+var_38], eax
test	eax, eax
jz	loc_67D049D0
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+var_58], ebp
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+Time],	eax
call	purple_get_attention_type_from_code
mov	edi, eax
mov	[esp+5Ch+Time],	ebx
call	purple_connection_get_account
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	eax
call	purple_find_buddy
test	eax, eax
jz	loc_67D0497C
mov	[esp+5Ch+Time],	eax
call	purple_buddy_get_contact_alias
mov	[esp+5Ch+var_34], eax
test	edi, edi
jz	short loc_67D048C0
mov	[esp+5Ch+Time],	edi
call	purple_attention_type_get_outgoing_desc
test	eax, eax
jz	short loc_67D048C0
mov	[esp+5Ch+Time],	edi
call	purple_attention_type_get_outgoing_desc
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aServ_send_atte 
mov	[esp+5Ch+Time],	offset aServer_0 
call	purple_debug_info
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Time],	ebx
mov	edx, [esp+5Ch+var_38]
call	edx
test	eax, eax
jnz	short loc_67D048D8
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D049E6
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+5Ch+var_58], offset aRequestingSSAt 
mov	[esp+5Ch+Time],	offset aPidgin_10 
call	libintl_dgettext
jmp	short loc_67D04862
align 4
mov	[esp+5Ch+var_54], esi
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	1
call	purple_conversation_new
mov	ebx, eax
mov	[esp+5Ch+Time],	eax
call	purple_conversation_get_im_data
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], 2005h
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	eax
call	purple_conv_im_write
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+Time],	ebx
call	purple_conversation_get_account
mov	[esp+5Ch+var_3C], eax
call	purple_conversations_get_handle
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], esi
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], offset aSentAttentio_0 
mov	[esp+5Ch+Time],	eax
call	purple_signal_emit
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D049E6
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+var_34], esi
jmp	loc_67D0484A
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D049E6
mov	[esp+5Ch+arg_8], offset	aGcNull_1 
			
mov	[esp+5Ch+arg_4], offset	aPurple_prpl_se	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D049E6
mov	[esp+5Ch+arg_8], offset	aWhoNull_3 
jmp	short loc_67D0499C
align 10h
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D049E6
mov	[esp+5Ch+arg_8], offset	aSend_attention	
jmp	short loc_67D0499C
			
call	__stack_chk_fail
align 4
public purple_prpl_change_account_status
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D04B70
test	ebx, ebx
jz	loc_67D04B8C
mov	[esp+4Ch+var_4C], ebx
call	purple_status_is_exclusive
test	eax, eax
jnz	loc_67D04AC4
mov	[esp+4Ch+var_4C], ebx
call	purple_status_is_online
test	eax, eax
jz	short loc_67D04A46
mov	[esp+4Ch+var_4C], esi
call	purple_account_is_disconnected
test	eax, eax
jnz	loc_67D04B00
			
mov	[esp+4Ch+var_4C], ebx
call	purple_status_is_online
mov	[esp+4Ch+var_4C], esi
test	eax, eax
jz	short loc_67D04A9C
call	purple_account_is_connecting
test	eax, eax
jz	loc_67D04B28
			
call	purple_accounts_get_handle
mov	[esp+4Ch+var_3C], ebx
mov	[esp+4Ch+var_40], edi
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aAccountStatu_0 
mov	[esp+4Ch+var_4C], eax
call	purple_signal_emit
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D04BA5
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	purple_account_is_disconnected
mov	[esp+4Ch+var_4C], esi
test	eax, eax
jz	short loc_67D04B1C
call	purple_account_get_remember_password
test	eax, eax
jnz	short loc_67D04A62
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], esi
call	purple_account_set_password
jmp	short loc_67D04A62
align 4
test	edi, edi
jnz	loc_67D04A2A
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D04BA5
mov	[esp+4Ch+arg_8], offset	aPurple_status_	
			
mov	[esp+4Ch+arg_4], offset	aPurple_prpl_ch	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
call	purple_network_is_available
test	eax, eax
jz	loc_67D04A46
mov	[esp+4Ch+var_4C], esi
call	purple_account_connect
jmp	loc_67D04A62
align 4
call	purple_account_disconnect
jmp	loc_67D04A62
align 4
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_protocol_id
mov	[esp+4Ch+var_4C], eax
call	purple_find_prpl
test	eax, eax
jz	loc_67D04A62
mov	eax, [eax+10h]
mov	ebp, [eax+4Ch]
mov	[esp+4Ch+var_4C], esi
call	purple_account_is_disconnected
test	eax, eax
jnz	loc_67D04A62
mov	eax, [ebp+60h]
test	eax, eax
jz	loc_67D04A62
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
call	eax
jmp	loc_67D04A62
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04BA5
mov	[esp+4Ch+arg_8], offset	aAccountNull_8 
jmp	loc_67D04AE4
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04BA5
mov	[esp+4Ch+arg_8], offset	aNew_statusNull	
jmp	loc_67D04AE4
			
call	__stack_chk_fail
align 4
public purple_request_field_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D04CB8
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx]
cmp	eax, 1
jz	loc_67D04CE8
cmp	eax, 4
jz	short loc_67D04C1C
cmp	eax, 5
jz	short loc_67D04C48
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D04D03
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67D04BFD
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
jmp	short loc_67D04BFD
mov	eax, [ebx+1Ch]
test	eax, eax
jz	short loc_67D04C72
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67D04C9C
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
jmp	loc_67D04BFD
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_request 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04D03
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	loc_67D04BFD
			
call	__stack_chk_fail
public purple_request_field_group_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D04D6C
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_request_field_destroy
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04D99
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aGroupNull_0 
mov	[esp+2Ch+var_28], offset aPurple_reque_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04D99
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
public purple_request_fields_new
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 10h
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+4], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D04DF7
mov	eax, ebx
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_request_fields_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D04E68
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_request_field_group_destroy
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04E95
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D04E95
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_request_fields_get_groups
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D04EC8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D04EE8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D04EB5
call	__stack_chk_fail
align 10h
public purple_request_fields_exists
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D04F38
test	edx, edx
jz	short loc_67D04F58
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D04F78
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D04F26
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_reque_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D04F26
call	__stack_chk_fail
align 10h
public purple_request_fields_get_required
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D04FAC
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D04FCC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D04F9A
call	__stack_chk_fail
align 4
public purple_request_field_get_ui_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05000
mov	eax, [eax+34h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05020
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D04FEE
call	__stack_chk_fail
align 4
public purple_request_field_set_ui_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05058
mov	[eax+34h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D05076
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_reque_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05046
call	__stack_chk_fail
align 4
public purple_request_fields_get_field
			
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D050C0
test	edx, edx
jz	short loc_67D050E0
mov	[esp+3Ch+var_38], edx
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67D05100
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05126
add	esp, 3Ch
retn
align 10h
mov	[esp+3Ch+var_34], offset aFieldsNull 
mov	[esp+3Ch+var_38], offset aPurple_reque_7 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D050AE
mov	[esp+3Ch+var_34], offset aIdNull_3 
mov	[esp+3Ch+var_38], offset aPurple_reque_7 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D050AE
mov	[esp+3Ch+var_34], offset aFieldNull 
mov	[esp+3Ch+var_38], offset aPurple_reque_7 
mov	[esp+3Ch+var_3C], 0
mov	[esp+3Ch+var_20], eax
call	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67D050AE
call	__stack_chk_fail
align 4
public purple_request_field_group_new
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0516D
mov	eax, ebx
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_request_field_group_get_title
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D051A0
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D051C0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aGroupNull_0 
mov	[esp+2Ch+var_28], offset aPurple_reque_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0518E
call	__stack_chk_fail
align 4
public purple_request_field_group_get_fields
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D051F4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05214
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aGroupNull_0 
mov	[esp+2Ch+var_28], offset aPurple_reque_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D051E2
call	__stack_chk_fail
align 4
public purple_request_field_set_label
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D05260
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0527E
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0524E
call	__stack_chk_fail
align 4
public purple_request_field_set_visible
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D052B4
mov	[eax+14h], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D052D2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D052A2
call	__stack_chk_fail
align 4
public purple_request_field_new
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D05370
test	edi, edi
jnz	short loc_67D05334
mov	[esp+3Ch+var_34], offset aTypePurple_req 
mov	[esp+3Ch+var_38], offset aPurple_requ_12 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05390
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_3C], 38h
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx+8], eax
mov	[ebx], edi
mov	[esp+3Ch+var_38], ebp
mov	[esp+3Ch+var_3C], ebx
call	purple_request_field_set_label
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	purple_request_field_set_visible
jmp	short loc_67D0531C
align 10h
mov	[esp+3Ch+var_34], offset aIdNull_3 
mov	[esp+3Ch+var_38], offset aPurple_requ_12 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D0531C
call	__stack_chk_fail
align 4
public purple_request_field_set_type_hint
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D053DC
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D053FA
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D053CA
call	__stack_chk_fail
align 10h
public purple_request_field_set_required
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05460
cmp	[eax+18h], edx
jz	short loc_67D05443
mov	[eax+18h], edx
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_67D05443
mov	ebx, [ecx]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
test	edx, edx
jnz	short loc_67D05454
call	g_list_remove
mov	[ebx+8], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0547E
add	esp, 28h
pop	ebx
retn
call	g_list_append
mov	[ebx+8], eax
jmp	short loc_67D05443
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05443
call	__stack_chk_fail
align 4
public purple_request_field_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D054B0
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D054D0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0549D
call	__stack_chk_fail
align 4
public purple_request_field_get_group
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05504
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05524
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D054F2
call	__stack_chk_fail
align 4
public purple_request_field_get_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05558
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05578
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05546
call	__stack_chk_fail
align 10h
public purple_request_field_get_label
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D055AC
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D055CC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0559A
call	__stack_chk_fail
align 4
public purple_request_field_is_visible
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05600
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05620
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D055EE
call	__stack_chk_fail
align 4
public purple_request_field_get_type_hint
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05654
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05674
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05642
call	__stack_chk_fail
align 4
public purple_request_field_is_required
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D056A8
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D056C8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05696
call	__stack_chk_fail
align 10h
public purple_request_field_group_add_field
			
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0576C
test	esi, esi
jz	loc_67D0578C
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+8], eax
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D0573E
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_get_id
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_is_required
test	eax, eax
jnz	short loc_67D05754
			
mov	[esi+4], ebx
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D057AA
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	edi, [ebx]
mov	[esp+2Ch+var_28], esi
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[edi+8], eax
jmp	short loc_67D0573E
align 4
mov	[esp+2Ch+var_24], offset aGroupNull_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05741
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05741
call	__stack_chk_fail
align 10h
public purple_request_fields_is_field_required
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05828
test	edx, edx
jz	short loc_67D057F8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D05814
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05846
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_is_required
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D05846
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05814
			
call	__stack_chk_fail
align 4
public purple_request_fields_add_group
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	loc_67D058FC
test	ebx, ebx
jz	loc_67D0591C
mov	[esp+2Ch+var_28], ebx
mov	eax, [edi]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[edi], eax
mov	[ebx], edi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_group_get_fields
mov	esi, eax
test	eax, eax
jnz	short loc_67D0589F
jmp	short loc_67D058E9
align 4
mov	esi, [esi+4]
test	esi, esi
jz	short loc_67D058E9
			
mov	ebx, [esi]
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_get_id
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, [edi+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_is_required
test	eax, eax
jz	short loc_67D05898
mov	[esp+2Ch+var_28], ebx
mov	eax, [edi+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[edi+8], eax
mov	esi, [esi+4]
test	esi, esi
jnz	short loc_67D0589F
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0593A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D058E9
align 4
mov	[esp+2Ch+var_24], offset aGroupNull_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D058E9
call	__stack_chk_fail
align 10h
public purple_request_field_string_set_default_value
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D059A8
cmp	dword ptr [ebx], 1
jz	short loc_67D05990
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D059C6
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+28h], eax
jmp	short loc_67D0597D
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0597D
call	__stack_chk_fail
align 4
public purple_request_field_string_set_value
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D05A34
cmp	dword ptr [ebx], 1
jz	short loc_67D05A1C
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D05A52
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+2Ch], eax
jmp	short loc_67D05A09
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05A09
call	__stack_chk_fail
align 4
public purple_request_field_string_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05AD0
test	edx, edx
jz	short loc_67D05AF0
mov	[esp+2Ch+var_24], 1
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[eax+1Ch], edi
mov	dword ptr [eax+24h], 1
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_string_set_default_value
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_string_set_value
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05B10
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D05ABA
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D05ABA
call	__stack_chk_fail
align 4
public purple_request_field_string_set_masked
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05B6C
cmp	dword ptr [eax], 1
jz	short loc_67D05B64
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D05B8A
add	esp, 2Ch
retn
mov	[eax+20h], edx
jmp	short loc_67D05B54
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05B54
call	__stack_chk_fail
align 10h
public purple_request_field_string_set_editable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05BE4
cmp	dword ptr [eax], 1
jz	short loc_67D05BDC
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D05C02
add	esp, 2Ch
retn
mov	[eax+24h], edx
jmp	short loc_67D05BCC
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05BCC
call	__stack_chk_fail
align 4
public purple_request_field_string_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05C5C
cmp	dword ptr [eax], 1
jz	short loc_67D05C54
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05C7C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+28h]
jmp	short loc_67D05C42
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05C42
call	__stack_chk_fail
align 4
public purple_request_field_string_get_value
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05CD8
cmp	dword ptr [eax], 1
jz	short loc_67D05CD0
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05CF8
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+2Ch]
jmp	short loc_67D05CBE
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05CBE
call	__stack_chk_fail
align 10h
public purple_request_fields_get_string
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05D48
test	edx, edx
jz	short loc_67D05D78
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D05D64
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05D96
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_string_get_value
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D05D96
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05D64
			
call	__stack_chk_fail
align 4
public purple_request_fields_all_required_filled
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05E0B
mov	ebx, [eax+8]
test	ebx, ebx
jnz	short loc_67D05DC7
jmp	short loc_67D05E04
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D05E04
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_get_type
dec	eax
jnz	short loc_67D05DC0
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_string_get_value
test	eax, eax
jz	short loc_67D05DED
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_string_get_value
cmp	byte ptr [eax],	0
jnz	short loc_67D05DC0
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05E29
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	eax, 1
jmp	short loc_67D05DEF
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05DED
call	__stack_chk_fail
align 10h
public purple_request_field_string_is_multiline
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05E84
cmp	dword ptr [eax], 1
jz	short loc_67D05E7C
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05EA4
add	esp, 2Ch
retn
align 4
mov	eax, [eax+1Ch]
jmp	short loc_67D05E6A
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05E6A
call	__stack_chk_fail
align 4
public purple_request_field_string_is_masked
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05F00
cmp	dword ptr [eax], 1
jz	short loc_67D05EF8
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05F20
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67D05EE6
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05EE6
call	__stack_chk_fail
align 4
public purple_request_field_string_is_editable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D05F7C
cmp	dword ptr [eax], 1
jz	short loc_67D05F74
mov	[esp+2Ch+var_24], offset aFieldTypePurpl 
mov	[esp+2Ch+var_28], offset aPurple_requ_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D05F9C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+24h]
jmp	short loc_67D05F62
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D05F62
call	__stack_chk_fail
align 4
public purple_request_field_int_set_default_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D05FF8
cmp	dword ptr [eax], 2
jz	short loc_67D05FF0
mov	[esp+2Ch+var_24], offset aFieldTypePur_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_37 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D06016
add	esp, 2Ch
retn
mov	[eax+1Ch], edx
jmp	short loc_67D05FE0
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_37 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D05FE0
call	__stack_chk_fail
align 4
public purple_request_field_int_set_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06070
cmp	dword ptr [eax], 2
jz	short loc_67D06068
mov	[esp+2Ch+var_24], offset aFieldTypePur_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_38 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0608E
add	esp, 2Ch
retn
mov	[eax+20h], edx
jmp	short loc_67D06058
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_38 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06058
call	__stack_chk_fail
align 4
public purple_request_field_int_new
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D060FC
test	edx, edx
jz	short loc_67D0611C
mov	[esp+2Ch+var_24], 2
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_int_set_default_value
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_int_set_value
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0613C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_39 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D060E7
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_39 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D060E7
call	__stack_chk_fail
align 4
public purple_request_field_int_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06198
cmp	dword ptr [eax], 2
jz	short loc_67D06190
mov	[esp+2Ch+var_24], offset aFieldTypePur_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D061B8
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+1Ch]
jmp	short loc_67D0617E
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0617E
call	__stack_chk_fail
align 10h
public purple_request_field_int_get_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06214
cmp	dword ptr [eax], 2
jz	short loc_67D0620C
mov	[esp+2Ch+var_24], offset aFieldTypePur_0 
mov	[esp+2Ch+var_28], offset aPurple_requ_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06234
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67D061FA
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D061FA
call	__stack_chk_fail
align 4
public purple_request_fields_get_integer
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D062B4
test	edx, edx
jz	short loc_67D06284
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D062A0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D062D2
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_int_get_value
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D062D2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D062A0
			
call	__stack_chk_fail
align 4
public purple_request_field_bool_set_default_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D0632C
cmp	dword ptr [eax], 3
jz	short loc_67D06324
mov	[esp+2Ch+var_24], offset aFieldTypePur_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_43 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0634A
add	esp, 2Ch
retn
mov	[eax+1Ch], edx
jmp	short loc_67D06314
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_43 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06314
call	__stack_chk_fail
align 10h
public purple_request_field_bool_set_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D063A4
cmp	dword ptr [eax], 3
jz	short loc_67D0639C
mov	[esp+2Ch+var_24], offset aFieldTypePur_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_44 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D063C2
add	esp, 2Ch
retn
mov	[eax+20h], edx
jmp	short loc_67D0638C
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_44 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0638C
call	__stack_chk_fail
align 4
public purple_request_field_bool_new
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06430
test	edx, edx
jz	short loc_67D06450
mov	[esp+2Ch+var_24], 3
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_bool_set_default_value
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_bool_set_value
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06470
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D0641B
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D0641B
call	__stack_chk_fail
align 4
public purple_request_field_bool_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D064CC
cmp	dword ptr [eax], 3
jz	short loc_67D064C4
mov	[esp+2Ch+var_24], offset aFieldTypePur_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_46 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D064EC
add	esp, 2Ch
retn
align 4
mov	eax, [eax+1Ch]
jmp	short loc_67D064B2
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_46 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D064B2
call	__stack_chk_fail
align 4
public purple_request_field_bool_get_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06548
cmp	dword ptr [eax], 3
jz	short loc_67D06540
mov	[esp+2Ch+var_24], offset aFieldTypePur_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_47 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06568
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+20h]
jmp	short loc_67D0652E
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_47 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0652E
call	__stack_chk_fail
align 10h
public purple_request_fields_get_bool
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D065E8
test	edx, edx
jz	short loc_67D065B8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D065D4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06606
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_bool_get_value
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D06606
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_48 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D065D4
			
call	__stack_chk_fail
align 4
public purple_request_field_choice_add
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67D0667C
test	eax, eax
jz	short loc_67D0669C
cmp	dword ptr [ebx], 4
jz	short loc_67D06660
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D066BA
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+24h], eax
jmp	short loc_67D0664D
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0664D
align 4
mov	[esp+2Ch+var_24], offset aLabelNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_49 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0664D
call	__stack_chk_fail
align 10h
public purple_request_field_choice_set_default_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06714
cmp	dword ptr [eax], 4
jz	short loc_67D0670C
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_50 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D06732
add	esp, 2Ch
retn
mov	[eax+1Ch], edx
jmp	short loc_67D066FC
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_50 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D066FC
call	__stack_chk_fail
align 4
public purple_request_field_choice_set_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D0678C
cmp	dword ptr [eax], 4
jz	short loc_67D06784
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_51 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D067AA
add	esp, 2Ch
retn
mov	[eax+20h], edx
jmp	short loc_67D06774
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_51 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06774
call	__stack_chk_fail
align 10h
public purple_request_field_choice_new
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06818
test	edx, edx
jz	short loc_67D06838
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_choice_set_default_value
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_choice_set_value
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06858
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_52 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D06803
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_52 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D06803
call	__stack_chk_fail
align 10h
public purple_request_field_choice_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D068B8
cmp	dword ptr [eax], 4
jz	short loc_67D068B0
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_53 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D068DB
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+1Ch]
jmp	short loc_67D0689D
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_53 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67D0689D
call	__stack_chk_fail
public purple_request_field_choice_get_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06938
cmp	dword ptr [eax], 4
jz	short loc_67D06930
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_54 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0695B
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+20h]
jmp	short loc_67D0691D
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_54 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67D0691D
call	__stack_chk_fail
public purple_request_fields_get_choice
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D069A8
test	edx, edx
jz	short loc_67D069DC
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D069C4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D069FA
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_choice_get_value
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, 0FFFFFFFFh
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D069FA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_55 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D069C4
			
call	__stack_chk_fail
align 10h
public purple_request_field_choice_get_labels
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06A54
cmp	dword ptr [eax], 4
jz	short loc_67D06A4C
mov	[esp+2Ch+var_24], offset aFieldTypePur_2 
mov	[esp+2Ch+var_28], offset aPurple_requ_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06A74
add	esp, 2Ch
retn
align 4
mov	eax, [eax+24h]
jmp	short loc_67D06A3A
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_56 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D06A3A
call	__stack_chk_fail
align 4
public purple_request_field_list_new
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06B10
mov	[esp+2Ch+var_24], 5
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+24h], eax
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+2Ch], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06B30
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_57 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D06AFC
call	__stack_chk_fail
align 4
public purple_request_field_list_set_multi_select
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06B8C
cmp	dword ptr [eax], 5
jz	short loc_67D06B84
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_58 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D06BAA
add	esp, 2Ch
retn
mov	[eax+30h], edx
jmp	short loc_67D06B74
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_58 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06B74
call	__stack_chk_fail
align 10h
public purple_request_field_list_get_multi_select
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D06C04
cmp	dword ptr [eax], 5
jz	short loc_67D06BFC
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_59 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06C24
add	esp, 2Ch
retn
align 4
mov	eax, [eax+30h]
jmp	short loc_67D06BEA
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_59 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D06BEA
call	__stack_chk_fail
align 4
public purple_request_field_list_get_data
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D06CA0
test	edx, edx
jz	short loc_67D06CC0
cmp	dword ptr [eax], 5
jz	short loc_67D06C80
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06CDE
add	esp, 2Ch
retn
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D06CDE
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+24h]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_lookup
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06C6C
align 10h
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_60 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D06C6C
			
call	__stack_chk_fail
align 4
public purple_request_field_list_add_icon
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], edx
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D06DE0
test	esi, esi
jz	loc_67D06E00
test	edi, edi
jz	loc_67D06E1C
cmp	dword ptr [ebx], 5
jz	short loc_67D06D5C
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D06E8B
mov	[esp+4Ch+arg_8], offset	aFieldTypePur_3	
			
mov	[esp+4Ch+arg_4], offset	aPurple_requ_61	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+4Ch+var_30]
test	edx, edx
jz	loc_67D06E38
mov	ecx, [ebx+20h]
test	ecx, ecx
jz	loc_67D06E5C
			
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+20h]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[ebx+20h], eax
			
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[esp+4Ch+var_48], eax
mov	eax, [ebx+1Ch]
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[ebx+1Ch], eax
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D06E8B
mov	[esp+4Ch+arg_8], edi
mov	[esp+4Ch+arg_4], eax
mov	eax, [ebx+24h]
mov	[esp+4Ch+arg_0], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_insert
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D06E8B
mov	[esp+4Ch+arg_8], offset	aFieldNull 
jmp	loc_67D06D3F
align 10h
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D06E8B
mov	[esp+4Ch+arg_8], offset	aItemNull 
jmp	loc_67D06D3F
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D06E8B
mov	[esp+4Ch+arg_8], offset	aDataNull_3 
jmp	loc_67D06D3F
align 4
mov	eax, [ebx+20h]
test	eax, eax
jz	loc_67D06D91
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	g_list_append
mov	[ebx+20h], eax
jmp	loc_67D06D91
align 4
mov	ebp, [ebx+1Ch]
test	ebp, ebp
jz	loc_67D06D73
xor	eax, eax
lea	esi, [esi+0]
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	[ebx+20h], eax
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67D06E6C
jmp	loc_67D06D73
			
call	__stack_chk_fail
public purple_request_field_list_add
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_list_add_icon
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D06ED2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_request_field_list_add_selected
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D06FB0
test	esi, esi
jz	loc_67D06FD4
cmp	dword ptr [ebx], 5
jz	short loc_67D06F38
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D06FF5
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_list_get_multi_select
test	eax, eax
jnz	short loc_67D06F70
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67D06F70
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_get_id
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aMoreThanOneIte 
mov	[esp+2Ch+var_2C], offset aRequest 
call	purple_debug_warning
jmp	short loc_67D06F21
align 10h
			
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+28h], eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	loc_67D06F21
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D06F21
align 4
mov	[esp+2Ch+var_24], offset aItemNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_62 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D06F21
call	__stack_chk_fail
align 4
public purple_request_field_list_clear_selected
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D070B8
cmp	dword ptr [ebx], 5
jz	short loc_67D07050
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_63 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D070D9
add	esp, 28h
pop	ebx
retn
align 10h
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67D07081
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset g_free
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	dword ptr [ebx+28h], 0
mov	eax, [ebx+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+2Ch], eax
jmp	short loc_67D07038
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_63 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D07038
call	__stack_chk_fail
align 10h
public purple_request_field_list_set_selected
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D071F0
test	ebx, ebx
jz	loc_67D071CC
cmp	dword ptr [esi], 5
jz	short loc_67D07140
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_64 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D07211
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_list_clear_selected
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_list_get_multi_select
test	eax, eax
jnz	short loc_67D07180
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67D07180
mov	[esp+2Ch+var_2C], esi
call	purple_request_field_get_id
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aMoreThanOneIte 
mov	[esp+2Ch+var_2C], offset aRequest 
call	purple_debug_warning
jmp	short loc_67D07129
align 10h
			
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+28h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[esi+28h], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D07180
jmp	loc_67D07129
align 4
mov	[esp+2Ch+var_24], offset aItemsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_64 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D07129
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_64 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D07129
call	__stack_chk_fail
align 4
public purple_request_field_list_is_selected
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D07290
test	edx, edx
jz	short loc_67D072B0
cmp	dword ptr [eax], 5
jz	short loc_67D0726C
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_65 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D072D0
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], edx
mov	eax, [eax+2Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup_extended
jmp	short loc_67D0725A
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_65 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0725A
mov	[esp+2Ch+var_24], offset aItemNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_65 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0725A
call	__stack_chk_fail
align 4
public purple_request_field_list_get_selected
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0732C
cmp	dword ptr [eax], 5
jz	short loc_67D07324
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_66 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0734C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+28h]
jmp	short loc_67D07312
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_66 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07312
call	__stack_chk_fail
align 4
public purple_request_field_list_get_items
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D073A8
cmp	dword ptr [eax], 5
jz	short loc_67D073A0
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_67 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D073C8
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+1Ch]
jmp	short loc_67D0738E
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_67 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0738E
call	__stack_chk_fail
align 10h
public purple_request_field_list_get_icons
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07424
cmp	dword ptr [eax], 5
jz	short loc_67D0741C
mov	[esp+2Ch+var_24], offset aFieldTypePur_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_68 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07444
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67D0740A
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_68 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0740A
call	__stack_chk_fail
align 4
public purple_request_field_label_new
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D07490
test	edx, edx
jz	short loc_67D074B0
mov	[esp+2Ch+var_24], 6
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D074D0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_69 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0747F
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_69 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0747F
call	__stack_chk_fail
align 4
public purple_request_field_image_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67D07588
test	edx, edx
jz	loc_67D075A8
test	edi, edi
jz	loc_67D075CC
test	esi, esi
jnz	short loc_67D07550
mov	[esp+2Ch+var_24], offset aSize0_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D075EF
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], 7
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], edi
call	g_memdup
mov	[ebx+24h], eax
mov	[ebx+28h], esi
mov	dword ptr [ebx+1Ch], 1
mov	dword ptr [ebx+20h], 1
jmp	short loc_67D07534
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D07534
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D07534
align 4
mov	[esp+2Ch+var_24], offset aBufNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_70 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D07534
call	__stack_chk_fail
public purple_request_field_image_set_scale
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67D07660
cmp	dword ptr [eax], 7
jz	short loc_67D07648
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D07676
mov	[esp+1Ch+arg_8], offset	aFieldTypePur_4	
mov	[esp+1Ch+arg_4], offset	aPurple_requ_71	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
align 4
mov	[eax+1Ch], ecx
mov	[eax+20h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D07676
add	esp, 18h
pop	ebx
retn
align 10h
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D07676
mov	[esp+1Ch+arg_8], offset	aFieldNull 
jmp	short loc_67D0762D
			
call	__stack_chk_fail
align 4
public purple_request_field_image_get_buffer
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D076D0
cmp	dword ptr [eax], 7
jz	short loc_67D076C8
mov	[esp+2Ch+var_24], offset aFieldTypePur_4 
mov	[esp+2Ch+var_28], offset aPurple_requ_72 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D076F0
add	esp, 2Ch
retn
align 4
mov	eax, [eax+24h]
jmp	short loc_67D076B6
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_72 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D076B6
call	__stack_chk_fail
align 4
public purple_request_field_image_get_size
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0774C
cmp	dword ptr [eax], 7
jz	short loc_67D07744
mov	[esp+2Ch+var_24], offset aFieldTypePur_4 
mov	[esp+2Ch+var_28], offset aPurple_requ_73 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0776C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+28h]
jmp	short loc_67D07732
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_73 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07732
call	__stack_chk_fail
align 4
public purple_request_field_image_get_scale_x
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D077C8
cmp	dword ptr [eax], 7
jz	short loc_67D077C0
mov	[esp+2Ch+var_24], offset aFieldTypePur_4 
mov	[esp+2Ch+var_28], offset aPurple_requ_74 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D077E8
add	esp, 2Ch
retn
align 10h
mov	eax, [eax+1Ch]
jmp	short loc_67D077AE
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_74 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D077AE
call	__stack_chk_fail
align 10h
public purple_request_field_image_get_scale_y
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07844
cmp	dword ptr [eax], 7
jz	short loc_67D0783C
mov	[esp+2Ch+var_24], offset aFieldTypePur_4 
mov	[esp+2Ch+var_28], offset aPurple_requ_75 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07864
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67D0782A
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_75 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0782A
call	__stack_chk_fail
align 4
public purple_request_field_account_set_default_value
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D078C0
cmp	dword ptr [eax], 8
jz	short loc_67D078B8
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_76 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D078DE
add	esp, 2Ch
retn
mov	[eax+1Ch], edx
jmp	short loc_67D078A8
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_76 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D078A8
call	__stack_chk_fail
align 4
public purple_request_field_account_set_value
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D07938
cmp	dword ptr [eax], 8
jz	short loc_67D07930
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_77 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D07956
add	esp, 2Ch
retn
mov	[eax+20h], edx
jmp	short loc_67D07920
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_77 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D07920
call	__stack_chk_fail
align 4
public purple_request_field_account_new
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D079C8
test	edx, edx
jz	short loc_67D079E8
mov	[esp+2Ch+var_24], 8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_field_new
mov	ebx, eax
test	esi, esi
jz	short loc_67D07A08
			
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_account_set_default_value
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_account_set_value
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07A27
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_78 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D079B3
mov	[esp+2Ch+var_24], offset aTextNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_78 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D079B3
call	purple_connections_get_all
test	eax, eax
jz	short loc_67D0799B
call	purple_connections_get_all
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	esi, eax
jmp	loc_67D0799B
call	__stack_chk_fail
public purple_request_field_account_set_show_all
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	loc_67D07AD4
cmp	dword ptr [ebx], 8
jz	short loc_67D07A84
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_79 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D07B0D
add	esp, 28h
pop	ebx
retn
align 4
cmp	[ebx+24h], eax
jz	short loc_67D07A6D
mov	[ebx+24h], eax
test	eax, eax
jnz	short loc_67D07A6D
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jnz	short loc_67D07AF8
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	purple_account_is_connected
test	eax, eax
jz	short loc_67D07A6D
call	purple_connections_get_all
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07B0D
mov	eax, [eax]
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_request_field_account_set_value
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_79 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D07A6D
align 4
call	purple_connections_get_all
mov	eax, [eax]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_request_field_account_set_default_value
jmp	short loc_67D07A9F
			
call	__stack_chk_fail
align 4
public purple_request_field_account_set_filter
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D07B68
cmp	dword ptr [eax], 8
jz	short loc_67D07B60
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_80 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D07B86
add	esp, 2Ch
retn
mov	[eax+28h], edx
jmp	short loc_67D07B50
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_80 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D07B50
call	__stack_chk_fail
align 4
public purple_request_field_account_get_default_value
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07BE0
cmp	dword ptr [eax], 8
jz	short loc_67D07BD8
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_81 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07C00
add	esp, 2Ch
retn
align 4
mov	eax, [eax+1Ch]
jmp	short loc_67D07BC6
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_81 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07BC6
call	__stack_chk_fail
align 4
public purple_request_field_account_get_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07C5C
cmp	dword ptr [eax], 8
jz	short loc_67D07C54
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_82 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07C7C
add	esp, 2Ch
retn
align 4
mov	eax, [eax+20h]
jmp	short loc_67D07C42
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_82 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07C42
call	__stack_chk_fail
align 4
public purple_request_fields_get_account
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D07CCC
test	edx, edx
jz	short loc_67D07CFC
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_request_fields_get_field
test	eax, eax
jz	short loc_67D07CE8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07D1A
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_request_field_account_get_value
align 4
mov	[esp+2Ch+var_24], offset aFieldsNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_83 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D07D1A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aIdNull_3 
mov	[esp+2Ch+var_28], offset aPurple_requ_83 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D07CE8
			
call	__stack_chk_fail
align 10h
public purple_request_field_account_get_show_all
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07D74
cmp	dword ptr [eax], 8
jz	short loc_67D07D6C
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_84 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07D94
add	esp, 2Ch
retn
align 4
mov	eax, [eax+24h]
jmp	short loc_67D07D5A
align 4
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_84 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07D5A
call	__stack_chk_fail
align 4
public purple_request_field_account_get_filter
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D07DF0
cmp	dword ptr [eax], 8
jz	short loc_67D07DE8
mov	[esp+2Ch+var_24], offset aFieldTypePur_5 
mov	[esp+2Ch+var_28], offset aPurple_requ_85 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D07E10
add	esp, 2Ch
retn
align 4
mov	eax, [eax+28h]
jmp	short loc_67D07DD6
align 10h
mov	[esp+2Ch+var_24], offset aFieldNull 
mov	[esp+2Ch+var_28], offset aPurple_requ_85 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07DD6
call	__stack_chk_fail
align 4
public purple_request_input
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 9Ch
mov	edx, [esp+0ACh+arg_0]
mov	[esp+0ACh+var_5C], edx
mov	edx, [esp+0ACh+arg_4]
mov	[esp+0ACh+var_58], edx
mov	edx, [esp+0ACh+arg_8]
mov	[esp+0ACh+var_54], edx
mov	edx, [esp+0ACh+arg_C]
mov	[esp+0ACh+var_50], edx
mov	edx, [esp+0ACh+arg_10]
mov	[esp+0ACh+var_4C], edx
mov	edx, [esp+0ACh+arg_14]
mov	[esp+0ACh+var_48], edx
mov	edx, [esp+0ACh+arg_18]
mov	[esp+0ACh+var_44], edx
mov	edx, [esp+0ACh+arg_1C]
mov	[esp+0ACh+var_40], edx
mov	edi, [esp+0ACh+arg_20]
mov	ebp, [esp+0ACh+arg_24]
mov	edx, [esp+0ACh+arg_28]
mov	[esp+0ACh+var_3C], edx
mov	edx, [esp+0ACh+arg_2C]
mov	[esp+0ACh+var_38], edx
mov	edx, [esp+0ACh+arg_30]
mov	[esp+0ACh+var_34], edx
mov	edx, [esp+0ACh+arg_34]
mov	[esp+0ACh+var_30], edx
mov	edx, [esp+0ACh+arg_38]
mov	ecx, [esp+0ACh+arg_3C]
mov	eax, ds:__stack_chk_guard
mov	[esp+0ACh+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D07FC4
test	ebp, ebp
jz	loc_67D07FE4
mov	esi, ds:dword_67D722C8
test	esi, esi
jz	loc_67D08004
mov	eax, [esi]
test	eax, eax
jz	loc_67D08004
mov	[esp+0ACh+var_AC], 0Ch
mov	[esp+0ACh+var_60], edx
mov	[esp+0ACh+var_64], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 0
mov	eax, [esp+0ACh+var_5C]
mov	[ebx+4], eax
mov	ecx, [esp+0ACh+var_64]
mov	[esp+0ACh+var_74], ecx
mov	edx, [esp+0ACh+var_60]
mov	[esp+0ACh+var_78], edx
mov	edx, [esp+0ACh+var_30]
mov	[esp+0ACh+var_7C], edx
mov	edx, [esp+0ACh+var_34]
mov	[esp+0ACh+var_80], edx
mov	edx, [esp+0ACh+var_38]
mov	[esp+0ACh+var_84], edx
mov	edx, [esp+0ACh+var_3C]
mov	[esp+0ACh+var_88], edx
mov	[esp+0ACh+var_8C], ebp
mov	[esp+0ACh+var_90], edi
mov	edx, [esp+0ACh+var_40]
mov	[esp+0ACh+var_94], edx
mov	edx, [esp+0ACh+var_44]
mov	[esp+0ACh+var_98], edx
mov	edx, [esp+0ACh+var_48]
mov	[esp+0ACh+var_9C], edx
mov	edx, [esp+0ACh+var_4C]
mov	[esp+0ACh+var_A0], edx
mov	edx, [esp+0ACh+var_50]
mov	[esp+0ACh+var_A4], edx
mov	edx, [esp+0ACh+var_54]
mov	[esp+0ACh+var_A8], edx
mov	edx, [esp+0ACh+var_58]
mov	[esp+0ACh+var_AC], edx
call	dword ptr [esi]
mov	[ebx+8], eax
mov	[esp+0ACh+var_A8], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+0ACh+var_AC], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
			
mov	edx, [esp+0ACh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08008
add	esp, 9Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+0ACh+var_A4], offset aOk_textNull 
mov	[esp+0ACh+var_A8], offset aPurple_requ_86 
mov	[esp+0ACh+var_AC], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07FA8
mov	[esp+0ACh+var_A4], offset aOk_cbNull 
mov	[esp+0ACh+var_A8], offset aPurple_requ_86 
mov	[esp+0ACh+var_AC], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D07FA8
			
xor	eax, eax
jmp	short loc_67D07FA8
call	__stack_chk_fail
align 10h
public purple_request_choice_varg
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	edx, [esp+9Ch+arg_0]
mov	[esp+9Ch+var_54], edx
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_50], edx
mov	edx, [esp+9Ch+arg_8]
mov	[esp+9Ch+var_4C], edx
mov	edx, [esp+9Ch+arg_C]
mov	[esp+9Ch+var_48], edx
mov	edx, [esp+9Ch+arg_10]
mov	[esp+9Ch+var_44], edx
mov	edi, [esp+9Ch+arg_14]
mov	edx, [esp+9Ch+arg_18]
mov	ebp, [esp+9Ch+arg_1C]
mov	eax, [esp+9Ch+arg_20]
mov	[esp+9Ch+var_40], eax
mov	eax, [esp+9Ch+arg_24]
mov	[esp+9Ch+var_3C], eax
mov	eax, [esp+9Ch+arg_28]
mov	[esp+9Ch+var_38], eax
mov	eax, [esp+9Ch+arg_2C]
mov	[esp+9Ch+var_34], eax
mov	eax, [esp+9Ch+arg_30]
mov	[esp+9Ch+var_30], eax
mov	ecx, [esp+9Ch+arg_34]
mov	eax, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D08198
test	edx, edx
jz	loc_67D081B8
test	ebp, ebp
jz	loc_67D081D8
mov	esi, ds:dword_67D722C8
test	esi, esi
jz	loc_67D081F8
mov	eax, [esi+4]
test	eax, eax
jz	loc_67D081F8
mov	[esp+9Ch+var_9C], 0Ch
mov	[esp+9Ch+var_58], edx
mov	[esp+9Ch+var_5C], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 1
mov	eax, [esp+9Ch+var_54]
mov	[ebx+4], eax
mov	ecx, [esp+9Ch+var_5C]
mov	[esp+9Ch+var_6C], ecx
mov	eax, [esp+9Ch+var_30]
mov	[esp+9Ch+var_70], eax
mov	eax, [esp+9Ch+var_34]
mov	[esp+9Ch+var_74], eax
mov	eax, [esp+9Ch+var_38]
mov	[esp+9Ch+var_78], eax
mov	eax, [esp+9Ch+var_3C]
mov	[esp+9Ch+var_7C], eax
mov	eax, [esp+9Ch+var_40]
mov	[esp+9Ch+var_80], eax
mov	[esp+9Ch+var_84], ebp
mov	edx, [esp+9Ch+var_58]
mov	[esp+9Ch+var_88], edx
mov	[esp+9Ch+var_8C], edi
mov	edx, [esp+9Ch+var_44]
mov	[esp+9Ch+var_90], edx
mov	edx, [esp+9Ch+var_48]
mov	[esp+9Ch+var_94], edx
mov	edx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_98], edx
mov	edx, [esp+9Ch+var_50]
mov	[esp+9Ch+var_9C], edx
call	dword ptr [esi+4]
mov	[ebx+8], eax
mov	[esp+9Ch+var_98], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+9Ch+var_9C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
			
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D081FC
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+9Ch+var_94], offset aOk_textNull 
mov	[esp+9Ch+var_98], offset aPurple_requ_87 
mov	[esp+9Ch+var_9C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08181
mov	[esp+9Ch+var_94], offset aOk_cbNull 
mov	[esp+9Ch+var_98], offset aPurple_requ_87 
mov	[esp+9Ch+var_9C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08181
mov	[esp+9Ch+var_94], offset aCancel_textNul 
mov	[esp+9Ch+var_98], offset aPurple_requ_87 
mov	[esp+9Ch+var_9C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08181
			
xor	eax, eax
jmp	short loc_67D08181
call	__stack_chk_fail
align 4
public purple_request_choice
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	eax, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_48], eax
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_44], edx
mov	ecx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_40], ecx
mov	ebp, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_3C], ebp
mov	eax, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_38], eax
mov	eax, [esp+8Ch+arg_14]
mov	edx, [esp+8Ch+arg_18]
mov	ecx, [esp+8Ch+arg_1C]
mov	[esp+8Ch+var_34], ecx
mov	ebp, [esp+8Ch+arg_20]
mov	[esp+8Ch+var_30], ebp
mov	ecx, [esp+8Ch+arg_24]
mov	ebx, [esp+8Ch+arg_28]
mov	esi, [esp+8Ch+arg_2C]
mov	edi, [esp+8Ch+arg_30]
mov	ebp, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], ebp
xor	ebp, ebp
test	eax, eax
jz	short loc_67D08310
test	edx, edx
jz	loc_67D08330
lea	ebp, [esp+8Ch+arg_34]
mov	[esp+8Ch+var_58], ebp
mov	[esp+8Ch+var_5C], edi
mov	[esp+8Ch+var_60], esi
mov	[esp+8Ch+var_64], ebx
mov	[esp+8Ch+var_68], ecx
mov	ecx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_6C], ecx
mov	ebp, [esp+8Ch+var_34]
mov	[esp+8Ch+var_70], ebp
mov	[esp+8Ch+var_74], edx
mov	[esp+8Ch+var_78], eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_7C], eax
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_80], edx
mov	ecx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_84], ecx
mov	ebp, [esp+8Ch+var_44]
mov	[esp+8Ch+var_88], ebp
mov	eax, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], eax
call	purple_request_choice_varg
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08350
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+8Ch+var_84], offset aOk_textNull 
mov	[esp+8Ch+var_88], offset aPurple_requ_88 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D082F9
mov	[esp+8Ch+var_84], offset aOk_cbNull 
mov	[esp+8Ch+var_88], offset aPurple_requ_88 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D082F9
call	__stack_chk_fail
align 4
public purple_request_action_varg
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_48], edx
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_44], edx
mov	edx, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_40], edx
mov	edx, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_3C], edx
mov	edx, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_38], edx
mov	edx, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_34], edx
mov	edx, [esp+8Ch+arg_1C]
mov	[esp+8Ch+var_30], edx
mov	edx, [esp+8Ch+arg_20]
mov	esi, [esp+8Ch+arg_24]
mov	ecx, [esp+8Ch+arg_28]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D08494
mov	edi, ds:dword_67D722C8
test	edi, edi
jz	loc_67D084B4
mov	eax, [edi+8]
test	eax, eax
jz	loc_67D084B4
mov	[esp+8Ch+var_8C], 0Ch
mov	[esp+8Ch+var_4C], edx
mov	[esp+8Ch+var_50], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 2
mov	[eax+4], ebp
mov	ecx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_68], ecx
mov	[esp+8Ch+var_6C], esi
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_70], edx
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_74], edx
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_78], edx
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_7C], edx
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_80], edx
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_84], edx
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_88], edx
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_8C], edx
call	dword ptr [edi+8]
mov	[ebx+8], eax
mov	[esp+8Ch+var_88], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+8Ch+var_8C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D084B8
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_84], offset aAction_count0	
mov	[esp+8Ch+var_88], offset aPurple_requ_89 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0847D
			
xor	eax, eax
jmp	short loc_67D0847D
call	__stack_chk_fail
align 10h
public purple_request_action
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebp, [esp+6Ch+arg_0]
mov	eax, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_38], eax
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_34], edx
mov	eax, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_30], eax
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_3C], edx
mov	ecx, [esp+6Ch+arg_14]
mov	ebx, [esp+6Ch+arg_18]
mov	esi, [esp+6Ch+arg_1C]
mov	edi, [esp+6Ch+arg_20]
mov	eax, [esp+6Ch+arg_24]
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0857C
lea	edx, [esp+6Ch+arg_28]
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_48], eax
mov	[esp+6Ch+var_4C], edi
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], ebx
mov	[esp+6Ch+var_58], ecx
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_5C], eax
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], edx
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], eax
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], ebp
call	purple_request_action_varg
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0859C
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+6Ch+var_64], offset aAction_count0	
mov	[esp+6Ch+var_68], offset aPurple_requ_90 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08568
call	__stack_chk_fail
align 4
public purple_request_action_with_icon_varg
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_50], edx
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_4C], edx
mov	edx, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_48], edx
mov	edx, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_44], edx
mov	edx, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_40], edx
mov	edx, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_3C], edx
mov	edx, [esp+8Ch+arg_1C]
mov	[esp+8Ch+var_38], edx
mov	edx, [esp+8Ch+arg_20]
mov	[esp+8Ch+var_34], edx
mov	edx, [esp+8Ch+arg_24]
mov	[esp+8Ch+var_30], edx
mov	edx, [esp+8Ch+arg_28]
mov	esi, [esp+8Ch+arg_2C]
mov	ecx, [esp+8Ch+arg_30]
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D08708
mov	edi, ds:dword_67D722C8
test	edi, edi
jz	loc_67D08728
mov	eax, [edi+1Ch]
test	eax, eax
jz	loc_67D08728
mov	[esp+8Ch+var_8C], 0Ch
mov	[esp+8Ch+var_54], edx
mov	[esp+8Ch+var_58], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 2
mov	[eax+4], ebp
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_60], ecx
mov	[esp+8Ch+var_64], esi
mov	edx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_68], edx
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_6C], edx
mov	edx, [esp+8Ch+var_34]
mov	[esp+8Ch+var_70], edx
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_74], edx
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_78], edx
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_7C], edx
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_80], edx
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_84], edx
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_88], edx
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+var_8C], edx
call	dword ptr [edi+1Ch]
mov	[ebx+8], eax
mov	[esp+8Ch+var_88], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+8Ch+var_8C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D087A9
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_84], offset aAction_count0	
mov	[esp+8Ch+var_88], offset aPurple_requ_91 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D086EF
			
mov	eax, [esp+8Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D087A9
mov	[esp+8Ch+arg_28], ecx
mov	[esp+8Ch+arg_24], esi
mov	[esp+8Ch+arg_20], edx
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+arg_1C], edx
mov	edx, [esp+8Ch+var_3C]
mov	[esp+8Ch+arg_18], edx
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+arg_14], edx
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+arg_10], edx
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+arg_C], edx
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+arg_8], edx
mov	edx, [esp+8Ch+var_50]
mov	[esp+8Ch+arg_4], edx
mov	[esp+8Ch+arg_0], ebp
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_request_action_varg
			
call	__stack_chk_fail
align 10h
public purple_request_action_with_icon
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebp, [esp+8Ch+arg_0]
mov	eax, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_40], eax
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_3C], edx
mov	eax, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_38], eax
mov	edx, [esp+8Ch+arg_10]
mov	[esp+8Ch+var_34], edx
mov	eax, [esp+8Ch+arg_14]
mov	[esp+8Ch+var_30], eax
mov	edx, [esp+8Ch+arg_18]
mov	[esp+8Ch+var_44], edx
mov	ecx, [esp+8Ch+arg_1C]
mov	ebx, [esp+8Ch+arg_20]
mov	esi, [esp+8Ch+arg_24]
mov	edi, [esp+8Ch+arg_28]
mov	eax, [esp+8Ch+arg_2C]
mov	edx, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D088A0
lea	edx, [esp+8Ch+arg_30]
mov	[esp+8Ch+var_5C], edx
mov	[esp+8Ch+var_60], eax
mov	[esp+8Ch+var_64], edi
mov	[esp+8Ch+var_68], esi
mov	[esp+8Ch+var_6C], ebx
mov	[esp+8Ch+var_70], ecx
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+var_74], eax
mov	edx, [esp+8Ch+var_30]
mov	[esp+8Ch+var_78], edx
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_7C], eax
mov	edx, [esp+8Ch+var_38]
mov	[esp+8Ch+var_80], edx
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_84], eax
mov	edx, [esp+8Ch+var_40]
mov	[esp+8Ch+var_88], edx
mov	[esp+8Ch+var_8C], ebp
call	purple_request_action_with_icon_varg
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D088C0
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+8Ch+var_84], offset aAction_count0	
mov	[esp+8Ch+var_88], offset aPurple_requ_92 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0888A
call	__stack_chk_fail
align 4
public purple_request_fields
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	edx, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_50], edx
mov	edx, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_4C], edx
mov	edx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_48], edx
mov	edx, [esp+8Ch+arg_C]
mov	[esp+8Ch+var_44], edx
mov	edi, [esp+8Ch+arg_10]
mov	ebp, [esp+8Ch+arg_14]
mov	ecx, [esp+8Ch+arg_18]
mov	edx, [esp+8Ch+arg_1C]
mov	eax, [esp+8Ch+arg_20]
mov	[esp+8Ch+var_40], eax
mov	eax, [esp+8Ch+arg_24]
mov	[esp+8Ch+var_3C], eax
mov	eax, [esp+8Ch+arg_28]
mov	[esp+8Ch+var_38], eax
mov	eax, [esp+8Ch+arg_2C]
mov	[esp+8Ch+var_34], eax
mov	eax, [esp+8Ch+arg_30]
mov	[esp+8Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D08A44
test	ebp, ebp
jz	loc_67D08A64
test	ecx, ecx
jz	loc_67D08A84
test	edx, edx
jz	loc_67D08AA4
mov	esi, ds:dword_67D722C8
test	esi, esi
jz	loc_67D08AC8
mov	ebx, [esi+0Ch]
test	ebx, ebx
jz	loc_67D08AC8
mov	[esp+8Ch+var_8C], 0Ch
mov	[esp+8Ch+var_58], edx
mov	[esp+8Ch+var_54], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 3
mov	eax, [esp+8Ch+var_50]
mov	[ebx+4], eax
mov	eax, [esp+8Ch+var_30]
mov	[esp+8Ch+var_60], eax
mov	eax, [esp+8Ch+var_34]
mov	[esp+8Ch+var_64], eax
mov	eax, [esp+8Ch+var_38]
mov	[esp+8Ch+var_68], eax
mov	eax, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_6C], eax
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+var_70], eax
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+var_74], edx
mov	ecx, [esp+8Ch+var_54]
mov	[esp+8Ch+var_78], ecx
mov	[esp+8Ch+var_7C], ebp
mov	[esp+8Ch+var_80], edi
mov	edx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_84], edx
mov	edx, [esp+8Ch+var_48]
mov	[esp+8Ch+var_88], edx
mov	edx, [esp+8Ch+var_4C]
mov	[esp+8Ch+var_8C], edx
call	dword ptr [esi+0Ch]
mov	[ebx+8], eax
mov	[esp+8Ch+var_88], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+8Ch+var_8C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D08ACF
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+8Ch+var_84], offset aFieldsNull 
mov	[esp+8Ch+var_88], offset aPurple_requ_93 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08A2B
mov	[esp+8Ch+var_84], offset aOk_textNull 
mov	[esp+8Ch+var_88], offset aPurple_requ_93 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08A2B
mov	[esp+8Ch+var_84], offset aOk_cbNull 
mov	[esp+8Ch+var_88], offset aPurple_requ_93 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08A2B
mov	[esp+8Ch+var_84], offset aCancel_textNul 
mov	[esp+8Ch+var_88], offset aPurple_requ_93 
mov	[esp+8Ch+var_8C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D08A2B
align 4
			
xor	eax, eax
jmp	loc_67D08A2B
call	__stack_chk_fail
public purple_request_file
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ecx, [esp+7Ch+arg_0]
mov	edx, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_44], edx
mov	edx, [esp+7Ch+arg_8]
mov	[esp+7Ch+var_40], edx
mov	edx, [esp+7Ch+arg_C]
mov	[esp+7Ch+var_3C], edx
mov	edx, [esp+7Ch+arg_10]
mov	[esp+7Ch+var_38], edx
mov	edx, [esp+7Ch+arg_14]
mov	[esp+7Ch+var_34], edx
mov	edx, [esp+7Ch+arg_18]
mov	[esp+7Ch+var_30], edx
mov	edi, [esp+7Ch+arg_1C]
mov	ebp, [esp+7Ch+arg_20]
mov	edx, [esp+7Ch+arg_24]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	esi, ds:dword_67D722C8
test	esi, esi
jz	loc_67D08BF4
mov	eax, [esi+10h]
test	eax, eax
jz	loc_67D08BF4
mov	[esp+7Ch+var_7C], 0Ch
mov	[esp+7Ch+var_4C], edx
mov	[esp+7Ch+var_48], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 4
mov	ecx, [esp+7Ch+var_48]
mov	[eax+4], ecx
mov	edx, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_5C], edx
mov	[esp+7Ch+var_60], ebp
mov	[esp+7Ch+var_64], edi
mov	edx, [esp+7Ch+var_30]
mov	[esp+7Ch+var_68], edx
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_6C], edx
mov	edx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_70], edx
mov	edx, [esp+7Ch+var_3C]
mov	[esp+7Ch+var_74], edx
mov	edx, [esp+7Ch+var_40]
mov	[esp+7Ch+var_78], edx
mov	edx, [esp+7Ch+var_44]
mov	[esp+7Ch+var_7C], edx
call	dword ptr [esi+10h]
mov	[ebx+8], eax
mov	[esp+7Ch+var_78], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+7Ch+var_7C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08BF8
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	eax, eax
jmp	short loc_67D08BDE
call	__stack_chk_fail
align 10h
public purple_request_folder
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ecx, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_38], edx
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_14]
mov	[esp+6Ch+var_30], edx
mov	edi, [esp+6Ch+arg_18]
mov	ebp, [esp+6Ch+arg_1C]
mov	edx, [esp+6Ch+arg_20]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	esi, ds:dword_67D722C8
test	esi, esi
jz	loc_67D08D00
mov	eax, [esi+10h]
test	eax, eax
jz	loc_67D08D00
mov	[esp+6Ch+var_6C], 0Ch
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_44], ecx
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], 5
mov	ecx, [esp+6Ch+var_44]
mov	[eax+4], ecx
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_50], edx
mov	[esp+6Ch+var_54], ebp
mov	[esp+6Ch+var_58], edi
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_5C], edx
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_60], edx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_64], edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], edx
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], edx
call	dword ptr [esi+18h]
mov	[ebx+8], eax
mov	[esp+6Ch+var_68], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+6Ch+var_6C], eax
call	g_list_append
mov	ds:dword_67D722CC, eax
mov	eax, [ebx+8]
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08D04
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
xor	eax, eax
jmp	short loc_67D08CEB
call	__stack_chk_fail
align 4
public purple_request_close_with_handle
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D08D74
mov	edx, ds:dword_67D722CC
test	edx, edx
jz	short loc_67D08D40
nop
mov	ebx, [edx]
mov	edi, [edx+4]
cmp	[ebx+4], esi
jz	short loc_67D08D54
mov	edx, edi
test	edi, edi
jnz	short loc_67D08D30
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08D92
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D722CC
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D722CC, eax
mov	eax, ebx
call	sub_67D08D98
jmp	short loc_67D08D3A
align 4
mov	[esp+2Ch+var_24], offset aHandleNull_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_94 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D08D40
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	esi, ds:dword_67D722C8
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	purple_notify_close_with_handle
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	purple_request_close_with_handle
test	esi, esi
jz	short loc_67D08DDF
mov	eax, [esi+14h]
test	eax, eax
jz	short loc_67D08DDF
mov	edx, [ebx+8]
mov	[esp+2Ch+var_28], edx
mov	edx, [ebx]
mov	[esp+2Ch+var_2C], edx
call	eax
			
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08DF9
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public purple_request_close
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D08E78
mov	ecx, ds:dword_67D722CC
test	ecx, ecx
jz	short loc_67D08E3E
mov	ebx, [ecx]
cmp	[ebx+8], eax
jz	short loc_67D08E50
mov	edx, ecx
jmp	short loc_67D08E37
align 10h
mov	ebx, [edx]
cmp	[ebx+8], eax
jz	short loc_67D08E50
mov	edx, [edx+4]
test	edx, edx
jnz	short loc_67D08E30
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08E96
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ecx
call	g_list_remove
mov	ds:dword_67D722CC, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08E96
mov	eax, ebx
add	esp, 28h
pop	ebx
jmp	sub_67D08D98
mov	[esp+2Ch+var_24], offset aUi_handleNul_1 
mov	[esp+2Ch+var_28], offset aPurple_requ_95 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D08E3E
			
call	__stack_chk_fail
align 4
public purple_request_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D722C8, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08EC3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_request_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722C8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D08EEB
add	esp, 1Ch
retn
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08F32
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public purple_roomlist_show_with_account
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722D0
test	eax, eax
jz	short loc_67D08F70
mov	eax, [eax]
test	eax, eax
jz	short loc_67D08F70
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D08F80
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D08F80
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_roomlist_new
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D08FF4
mov	[esp+3Ch+var_3C], 1Ch
call	g_malloc0
mov	[eax], ebx
mov	dword ptr [eax+8], 0
mov	dword ptr [eax+4], 0
mov	dword ptr [eax+18h], 1
mov	edx, ds:dword_67D722D0
test	edx, edx
jz	short loc_67D08FE0
mov	edx, [edx+4]
test	edx, edx
jz	short loc_67D08FE0
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	edx
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09014
add	esp, 38h
pop	ebx
retn
align 4
mov	[esp+3Ch+var_34], offset aAccountNull_9	
mov	[esp+3Ch+var_38], offset aPurple_roomlis 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D08FE0
call	__stack_chk_fail
align 4
public purple_roomlist_ref
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D09064
mov	edx, [eax+18h]
inc	edx
mov	[eax+18h], edx
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], offset aReffingListRef 
mov	[esp+2Ch+var_2C], offset aRoomlist 
call	purple_debug_misc
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D09082
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09052
call	__stack_chk_fail
align 4
public purple_roomlist_unref
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D09222
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+18h]
test	eax, eax
jnz	short loc_67D090EC
mov	[esp+4Ch+var_44], offset aListRef0 
mov	[esp+4Ch+var_48], offset aPurple_rooml_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D09247
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
dec	eax
mov	edx, [esp+4Ch+var_30]
mov	[edx+18h], eax
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aUnreffingListR 
mov	[esp+4Ch+var_4C], offset aRoomlist 
call	purple_debug_misc
mov	eax, [esp+4Ch+var_30]
mov	eax, [eax+18h]
test	eax, eax
jnz	short loc_67D090D2
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aDestroyingList 
mov	[esp+4Ch+var_4C], offset aRoomlist 
call	purple_debug_misc
mov	eax, ds:dword_67D722D0
test	eax, eax
jz	short loc_67D0914C
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_67D0914C
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	eax
			
mov	eax, [esp+4Ch+var_30]
mov	edi, [eax+8]
test	edi, edi
jz	loc_67D09243
nop
mov	esi, [edi]
mov	edx, [esp+4Ch+var_30]
mov	ebx, [edx+4]
mov	ebp, [esi+8]
test	ebx, ebx
jz	short loc_67D091A3
test	ebp, ebp
jnz	short loc_67D09182
jmp	short loc_67D091A3
align 4
mov	ebx, [ebx+4]
mov	ebp, [ebp+4]
test	ebx, ebx
jz	short loc_67D091A0
test	ebp, ebp
jz	short loc_67D091A0
mov	edx, [ebx]
cmp	dword ptr [edx], 2
jnz	short loc_67D09174
mov	edx, [ebp+0]
mov	[esp+4Ch+var_4C], edx
call	g_free
mov	ebx, [ebx+4]
mov	ebp, [ebp+4]
test	ebx, ebx
jnz	short loc_67D0917E
xchg	ax, ax
			
mov	ebp, [esi+8]
			
mov	[esp+4Ch+var_4C], ebp
call	g_list_free
mov	eax, [esi+4]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_67D0915C
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+8]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset sub_67D08EF0
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+4]
mov	[esp+4Ch+var_4C], eax
call	g_list_foreach
mov	edx, [esp+4Ch+var_30]
mov	eax, [edx+4]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D09247
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+arg_0], edx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
mov	[esp+4Ch+var_44], offset aListNull 
mov	[esp+4Ch+var_48], offset aPurple_rooml_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	loc_67D090D2
xor	eax, eax
jmp	short loc_67D091CC
			
call	__stack_chk_fail
public purple_roomlist_set_fields
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D09298
mov	[eax+4], ecx
mov	edx, ds:dword_67D722D0
test	edx, edx
jz	short loc_67D092B4
mov	edx, [edx+8]
test	edx, edx
jz	short loc_67D092B4
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D092C5
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D092C5
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_roomlist_set_in_progress
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D09318
mov	[eax+0Ch], ecx
mov	edx, ds:dword_67D722D0
test	edx, edx
jz	short loc_67D09334
mov	edx, [edx+10h]
test	edx, edx
jz	short loc_67D09334
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D09345
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], eax
add	esp, 28h
pop	ebx
jmp	edx
align 4
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D09345
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_roomlist_get_in_progress
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D09378
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09398
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D09366
call	__stack_chk_fail
align 10h
public purple_roomlist_room_add
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D09400
test	esi, esi
jz	short loc_67D09430
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+8], eax
mov	eax, ds:dword_67D722D0
test	eax, eax
jz	short loc_67D0941C
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D0941C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0944E
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0944E
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aRoomNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0941C
			
call	__stack_chk_fail
align 4
public purple_roomlist_get_list
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D094E0
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_state
dec	eax
jz	short loc_67D094A8
mov	[esp+2Ch+var_24], offset aPurple_conn_16 
mov	[esp+2Ch+var_28], offset aPurple_rooml_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D094FE
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67D09492
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67D09492
mov	eax, [eax+0E8h]
test	eax, eax
jz	short loc_67D09492
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D094FE
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aGcNull_2 
mov	[esp+2Ch+var_28], offset aPurple_rooml_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09492
			
call	__stack_chk_fail
align 4
public purple_roomlist_cancel_get_list
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D09590
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	short loc_67D09560
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67D0957C
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67D0957C
mov	eax, [eax+0ECh]
test	eax, eax
jz	short loc_67D0957C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D095AE
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aGcNull_2 
mov	[esp+2Ch+var_28], offset aPurple_rooml_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D095AE
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0957C
			
call	__stack_chk_fail
align 4
public purple_roomlist_expand_category
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D09664
test	ebx, ebx
jz	loc_67D09684
test	byte ptr [ebx],	1
jz	short loc_67D09634
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	purple_account_get_connection
test	eax, eax
jz	loc_67D096A4
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_prpl
test	eax, eax
jz	short loc_67D09650
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	short loc_67D09650
mov	eax, [eax+0F0h]
test	eax, eax
jz	short loc_67D09650
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D096C2
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aCategoryTypePu 
mov	[esp+2Ch+var_28], offset aPurple_rooml_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D096C2
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aListNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09650
align 4
mov	[esp+2Ch+var_24], offset aCategoryNull 
mov	[esp+2Ch+var_28], offset aPurple_rooml_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09650
align 4
mov	[esp+2Ch+var_24], offset aGcNull_2 
mov	[esp+2Ch+var_28], offset aPurple_rooml_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09650
			
call	__stack_chk_fail
align 4
public purple_roomlist_get_fields
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+4]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D096ED
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_room_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D0974C
mov	[esp+3Ch+var_3C], 14h
call	g_malloc0
mov	ebx, eax
mov	[eax], ebp
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx+4], eax
mov	[ebx+0Ch], edi
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0976C
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aNameNull_7 
mov	[esp+3Ch+var_38], offset aPurple_rooml_9 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D09734
call	__stack_chk_fail
align 4
public purple_roomlist_room_add_field
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0983C
test	ebx, ebx
jz	loc_67D09884
mov	edx, [esi+4]
test	edx, edx
jz	loc_67D0986C
mov	eax, [ebx+8]
test	eax, eax
jz	short loc_67D09820
mov	[esp+2Ch+var_2C], eax
call	g_list_length
mov	[esp+2Ch+var_28], eax
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_list_nth_data
test	eax, eax
jz	short loc_67D09826
mov	eax, [eax]
cmp	eax, 1
jbe	short loc_67D0980C
cmp	eax, 2
jnz	short loc_67D097F4
mov	[esp+2Ch+var_2C], edi
call	g_strdup
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+8], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0989A
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], edi
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+8], eax
jmp	short loc_67D097F4
mov	eax, [edx]
test	eax, eax
jnz	short loc_67D097CE
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0989A
mov	[esp+2Ch+arg_8], offset	aFNull 
jmp	short loc_67D09850
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0989A
mov	[esp+2Ch+arg_8], offset	aListNull 
			
mov	[esp+2Ch+arg_4], offset	aPurple_room_10	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0989A
mov	[esp+2Ch+arg_8], offset	aListFieldsNull	
jmp	short loc_67D09850
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0989A
mov	[esp+2Ch+arg_8], offset	aRoomNull 
jmp	short loc_67D09850
			
call	__stack_chk_fail
align 10h
public purple_roomlist_room_join
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D09998
test	esi, esi
jz	loc_67D09968
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_connection
mov	ebp, eax
test	eax, eax
jz	loc_67D09984
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new
mov	edi, eax
mov	eax, [esi+4]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aName_5 
mov	[esp+3Ch+var_3C], edi
call	g_hash_table_replace
mov	ebx, [ebx+4]
mov	esi, [esi+8]
test	ebx, ebx
jnz	short loc_67D09939
jmp	short loc_67D0993D
align 4
mov	eax, [esi]
mov	[esp+3Ch+var_34], eax
mov	eax, [ebx]
mov	eax, [eax+8]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	g_hash_table_replace
mov	ebx, [ebx+4]
mov	esi, [esi+4]
test	ebx, ebx
jz	short loc_67D0993D
test	esi, esi
jnz	short loc_67D09918
			
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	serv_join_chat
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D099B6
mov	[esp+3Ch+arg_0], edi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_destroy
align 4
mov	[esp+3Ch+var_34], offset aRoomNull 
mov	[esp+3Ch+var_38], offset aPurple_room_11 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D099B6
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aListNull 
mov	[esp+3Ch+var_38], offset aPurple_room_11 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D09984
			
call	__stack_chk_fail
align 4
public purple_roomlist_room_get_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D099E0
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_room_get_name
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+4]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09A0D
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_room_get_parent
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09A39
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_roomlist_room_get_fields
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+8]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09A65
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_field_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D09AE0
test	edi, edi
jz	short loc_67D09B00
mov	[esp+4Ch+var_4C], 10h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[eax], edx
mov	[esp+4Ch+var_4C], esi
call	g_strdup
mov	[ebx+4], eax
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebx+8], eax
mov	[ebx+0Ch], ebp
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09B20
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], offset aLabelNull_2 
mov	[esp+4Ch+var_48], offset aPurple_room_12 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D09AC7
mov	[esp+4Ch+var_44], offset aNameNull_7 
mov	[esp+4Ch+var_48], offset aPurple_room_12 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D09AC7
call	__stack_chk_fail
align 4
public purple_roomlist_field_get_type
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09B4C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_field_get_label
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+4]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09B79
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_roomlist_field_get_hidden
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0Ch]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09BA5
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_roomlist_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D722D0, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D09BD3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_roomlist_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722D0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09BFB
add	esp, 1Ch
retn
call	__stack_chk_fail
			
push	ebx
sub	esp, 18h
mov	ecx, [esp+1Ch+arg_0]
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [ecx+14h]
cmp	eax, 0Ah
jbe	short loc_67D09C24
mov	eax, 0Ah
lea	edx, [eax+eax*4]
lea	edx, [eax+edx*4]
lea	edx, [eax+edx*8]
shl	edx, 2
sub	edx, eax
shl	edx, 7
add	edx, [ecx+10h]
mov	ecx, [ebx+14h]
cmp	ecx, 0Ah
jbe	short loc_67D09C45
mov	ecx, 0Ah
lea	eax, [ecx+ecx*4]
lea	eax, [ecx+eax*4]
lea	eax, [ecx+eax*8]
shl	eax, 2
sub	eax, ecx
shl	eax, 7
add	eax, [ebx+10h]
cmp	edx, eax
jg	short loc_67D09C74
setl	al
movzx	eax, al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D09C7B
add	esp, 18h
pop	ebx
retn
mov	eax, 0FFFFFFFFh
jmp	short loc_67D09C63
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722EC
test	eax, eax
jnz	short loc_67D09CB8
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67D0A054
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D722EC, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D09CC8
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D722F0
test	ebx, ebx
jz	loc_67D0A039
mov	[esp+5Ch+var_5C], offset aStatuses_0 
call	xmlnode_new
mov	[esp+5Ch+var_40], eax
mov	[esp+5Ch+var_54], offset a1_0_1	
mov	[esp+5Ch+var_58], offset aVersion_3 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, ds:dword_67D722E0
mov	[esp+5Ch+var_44], eax
test	eax, eax
jz	loc_67D09FA4
lea	esi, [esi+0]
mov	eax, [esp+5Ch+var_44]
mov	ebx, [eax]
mov	[esp+5Ch+var_5C], offset aStatus_0 
call	xmlnode_new
mov	[esp+5Ch+var_48], eax
mov	eax, [ebx]
test	eax, eax
jz	loc_67D09FFC
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aName_6 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [ebx+0Ch]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aLu 
mov	[esp+5Ch+var_58], 15h
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_5C], eax
call	g_snprintf
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aCreated 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [ebx+10h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aLu 
mov	[esp+5Ch+var_58], 15h
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_5C], eax
call	g_snprintf
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aLastused 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	eax, [ebx+14h]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], offset aU_1 
mov	[esp+5Ch+var_58], 15h
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_5C], eax
call	g_snprintf
lea	eax, [esp+5Ch+var_35]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aUsage_count 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_58], offset aState	
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	esi, eax
mov	eax, [ebx+4]
mov	[esp+5Ch+var_5C], eax
call	purple_primitive_get_id_from_type
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	xmlnode_insert_data
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_67D09E88
mov	[esp+5Ch+var_58], offset aMessage_1 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	edx, [ebx+8]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_data
mov	esi, [ebx+18h]
test	esi, esi
jz	loc_67D09F7D
nop
mov	ebp, [esi]
mov	[esp+5Ch+var_5C], offset aSubstatus 
call	xmlnode_new
mov	ebx, eax
mov	[esp+5Ch+var_58], offset aAccount_2 
mov	[esp+5Ch+var_5C], eax
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_protocol_id
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset aProtocol_2 
mov	[esp+5Ch+var_5C], edi
call	xmlnode_set_attrib
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	purple_account_get_username
mov	[esp+5Ch+var_58], eax
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	purple_normalize
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	xmlnode_insert_data
mov	[esp+5Ch+var_58], offset aState	
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_new_child
mov	edi, eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_5C], eax
call	purple_status_type_get_id
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], edi
call	xmlnode_insert_data
mov	edx, [ebp+8]
test	edx, edx
jz	short loc_67D09F62
mov	[esp+5Ch+var_58], offset aMessage_1 
mov	[esp+5Ch+var_5C], ebx
call	xmlnode_new_child
mov	[esp+5Ch+var_54], 0FFFFFFFFh
mov	edx, [ebp+8]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_data
mov	[esp+5Ch+var_58], ebx
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_child
mov	esi, [esi+4]
test	esi, esi
jnz	loc_67D09E94
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_58], eax
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_insert_child
mov	eax, [esp+5Ch+var_44]
mov	eax, [eax+4]
mov	[esp+5Ch+var_44], eax
test	eax, eax
jnz	loc_67D09D2C
mov	[esp+5Ch+var_58], 0
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_to_formatted_str
mov	ebx, eax
mov	[esp+5Ch+var_54], 0FFFFFFFFh 
mov	[esp+5Ch+var_58], eax 
mov	[esp+5Ch+var_5C], offset aStatus_xml 
call	purple_util_write_data_to_file
mov	[esp+5Ch+var_5C], ebx
call	g_free
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A04F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], offset aAutoCached 
mov	[esp+5Ch+var_58], offset aName_6 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
mov	[esp+5Ch+var_54], offset aTrue_1 
mov	[esp+5Ch+var_58], offset aTransient 
mov	eax, [esp+5Ch+var_48]
mov	[esp+5Ch+var_5C], eax
call	xmlnode_set_attrib
jmp	loc_67D09D64
mov	[esp+5Ch+var_58], offset aAttemptedToS_3 
mov	[esp+5Ch+var_5C], offset aStatus_0 
call	purple_debug_error
jmp	short loc_67D09FE6
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67D09CD0
mov	ds:dword_67D722EC, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A083
add	esp, 1Ch
retn
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0A138
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	edx, [esi+18h]
test	edx, edx
jz	short loc_67D0A0F5
mov	ebx, [edx]
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], edx
call	g_list_remove
mov	[esi+18h], eax
test	ebx, ebx
jz	short loc_67D0A118
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	purple_request_close_with_handle
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	edx, [esi+18h]
test	edx, edx
jnz	short loc_67D0A0BE
mov	[esp+2Ch+var_2C], esi
call	purple_request_close_with_handle
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A156
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aSubstatusNull	
mov	[esp+2Ch+var_28], offset aFree_saved_sta 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A0B7
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aFree_saved_s_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A105
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0A1C4
test	edx, edx
jnz	short loc_67D0A180
mov	edx, 1
jmp	short loc_67D0A180
mov	edx, [ebx+0Ch]
inc	edx
			
mov	[ebx+0Ch], edx
mov	[esp+2Ch+var_28], edx
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67D0A17C
mov	[esp+2Ch+var_24], ebx
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A1E2
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aSet_creation_t 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A1B0
call	__stack_chk_fail
align 4
public purple_savedstatus_set_type
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67D0A238
mov	[ebx+4], eax
call	sub_67D09C80
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSavedstatusMod 
mov	[esp+2Ch+var_2C], offset dword_67D722E4
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A256
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aPurple_savedst 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A224
call	__stack_chk_fail
align 4
public purple_savedstatus_set_message
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0A2D4
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
test	esi, esi
jz	short loc_67D0A28C
cmp	byte ptr [esi],	0
jz	short loc_67D0A2C8
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
call	sub_67D09C80
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSavedstatusMod 
mov	[esp+2Ch+var_2C], offset dword_67D722E4
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A2F2
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	dword ptr [ebx+8], 0
jmp	short loc_67D0A297
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aPurple_saved_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A2B4
call	__stack_chk_fail
align 4
public purple_savedstatus_unset_substatus
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0A3C0
test	edx, edx
jz	loc_67D0A3A0
mov	ecx, [esi+18h]
test	ecx, ecx
jz	short loc_67D0A341
mov	ebx, [ecx]
mov	eax, ecx
cmp	[ebx], edx
jnz	short loc_67D0A33A
jmp	short loc_67D0A36C
align 4
mov	ebx, [eax]
cmp	[ebx], edx
jz	short loc_67D0A36C
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_67D0A334
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aSavedstatusMod 
mov	[esp+2Ch+var_2C], offset dword_67D722E4
call	purple_signal_emit
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A3E1
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ecx
call	g_list_delete_link
mov	[esi+18h], eax
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A3E1
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
mov	[esp+2Ch+var_24], offset aAccountNull_10 
mov	[esp+2Ch+var_28], offset aPurple_saved_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A359
align 10h
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_saved_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D0A359
			
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D0A434
mov	ebx, ds:dword_67D722E0
test	ebx, ebx
jz	short loc_67D0A421
xchg	ax, ax
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	purple_savedstatus_unset_substatus
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D0A40C
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A452
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_10 
mov	[esp+2Ch+var_28], offset aPurple_saved_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A421
call	__stack_chk_fail
align 4
public purple_savedstatuses_get_all
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D722E0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A47B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_savedstatus_is_idleaway
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleSavedsta 
call	purple_prefs_get_bool
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A4AA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_savedstatus_find
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D0A50C
mov	ebx, ds:dword_67D722E0
test	ebx, ebx
jnz	short loc_67D0A4DF
jmp	short loc_67D0A508
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0A508
mov	esi, [ebx]
mov	[esp+2Ch+var_28], edi
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D0A4D8
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A52C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
xor	esi, esi
jmp	short loc_67D0A4F3
mov	[esp+2Ch+var_24], offset aTitleNull_1 
mov	[esp+2Ch+var_28], offset aPurple_saved_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D0A4F3
call	__stack_chk_fail
align 4
public purple_savedstatus_set_title
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0A58C
mov	[esp+2Ch+var_2C], esi
call	purple_savedstatus_find
test	eax, eax
jz	short loc_67D0A5AC
mov	[esp+2Ch+var_24], offset aPurple_saved_4 
mov	[esp+2Ch+var_28], offset aPurple_saved_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A5DF
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aPurple_saved_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0A578
align 4
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
call	sub_67D09C80
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSavedstatusMod 
mov	[esp+2Ch+var_2C], offset dword_67D722E4
call	purple_signal_emit
jmp	short loc_67D0A578
call	__stack_chk_fail
public purple_savedstatus_new
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D0A640
mov	[esp+2Ch+Time],	esi
call	purple_savedstatus_find
test	eax, eax
jz	short loc_67D0A640
mov	[esp+2Ch+var_24], offset aPurple_saved_4 
mov	[esp+2Ch+var_28], offset aPurple_saved_6 
mov	[esp+2Ch+Time],	0
call	g_return_if_fail_warning
xor	ebx, ebx
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A6B0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
mov	[esp+2Ch+Time],	1Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+Time],	esi
call	g_strdup
mov	[ebx], eax
mov	[ebx+4], edi
mov	[esp+2Ch+Time],	0 
call	time
mov	edx, eax
mov	eax, ebx
call	sub_67D0A15C
mov	[esp+2Ch+var_24], offset sub_67D09C00
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D722E0
mov	[esp+2Ch+Time],	eax
call	g_list_insert_sorted
mov	ds:dword_67D722E0, eax
call	sub_67D09C80
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSavedstatusAdd 
mov	[esp+2Ch+Time],	offset dword_67D722E4
call	purple_signal_emit
jmp	loc_67D0A62B
call	__stack_chk_fail
align 4
public purple_savedstatus_find_by_creation_time
sub	esp, 1Ch
mov	ecx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, ds:dword_67D722E0
test	edx, edx
jnz	short loc_67D0A6DF
jmp	short loc_67D0A6F8
align 4
mov	edx, [edx+4]
test	edx, edx
jz	short loc_67D0A6F8
mov	eax, [edx]
cmp	[eax+0Ch], ecx
jnz	short loc_67D0A6D8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A6FC
add	esp, 1Ch
retn
align 4
			
xor	eax, eax
jmp	short loc_67D0A6E6
call	__stack_chk_fail
align 4
public purple_savedstatus_is_transient
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0A738
mov	eax, [eax]
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A75B
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_saved_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67D0A725
call	__stack_chk_fail
public purple_savedstatus_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0A78C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A7AF
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_saved_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 1
jmp	short loc_67D0A77A
call	__stack_chk_fail
public purple_savedstatus_get_message
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0A7E0
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A800
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_saved_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0A7CE
call	__stack_chk_fail
align 4
public purple_savedstatus_get_title
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0A83C
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D0A85C
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0A915
add	esp, 24h
pop	ebx
pop	edi
retn
mov	[esp+2Ch+Count], offset	aSaved_statusNu	
mov	[esp+2Ch+Source], offset aPurple_save_10 
mov	[esp+2Ch+Dest],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0A826
mov	[esp+2Ch+Dest],	ebx
call	purple_savedstatus_get_message
test	eax, eax
jz	short loc_67D0A86D
cmp	byte ptr [eax],	0
jnz	short loc_67D0A894
mov	[esp+2Ch+Dest],	ebx
call	purple_savedstatus_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0A915
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	edi
jmp	purple_primitive_get_name_from_type
align 4
mov	[esp+2Ch+Dest],	eax
call	purple_markup_strip_html
mov	ebx, eax
mov	[esp+2Ch+Count], 20h
mov	[esp+2Ch+Source], 0Ah
mov	[esp+2Ch+Dest],	eax
call	purple_util_chrreplace
mov	[esp+2Ch+Count], 40h 
mov	[esp+2Ch+Source], ebx 
mov	[esp+2Ch+Dest],	offset Dest 
call	strncpy
mov	ds:byte_67D7233F, 0
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
cmp	ecx, 40h
ja	short loc_67D0A8F9
mov	[esp+2Ch+Dest],	ebx
call	g_free
mov	eax, offset Dest
jmp	loc_67D0A826
mov	[esp+2Ch+Source], offset byte_67D7233C
mov	[esp+2Ch+Dest],	offset Dest
call	g_utf8_find_prev_char
mov	dword ptr [eax], 2E2E2Eh
jmp	short loc_67D0A8E7
			
call	__stack_chk_fail
align 4
public purple_savedstatuses_get_popular
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+var_30]
test	eax, eax
jnz	short loc_67D0A946
mov	[esp+4Ch+var_30], 0FFFFFFFFh
mov	ebx, ds:dword_67D722E0
xor	edi, edi
test	ebx, ebx
jz	short loc_67D0A98E
xor	esi, esi
xor	edi, edi
jmp	short loc_67D0A95C
test	ebx, ebx
jz	short loc_67D0A98E
mov	ebp, [ebx]
mov	[esp+4Ch+var_4C], ebp
call	purple_savedstatus_is_transient
test	eax, eax
jz	short loc_67D0A976
mov	[esp+4Ch+var_4C], ebp
call	purple_savedstatus_get_message
test	eax, eax
jz	short loc_67D0A985
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], edi
call	g_list_prepend
mov	edi, eax
inc	esi
mov	ebx, [ebx+4]
cmp	esi, [esp+4Ch+var_30]
jb	short loc_67D0A958
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0A9AA
mov	[esp+4Ch+arg_0], edi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
call	__stack_chk_fail
align 10h
public purple_savedstatus_get_creation_time
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0A9DC
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0A9FC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_save_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0A9CA
call	__stack_chk_fail
align 4
public purple_savedstatus_delete_by_status
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0AAA8
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D722E0
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D722E0, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_savedstatus_get_creation_time
mov	esi, eax
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, ebx
call	sub_67D0A088
call	sub_67D09C80
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_0 
call	purple_prefs_get_int
cmp	eax, esi
jz	short loc_67D0AAC8
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_1 
call	purple_prefs_get_int
cmp	eax, esi
jz	short loc_67D0AAEC
			
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aSavedstatusDel 
mov	[esp+2Ch+var_2C], offset dword_67D722E4
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0AB05
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_0 
mov	[esp+2Ch+var_28], offset aPurple_save_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0AA95
align 4
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_0 
call	purple_prefs_set_int
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_1 
call	purple_prefs_get_int
cmp	eax, esi
jnz	short loc_67D0AA7D
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_1 
call	purple_prefs_set_int
jmp	loc_67D0AA7D
call	__stack_chk_fail
align 4
public purple_savedstatus_get_default
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_0 
call	purple_prefs_get_int
test	eax, eax
jnz	short loc_67D0AB6C
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], 0
call	purple_savedstatus_new
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	purple_savedstatus_get_creation_time
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_0 
call	purple_prefs_set_int
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0AB85
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jnz	short loc_67D0AB59
jmp	short loc_67D0AB2B
call	__stack_chk_fail
align 4
public purple_savedstatus_has_substatuses
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0ABC0
mov	eax, [eax+18h]
test	eax, eax
setnz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0ABE0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_save_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0ABAE
call	__stack_chk_fail
align 4
public purple_savedstatus_find_transient_by_type_and_message
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D722E0
test	ebx, ebx
jnz	short loc_67D0AC17
jmp	short loc_67D0AC50
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0AC50
			
mov	esi, [ebx]
cmp	[esi+4], edi
jnz	short loc_67D0AC10
mov	[esp+3Ch+var_3C], esi
call	purple_savedstatus_is_transient
test	eax, eax
jz	short loc_67D0AC10
mov	[esp+3Ch+var_3C], esi
call	purple_savedstatus_has_substatuses
test	eax, eax
jnz	short loc_67D0AC10
mov	[esp+3Ch+var_38], ebp
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D0AC52
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D0AC17
			
xor	esi, esi
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0AC68
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_savedstatus_get_idleaway
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_1 
call	purple_prefs_get_int
test	eax, eax
jnz	short loc_67D0ACCC
mov	[esp+2Ch+var_28], offset aIMNotHereRight 
mov	[esp+2Ch+var_2C], offset aPidgin_11 
call	libintl_dgettext
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 5
call	purple_savedstatus_find_transient_by_type_and_message
mov	ebx, eax
test	eax, eax
jz	short loc_67D0ACE8
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0AD38
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jnz	short loc_67D0ACB9
jmp	short loc_67D0AC8F
align 4
mov	[esp+2Ch+var_28], 5
mov	[esp+2Ch+var_2C], 0
call	purple_savedstatus_new
mov	ebx, eax
mov	[esp+2Ch+var_28], offset aIMNotHereRight 
mov	[esp+2Ch+var_2C], offset aPidgin_11 
call	libintl_dgettext
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_savedstatus_set_message
mov	[esp+2Ch+var_2C], ebx
call	purple_savedstatus_get_creation_time
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_1 
call	purple_prefs_set_int
jmp	short loc_67D0ACB9
call	__stack_chk_fail
align 10h
public purple_savedstatus_get_current
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_savedstatus_is_idleaway
test	eax, eax
jnz	short loc_67D0AD6C
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0AD80
add	esp, 1Ch
jmp	purple_savedstatus_get_default
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0AD80
add	esp, 1Ch
jmp	purple_savedstatus_get_idleaway
			
call	__stack_chk_fail
align 4
public purple_savedstatus_get_startup
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleSaveds_2 
call	purple_prefs_get_int
test	eax, eax
jnz	short loc_67D0ADB8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0ADDD
add	esp, 2Ch
jmp	short purple_savedstatus_get_current
align 4
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D722E8
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67D0ADA6
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0ADDD
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_savedstatus_delete
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_savedstatus_find
mov	ebx, eax
test	eax, eax
jz	short loc_67D0AE2C
call	purple_savedstatus_get_current
cmp	eax, ebx
jz	short loc_67D0AE2C
mov	[esp+2Ch+var_2C], ebx
call	purple_savedstatus_delete_by_status
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0AE30
add	esp, 28h
pop	ebx
retn
			
xor	eax, eax
jmp	short loc_67D0AE1B
call	__stack_chk_fail
align 4
public purple_savedstatus_get_substatus
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0AE84
test	ecx, ecx
jz	short loc_67D0AEA4
mov	edx, [eax+18h]
test	edx, edx
jnz	short loc_67D0AE67
jmp	short loc_67D0AE80
mov	edx, [edx+4]
test	edx, edx
jz	short loc_67D0AE80
mov	eax, [edx]
cmp	[eax], ecx
jnz	short loc_67D0AE60
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0AEC4
add	esp, 2Ch
retn
align 10h
			
xor	eax, eax
jmp	short loc_67D0AE6D
mov	[esp+2Ch+var_24], offset aSaved_statusNu 
mov	[esp+2Ch+var_28], offset aPurple_save_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0AE6D
mov	[esp+2Ch+var_24], offset aAccountNull_10 
mov	[esp+2Ch+var_28], offset aPurple_save_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0AE6D
call	__stack_chk_fail
align 4
public purple_savedstatus_set_substatus
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ebp, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D0AF70
test	edx, edx
jz	loc_67D0AFA4
test	edi, edi
jz	loc_67D0AFBC
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], edx
call	purple_savedstatus_get_substatus
mov	ebx, eax
test	eax, eax
mov	edx, [esp+4Ch+var_30]
jz	loc_67D0AFD4
mov	[ebx+4], edi
mov	eax, [ebx+8]
mov	[esp+4Ch+var_4C], eax
call	g_free
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+8], eax
call	sub_67D09C80
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0B003
mov	[esp+4Ch+arg_8], esi
mov	[esp+4Ch+arg_4], offset	aSavedstatusMod	
mov	[esp+4Ch+arg_0], offset	dword_67D722E4
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_signal_emit
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0B003
mov	[esp+4Ch+arg_8], offset	aSaved_statusNu	
			
mov	[esp+4Ch+arg_4], offset	aPurple_save_15	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B003
mov	[esp+4Ch+arg_8], offset	aAccountNull_10	
jmp	short loc_67D0AF88
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B003
mov	[esp+4Ch+arg_8], offset	aTypeNull_0 
jmp	short loc_67D0AF88
align 4
mov	[esp+4Ch+var_4C], 0Ch
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[eax], edx
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+18h]
mov	[esp+4Ch+var_4C], eax
call	g_list_prepend
mov	[esi+18h], eax
jmp	loc_67D0AF20
			
call	__stack_chk_fail
public purple_savedstatus_substatus_get_type
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0B034
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0B054
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSubstatusNull	
mov	[esp+2Ch+var_28], offset aPurple_save_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0B022
call	__stack_chk_fail
align 4
public purple_savedstatus_substatus_get_message
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0B088
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0B0A8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSubstatusNull	
mov	[esp+2Ch+var_28], offset aPurple_save_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0B076
call	__stack_chk_fail
align 10h
public purple_savedstatus_activate_for_account
			
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0B17C
test	ebx, ebx
jz	loc_67D0B19C
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], esi
call	purple_savedstatus_get_substatus
test	eax, eax
jz	loc_67D0B1BC
mov	edi, [eax+4]
mov	esi, [eax+8]
test	esi, esi
jz	short loc_67D0B154
mov	[esp+3Ch+var_38], offset aMessage_1 
mov	[esp+3Ch+var_3C], edi
call	purple_status_type_get_attr
test	eax, eax
jz	short loc_67D0B154
mov	[esp+3Ch+var_3C], edi
call	purple_status_type_get_id
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], offset aMessage_1 
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_set_status
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0B1DD
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
mov	[esp+3Ch+var_3C], edi
call	purple_status_type_get_id
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 1
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_set_status
jmp	short loc_67D0B13B
align 4
mov	[esp+3Ch+var_34], offset aSaved_statusNu 
mov	[esp+3Ch+var_38], offset aPurple_save_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0B13B
align 4
mov	[esp+3Ch+var_34], offset aAccountNull_10 
mov	[esp+3Ch+var_38], offset aPurple_save_18 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0B13B
align 4
mov	eax, [esi+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_account_get_status_type_with_primitive
mov	edi, eax
test	eax, eax
jz	loc_67D0B13B
mov	esi, [esi+8]
jmp	loc_67D0B0F3
call	__stack_chk_fail
align 4
public purple_savedstatus_set_idleaway
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_savedstatus_is_idleaway
cmp	eax, edi
jz	loc_67D0B2A9
call	purple_savedstatus_get_current
mov	[esp+4Ch+var_30], eax
test	edi, edi
jnz	loc_67D0B2C0
call	purple_savedstatus_get_default
mov	ebp, eax
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], offset aPurpleSavedsta 
call	purple_prefs_set_bool
call	purple_idle_touch
call	purple_accounts_get_all_active
mov	[esp+4Ch+var_34], eax
mov	ebx, eax
test	eax, eax
jz	short loc_67D0B27D
nop
mov	esi, [ebx]
mov	[esp+4Ch+var_4C], esi
call	purple_account_get_presence
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_active_status
test	edi, edi
jz	short loc_67D0B26A
mov	[esp+4Ch+var_4C], eax
call	purple_status_is_available
test	eax, eax
jz	short loc_67D0B276
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebp
call	purple_savedstatus_activate_for_account
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D0B248
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_list_free
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aSavedstatusCha 
mov	[esp+4Ch+var_4C], offset dword_67D722E4
call	purple_signal_emit
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B2ED
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	purple_savedstatus_get_idleaway
mov	ebp, eax
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], offset aPurpleSavedsta 
call	purple_prefs_set_bool
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_savedstatus_get_type
cmp	eax, 2
jnz	short loc_67D0B2A9
jmp	loc_67D0B238
call	__stack_chk_fail
align 4
public purple_savedstatus_activate
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
call	purple_savedstatus_get_current
test	esi, esi
jz	loc_67D0B3F8
mov	ebp, eax
mov	[esp+3Ch+Time],	0 
call	time
mov	[esi+10h], eax
inc	dword ptr [esi+14h]
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D722E0
mov	[esp+3Ch+Time],	eax
call	g_list_remove
mov	ds:dword_67D722E0, eax
mov	[esp+3Ch+var_34], offset sub_67D09C00
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+Time],	eax
call	g_list_insert_sorted
mov	ds:dword_67D722E0, eax
mov	[esp+3Ch+Time],	esi
call	purple_savedstatus_get_creation_time
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	offset aPurpleSaveds_0 
call	purple_prefs_set_int
call	purple_accounts_get_all_active
mov	edi, eax
mov	ebx, eax
test	eax, eax
jz	short loc_67D0B395
nop
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	esi
call	purple_savedstatus_activate_for_account
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D0B380
mov	[esp+3Ch+Time],	edi
call	g_list_free
call	purple_savedstatus_is_idleaway
test	eax, eax
jnz	short loc_67D0B3D8
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aSavedstatusCha 
mov	[esp+3Ch+Time],	offset dword_67D722E4
call	purple_signal_emit
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B416
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B416
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_savedstatus_set_idleaway
mov	[esp+3Ch+var_34], offset aSaved_statusNu 
mov	[esp+3Ch+var_38], offset aPurple_save_19 
mov	[esp+3Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67D0B3C2
			
call	__stack_chk_fail
align 4
public purple_savedstatuses_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D722E4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0B43F
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_savedstatuses_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_58], offset loc_67D2EBBC
mov	[esp+5Ch+Str], offset g_direct_hash
call	g_hash_table_new
mov	ds:dword_67D722E8, eax
mov	[esp+5Ch+Str], offset aPurpleSaveds_3 
call	purple_prefs_add_none
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Str], offset aPurpleSaveds_0 
call	purple_prefs_add_int
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Str], offset aPurpleSaveds_2 
call	purple_prefs_add_int
mov	[esp+5Ch+var_58], 1
mov	[esp+5Ch+Str], offset aPurpleSaveds_4 
call	purple_prefs_add_bool
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Str], offset aPurpleSaveds_1 
call	purple_prefs_add_int
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Str], offset aPurpleSavedsta 
call	purple_prefs_add_bool
mov	ds:dword_67D722F0, 1
mov	[esp+5Ch+var_58], offset aSavedStatuses	
mov	[esp+5Ch+Str], offset aPidgin_11 
call	libintl_dgettext
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], offset aStatus_xml 
call	purple_util_read_xml_from_file
mov	[esp+5Ch+var_30], eax
test	eax, eax
jz	loc_67D0B808
mov	[esp+5Ch+var_58], offset aStatus_0 
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_67D0B7E2
lea	esi, [esi+0]
mov	[esp+5Ch+Str], 1Ch
call	g_malloc0
mov	edi, eax
mov	[esp+5Ch+var_58], offset aTransient 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+var_58], offset aTrue_1 
mov	[esp+5Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	loc_67D0B99C
mov	eax, [edi]
test	eax, eax
jz	short loc_67D0B5B1
mov	ebx, 2
jmp	short loc_67D0B5A5
align 4
mov	eax, [edi]
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+Str], offset aSD 
call	g_strdup_printf
mov	[edi], eax
inc	ebx
mov	[esp+5Ch+Str], eax
call	purple_savedstatus_find
test	eax, eax
jnz	short loc_67D0B584
mov	[esp+5Ch+var_58], offset aCreated 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
test	eax, eax
jz	loc_67D0B984
mov	[esp+5Ch+Str], eax 
call	atol
mov	edx, eax
mov	eax, edi
call	sub_67D0A15C
mov	[esp+5Ch+var_58], offset aLastused 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
test	eax, eax
jz	loc_67D0B994
mov	[esp+5Ch+Str], eax 
call	atol
mov	[edi+10h], eax
mov	[esp+5Ch+var_58], offset aUsage_count 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
test	eax, eax
jz	loc_67D0B98C
mov	[esp+5Ch+Str], eax 
call	atol
mov	[edi+14h], eax
mov	[esp+5Ch+var_58], offset aState	
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D0B665
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_67D0B665
mov	[esp+5Ch+Str], eax
call	purple_primitive_get_type_from_id
mov	[edi+4], eax
mov	[esp+5Ch+Str], ebx
call	g_free
			
mov	[esp+5Ch+var_58], offset aMessage_1 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D0B68C
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67D0B68C
mov	[edi+8], eax
			
mov	[esp+5Ch+var_58], offset aSubstatus 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_67D0B7B4
xchg	ax, ax
mov	[esp+5Ch+Str], 0Ch
call	g_malloc0
mov	esi, eax
mov	[esp+5Ch+var_58], offset aAccount_2 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D0B71A
mov	[esp+5Ch+Str], eax
mov	[esp+5Ch+var_38], eax
call	xmlnode_get_data
mov	ebp, eax
mov	[esp+5Ch+var_58], offset aProtocol_2 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+Str], edx
call	xmlnode_get_attrib
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], ebp
call	_purple_oscar_convert
test	ebp, ebp
jz	short loc_67D0B712
test	eax, eax
jz	short loc_67D0B712
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Str], ebp
call	purple_accounts_find
mov	[esi], eax
			
mov	[esp+5Ch+Str], ebp
call	g_free
mov	eax, [esi]
test	eax, eax
jz	loc_67D0B974
mov	[esp+5Ch+var_58], offset aState	
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D0B762
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
mov	ebp, eax
test	eax, eax
jz	short loc_67D0B762
mov	[esp+5Ch+var_58], eax
mov	eax, [esi]
mov	eax, [eax+3Ch]
mov	[esp+5Ch+Str], eax
call	purple_status_type_find_with_id
mov	[esi+4], eax
mov	[esp+5Ch+Str], ebp
call	g_free
			
mov	eax, [esi+4]
test	eax, eax
jz	loc_67D0B974
mov	[esp+5Ch+var_58], offset aMessage_1 
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D0B790
mov	[esp+5Ch+Str], eax
call	xmlnode_get_data
test	eax, eax
jz	short loc_67D0B790
mov	[esi+8], eax
			
mov	[esp+5Ch+var_58], esi
mov	eax, [edi+18h]
mov	[esp+5Ch+Str], eax
call	g_list_prepend
mov	[edi+18h], eax
mov	[esp+5Ch+Str], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	loc_67D0B6AC
mov	[esp+5Ch+var_58], edi
mov	eax, ds:dword_67D722E0
mov	[esp+5Ch+Str], eax
call	g_list_prepend
mov	ds:dword_67D722E0, eax
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_next_twin
mov	[esp+5Ch+var_34], eax
test	eax, eax
jnz	loc_67D0B538
mov	[esp+5Ch+var_58], offset sub_67D09C00
mov	eax, ds:dword_67D722E0
mov	[esp+5Ch+Str], eax
call	g_list_sort
mov	ds:dword_67D722E0, eax
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Str], eax
call	xmlnode_free
mov	[esp+5Ch+var_58], 0Fh
mov	[esp+5Ch+Str], 1
call	purple_value_new
mov	ebx, eax
mov	[esp+5Ch+var_58], 0Fh
mov	[esp+5Ch+Str], 1
call	purple_value_new
mov	[esp+5Ch+var_44], ebx
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 2
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER_POINTER
mov	[esp+5Ch+var_58], offset aSavedstatusCha 
mov	[esp+5Ch+Str], offset dword_67D722E4
call	purple_signal_register
mov	[esp+5Ch+var_58], 0Fh
mov	[esp+5Ch+Str], 1
call	purple_value_new
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 1
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER
mov	[esp+5Ch+var_58], offset aSavedstatusAdd 
mov	[esp+5Ch+Str], offset dword_67D722E4
call	purple_signal_register
mov	[esp+5Ch+var_58], 0Fh
mov	[esp+5Ch+Str], 1
call	purple_value_new
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 1
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER
mov	[esp+5Ch+var_58], offset aSavedstatusDel 
mov	[esp+5Ch+Str], offset dword_67D722E4
call	purple_signal_register
mov	[esp+5Ch+var_58], 0Fh
mov	[esp+5Ch+Str], 1
call	purple_value_new
mov	[esp+5Ch+var_48], eax
mov	[esp+5Ch+var_4C], 1
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], offset purple_marshal_VOID__POINTER
mov	[esp+5Ch+var_58], offset aSavedstatusMod 
mov	[esp+5Ch+Str], offset dword_67D722E4
call	purple_signal_register
call	purple_accounts_get_handle
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset loc_67D0A3E8
mov	[esp+5Ch+var_54], offset dword_67D722E4
mov	[esp+5Ch+var_58], offset aAccountRemov_0 
mov	[esp+5Ch+Str], eax
call	purple_signal_connect
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0B9C1
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	[esp+5Ch+Str], esi
call	g_free
jmp	loc_67D0B7A2
align 4
xor	edx, edx
jmp	loc_67D0B5D7
align 4
xor	eax, eax
jmp	loc_67D0B629
align 4
xor	eax, eax
jmp	loc_67D0B602
align 4
mov	[esp+5Ch+var_58], offset aName_6 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Str], eax
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+5Ch+Str], eax
call	g_strdup
mov	[edi], eax
jmp	loc_67D0B576
call	__stack_chk_fail
align 4
public purple_savedstatuses_uninit
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
call	purple_savedstatus_get_current
mov	edi, eax
mov	edx, ds:dword_67D722E0
xor	esi, esi
test	edx, edx
jnz	short loc_67D0B9F7
jmp	short loc_67D0BA59
align 10h
inc	esi
			
mov	edx, ebx
test	ebx, ebx
jz	short loc_67D0BA50
			
mov	ebx, [edx+4]
mov	ebp, [edx]
mov	[esp+3Ch+Time],	ebp
call	purple_savedstatus_is_transient
test	eax, eax
jz	short loc_67D0B9F1
cmp	esi, 5
jnz	short loc_67D0B9F0
cmp	edi, ebp
jz	short loc_67D0B9F1
mov	[esp+3Ch+var_38], ebp
mov	eax, ds:dword_67D722E0
mov	[esp+3Ch+Time],	eax
call	g_list_remove
mov	ds:dword_67D722E0, eax
mov	[esp+3Ch+Time],	ebp
call	purple_savedstatus_get_creation_time
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D722E8
mov	[esp+3Ch+Time],	eax
call	g_hash_table_remove
mov	eax, ebp
call	sub_67D0A088
mov	edx, ebx
test	ebx, ebx
jnz	short loc_67D0B9F7
lea	esi, [esi+0]
cmp	esi, 5
jz	loc_67D0BAE4
			
mov	eax, ds:dword_67D722EC
test	eax, eax
jz	short loc_67D0BA7E
jmp	short loc_67D0BACB
mov	ebx, [edx]
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	edx
call	g_list_remove
mov	ds:dword_67D722E0, eax
mov	eax, ebx
call	sub_67D0A088
			
mov	edx, ds:dword_67D722E0
test	edx, edx
jnz	short loc_67D0BA64
mov	eax, ds:dword_67D722E8
mov	[esp+3Ch+Time],	eax
call	g_hash_table_destroy
mov	ds:dword_67D722E8, 0
mov	[esp+3Ch+Time],	offset dword_67D722E4
call	purple_signals_unregister_by_instance
mov	[esp+3Ch+Time],	offset dword_67D722E4
call	purple_signals_disconnect_by_handle
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0BAEE
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+Time],	eax
call	purple_timeout_remove
mov	ds:dword_67D722EC, 0
call	sub_67D09CD0
jmp	short loc_67D0BA7E
call	sub_67D09C80
jmp	loc_67D0BA59
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+68h+var_4C], eax
xor	eax, eax
mov	eax, ds:dword_67D72340
test	eax, eax
jnz	short loc_67D0BB16
jmp	short loc_67D0BB55
align 10h
mov	eax, esi
test	esi, esi
jz	short loc_67D0BB55
			
mov	esi, [eax+4]
mov	ebx, [eax]
mov	dword ptr [esp+0], 0 
call	time
sub	eax, [ebx+54h]
cmp	eax, 258h
jle	short loc_67D0BB10
mov	[esp+4], ebx
mov	eax, ds:dword_67D72340
mov	[esp+0], eax
call	g_slist_remove
mov	ds:dword_67D72340, eax
mov	[esp+0], ebx
call	g_free
mov	eax, esi
test	esi, esi
jnz	short loc_67D0BB16
			
xor	eax, eax
mov	edx, [esp+68h+var_4C]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0BB69
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+MaxCount], 0
mov	[esp+3Ch+Str2],	offset loc_67D0BAF4
mov	[esp+3Ch+Str1],	259h
call	purple_timeout_add_seconds
mov	ebx, ds:dword_67D72340
test	ebx, ebx
jnz	short loc_67D0BBB7
jmp	short loc_67D0BBF0
align 10h
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0BBF0
mov	esi, [ebx]
cmp	[esi], edi
jnz	short loc_67D0BBB0
mov	[esp+3Ch+MaxCount], 50h	
lea	eax, [esi+4]
mov	[esp+3Ch+Str2],	eax 
mov	[esp+3Ch+Str1],	ebp 
call	strncmp
test	eax, eax
jnz	short loc_67D0BBB0
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0BC3E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
mov	[esp+3Ch+Str1],	58h
call	g_malloc0
mov	esi, eax
mov	[esp+3Ch+var_30], ebp
mov	[esp+3Ch+MaxCount], offset aS_9	
mov	[esp+3Ch+Str2],	50h
lea	eax, [eax+4]
mov	[esp+3Ch+Str1],	eax
call	g_snprintf
mov	[esi], edi
mov	dword ptr [esi+54h], 0
mov	[esp+3Ch+Str2],	esi
mov	eax, ds:dword_67D72340
mov	[esp+3Ch+Str1],	eax
call	g_slist_prepend
mov	ds:dword_67D72340, eax
jmp	short loc_67D0BBD8
call	__stack_chk_fail
align 4
public serv_send_typing
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0BC9C
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+58h]
test	eax, eax
jz	short loc_67D0BC9C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0BCB1
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	eax
align 4
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0BCB1
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
public serv_send_im
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	edx, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_38], edx
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0BE04
mov	[esp+4Ch+Time],	ebx
call	purple_connection_get_prpl
test	eax, eax
jz	loc_67D0BE2C
mov	eax, [eax+10h]
mov	ebp, [eax+4Ch]
mov	[esp+4Ch+Time],	ebx
call	purple_connection_get_account
mov	esi, eax
mov	[esp+4Ch+Time],	eax
call	purple_account_get_presence
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	1
call	purple_find_conversation_with_account
mov	esi, eax
mov	eax, [ebp+50h]
test	eax, eax
jz	loc_67D0BDF8
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_40], edx
mov	edx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+Time],	ebx
call	eax
mov	ebp, eax
mov	[esp+4Ch+Time],	offset aPurpleAwayAu_5 
call	purple_prefs_get_string
mov	edx, eax
test	byte ptr [ebx+4], 4
jnz	short loc_67D0BDAC
			
test	esi, esi
jz	short loc_67D0BD7E
mov	[esp+4Ch+Time],	esi
call	purple_conversation_get_im_data
mov	[esp+4Ch+Time],	eax
call	purple_conv_im_get_send_typed_timeout
test	eax, eax
jnz	short loc_67D0BD98
			
mov	eax, ebp
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0BE52
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Time],	esi
call	purple_conversation_get_im_data
mov	[esp+4Ch+Time],	eax
call	purple_conv_im_stop_send_typed_timeout
jmp	short loc_67D0BD7E
align 4
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Time],	eax
mov	[esp+4Ch+var_3C], edx
call	purple_presence_is_available
test	eax, eax
mov	edx, [esp+4Ch+var_3C]
jnz	short loc_67D0BD66
mov	[esp+4Ch+var_48], offset aNever_0 
mov	[esp+4Ch+Time],	edx
call	purple_strequal
test	eax, eax
jnz	short loc_67D0BD66
mov	edx, edi
mov	eax, ebx
call	sub_67D0BB70
mov	ebx, eax
mov	[esp+4Ch+Time],	0 
call	time
mov	[ebx+54h], eax
jmp	loc_67D0BD66
align 4
mov	ebp, 0FFFFFFEAh
jmp	loc_67D0BD52
align 4
mov	[esp+4Ch+var_44], offset aGcNull_3 
mov	[esp+4Ch+var_48], offset aServ_send_im 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
mov	ebp, 0FFFFFFEAh
jmp	loc_67D0BD7E
align 4
mov	[esp+4Ch+var_44], offset aPrplNull 
mov	[esp+4Ch+var_48], offset aServ_send_im 
mov	[esp+4Ch+Time],	0
call	g_return_if_fail_warning
mov	ebp, 0FFFFFFEAh
jmp	loc_67D0BD7E
call	__stack_chk_fail
align 4
public serv_get_info
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0BEA4
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+5Ch]
test	eax, eax
jz	short loc_67D0BEA4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0BEB6
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0BEB6
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public serv_set_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0BF1A
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	edi, [eax+4Ch]
mov	eax, [edi+54h]
test	eax, eax
jz	short loc_67D0BF1A
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_account
mov	ebp, eax
call	purple_accounts_get_handle
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aAccountSetti_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit_return_1
test	eax, eax
jz	short loc_67D0BF30
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0BF59
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	dword ptr [edi+54h]
call	purple_accounts_get_handle
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aAccountSetIn_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit
jmp	short loc_67D0BF1A
call	__stack_chk_fail
align 10h
public serv_alias_buddy
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0BFCB
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_account
test	eax, eax
jz	short loc_67D0BFCB
mov	[esp+3Ch+var_3C], eax
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	short loc_67D0BFCB
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	edi, [eax+0BCh]
test	edi, edi
jz	short loc_67D0BFCB
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_local_buddy_alias
mov	ebp, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_buddy_get_name
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	edi
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0BFDF
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
public serv_got_alias
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_3C], edx
mov	ebx, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
mov	[esp+5Ch+Time],	eax
call	purple_connection_get_account
mov	ebp, eax
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	purple_find_buddies
mov	edi, eax
xchg	ax, ax
			
test	edi, edi
jz	loc_67D0C154
mov	esi, [edi]
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+Time],	edi
call	g_slist_delete_link
mov	edi, eax
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_server_alias
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D0C024
mov	[esp+5Ch+var_58], ebx
mov	[esp+5Ch+Time],	esi
call	purple_blist_server_alias_buddy
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_name
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+Time],	1
call	purple_find_conversation_with_account
mov	esi, eax
test	eax, eax
jz	short loc_67D0C024
test	ebx, ebx
jz	short loc_67D0C024
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	ebx
call	purple_strequal
test	eax, eax
jnz	short loc_67D0C024
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+Time],	edx
call	g_markup_escape_text
mov	[esp+5Ch+var_38], eax
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+Time],	ebx
call	g_markup_escape_text
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+var_58], offset aSIsNowKnownA_0 
mov	[esp+5Ch+Time],	offset aPidgin_12 
call	libintl_dgettext
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	[esp+5Ch+var_30], eax
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], 4004h
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+Time],	esi
call	purple_conversation_write
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Time],	eax
call	g_free
test	edi, edi
jnz	loc_67D0C02C
xchg	ax, ax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C168
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_serv_got_private_alias
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_connection_get_account
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	purple_find_buddies
mov	ebx, eax
nop
test	ebx, ebx
jz	short loc_67D0C1E0
mov	esi, [ebx]
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], ebx
call	g_slist_delete_link
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_get_local_buddy_alias
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D0C1A4
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	purple_blist_alias_buddy
test	ebx, ebx
jnz	short loc_67D0C1A8
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C1F3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
public purple_get_attention_type_from_code
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C258
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_protocol_id
mov	[esp+2Ch+var_2C], eax
call	purple_find_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+118h]
test	eax, eax
jz	short loc_67D0C274
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C288
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	g_list_nth_data
align 4
mov	[esp+2Ch+var_24], offset aAccountNull_11 
mov	[esp+2Ch+var_28], offset aPurple_get_att 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C288
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public serv_send_attention
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0C2CD
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	purple_prpl_send_attention
call	__stack_chk_fail
align 4
public serv_got_attention
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0C311
mov	[esp+1Ch+arg_8], ecx
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	purple_prpl_got_attention
call	__stack_chk_fail
align 4
public serv_move_buddy
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0C3C8
test	edi, edi
jz	loc_67D0C3F8
test	ebp, ebp
jz	loc_67D0C410
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_account
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	short loc_67D0C3B1
mov	[esp+4Ch+var_4C], esi
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	edx, [eax+0C0h]
test	edx, edx
jz	short loc_67D0C3B1
mov	[esp+4Ch+var_4C], ebp
mov	[esp+4Ch+var_30], edx
call	purple_group_get_name
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	purple_group_get_name
mov	edi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_buddy_get_name
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
mov	edx, [esp+4Ch+var_30]
call	edx
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C426
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C426
mov	[esp+4Ch+arg_8], offset	aBNull 
			
mov	[esp+4Ch+arg_4], offset	aServ_move_budd	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C426
mov	[esp+4Ch+arg_8], offset	aOgNull	
jmp	short loc_67D0C3DC
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C426
mov	[esp+4Ch+arg_8], offset	aNgNull	
jmp	short loc_67D0C3DC
			
call	__stack_chk_fail
align 4
public serv_add_permit
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C478
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+7Ch]
test	eax, eax
jz	short loc_67D0C478
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C48A
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C48A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public serv_add_deny
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C4E0
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+80h]
test	eax, eax
jz	short loc_67D0C4E0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C4F2
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C4F2
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public serv_rem_permit
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C548
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+84h]
test	eax, eax
jz	short loc_67D0C548
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C55A
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C55A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public serv_rem_deny
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C5B0
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+88h]
test	eax, eax
jz	short loc_67D0C5B0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C5C2
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C5C2
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public serv_set_permit_deny
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C610
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+8Ch]
test	eax, eax
jz	short loc_67D0C610
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C621
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	eax
align 10h
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C621
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public serv_join_chat
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C678
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+90h]
test	eax, eax
jz	short loc_67D0C678
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C68A
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C68A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	serv_join_chat
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67D0C6C3
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C6DC
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 4
public serv_reject_chat
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C734
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+94h]
test	eax, eax
jz	short loc_67D0C734
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C746
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C746
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	serv_reject_chat
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67D0C77F
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C798
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
align 10h
public serv_chat_invite
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0C7D0
cmp	byte ptr [eax],	0
jnz	loc_67D0C8A0
xor	eax, eax
mov	[esp+5Ch+var_24], eax
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	purple_find_chat
mov	esi, eax
test	eax, eax
jz	loc_67D0C88B
test	ebx, ebx
jz	loc_67D0C8B0
mov	[esp+5Ch+var_5C], ebx
call	purple_connection_get_prpl
test	eax, eax
jz	loc_67D0C8B0
mov	eax, [eax+10h]
mov	edx, [eax+4Ch]
mov	[esp+5Ch+var_30], edx
call	purple_conversations_get_handle
lea	ecx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_4C], ecx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aChatInviting_0 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_emit
mov	edx, [esp+5Ch+var_30]
test	edx, edx
jz	short loc_67D0C85A
mov	eax, [edx+9Ch]
test	eax, eax
jz	short loc_67D0C85A
mov	[esp+5Ch+var_50], edi
mov	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+var_58], ebp
mov	[esp+5Ch+var_5C], ebx
call	eax
			
mov	ebx, [esp+5Ch+var_24]
call	purple_conversations_get_handle
mov	[esp+5Ch+var_4C], ebx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aChatInvitedU_0 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_emit
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C8D7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_5C], eax
call	g_strdup
jmp	loc_67D0C7D2
align 10h
			
call	purple_conversations_get_handle
lea	edx, [esp+5Ch+var_24]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aChatInviting_0 
mov	[esp+5Ch+var_5C], eax
call	purple_signal_emit
jmp	short loc_67D0C85A
call	__stack_chk_fail
public serv_chat_leave
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0A0h]
test	eax, eax
jz	short loc_67D0C928
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C93A
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C93A
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 10h
public serv_chat_whisper
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0C9A4
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0A4h]
test	eax, eax
jz	short loc_67D0C9A4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0C9B8
mov	[esp+3Ch+arg_C], ebp
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0C9B8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public serv_chat_send
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	ebp, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0A8h]
test	eax, eax
jz	short loc_67D0CA20
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0CA39
mov	[esp+3Ch+arg_C], ebp
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
mov	eax, 0FFFFFFEAh
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0CA39
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public serv_got_im
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	esi, [esp+6Ch+arg_8]
mov	ebp, [esp+6Ch+arg_10]
mov	eax, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0CB90
mov	[esp+6Ch+Time],	edi
call	purple_connection_get_account
mov	[esp+6Ch+var_40], eax
test	ebp, ebp
js	loc_67D0CBB0
or	[esp+6Ch+var_30], 2
mov	[esp+6Ch+var_68], ebx
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	eax
call	purple_privacy_check
test	eax, eax
jz	loc_67D0CB5C
mov	eax, [edi+0Ch]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	1
call	purple_find_conversation_with_account
mov	[esp+6Ch+var_3C], eax
mov	[esp+6Ch+Time],	esi
call	g_strdup
mov	[esp+6Ch+var_24], eax
mov	[esp+6Ch+Time],	ebx
call	g_strdup
mov	[esp+6Ch+var_28], eax
mov	ebx, [edi+0Ch]
call	purple_conversations_get_handle
lea	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_54], edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_58], edx
lea	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+var_5C], edx
lea	edx, [esp+6Ch+var_28]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aReceivingImM_0 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit_return_1
mov	esi, [esp+6Ch+var_24]
test	esi, esi
jz	short loc_67D0CB2D
mov	ebx, [esp+6Ch+var_28]
test	ebx, ebx
jz	short loc_67D0CB2D
test	eax, eax
jz	loc_67D0CBD8
			
mov	[esp+6Ch+Time],	esi
call	g_free
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Time],	eax
call	g_free
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0CE04
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, [esp+6Ch+var_30]
call	purple_conversations_get_handle
mov	[esp+6Ch+var_54], ebp
mov	[esp+6Ch+var_58], edi
mov	[esp+6Ch+var_5C], esi
mov	[esp+6Ch+var_60], ebx
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+var_68], offset aBlockedImMsg_0 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit
jmp	short loc_67D0CB41
align 10h
mov	[esp+6Ch+var_64], offset aMsgNull_0 
mov	[esp+6Ch+var_68], offset aServ_got_im 
mov	[esp+6Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67D0CB41
align 10h
mov	[esp+6Ch+var_68], offset aServ_got_imIgn 
mov	[esp+6Ch+Time],	offset aServer_1 
call	purple_debug_error
mov	[esp+6Ch+Time],	0 
call	time
mov	ebp, eax
jmp	loc_67D0CA89
align 4
mov	edx, [esp+6Ch+var_30]
mov	ecx, [edi+0Ch]
mov	[esp+6Ch+var_48], edx
mov	[esp+6Ch+var_44], ecx
call	purple_conversations_get_handle
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_54], edx
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], esi
mov	[esp+6Ch+var_60], ebx
mov	ecx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aReceivedImMs_1 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit
mov	edx, [esp+6Ch+var_3C]
test	edx, edx
jz	loc_67D0CDC0
			
mov	edx, [esp+6Ch+var_30]
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_48], edx
call	purple_conversation_get_im_data
mov	[esp+6Ch+var_5C], ebp
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	eax
call	purple_conv_im_write
mov	[esp+6Ch+Time],	esi
call	g_free
test	byte ptr [edi+4], 4
jz	short loc_67D0CCC6
mov	[esp+6Ch+Time],	offset aPurpleAwayAu_5 
call	purple_prefs_get_string
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	eax
call	purple_account_get_presence
mov	esi, eax
mov	[esp+6Ch+Time],	eax
call	purple_presence_get_active_status
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+Time],	eax
call	purple_status_get_type
mov	[esp+6Ch+Time],	eax
call	purple_status_type_get_primitive
mov	[esp+6Ch+var_40], eax
mov	[esp+6Ch+var_68], 7
mov	[esp+6Ch+Time],	esi
call	purple_presence_is_status_primitive_active
cmp	[esp+6Ch+var_40], 2
jz	short loc_67D0CCC6
cmp	[esp+6Ch+var_40], 4
jz	short loc_67D0CCC6
test	eax, eax
jz	short loc_67D0CCD3
			
mov	[esp+6Ch+Time],	ebx
call	g_free
jmp	loc_67D0CB41
mov	[esp+6Ch+var_68], offset aNever_0 
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D0CCC6
mov	[esp+6Ch+Time],	esi
call	purple_presence_is_idle
test	eax, eax
jnz	short loc_67D0CD0F
mov	[esp+6Ch+var_68], offset aAwayidle_0 
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D0CCC6
mov	[esp+6Ch+var_68], offset aMessage_2 
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	eax
call	purple_status_get_attr_value
mov	[esp+6Ch+Time],	eax
call	purple_value_get_string
mov	esi, eax
test	eax, eax
jz	short loc_67D0CCC6
cmp	byte ptr [eax],	0
jz	short loc_67D0CCC6
mov	[esp+6Ch+Time],	0 
call	time
mov	ecx, eax
mov	edx, ebx
mov	eax, edi
mov	[esp+6Ch+var_44], ecx
call	sub_67D0BB70
mov	ecx, [esp+6Ch+var_44]
mov	edx, ecx
sub	edx, [eax+54h]
cmp	edx, 257h
jle	loc_67D0CCC6
mov	[eax+54h], ecx
test	byte ptr [esp+6Ch+var_30], 8
jnz	loc_67D0CCC6
mov	[esp+6Ch+var_60], 8
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	edi
call	serv_send_im
mov	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	eax
call	purple_conversation_get_im_data
mov	[esp+6Ch+var_5C], ebp
mov	[esp+6Ch+var_60], 9
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+Time],	eax
call	purple_conv_im_write
jmp	loc_67D0CCC6
align 10h
mov	eax, [edi+0Ch]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+Time],	1
call	purple_find_conversation_with_account
mov	[esp+6Ch+var_3C], eax
test	eax, eax
jnz	loc_67D0CC28
mov	[esp+6Ch+var_64], ebx
mov	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+Time],	1
call	purple_conversation_new
mov	[esp+6Ch+var_3C], eax
jmp	loc_67D0CC28
call	__stack_chk_fail
align 4
public serv_got_typing
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+0Ch]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67D0CE88
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_get_im_data
mov	esi, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], eax
call	purple_conv_im_set_typing_state
test	ebx, ebx
jle	short loc_67D0CE94
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0CF2E
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_conv_im_start_typing_timeout
align 4
cmp	edi, 1
jz	short loc_67D0CF08
jb	short loc_67D0CEAC
cmp	edi, 2
jz	short loc_67D0CEE0
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0CF2E
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebx, [ebp+0Ch]
call	purple_conversations_get_handle
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0CF2E
mov	[esp+3Ch+arg_C], esi
mov	[esp+3Ch+arg_8], ebx
mov	[esp+3Ch+arg_4], offset	aBuddyTypingS_1	
			
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_signal_emit
mov	ebx, [ebp+0Ch]
call	purple_conversations_get_handle
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0CF2E
mov	[esp+3Ch+arg_C], esi
mov	[esp+3Ch+arg_8], ebx
mov	[esp+3Ch+arg_4], offset	aBuddyTyped_1 
jmp	short loc_67D0CED0
align 4
mov	ebx, [ebp+0Ch]
call	purple_conversations_get_handle
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0CF2E
mov	[esp+3Ch+arg_C], esi
mov	[esp+3Ch+arg_8], ebx
mov	[esp+3Ch+arg_4], offset	aBuddyTyping_1 
jmp	short loc_67D0CED0
			
call	__stack_chk_fail
align 4
public serv_got_typing_stopped
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esi+0Ch]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], 1
call	purple_find_conversation_with_account
test	eax, eax
jz	short loc_67D0CFBC
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_get_im_data
mov	ecx, [eax+4]
test	ecx, ecx
jnz	short loc_67D0CF88
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0CFDE
add	esp, 34h
pop	ebx
pop	esi
retn
mov	[esp+3Ch+var_3C], eax
mov	[esp+3Ch+var_20], eax
call	purple_conv_im_stop_typing_timeout
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
mov	eax, [esp+3Ch+var_20]
jnz	short loc_67D0CFDE
mov	[esp+3Ch+arg_4], 0
mov	[esp+3Ch+arg_0], eax
add	esp, 34h
pop	ebx
pop	esi
jmp	purple_conv_im_set_typing_state
align 4
mov	esi, [esi+0Ch]
call	purple_conversations_get_handle
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aBuddyTypingS_1 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit
jmp	short loc_67D0CF76
			
call	__stack_chk_fail
align 4
public serv_got_chat_invite
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 106Ch
call	sub_67D2FA40
sub	esp, eax
mov	edx, [esp+10h+arg_106C]
mov	[esp+10h+arg_34], edx
mov	esi, [esp+10h+arg_1070]
mov	ebx, [esp+10h+arg_1074]
mov	edx, [esp+10h+arg_1078]
mov	[esp+10h+arg_38], edx
mov	ebp, [esp+10h+arg_107C]
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_1048], eax
xor	eax, eax
test	esi, esi
jz	loc_67D0D218
test	ebx, ebx
jz	loc_67D0D23C
mov	edx, [esp+10h+arg_34]
mov	[esp+10h+var_10], edx
call	purple_connection_get_account
mov	edi, eax
mov	[esp+10h+var_C], ebx
mov	[esp+10h+var_10], eax
call	purple_privacy_check
test	eax, eax
jz	loc_67D0D1D4
mov	[esp+10h+var_10], 8
call	g_malloc0
mov	[esp+10h+arg_2C], eax
call	purple_conversations_get_handle
mov	[esp+10h+arg_4], ebp
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+arg_0], edx
mov	[esp+10h], esi
mov	[esp+10h+var_4], ebx
mov	[esp+10h+var_8], edi
mov	[esp+10h+var_C], offset	aChatInvited_0 
mov	[esp+10h+var_10], eax
call	purple_signal_emit_return_1
mov	ecx, [esp+10h+arg_2C]
mov	edx, [esp+10h+arg_34]
mov	[ecx], edx
mov	[ecx+4], ebp
cmp	eax, 0
jnz	loc_67D0D204
mov	ebp, [esp+10h+arg_38]
test	ebp, ebp
mov	[esp+10h+var_10], edi
jz	loc_67D0D260
call	purple_account_get_username
mov	ebp, eax
mov	[esp+10h+var_C], offset	aSHasInvitedSTo	
mov	[esp+10h+var_10], offset aPidgin_12 
call	libintl_dgettext
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+arg_4], edx
mov	[esp+10h+arg_0], esi
mov	[esp+10h], ebp
mov	[esp+10h+var_4], ebx
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], 1000h
lea	esi, [esp+10h+arg_48]
mov	[esp+10h+var_10], esi
call	g_snprintf
mov	ecx, [esp+10h+arg_2C]
mov	[esp+10h+var_C], offset	a_cancel_1 
mov	[esp+10h+var_10], offset aPidgin_12 
mov	[esp+10h+arg_2C], ecx
call	libintl_dgettext
mov	[esp+10h+var_C], offset	a_accept_1 
mov	[esp+10h+var_10], offset aPidgin_12 
mov	[esp+10h+arg_30], eax
call	libintl_dgettext
mov	ebp, eax
mov	[esp+10h+var_C], offset	aAcceptChatInvi	
mov	[esp+10h+var_10], offset aPidgin_12 
call	libintl_dgettext
mov	[esp+10h+arg_20], offset sub_67D0C74C
mov	edx, [esp+10h+arg_30]
mov	[esp+10h+arg_1C], edx
mov	[esp+10h+arg_18], offset sub_67D0C690
mov	[esp+10h+arg_14], ebp
mov	[esp+10h+arg_10], 2
mov	ecx, [esp+10h+arg_2C]
mov	[esp+10h+arg_C], ecx
mov	[esp+10h+arg_8], 0
mov	[esp+10h+arg_4], ebx
mov	[esp+10h+arg_0], edi
mov	dword ptr [esp+10h], 0FFFFFFFFh
mov	[esp+10h+var_4], esi
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], 0
mov	edx, [esp+10h+arg_34]
mov	[esp+10h+var_10], edx
call	purple_request_action
xchg	ax, ax
			
mov	eax, [esp+10h+arg_1048]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0D2AC
add	esp, 106Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
call	purple_conversations_get_handle
mov	[esp+10h+arg_4], ebp
mov	edx, [esp+10h+arg_38]
mov	[esp+10h+arg_0], edx
mov	[esp+10h], esi
mov	[esp+10h+var_4], ebx
mov	[esp+10h+var_8], edi
mov	[esp+10h+var_C], offset	aChatInviteBl_0	
mov	[esp+10h+var_10], eax
call	purple_signal_emit
jmp	short loc_67D0D1B4
align 4
mov	[esp+10h+var_10], ecx
jle	short loc_67D0D210
call	sub_67D0C690
jmp	short loc_67D0D1B4
call	sub_67D0C74C
jmp	short loc_67D0D1B4
align 4
mov	[esp+10h+var_8], offset	aNameNull_8 
mov	[esp+10h+var_C], offset	aServ_got_chat_	
mov	[esp+10h+var_10], 0
call	g_return_if_fail_warning
jmp	loc_67D0D1B4
align 4
mov	[esp+10h+var_8], offset	aWhoNull_4 
mov	[esp+10h+var_C], offset	aServ_got_chat_	
mov	[esp+10h+var_10], 0
call	g_return_if_fail_warning
jmp	loc_67D0D1B4
align 10h
mov	[esp+10h+arg_2C], ecx
call	purple_account_get_username
mov	ebp, eax
mov	[esp+10h+var_C], offset	aSHasInvitedS_0	
mov	[esp+10h+var_10], offset aPidgin_12 
call	libintl_dgettext
mov	[esp+10h+arg_0], esi
mov	[esp+10h], ebp
mov	[esp+10h+var_4], ebx
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], 1000h
lea	esi, [esp+10h+arg_48]
mov	[esp+10h+var_10], esi
call	g_snprintf
mov	ecx, [esp+10h+arg_2C]
jmp	loc_67D0D10C
call	__stack_chk_fail
align 4
public serv_got_joined_chat
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], esi
call	purple_connection_get_account
test	eax, eax
jz	loc_67D0D364
test	ebx, ebx
jz	loc_67D0D384
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], 2
call	purple_conversation_new
mov	ebx, eax
test	eax, eax
jz	loc_67D0D3A4
mov	[esp+3Ch+var_3C], eax
call	purple_conversation_get_chat_data
mov	ebp, eax
mov	[esp+3Ch+var_38], ebx
mov	eax, [esi+18h]
mov	[esp+3Ch+var_3C], eax
call	g_slist_find
test	eax, eax
jz	loc_67D0D3C4
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebp
call	purple_conv_chat_set_id
call	purple_conversations_get_handle
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aChatJoined_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0D3DB
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aAccountNull_11 
mov	[esp+3Ch+var_38], offset aServ_got_joine 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D0D34E
mov	[esp+3Ch+var_34], offset aNameNull_8 
mov	[esp+3Ch+var_38], offset aServ_got_joine 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0D34E
align 4
mov	[esp+3Ch+var_34], offset aConvNull_0 
mov	[esp+3Ch+var_38], offset aServ_got_joine 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0D34E
align 4
mov	[esp+3Ch+var_38], ebx
mov	eax, [esi+18h]
mov	[esp+3Ch+var_3C], eax
call	g_slist_append
mov	[esi+18h], eax
jmp	loc_67D0D329
call	__stack_chk_fail
public serv_got_chat_left
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, [ebp+18h]
test	ebx, ebx
jnz	short loc_67D0D40F
jmp	loc_67D0D48C
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0D48C
mov	esi, [ebx]
mov	[esp+3Ch+var_3C], esi
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_get_id
cmp	eax, edi
jnz	short loc_67D0D408
test	esi, esi
jz	short loc_67D0D48C
mov	[esp+3Ch+var_3C], esi
call	purple_conversation_get_name
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aLeavingRoomS 
mov	[esp+3Ch+var_38], offset aServer_1 
mov	[esp+3Ch+var_3C], 2
call	purple_debug
mov	[esp+3Ch+var_38], esi
mov	eax, [ebp+18h]
mov	[esp+3Ch+var_3C], eax
call	g_slist_remove
mov	[ebp+18h], eax
mov	[esp+3Ch+var_3C], esi
call	purple_conversation_get_chat_data
mov	[esp+3Ch+var_3C], eax
call	purple_conv_chat_left
call	purple_conversations_get_handle
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset aChatLeft_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_emit
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0D4A0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_serv_got_join_chat_failed
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_conversations_get_handle
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aChatJoinFail_0 
mov	[esp+2Ch+var_2C], eax
call	purple_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0D4EF
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public serv_got_chat_in
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_3C], edx
mov	edi, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_38], edx
mov	eax, [esp+6Ch+arg_14]
mov	[esp+6Ch+var_34], eax
mov	eax, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
mov	eax, [esp+6Ch+var_40]
test	eax, eax
jz	loc_67D0D6AC
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jz	loc_67D0D68C
mov	eax, [esp+6Ch+var_34]
test	eax, eax
js	loc_67D0D6CC
mov	edx, [esp+6Ch+var_3C]
mov	ebp, [edx+18h]
test	ebp, ebp
jnz	short loc_67D0D57B
jmp	loc_67D0D668
align 10h
mov	ebp, [ebp+4]
test	ebp, ebp
jz	loc_67D0D668
mov	ebx, [ebp+0]
mov	[esp+6Ch+Time],	ebx
call	purple_conversation_get_chat_data
mov	esi, eax
mov	[esp+6Ch+Time],	eax
call	purple_conv_chat_get_id
cmp	eax, edi
jnz	short loc_67D0D570
test	ebx, ebx
jz	loc_67D0D668
mov	[esp+6Ch+Time],	ebx
call	purple_conversation_get_account
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Time],	eax
call	purple_normalize
mov	edi, eax
mov	[esp+6Ch+Time],	esi
call	purple_conv_chat_get_nick
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+Time],	eax
call	purple_strequal
test	eax, eax
jz	loc_67D0D680
mov	eax, [esp+6Ch+var_30]
and	eax, 0FFFFFFFDh
or	eax, 1
mov	[esp+6Ch+var_30], eax
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+Time],	edx
call	g_strdup
mov	[esp+6Ch+var_28], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	edx
call	g_strdup
mov	[esp+6Ch+var_24], eax
mov	edx, [esp+6Ch+var_3C]
mov	edi, [edx+0Ch]
call	purple_conversations_get_handle
lea	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_54], edx
mov	[esp+6Ch+var_58], ebx
lea	edx, [esp+6Ch+var_28]
mov	[esp+6Ch+var_5C], edx
lea	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], offset aReceivingCha_0 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit_return_1
mov	edi, [esp+6Ch+var_28]
test	edi, edi
jz	short loc_67D0D654
mov	ebp, [esp+6Ch+var_24]
test	ebp, ebp
jz	short loc_67D0D654
test	eax, eax
jz	loc_67D0D6F5
			
mov	[esp+6Ch+Time],	edi
call	g_free
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Time],	eax
call	g_free
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0D776
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
or	[esp+6Ch+var_30], 2
jmp	loc_67D0D5E0
align 4
mov	[esp+6Ch+var_64], offset aMessageNull_1	
mov	[esp+6Ch+var_68], offset aServ_got_cha_0 
mov	[esp+6Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67D0D668
align 4
mov	[esp+6Ch+var_64], offset aWhoNull_4 
mov	[esp+6Ch+var_68], offset aServ_got_cha_0 
mov	[esp+6Ch+Time],	0
call	g_return_if_fail_warning
jmp	short loc_67D0D668
align 4
mov	[esp+6Ch+var_68], offset aServ_got_cha_1 
mov	[esp+6Ch+Time],	offset aServer_1 
call	purple_debug_error
mov	[esp+6Ch+Time],	0 
call	time
mov	[esp+6Ch+var_34], eax
jmp	loc_67D0D55D
mov	edx, [esp+6Ch+var_30]
mov	eax, [esp+6Ch+var_3C]
mov	ecx, [eax+0Ch]
mov	[esp+6Ch+var_44], edx
mov	[esp+6Ch+var_48], ecx
call	purple_conversations_get_handle
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_54], edx
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], edi
mov	[esp+6Ch+var_60], ebp
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+var_64], ecx
mov	[esp+6Ch+var_68], offset aReceivedChat_0 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], eax
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+Time],	esi
call	purple_conv_chat_write
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+Time],	eax
call	g_free
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Time],	eax
call	g_free
jmp	loc_67D0D668
call	__stack_chk_fail
align 4
public serv_send_file
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D0D7F4
mov	[esp+3Ch+var_3C], ebx
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	esi, [eax+4Ch]
mov	eax, [esi+0F8h]
test	eax, eax
jz	short loc_67D0D7F4
mov	edx, [esi+0F4h]
test	edx, edx
jz	short loc_67D0D7D3
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebx
call	edx
test	eax, eax
jz	short loc_67D0D7F4
mov	eax, [esi+0F8h]
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0D808
mov	[esp+3Ch+arg_8], ebp
mov	[esp+3Ch+arg_4], edi
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0D808
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [eax+14h]
cmp	[edx+14h], ecx
jg	short loc_67D0D848
setnl	al
movzx	eax, al
dec	eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0D84F
add	esp, 1Ch
retn
align 4
mov	eax, 1
jmp	short loc_67D0D835
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0D88B
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D0D8CE
mov	[esp+1Ch+arg_8], edx
mov	[esp+1Ch+arg_4], offset	sub_67D0D8D4
mov	eax, [eax+4]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_hash_table_foreach
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, [ebp+14h]
test	ebx, ebx
jz	short loc_67D0D908
lea	esi, [esi+0]
mov	eax, [ebx]
mov	esi, [ebx+4]
cmp	[eax+8], edi
jz	short loc_67D0D91C
mov	ebx, esi
test	esi, esi
jnz	short loc_67D0D8F8
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0D93B
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_3C], eax
call	g_free
dec	dword ptr [ebp+18h]
mov	[esp+3Ch+var_38], ebx
mov	eax, [ebp+14h]
mov	[esp+3Ch+var_3C], eax
call	g_list_delete_link
mov	[ebp+14h], eax
jmp	short loc_67D0D902
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edi, edx
mov	esi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_38], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_30], edx
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D0DA30
test	edi, edi
jz	loc_67D0DA50
mov	ebx, ecx
test	ecx, ecx
jz	loc_67D0DA70
test	esi, esi
jz	loc_67D0DA90
mov	[esp+5Ch+var_58], eax
mov	eax, ds:dword_67D72344
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0DAB4
mov	[esp+5Ch+var_58], edi
mov	eax, [eax+4]
mov	[esp+5Ch+var_5C], eax
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
jz	loc_67D0DB08
mov	[esp+5Ch+var_5C], 18h
call	g_malloc0
mov	edi, eax
mov	eax, [ebp+1Ch]
mov	[edi], eax
mov	[edi+4], esi
mov	[edi+8], ebx
mov	edx, [esp+5Ch+var_38]
mov	[edi+0Ch], edx
mov	edx, [esp+5Ch+var_30]
mov	[edi+10h], edx
mov	edx, [esp+5Ch+var_34]
mov	[edi+14h], edx
mov	[esp+5Ch+var_54], offset sub_67D0D810
mov	[esp+5Ch+var_58], edi
mov	eax, [ebp+14h]
mov	[esp+5Ch+var_5C], eax
call	g_list_insert_sorted
mov	[ebp+14h], eax
inc	dword ptr [ebp+18h]
inc	dword ptr [ebp+1Ch]
mov	eax, [edi]
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0DB2F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+var_54], offset aInstanceNull 
mov	[esp+5Ch+var_58], offset aSignal_connect 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DA15
mov	[esp+5Ch+var_54], offset aSignalNull 
mov	[esp+5Ch+var_58], offset aSignal_connect 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DA15
mov	[esp+5Ch+var_54], offset aHandleNull_2 
mov	[esp+5Ch+var_58], offset aSignal_connect 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DA15
mov	[esp+5Ch+var_54], offset aFuncNull_3 
mov	[esp+5Ch+var_58], offset aSignal_connect 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D0DA15
align 4
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aSomethingTried 
mov	[esp+5Ch+var_5C], offset aSignals 
call	purple_debug_warning
mov	[esp+5Ch+var_48], offset aSignal_connect 
mov	[esp+5Ch+var_4C], 10Bh
mov	[esp+5Ch+var_50], offset aSignals_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_8 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
xor	eax, eax
jmp	loc_67D0DA15
align 4
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], offset aSignalDataForS 
mov	[esp+5Ch+var_58], offset aSignals 
mov	[esp+5Ch+var_5C], 4
call	purple_debug
xor	eax, eax
jmp	loc_67D0DA15
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+3Ch+var_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset g_free
mov	eax, [esi+14h]
mov	[esp+3Ch+var_3C], eax
call	g_list_foreach
mov	eax, [esi+14h]
mov	[esp+3Ch+var_3C], eax
call	g_list_free
mov	eax, [esi+0Ch]
test	eax, eax
jz	short loc_67D0DB9C
mov	edx, [esi+8]
test	edx, edx
jle	short loc_67D0DB94
xor	ebx, ebx
xchg	ax, ax
mov	eax, [eax+ebx*4]
mov	[esp+3Ch+var_3C], eax
call	purple_value_destroy
inc	ebx
cmp	[esi+8], ebx
mov	eax, [esi+0Ch]
jg	short loc_67D0DB80
mov	[esp+3Ch+var_3C], eax
call	g_free
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67D0DBAB
mov	[esp+3Ch+var_3C], eax
call	purple_value_destroy
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0DBC5
mov	[esp+3Ch+var_C], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
call	__stack_chk_fail
align 4
public purple_signal_register
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_30], edx
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0DCC0
mov	ecx, [esp+4Ch+var_34]
test	ecx, ecx
jz	loc_67D0DCE0
test	edi, edi
jz	loc_67D0DD00
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72344
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	loc_67D0DD20
mov	[esp+4Ch+var_4C], 20h
call	g_malloc0
mov	ebx, eax
mov	eax, [esi+0Ch]
mov	[ebx], eax
mov	[ebx+4], edi
mov	dword ptr [ebx+1Ch], 1
mov	edx, [esp+4Ch+var_30]
mov	[ebx+10h], edx
mov	[ebx+8], ebp
test	ebp, ebp
jle	short loc_67D0DC7F
lea	eax, ds:0[ebp*4]
mov	[esp+4Ch+var_4C], eax
call	g_malloc0
mov	[ebx+0Ch], eax
xor	eax, eax
mov	edx, [esp+eax*4+4Ch+arg_14]
mov	edi, [ebx+0Ch]
mov	[edi+eax*4], edx
inc	eax
cmp	eax, ebp
jnz	short loc_67D0DC70
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], eax
mov	eax, [esi+4]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
inc	dword ptr [esi+0Ch]
inc	dword ptr [esi+8]
mov	eax, [ebx]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0DD78
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], offset aInstanceNull 
mov	[esp+4Ch+var_48], offset aPurple_signal_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DCA6
mov	[esp+4Ch+var_44], offset aSignalNull 
mov	[esp+4Ch+var_48], offset aPurple_signal_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DCA6
mov	[esp+4Ch+var_44], offset aMarshalNull_0	
mov	[esp+4Ch+var_48], offset aPurple_signal_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0DCA6
mov	[esp+4Ch+var_4C], 10h
call	g_malloc0
mov	esi, eax
mov	[eax], ebx
mov	dword ptr [eax+0Ch], 1
mov	[esp+4Ch+var_40], offset loc_67D0DB34
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	[esi+4], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebx
mov	eax, ds:dword_67D72344
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
jmp	loc_67D0DC31
call	__stack_chk_fail
align 10h
public purple_signal_unregister
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D0DE10
test	edi, edi
jz	loc_67D0DE30
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72344
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
test	eax, eax
jz	loc_67D0DE50
mov	[esp+2Ch+var_28], edi
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
dec	dword ptr [ebx+8]
jz	short loc_67D0DDEC
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0DE71
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0DE71
mov	[esp+2Ch+arg_4], esi
mov	eax, ds:dword_67D72344
mov	[esp+2Ch+arg_0], eax
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_hash_table_remove
mov	[esp+2Ch+var_24], offset aInstanceNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0DDD4
align 10h
mov	[esp+2Ch+var_24], offset aSignalNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0DDD4
align 10h
mov	[esp+2Ch+var_24], offset aInstance_dataN 
mov	[esp+2Ch+var_28], offset aPurple_signa_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D0DDD4
			
call	__stack_chk_fail
align 4
public purple_signals_unregister_by_instance
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0DED4
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72344
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
test	eax, eax
jz	short loc_67D0DEB4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0DEF2
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aFound	
mov	[esp+2Ch+var_28], offset aPurple_signals 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0DEA4
align 4
mov	[esp+2Ch+var_24], offset aInstanceNull 
mov	[esp+2Ch+var_28], offset aPurple_signals 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0DEA4
call	__stack_chk_fail
align 4
public purple_signal_get_values
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_C]
mov	esi, [esp+3Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0DF98
test	ebp, ebp
jz	loc_67D0DFCC
test	edi, edi
jz	loc_67D0DFE4
test	esi, esi
jz	loc_67D0DFFC
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72344
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0E014
mov	[esp+3Ch+var_38], ebp
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0E02C
mov	edx, [eax+8]
mov	[edi], edx
mov	edx, [eax+0Ch]
mov	[esi], edx
test	ebx, ebx
jz	short loc_67D0DF7E
mov	eax, [eax+10h]
mov	[ebx], eax
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0E045
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aInstanceNull 
			
mov	[esp+3Ch+arg_4], offset	aPurple_signa_1	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aSignalNull 
jmp	short loc_67D0DFB0
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aNum_valuesNull	
jmp	short loc_67D0DFB0
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aValuesNull_0 
jmp	short loc_67D0DFB0
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aInstance_dataN	
jmp	short loc_67D0DFB0
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E045
mov	[esp+3Ch+arg_8], offset	aSignal_dataNul	
jmp	loc_67D0DFB0
			
call	__stack_chk_fail
align 4
public purple_signal_connect_priority
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, [esp+2Ch+arg_C]
mov	esi, [esp+2Ch+arg_10]
mov	edi, [esp+2Ch+arg_14]
mov	ebp, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], ebp
xor	ebp, ebp
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67D0E0A3
mov	[esp+2Ch+arg_C], 0
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_67D0D940
call	__stack_chk_fail
public purple_signal_connect
			
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_C]
mov	esi, [esp+1Ch+arg_10]
mov	edi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edi
xor	edi, edi
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67D0E0FD
mov	[esp+1Ch+arg_C], 0
mov	[esp+1Ch+arg_8], 0
mov	[esp+1Ch+arg_4], esi
mov	[esp+1Ch+arg_0], ebx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	loc_67D0D940
call	__stack_chk_fail
align 4
public purple_signal_connect_priority_vargs
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, [esp+2Ch+arg_C]
mov	esi, [esp+2Ch+arg_10]
mov	edi, [esp+2Ch+arg_14]
mov	ebp, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], ebp
xor	ebp, ebp
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67D0E15B
mov	[esp+2Ch+arg_C], 1
mov	[esp+2Ch+arg_8], edi
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	loc_67D0D940
call	__stack_chk_fail
public purple_signal_connect_vargs
push	edi
push	esi
push	ebx
sub	esp, 10h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, [esp+1Ch+arg_C]
mov	esi, [esp+1Ch+arg_10]
mov	edi, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edi
xor	edi, edi
mov	edi, [esp+1Ch+var_10]
xor	edi, ds:__stack_chk_guard
jnz	short loc_67D0E1B5
mov	[esp+1Ch+arg_C], 1
mov	[esp+1Ch+arg_8], 0
mov	[esp+1Ch+arg_4], esi
mov	[esp+1Ch+arg_0], ebx
add	esp, 10h
pop	ebx
pop	esi
pop	edi
jmp	loc_67D0D940
call	__stack_chk_fail
align 4
public purple_signal_disconnect
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edi, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D0E2B8
test	ebx, ebx
jz	loc_67D0E2D2
test	esi, esi
jz	loc_67D0E2EC
test	edi, edi
jz	loc_67D0E302
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72344
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0E318
mov	[esp+3Ch+var_38], ebx
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	ebp, eax
test	eax, eax
jz	loc_67D0E331
mov	ebx, [ebp+14h]
test	ebx, ebx
jnz	short loc_67D0E243
jmp	short loc_67D0E284
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D0E284
mov	edx, [ebx]
cmp	[edx+8], esi
jnz	short loc_67D0E23C
cmp	[edx+4], edi
jnz	short loc_67D0E23C
mov	[esp+3Ch+var_3C], edx
call	g_free
mov	[esp+3Ch+var_38], ebx
mov	eax, [ebp+14h]
mov	[esp+3Ch+var_3C], eax
call	g_list_delete_link
mov	[ebp+14h], eax
dec	dword ptr [ebp+18h]
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0E365
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aFound 
			
mov	[esp+3Ch+arg_4], offset	aPurple_signa_2	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aInstanceNull 
jmp	short loc_67D0E29C
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aSignalNull 
jmp	short loc_67D0E29C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aHandleNull_2 
jmp	short loc_67D0E29C
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aFuncNull_3 
jmp	short loc_67D0E29C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E365
mov	[esp+3Ch+arg_8], offset	aInstance_dataN	
jmp	loc_67D0E29C
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E365
mov	[esp+3Ch+arg_C], ebx
mov	[esp+3Ch+arg_8], offset	aSignalDataForS	
mov	[esp+3Ch+arg_4], offset	aSignals 
mov	[esp+3Ch+arg_0], 4
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug
			
call	__stack_chk_fail
align 4
public purple_signals_disconnect_by_handle
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D0E3AC
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_67D0D890
mov	eax, ds:dword_67D72344
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E3CA
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aHandleNull_2 
mov	[esp+2Ch+var_28], offset aPurple_signa_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0E39C
call	__stack_chk_fail
align 10h
public purple_signal_emit_vargs
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67D0E494
test	ebx, ebx
jz	loc_67D0E4C4
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72344
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0E4DC
mov	[esp+2Ch+var_28], ebx
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	loc_67D0E4F2
mov	edx, [edi+14h]
test	edx, edx
jnz	short loc_67D0E44F
jmp	short loc_67D0E47D
align 4
mov	edx, [eax+0Ch]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], esi
call	dword ptr [eax+4]
mov	edx, ebx
test	ebx, ebx
jz	short loc_67D0E47D
			
mov	ebx, [edx+4]
mov	eax, [edx]
mov	edx, [eax+10h]
test	edx, edx
jnz	short loc_67D0E43C
mov	[esp+2Ch+var_20], 0
mov	edx, [eax+0Ch]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], esi
mov	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	dword ptr [edi+4]
mov	edx, ebx
test	ebx, ebx
jnz	short loc_67D0E44F
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0E517
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E517
mov	[esp+2Ch+arg_8], offset	aInstanceNull 
			
mov	[esp+2Ch+arg_4], offset	aPurple_signa_4	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E517
mov	[esp+2Ch+arg_8], offset	aSignalNull 
jmp	short loc_67D0E4A8
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E517
mov	[esp+2Ch+arg_8], offset	aInstance_dataN	
jmp	short loc_67D0E4A8
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset aSignalDataForS 
mov	[esp+2Ch+var_28], offset aSignals 
mov	[esp+2Ch+var_2C], 4
call	purple_debug
jmp	loc_67D0E47D
			
call	__stack_chk_fail
public purple_signal_emit
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D0E560
test	edx, edx
jz	short loc_67D0E580
lea	ecx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_signal_emit_vargs
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E59E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aInstanceNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0E54F
align 10h
mov	[esp+2Ch+var_24], offset aSignalNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0E54F
call	__stack_chk_fail
align 4
public purple_signal_emit_vargs_return_1
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D0E680
test	ebx, ebx
jz	loc_67D0E6A0
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72344
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
test	eax, eax
jz	loc_67D0E6C0
mov	[esp+3Ch+var_38], ebx
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	edi, eax
test	eax, eax
jz	loc_67D0E6E0
mov	eax, [edi+14h]
lea	ebp, [esp+3Ch+var_24]
test	eax, eax
jnz	short loc_67D0E633
jmp	loc_67D0E69C
align 4
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], esi
call	dword ptr [eax+4]
mov	[esp+3Ch+var_24], eax
test	eax, eax
jnz	short loc_67D0E668
mov	eax, ebx
test	ebx, ebx
jz	short loc_67D0E69C
mov	[esp+3Ch+var_24], 0
mov	ebx, [eax+4]
mov	eax, [eax]
mov	ecx, [eax+10h]
test	ecx, ecx
jnz	short loc_67D0E618
mov	[esp+3Ch+var_30], ebp
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], esi
mov	eax, [eax+4]
mov	[esp+3Ch+var_3C], eax
call	dword ptr [edi+4]
mov	eax, [esp+3Ch+var_24]
test	eax, eax
jz	short loc_67D0E62D
nop
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D0E707
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aInstanceNull 
mov	[esp+3Ch+var_38], offset aPurple_signa_6 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67D0E668
mov	[esp+3Ch+var_34], offset aSignalNull 
mov	[esp+3Ch+var_38], offset aPurple_signa_6 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0E668
mov	[esp+3Ch+var_34], offset aInstance_dataN 
mov	[esp+3Ch+var_38], offset aPurple_signa_6 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0E668
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset aSignalDataForS 
mov	[esp+3Ch+var_38], offset aSignals 
mov	[esp+3Ch+var_3C], 4
call	purple_debug
xor	eax, eax
jmp	loc_67D0E668
call	__stack_chk_fail
public purple_signal_emit_return_1
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D0E750
test	edx, edx
jz	short loc_67D0E770
lea	ecx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_signal_emit_vargs_return_1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0E790
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aInstanceNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0E73F
mov	[esp+2Ch+var_24], offset aSignalNull 
mov	[esp+2Ch+var_28], offset aPurple_signa_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D0E73F
call	__stack_chk_fail
align 4
public purple_signals_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72344
test	eax, eax
jz	short loc_67D0E7DC
mov	[esp+2Ch+var_24], offset aInstance_table 
mov	[esp+2Ch+var_28], offset aPurple_signa_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E807
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_20], offset sub_67D0D854
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset loc_67D2EBBC
mov	[esp+2Ch+var_2C], offset g_direct_hash
call	g_hash_table_new_full
mov	ds:dword_67D72344, eax
jmp	short loc_67D0E7CB
call	__stack_chk_fail
public purple_signals_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72344
test	eax, eax
jz	short loc_67D0E848
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	ds:dword_67D72344, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0E866
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aInstance_tab_0 
mov	[esp+2Ch+var_28], offset aPurple_signa_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0E835
call	__stack_chk_fail
align 4
public purple_marshal_VOID
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D0E898
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
call	__stack_chk_fail
align 10h
public purple_marshal_VOID__INT
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0E8D8
mov	[esp+1Ch+arg_4], ecx
mov	edx, [edx]
mov	[esp+1Ch+arg_0], edx
add	esp, 18h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 10h
public purple_marshal_VOID__INT_INT
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0E91F
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
public purple_marshal_VOID__POINTER
			
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0E95C
mov	[esp+1Ch+arg_4], ecx
mov	edx, [edx]
mov	[esp+1Ch+arg_0], edx
add	esp, 18h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_UINT
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0E9A3
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
public purple_marshal_VOID__POINTER_INT_INT
			
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0E9EE
mov	[esp+1Ch+arg_C], ecx
mov	ecx, [eax+8]
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_INT_POINTER
			
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0EA3A
mov	[esp+1Ch+arg_C], ecx
mov	ecx, [eax+8]
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
align 10h
public purple_marshal_VOID__POINTER_POINTER
			
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0EA7F
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
public purple_marshal_VOID__POINTER_POINTER_UINT
			
			
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0EACA
mov	[esp+1Ch+arg_C], ecx
mov	ecx, [eax+8]
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
align 10h
public purple_marshal_VOID__POINTER_POINTER_UINT_UINT
			
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EB19
add	esp, 3Ch
retn
call	__stack_chk_fail
align 10h
public purple_marshal_VOID__POINTER_POINTER_POINTER
			
			
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D0EB66
mov	[esp+1Ch+arg_C], ecx
mov	ecx, [eax+8]
mov	[esp+1Ch+arg_8], ecx
mov	ecx, [eax+4]
mov	[esp+1Ch+arg_4], ecx
mov	eax, [eax]
mov	[esp+1Ch+arg_0], eax
add	esp, 18h
pop	ebx
jmp	edx
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EBB5
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_POINTER
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EC0C
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_POINTER_POINTER_UINT
			
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EC5D
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_POINTER_POINTER_POINTER_UINT
			
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0ECB4
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_marshal_VOID__POINTER_POINTER_POINTER_UINT_UINT
			
sub	esp, 3Ch
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0ED0C
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_marshal_INT__INT
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0ED42
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0ED53
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_INT__INT_INT
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0ED8E
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0ED9F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_INT__POINTER_POINTER
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EDDA
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EDEB
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_INT__POINTER_POINTER_POINTER
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], edx
mov	edx, [eax+8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EE2D
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EE3E
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_INT__POINTER_POINTER_POINTER_POINTER_POINTER
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EE8F
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EEA0
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EED6
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EEE7
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_BOOLEAN__POINTER_POINTER
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EF22
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EF33
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_BOOLEAN__POINTER_BOOLEAN
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EF6E
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EF7F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER
			
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], edx
mov	edx, [eax+8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0EFC1
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0EFD2
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_UINT
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], edx
mov	edx, [eax+8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F015
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F026
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_UINT
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F070
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F081
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F0CC
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F0DD
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER
			
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F12F
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F140
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_UINT
			
			
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F193
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F1A4
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_BOOLEAN__POINTER_POINTER_POINTER_POINTER_POINTER_POINTER
push	ebx
sub	esp, 38h
mov	eax, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_24], edx
mov	edx, [eax+14h]
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+10h]
mov	[esp+3Ch+var_2C], edx
mov	edx, [eax+0Ch]
mov	[esp+3Ch+var_30], edx
mov	edx, [eax+8]
mov	[esp+3Ch+var_34], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_38], edx
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F1FE
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F20F
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_BOOLEAN__INT_POINTER
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F24A
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F25B
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_POINTER__POINTER
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_4]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F28E
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F29F
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_POINTER__POINTER_INT
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F2DA
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F2EB
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
public purple_marshal_POINTER__POINTER_INT64
push	ebx
sub	esp, 28h
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], eax
mov	eax, [ecx+4]
mov	edx, [ecx+8]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_24], edx
mov	eax, [ecx]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F32C
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F33D
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_POINTER__POINTER_INT_BOOLEAN
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_20], edx
mov	edx, [eax+8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F381
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F392
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_POINTER__POINTER_INT64_BOOLEAN
push	ebx
sub	esp, 38h
mov	ecx, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ecx+0Ch]
mov	[esp+3Ch+var_30], eax
mov	eax, [ecx+4]
mov	edx, [ecx+8]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_34], edx
mov	eax, [ecx]
mov	[esp+3Ch+var_3C], eax
call	[esp+3Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F3DB
mov	[ebx], eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F3EC
add	esp, 38h
pop	ebx
retn
call	__stack_chk_fail
align 4
public purple_marshal_POINTER__POINTER_POINTER
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_C]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_24], edx
mov	edx, [eax+4]
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	[esp+2Ch+arg_0]
test	ebx, ebx
jz	short loc_67D0F42A
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F43B
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aSmiley 
call	xmlnode_new
mov	ebx, eax
test	eax, eax
jz	short loc_67D0F4B8
mov	eax, [esi+10h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aShortcut 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	eax, [esi+14h]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aChecksum 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_filename
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aFilename_0 
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_set_attrib
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F4D7
mov	[esp+2Ch+arg_4], ebx
mov	[esp+2Ch+arg_0], edi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	xmlnode_insert_child
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D7235C
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+2Ch+var_28], 10h
mov	[esp+2Ch+var_2C], eax
call	g_file_test_utf8
test	eax, eax
jz	short loc_67D0F530
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0F53C
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	ebx, ebx
jmp	short loc_67D0F51B
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], ebx
call	g_file_get_contents_utf8
test	eax, eax
jz	short loc_67D0F590
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0F5C3
add	esp, 28h
pop	ebx
retn
align 10h
mov	eax, [esp+2Ch+var_14]
mov	eax, [eax+8]
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aErrorReading_3 
mov	[esp+2Ch+var_2C], offset aSmileys 
call	purple_debug_error
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_2C], eax
call	g_error_free
xor	eax, eax
jmp	short loc_67D0F57E
call	__stack_chk_fail
			
push	ebx
sub	esp, 28h
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67D0F680
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D7235C
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	[esp+2Ch+var_28], 10h
mov	[esp+2Ch+var_2C], eax
call	g_file_test_utf8
test	eax, eax
jnz	short loc_67D0F628
			
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F6A1
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_2C], ebx
call	g_unlink
test	eax, eax
jz	short loc_67D0F664
call	_errno
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	wpurple_strerror
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aFailedToDele_2 
mov	[esp+2Ch+var_2C], offset aSmileys 
call	purple_debug_error
jmp	short loc_67D0F60F
align 4
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset aDeletedCache_0 
mov	[esp+2Ch+var_2C], offset aSmileys 
call	purple_debug_info
jmp	short loc_67D0F60F
align 10h
mov	[esp+2Ch+var_24], offset aFilenameNull_2 
mov	[esp+2Ch+var_28], offset aPurple_smiley_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D0F617
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0F7B4
test	edx, edx
jz	loc_67D0F7D4
test	ecx, ecx
jz	loc_67D0F778
mov	esi, [ebx+0Ch]
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], edx
mov	[esp+4Ch+var_34], ecx
call	purple_util_get_image_filename
mov	edi, eax
test	eax, eax
mov	edx, [esp+4Ch+var_30]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67D0F7F2
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ecx
mov	[esp+4Ch+var_4C], edx
call	purple_imgstore_add
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	g_free
mov	[esp+4Ch+var_48], 50h
mov	[esp+4Ch+var_4C], ebx
call	g_type_check_instance_cast
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], ebp
mov	[esp+4Ch+var_48], offset aImage	
mov	[esp+4Ch+var_4C], eax
call	g_object_set
test	esi, esi
jz	short loc_67D0F794
mov	[esp+4Ch+var_4C], esi
call	purple_imgstore_get_filename
mov	edi, eax
mov	eax, [ebx+0Ch]
mov	[esp+4Ch+var_4C], eax
call	purple_imgstore_get_filename
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edi
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67D0F7A8
mov	[esp+4Ch+var_4C], esi
call	purple_imgstore_unref
jmp	short loc_67D0F794
align 4
mov	[esp+4Ch+var_44], offset aSmiley_data_le 
mov	[esp+4Ch+var_48], offset aPurple_smile_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F801
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, edi
call	sub_67D0F5C8
jmp	short loc_67D0F76C
align 4
mov	[esp+4Ch+var_44], offset aSmileyNull 
mov	[esp+4Ch+var_48], offset aPurple_smile_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0F794
align 4
mov	[esp+4Ch+var_44], offset aSmiley_dataNul 
mov	[esp+4Ch+var_48], offset aPurple_smile_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
jmp	short loc_67D0F794
mov	[esp+4Ch+var_4C], edx
call	g_free
xor	ebp, ebp
jmp	loc_67D0F717
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F840
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	esi, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	[esp+4Ch+var_48], 50h
mov	[esp+4Ch+var_4C], esi
call	g_type_check_class_cast
mov	ebx, eax
mov	[esp+4Ch+var_4C], esi
call	g_type_class_peek_parent
mov	ds:dword_67D7234C, eax
mov	dword ptr [ebx+10h], offset sub_67D0FE84
mov	dword ptr [ebx+0Ch], offset sub_67D101C0
mov	dword ptr [ebx+18h], offset sub_67D0FF80
mov	dword ptr [ebx+14h], offset sub_67D0F9BC
mov	[esp+4Ch+var_48], offset aTheTextShortcu 
mov	[esp+4Ch+var_4C], offset aPidgin_13 
call	libintl_dgettext
mov	edi, eax
mov	[esp+4Ch+var_48], offset aShortcut_0 
mov	[esp+4Ch+var_4C], offset aPidgin_13 
call	libintl_dgettext
mov	[esp+4Ch+var_3C], 3
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aShortcut 
call	g_param_spec_string
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 1
mov	[esp+4Ch+var_4C], ebx
call	g_object_class_install_property
mov	[esp+4Ch+var_48], offset aStoredImage_Th 
mov	[esp+4Ch+var_4C], offset aPidgin_13 
call	libintl_dgettext
mov	edi, eax
mov	[esp+4Ch+var_48], offset aStoredImage 
mov	[esp+4Ch+var_4C], offset aPidgin_13 
call	libintl_dgettext
mov	[esp+4Ch+var_40], 3
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aImage	
call	g_param_spec_pointer
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], 2
mov	[esp+4Ch+var_4C], ebx
call	g_object_class_install_property
mov	[esp+4Ch+var_2C], 0
mov	[esp+4Ch+var_30], 4
mov	[esp+4Ch+var_34], offset g_cclosure_marshal_VOID__VOID
mov	[esp+4Ch+var_38], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 2
mov	eax, [esi]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aDestroy 
call	g_signal_new
mov	ds:dword_67D72350, eax
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0F9B6
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	eax, ds:dword_67D72350
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_signal_emit
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0FA06
mov	[esp+2Ch+arg_0], ebx
mov	eax, ds:dword_67D7234C
mov	eax, [eax+14h]
add	esp, 28h
pop	ebx
jmp	eax
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72364
test	eax, eax
jz	loc_67D0FB0C
mov	[esp+2Ch+var_2C], offset aSmileys 
call	xmlnode_new
mov	ebx, eax
mov	[esp+2Ch+var_24], offset a1_0_3	
mov	[esp+2Ch+var_28], offset aVersion_4 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_2C], offset aProfile 
call	xmlnode_new
mov	esi, eax
test	eax, eax
jz	short loc_67D0FABD
mov	[esp+2Ch+var_24], offset aDefault 
mov	[esp+2Ch+var_28], offset aName_7 
mov	[esp+2Ch+var_2C], eax
call	xmlnode_set_attrib
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_insert_child
mov	[esp+2Ch+var_2C], offset aSmiley_set 
call	xmlnode_new
mov	edi, eax
test	eax, eax
jz	short loc_67D0FABD
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	xmlnode_insert_child
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset sub_67D0F440
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
			
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_to_formatted_str
mov	esi, eax
mov	[esp+2Ch+var_24], 0FFFFFFFFh 
mov	[esp+2Ch+var_28], eax 
mov	[esp+2Ch+var_2C], offset aSmileys_xml 
call	purple_util_write_data_to_file
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	xmlnode_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0FB22
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_28], offset aAttemptedToS_4 
mov	[esp+2Ch+var_2C], offset aSmileys 
call	purple_debug_error
jmp	short loc_67D0FAF7
call	__stack_chk_fail
align 4
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67D0FA0C
mov	ds:dword_67D72360, 0
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FB57
add	esp, 1Ch
retn
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, ds:dword_67D72360
test	edx, edx
jnz	short loc_67D0FB95
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67D0FB28
mov	[esp+2Ch+var_2C], 5
call	purple_timeout_add_seconds
mov	ds:dword_67D72360, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0FBA5
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D0FCD0
mov	ecx, ds:dword_67D72364
test	ecx, ecx
jnz	short loc_67D0FBEC
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D0FD88
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, ds:dword_67D7235C
mov	[esp+3Ch+Str], ebx
call	purple_imgstore_get_filename
mov	[esp+3Ch+Count], 0
mov	[esp+3Ch+Size],	eax
mov	[esp+3Ch+Str], edi
call	g_build_filename
mov	esi, eax
mov	[esp+3Ch+Size],	4
mov	[esp+3Ch+Str], edi
call	g_file_test_utf8
test	eax, eax
jz	loc_67D0FCF4
			
mov	[esp+3Ch+Size],	offset aWb_3 
mov	[esp+3Ch+Str], esi
call	g_fopen
mov	edi, eax
test	eax, eax
jz	loc_67D0FD50
mov	[esp+3Ch+Str], ebx
call	purple_imgstore_get_size
mov	ebp, eax
mov	[esp+3Ch+Str], ebx
call	purple_imgstore_get_data
mov	[esp+3Ch+File],	edi 
mov	[esp+3Ch+Count], 1 
mov	[esp+3Ch+Size],	ebp 
mov	[esp+3Ch+Str], eax 
call	fwrite
test	eax, eax
jz	short loc_67D0FCA0
mov	[esp+3Ch+Count], esi
mov	[esp+3Ch+Size],	offset aWroteCacheFile 
mov	[esp+3Ch+Str], offset aSmileys 
call	purple_debug_info
mov	[esp+3Ch+Str], edi 
call	fclose
mov	[esp+3Ch+Str], esi
call	g_free
jmp	loc_67D0FBD2
align 10h
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+Str], eax
call	wpurple_strerror
mov	[esp+3Ch+File],	eax
mov	[esp+3Ch+Count], esi
mov	[esp+3Ch+Size],	offset aErrorWriting_4 
mov	[esp+3Ch+Str], offset aSmileys 
call	purple_debug_error
jmp	short loc_67D0FC88
align 10h
mov	[esp+3Ch+Count], offset	aStored_imgNull	
mov	[esp+3Ch+Size],	offset aPurple_smile_1 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_67D0FBD2
align 4
mov	[esp+3Ch+Size],	offset aCreatingSmiley 
mov	[esp+3Ch+Str], offset aSmileys 
call	purple_debug_info
mov	[esp+3Ch+Size],	1C0h
mov	[esp+3Ch+Str], edi
call	g_mkdir
test	eax, eax
jns	loc_67D0FC28
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+Str], eax
call	wpurple_strerror
mov	[esp+3Ch+File],	eax
mov	[esp+3Ch+Count], edi
mov	[esp+3Ch+Size],	offset aUnableToCrea_3 
mov	[esp+3Ch+Str], offset aSmileys 
call	purple_debug_error
jmp	loc_67D0FC28
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+Str], eax
call	wpurple_strerror
mov	[esp+3Ch+File],	eax
mov	[esp+3Ch+Count], esi
mov	[esp+3Ch+Size],	offset aUnableToCrea_4 
mov	[esp+3Ch+Str], offset aSmileys 
call	purple_debug_error
mov	[esp+3Ch+Str], esi
call	g_free
jmp	loc_67D0FBD2
call	__stack_chk_fail
align 10h
public purple_smiley_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72348
test	eax, eax
jnz	short loc_67D0FDD0
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aD_3 
mov	[esp+2Ch+var_28], offset aPurplesmiley 
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_67D72348, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FDE0
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_smiley_get_type
mov	ebx, eax
call	purple_smiley_get_type
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aShortcut 
mov	[esp+2Ch+var_2C], eax
call	g_object_new
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_type_check_instance_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FE40
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_smiley_get_type
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FE7D
mov	[esp+1Ch+arg_4], eax
mov	[esp+1Ch+arg_0], ebx
add	esp, 18h
pop	ebx
jmp	g_type_check_instance_cast
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	purple_smiley_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_type_check_instance_cast
cmp	ebx, 1
jz	loc_67D0FF58
cmp	ebx, 2
jz	short loc_67D0FF34
mov	eax, [esi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	esi, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], esi
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset aProperty 
mov	[esp+5Ch+var_50], offset aSmiley_c321 
mov	[esp+5Ch+var_54], offset aSInvalidSIdUFo 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D0FF7B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FF7B
mov	eax, [eax+0Ch]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_pointer
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D0FF7B
mov	eax, [eax+10h]
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_string
			
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_smiley_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	ebx, eax
mov	eax, [eax+10h]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67D0FFE6
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72358
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67D10030
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_filename
call	sub_67D0F5C8
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_unref
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10034
add	esp, 28h
pop	ebx
jmp	sub_67D0FB5C
xor	eax, eax
jmp	short loc_67D10013
call	__stack_chk_fail
align 4
public purple_smiley_delete
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1006C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10098
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_object_unref
align 4
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10098
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_smiley_set_shortcut
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D10174
test	ebx, ebx
jz	loc_67D10198
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67D100F8
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D101BB
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	eax, [esi+10h]
test	eax, eax
jz	short loc_67D10110
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esi+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	[esi+10h], eax
mov	[esp+2Ch+var_28], 50h
mov	[esp+2Ch+var_2C], esi
call	g_type_check_instance_cast
mov	[esp+2Ch+var_28], offset aShortcut 
mov	[esp+2Ch+var_2C], eax
call	g_object_notify
call	sub_67D0FB5C
mov	eax, 1
jmp	loc_67D100DF
align 4
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D100DF
align 4
mov	[esp+2Ch+var_24], offset aShortcutNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D100DF
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_30], edx
mov	edi, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
call	purple_smiley_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	g_type_check_instance_cast
mov	ebp, eax
cmp	ebx, 1
jz	loc_67D102F0
cmp	ebx, 2
jz	short loc_67D10278
mov	eax, [esi]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	esi, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	[esp+6Ch+var_4C], esi
mov	[esp+6Ch+var_50], eax
mov	eax, [edi+4]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], offset aProperty 
mov	[esp+6Ch+var_60], offset aSmiley_c359 
mov	[esp+6Ch+var_64], offset aSInvalidSIdUFo 
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], 0
call	g_log
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D10325
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], edx
call	g_value_get_pointer
mov	ebx, eax
mov	eax, [ebp+0Ch]
mov	[esp+6Ch+var_6C], eax
call	purple_imgstore_unref
mov	eax, [ebp+14h]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	[ebp+0Ch], ebx
test	ebx, ebx
jz	short loc_67D1031C
mov	[esp+6Ch+var_6C], ebx
call	purple_imgstore_get_size
mov	edi, eax
mov	[esp+6Ch+var_6C], ebx
call	purple_imgstore_get_data
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], eax
call	purple_util_get_image_checksum
mov	[ebp+14h], eax
mov	eax, ebx
call	sub_67D0FBAC
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10325
mov	[esp+6Ch+arg_4], offset	aImage 
mov	[esp+6Ch+arg_0], esi
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_object_notify
align 10h
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], edx
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10325
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_smiley_set_shortcut
mov	dword ptr [ebp+14h], 0
jmp	short loc_67D102CB
			
call	__stack_chk_fail
align 4
public purple_smiley_set_data
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D103E8
test	esi, esi
jz	loc_67D10404
test	edi, edi
jnz	short loc_67D10390
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D1041D
mov	[esp+2Ch+arg_8], offset	aSmiley_data_le	
			
mov	[esp+2Ch+arg_4], offset	aPurple_smile_4	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72358
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	ecx, edi
mov	edx, esi
mov	eax, ebx
call	sub_67D0F6A8
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72358
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1041D
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67D0FB5C
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1041D
mov	[esp+2Ch+arg_8], offset	aSmileyNull 
jmp	loc_67D10375
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1041D
mov	[esp+2Ch+arg_8], offset	aSmiley_dataNul	
jmp	loc_67D10375
			
call	__stack_chk_fail
align 4
public purple_smiley_get_stored_image
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10452
mov	eax, [eax+0Ch]
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_imgstore_ref
call	__stack_chk_fail
align 4
public purple_smiley_get_shortcut
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D10484
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D104A4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D10472
call	__stack_chk_fail
align 4
public purple_smiley_get_checksum
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D104D8
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D104F8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D104C6
call	__stack_chk_fail
align 10h
public purple_smiley_get_data
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D10550
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67D1056C
test	esi, esi
jz	short loc_67D10534
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_size
mov	[esi], eax
mov	eax, [ebx+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10580
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_imgstore_get_data
align 10h
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10580
add	esp, 24h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_smiley_get_extension
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D105BC
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D105CE
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_imgstore_get_extension
align 4
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D105CE
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_smiley_get_full_path
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D10610
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D1062C
mov	[esp+2Ch+var_2C], eax
call	purple_imgstore_get_filename
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1063E
add	esp, 2Ch
jmp	sub_67D0F4DC
align 10h
mov	[esp+2Ch+var_24], offset aSmileyNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1063E
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_smileys_get_all
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset sub_67D0F808
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_14]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1068B
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_smileys_find_by_shortcut
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D106C8
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D106E8
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aShortcutNull 
mov	[esp+2Ch+var_28], offset aPurple_smileys 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D106B8
call	__stack_chk_fail
align 10h
public purple_smiley_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D10738
test	edi, edi
jz	short loc_67D10758
mov	[esp+2Ch+var_2C], esi
call	purple_smileys_find_by_shortcut
mov	ebx, eax
test	eax, eax
jz	short loc_67D10778
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D107B6
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aShortcutNull 
mov	[esp+2Ch+var_28], offset aPurple_smile_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D1071F
mov	[esp+2Ch+var_24], offset aImgNull_1 
mov	[esp+2Ch+var_28], offset aPurple_smile_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D1071F
mov	eax, esi
call	sub_67D0FDE8
mov	ebx, eax
test	eax, eax
jz	short loc_67D1071F
mov	[esp+2Ch+var_28], 50h
mov	[esp+2Ch+var_2C], eax
call	g_type_check_instance_cast
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], offset aImage	
mov	[esp+2Ch+var_2C], eax
call	g_object_set
jmp	loc_67D1071F
call	__stack_chk_fail
align 4
public purple_smiley_new_from_file
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	esi, esi
jz	loc_67D10878
test	eax, eax
jz	loc_67D1089C
lea	ecx, [esp+3Ch+var_24]
lea	edx, [esp+3Ch+var_28]
call	sub_67D0F544
test	eax, eax
jnz	short loc_67D10814
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D108E1
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ebp, [esp+3Ch+var_24]
mov	edi, [esp+3Ch+var_28]
test	edi, edi
jz	loc_67D108C0
test	ebp, ebp
jz	short loc_67D10858
mov	[esp+3Ch+var_3C], esi
call	purple_smileys_find_by_shortcut
mov	ebx, eax
test	eax, eax
jnz	short loc_67D107FA
mov	eax, esi
call	sub_67D0FDE8
mov	ebx, eax
test	eax, eax
jz	short loc_67D107FA
mov	ecx, ebp
mov	edx, edi
call	sub_67D0F6A8
mov	eax, [ebx+0Ch]
call	sub_67D0FBAC
jmp	short loc_67D107FA
align 4
mov	[esp+3Ch+var_34], offset aSmiley_data_le 
mov	[esp+3Ch+var_38], offset aPurple_smil_10 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D107FA
mov	[esp+3Ch+var_34], offset aShortcutNull 
mov	[esp+3Ch+var_38], offset aPurple_smil_11 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D107FA
align 4
mov	[esp+3Ch+var_34], offset aFilepathNull 
mov	[esp+3Ch+var_38], offset aPurple_smil_11 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D107FA
align 10h
mov	[esp+3Ch+var_34], offset aSmiley_dataNul 
mov	[esp+3Ch+var_38], offset aPurple_smil_10 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	loc_67D107F8
call	__stack_chk_fail
align 4
public purple_smileys_find_by_checksum
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D10920
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72358
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10940
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aChecksumNull_0 
mov	[esp+2Ch+var_28], offset aPurple_smil_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D10910
call	__stack_chk_fail
align 4
public purple_smileys_get_storing_dir
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7235C
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1096B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_smileys_init
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72354, eax
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset g_free
mov	[esp+4Ch+var_48], offset g_str_equal
mov	[esp+4Ch+var_4C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72358, eax
call	purple_user_dir
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aCustom_smiley	
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	ds:dword_67D7235C, eax
mov	ds:dword_67D72364, 1
mov	[esp+4Ch+var_48], offset aSmileys 
mov	[esp+4Ch+var_4C], offset aPidgin_13 
call	libintl_dgettext
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aSmileys_xml 
call	purple_util_read_xml_from_file
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	short loc_67D10A78
mov	[esp+4Ch+var_48], offset aProfile 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D10A6C
mov	[esp+4Ch+var_48], offset aSmiley_set 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D10A6C
mov	[esp+4Ch+var_48], offset aSmiley 
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jnz	short loc_67D10AB5
xchg	ax, ax
			
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	xmlnode_free
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D10B65
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	ecx, [esp+4Ch+var_24]
mov	edx, [esp+4Ch+var_28]
mov	eax, esi
call	sub_67D0F6A8
			
mov	[esp+4Ch+var_4C], ebp
call	g_free
			
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jz	short loc_67D10A6C
mov	[esp+4Ch+var_48], offset aShortcut 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	esi, eax
mov	[esp+4Ch+var_48], offset aChecksum 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	edi, eax
mov	[esp+4Ch+var_48], offset aFilename_0 
mov	[esp+4Ch+var_4C], ebx
call	xmlnode_get_attrib
mov	edx, eax
test	esi, esi
jz	short loc_67D10AA7
test	edi, edi
jz	short loc_67D10AA7
test	eax, eax
jz	short loc_67D10AA7
mov	[esp+4Ch+var_34], edx
call	sub_67D0F4DC
mov	ebp, eax
test	eax, eax
mov	edx, [esp+4Ch+var_34]
jz	short loc_67D10B48
mov	eax, esi
call	sub_67D0FDE8
mov	esi, eax
test	eax, eax
jz	short loc_67D10A9F
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[esi+14h], eax
lea	ecx, [esp+4Ch+var_24]
lea	edx, [esp+4Ch+var_28]
mov	eax, ebp
call	sub_67D0F544
test	eax, eax
jnz	loc_67D10A90
mov	[esp+4Ch+var_4C], esi
call	purple_smiley_delete
jmp	loc_67D10A9F
align 4
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], offset aPathForFilenam 
mov	[esp+4Ch+var_4C], offset aSmileys 
call	purple_debug_error
jmp	loc_67D10AA7
call	__stack_chk_fail
align 4
public purple_smileys_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72360
test	eax, eax
jz	short loc_67D10B9A
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
mov	ds:dword_67D72360, 0
call	sub_67D0FA0C
mov	eax, ds:dword_67D72354
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D72358
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, ds:dword_67D7235C
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10BD1
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_class_cast
mov	dword ptr [eax+44h], offset sub_67D10C1C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10C14
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	ebx, [esp+7Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D10E7C
mov	[esp+7Ch+var_74], 0
mov	[esp+7Ch+var_78], offset aTheme_xml 
mov	[esp+7Ch+var_7C], ebx
call	g_build_filename
mov	edi, eax
mov	[esp+7Ch+var_78], 1
mov	[esp+7Ch+var_7C], eax
call	g_file_test_utf8
test	eax, eax
jnz	short loc_67D10C90
mov	[esp+7Ch+var_7C], edi
call	g_free
xor	eax, eax
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D10E9F
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+7Ch+var_70], offset aSoundThemeLoad 
mov	[esp+7Ch+var_74], offset aSoundThemes 
mov	[esp+7Ch+var_78], offset aTheme_xml 
mov	[esp+7Ch+var_7C], ebx
call	xmlnode_from_file
mov	esi, eax
mov	[esp+7Ch+var_7C], edi
call	g_free
test	esi, esi
jz	loc_67D10EA4
mov	[esp+7Ch+var_78], offset aName_8 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_attrib
mov	edi, eax
test	eax, eax
jz	short loc_67D10CFC
mov	[esp+7Ch+var_78], offset aType_3 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_attrib
mov	[esp+7Ch+var_78], offset aSound	
mov	[esp+7Ch+var_7C], eax
call	purple_strequal
test	eax, eax
jnz	short loc_67D10D44
mov	[esp+7Ch+var_78], offset aMissingAttribu 
mov	[esp+7Ch+var_7C], offset aSoundThemeLoad 
call	purple_debug_warning
xor	edi, edi
mov	[esp+7Ch+var_30], 0
			
mov	[esp+7Ch+var_7C], esi
call	xmlnode_free
mov	eax, [esp+7Ch+var_30]
mov	[esp+7Ch+var_7C], eax
call	g_free
call	purple_theme_get_type
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	g_type_check_instance_cast
jmp	loc_67D10C75
mov	[esp+7Ch+var_78], offset aDescription_0	
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
mov	[esp+7Ch+var_7C], eax
call	xmlnode_get_data
mov	[esp+7Ch+var_30], eax
mov	[esp+7Ch+var_78], offset aName_8 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_attrib
test	eax, eax
jz	loc_67D10E74
mov	[esp+7Ch+var_78], offset aImage_0 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_attrib
mov	[esp+7Ch+var_78], offset aAuthor 
mov	[esp+7Ch+var_7C], esi
mov	[esp+7Ch+var_38], eax
call	xmlnode_get_attrib
mov	[esp+7Ch+var_34], eax
call	purple_sound_theme_get_type
mov	[esp+7Ch+var_48], 0
mov	ebp, [esp+7Ch+var_30]
mov	[esp+7Ch+var_4C], ebp
mov	[esp+7Ch+var_50], offset aDescription_0	
mov	[esp+7Ch+var_54], ebx
mov	[esp+7Ch+var_58], offset aDirectory 
mov	ecx, [esp+7Ch+var_38]
mov	[esp+7Ch+var_5C], ecx
mov	[esp+7Ch+var_60], offset aImage_0 
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_64], edx
mov	[esp+7Ch+var_68], offset aAuthor 
mov	[esp+7Ch+var_6C], edi
mov	[esp+7Ch+var_70], offset aName_8 
mov	[esp+7Ch+var_74], offset aSound	
mov	[esp+7Ch+var_78], offset aType_3 
mov	[esp+7Ch+var_7C], eax
call	g_object_new
mov	edi, eax
mov	[esp+7Ch+var_78], offset aEvent_0 
mov	[esp+7Ch+var_7C], esi
call	xmlnode_get_child
mov	ebx, eax
test	eax, eax
jz	loc_67D10D1A
lea	esi, [esi+0]
mov	[esp+7Ch+var_78], offset aFile_0 
mov	[esp+7Ch+var_7C], ebx
call	xmlnode_get_attrib
mov	ebp, eax
mov	[esp+7Ch+var_78], offset aName_8 
mov	[esp+7Ch+var_7C], ebx
call	xmlnode_get_attrib
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], edi
call	purple_sound_theme_set_file
mov	[esp+7Ch+var_7C], ebx
call	xmlnode_get_next_twin
mov	ebx, eax
test	eax, eax
jnz	short loc_67D10E2C
jmp	loc_67D10D1A
align 4
xor	edi, edi
jmp	loc_67D10D1A
align 4
mov	[esp+7Ch+var_74], offset aDirNull_0 
mov	[esp+7Ch+var_78], offset aPurple_sound_l 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D10C75
call	__stack_chk_fail
xor	eax, eax
jmp	loc_67D10C75
align 4
public purple_sound_theme_loader_get_type
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72368
test	eax, eax
jnz	short loc_67D10EED
call	purple_theme_loader_get_type
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset asc_67D43240 
mov	[esp+2Ch+var_28], offset aPurplesoundthe 
mov	[esp+2Ch+var_2C], eax
call	g_type_register_static
mov	ds:dword_67D72368, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10EFD
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], 50h
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_class_cast
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_class_peek_parent
mov	ds:dword_67D72370, eax
mov	dword ptr [esi+18h], offset sub_67D11038
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D10F50
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_sound_theme_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7236C
test	eax, eax
jnz	short loc_67D10F99
call	purple_theme_get_type
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aD_4 
mov	[esp+2Ch+var_28], offset aPurplesoundt_0 
mov	[esp+2Ch+var_2C], eax
call	g_type_register_static
mov	ds:dword_67D7236C, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D10FA9
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_sound_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	esi, eax
mov	[esp+2Ch+var_2C], 4
call	g_malloc0
mov	[esi+10h], eax
call	purple_sound_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	ebx, [eax+10h]
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11032
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_sound_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	eax, [eax+10h]
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11087
mov	[esp+2Ch+arg_0], ebx
mov	eax, ds:dword_67D72370
mov	eax, [eax+18h]
add	esp, 28h
pop	ebx
jmp	eax
call	__stack_chk_fail
public purple_sound_theme_get_file
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_sound_theme_get_type
test	ebx, ebx
jz	short loc_67D110B7
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D110B7
cmp	[edx], eax
jz	short loc_67D110F8
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D110F8
mov	[esp+2Ch+var_24], offset aPurple_is_soun 
mov	[esp+2Ch+var_28], offset aPurple_sound_t 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1112C
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
call	purple_sound_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1112C
mov	[esp+2Ch+arg_4], esi
mov	eax, [eax+10h]
mov	eax, [eax]
mov	[esp+2Ch+arg_0], eax
add	esp, 24h
pop	ebx
pop	esi
jmp	g_hash_table_lookup
			
call	__stack_chk_fail
align 4
public purple_sound_theme_get_file_full
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_sound_theme_get_type
test	ebx, ebx
jz	short loc_67D1115F
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D1115F
cmp	[edx], eax
jz	short loc_67D111A0
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D111A0
mov	[esp+2Ch+var_24], offset aPurple_is_soun 
mov	[esp+2Ch+var_28], offset aPurple_sound_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11204
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	purple_sound_theme_get_file
mov	esi, eax
test	eax, eax
jz	short loc_67D111E4
call	purple_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	[esp+2Ch+var_2C], eax
call	purple_theme_get_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
jmp	short loc_67D1118D
align 4
mov	[esp+2Ch+var_24], offset aFilename_1 
mov	[esp+2Ch+var_28], offset aPurple_sound_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1118D
call	__stack_chk_fail
align 4
public purple_sound_theme_set_file
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
call	purple_sound_theme_get_type
test	ebx, ebx
jz	short loc_67D1123D
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D1123D
cmp	[edx], eax
jz	short loc_67D11284
			
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D11284
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D112FB
mov	[esp+3Ch+arg_8], offset	aPurple_is_soun	
mov	[esp+3Ch+arg_4], offset	aPurple_sound_1	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
			
call	purple_sound_theme_get_type
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_type_check_instance_cast
mov	ebp, [eax+10h]
test	esi, esi
jz	short loc_67D112D8
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	ebx, eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D112FB
mov	[esp+3Ch+arg_8], ebx
mov	[esp+3Ch+arg_4], eax
mov	eax, [ebp+0]
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_replace
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D112FB
mov	[esp+3Ch+arg_4], edi
mov	eax, [ebp+0]
mov	[esp+3Ch+arg_0], eax
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_hash_table_remove
			
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleSoundW_1 
call	purple_prefs_get_int
mov	esi, eax
cmp	eax, 3
jz	short loc_67D1133F
test	ebx, ebx
jz	short loc_67D1133F
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_active_status
mov	ebx, eax
mov	[esp+2Ch+var_2C], eax
call	purple_status_is_online
test	eax, eax
jnz	short loc_67D11358
			
mov	eax, 1
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11375
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_status_is_available
test	eax, eax
jz	short loc_67D1136C
dec	esi
jz	short loc_67D1133F
xor	eax, eax
jmp	short loc_67D11344
align 4
cmp	esi, 2
jz	short loc_67D1133F
xor	eax, eax
jmp	short loc_67D11344
call	__stack_chk_fail
align 4
public purple_sound_play_file
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_4]
call	sub_67D11300
test	eax, eax
jz	short loc_67D113C4
mov	eax, ds:dword_67D72380
test	eax, eax
jz	short loc_67D113C4
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67D113C4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D113D5
mov	[esp+1Ch+arg_0], ebx
add	esp, 18h
pop	ebx
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D113D5
add	esp, 18h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_sound_play_event
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ebx
call	sub_67D11300
test	eax, eax
jnz	short loc_67D11418
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D11490
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+Time],	0 
call	time
sub	eax, ds:dword_67D723A0[esi*4]
dec	eax
jle	short loc_67D113FF
mov	[esp+2Ch+Time],	0 
call	time
mov	ds:dword_67D723A0[esi*4], eax
mov	eax, ds:dword_67D72380
test	eax, eax
jz	short loc_67D113FF
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D113FF
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset aPlayingSoundEv 
mov	[esp+2Ch+Time],	offset dword_67D723D0
call	purple_signal_emit_return_1
test	eax, eax
jnz	short loc_67D113FF
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11490
mov	[esp+2Ch+arg_0], esi
mov	eax, ds:dword_67D72380
mov	eax, [eax+0Ch]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
			
call	__stack_chk_fail
align 4
public purple_sound_set_ui_ops
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72380
test	eax, eax
jz	short loc_67D114BD
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67D114BD
call	eax
			
mov	ds:dword_67D72380, ebx
test	ebx, ebx
jz	short loc_67D114E0
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D114E0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D114F1
add	esp, 18h
pop	ebx
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D114F1
add	esp, 18h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_sound_get_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72380
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1151B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_sound_init
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], 1
call	purple_value_new
mov	esi, eax
mov	[esp+3Ch+var_3C], 7
call	purple_value_new
mov	ebx, eax
mov	[esp+3Ch+var_3C], 4
call	purple_value_new
mov	[esp+3Ch+var_24], esi
mov	[esp+3Ch+var_28], ebx
mov	[esp+3Ch+var_2C], 2
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset purple_marshal_BOOLEAN__INT_POINTER
mov	[esp+3Ch+var_38], offset aPlayingSoundEv 
mov	[esp+3Ch+var_3C], offset dword_67D723D0
call	purple_signal_register
mov	[esp+3Ch+var_3C], offset aPurpleSound 
call	purple_prefs_add_none
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], offset aPurpleSoundW_1 
call	purple_prefs_add_int
mov	edx, offset dword_67D723A0
mov	ecx, 30h
xor	eax, eax
mov	edi, edx
rep stosb
call	purple_sound_theme_loader_get_type
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aSound_0 
mov	[esp+3Ch+var_38], offset aType_4 
mov	[esp+3Ch+var_3C], eax
call	g_object_new
mov	[esp+3Ch+var_3C], eax
call	purple_theme_manager_register_type
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11601
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_sound_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72380
test	eax, eax
jz	short loc_67D11628
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67D11628
call	eax
			
mov	[esp+2Ch+var_2C], offset dword_67D723D0
call	purple_signals_unregister_by_instance
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11644
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_sounds_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D723D0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1166F
add	esp, 1Ch
retn
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D116AE
mov	[esp+1Ch+arg_8], edx
mov	[esp+1Ch+arg_4], eax
mov	edx, [eax+14h]
mov	[esp+1Ch+arg_0], edx
mov	eax, [eax+18h]
add	esp, 1Ch
jmp	eax
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D723E4
test	eax, eax
jz	short loc_67D116E0
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11746
add	esp, 28h
pop	ebx
retn
align 10h
mov	[esp+2Ch+var_2C], offset aCoreSsl 
call	purple_plugins_find_with_id
mov	ebx, eax
test	eax, eax
jz	short loc_67D116FE
mov	[esp+2Ch+var_2C], eax
call	purple_plugin_is_loaded
test	eax, eax
jz	short loc_67D1173C
			
mov	eax, ds:dword_67D723E0
test	eax, eax
jz	short loc_67D116CC
mov	edx, [eax]
test	edx, edx
jz	short loc_67D116CC
mov	ebx, [eax+4]
test	ebx, ebx
jz	short loc_67D116CC
mov	ecx, [eax+8]
test	ecx, ecx
jz	short loc_67D116CC
mov	ebx, [eax+0Ch]
test	ebx, ebx
jz	short loc_67D116CC
mov	ecx, [eax+10h]
test	ecx, ecx
jz	short loc_67D116CC
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_67D116CC
call	edx
mov	ds:dword_67D723E4, eax
jmp	short loc_67D116CE
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_plugin_load
jmp	short loc_67D116FE
call	__stack_chk_fail
align 4
public purple_ssl_is_supported
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	sub_67D116B4
xor	eax, eax
mov	edx, ds:dword_67D723E0
test	edx, edx
setnz	al
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1177C
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_ssl_connect_with_ssl_cn
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	edx, [esp+5Ch+arg_0]
mov	[esp+5Ch+var_38], edx
mov	esi, [esp+5Ch+arg_4]
mov	ebx, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	edx, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_14]
mov	[esp+5Ch+var_3C], edx
mov	edx, [esp+5Ch+arg_18]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D118F8
lea	eax, [ebx+1]
cmp	eax, 1
jbe	loc_67D118D8
test	edi, edi
jz	loc_67D11918
call	purple_ssl_is_supported
test	eax, eax
jz	loc_67D118A4
mov	ecx, ds:dword_67D723E4
test	ecx, ecx
jnz	short loc_67D11802
call	sub_67D116B4
test	eax, eax
jz	loc_67D11948
mov	[esp+5Ch+var_5C], 30h
call	g_malloc0
mov	ebp, eax
mov	dword ptr [eax+1Ch], 0FFFFFFFFh
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jz	loc_67D11938
mov	edx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], edx
call	g_strdup
mov	[ebp+0], eax
mov	[ebp+4], ebx
mov	edx, [esp+5Ch+var_30]
mov	[ebp+8], edx
mov	[ebp+0Ch], edi
mov	edx, [esp+5Ch+var_34]
mov	[ebp+10h], edx
mov	[esp+5Ch+var_58], offset aTls_cached 
mov	[esp+5Ch+var_5C], offset aX509_0 
call	purple_certificate_find_verifier
mov	[ebp+2Ch], eax
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], offset sub_67D11D5C
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], esi
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], 0
call	purple_proxy_connect
mov	[ebp+24h], eax
test	eax, eax
jnz	short loc_67D118C2
mov	eax, [ebp+0]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], ebp
call	g_free
xor	ebp, ebp
jmp	short loc_67D118C2
align 4
mov	[esp+5Ch+var_54], offset aPurple_ssl_is_ 
mov	[esp+5Ch+var_58], offset aPurple_ssl_con 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
			
mov	eax, ebp
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1194F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_54], offset aPort0Port1 
mov	[esp+5Ch+var_58], offset aPurple_ssl_con 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D118C2
mov	[esp+5Ch+var_54], offset aHostNull_0 
mov	[esp+5Ch+var_58], offset aPurple_ssl_con 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D118C2
mov	[esp+5Ch+var_54], offset aFuncNull_4 
mov	[esp+5Ch+var_58], offset aPurple_ssl_con 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D118C2
mov	[esp+5Ch+var_5C], esi
call	g_strdup
jmp	loc_67D1182F
align 4
xor	ebp, ebp
jmp	loc_67D118C2
call	__stack_chk_fail
public purple_ssl_connect
			
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_14]
mov	[esp+3Ch+var_24], eax
mov	[esp+3Ch+var_28], 0
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_ssl_connect_with_ssl_cn
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D119AE
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public purple_ssl_input_add
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D11A4C
call	purple_ssl_is_supported
test	eax, eax
jnz	short loc_67D11A10
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11A62
mov	[esp+2Ch+arg_8], offset	aPurple_ssl_is_	
mov	[esp+2Ch+arg_4], offset	aPurple_ssl_inp	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 10h
mov	[ebx+14h], edi
mov	[ebx+18h], esi
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset sub_67D11674
mov	[esp+2Ch+var_28], 1
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	purple_input_add
mov	[ebx+20h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11A62
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11A62
mov	[esp+2Ch+arg_8], offset	aFuncNull_4 
jmp	short loc_67D119F2
			
call	__stack_chk_fail
align 4
public purple_ssl_strerror
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	eax, 2
jz	short loc_67D11AF8
cmp	eax, 3
jz	short loc_67D11AE0
cmp	eax, 1
jz	short loc_67D11AC8
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aUnknownSslErro 
mov	[esp+2Ch+var_2C], offset aSslconn 
call	purple_debug_warning
mov	[esp+2Ch+var_28], offset aUnknownSslEr_0 
mov	[esp+2Ch+var_2C], offset aPidgin_14 
call	libintl_dgettext
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11B0E
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_28], offset aSslHandshakeFa 
mov	[esp+2Ch+var_2C], offset aPidgin_14 
call	libintl_dgettext
jmp	short loc_67D11AB6
align 10h
mov	[esp+2Ch+var_28], offset aSslPeerPresent 
mov	[esp+2Ch+var_2C], offset aPidgin_14 
call	libintl_dgettext
jmp	short loc_67D11AB6
align 4
mov	[esp+2Ch+var_28], offset aSslConnectionF 
mov	[esp+2Ch+var_2C], offset aPidgin_14 
call	libintl_dgettext
jmp	short loc_67D11AB6
call	__stack_chk_fail
align 4
public purple_ssl_connect_with_host_fd
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_34], edx
mov	edi, [esp+4Ch+arg_10]
mov	edx, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
cmp	ebx, 0FFFFFFFFh
jz	loc_67D11BFC
test	esi, esi
jz	loc_67D11C1C
call	purple_ssl_is_supported
test	eax, eax
jz	short loc_67D11BC8
mov	eax, ds:dword_67D723E4
test	eax, eax
jnz	short loc_67D11B72
call	sub_67D116B4
test	eax, eax
jz	loc_67D11C3C
mov	[esp+4Ch+var_4C], 30h
call	g_malloc0
mov	ebp, eax
mov	edx, [esp+4Ch+var_30]
mov	[eax+8], edx
mov	[eax+0Ch], esi
mov	edx, [esp+4Ch+var_34]
mov	[eax+10h], edx
mov	[eax+1Ch], ebx
test	edi, edi
jz	short loc_67D11BA3
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebp+0], eax
mov	[esp+4Ch+var_48], offset aTls_cached 
mov	[esp+4Ch+var_4C], offset aX509_0 
call	purple_certificate_find_verifier
mov	[ebp+2Ch], eax
mov	[esp+4Ch+var_4C], ebp
mov	eax, ds:dword_67D723E0
call	dword ptr [eax+8]
jmp	short loc_67D11BE6
align 4
mov	[esp+4Ch+var_44], offset aPurple_ssl_is_ 
mov	[esp+4Ch+var_48], offset aPurple_ssl_c_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
			
mov	eax, ebp
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11C40
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aFd1 
mov	[esp+4Ch+var_48], offset aPurple_ssl_c_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D11BE6
mov	[esp+4Ch+var_44], offset aFuncNull_4 
mov	[esp+4Ch+var_48], offset aPurple_ssl_c_0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D11BE6
xor	ebp, ebp
jmp	short loc_67D11BE6
call	__stack_chk_fail
align 4
public purple_ssl_connect_fd
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+var_28], eax
mov	[esp+3Ch+var_2C], 0
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_30], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	purple_ssl_connect_with_host_fd
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11C9A
add	esp, 3Ch
retn
call	__stack_chk_fail
align 10h
public purple_ssl_close
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D11D28
mov	[esp+2Ch+var_2C], ebx
call	purple_request_close_with_handle
mov	[esp+2Ch+var_2C], ebx
call	purple_notify_close_with_handle
mov	[esp+2Ch+var_2C], ebx
mov	eax, ds:dword_67D723E0
call	dword ptr [eax+0Ch]
mov	eax, [ebx+24h]
test	eax, eax
jz	short loc_67D11CE1
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	eax, [ebx+20h]
test	eax, eax
jnz	short loc_67D11D1C
mov	eax, [ebx+1Ch]
test	eax, eax
js	short loc_67D11CF7
mov	[esp+2Ch+var_2C], eax 
call	wpurple_close
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11D55
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
jmp	short loc_67D11CE8
align 4
mov	[esp+2Ch+var_24], offset aGscNull 
mov	[esp+2Ch+var_28], offset aPurple_ssl_clo 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11D55
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	dword ptr [ebx+24h], 0
test	eax, eax
js	short loc_67D11DA0
mov	[ebx+1Ch], eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11DD4
mov	[esp+2Ch+arg_0], ebx
mov	eax, ds:dword_67D723E0
mov	eax, [eax+8]
add	esp, 28h
pop	ebx
jmp	eax
mov	eax, [ebx+10h]
test	eax, eax
jz	short loc_67D11DBB
mov	edx, [ebx+8]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], 2
mov	[esp+2Ch+var_2C], ebx
call	eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11DD4
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_ssl_close
			
call	__stack_chk_fail
align 4
public purple_ssl_read
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67D11E5C
test	edx, edx
jz	short loc_67D11E7C
test	ecx, ecx
jnz	short loc_67D11E34
mov	[esp+2Ch+var_24], offset aLen0 
mov	[esp+2Ch+var_28], offset aPurple_ssl_rea 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11E9A
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D11E9A
mov	[esp+2Ch+arg_8], ecx
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
mov	eax, ds:dword_67D723E0
mov	eax, [eax+10h]
add	esp, 28h
pop	ebx
jmp	eax
align 4
mov	[esp+2Ch+var_24], offset aGscNull 
mov	[esp+2Ch+var_28], offset aPurple_ssl_rea 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D11E20
align 4
mov	[esp+2Ch+var_24], offset aDataNull_4 
mov	[esp+2Ch+var_28], offset aPurple_ssl_rea 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D11E20
			
call	__stack_chk_fail
align 10h
public purple_ssl_write
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, [esp+2Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ebx
xor	ebx, ebx
test	eax, eax
jz	short loc_67D11F20
test	edx, edx
jz	short loc_67D11F40
test	ecx, ecx
jnz	short loc_67D11EF8
mov	[esp+2Ch+var_24], offset aLen0 
mov	[esp+2Ch+var_28], offset aPurple_ssl_wri 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11F5E
add	esp, 28h
pop	ebx
retn
align 4
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D11F5E
mov	[esp+2Ch+arg_8], ecx
mov	[esp+2Ch+arg_4], edx
mov	[esp+2Ch+arg_0], eax
mov	eax, ds:dword_67D723E0
mov	eax, [eax+14h]
add	esp, 28h
pop	ebx
jmp	eax
align 10h
mov	[esp+2Ch+var_24], offset aGscNull 
mov	[esp+2Ch+var_28], offset aPurple_ssl_wri 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D11EE4
align 10h
mov	[esp+2Ch+var_24], offset aDataNull_4 
mov	[esp+2Ch+var_28], offset aPurple_ssl_wri 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D11EE4
			
call	__stack_chk_fail
align 4
public purple_ssl_get_peer_certificates
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D11F98
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11FC6
mov	[esp+2Ch+arg_0], eax
mov	eax, ds:dword_67D723E0
mov	eax, [eax+18h]
add	esp, 2Ch
jmp	eax
mov	[esp+2Ch+var_24], offset aGscNull 
mov	[esp+2Ch+var_28], offset aPurple_ssl_get 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D11FC6
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_ssl_set_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D723E0, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D11FF3
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_ssl_get_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D723E0
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1201B
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_ssl_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	sub_67D116B4
test	eax, eax
jnz	short loc_67D1204B
mov	[esp+2Ch+var_28], offset aUnableToInit_0 
mov	[esp+2Ch+var_2C], offset aSslconn 
call	purple_debug_error
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1205B
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_ssl_uninit
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D723E4
test	eax, eax
jz	short loc_67D12089
mov	eax, ds:dword_67D723E0
call	dword ptr [eax+4]
mov	ds:dword_67D723E4, 0
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D12099
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_C]
mov	edx, [esp+1Ch+arg_8]
mov	dword_67D30420[eax*4], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D120CD
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_status_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D12110
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1213D
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_statu_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1213D
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_status_attr_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D12194
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	purple_value_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D121C1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_24], offset aAttrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_statu_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D121C1
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_primitive_get_id_from_type
sub	esp, 1Ch
mov	ecx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, offset dword_67D43D20
nop
cmp	[edx], ecx
jz	short loc_67D12204
inc	eax
add	edx, 0Ch
cmp	eax, 0Ah
jnz	short loc_67D121E0
mov	eax, offset aUnset 
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12210
add	esp, 1Ch
retn
align 4
lea	eax, [eax+eax*2]
mov	eax, ds:off_67D43D24[eax*4]
jmp	short loc_67D121F2
call	__stack_chk_fail
align 4
public purple_primitive_get_name_from_type
			
sub	esp, 2Ch
mov	ecx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, offset dword_67D43D20
nop
cmp	[edx], ecx
jz	short loc_67D12264
inc	eax
add	edx, 0Ch
cmp	eax, 0Ah
jnz	short loc_67D12230
mov	[esp+2Ch+var_28], offset aUnset_0 
mov	[esp+2Ch+var_2C], offset aPidgin_15 
call	libintl_dgettext
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12280
add	esp, 2Ch
retn
align 4
lea	eax, [eax+eax*2]
mov	eax, ds:off_67D43D28[eax*4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPidgin_15 
call	libintl_dgettext
jmp	short loc_67D12251
call	__stack_chk_fail
align 4
public purple_primitive_get_type_from_id
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D122E4
mov	esi, offset off_67D43D24
xor	ebx, ebx
mov	eax, [esi]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_strequal
test	eax, eax
jnz	short loc_67D122D8
inc	ebx
add	esi, 0Ch
cmp	ebx, 0Ah
jnz	short loc_67D122A8
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12304
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
lea	eax, [ebx+ebx*2]
mov	eax, ds:dword_67D43D20[eax*4]
jmp	short loc_67D122C5
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_primiti 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D122C5
call	__stack_chk_fail
align 4
public purple_status_type_new_full
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ecx, [esp+4Ch+arg_C]
mov	edx, [esp+4Ch+arg_10]
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D123A0
mov	[esp+4Ch+var_4C], 20h
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_34], ecx
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	ecx, [esp+4Ch+var_34]
mov	[eax+10h], ecx
mov	edx, [esp+4Ch+var_38]
mov	[eax+14h], edx
mov	edx, [esp+4Ch+var_30]
mov	[eax+18h], edx
test	ebp, ebp
jz	short loc_67D123C0
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+4], eax
test	edi, edi
jz	short loc_67D123E9
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebx+8], eax
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1240C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+4Ch+var_44], offset aPrimitivePurpl 
mov	[esp+4Ch+var_48], offset aPurple_statu_2 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D12389
mov	edx, offset dword_67D43D20
xor	eax, eax
nop
cmp	esi, [edx]
jz	short loc_67D12400
inc	eax
add	edx, 0Ch
cmp	eax, 0Ah
jnz	short loc_67D123C8
mov	eax, offset aUnset 
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebx+4], eax
test	edi, edi
jnz	short loc_67D1237E
mov	[esp+4Ch+var_4C], esi
call	purple_primitive_get_name_from_type
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	[ebx+8], eax
jmp	short loc_67D12389
align 10h
lea	eax, [eax+eax*2]
mov	eax, ds:off_67D43D24[eax*4]
jmp	short loc_67D123DA
call	__stack_chk_fail
align 4
public purple_status_type_new
push	esi
push	ebx
sub	esp, 34h
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ecx, [esp+3Ch+arg_8]
mov	ebx, [esp+3Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], esi
xor	esi, esi
test	eax, eax
jz	short loc_67D12470
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], ebx
mov	[esp+3Ch+var_30], 1
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	purple_status_type_new_full
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12490
add	esp, 34h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+3Ch+var_34], offset aPrimitivePurpl 
mov	[esp+3Ch+var_38], offset aPurple_statu_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1245D
call	__stack_chk_fail
align 4
public purple_status_type_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D12510
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_status_attr_destroy
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1253D
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 10h
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1253D
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_status_type_set_primary_attr
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D12588
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D125A6
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12576
call	__stack_chk_fail
align 4
public purple_status_type_get_primitive
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D125D8
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D125F8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D125C5
call	__stack_chk_fail
align 10h
public purple_status_type_get_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1262C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1264C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1261A
call	__stack_chk_fail
align 4
public purple_status_type_get_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12680
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D126A0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1266E
call	__stack_chk_fail
align 4
public purple_status_type_is_saveable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D126D4
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D126F4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_statu_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D126C2
call	__stack_chk_fail
align 4
public purple_status_type_is_user_settable
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12728
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12748
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D12716
call	__stack_chk_fail
align 10h
public purple_status_type_is_independent
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1277C
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1279C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1276A
call	__stack_chk_fail
align 4
public purple_status_type_is_exclusive
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D127D8
mov	eax, [eax+18h]
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D127F8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D127C6
call	__stack_chk_fail
align 10h
public purple_status_type_is_available
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12838
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_primitive
cmp	eax, 2
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12858
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D12828
call	__stack_chk_fail
align 10h
public purple_status_type_get_primary_attr
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1288C
mov	eax, [eax+0Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D128AC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1287A
call	__stack_chk_fail
align 4
public purple_status_type_get_attrs
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D128E0
mov	eax, [eax+1Ch]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12900
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D128CE
call	__stack_chk_fail
align 4
public purple_status_type_find_with_id
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jnz	short loc_67D12940
jmp	short loc_67D1295B
align 4
mov	esi, [ebx]
mov	eax, [esi+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_strequal
test	eax, eax
jnz	short loc_67D12946
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D12928
xor	esi, esi
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12979
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12944
call	__stack_chk_fail
align 10h
public purple_status_attr_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D129E8
test	edi, edi
jz	short loc_67D12A08
test	ebp, ebp
jz	short loc_67D12A28
mov	[esp+3Ch+var_3C], 0Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+3Ch+var_3C], esi
call	g_strdup
mov	[ebx], eax
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+4], eax
mov	[ebx+8], ebp
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12A48
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_34], offset aIdNull_4 
mov	[esp+3Ch+var_38], offset aPurple_stat_17 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D129D0
mov	[esp+3Ch+var_34], offset aNameNull_9 
mov	[esp+3Ch+var_38], offset aPurple_stat_17 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D129D0
mov	[esp+3Ch+var_34], offset aValue_typeNull 
mov	[esp+3Ch+var_38], offset aPurple_stat_17 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D129D0
call	__stack_chk_fail
align 10h
public purple_status_type_add_attr
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [esp+2Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], esi
xor	esi, esi
test	ebx, ebx
jz	short loc_67D12AC0
test	eax, eax
jz	short loc_67D12AF0
test	edx, edx
jz	loc_67D12B08
test	ecx, ecx
jz	loc_67D12B20
mov	[esp+2Ch+var_24], ecx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_attr_new
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+1Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D12B36
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D12B36
mov	[esp+2Ch+arg_8], offset	aStatus_typeNul	
			
mov	[esp+2Ch+arg_4], offset	aPurple_stat_18	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 10h
mov	esi, [esp+2Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D12B36
mov	[esp+2Ch+arg_8], offset	aIdNull_4 
jmp	short loc_67D12AD4
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D12B36
mov	[esp+2Ch+arg_8], offset	aNameNull_9 
jmp	short loc_67D12AD4
align 10h
mov	esi, [esp+2Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D12B36
mov	[esp+2Ch+arg_8], offset	aValueNull_2 
jmp	short loc_67D12AD4
			
call	__stack_chk_fail
align 4
public purple_status_type_add_attrs_vargs
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D12BEE
mov	eax, [ecx]
test	eax, eax
jz	short loc_67D12BBB
mov	edx, [ecx+4]
test	edx, edx
jz	short loc_67D12BD0
lea	ebx, [ecx+0Ch]
mov	ecx, [ecx+8]
test	ecx, ecx
jz	short loc_67D12B9F
nop
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_status_type_add_attr
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D12BBB
mov	edx, [ebx+4]
test	edx, edx
jz	short loc_67D12BD0
add	ebx, 0Ch
mov	ecx, [ebx-4]
test	ecx, ecx
jnz	short loc_67D12B74
mov	[esp+2Ch+var_24], offset aValueNull_2 
mov	[esp+2Ch+var_28], offset aPurple_stat_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D12C0C
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	[esp+2Ch+var_24], offset aNameNull_9 
mov	[esp+2Ch+var_28], offset aPurple_stat_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12BBB
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12BBB
call	__stack_chk_fail
align 4
public purple_status_type_add_attrs
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	ecx, [esp+2Ch+arg_C]
mov	esi, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], esi
xor	esi, esi
test	ebx, ebx
jz	short loc_67D12C88
test	eax, eax
jz	short loc_67D12CA8
test	edx, edx
jz	loc_67D12CC8
test	ecx, ecx
jz	loc_67D12CE8
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_status_type_add_attr
lea	eax, [esp+2Ch+arg_10]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_status_type_add_attrs_vargs
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D12D09
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12C71
align 4
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12C71
align 4
mov	[esp+2Ch+var_24], offset aNameNull_9 
mov	[esp+2Ch+var_28], offset aPurple_stat_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D12C71
align 4
mov	[esp+2Ch+var_24], offset aValueNull_2 
mov	[esp+2Ch+var_28], offset aPurple_stat_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D12C71
call	__stack_chk_fail
align 10h
public purple_status_type_new_with_attrs
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	eax, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	edx, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_38], edx
mov	ecx, [esp+5Ch+arg_10]
mov	ebp, [esp+5Ch+arg_14]
mov	edi, [esp+5Ch+arg_18]
mov	ebx, [esp+5Ch+arg_1C]
mov	esi, [esp+5Ch+arg_20]
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D12DE4
test	edi, edi
jz	loc_67D12E04
test	ebx, ebx
jz	loc_67D12E24
test	esi, esi
jz	loc_67D12E44
mov	[esp+5Ch+var_48], ebp
mov	[esp+5Ch+var_4C], ecx
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_50], edx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_54], edx
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	purple_status_type_new_full
mov	ebp, eax
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	purple_status_type_add_attr
lea	eax, [esp+5Ch+arg_24]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebp
call	purple_status_type_add_attrs_vargs
			
mov	eax, ebp
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D12E67
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_54], offset aPrimitivePurpl 
mov	[esp+5Ch+var_58], offset aPurple_stat_21 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D12DC7
mov	[esp+5Ch+var_54], offset aAttr_idNull 
mov	[esp+5Ch+var_58], offset aPurple_stat_21 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D12DC7
mov	[esp+5Ch+var_54], offset aAttr_nameNull	
mov	[esp+5Ch+var_58], offset aPurple_stat_21 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D12DC7
mov	[esp+5Ch+var_54], offset aAttr_valueNull 
mov	[esp+5Ch+var_58], offset aPurple_stat_21 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	loc_67D12DC7
call	__stack_chk_fail
public purple_status_attr_get_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12E98
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12EB8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAttrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_stat_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D12E85
call	__stack_chk_fail
align 10h
public purple_status_type_get_attr
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12F28
test	edi, edi
jz	short loc_67D12F48
mov	ebx, [eax+1Ch]
test	ebx, ebx
jnz	short loc_67D12EF3
jmp	short loc_67D12F24
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D12F24
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_status_attr_get_id
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D12EEC
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12F68
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
xor	esi, esi
jmp	short loc_67D12F0D
mov	[esp+2Ch+var_24], offset aStatus_typeNul 
mov	[esp+2Ch+var_28], offset aPurple_stat_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D12F0D
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D12F0D
call	__stack_chk_fail
align 10h
public purple_status_attr_get_name
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12F9C
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D12FBC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aAttrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_stat_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D12F8A
call	__stack_chk_fail
align 4
public purple_status_attr_get_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D12FF0
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13010
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aAttrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_stat_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D12FDE
call	__stack_chk_fail
align 4
public purple_status_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D130D8
test	esi, esi
jz	loc_67D130F8
mov	[esp+3Ch+var_3C], 10h
call	g_malloc0
mov	ebp, eax
mov	[eax], ebx
mov	[eax+4], esi
mov	[esp+3Ch+var_30], offset purple_value_destroy
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], offset g_str_equal
mov	[esp+3Ch+var_3C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebp+0Ch], eax
mov	[esp+3Ch+var_3C], ebx
call	purple_status_type_get_attrs
mov	ebx, eax
test	eax, eax
jz	short loc_67D130C2
xchg	ax, ax
mov	esi, [ebx]
mov	[esp+3Ch+var_3C], esi
call	purple_status_attr_get_value
mov	[esp+3Ch+var_3C], eax
call	purple_value_dup
mov	edi, eax
mov	[esp+3Ch+var_3C], esi
call	purple_status_attr_get_id
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	eax, [ebp+0Ch]
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_insert
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D1308C
			
mov	eax, ebp
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13118
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aStatus_typeNul 
mov	[esp+3Ch+var_38], offset aPurple_stat_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D130C2
mov	[esp+3Ch+var_34], offset aPresenceNull_0 
mov	[esp+3Ch+var_38], offset aPurple_stat_26 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D130C2
call	__stack_chk_fail
align 10h
public purple_status_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1314C
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1316C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D13139
call	__stack_chk_fail
align 4
public purple_status_get_presence
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D131A0
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D131C0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1318E
call	__stack_chk_fail
align 4
public purple_status_get_id
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D13200
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1322E
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_type_get_id
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1322E
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_status_get_name
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D1326C
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1329A
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_type_get_name
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1329A
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 10h
public purple_status_is_independent
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D132D8
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13306
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_type_is_independent
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13306
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_status_is_exclusive
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D13344
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13372
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_type_is_exclusive
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13372
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_status_is_available
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D133B0
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D133DE
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_type_is_available
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D133DE
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_status_is_active
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D13410
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13430
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D133FE
call	__stack_chk_fail
align 4
public purple_status_is_online
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D13478
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_type
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_primitive
cmp	eax, 1
setnbe	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13498
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D13468
call	__stack_chk_fail
align 10h
public purple_status_get_attr_value
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D134E0
test	edx, edx
jz	short loc_67D13510
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D1352E
mov	[esp+2Ch+arg_4], edx
mov	eax, [eax+0Ch]
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	g_hash_table_lookup
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1352E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D134FC
			
call	__stack_chk_fail
align 4
public purple_status_set_attr_string
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D135E0
test	edi, edi
jz	loc_67D135F8
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], ebx
call	purple_status_get_attr_value
mov	esi, eax
test	eax, eax
jz	loc_67D13610
mov	[esp+3Ch+var_3C], esi
call	purple_value_get_type
cmp	eax, 0Dh
jz	short loc_67D135BC
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D13650
mov	[esp+3Ch+arg_8], offset	aPurple_value_2	
			
mov	[esp+3Ch+arg_4], offset	aPurple_stat_37	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D13650
mov	[esp+3Ch+arg_4], ebp
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_value_set_string
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13650
mov	[esp+3Ch+arg_8], offset	aStatusNull_1 
jmp	short loc_67D1359D
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13650
mov	[esp+3Ch+arg_8], offset	aIdNull_4 
jmp	short loc_67D1359D
align 10h
mov	[esp+3Ch+var_3C], ebx
call	purple_status_get_type
mov	[esp+3Ch+var_3C], eax
call	purple_status_type_get_name
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], offset aAttemptedToSet 
mov	[esp+3Ch+var_3C], offset aStatus_1 
call	purple_debug_error
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13650
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_status_set_attr_int
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D136F8
test	edx, edx
jz	loc_67D13710
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_value
mov	ebx, eax
test	eax, eax
jz	loc_67D13728
mov	[esp+2Ch+var_2C], eax
call	purple_value_get_type
cmp	eax, 7
jz	short loc_67D136D8
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D13741
mov	[esp+2Ch+arg_8], offset	aPurple_value_3	
			
mov	[esp+2Ch+arg_4], offset	aPurple_stat_38	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13741
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_value_set_int
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13741
mov	[esp+2Ch+arg_8], offset	aStatusNull_1 
jmp	short loc_67D136BC
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D13741
mov	[esp+2Ch+arg_8], offset	aIdNull_4 
jmp	short loc_67D136BC
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13741
mov	[esp+2Ch+arg_8], offset	aAttr_valueNull	
jmp	loc_67D136BC
			
call	__stack_chk_fail
align 4
public purple_status_set_attr_boolean
			
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	esi, [esp+2Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D137E8
test	edx, edx
jz	loc_67D13800
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_value
mov	ebx, eax
test	eax, eax
jz	loc_67D13818
mov	[esp+2Ch+var_2C], eax
call	purple_value_get_type
cmp	eax, 4
jz	short loc_67D137C8
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D13831
mov	[esp+2Ch+arg_8], offset	aPurple_value_4	
			
mov	[esp+2Ch+arg_4], offset	aPurple_stat_39	
mov	[esp+2Ch+arg_0], 0
add	esp, 24h
pop	ebx
pop	esi
jmp	g_return_if_fail_warning
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13831
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_value_set_boolean
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13831
mov	[esp+2Ch+arg_8], offset	aStatusNull_1 
jmp	short loc_67D137AC
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D13831
mov	[esp+2Ch+arg_8], offset	aIdNull_4 
jmp	short loc_67D137AC
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13831
mov	[esp+2Ch+arg_8], offset	aAttr_valueNull	
jmp	loc_67D137AC
			
call	__stack_chk_fail
align 4
public purple_status_get_attr_boolean
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D138C8
test	edx, edx
jz	loc_67D138E8
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_value
mov	ebx, eax
test	eax, eax
jz	short loc_67D13897
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 4
jz	short loc_67D138AC
mov	[esp+2Ch+var_24], offset aPurple_value_5 
mov	[esp+2Ch+var_28], offset aPurple_stat_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13906
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D13906
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_boolean
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13897
align 4
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13897
			
call	__stack_chk_fail
align 4
public purple_status_get_attr_int
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D1399C
test	edx, edx
jz	loc_67D139BC
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_value
mov	ebx, eax
test	eax, eax
jz	short loc_67D1396B
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 7
jz	short loc_67D13980
mov	[esp+2Ch+var_24], offset aPurple_value_6 
mov	[esp+2Ch+var_28], offset aPurple_stat_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D139DA
add	esp, 28h
pop	ebx
retn
align 10h
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D139DA
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_int
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D1396B
align 4
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D1396B
			
call	__stack_chk_fail
align 10h
public purple_status_get_attr_string
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D13A70
test	edx, edx
jz	loc_67D13A90
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_status_get_attr_value
mov	ebx, eax
test	eax, eax
jz	short loc_67D13A3F
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 0Dh
jz	short loc_67D13A54
mov	[esp+2Ch+var_24], offset aPurple_value_7 
mov	[esp+2Ch+var_28], offset aPurple_stat_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13AAE
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D13AAE
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	purple_value_get_string
align 10h
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_stat_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13A3F
align 10h
mov	[esp+2Ch+var_24], offset aIdNull_4 
mov	[esp+2Ch+var_28], offset aPurple_stat_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13A3F
			
call	__stack_chk_fail
align 4
public purple_status_compare
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D13B60
cmp	ebx, esi
jz	loc_67D13B6C
test	esi, esi
jz	loc_67D13B70
mov	[esp+3Ch+var_3C], ebx
call	purple_status_get_type
mov	ebp, eax
mov	[esp+3Ch+var_3C], esi
call	purple_status_get_type
mov	edi, eax
mov	[esp+3Ch+var_3C], ebx
call	purple_status_is_active
test	eax, eax
jnz	short loc_67D13B34
xor	ebx, ebx
mov	[esp+3Ch+var_3C], esi
call	purple_status_is_active
test	eax, eax
jnz	short loc_67D13B4F
xor	eax, eax
cmp	ebx, eax
jg	short loc_67D13B70
setl	al
movzx	eax, al
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13B77
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_3C], ebp
call	purple_status_type_get_primitive
mov	ebx, dword_67D30420[eax*4]
mov	[esp+3Ch+var_3C], esi
call	purple_status_is_active
test	eax, eax
jz	short loc_67D13B14
mov	[esp+3Ch+var_3C], edi
call	purple_status_type_get_primitive
mov	eax, dword_67D30420[eax*4]
jmp	short loc_67D13B16
xor	eax, eax
test	esi, esi
setnz	al
jmp	short loc_67D13B20
align 4
xor	eax, eax
jmp	short loc_67D13B20
			
mov	eax, 0FFFFFFFFh
jmp	short loc_67D13B20
call	__stack_chk_fail
public purple_presence_new
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D13BE0
mov	[esp+2Ch+var_2C], 28h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[ebx+14h], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13C00
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aContextPurple_ 
mov	[esp+2Ch+var_28], offset aPurple_presenc 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D13BCB
call	__stack_chk_fail
align 4
public purple_presence_new_for_account
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D13C54
mov	[esp+2Ch+var_2C], 1
call	purple_presence_new
mov	ebx, eax
mov	[eax+1Ch], esi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_prpl_get_statuses
mov	[ebx+10h], eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13C74
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aAccountNull_12 
mov	[esp+2Ch+var_28], offset aPurple_prese_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D13C40
call	__stack_chk_fail
align 4
public purple_presence_new_for_conv
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D13CB4
mov	[esp+2Ch+var_2C], 2
call	purple_presence_new
mov	[eax+1Ch], ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13CD4
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], offset aConvNull_1 
mov	[esp+2Ch+var_28], offset aPurple_prese_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D13CA2
call	__stack_chk_fail
align 4
public purple_presence_new_for_buddy
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D13D4C
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_get_account
mov	edi, eax
mov	[esp+2Ch+var_2C], 3
call	purple_presence_new
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	purple_buddy_get_name
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx+20h], eax
mov	[ebx+1Ch], edi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], edi
call	purple_prpl_get_statuses
mov	[ebx+10h], eax
mov	[ebx+24h], esi
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13D6C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aBuddyNull_2 
mov	[esp+2Ch+var_28], offset aPurple_prese_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D13D35
call	__stack_chk_fail
align 4
public purple_presence_add_status
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D13DDC
test	esi, esi
jz	short loc_67D13DFC
mov	[esp+2Ch+var_28], esi
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_list_append
mov	[ebx+10h], eax
mov	[esp+2Ch+var_2C], esi
call	purple_status_get_id
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13E1A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13DC9
align 4
mov	[esp+2Ch+var_24], offset aStatusNull_1 
mov	[esp+2Ch+var_28], offset aPurple_prese_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13DC9
call	__stack_chk_fail
align 10h
public purple_presence_add_list
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D13E68
test	ebx, ebx
jz	short loc_67D13E88
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_presence_add_status
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D13E40
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13EA6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13E55
align 4
mov	[esp+2Ch+var_24], offset aSource_listNul 
mov	[esp+2Ch+var_28], offset aPurple_prese_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13E55
call	__stack_chk_fail
align 4
public purple_presence_set_login_time
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D13EE0
cmp	[eax+0Ch], edx
jz	short loc_67D13ECF
mov	[eax+0Ch], edx
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D13EFE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D13ECF
call	__stack_chk_fail
align 4
public purple_presence_get_context
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D13F30
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D13F50
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D13F1D
call	__stack_chk_fail
align 4
public purple_presence_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D13FE4
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 3
jz	short loc_67D13FD4
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 2
jz	short loc_67D13FD4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset purple_status_destroy
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_list_foreach
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_list_free
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14011
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
			
mov	eax, [ebx+20h]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_67D13F89
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14011
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_presence_get_account
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D14078
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 1
jz	short loc_67D14070
cmp	eax, 3
jz	short loc_67D14070
mov	[esp+2Ch+var_24], offset aContextPurpl_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D14098
add	esp, 28h
pop	ebx
retn
			
mov	eax, [ebx+1Ch]
jmp	short loc_67D1405F
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_prese_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1405F
call	__stack_chk_fail
align 10h
public purple_presence_get_conversation
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D140FC
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 2
jz	short loc_67D140F4
mov	[esp+2Ch+var_24], offset aPurple_prese_9 
mov	[esp+2Ch+var_28], offset aPurple_pres_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1411C
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+1Ch]
jmp	short loc_67D140E2
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D140E2
call	__stack_chk_fail
align 4
public purple_presence_get_chat_user
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D14180
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 2
jz	short loc_67D14178
mov	[esp+2Ch+var_24], offset aPurple_prese_9 
mov	[esp+2Ch+var_28], offset aPurple_pres_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D141A0
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+20h]
jmp	short loc_67D14166
align 10h
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D14166
call	__stack_chk_fail
align 4
public purple_presence_get_buddy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D14204
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_context
cmp	eax, 3
jz	short loc_67D141FC
mov	[esp+2Ch+var_24], offset aPurple_pres_12 
mov	[esp+2Ch+var_28], offset aPurple_pres_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D14224
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+24h]
jmp	short loc_67D141EA
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D141EA
call	__stack_chk_fail
align 4
public purple_presence_set_idle
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D143EC
mov	esi, [edi+4]
cmp	esi, ebx
jz	short loc_67D142B0
mov	[edi+4], ebx
test	ebx, ebx
jnz	short loc_67D142AC
xor	eax, eax
mov	[edi+8], eax
mov	[esp+6Ch+Time],	0 
call	time
mov	[esp+6Ch+var_38], eax
mov	[esp+6Ch+Time],	edi
call	purple_presence_get_context
mov	[esp+6Ch+Time],	edi
cmp	eax, 3
jz	short loc_67D142B8
call	purple_presence_get_context
dec	eax
jz	loc_67D14350
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14666
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, ebp
jmp	short loc_67D14262
cmp	[edi+8], ebp
jnz	short loc_67D14259
jmp	short loc_67D14291
align 4
call	purple_presence_get_buddy
mov	ebp, eax
call	purple_blist_get_ui_ops
mov	edi, eax
mov	[esp+6Ch+Time],	ebp
call	purple_buddy_get_account
test	esi, esi
jz	loc_67D14420
test	ebx, ebx
jz	loc_67D145B8
cmp	esi, ebx
jz	short loc_67D14303
			
call	purple_blist_get_handle
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], ebp
mov	[esp+6Ch+var_68], offset aBuddyIdleCha_1 
mov	[esp+6Ch+Time],	eax
call	purple_signal_emit
			
mov	[esp+6Ch+Time],	ebp
call	purple_buddy_get_contact
mov	[esp+6Ch+Time],	eax
call	purple_contact_invalidate_priority_buddy
test	edi, edi
jz	loc_67D14291
mov	ebx, [edi+0Ch]
test	ebx, ebx
jz	loc_67D14291
call	purple_get_blist
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14666
mov	[esp+6Ch+arg_4], ebp
mov	[esp+6Ch+arg_0], eax
mov	ecx, ebx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	ecx
align 10h
mov	[esp+6Ch+Time],	edi
call	purple_presence_get_account
mov	esi, eax
mov	[esp+6Ch+Time],	offset aPurpleLoggin_9 
call	purple_prefs_get_bool
test	eax, eax
jnz	loc_67D14500
			
mov	[esp+6Ch+Time],	esi
call	purple_account_get_connection
mov	esi, eax
test	eax, eax
jz	loc_67D1466B
mov	[esp+6Ch+Time],	eax
call	purple_connection_get_prpl
mov	edi, eax
mov	[esp+6Ch+Time],	esi
call	purple_connection_get_state
dec	eax
jnz	loc_67D14291
test	edi, edi
jz	loc_67D14291
mov	eax, [edi+10h]
mov	eax, [eax+4Ch]
test	eax, eax
jz	loc_67D14291
mov	eax, [eax+64h]
test	eax, eax
jz	loc_67D14291
test	ebx, ebx
jz	loc_67D144F8
mov	edi, [esp+6Ch+var_38]
sub	edi, ebp
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14666
mov	[esp+6Ch+arg_4], edi
mov	[esp+6Ch+arg_0], esi
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D14666
mov	[esp+6Ch+arg_8], offset	aPresenceNull_0	
mov	[esp+6Ch+arg_4], offset	aPurple_pres_14	
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
test	ebx, ebx
jz	loc_67D14303
mov	[esp+6Ch+Time],	offset aPurpleLoggin_9 
mov	[esp+6Ch+var_40], eax
call	purple_prefs_get_bool
test	eax, eax
mov	edx, [esp+6Ch+var_40]
jz	loc_67D142E2
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+Time],	edx
call	purple_account_get_log
test	eax, eax
jz	loc_67D142E2
mov	[esp+6Ch+Time],	ebp
mov	[esp+6Ch+var_40], eax
call	purple_buddy_get_alias
mov	ecx, eax
mov	[esp+6Ch+var_68], offset aSBecameIdle 
mov	[esp+6Ch+Time],	offset aPidgin_15 
mov	[esp+6Ch+var_3C], ecx
call	libintl_dgettext
mov	ecx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_68], ecx
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_3C], eax
call	g_markup_escape_text
mov	[esp+6Ch+var_34], eax
mov	ecx, [esp+6Ch+var_3C]
mov	[esp+6Ch+Time],	ecx
call	g_free
mov	[esp+6Ch+Time],	ebp
call	purple_buddy_get_alias
mov	ecx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], ecx
mov	ecx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_60], ecx
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 4
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	edx
call	purple_log_write
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	g_free
jmp	loc_67D142E2
align 4
xor	edi, edi
jmp	loc_67D143C8
align 10h
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+Time],	esi
call	purple_account_get_log
mov	edi, eax
test	eax, eax
jz	loc_67D1436E
mov	[esp+6Ch+Time],	esi
test	ebx, ebx
jz	loc_67D14608
call	purple_account_get_username
mov	[esp+6Ch+var_68], offset aSBecameIdle_0	
mov	[esp+6Ch+Time],	offset aPidgin_15 
mov	[esp+6Ch+var_40], eax
call	libintl_dgettext
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_40], eax
call	g_markup_escape_text
mov	[esp+6Ch+var_34], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	edx
call	g_free
mov	[esp+6Ch+var_30], ebp
mov	[esp+6Ch+Time],	esi
call	purple_account_get_username
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], edx
mov	ecx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], ecx
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], 4
mov	[esp+6Ch+Time],	edi
call	purple_log_write
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Time],	eax
call	g_free
jmp	loc_67D1436E
align 4
mov	[esp+6Ch+Time],	offset aPurpleLoggin_9 
mov	[esp+6Ch+var_40], eax
call	purple_prefs_get_bool
test	eax, eax
mov	edx, [esp+6Ch+var_40]
jz	loc_67D142E2
mov	[esp+6Ch+var_68], 0
mov	[esp+6Ch+Time],	edx
call	purple_account_get_log
test	eax, eax
jz	loc_67D142E2
mov	[esp+6Ch+Time],	ebp
mov	[esp+6Ch+var_40], eax
call	purple_buddy_get_alias
mov	ecx, eax
mov	[esp+6Ch+var_68], offset aSBecameUnidle	
jmp	loc_67D14472
align 4
call	purple_account_get_username
mov	[esp+6Ch+var_68], offset aSBecameUnidl_0 
mov	[esp+6Ch+Time],	offset aPidgin_15 
mov	[esp+6Ch+var_40], eax
call	libintl_dgettext
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+Time],	eax
call	g_strdup_printf
mov	[esp+6Ch+var_68], 0FFFFFFFFh
mov	[esp+6Ch+Time],	eax
mov	[esp+6Ch+var_40], eax
call	g_markup_escape_text
mov	[esp+6Ch+var_34], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Time],	edx
call	g_free
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_30], eax
jmp	loc_67D1457A
			
call	__stack_chk_fail
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14666
mov	[esp+6Ch+arg_0], 0
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_connection_get_state
align 4
public purple_presence_get_statuses
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D146B8
mov	eax, [eax+10h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D146D8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D146A6
call	__stack_chk_fail
align 10h
public purple_presence_get_status
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D14734
test	ebx, ebx
jz	short loc_67D14754
mov	[esp+4Ch+var_48], ebx
mov	eax, [edi+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
mov	esi, eax
test	eax, eax
jz	short loc_67D14774
			
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D147F2
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_44], offset aPresenceNull_0 
mov	[esp+4Ch+var_48], offset aPurple_pres_16 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D14717
mov	[esp+4Ch+var_44], offset aStatus_idNul_1 
mov	[esp+4Ch+var_48], offset aPurple_pres_16 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D14717
mov	[esp+4Ch+var_4C], edi
call	purple_presence_get_statuses
mov	ebp, eax
xchg	ax, ax
test	ebp, ebp
jz	short loc_67D14717
mov	edx, [ebp+0]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], edx
call	purple_status_get_id
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	purple_strequal
mov	ebp, [ebp+4]
test	eax, eax
mov	edx, [esp+4Ch+var_30]
jz	short loc_67D14780
test	ebp, ebp
jz	short loc_67D147E8
test	edx, edx
jz	short loc_67D14784
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], edx
call	purple_status_get_id
mov	[esp+4Ch+var_4C], eax
call	g_strdup
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+var_48], eax
mov	eax, [edi+14h]
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_insert
mov	edx, [esp+4Ch+var_30]
mov	esi, edx
jmp	loc_67D14717
test	edx, edx
jz	loc_67D14717
jmp	short loc_67D147B2
call	__stack_chk_fail
align 4
public purple_presence_get_active_status
			
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D14824
mov	eax, [eax+18h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D14844
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D14812
call	__stack_chk_fail
align 4
public purple_status_set_active_with_attrs_list
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67D14C18
test	ebx, ebx
jz	loc_67D14B84
xor	edx, edx
cmp	ebx, [ebp+8]
setnz	dl
mov	[esp+5Ch+var_34], edx
mov	[ebp+8], ebx
xor	esi, esi
nop
			
test	edi, edi
jz	short loc_67D148DF
mov	ebx, [edi]
mov	edi, [edi+4]
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	ebp
call	purple_status_get_attr_value
test	eax, eax
jz	loc_67D14974
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+Str1],	eax
call	g_list_prepend
mov	esi, eax
mov	edx, [esp+5Ch+Str1]
mov	eax, [edx]
cmp	eax, 0Dh
jz	loc_67D149CC
cmp	eax, 7
jz	short loc_67D14948
cmp	eax, 4
jz	loc_67D149A0
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_67D14890
mov	[esp+5Ch+Time],	ebp
call	purple_status_get_type
mov	[esp+5Ch+Time],	eax
call	purple_status_type_get_attrs
mov	ebx, eax
jmp	short loc_67D14917
align 4
mov	edi, [ebx]
mov	ebx, [ebx+4]
mov	[esp+5Ch+var_54], offset strcmp
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	esi
call	g_list_find_custom
test	eax, eax
jz	loc_67D14A10
			
test	ebx, ebx
jnz	short loc_67D148F4
mov	[esp+5Ch+Time],	esi
call	g_list_free
mov	edx, [esp+5Ch+var_34]
test	edx, edx
jnz	loc_67D14A44
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D14E05
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [edi]
mov	edi, [edi+4]
cmp	[edx+8], eax
jz	loc_67D1488C
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_int
mov	[esp+5Ch+var_34], 1
jmp	loc_67D1488C
align 4
mov	eax, [ebp+0]
mov	eax, [eax+8]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	offset aTheAttributeSO 
mov	[esp+5Ch+Time],	offset aStatus_1 
call	purple_debug_warning
mov	edi, [edi+4]
jmp	loc_67D1488C
align 10h
mov	eax, [edi]
mov	edi, [edi+4]
cmp	[edx+8], eax
jz	loc_67D1488C
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_boolean
mov	[esp+5Ch+var_34], 1
jmp	loc_67D1488C
align 4
mov	ecx, [edi]
mov	edi, [edi+4]
mov	eax, [edx+8]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ecx
mov	[esp+5Ch+Str1],	ecx
call	purple_strequal
test	eax, eax
mov	ecx, [esp+5Ch+Str1]
jnz	loc_67D1488C
mov	[esp+5Ch+var_54], ecx
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_string
mov	[esp+5Ch+var_34], 1
jmp	loc_67D1488C
align 10h
mov	[esp+5Ch+Time],	edi
call	purple_status_attr_get_value
mov	edx, eax
mov	eax, [eax]
cmp	eax, 0Dh
jz	loc_67D14C6D
cmp	eax, 7
jz	loc_67D14BCC
cmp	eax, 4
jz	loc_67D14CDC
mov	[esp+5Ch+var_34], 1
jmp	loc_67D14917
mov	[esp+5Ch+Time],	ebp
call	purple_status_get_presence
mov	esi, eax
mov	[esp+5Ch+Time],	ebp
call	purple_status_is_exclusive
test	eax, eax
jnz	loc_67D14C4C
xor	ebx, ebx
mov	[esp+5Ch+Time],	esi
call	purple_presence_get_context
cmp	eax, 1
jz	loc_67D14D27
cmp	eax, 3
jnz	loc_67D1492F
mov	[esp+5Ch+Time],	esi
call	purple_presence_get_buddy
mov	esi, eax
mov	[esp+5Ch+Time],	offset aPurpleLoggin_9 
call	purple_prefs_get_bool
test	eax, eax
jz	loc_67D1492F
mov	[esp+5Ch+Time],	0 
call	time
mov	[esp+5Ch+var_34], eax
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_alias
mov	edi, eax
mov	[esp+5Ch+Time],	ebp
test	ebx, ebx
jz	loc_67D14DA0
call	purple_status_get_name
mov	ebp, eax
mov	[esp+5Ch+Time],	ebx
call	purple_status_get_name
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+Str1],	eax
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp+5Ch+Str2],	offset aSSChangedStatu 
mov	[esp+5Ch+Time],	offset aPidgin_15 
call	libintl_dgettext
mov	[esp+5Ch+var_4C], ebp
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	edi
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
mov	ebx, eax
mov	[esp+5Ch+Str2],	0FFFFFFFFh
mov	[esp+5Ch+Time],	eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_account
mov	[esp+5Ch+Str2],	0
mov	[esp+5Ch+Time],	eax
call	purple_account_get_log
test	eax, eax
jz	short loc_67D14B5A
mov	[esp+5Ch+var_4C], ebp
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+var_50], edx
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+Str2],	4
mov	[esp+5Ch+Time],	eax
call	purple_log_write
mov	[esp+5Ch+Time],	ebx
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D14E05
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_free
align 4
mov	[esp+5Ch+Time],	ebp
call	purple_status_is_exclusive
test	eax, eax
jz	loc_67D1487A
mov	[esp+5Ch+Time],	ebp
call	purple_status_get_id
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14E05
mov	[esp+5Ch+arg_8], eax
mov	[esp+5Ch+arg_4], offset	aCannotDeactiva	
mov	[esp+5Ch+arg_0], offset	aStatus_1 
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_debug_error
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
mov	[esp+5Ch+Str1],	edx
call	purple_status_get_attr_int
mov	[esp+5Ch+var_30], eax
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+Time],	edx
call	purple_value_get_int
cmp	[esp+5Ch+var_30], eax
jz	loc_67D14917
mov	[esp+5Ch+var_54], eax
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_int
mov	[esp+5Ch+var_34], 1
jmp	loc_67D14917
align 4
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14E05
mov	[esp+5Ch+arg_8], offset	aStatusNull_1 
mov	[esp+5Ch+arg_4], offset	aPurple_stat_43	
mov	[esp+5Ch+arg_0], 0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	[esp+5Ch+Time],	esi
call	purple_presence_get_active_status
mov	ebx, eax
test	eax, eax
jz	short loc_67D14C65
cmp	ebp, eax
jz	short loc_67D14C65
mov	dword ptr [eax+8], 0
			
mov	[esi+18h], ebp
jmp	loc_67D14A60
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
mov	[esp+5Ch+Str1],	edx
call	purple_status_get_attr_string
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+Time],	edx
mov	[esp+5Ch+Str1],	eax
call	purple_value_get_string
mov	edx, eax
mov	ecx, [esp+5Ch+Str1]
test	ecx, ecx
jz	loc_67D14D93
test	eax, eax
jz	short loc_67D14CBD
mov	[esp+5Ch+Str2],	eax 
mov	[esp+5Ch+Time],	ecx 
mov	[esp+5Ch+Str1],	eax
call	strcmp
test	eax, eax
mov	edx, [esp+5Ch+Str1]
jz	loc_67D14917
			
mov	[esp+5Ch+var_54], edx
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_string
mov	[esp+5Ch+var_34], 1
jmp	loc_67D14917
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
mov	[esp+5Ch+Str1],	edx
call	purple_status_get_attr_boolean
mov	[esp+5Ch+var_30], eax
mov	edx, [esp+5Ch+Str1]
mov	[esp+5Ch+Time],	edx
call	purple_value_get_boolean
cmp	[esp+5Ch+var_30], eax
jz	loc_67D14917
mov	[esp+5Ch+var_54], eax
mov	eax, [edi]
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	ebp
call	purple_status_set_attr_boolean
mov	[esp+5Ch+var_34], 1
jmp	loc_67D14917
mov	[esp+5Ch+Time],	esi
call	purple_presence_get_account
mov	esi, eax
call	purple_accounts_get_ui_ops
mov	edi, eax
call	purple_core_get_ui
mov	[esp+5Ch+Str2],	eax
mov	[esp+5Ch+Time],	esi
call	purple_account_get_enabled
test	eax, eax
jnz	short loc_67D14D81
test	edi, edi
jz	loc_67D1492F
mov	eax, [edi+4]
test	eax, eax
jz	loc_67D1492F
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14E05
mov	[esp+5Ch+arg_4], ebp
mov	[esp+5Ch+arg_0], esi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+Str2],	ebx
mov	[esp+5Ch+Time],	esi
call	purple_prpl_change_account_status
jmp	short loc_67D14D4D
test	eax, eax
jnz	loc_67D14CBD
jmp	loc_67D14917
call	purple_status_is_active
mov	[esp+5Ch+Time],	ebp
test	eax, eax
jz	short loc_67D14DEA
call	purple_status_get_name
mov	ebp, eax
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp+5Ch+Str2],	offset aSSIsNowS 
mov	[esp+5Ch+Time],	offset aPidgin_15 
call	libintl_dgettext
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+Str2],	edi
mov	[esp+5Ch+Time],	eax
call	g_strdup_printf
jmp	loc_67D14B0A
call	purple_status_get_name
mov	ebp, eax
mov	[esp+5Ch+Time],	esi
call	purple_buddy_get_name
mov	ebx, eax
mov	[esp+5Ch+Str2],	offset aSSIsNoLongerS 
jmp	short loc_67D14DC5
			
call	__stack_chk_fail
align 4
public purple_status_set_active_with_attrs
			
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D14E87
nop
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	g_list_append
add	ebx, 8
mov	edx, [ebx-4]
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	g_list_append
mov	edx, [ebx]
test	edx, edx
jnz	short loc_67D14E30
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	purple_status_set_active_with_attrs_list
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
mov	eax, [esp+3Ch+var_20]
jnz	short loc_67D14E8B
mov	[esp+3Ch+arg_0], eax
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_list_free
xor	eax, eax
jmp	short loc_67D14E54
call	__stack_chk_fail
public purple_status_set_active
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_status_set_active_with_attrs_list
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14ECA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_presence_set_status_active
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D14F44
test	esi, esi
jz	short loc_67D14F74
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_status
mov	ebx, eax
test	eax, eax
jz	loc_67D14F8C
mov	[esp+2Ch+var_2C], eax
call	purple_status_is_exclusive
test	eax, eax
jz	short loc_67D14F20
test	edi, edi
jz	loc_67D14FA4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D14FCF
mov	[esp+2Ch+arg_4], edi
mov	[esp+2Ch+arg_0], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_status_set_active
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14FCF
mov	[esp+2Ch+arg_8], offset	aPresenceNull_0	
			
mov	[esp+2Ch+arg_4], offset	aPurple_pres_18	
mov	[esp+2Ch+arg_0], 0
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_return_if_fail_warning
align 4
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D14FCF
mov	[esp+2Ch+arg_8], offset	aStatus_idNul_1	
jmp	short loc_67D14F58
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14FCF
mov	[esp+2Ch+arg_8], offset	aStatusNull_1 
jmp	short loc_67D14F58
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D14FCF
mov	[esp+2Ch+arg_8], esi
mov	[esp+2Ch+arg_4], offset	aAttemptedToS_5	
mov	[esp+2Ch+arg_0], offset	aStatus_1 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_warning
			
call	__stack_chk_fail
public purple_presence_switch_status
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 1
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_presence_set_status_active
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1500E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_presence_is_online
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D15050
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_active_status
test	eax, eax
jz	short loc_67D1506C
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1507E
mov	[esp+2Ch+arg_0], eax
add	esp, 2Ch
jmp	purple_status_is_online
align 10h
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1507E
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public purple_presence_is_status_active
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D150D4
test	edx, edx
jz	short loc_67D150F4
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_status
test	eax, eax
jz	short loc_67D150C3
mov	[esp+2Ch+var_2C], eax
call	purple_status_is_active
test	eax, eax
setnz	al
movzx	eax, al
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15114
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D150C3
mov	[esp+2Ch+var_24], offset aStatus_idNul_1 
mov	[esp+2Ch+var_28], offset aPurple_pres_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D150C3
call	__stack_chk_fail
align 4
public purple_presence_is_status_primitive_active
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D151B6
test	edi, edi
jnz	short loc_67D15170
mov	[esp+2Ch+var_24], offset aPrimitivePurpl 
mov	[esp+2Ch+var_28], offset aPurple_pres_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D151D6
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_presence_get_statuses
mov	ebx, eax
test	eax, eax
jnz	short loc_67D15197
xchg	ax, ax
xor	eax, eax
jmp	short loc_67D1515C
mov	[esp+2Ch+var_2C], esi
call	purple_status_is_active
test	eax, eax
jnz	short loc_67D151AF
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D15180
mov	esi, [ebx]
mov	[esp+2Ch+var_2C], esi
call	purple_status_get_type
mov	[esp+2Ch+var_2C], eax
call	purple_status_type_get_primitive
cmp	eax, edi
jnz	short loc_67D15190
jmp	short loc_67D15184
mov	eax, 1
jmp	short loc_67D1515C
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1515C
call	__stack_chk_fail
align 4
public purple_presence_is_idle
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D15224
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_is_online
test	eax, eax
jnz	short loc_67D15214
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15242
add	esp, 28h
pop	ebx
retn
align 4
mov	ecx, [ebx+4]
test	ecx, ecx
jz	short loc_67D151FF
mov	eax, 1
jmp	short loc_67D15201
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_22 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D151FF
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_statuses
mov	ebp, eax
xor	edi, edi
test	eax, eax
jnz	short loc_67D1527B
jmp	short loc_67D152E8
			
mov	ebp, [ebp+4]
test	ebp, ebp
jz	short loc_67D152E8
			
mov	ebx, [ebp+0]
mov	[esp+4Ch+var_4C], ebx
call	purple_status_get_type
mov	esi, eax
mov	[esp+4Ch+var_4C], ebx
call	purple_status_is_active
test	eax, eax
jz	short loc_67D15274
mov	[esp+4Ch+var_4C], esi
call	purple_status_type_get_primitive
add	edi, dword_67D30420[eax*4]
mov	[esp+4Ch+var_4C], ebx
call	purple_status_is_online
test	eax, eax
jnz	short loc_67D15274
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_buddy
mov	ebx, eax
test	eax, eax
jz	short loc_67D15274
mov	[esp+4Ch+var_4C], eax
call	purple_buddy_get_account
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], eax
call	purple_account_supports_offline_message
test	eax, eax
jz	short loc_67D15274
add	edi, dword_67D3044C
mov	ebp, [ebp+4]
test	ebp, ebp
jnz	short loc_67D1527B
xchg	ax, ax
			
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_presence_get_account
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], offset aScore	
mov	[esp+4Ch+var_4C], eax
call	purple_account_get_int
add	edi, eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_presence_is_idle
test	eax, eax
jz	short loc_67D15324
add	edi, dword_67D30444
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1533A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_presence_is_available
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D15398
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_get_active_status
test	eax, eax
jz	short loc_67D1536F
mov	[esp+2Ch+var_2C], eax
call	purple_status_is_available
test	eax, eax
jnz	short loc_67D15384
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D153B6
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_is_idle
test	eax, eax
setz	al
movzx	eax, al
jmp	short loc_67D15371
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_23 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D1536F
call	__stack_chk_fail
align 4
public purple_presence_get_idle_time
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D153E8
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15408
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D153D6
call	__stack_chk_fail
align 10h
public purple_presence_get_login_time
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D1544C
mov	[esp+2Ch+var_2C], ebx
call	purple_presence_is_online
test	eax, eax
jnz	short loc_67D15444
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1546C
add	esp, 28h
pop	ebx
retn
mov	eax, [ebx+0Ch]
jmp	short loc_67D15433
align 4
mov	[esp+2Ch+var_24], offset aPresenceNull_0 
mov	[esp+2Ch+var_28], offset aPurple_pres_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D15433
call	__stack_chk_fail
align 4
public purple_presence_compare
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
cmp	ebx, esi
jz	loc_67D15534
test	ebx, ebx
jz	loc_67D15560
test	esi, esi
jz	loc_67D15568
mov	[esp+4Ch+Time],	ebx
call	purple_presence_is_online
test	eax, eax
jz	short loc_67D154C2
mov	[esp+4Ch+Time],	esi
call	purple_presence_is_online
test	eax, eax
jz	loc_67D15568
mov	[esp+4Ch+Time],	esi
call	purple_presence_is_online
test	eax, eax
jz	short loc_67D154DE
mov	[esp+4Ch+Time],	ebx
call	purple_presence_is_online
test	eax, eax
jz	loc_67D15560
mov	eax, ebx
call	sub_67D15248
mov	ebp, eax
mov	eax, esi
call	sub_67D15248
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+Time],	0 
call	time
mov	edi, eax
mov	[esp+4Ch+Time],	ebx
call	purple_presence_get_idle_time
sub	edi, eax
mov	[esp+4Ch+Time],	0 
call	time
mov	ebx, eax
mov	[esp+4Ch+Time],	esi
call	purple_presence_get_idle_time
sub	ebx, eax
cmp	edi, ebx
jle	short loc_67D1554C
add	ebp, dword_67D30448
cmp	ebp, [esp+4Ch+var_30]
jl	short loc_67D15560
jg	short loc_67D15568
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1556F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jge	short loc_67D1552C
mov	edx, dword_67D30448
add	[esp+4Ch+var_30], edx
cmp	ebp, [esp+4Ch+var_30]
jge	short loc_67D15532
xchg	ax, ax
			
mov	eax, 1
jmp	short loc_67D15536
align 4
			
mov	eax, 0FFFFFFFFh
jmp	short loc_67D15536
call	__stack_chk_fail
public purple_status_get_handle
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, offset dword_67D723E8
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15597
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_status_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus 
call	purple_prefs_add_none
mov	[esp+2Ch+var_2C], offset aPurpleStatus_0 
call	purple_prefs_add_none
mov	eax, dword_67D30424
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_1 
call	purple_prefs_add_int
mov	eax, dword_67D30428
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_2 
call	purple_prefs_add_int
mov	eax, dword_67D30430
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_3 
call	purple_prefs_add_int
mov	eax, dword_67D30434
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_4 
call	purple_prefs_add_int
mov	eax, dword_67D30438
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_5 
call	purple_prefs_add_int
mov	eax, dword_67D30444
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_6 
call	purple_prefs_add_int
mov	eax, dword_67D3044C
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aPurpleStatus_7 
call	purple_prefs_add_int
mov	[esp+2Ch+var_20], 1
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_1 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 2
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_2 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 4
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_3 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 5
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_4 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 6
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_5 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 9
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_6 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_20], 0Bh
mov	[esp+2Ch+var_24], offset sub_67D120A0
mov	[esp+2Ch+var_28], offset aPurpleStatus_7 
mov	[esp+2Ch+var_2C], offset dword_67D723E8
call	purple_prefs_connect_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_1 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_2 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_3 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_4 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_5 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_6 
call	purple_prefs_trigger_callback
mov	[esp+2Ch+var_2C], offset aPurpleStatus_7 
call	purple_prefs_trigger_callback
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D157B5
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_status_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_prefs_get_handle
mov	[esp+2Ch+var_2C], eax
call	purple_prefs_disconnect_by_handle
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D157E7
add	esp, 2Ch
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D723EC
test	eax, eax
jnz	short loc_67D15822
jmp	short loc_67D1583C
align 4
			
mov	edx, [eax+4]
mov	ds:dword_67D723EC, edx
mov	[esp+2Ch+var_2C], eax
call	g_list_free_1
mov	eax, ds:dword_67D723EC
test	eax, eax
jz	short loc_67D1583C
mov	edx, [eax]
test	dword ptr [edx], 7FFFFFFFh
jnz	short loc_67D15808
mov	[esp+2Ch+var_2C], edx
call	g_free
mov	eax, ds:dword_67D723EC
jmp	short loc_67D15808
align 4
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1584E
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_stringref_new
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D158B8
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
mov	ebx, ecx
not	ebx
lea	eax, [ebx+7]
mov	[esp+2Ch+var_2C], eax
call	g_malloc
mov	edi, eax
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
lea	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	g_strlcpy
mov	dword ptr [edi], 1
mov	eax, edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D158BC
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
xor	edi, edi
jmp	short loc_67D158A0
call	__stack_chk_fail
align 4
public purple_stringref_new_noref
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D15964
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
add	ecx, 7
mov	[esp+2Ch+Dest],	ecx
call	g_malloc
mov	ebx, eax
mov	[esp+2Ch+Source], esi 
lea	eax, [eax+4]
mov	[esp+2Ch+Dest],	eax 
call	strcpy
mov	dword ptr [ebx], 80000000h
mov	eax, ds:dword_67D723EC
test	eax, eax
jz	short loc_67D15940
mov	[esp+2Ch+Source], ebx
mov	[esp+2Ch+Dest],	eax
call	g_list_prepend
mov	ds:dword_67D723EC, eax
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15968
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+Source], offset sub_67D157EC
mov	[esp+2Ch+Dest],	0
call	purple_timeout_add
mov	eax, ds:dword_67D723EC
jmp	short loc_67D15917
align 4
xor	ebx, ebx
jmp	short loc_67D15928
call	__stack_chk_fail
align 10h
public purple_stringref_printf
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D159D4
lea	edi, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], ebx
call	g_printf_string_upper_bound
add	eax, 8
mov	[esp+2Ch+var_2C], eax
call	g_malloc
mov	esi, eax
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], ebx
lea	eax, [eax+4]
mov	[esp+2Ch+var_2C], eax
call	libintl_vsprintf
mov	dword ptr [esi], 1
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D159D8
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
xor	esi, esi
jmp	short loc_67D159BF
call	__stack_chk_fail
align 10h
public purple_stringref_ref
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D159F9
inc	dword ptr [eax]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15A09
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_stringref_unref
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D15A50
mov	eax, [ebx]
dec	eax
mov	[ebx], eax
test	eax, 7FFFFFFFh
jnz	short loc_67D15A50
test	eax, eax
js	short loc_67D15A64
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15A7C
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15A7C
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D723EC
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D723EC, eax
jmp	short loc_67D15A37
			
call	__stack_chk_fail
align 4
public purple_stringref_value
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D15AAE
add	eax, 4
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15AB2
add	esp, 1Ch
retn
xor	eax, eax
jmp	short loc_67D15A9E
call	__stack_chk_fail
align 4
public purple_stringref_cmp
sub	esp, 1Ch
mov	eax, [esp+1Ch+Str1]
mov	edx, [esp+1Ch+Str2]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
cmp	eax, edx
jz	short loc_67D15B0C
test	edx, edx
jz	short loc_67D15B00
add	edx, 4
test	eax, eax
jz	short loc_67D15B08
add	eax, 4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D15B1E
mov	[esp+1Ch+Str2],	edx 
mov	[esp+1Ch+Str1],	eax 
add	esp, 1Ch
jmp	strcmp
align 10h
xor	edx, edx
test	eax, eax
jnz	short loc_67D15ADE
xchg	ax, ax
xor	eax, eax
jmp	short loc_67D15AE1
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15B1E
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_stringref_len
push	edi
sub	esp, 18h
mov	edi, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D15B60
add	edi, 4
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	eax, [ecx-1]
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15B64
add	esp, 18h
pop	edi
retn
align 10h
xor	edi, edi
jmp	short loc_67D15B3E
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], offset dword_67D30460
call	[esp+2Ch+arg_0]
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D15B97
add	esp, 2Ch
retn
call	__stack_chk_fail
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D15C28
mov	esi, ebx
mov	edi, [ebx+100h]
mov	[esp+3Ch+var_2C], edi
mov	[esp+3Ch+var_30], esi
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aGotDSrvRespons 
mov	[esp+3Ch+var_3C], offset aStun 
call	purple_debug_info
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67D161DC
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], 0
call	purple_dnsquery_a_account
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15C2F
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	g_free
align 4
mov	edi, 0D96h
jmp	short loc_67D15BC6
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D723F0
test	eax, eax
jz	short loc_67D15C75
nop
mov	eax, [eax]
test	eax, eax
jz	short loc_67D15C5B
mov	[esp+2Ch+var_2C], offset dword_67D30460
call	eax
mov	eax, ds:dword_67D723F0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	ds:dword_67D723F0, eax
test	eax, eax
jnz	short loc_67D15C4C
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15C85
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+1Ch]
test	eax, eax
jnz	short loc_67D15CE0
mov	eax, [ebx+20h]
test	eax, eax
jnz	short loc_67D15CD4
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D15CB9
mov	[esp+2Ch+var_2C], eax 
call	wpurple_close
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15CEA
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	short loc_67D15CAB
align 10h
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
jmp	short loc_67D15CA4
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
js	loc_67D15ED0
mov	dword ptr [esp+5Ch+hostshort], 2Ch
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
mov	word ptr [eax+4], 2
mov	dword ptr [esp+5Ch+hostshort], esi 
call	purple_network_get_port_from_fd
movzx	eax, ax
mov	dword ptr [esp+5Ch+hostshort], eax 
call	htons
push	ebp
mov	[ebx+6], ax
mov	dword ptr [ebx+8], 0
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_67D15F08
mov	[esp+5Ch+var_58], 1
mov	dword ptr [esp+5Ch+hostshort], esi
call	purple_input_add
mov	[ebx+1Ch], eax
mov	[esp+5Ch+var_58], edi
mov	dword ptr [esp+5Ch+hostshort], edi
call	g_slist_delete_link
mov	ebp, eax
lea	eax, [ebx+4]
mov	[esp+5Ch+var_30], eax
mov	esi, [ebp+0]
mov	ecx, 4
mov	edi, eax
rep movsd
mov	eax, [ebp+0]
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_free
mov	[esp+5Ch+var_58], ebp
mov	dword ptr [esp+5Ch+hostshort], ebp
call	g_slist_delete_link
test	eax, eax
jz	short loc_67D15DCC
xchg	ax, ax
mov	[esp+5Ch+var_58], eax
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_slist_delete_link
mov	esi, eax
mov	eax, [eax]
mov	dword ptr [esp+5Ch+hostshort], eax
call	g_free
mov	[esp+5Ch+var_58], esi
mov	dword ptr [esp+5Ch+hostshort], esi
call	g_slist_delete_link
test	eax, eax
jnz	short loc_67D15DA4
mov	dword ptr [esp+5Ch+hostshort], 1 
call	htons
push	edx
mov	ds:word_67D723F4, ax
mov	ds:word_67D723F6, 0
call	rand
mov	ds:dword_67D723F8, eax
mov	dword ptr [esp+5Ch+hostshort], 6761696Dh 
call	ntohl
push	ecx
mov	ds:dword_67D723FC, eax
call	rand
mov	ds:dword_67D72400, eax
call	rand
mov	ds:dword_67D72404, eax
mov	[esp+5Ch+var_48], 10h 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+var_4C], eax 
mov	[esp+5Ch+var_50], 0 
mov	[esp+5Ch+var_54], 14h 
mov	[esp+5Ch+var_58], offset word_67D723F4 
mov	eax, [ebx]
mov	dword ptr [esp+5Ch+hostshort], eax 
call	wpurple_sendto
cmp	eax, 13h
jle	short loc_67D15E94
mov	dword ptr [ebx+14h], 1
mov	dword ptr [ebx+24h], offset word_67D723F4
mov	dword ptr [ebx+28h], 14h
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67D162A8
mov	dword ptr [esp+5Ch+hostshort], 1F4h
call	purple_timeout_add
mov	[ebx+20h], eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15F03
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	dword_67D30460,	0
mov	dword ptr [esp+5Ch+hostshort], 0 
call	time
mov	dword_67D3047C,	eax
call	sub_67D15C34
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15F03
mov	eax, ebx
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D15C8C
align 10h
mov	dword_67D30460,	0
mov	dword ptr [esp+5Ch+hostshort], 0 
call	time
mov	dword_67D3047C,	eax
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D15F03
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	sub_67D15C34
			
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 1003Ch
call	sub_67D2FA40
sub	esp, eax
mov	edi, [esp+10h+arg_1003C]
mov	esi, [esp+10h+arg_10040]
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_10018], eax
xor	eax, eax
mov	[esp+10h+arg_C], 0
mov	[esp+10h+var_4], 0 
mov	[esp+10h+var_8], 0FFFFh	
lea	ebx, [esp+10h+arg_18]
mov	[esp+10h+var_C], ebx 
mov	dword ptr [esp+10h+netshort], esi 
call	wpurple_recv
mov	ebp, eax
test	eax, eax
js	loc_67D16044
mov	[esp+eax+10h+arg_18], 0
cmp	eax, 13h
jbe	short loc_67D15FBC
movzx	eax, [esp+10h+arg_1A]
mov	dword ptr [esp+10h+netshort], eax 
call	ntohs
push	edx
movzx	eax, ax
add	eax, 14h
cmp	ebp, eax
jz	short loc_67D15FD4
mov	[esp+10h+var_C], offset	aGotIncompleteR	
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_warning
			
mov	eax, [esp+10h+arg_10018]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D161D6
add	esp, 1003Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+10h+var_C], offset	aGotInvalidResp	
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_warning
jmp	short loc_67D15F9C
align 4
mov	eax, [edi+24h]
mov	edx, [eax+4]
cmp	[esp+10h+arg_1C], edx
jz	short loc_67D15FF8
			
mov	[esp+10h+var_C], offset	aGotWrongTransi	
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_warning
jmp	short loc_67D15F9C
align 4
mov	ecx, [eax+8]
cmp	[esp+10h+arg_20], ecx
jnz	short loc_67D15FE0
mov	edx, [eax+0Ch]
cmp	[esp+10h+arg_24], edx
jnz	short loc_67D15FE0
mov	ecx, [eax+10h]
cmp	[esp+10h+arg_28], ecx
jnz	short loc_67D15FE0
cmp	dword ptr [edi+14h], 1
jnz	short loc_67D15F9C
movzx	eax, word ptr [esp+10h+arg_18]
cmp	ax, 101h
jz	short loc_67D1605D
mov	[esp+10h+var_8], eax
mov	[esp+10h+var_C], offset	aExpectedBindin	
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_warning
jmp	loc_67D15F9C
align 4
mov	[esp+10h+var_C], offset	aUnableToReadSt	
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_warning
jmp	loc_67D15F9C
add	ebp, ebx
mov	[esp+10h+arg_0], ebp
lea	edx, [esp+10h+arg_30]
lea	ebp, [esp+10h+arg_2C]
cmp	[esp+10h+arg_0], edx
jbe	loc_67D16117
mov	[esp+10h+arg_4], edi
mov	edi, edx
mov	[esp+10h+arg_8], esi
jmp	short loc_67D1609D
			
movzx	eax, word ptr [ebp+2]
mov	dword ptr [esp+10h+netshort], eax 
call	ntohs
push	edx
movzx	edx, ax
lea	ebp, [edi+edx]
lea	edi, [ebp+4]
cmp	edi, [esp+10h+arg_0]
jnb	short loc_67D1610F
movzx	eax, word ptr [ebp+2]
mov	dword ptr [esp+10h+netshort], eax 
call	ntohs
push	ecx
movzx	eax, ax
add	eax, edi
cmp	[esp+10h+arg_0], eax
jbe	short loc_67D1610F
mov	si, [ebp+0]
mov	dword ptr [esp+10h+netshort], 1	
call	htons
push	edx
cmp	si, ax
jnz	short loc_67D16081
movzx	eax, word ptr [ebp+2]
mov	dword ptr [esp+10h+netshort], eax 
call	ntohs
push	esi
cmp	ax, 8
jnz	short loc_67D16081
mov	eax, [ebp+8]
mov	[esp+10h+arg_C], eax
mov	dword ptr [esp+10h+netshort], eax 
call	inet_ntoa
push	ecx
test	eax, eax
jz	short loc_67D16081
mov	[esp+10h+var_8], 10h
mov	[esp+10h+var_C], eax
mov	dword ptr [esp+10h+netshort], offset byte_67D30468
call	g_strlcpy
jmp	loc_67D16081
			
mov	edi, [esp+10h+arg_4]
mov	esi, [esp+10h+arg_8]
mov	[esp+10h+var_8], offset	byte_67D30468
mov	[esp+10h+var_C], offset	aGotPublicIpS 
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_info
mov	dword_67D30460,	2
mov	dword_67D30464,	1
mov	dword ptr [esp+10h+netshort], 0	
call	time
mov	dword_67D3047C,	eax
mov	[esp+10h+arg_10], 10000h
mov	[esp+10h+arg_14], ebx
lea	eax, [esp+10h+arg_10]
mov	[esp+10h+var_8], eax 
mov	[esp+10h+var_C], 8912h 
mov	dword ptr [esp+10h+netshort], esi 
call	wpurple_ioctl
mov	edx, [esp+10h+arg_10]
mov	esi, ebx
			
lea	eax, [ebx+edx]
cmp	esi, eax
jnb	short loc_67D161C5
add	esi, 18h
cmp	word ptr [esi-10h], 2
jnz	short loc_67D16182
mov	eax, esi
sub	eax, ebx
mov	ecx, [esp+10h+arg_C]
cmp	[esp+eax+10h+arg_C], ecx
jnz	short loc_67D16182
mov	[esp+10h+var_C], offset	aNoNat 
mov	dword ptr [esp+10h+netshort], offset aStun 
call	purple_debug_info
mov	dword_67D30464,	0
mov	edx, [esp+10h+arg_10]
jmp	short loc_67D16182
mov	eax, edi
call	sub_67D15C8C
call	sub_67D15C34
jmp	loc_67D15F9C
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D16270
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67D16270
mov	[esp+3Ch+var_2C], ebx
mov	[esp+3Ch+var_30], offset sub_67D15CF0
mov	[esp+3Ch+var_34], 2
mov	[esp+3Ch+var_38], 2FB0h
mov	[esp+3Ch+Time],	2F4Ch
call	purple_network_listen_range
test	eax, eax
jz	short loc_67D16238
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D162A0
add	esp, 38h
pop	ebx
retn
align 4
			
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	ebx
call	g_slist_delete_link
mov	ebx, eax
mov	eax, [eax]
mov	[esp+3Ch+Time],	eax
call	g_free
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+Time],	ebx
call	g_slist_delete_link
mov	ebx, eax
test	eax, eax
jnz	short loc_67D16238
mov	dword_67D30460,	0
jmp	short loc_67D1627A
align 10h
			
mov	dword_67D30460,	0FFFFFFFFh
mov	[esp+3Ch+Time],	0 
call	time
mov	dword_67D3047C,	eax
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D162A0
add	esp, 38h
pop	ebx
jmp	sub_67D15C34
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
cmp	dword ptr [ebx+18h], 1
jle	short loc_67D16328
mov	[esp+3Ch+var_38], offset aRequestTimedOu 
mov	[esp+3Ch+Time],	offset aStun 
call	purple_debug_warning
cmp	dword ptr [ebx+14h], 2
jz	short loc_67D1631C
mov	dword_67D30460,	0
mov	[esp+3Ch+Time],	0 
call	time
mov	dword_67D3047C,	eax
call	sub_67D15C34
mov	dword ptr [ebx+20h], 0
mov	eax, ebx
call	sub_67D15C8C
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16396
add	esp, 38h
pop	ebx
retn
mov	dword_67D30464,	5
jmp	short loc_67D162DB
mov	[esp+3Ch+var_38], offset aRequestTimed_0 
mov	[esp+3Ch+Time],	offset aStun 
call	purple_debug_info
inc	dword ptr [ebx+18h]
mov	[esp+3Ch+var_28], 10h 
lea	eax, [ebx+4]
mov	[esp+3Ch+var_2C], eax 
mov	[esp+3Ch+var_30], 0 
mov	eax, [ebx+28h]
mov	[esp+3Ch+var_34], eax 
mov	eax, [ebx+24h]
mov	[esp+3Ch+var_38], eax 
mov	eax, [ebx]
mov	[esp+3Ch+Time],	eax 
call	wpurple_sendto
cmp	eax, [ebx+28h]
jz	short loc_67D1638C
mov	[esp+3Ch+var_38], offset aSendtoFailed 
mov	[esp+3Ch+Time],	offset aStun 
call	purple_debug_warning
xor	eax, eax
jmp	short loc_67D1630B
align 4
mov	eax, 1
jmp	loc_67D1630B
call	__stack_chk_fail
align 4
public purple_stun_discover
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+Time],	offset aPurpleNetwor_7 
call	purple_prefs_get_string
mov	ebx, eax
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], offset aUsingServerS 
mov	[esp+3Ch+Time],	offset aStun 
call	purple_debug_info
mov	edx, dword_67D30460
cmp	edx, 1
jz	loc_67D16528
cmp	edx, 0FFFFFFFFh
jz	short loc_67D16450
test	ebx, ebx
jz	loc_67D1651C
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 1
jbe	loc_67D1651C
mov	eax, dword_67D30478
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+Time],	ebx
call	purple_strequal
xor	edx, edx
test	eax, eax
setnz	dl
mov	edi, edx
mov	edx, dword_67D30460
cmp	edx, 2
jz	loc_67D164F4
mov	[esp+3Ch+Time],	0 
call	time
sub	eax, dword_67D3047C
cmp	eax, 12Ch
jle	loc_67D164F4
			
test	ebx, ebx
jz	loc_67D16544
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 1
jbe	loc_67D16544
mov	dword_67D30460,	1
mov	byte_67D30468, 0
mov	eax, dword_67D30478
mov	[esp+3Ch+Time],	eax
call	g_free
mov	[esp+3Ch+Time],	ebx
call	g_strdup
mov	dword_67D30478,	eax
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D723F0
mov	[esp+3Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D723F0, eax
mov	[esp+3Ch+var_28], ebx
mov	[esp+3Ch+var_2C], offset sub_67D15B9C
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset aUdp_0	
mov	[esp+3Ch+var_38], offset aStun 
mov	[esp+3Ch+Time],	0
call	purple_srv_resolve_account
			
mov	eax, offset dword_67D30460
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16568
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
			
test	edi, edi
jz	loc_67D16450
test	esi, esi
jz	short loc_67D164DC
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], offset sub_67D15B6C
mov	[esp+3Ch+Time],	0Ah
call	purple_timeout_add
jmp	short loc_67D164DC
align 4
			
mov	edi, 1
jmp	loc_67D1642A
align 4
test	esi, esi
jz	short loc_67D164DC
mov	[esp+3Ch+var_38], esi
mov	eax, ds:dword_67D723F0
mov	[esp+3Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D723F0, eax
jmp	short loc_67D164DC
			
mov	dword_67D30460,	0
mov	[esp+3Ch+Time],	0 
call	time
mov	dword_67D3047C,	eax
test	esi, esi
jnz	short loc_67D16500
jmp	loc_67D164DC
call	__stack_chk_fail
align 10h
public purple_stun_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset byte_67D447CD
mov	[esp+2Ch+var_2C], offset aPurpleNetwor_7 
call	purple_prefs_add_string
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D165A2
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 50h
mov	[esp+3Ch+var_3C], esi
call	g_type_check_class_cast
mov	ebx, eax
mov	[esp+3Ch+var_3C], esi
call	g_type_class_peek_parent
mov	ds:dword_67D7240C, eax
mov	dword ptr [ebx+10h], offset sub_67D167C0
mov	dword ptr [ebx+0Ch], offset sub_67D16924
mov	dword ptr [ebx+18h], offset loc_67D166EC
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheStringRepre 
mov	[esp+3Ch+var_38], offset aType_5 
mov	[esp+3Ch+var_3C], offset aType_6 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16642
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_theme_loader_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72408
test	eax, eax
jnz	short loc_67D16688
mov	[esp+2Ch+var_20], 10h
mov	[esp+2Ch+var_24], offset asc_67D448E0 
mov	[esp+2Ch+var_28], offset aPurplethemeloa 
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_67D72408, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16698
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	ebx, eax
mov	[esp+2Ch+var_2C], 4
call	g_malloc0
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D166E6
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
call	purple_theme_loader_get_type
mov	[esp+4], eax
mov	[esp], esi
call	g_type_check_instance_cast
mov	ebx, [eax+0Ch]
mov	eax, [ebx]
mov	[esp], eax
call	g_free
mov	[esp], ebx
call	g_free
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16745
mov	[esp+30h], esi
mov	eax, ds:dword_67D7240C
mov	eax, [eax+18h]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
call	__stack_chk_fail
align 4
public purple_theme_loader_get_type_string
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
test	ebx, ebx
jz	short loc_67D16772
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16772
cmp	[edx], eax
jz	short loc_67D167B4
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D167B4
mov	[esp+2Ch+var_24], offset aPurple_is_them 
mov	[esp+2Ch+var_28], offset aPurple_theme_l 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D167BB
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax]
jmp	short loc_67D167A0
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	ebp, [esp+5Ch+arg_8]
mov	edi, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	purple_theme_loader_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_type_check_instance_cast
cmp	ebx, 1
jz	short loc_67D16868
mov	eax, [esi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	esi, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], esi
mov	[esp+5Ch+var_40], eax
mov	eax, [edi+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset aProperty_0 
mov	[esp+5Ch+var_50], offset aThemeLoader_c6 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_0 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16890
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_5C], eax
call	purple_theme_loader_get_type_string
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16890
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], ebp
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_string
			
call	__stack_chk_fail
align 4
public purple_theme_loader_set_type_string
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
test	ebx, ebx
jz	short loc_67D168C3
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D168C3
cmp	[edx], eax
jz	short loc_67D16904
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D16904
mov	[esp+2Ch+var_24], offset aPurple_is_th_0 
mov	[esp+2Ch+var_28], offset aPurple_theme_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1691D
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
jmp	short loc_67D168EF
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	edi, [esp+6Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
call	purple_theme_loader_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	g_type_check_instance_cast
cmp	ebx, 1
jz	short loc_67D169CC
mov	eax, [esi]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	esi, eax
mov	eax, [edi]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	[esp+6Ch+var_4C], esi
mov	[esp+6Ch+var_50], eax
mov	eax, [edi+4]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], offset aProperty_0 
mov	[esp+6Ch+var_60], offset aThemeLoader_c8 
mov	[esp+6Ch+var_64], offset aSInvalidSIdU_0 
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], 0
call	g_log
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D169FC
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_6C], ebp
mov	[esp+6Ch+var_30], eax
call	g_value_get_string
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
mov	edx, [esp+6Ch+var_30]
jnz	short loc_67D169FC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], edx
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_loader_set_type_string
			
call	__stack_chk_fail
align 4
public purple_theme_loader_build
			
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D16A35
mov	edx, [edx]
mov	[esp+1Ch+arg_0], eax
mov	eax, [edx+44h]
add	esp, 1Ch
jmp	eax
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D16A67
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16A67
cmp	[edx], eax
jz	short loc_67D16A8C
			
mov	[esp+4], eax
mov	[esp], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D16A8C
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16AA5
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16AA5
mov	[esp+30h], ebx
mov	eax, esi
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 18h
mov	ebx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D16AD2
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16AD2
cmp	[edx], eax
jz	short loc_67D16AF0
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16B06
mov	[esp+1Ch+arg_4], eax
mov	[esp+1Ch+arg_0], ebx
add	esp, 18h
pop	ebx
jmp	g_type_check_instance_is_a
align 10h
mov	eax, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16B06
add	esp, 18h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset asc_67D449A0 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+var_2C], eax
call	g_strconcat
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16B58
mov	[esp+2Ch+arg_4], eax
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_str_has_prefix
call	__stack_chk_fail
align 10h
			
sub	esp, 2Ch
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D16BA0
cmp	byte ptr [eax],	0
jz	short loc_67D16BA0
test	edx, edx
jz	short loc_67D16BD0
cmp	byte ptr [edx],	0
jz	short loc_67D16BD0
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset asc_67D449A0 
mov	[esp+2Ch+var_2C], edx
call	g_strconcat
jmp	short loc_67D16BBE
align 10h
			
mov	[esp+2Ch+var_24], offset aNameName 
mov	[esp+2Ch+var_28], offset aPurple_theme_m 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16BF0
add	esp, 2Ch
retn
align 10h
			
mov	[esp+2Ch+var_24], offset aTypeType 
mov	[esp+2Ch+var_28], offset aPurple_theme_m 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D16BBE
call	__stack_chk_fail
align 4
public purple_theme_manager_get_type
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72410
test	eax, eax
jnz	short loc_67D16C38
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aD_5 
mov	[esp+2Ch+var_28], offset aPurplethememan 
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_67D72410, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16C48
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_theme_manager_init
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_20], offset g_object_unref
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	ds:dword_67D72414, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16C97
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_theme_manager_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16CC7
add	esp, 2Ch
retn
call	__stack_chk_fail
public purple_theme_manager_register_type
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
test	ebx, ebx
jz	short loc_67D16CF3
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16CF3
cmp	[edx], eax
jz	short loc_67D16D34
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D16D34
mov	[esp+2Ch+var_24], offset aPurple_is_th_1 
mov	[esp+2Ch+var_28], offset aPurple_theme_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16D96
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_loader_get_type_string
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	esi, eax
test	eax, eax
jz	short loc_67D16D78
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67D16D1F
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_67D16D1F
align 4
mov	[esp+2Ch+var_24], offset aType_7 
mov	[esp+2Ch+var_28], offset aPurple_theme_1 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D16D1F
call	__stack_chk_fail
align 4
public purple_theme_manager_unregister_type
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_loader_get_type
test	ebx, ebx
jz	short loc_67D16DC3
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16DC3
cmp	[edx], eax
jz	short loc_67D16E04
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D16E04
mov	[esp+2Ch+var_24], offset aPurple_is_th_1 
mov	[esp+2Ch+var_28], offset aPurple_theme_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16E75
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_loader_get_type_string
mov	esi, eax
test	eax, eax
jz	short loc_67D16E54
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
cmp	eax, ebx
jnz	short loc_67D16DEF
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], offset sub_67D16B0C
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach_remove
jmp	short loc_67D16DEF
align 4
mov	[esp+2Ch+var_24], offset aType_7 
mov	[esp+2Ch+var_28], offset aPurple_theme_2 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	loc_67D16DEF
call	__stack_chk_fail
align 4
public purple_theme_manager_find_theme
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+3Ch+arg_4]
mov	eax, [esp+3Ch+arg_0]
call	sub_67D16B60
mov	ebx, eax
test	eax, eax
jz	short loc_67D16ED0
mov	[esp+3Ch+var_38], eax
mov	eax, ds:dword_67D72414
mov	[esp+3Ch+var_3C], eax
call	g_hash_table_lookup
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D16EF0
add	esp, 38h
pop	ebx
retn
mov	[esp+3Ch+var_34], offset aKey 
mov	[esp+3Ch+var_38], offset aPurple_theme_3 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D16EBF
call	__stack_chk_fail
align 4
public purple_theme_manager_add_theme
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D16F1F
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D16F1F
cmp	[edx], eax
jz	short loc_67D16F60
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D16F60
mov	[esp+2Ch+var_24], offset aPurple_is_th_2 
mov	[esp+2Ch+var_28], offset aPurple_theme_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D16FCA
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_get_type_string
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_get_name
mov	edx, esi
call	sub_67D16B60
mov	esi, eax
test	eax, eax
jz	short loc_67D16FAC
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
test	eax, eax
jnz	short loc_67D16F4B
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_insert
jmp	short loc_67D16F4B
align 4
mov	[esp+2Ch+var_24], offset aKey 
mov	[esp+2Ch+var_28], offset aPurple_theme_4 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D16F4B
call	__stack_chk_fail
align 10h
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_dir_open_utf8
mov	[esp+4Ch+var_34], eax
test	eax, eax
jz	loc_67D17134
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_dir_read_name_utf8
test	eax, eax
jz	loc_67D17128
xchg	ax, ax
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], offset aPurple_3 
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	g_build_filename
mov	esi, eax
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+var_4C], eax
call	g_dir_open_utf8
mov	ebx, eax
test	eax, eax
jz	loc_67D1710C
			
mov	[esp+4Ch+var_4C], ebx
call	g_dir_read_name_utf8
mov	ebp, eax
test	eax, eax
jz	loc_67D17104
mov	[esp+4Ch+var_48], ebp
mov	eax, ds:dword_67D72414
mov	[esp+4Ch+var_4C], eax
call	g_hash_table_lookup
test	eax, eax
jz	short loc_67D17068
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_38], eax
call	g_build_filename
mov	edi, eax
mov	[esp+4Ch+var_48], eax
mov	ecx, [esp+4Ch+var_38]
mov	[esp+4Ch+var_4C], ecx
call	purple_theme_loader_build
mov	ebp, eax
mov	[esp+4Ch+var_4C], edi
call	g_free
call	purple_theme_get_type
test	ebp, ebp
jz	short loc_67D170D7
mov	edx, [ebp+0]
test	edx, edx
jz	short loc_67D170D7
cmp	[edx], eax
jz	short loc_67D170E8
			
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebp
call	g_type_check_instance_is_a
test	eax, eax
jz	short loc_67D17068
nop
mov	[esp+4Ch+var_4C], ebp
call	purple_theme_manager_add_theme
mov	[esp+4Ch+var_4C], ebx
call	g_dir_read_name_utf8
mov	ebp, eax
test	eax, eax
jnz	loc_67D1707A
xchg	ax, ax
mov	[esp+4Ch+var_4C], ebx
call	g_dir_close
mov	[esp+4Ch+var_4C], esi
call	g_free
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_dir_read_name_utf8
test	eax, eax
jnz	loc_67D17024
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], eax
call	g_dir_close
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17148
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 10h
public purple_theme_manager_refresh
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset sub_67D16AAC
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach_remove
call	purple_user_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aThemes 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
call	sub_67D16FD0
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	[esp+2Ch+var_2C], offset aXdg_data_home	
call	g_getenv_utf8
test	eax, eax
jz	loc_67D17268
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aThemes 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
mov	eax, ebx
call	sub_67D16FD0
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	[esp+2Ch+var_2C], offset aXdg_data_dirs	
call	g_getenv_utf8
test	eax, eax
jz	short loc_67D17255
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset asc_67D44A44 
mov	[esp+2Ch+var_2C], eax
call	g_strsplit
mov	edi, eax
mov	edx, [eax]
lea	ebx, [eax+4]
test	edx, edx
jz	short loc_67D1724D
xchg	ax, ax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset aThemes 
mov	[esp+2Ch+var_2C], edx
call	g_build_filename
mov	esi, eax
call	sub_67D16FD0
mov	[esp+2Ch+var_2C], esi
call	g_free
add	ebx, 4
mov	edx, [ebx-4]
test	edx, edx
jnz	short loc_67D1721C
mov	[esp+2Ch+var_2C], edi
call	g_strfreev
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17294
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	purple_home_dir
mov	[esp+2Ch+var_20], 0
mov	[esp+2Ch+var_24], offset aThemes 
mov	[esp+2Ch+var_28], offset a_local 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ebx, eax
jmp	loc_67D171D8
call	__stack_chk_fail
align 4
public purple_theme_manager_remove_theme
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D172C3
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D172C3
cmp	[edx], eax
jz	short loc_67D17304
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17304
mov	[esp+2Ch+var_24], offset aPurple_is_th_2 
mov	[esp+2Ch+var_28], offset aPurple_theme_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1736E
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_get_type_string
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_get_name
mov	edx, esi
call	sub_67D16B60
mov	ebx, eax
test	eax, eax
jz	short loc_67D17350
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_remove
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1736E
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 10h
mov	[esp+2Ch+var_24], offset aKey 
mov	[esp+2Ch+var_28], offset aPurple_theme_5 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D172EF
			
call	__stack_chk_fail
align 4
public purple_theme_manager_for_each_theme
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D173B4
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset loc_67D16A3C
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D173D2
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aFunc 
mov	[esp+2Ch+var_28], offset aPurple_theme_6 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D173A4
call	__stack_chk_fail
align 4
public purple_theme_manager_load_theme
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	esi, esi
jz	loc_67D17488
test	eax, eax
jz	loc_67D17488
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72414
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_lookup
mov	ebx, eax
call	purple_theme_loader_get_type
test	ebx, ebx
jz	short loc_67D17427
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17427
cmp	[edx], eax
jz	short loc_67D17468
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17468
mov	[esp+2Ch+var_24], offset aPurple_is_th_1 
mov	[esp+2Ch+var_28], offset aPurple_theme_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D174A6
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D174A6
mov	[esp+2Ch+arg_4], esi
mov	[esp+2Ch+arg_0], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	purple_theme_loader_build
align 4
			
mov	[esp+2Ch+var_24], offset aTheme_dirNullT 
mov	[esp+2Ch+var_28], offset aPurple_theme_7 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D17453
			
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D17510
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	g_markup_escape_text
mov	ebx, eax
mov	[esp+2Ch+var_24], 20h
mov	[esp+2Ch+var_28], offset asc_67D44C40 
mov	[esp+2Ch+var_2C], eax
call	g_strdelimit
mov	[esp+2Ch+var_28], 0Dh
mov	[esp+2Ch+var_2C], ebx
call	purple_str_strip_char
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17514
add	esp, 28h
pop	ebx
retn
align 10h
xor	ebx, ebx
jmp	short loc_67D174FA
call	__stack_chk_fail
align 4
push	esi
push	ebx
sub	esp, 34h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], 50h
mov	[esp+3Ch+var_3C], esi
call	g_type_check_class_cast
mov	ebx, eax
mov	[esp+3Ch+var_3C], esi
call	g_type_class_peek_parent
mov	ds:dword_67D7241C, eax
mov	dword ptr [ebx+10h], offset sub_67D17DC8
mov	dword ptr [ebx+0Ch], offset sub_67D1801C
mov	dword ptr [ebx+18h], offset loc_67D177A0
mov	[esp+3Ch+var_2C], 7
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheNameOfTheTh 
mov	[esp+3Ch+var_38], offset aName_9 
mov	[esp+3Ch+var_3C], offset aName_10 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 1
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 7
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheDescription 
mov	[esp+3Ch+var_38], offset aDescription_1	
mov	[esp+3Ch+var_3C], offset aDescription_2	
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 2
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 7
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheAuthorOfThe 
mov	[esp+3Ch+var_38], offset aAuthor_0 
mov	[esp+3Ch+var_3C], offset aAuthor_1 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 0Bh
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheStringRep_0 
mov	[esp+3Ch+var_38], offset aType_8 
mov	[esp+3Ch+var_3C], offset aType_9 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 4
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 7
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aTheDirectoryTh 
mov	[esp+3Ch+var_38], offset aDirectory_0 
mov	[esp+3Ch+var_3C], offset aDirectory_1 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 5
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	[esp+3Ch+var_2C], 3
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], offset aAPreviewImageO 
mov	[esp+3Ch+var_38], offset aImage_1 
mov	[esp+3Ch+var_3C], offset aImage_2 
call	g_param_spec_string
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 6
mov	[esp+3Ch+var_3C], ebx
call	g_object_class_install_property
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D176F6
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_theme_get_type
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72418
test	eax, eax
jnz	short loc_67D1773C
mov	[esp+2Ch+var_20], 10h
mov	[esp+2Ch+var_24], offset dword_67D44E20
mov	[esp+2Ch+var_28], offset aPurpletheme 
mov	[esp+2Ch+var_2C], 50h
call	g_type_register_static
mov	ds:dword_67D72418, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1774C
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	ebx, eax
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
mov	[ebx+0Ch], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1779A
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+30h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
call	purple_theme_get_type
mov	[esp+4], eax
mov	[esp], esi
call	g_type_check_instance_cast
mov	ebx, [eax+0Ch]
mov	eax, [ebx]
mov	[esp], eax
call	g_free
mov	eax, [ebx+4]
mov	[esp], eax
call	g_free
mov	eax, [ebx+8]
mov	[esp], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp], eax
call	g_free
mov	eax, [ebx+14h]
mov	[esp], eax
call	g_free
mov	dword ptr [esp+4], 50h
mov	eax, ds:dword_67D7241C
mov	[esp], eax
call	g_type_check_class_cast
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17838
mov	[esp+30h], esi
mov	eax, [eax+18h]
add	esp, 24h
pop	ebx
pop	esi
jmp	eax
call	__stack_chk_fail
align 10h
public purple_theme_get_name
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17866
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17866
cmp	[edx], eax
jz	short loc_67D178A8
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D178A8
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_theme_g 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D178AF
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax]
jmp	short loc_67D17894
call	__stack_chk_fail
public purple_theme_set_name
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D178DF
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67D178DF
cmp	[ecx], eax
jz	short loc_67D17920
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17920
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_theme_s 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17938
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, esi
call	sub_67D174AC
mov	[ebx], eax
jmp	short loc_67D1790B
call	__stack_chk_fail
align 10h
public purple_theme_get_description
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17966
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17966
cmp	[edx], eax
jz	short loc_67D179A8
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D179A8
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_theme_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D179B0
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax+4]
jmp	short loc_67D17994
call	__stack_chk_fail
align 4
public purple_theme_set_description
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D179E3
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67D179E3
cmp	[ecx], eax
jz	short loc_67D17A24
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17A24
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_theme_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17A3E
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, esi
call	sub_67D174AC
mov	[ebx+4], eax
jmp	short loc_67D17A0F
call	__stack_chk_fail
align 4
public purple_theme_get_author
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17A6A
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17A6A
cmp	[edx], eax
jz	short loc_67D17AAC
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17AAC
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_10 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17AB4
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax+8]
jmp	short loc_67D17A98
call	__stack_chk_fail
align 4
public purple_theme_set_author
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17AE7
mov	ecx, [ebx]
test	ecx, ecx
jz	short loc_67D17AE7
cmp	[ecx], eax
jz	short loc_67D17B28
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17B28
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17B42
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, esi
call	sub_67D174AC
mov	[ebx+8], eax
jmp	short loc_67D17B13
call	__stack_chk_fail
align 4
public purple_theme_get_type_string
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17B6E
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17B6E
cmp	[edx], eax
jz	short loc_67D17BB0
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17BB0
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_12 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17BB8
add	esp, 28h
pop	ebx
retn
align 10h
			
mov	eax, [ebx+0Ch]
mov	eax, [eax+0Ch]
jmp	short loc_67D17B9C
call	__stack_chk_fail
align 10h
public purple_theme_set_type_string
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17BEB
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17BEB
cmp	[edx], eax
jz	short loc_67D17C2C
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17C2C
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17C47
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+0Ch], eax
jmp	short loc_67D17C17
call	__stack_chk_fail
public purple_theme_get_dir
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17C72
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17C72
cmp	[edx], eax
jz	short loc_67D17CB4
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17CB4
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17CBC
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax+10h]
jmp	short loc_67D17CA0
call	__stack_chk_fail
align 4
public purple_theme_set_dir
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17CEF
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17CEF
cmp	[edx], eax
jz	short loc_67D17D30
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17D30
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17D4B
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+10h], eax
jmp	short loc_67D17D1B
call	__stack_chk_fail
public purple_theme_get_image
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17D76
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17D76
cmp	[edx], eax
jz	short loc_67D17DB8
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17DB8
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17DC0
add	esp, 28h
pop	ebx
retn
align 4
			
mov	eax, [ebx+0Ch]
mov	eax, [eax+14h]
jmp	short loc_67D17DA4
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebx, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	purple_theme_get_type
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_type_check_instance_cast
cmp	ebx, 6		
jbe	short loc_67D17E70
			
mov	eax, [esi]	
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	esi, eax
mov	eax, [ebp+0]
mov	eax, [eax]
mov	[esp+5Ch+var_5C], eax
call	g_type_name
mov	[esp+5Ch+var_3C], esi
mov	[esp+5Ch+var_40], eax
mov	eax, [ebp+4]
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_48], ebx
mov	[esp+5Ch+var_4C], offset aProperty_1 
mov	[esp+5Ch+var_50], offset aTheme_c95 
mov	[esp+5Ch+var_54], offset aSInvalidSIdU_1 
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], 0
call	g_log
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D17EB4
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
jmp	ds:off_67D44DD8[ebx*4] 
align 4
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_name
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17EB4
			
mov	[esp+5Ch+arg_4], eax
mov	[esp+5Ch+arg_0], edi
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_value_set_string
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_description
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D17E8C
			
call	__stack_chk_fail
align 4
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_author
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D17E8C
jmp	short loc_67D17EB4
align 4
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_type_string
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D17E8C
jmp	short loc_67D17EB4
align 4
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_dir
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D17E8C
jmp	short loc_67D17EB4
align 4
			
mov	[esp+5Ch+var_5C], eax 
call	purple_theme_get_image
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jz	loc_67D17E8C
jmp	short loc_67D17EB4
align 10h
public purple_theme_get_image_full
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], ebx
call	purple_theme_get_image
mov	esi, eax
test	eax, eax
jz	short loc_67D17F84
call	purple_theme_get_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_cast
mov	[esp+2Ch+var_2C], eax
call	purple_theme_get_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D17F88
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_67D17F6F
call	__stack_chk_fail
align 10h
public purple_theme_set_image
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_theme_get_type
test	ebx, ebx
jz	short loc_67D17FBB
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D17FBB
cmp	[edx], eax
jz	short loc_67D17FFC
			
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	g_type_check_instance_is_a
test	eax, eax
jnz	short loc_67D17FFC
mov	[esp+2Ch+var_24], offset aPurple_is_th_3 
mov	[esp+2Ch+var_28], offset aPurple_them_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D18017
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	ebx, [ebx+0Ch]
mov	eax, [ebx+14h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+14h], eax
jmp	short loc_67D17FE7
call	__stack_chk_fail
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	edi, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
call	purple_theme_get_type
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], esi
call	g_type_check_instance_cast
cmp	ebx, 6		
jbe	short loc_67D180D4
			
mov	eax, [esi]	
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	esi, eax
mov	edx, [esp+6Ch+var_30]
mov	eax, [edx]
mov	eax, [eax]
mov	[esp+6Ch+var_6C], eax
call	g_type_name
mov	[esp+6Ch+var_4C], esi
mov	[esp+6Ch+var_50], eax
mov	edx, [esp+6Ch+var_30]
mov	eax, [edx+4]
mov	[esp+6Ch+var_54], eax
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], offset aProperty_1 
mov	[esp+6Ch+var_60], offset aTheme_c126 
mov	[esp+6Ch+var_64], offset aSInvalidSIdU_1 
mov	[esp+6Ch+var_68], 10h
mov	[esp+6Ch+var_6C], 0
call	g_log
mov	eax, [esp+6Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D181DC
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	ebp, eax
jmp	ds:off_67D44E00[ebx*4] 
align 10h
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_name
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_description
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_author
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_type_string
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_dir
			
mov	[esp+6Ch+var_6C], edi 
call	g_value_get_string
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D181DC
mov	[esp+6Ch+arg_4], eax
mov	[esp+6Ch+arg_0], ebp
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	purple_theme_set_image
			
call	__stack_chk_fail
align 4
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	dword_67D30480,	0FFFFFFFFh
mov	eax, dword_67D30484
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	dword_67D30484,	0
mov	byte_67D30488, 0
mov	byte_67D3049C, 0
mov	byte_67D304AC, 0
mov	dword_67D304BC,	0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D18242
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D1827D
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67D18275
mov	edx, [ebx+10h]
mov	[esp+2Ch+var_28], edx
mov	edx, [ebx+14h]
mov	[esp+2Ch+var_2C], edx
call	eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D18290
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, eax
mov	edi, edx
mov	esi, ecx
mov	ebp, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+var_24], 0
mov	[esp+6Ch+var_58], 0
mov	[esp+6Ch+var_5C], 0
lea	eax, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_60], eax
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_68], eax
mov	eax, dword_67D30484
mov	[esp+6Ch+var_6C], eax
call	purple_url_parse
test	eax, eax
jz	loc_67D18400
mov	eax, [esp+6Ch+var_24]
inc	eax
cmp	eax, 1
jbe	loc_67D18444
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], offset byte_67D30488
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], offset a?xmlVersion1_0 
call	g_strdup_printf
mov	edx, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+var_50], edx
mov	[esp+6Ch+var_54], ecx
mov	[esp+6Ch+var_58], ebx
mov	[esp+6Ch+var_5C], offset byte_67D30488
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_60], eax
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+var_64], eax
mov	eax, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], offset aPostSHttp1_1Ho 
mov	[esp+6Ch+var_30], edx
call	g_strdup_printf
mov	ebx, eax
mov	eax, [esp+6Ch+var_2C]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	[esp+6Ch+var_4C], ebp
mov	[esp+6Ch+var_50], esi
mov	[esp+6Ch+var_54], 20000h
mov	[esp+6Ch+var_58], 1
mov	[esp+6Ch+var_5C], ebx
mov	[esp+6Ch+var_60], 1
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], 0
mov	eax, dword_67D30484
mov	[esp+6Ch+var_6C], eax
call	purple_util_fetch_url_request_len
mov	[esp+6Ch+var_6C], ebx
mov	[esp+6Ch+var_30], eax
call	g_free
mov	edx, [esp+6Ch+var_28]
mov	[esp+6Ch+var_6C], edx
call	g_free
mov	eax, [esp+6Ch+var_30]
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D18458
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+6Ch+var_68], offset aGenerate_actio 
mov	[esp+6Ch+var_6C], offset aUpnp 
call	purple_debug_error
test	esi, esi
jz	short loc_67D18454
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], 0
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], ebp
mov	[esp+6Ch+var_6C], 0
call	esi
xor	eax, eax
jmp	short loc_67D183EA
align 4
mov	[esp+6Ch+var_24], 50h
jmp	loc_67D18307
align 4
xor	eax, eax
jmp	short loc_67D183EA
call	__stack_chk_fail
align 10h
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+34h]
mov	esi, [esp+38h]
mov	eax, [esp+3Ch]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch], edx
xor	edx, edx
mov	edx, [esp+40h]
test	edx, edx
jz	short loc_67D184D8
test	esi, esi
jz	loc_67D18510
			
mov	[esp+8], esi
mov	dword ptr [esp+4], offset aPurple_upnp_se 
mov	dword ptr [esp], offset	aUpnp 
call	purple_debug_error
xor	eax, eax
mov	[ebx+14h], eax
mov	[esp+8], ebx
mov	dword ptr [esp+4], offset sub_67D18248
mov	dword ptr [esp], 0
call	purple_timeout_add
mov	[ebx+18h], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1851A
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
test	esi, esi
jz	short loc_67D18510
mov	dword ptr [esp+8], offset a200Ok 
mov	[esp+4], eax
mov	[esp], esi
call	g_strstr_len
test	eax, eax
jz	short loc_67D1848D
mov	dword ptr [esp+4], offset aSuccessfullyCo 
mov	dword ptr [esp], offset	aUpnp 
call	purple_debug_info
mov	eax, 1
jmp	short loc_67D184A7
align 10h
			
mov	esi, offset aNull_3 
jmp	loc_67D1848D
call	__stack_chk_fail
align 10h
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, ds:dword_67D72420
test	edx, edx
jz	short loc_67D18579
lea	esi, [esi+0]
mov	ebx, [edx]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], edx
call	g_slist_delete_link
mov	ds:dword_67D72420, eax
mov	edi, [eax]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	ds:dword_67D72420, eax
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], esi
call	ebx
mov	edx, ds:dword_67D72420
test	edx, edx
jnz	short loc_67D18540
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1858C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	eax, [ebx+30h]
cmp	eax, 1
jg	loc_67D18663
lea	edx, [ebx+1Ch]
mov	[esp+5Ch+var_30], edx
lea	ebp, [ebx+0Ch]
mov	[esp+5Ch+var_54], 14h
test	al, 1
jnz	loc_67D186D8
mov	[esp+5Ch+var_58], offset aWanipconnectio 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_strlcpy
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], offset aMSearchHttp1_1 
call	g_strdup_printf
mov	esi, eax
mov	ecx, 0FFFFFFFFh
mov	edi, eax
xor	eax, eax
repne scasb
not	ecx
lea	edi, [ecx-1]
			
mov	[esp+5Ch+var_48], 10h 
mov	[esp+5Ch+var_4C], ebp 
mov	[esp+5Ch+var_50], 0 
mov	[esp+5Ch+var_54], edi 
mov	[esp+5Ch+var_58], esi 
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax 
call	wpurple_sendto
test	eax, eax
js	short loc_67D18637
cmp	eax, edi
jz	short loc_67D18680
call	_errno
cmp	dword ptr [eax], 4
jz	short loc_67D18608
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D18608
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	eax, [ebx+30h]
inc	eax
mov	[ebx+30h], eax
cmp	eax, 1
jle	loc_67D185BE
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67D186F8
mov	[esp+5Ch+var_5C], 0Ah
call	purple_timeout_add
mov	[ebx+4], eax
jmp	short loc_67D186C4
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset sub_67D186F8
mov	[esp+5Ch+var_5C], 3E8h
call	purple_timeout_add
mov	[ebx+4], eax
mov	[esp+5Ch+var_50], ebx
mov	[esp+5Ch+var_54], offset sub_67D187D8
mov	[esp+5Ch+var_58], 1
mov	eax, [ebx+8]
mov	[esp+5Ch+var_5C], eax
call	purple_input_add
mov	[ebx], eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D186F1
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], offset aWanpppconnecti 
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_5C], edx
call	g_strlcpy
jmp	loc_67D185E2
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx]
test	eax, eax
jnz	loc_67D187B4
mov	eax, [ebx+4]
test	eax, eax
jnz	loc_67D187A4
mov	dword ptr [ebx], 0
mov	dword ptr [ebx+4], 0
mov	eax, [ebx+30h]
cmp	eax, 1
jle	loc_67D187C4
mov	eax, [ebx+8]
cmp	eax, 0FFFFFFFFh
jz	short loc_67D18749
mov	[esp+2Ch+Time],	eax 
call	wpurple_close
mov	dword_67D30480,	0
mov	[esp+2Ch+Time],	0 
call	time
mov	dword_67D304BC,	eax
mov	byte_67D30488, 0
mov	eax, dword_67D30484
mov	[esp+2Ch+Time],	eax
call	g_free
mov	dword_67D30484,	0
xor	eax, eax
call	sub_67D18520
mov	[esp+2Ch+Time],	ebx
call	g_free
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D187D1
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+Time],	eax
call	purple_timeout_remove
jmp	loc_67D18720
align 4
mov	[esp+2Ch+Time],	eax
call	purple_input_remove
jmp	loc_67D18715
align 4
inc	eax
mov	[ebx+30h], eax
mov	eax, ebx
call	sub_67D18594
jmp	short loc_67D18791
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 1004Ch
call	sub_67D2FA40
sub	esp, eax
mov	esi, [esp+10h+arg_1004C]
mov	eax, ds:__stack_chk_guard
mov	[esp+10h+arg_10028], eax
xor	eax, eax
lea	edi, [esp+10h+arg_28]
lea	esi, [esi+0]
mov	[esp+10h+var_4], 0 
mov	[esp+10h+var_8], 0FFFFh	
mov	[esp+10h+var_C], edi 
mov	eax, [esi+8]
mov	[esp+10h+var_10], eax 
call	wpurple_recv
mov	ebx, eax
test	eax, eax
jns	loc_67D18A18
call	_errno
cmp	dword ptr [eax], 4
jnz	loc_67D1891D
call	_errno
cmp	dword ptr [eax], 4
jz	short loc_67D18804
mov	eax, [esi]
mov	[esp+10h+var_10], eax
call	purple_input_remove
mov	dword ptr [esi], 0
mov	eax, [esi+8]
mov	[esp+10h+var_10], eax 
call	wpurple_close
mov	dword ptr [esi+8], 0FFFFFFFFh
mov	[esp+10h+var_8], offset	a200Ok 
mov	[esp+10h+var_C], ebx
mov	[esp+10h+var_10], edi
call	g_strstr_len
test	eax, eax
jz	loc_67D18A24
mov	[esp+10h+var_8], offset	aHttp_3	
mov	[esp+10h+var_C], ebx
mov	[esp+10h+var_10], edi
call	g_strstr_len
mov	ebp, eax
test	eax, eax
jz	loc_67D18A40
sub	edi, eax
add	ebx, edi
mov	[esp+10h+var_8], offset	asc_67D452DA 
mov	[esp+10h+var_C], ebx
mov	[esp+10h+var_10], eax
call	g_strstr_len
test	eax, eax
jz	loc_67D18A75
cmp	ebp, eax
jz	loc_67D18A5C
sub	eax, ebp
mov	[esp+10h+var_C], eax
mov	[esp+10h+var_10], ebp
call	g_strndup
mov	ebx, eax
mov	[esp+10h+arg_24], 0
mov	[esp+10h+arg_0], 0
mov	dword ptr [esp+10h], 0
lea	eax, [esp+10h+arg_1C]
mov	[esp+10h+var_4], eax
lea	eax, [esp+10h+arg_24]
mov	[esp+10h+var_8], eax
lea	eax, [esp+10h+arg_20]
mov	[esp+10h+var_C], eax
mov	[esp+10h+var_10], ebx
call	purple_url_parse
test	eax, eax
jnz	short loc_67D1893C
mov	[esp+10h+var_10], ebx
call	g_free
			
mov	eax, [esp+10h+arg_10028]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D18AAA
add	esp, 1004Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, [esp+10h+arg_24]
lea	edx, [eax+1]
cmp	edx, 1
jbe	loc_67D18A04
mov	[esp+10h+var_4], eax
mov	eax, [esp+10h+arg_20]
mov	[esp+10h+var_8], eax
mov	eax, [esp+10h+arg_1C]
mov	[esp+10h+var_C], eax
mov	[esp+10h+var_10], offset aGetSHttp1_1Con 
call	g_strdup_printf
mov	edi, eax
mov	eax, [esp+10h+arg_1C]
mov	[esp+10h+var_10], eax
call	g_free
mov	eax, [esp+10h+arg_24]
mov	[esp+10h+var_8], eax
mov	eax, [esp+10h+arg_20]
mov	[esp+10h+var_C], eax
mov	[esp+10h+var_10], offset aHttpSD 
call	g_strdup_printf
mov	[esi+34h], eax
mov	eax, [esp+10h+arg_20]
mov	[esp+10h+var_10], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+10h+var_10], eax
call	purple_timeout_remove
mov	dword ptr [esi+4], 0
mov	[esp+10h+arg_C], esi
mov	[esp+10h+arg_8], offset	sub_67D18B24
mov	[esp+10h+arg_4], 20000h
mov	[esp+10h+arg_0], 1
mov	[esp+10h], edi
mov	[esp+10h+var_4], 1
mov	[esp+10h+var_8], 0
mov	[esp+10h+var_C], 1
mov	[esp+10h+var_10], ebx
call	purple_util_fetch_url_request_len
mov	[esp+10h+var_10], edi
call	g_free
jmp	loc_67D18915
mov	[esp+10h+arg_24], 50h
mov	eax, 50h
jmp	loc_67D1894C
align 4
mov	[esp+eax+10h+arg_28], 0
jmp	loc_67D18845
align 4
mov	[esp+10h+var_C], offset	aParse_discover	
mov	[esp+10h+var_10], offset aUpnp 
call	purple_debug_error
jmp	loc_67D1891D
align 10h
mov	[esp+10h+var_C], offset	aParse_discov_0	
mov	[esp+10h+var_10], offset aUpnp 
call	purple_debug_error
jmp	loc_67D1891D
align 4
mov	[esp+10h+var_C], offset	aParse_discov_1	
mov	[esp+10h+var_10], offset aUpnp 
call	purple_debug_error
jmp	loc_67D1891D
mov	[esp+10h+var_8], offset	asc_67D452DC 
mov	[esp+10h+var_C], ebx
mov	[esp+10h+var_10], ebp
call	g_strstr_len
test	eax, eax
jnz	loc_67D188C1
mov	[esp+10h+var_C], offset	aParse_discov_2	
mov	[esp+10h+var_10], offset aUpnp 
call	purple_debug_error
jmp	loc_67D1891D
call	__stack_chk_fail
align 10h
			
push	esi
push	ebx
sub	esp, 34h
mov	esi, edx
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	[esp+3Ch+var_38], offset aDevicetype 
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D18B18
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	ebx, eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], eax
call	g_ascii_strcasecmp
test	eax, eax
setz	al
movzx	eax, al
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D18B1C
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
xor	eax, eax
jmp	short loc_67D18B05
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_4]
mov	edi, [esp+5Ch+arg_8]
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jnz	loc_67D18BFC
mov	eax, [ebx+34h]
mov	[esp+5Ch+Time],	eax
call	g_free
lea	edx, [ebx+1Ch]
mov	[esp+5Ch+var_38], edx
			
mov	[esp+5Ch+SubStr], offset aPurple_upnp_pa 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
mov	dword_67D30480,	0
mov	[esp+5Ch+Time],	0 
call	time
mov	dword_67D304BC,	eax
mov	dword_67D30484,	0
mov	[esp+5Ch+var_54], 14h
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+SubStr], edx
mov	[esp+5Ch+Time],	offset byte_67D30488
call	g_strlcpy
xor	eax, eax
call	sub_67D18520
			
mov	eax, [ebx]
test	eax, eax
jnz	short loc_67D18BF0
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67D18BCD
mov	[esp+5Ch+Time],	eax
call	purple_timeout_remove
mov	[esp+5Ch+Time],	ebx
call	g_free
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D191A0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+5Ch+Time],	eax
call	purple_input_remove
jmp	short loc_67D18BBE
align 4
lea	edx, [ebx+1Ch]
mov	[esp+5Ch+var_38], edx
mov	esi, [ebx+34h]
mov	[esp+5Ch+var_54], offset a200Ok	
mov	[esp+5Ch+SubStr], ebp
mov	[esp+5Ch+Time],	edi
call	g_strstr_len
test	eax, eax
jz	loc_67D190E1
mov	[esp+5Ch+var_54], offset aRoot 
mov	[esp+5Ch+SubStr], ebp
mov	[esp+5Ch+Time],	edi
call	g_strstr_len
test	eax, eax
jz	loc_67D190FA
mov	edx, edi
sub	edx, eax
add	ebp, edx
mov	[esp+5Ch+SubStr], ebp
mov	[esp+5Ch+Time],	eax
call	xmlnode_from_str
mov	[esp+5Ch+var_34], eax
test	eax, eax
jz	loc_67D19113
mov	[esp+5Ch+SubStr], offset aUrlbase 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_child
test	eax, eax
jz	loc_67D18E54
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_data
mov	[esp+5Ch+Str], eax
test	eax, eax
jz	loc_67D18E54
mov	[esp+5Ch+SubStr], offset aDevice 
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_child
mov	ebp, eax
jmp	short loc_67D18CB6
test	ebp, ebp
jz	loc_67D1913C
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_next_twin
mov	ebp, eax
mov	edx, offset aUrnSchemasUpnp 
mov	eax, ebp
call	sub_67D18AB0
test	eax, eax
jz	short loc_67D18CA4
test	ebp, ebp
jz	loc_67D1913C
mov	[esp+5Ch+SubStr], offset aDevicelist 
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_67D1912C
mov	[esp+5Ch+SubStr], offset aDevice 
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_child
mov	ebp, eax
jmp	short loc_67D18D0E
align 4
test	ebp, ebp
jz	loc_67D1914C
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_next_twin
mov	ebp, eax
mov	edx, offset aUrnSchemasUp_0 
mov	eax, ebp
call	sub_67D18AB0
test	eax, eax
jz	short loc_67D18CFC
test	ebp, ebp
jz	loc_67D1914C
mov	[esp+5Ch+SubStr], offset aDevicelist 
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_child
test	eax, eax
jz	loc_67D19159
mov	[esp+5Ch+SubStr], offset aDevice 
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_child
mov	ebp, eax
test	eax, eax
jnz	short loc_67D18D6E
jmp	loc_67D18E68
align 4
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_next_twin
mov	ebp, eax
test	eax, eax
jz	loc_67D18E68
mov	edx, offset aUrnSchemasUp_1 
mov	eax, ebp
call	sub_67D18AB0
test	eax, eax
jz	short loc_67D18D5C
mov	[esp+5Ch+SubStr], offset aServicelist 
mov	[esp+5Ch+Time],	ebp
call	xmlnode_get_child
mov	edi, eax
test	eax, eax
jz	loc_67D19166
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+SubStr], edx
mov	[esp+5Ch+Time],	offset aUrnSchemasUp_2 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+SubStr], offset aService 
mov	[esp+5Ch+Time],	edi
call	xmlnode_get_child
mov	edi, eax
jmp	short loc_67D18E0C
align 4
mov	[esp+5Ch+SubStr], offset aServicetype 
mov	[esp+5Ch+Time],	edi
call	xmlnode_get_child
test	eax, eax
jz	short loc_67D18E02
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_data
mov	esi, eax
mov	[esp+5Ch+SubStr], ebp
mov	[esp+5Ch+Time],	eax
call	g_ascii_strcasecmp
mov	[esp+5Ch+Time],	esi
mov	[esp+5Ch+var_3C], eax
call	g_free
mov	eax, [esp+5Ch+var_3C]
test	eax, eax
jz	short loc_67D18E74
mov	[esp+5Ch+Time],	edi
call	xmlnode_get_next_twin
mov	edi, eax
test	edi, edi
jnz	short loc_67D18DC4
mov	[esp+5Ch+Time],	ebp
call	g_free
mov	[esp+5Ch+SubStr], offset aParse_descript 
			
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
mov	eax, [esp+5Ch+Str]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	xmlnode_free
			
mov	eax, [ebx+34h]
mov	[esp+5Ch+Time],	eax
call	g_free
jmp	loc_67D18B5C
			
mov	[esp+5Ch+Time],	esi
call	g_strdup
mov	[esp+5Ch+Str], eax
jmp	loc_67D18C8C
align 4
			
mov	[esp+5Ch+SubStr], offset aParse_descri_0 
jmp	short loc_67D18E20
align 4
mov	[esp+5Ch+Time],	ebp
call	g_free
mov	[esp+5Ch+SubStr], offset aControlurl 
mov	[esp+5Ch+Time],	edi
call	xmlnode_get_child
test	eax, eax
jz	loc_67D19173
mov	[esp+5Ch+Time],	eax
call	xmlnode_get_data
mov	ebp, eax
mov	ecx, [esp+5Ch+Str]
test	ecx, ecx
jz	short loc_67D18EBE
mov	[esp+5Ch+SubStr], offset aHttp_3 
mov	[esp+5Ch+Time],	eax
call	purple_str_has_prefix
test	eax, eax
jz	loc_67D19010
			
mov	eax, [esp+5Ch+Str]
mov	[esp+5Ch+Time],	eax
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Time],	eax
call	xmlnode_free
mov	eax, [ebx+34h]
mov	[esp+5Ch+Time],	eax
call	g_free
test	ebp, ebp
jz	loc_67D18B5C
mov	dword_67D30480,	2
mov	[esp+5Ch+Time],	0 
call	time
mov	dword_67D304BC,	eax
mov	dword_67D30484,	ebp
mov	[esp+5Ch+var_54], 14h
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Time],	offset byte_67D30488
call	g_strlcpy
mov	eax, 1
call	sub_67D18520
mov	[esp+5Ch+Time],	0
mov	ecx, offset loc_67D191A8
mov	edx, offset byte_67D457AB
mov	eax, offset aGetexternalipa 
call	sub_67D18298
mov	[esp+5Ch+var_24], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+SubStr], eax
mov	eax, dword_67D30484
mov	[esp+5Ch+Time],	eax
call	purple_url_parse
test	eax, eax
jz	short loc_67D18FF4
mov	eax, [esp+5Ch+var_24]
lea	edx, [eax+1]
cmp	edx, 1
jbe	short loc_67D18FE4
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], offset sub_67D192EC
mov	[esp+5Ch+var_50], eax
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], 0
mov	[esp+5Ch+Time],	0
call	purple_proxy_connect
test	eax, eax
jz	loc_67D1909C
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Time],	eax
call	g_free
jmp	loc_67D18BB8
align 4
mov	[esp+5Ch+var_24], 50h
mov	eax, 50h
jmp	short loc_67D18F98
align 4
mov	[esp+5Ch+SubStr], offset aLookup_interna 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
jmp	loc_67D18BB8
align 10h
mov	[esp+5Ch+SubStr], offset aHttp_4 
mov	[esp+5Ch+Time],	ebp
call	purple_str_has_prefix
test	eax, eax
jnz	loc_67D18EBE
cmp	byte ptr [ebp+0], 2Fh
jnz	loc_67D190C5
mov	[esp+5Ch+SubStr], offset asc_67D456B1 
mov	eax, [esp+5Ch+Str]
mov	[esp+5Ch+Time],	eax 
call	strstr
test	eax, eax
jz	loc_67D19180
add	eax, 3
mov	[esp+5Ch+SubStr], 2Fh 
mov	[esp+5Ch+Time],	eax 
call	strchr
test	eax, eax
jz	loc_67D19189
sub	eax, [esp+5Ch+Str]
mov	[esp+5Ch+var_50], ebp
mov	edx, [esp+5Ch+Str]
mov	[esp+5Ch+var_54], edx
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Time],	offset a_SS 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Time],	ebp
call	g_free
mov	ebp, edi
jmp	loc_67D18EBE
align 4
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_50], eax
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+SubStr], offset aGetLocalIpConn 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
jmp	loc_67D18FD0
mov	[esp+5Ch+var_54], ebp
mov	eax, [esp+5Ch+Str]
mov	[esp+5Ch+SubStr], eax
mov	[esp+5Ch+Time],	offset aSS_3 
call	g_strdup_printf
mov	edi, eax
jmp	short loc_67D1908B
mov	[esp+5Ch+SubStr], offset aParse_descri_1 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
jmp	loc_67D18E44
mov	[esp+5Ch+SubStr], offset aParse_descri_2 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
jmp	loc_67D18E44
mov	[esp+5Ch+SubStr], offset aParse_descri_3 
mov	[esp+5Ch+Time],	offset aUpnp 
call	purple_debug_error
jmp	loc_67D18E44
mov	[esp+5Ch+SubStr], offset aParse_descri_4 
jmp	loc_67D18E20
align 4
			
mov	[esp+5Ch+SubStr], offset aParse_descri_5 
jmp	loc_67D18E20
align 4
			
mov	[esp+5Ch+SubStr], offset aParse_descri_6 
jmp	loc_67D18E20
mov	[esp+5Ch+SubStr], offset aParse_descri_7 
jmp	loc_67D18E20
mov	[esp+5Ch+SubStr], offset aParse_descri_8 
jmp	loc_67D18E20
mov	[esp+5Ch+SubStr], offset aParse_descri_9 
jmp	loc_67D18E20
mov	eax, [esp+5Ch+Str]
jmp	loc_67D19051
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+5Ch+Str]
repne scasb
not	ecx
lea	eax, [ecx-1]
jmp	loc_67D1906D
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+38h]
mov	esi, [esp+3Ch]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	edi, [esp+40h]
test	edi, edi
jz	short loc_67D191E0
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D192E6
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
test	ebx, ebx
jz	short loc_67D191C9
mov	dword ptr [esp+8], offset aNewexternalipa 
mov	[esp+4], esi
mov	[esp], ebx
call	g_strstr_len
test	eax, eax
jz	loc_67D19290
mov	edx, ebx
sub	edx, eax
add	edx, esi
mov	dword ptr [esp+8], offset asc_67D4585C 
mov	[esp+4], edx
mov	[esp], eax
call	g_strstr_len
mov	edi, eax
test	eax, eax
jz	loc_67D192B8
mov	dword ptr [esp+8], offset asc_67D4588F 
sub	ebx, eax
add	esi, ebx
mov	[esp+4], esi
mov	[esp], eax
call	g_strstr_len
test	eax, eax
jz	loc_67D192D0
mov	byte ptr [eax],	0
mov	dword ptr [esp+8], 10h
inc	edi
mov	[esp+4], edi
mov	dword ptr [esp], offset	byte_67D3049C
call	g_strlcpy
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D192E6
mov	dword ptr [esp+38h], offset byte_67D3049C
mov	dword ptr [esp+34h], offset aNatReturnedIpS 
mov	dword ptr [esp+30h], offset aUpnp 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_info
align 10h
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D192E6
mov	dword ptr [esp+34h], offset aLooked_up_publ 
			
mov	dword ptr [esp+30h], offset aUpnp 
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	purple_debug_error
align 4
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D192E6
mov	dword ptr [esp+34h], offset aLooked_up_pu_0 
jmp	short loc_67D192A4
align 10h
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D192E6
mov	dword ptr [esp+34h], offset aLooked_up_pu_1 
jmp	short loc_67D192A4
			
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	ebx, 0FFFFFFFFh
jz	short loc_67D1935C
mov	[esp+2Ch+var_2C], ebx 
call	purple_network_get_local_system_ip
mov	[esp+2Ch+var_24], 10h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset byte_67D304AC
call	g_strlcpy
mov	[esp+2Ch+var_24], offset byte_67D304AC
mov	[esp+2Ch+var_28], offset aLocalIpS 
mov	[esp+2Ch+var_2C], offset aUpnp 
call	purple_debug_info
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19381
mov	[esp+2Ch+arg_0], ebx 
add	esp, 28h
pop	ebx
jmp	wpurple_close
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19381
mov	[esp+2Ch+arg_4], offset	aUnableToLookUp	
mov	[esp+2Ch+arg_0], offset	aUpnp 
add	esp, 28h
pop	ebx
jmp	purple_debug_error
			
call	__stack_chk_fail
align 4
public purple_upnp_discover
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	edi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	dword_67D30480,	1
jz	loc_67D19480
mov	dword ptr [esp+2Ch+hostshort], 38h
call	g_malloc0
mov	ebx, eax
test	esi, esi
jz	short loc_67D193E7
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72420
mov	dword ptr [esp+2Ch+hostshort], eax
call	g_slist_append
mov	ds:dword_67D72420, eax
mov	[esp+2Ch+var_28], edi
mov	dword ptr [esp+2Ch+hostshort], eax
call	g_slist_append
mov	ds:dword_67D72420, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 2
mov	dword ptr [esp+2Ch+hostshort], 2
call	wpurple_socket
mov	[ebx+8], eax
inc	eax
jz	loc_67D194C0
mov	dword ptr [esp+2Ch+hostshort], offset a239_255_255_25 
call	wpurple_gethostbyname
mov	edx, eax
test	eax, eax
jz	loc_67D194F8
lea	esi, [ebx+0Ch]
mov	ecx, 10h
xor	eax, eax
mov	edi, esi
rep stosb
mov	word ptr [ebx+0Ch], 2
lea	eax, [ebx+10h]
movsx	ecx, word ptr [edx+0Ah]
mov	edx, [edx+0Ch]
mov	esi, [edx]
mov	edi, eax
rep movsb
mov	dword ptr [esp+2Ch+hostshort], 76Ch 
call	htons
push	edx
mov	[ebx+0Eh], ax
mov	dword_67D30480,	1
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D19502
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67D18594
align 10h
test	esi, esi
jz	short loc_67D194AB
mov	[esp+2Ch+var_28], esi
mov	eax, ds:dword_67D72420
mov	dword ptr [esp+2Ch+hostshort], eax
call	g_slist_append
mov	ds:dword_67D72420, eax
mov	[esp+2Ch+var_28], edi
mov	dword ptr [esp+2Ch+hostshort], eax
call	g_slist_append
mov	ds:dword_67D72420, eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19502
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_28], offset aPurple_upnp_di 
mov	dword ptr [esp+2Ch+hostshort], offset aUpnp 
call	purple_debug_error
mov	dword ptr [ebx+30h], 2
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], offset sub_67D186F8
mov	dword ptr [esp+2Ch+hostshort], 0Ah
call	purple_timeout_add
mov	[ebx+4], eax
jmp	short loc_67D194AB
mov	[esp+2Ch+var_28], offset aPurple_upnp__0 
jmp	short loc_67D194C8
			
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 40h
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	esi, [esp+4Ch+arg_0]
test	esi, esi
jz	short loc_67D19584
mov	ecx, [ebx+8]
test	ecx, ecx
jz	loc_67D195C0
mov	eax, dword_67D30480
cmp	eax, 2
jz	loc_67D19618
test	eax, eax
jg	short loc_67D19570
mov	[esp+4Ch+Time],	0 
call	time
sub	eax, dword_67D304BC
cmp	eax, 12Ch
jle	short loc_67D19570
mov	[esp+4Ch+Source], 0
mov	[esp+4Ch+Time],	0
call	purple_upnp_discover
nop
			
mov	[esp+4Ch+Source], offset aPurple_upnp__1 
mov	[esp+4Ch+Time],	offset aUpnp 
call	purple_debug_error
mov	dword ptr [ebx+14h], 0
mov	[esp+4Ch+Count], ebx
mov	[esp+4Ch+Source], offset sub_67D18248
mov	[esp+4Ch+Time],	0
call	purple_timeout_add
mov	[ebx+18h], eax
mov	eax, [esp+4Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D1966B
add	esp, 40h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+4Ch+Count], 19h 
mov	[esp+4Ch+Source], offset Source	
lea	edi, [esp+4Ch+Dest]
mov	[esp+4Ch+Time],	edi 
call	strncpy
lea	eax, [ebx+2]
mov	[esp+4Ch+Count], eax
movzx	eax, word ptr [ebx]
mov	[esp+4Ch+Source], eax
mov	[esp+4Ch+Time],	offset aNewremotehostN 
call	g_strdup_printf
mov	esi, eax
mov	[esp+4Ch+Time],	ebx
mov	ecx, offset loc_67D18460
mov	edx, esi
mov	eax, edi
call	sub_67D18298
mov	[ebx+1Ch], eax
mov	[esp+4Ch+Time],	esi
call	g_free
jmp	short loc_67D195A6
align 4
cmp	byte_67D304AC, 0
jz	loc_67D19570
mov	[esp+4Ch+Count], 19h 
mov	[esp+4Ch+Source], offset aAddportmapping 
lea	edi, [esp+4Ch+Dest]
mov	[esp+4Ch+Time],	edi 
call	strncpy
movzx	eax, word ptr [ebx]
mov	[esp+4Ch+var_3C], offset byte_67D304AC
mov	[esp+4Ch+var_40], eax
lea	edx, [ebx+2]
mov	[esp+4Ch+Count], edx
mov	[esp+4Ch+Source], eax
mov	[esp+4Ch+Time],	offset aNewremotehos_0 
call	g_strdup_printf
mov	esi, eax
jmp	short loc_67D195F8
call	__stack_chk_fail
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
mov	dword ptr [eax+18h], 0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 0
call	sub_67D19508
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D196AC
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_upnp_get_public_ip
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, dword_67D30480
cmp	eax, 2
jz	short loc_67D196FC
test	eax, eax
jg	short loc_67D196E9
mov	[esp+2Ch+Time],	0 
call	time
sub	eax, dword_67D304BC
cmp	eax, 12Ch
jg	short loc_67D1970C
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19724
add	esp, 2Ch
retn
align 4
cmp	byte_67D3049C, 0
jz	short loc_67D196E9
mov	eax, offset byte_67D3049C
jmp	short loc_67D196EB
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+Time],	0
call	purple_upnp_discover
xor	eax, eax
jmp	short loc_67D196EB
call	__stack_chk_fail
align 4
public purple_upnp_cancel_port_mapping
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, ds:dword_67D72420
test	ebx, ebx
jz	short loc_67D1975F
mov	eax, [ebx+4]
test	eax, eax
jz	short loc_67D1975F
cmp	[eax], esi
jz	short loc_67D19790
mov	ebx, eax
mov	eax, [ebx+4]
test	eax, eax
jnz	short loc_67D19752
			
mov	eax, [esi+18h]
test	eax, eax
jnz	short loc_67D197C4
mov	eax, [esi+1Ch]
test	eax, eax
jz	short loc_67D19775
mov	[esp+2Ch+var_2C], eax
call	purple_util_fetch_url_cancel
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D197CE
mov	[esp+2Ch+arg_0], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_free
mov	[esp+2Ch+var_28], eax
mov	eax, ds:dword_67D72420
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	ds:dword_67D72420, eax
mov	edi, [ebx+4]
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_slist_delete_link
mov	ds:dword_67D72420, eax
test	edi, edi
jz	short loc_67D1975F
mov	ebx, edi
jmp	short loc_67D1974B
align 4
mov	[esp+2Ch+var_2C], eax
call	purple_timeout_remove
jmp	short loc_67D19766
call	__stack_chk_fail
align 4
public purple_upnp_set_port_mapping
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Time],	20h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	[eax+0Ch], esi
mov	edx, [esp+4Ch+var_30]
mov	[eax+10h], edx
mov	dword ptr [eax+8], 1
mov	[eax], bp
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+var_48], edi
lea	eax, [eax+2]
mov	[esp+4Ch+Time],	eax
call	g_strlcpy
mov	eax, dword_67D30480
cmp	eax, 1
jz	loc_67D198CC
cmp	eax, 0FFFFFFFFh
jz	short loc_67D198B8
test	eax, eax
jz	short loc_67D19874
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	1
call	sub_67D19508
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1990B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Time],	0 
call	time
sub	eax, dword_67D304BC
cmp	eax, 12Ch
jg	short loc_67D198B8
mov	edi, dword_67D30480
test	edi, edi
jnz	short loc_67D1984A
test	esi, esi
jz	short loc_67D198FC
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset sub_67D19670
mov	[esp+4Ch+Time],	0Ah
call	purple_timeout_add
mov	[ebx+18h], eax
jmp	short loc_67D1985A
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	offset sub_67D19508
call	purple_upnp_discover
jmp	short loc_67D1985A
align 4
mov	[esp+4Ch+var_48], offset sub_67D19508
mov	eax, ds:dword_67D72420
mov	[esp+4Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D72420, eax
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D72420, eax
jmp	loc_67D1985A
mov	[esp+4Ch+Time],	ebx
call	g_free
xor	ebx, ebx
jmp	loc_67D1985A
call	__stack_chk_fail
public purple_upnp_remove_port_mapping
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	esi, [esp+4Ch+arg_8]
mov	edx, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+Time],	20h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	[eax+0Ch], esi
mov	edx, [esp+4Ch+var_30]
mov	[eax+10h], edx
mov	dword ptr [eax+8], 0
mov	[eax], bp
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+var_48], edi
lea	eax, [eax+2]
mov	[esp+4Ch+Time],	eax
call	g_strlcpy
mov	eax, dword_67D30480
cmp	eax, 1
jz	loc_67D19A08
cmp	eax, 0FFFFFFFFh
jz	short loc_67D199F4
test	eax, eax
jz	short loc_67D199B0
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	1
call	sub_67D19508
			
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D19A47
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+Time],	0 
call	time
sub	eax, dword_67D304BC
cmp	eax, 12Ch
jg	short loc_67D199F4
mov	ebp, dword_67D30480
test	ebp, ebp
jnz	short loc_67D19986
test	esi, esi
jz	short loc_67D19A38
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset sub_67D19670
mov	[esp+4Ch+Time],	0Ah
call	purple_timeout_add
mov	[ebx+18h], eax
jmp	short loc_67D19996
			
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	offset sub_67D19508
call	purple_upnp_discover
jmp	short loc_67D19996
align 4
mov	[esp+4Ch+var_48], offset sub_67D19508
mov	eax, ds:dword_67D72420
mov	[esp+4Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D72420, eax
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+Time],	eax
call	g_slist_append
mov	ds:dword_67D72420, eax
jmp	loc_67D19996
mov	[esp+4Ch+Time],	ebx
call	g_free
xor	ebx, ebx
jmp	loc_67D19996
call	__stack_chk_fail
public purple_upnp_init
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	purple_network_get_handle
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], offset sub_67D181E4
mov	[esp+3Ch+var_34], offset dword_67D72424
mov	[esp+3Ch+var_38], offset aNetworkConfi_0 
mov	[esp+3Ch+var_3C], eax
call	purple_signal_connect
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19A97
add	esp, 3Ch
retn
call	__stack_chk_fail
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], 1
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	purple_status_set_active_with_attrs
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19AD6
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, eax
mov	ebx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D19C0C
mov	ebp, ecx
test	ecx, ecx
jz	loc_67D19BE8
cmp	edx, 0FFFFFFFFh
jz	short loc_67D19B7C
cmp	ebx, 0FFFFFFFFh
jz	short loc_67D19B8E
test	edx, edx
jle	loc_67D19BA3
test	ebx, ebx
jle	loc_67D19BC4
mov	edi, esi
xor	esi, esi
add	edx, edi
mov	[esp+4Ch+var_30], edx
xchg	ax, ax
cmp	byte ptr [edi],	0
jz	short loc_67D19B5C
test	esi, esi
jnz	short loc_67D19B5C
mov	eax, [esp+4Ch+var_30]
sub	eax, edi
cmp	ebx, eax
jg	short loc_67D19B5C
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D19B78
inc	edi
cmp	byte ptr [edi],	0
jnz	short loc_67D19B31
lea	esi, [esi+0]
			
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D19C2F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	esi, edi
jmp	short loc_67D19B2C
xor	eax, eax
mov	ecx, edx
mov	edi, esi
repne scasb
not	ecx
lea	edx, [ecx-1]
cmp	ebx, 0FFFFFFFFh
jnz	short loc_67D19B10
xor	eax, eax
mov	ecx, ebx
mov	edi, ebp
repne scasb
not	ecx
lea	ebx, [ecx-1]
test	edx, edx
jg	loc_67D19B18
mov	[esp+4Ch+var_44], offset aHlen0	
mov	[esp+4Ch+var_48], offset aPurple_strcase 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D19B5C
align 4
mov	[esp+4Ch+var_44], offset aNlen0	
mov	[esp+4Ch+var_48], offset aPurple_strcase 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D19B5C
align 4
mov	[esp+4Ch+var_44], offset aNeedleNull 
mov	[esp+4Ch+var_48], offset aPurple_strcase 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D19B5C
align 4
mov	[esp+4Ch+var_44], offset aHaystackNull 
mov	[esp+4Ch+var_48], offset aPurple_strcase 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D19B5C
call	__stack_chk_fail
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ecx, [ebx+4]
lea	eax, [ecx+1]
cmp	eax, [ebx+8]
jnb	short loc_67D19C74
mov	esi, [ebx]
mov	[esi+ecx], dl
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+ecx+1], 0
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19C8D
add	esp, 24h
pop	ebx
pop	esi
retn
movsx	esi, dl
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	g_string_insert_c
jmp	short loc_67D19C60
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, eax
mov	ebx, edx
mov	ebp, ecx
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
lea	edi, [ecx-1]
cmp	edi, edx
jnb	short loc_67D19CF8
cmp	byte ptr [ebp+0], 0Ah
jz	short loc_67D19D10
			
mov	[esp+3Ch+var_3C], edi
mov	ecx, ebp
mov	edx, ebx
mov	eax, esi
call	sub_67D19ADC
test	eax, eax
jz	short loc_67D19CF8
xchg	ax, ax
add	edi, eax
jz	short loc_67D19CF8
mov	[esp+3Ch+var_34], offset asc_67D45BF2 
sub	esi, edi
add	ebx, esi
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], edi
call	g_strstr_len
test	eax, eax
jnz	short loc_67D19CFA
			
xor	edi, edi
mov	eax, edi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19D32
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
sub	ecx, 2
mov	[esp+3Ch+var_34], ecx
lea	eax, [ebp+1]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D19CC4
test	esi, esi
jz	short loc_67D19CC4
mov	eax, esi
jmp	short loc_67D19CD8
call	__stack_chk_fail
align 4
			
push	ebx
sub	esp, 28h
mov	ebx, eax
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], offset aLt 
mov	[esp+2Ch+var_2C], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D19D7C
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19DBA
add	esp, 28h
pop	ebx
retn
align 4
mov	[esp+2Ch+var_24], 4
mov	[esp+2Ch+var_28], offset aGt 
mov	[esp+2Ch+var_2C], ebx
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D19D65
mov	[esp+2Ch+var_24], 6
mov	[esp+2Ch+var_28], offset aQuot 
mov	[esp+2Ch+var_2C], ebx
call	g_ascii_strncasecmp
test	eax, eax
setz	al
movzx	eax, al
jmp	short loc_67D19D6A
call	__stack_chk_fail
align 10h
public purple_menu_action_new
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	esi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_4C], 10h
mov	[esp+4Ch+var_30], edx
call	g_malloc0
mov	ebx, eax
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], edx
call	g_strdup
mov	[ebx], eax
mov	[ebx+4], ebp
mov	[ebx+8], edi
mov	[ebx+0Ch], esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19E21
mov	eax, ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_menu_action_free
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D19E64
mov	eax, [ebx]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19E91
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	[esp+2Ch+var_24], offset aActNull 
mov	[esp+2Ch+var_28], offset aPurple_menu_ac 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19E91
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_util_init
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19EB6
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_util_uninit
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72440
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_67D72440, 0
mov	eax, ds:dword_67D72444
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_67D72444, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D19F08
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_base16_encode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D19FA8
test	edi, edi
jnz	short loc_67D19F68
mov	[esp+3Ch+var_34], offset aLen0_0 
mov	[esp+3Ch+var_38], offset aPurple_base16_ 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
			
mov	eax, ebp
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D19FC8
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [edi+edi+1]
mov	[esp+3Ch+var_3C], eax
call	g_malloc
mov	ebp, eax
mov	esi, eax
add	edi, ebx
xchg	ax, ax
movzx	eax, byte ptr [ebx]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset a02hhx	
mov	[esp+3Ch+var_38], 3
mov	[esp+3Ch+var_3C], esi
call	g_snprintf
inc	ebx
add	esi, 2
cmp	ebx, edi
jnz	short loc_67D19F7C
jmp	short loc_67D19F50
align 4
mov	[esp+3Ch+var_34], offset aDataNull_5 
mov	[esp+3Ch+var_38], offset aPurple_base16_ 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	short loc_67D19F50
call	__stack_chk_fail
align 10h
public purple_base16_decode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	edx, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_34], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], ecx
xor	ecx, ecx
test	ebp, ebp
jz	loc_67D1A150
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_3C], ecx
cmp	byte ptr [ebp+0], 0
jnz	short loc_67D1A050
mov	[esp+4Ch+var_44], offset aStrlenStr0 
mov	[esp+4Ch+var_48], offset aPurple_base1_0 
mov	[esp+4Ch+C], 0
call	g_return_if_fail_warning
mov	[esp+4Ch+var_38], 0
			
mov	eax, [esp+4Ch+var_38]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1A179
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
test	byte ptr [esp+4Ch+var_3C], 1
jnz	loc_67D1A124
mov	ecx, [esp+4Ch+var_3C]
shr	ecx, 1
mov	[esp+4Ch+var_30], ecx
mov	[esp+4Ch+C], ecx
call	g_malloc
mov	[esp+4Ch+var_38], eax
mov	eax, [esp+4Ch+var_3C]
test	eax, eax
jz	short loc_67D1A0D8
xor	ebx, ebx
xor	edi, edi
lea	esi, [esi+0]
xor	esi, esi
movsx	eax, byte ptr [ebp+ebx+0]
lea	edx, [eax-30h]
cmp	edx, 9
ja	short loc_67D1A0C1
or	esi, edx
			
test	edi, edi	
jz	short loc_67D1A0A3
lea	eax, [ebx-1]
shr	eax, 1
mov	edx, esi
mov	ecx, [esp+4Ch+var_38]
mov	[ecx+eax], dl
inc	ebx
cmp	ebx, [esp+4Ch+var_3C]
jz	short loc_67D1A0D8
mov	edi, ebx
and	edi, 1
jz	short loc_67D1A080
shl	esi, 4
movsx	eax, byte ptr [ebp+ebx+0]
lea	edx, [eax-30h]
cmp	edx, 9
jbe	short loc_67D1A08F
mov	[esp+4Ch+C], eax 
call	tolower
sub	eax, 61h	
cmp	eax, 5
ja	short loc_67D1A091 
jmp	ds:off_67D45C58[eax*4] 
			
mov	edx, [esp+4Ch+var_34]
test	edx, edx
jz	loc_67D1A033
mov	ecx, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_34]
mov	[edx], ecx
jmp	loc_67D1A033
align 4
			
or	esi, 0Eh	
jmp	short loc_67D1A091 
align 4
			
or	esi, 0Dh	
jmp	short loc_67D1A091 
align 4
			
or	esi, 0Ch	
jmp	short loc_67D1A091 
align 4
			
or	esi, 0Bh	
jmp	short loc_67D1A091 
align 4
			
or	esi, 0Ah	
jmp	loc_67D1A091	
			
or	esi, 0Fh	
jmp	loc_67D1A091	
mov	[esp+4Ch+var_44], offset aLen20	
mov	[esp+4Ch+var_48], offset aPurple_base1_0 
mov	[esp+4Ch+C], 0
call	g_return_if_fail_warning
mov	[esp+4Ch+var_38], 0
jmp	loc_67D1A033
align 10h
mov	[esp+4Ch+var_44], offset aStrNull_0 
mov	[esp+4Ch+var_48], offset aPurple_base1_0 
mov	[esp+4Ch+C], 0
call	g_return_if_fail_warning
mov	[esp+4Ch+var_38], 0
jmp	loc_67D1A033
call	__stack_chk_fail
align 10h
public purple_base16_encode_chunked
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1A228
test	esi, esi
jnz	short loc_67D1A1DC
mov	[esp+4Ch+var_44], offset aLen0_0 
mov	[esp+4Ch+var_48], offset aPurple_base1_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	edi, edi
			
mov	eax, edi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1A24B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	edx, [esi+esi*2]
mov	[esp+4Ch+var_30], edx
mov	eax, edx
inc	eax
mov	[esp+4Ch+var_4C], eax
call	g_malloc
mov	edi, eax
mov	ebp, eax
add	esi, ebx
movzx	eax, byte ptr [ebx]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], offset a02hhx_0 
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], ebp
call	g_snprintf
inc	ebx
add	ebp, 3
cmp	ebx, esi
jnz	short loc_67D1A1F4
mov	edx, [esp+4Ch+var_30]
mov	byte ptr [edi+edx-1], 0
jmp	short loc_67D1A1C4
align 4
mov	[esp+4Ch+var_44], offset aDataNull_5 
mov	[esp+4Ch+var_48], offset aPurple_base1_1 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	loc_67D1A1C4
call	__stack_chk_fail
public purple_base64_encode
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D1A283
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_base64_encode
call	__stack_chk_fail
public purple_base64_decode
			
sub	esp, 2Ch
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D1A2C0
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edx
call	g_base64_decode
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1A2C6
add	esp, 2Ch
retn
align 10h
lea	eax, [esp+2Ch+var_14]
jmp	short loc_67D1A2A3
call	__stack_chk_fail
align 4
public purple_quotedp_decode
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
mov	[esp+4Ch+C], ecx
call	g_malloc
mov	ebp, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
xor	eax, eax
repne scasb
not	ecx
lea	ecx, [ebx+ecx-1]
cmp	ebx, ecx
jnb	loc_67D1A425
mov	edi, ebx
mov	edx, ebp
jmp	short loc_67D1A328
align 4
cmp	al, 5Fh
jz	short loc_67D1A378
mov	[edx], al
			
inc	edi
inc	edx
cmp	ecx, edi
jbe	short loc_67D1A350
			
mov	al, [edi]
cmp	al, 3Dh
jnz	short loc_67D1A31C
movsx	eax, byte ptr [edi+1]
cmp	al, 0Dh
jz	short loc_67D1A380
cmp	al, 0Ah
jz	loc_67D1A408
test	al, al
jnz	loc_67D1A410
			
mov	byte ptr [edx],	3Dh
inc	edi
inc	edx
cmp	ecx, edi
ja	short loc_67D1A328
nop
			
mov	byte ptr [edx],	0
test	esi, esi
jz	short loc_67D1A35B
sub	edx, ebp
mov	[esi], edx
mov	eax, ebp
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1A42C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	byte ptr [edx],	20h
jmp	short loc_67D1A322
align 10h
movsx	ebx, byte ptr [edi+2]
cmp	bl, 0Ah
jz	loc_67D1A41C
test	bl, bl
jz	short loc_67D1A346
mov	[esp+4Ch+C], eax 
mov	[esp+4Ch+var_38], edx
mov	[esp+4Ch+var_34], ecx
call	tolower
mov	[esp+4Ch+Val], eax 
mov	[esp+4Ch+C], offset Str	
call	strchr
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+C], ebx 
call	tolower
mov	[esp+4Ch+Val], eax 
mov	[esp+4Ch+C], offset Str	
call	strchr
mov	ecx, [esp+4Ch+var_30]
test	ecx, ecx
mov	edx, [esp+4Ch+var_38]
mov	ecx, [esp+4Ch+var_34]
jz	loc_67D1A346
test	eax, eax
jz	loc_67D1A346
mov	ebx, [esp+4Ch+var_30]
sub	ebx, offset Str	
shl	ebx, 4
sub	eax, offset Str	
or	ebx, eax
mov	[edx], bl
add	edi, 2
jmp	loc_67D1A322
align 4
dec	edx
inc	edi
jmp	loc_67D1A322
align 10h
movsx	ebx, byte ptr [edi+2]
jmp	loc_67D1A38D
align 4
dec	edx
add	edi, 2
jmp	loc_67D1A322
mov	edx, ebp
jmp	loc_67D1A350
call	__stack_chk_fail
align 4
public purple_mime_decode_field
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1A91C
mov	[esp+6Ch+C], 0
call	g_string_new
mov	ebp, eax
movsx	eax, byte ptr [ebx]
test	al, al
jz	short loc_67D1A4CC
inc	ebx
mov	[esp+6Ch+var_3C], 0
mov	[esp+6Ch+var_38], 0
mov	[esp+6Ch+var_34], 0
mov	[esp+6Ch+var_40], 0
xor	esi, esi
xchg	ax, ax
			
lea	edi, [ebx-1]
cmp	esi, 8		
jbe	short loc_67D1A4F4
			
cmp	al, 3Dh		
jz	loc_67D1A744
mov	ecx, [ebp+4]
lea	edx, [ecx+1]
cmp	edx, [ebp+8]
jnb	loc_67D1A784
mov	edi, [ebp+0]
mov	[edi+ecx], al
mov	[ebp+4], edx
mov	eax, [ebp+0]
mov	byte ptr [eax+ecx+1], 0
inc	ebx
movsx	eax, byte ptr [ebx-1]
test	al, al
jnz	short loc_67D1A48C
test	esi, esi
jnz	short loc_67D1A531
lea	esi, [esi+0]
			
mov	[esp+6Ch+Type],	0
mov	[esp+6Ch+C], ebp
call	g_string_free
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1A95A
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
jmp	ds:off_67D45C94[esi*4] 
align 4
			
cmp	al, 3Dh		
jz	loc_67D1A7A0
			
mov	eax, ebx
sub	eax, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Type],	edx
mov	[esp+6Ch+C], ebp
call	g_string_append_len
xor	esi, esi
			
inc	ebx
movsx	eax, byte ptr [ebx-1]
test	al, al
jnz	loc_67D1A48C
test	esi, esi
jz	short loc_67D1A4CC
mov	edx, ebx
sub	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_64], edx
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+Type],	edx
mov	[esp+6Ch+C], ebp
call	g_string_append_len
jmp	loc_67D1A4CC
			
cmp	al, 3Fh		
jz	loc_67D1A8A8
test	al, al
js	short loc_67D1A504
cmp	al, 20h
jz	short loc_67D1A504
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jz	loc_67D1A8CC
mov	[esp+6Ch+Type],	117h 
mov	[esp+6Ch+C], eax 
call	_isctype
test	eax, eax
jz	short loc_67D1A504
jmp	short loc_67D1A520
align 4
			
test	al, al		
js	loc_67D1A714
cmp	al, 3Fh
jz	loc_67D1A714
cmp	al, 20h
jz	loc_67D1A714
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jnz	loc_67D1A8B4
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 117h
test	eax, eax
jz	loc_67D1A714
mov	[esp+6Ch+var_3C], edi
mov	esi, 7
jmp	loc_67D1A520
align 4
			
cmp	al, 3Fh		
jz	loc_67D1A89C
cmp	al, 20h
jz	loc_67D1A504
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jnz	loc_67D1A72C
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 20h
movzx	eax, ax
test	eax, eax
jnz	loc_67D1A504
movsx	eax, byte ptr [ebx-1]
mov	[esp+6Ch+Type],	eax 
mov	[esp+6Ch+C], offset a@?_ 
call	strchr
test	eax, eax
jnz	loc_67D1A504
jmp	loc_67D1A520
align 4
			
cmp	al, 20h		
jz	loc_67D1A504
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jz	loc_67D1A76C
mov	[esp+6Ch+Type],	20h 
mov	[esp+6Ch+C], eax 
call	_isctype
test	eax, eax
jnz	loc_67D1A504
movsx	eax, byte ptr [ebx-1]
mov	[esp+6Ch+Type],	eax 
mov	[esp+6Ch+C], offset a@?_ 
call	strchr
test	eax, eax
jnz	loc_67D1A504
mov	[esp+6Ch+var_34], edi
mov	esi, 3
jmp	loc_67D1A520
align 10h
			
cmp	al, 20h		
jz	loc_67D1A504
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jz	loc_67D1A754
mov	[esp+6Ch+Type],	20h 
mov	[esp+6Ch+C], eax 
call	_isctype
test	eax, eax
jnz	loc_67D1A504
movsx	eax, byte ptr [ebx-1]
mov	[esp+6Ch+Type],	eax 
mov	[esp+6Ch+C], offset a@?_ 
call	strchr
test	eax, eax
jnz	loc_67D1A504
mov	[esp+6Ch+var_38], edi
mov	esi, 5
jmp	loc_67D1A520
align 4
			
cmp	al, 3Fh		
jnz	loc_67D1A5E0
mov	esi, 4
jmp	loc_67D1A520
align 10h
			
cmp	al, 3Fh		
jnz	loc_67D1A504
mov	esi, 2
jmp	loc_67D1A520
align 4
			
cmp	byte ptr [ebx-1], 3Fh
jnz	loc_67D1A504
mov	[esp+6Ch+var_3C], edi
mov	esi, 8
jmp	loc_67D1A520
mov	[esp+6Ch+Type],	20h 
mov	[esp+6Ch+C], eax 
call	_isctype
jmp	loc_67D1A609
align 4
mov	[esp+6Ch+var_40], edi
mov	esi, 1
jmp	loc_67D1A520
align 4
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 20h
movzx	eax, ax
jmp	loc_67D1A6B7
align 4
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 20h
movzx	eax, ax
jmp	loc_67D1A65B
align 4
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Type],	0FFFFFFFFh
mov	[esp+6Ch+C], ebp
call	g_string_insert_c
jmp	loc_67D1A520
align 10h
mov	eax, [esp+6Ch+var_38]
dec	eax
sub	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Type],	eax
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+C], edx
call	g_strndup
mov	edi, eax
mov	eax, [esp+6Ch+var_3C]
dec	eax
sub	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+Type],	eax
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+C], edx
call	g_strndup
mov	esi, eax
lea	eax, [ebx-2]
sub	eax, [esp+6Ch+var_3C]
mov	[esp+6Ch+Type],	eax
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+C], edx
call	g_strndup
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+Type],	offset aQ 
mov	[esp+6Ch+C], esi
call	g_ascii_strcasecmp
test	eax, eax
jnz	loc_67D1A8E4
lea	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Type],	eax
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+C], eax
call	purple_quotedp_decode
mov	ecx, eax
test	ecx, ecx
jz	loc_67D1A8F8
mov	[esp+6Ch+var_54], 0
lea	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], offset aUtf8_0 
mov	eax, [esp+6Ch+var_28]
mov	[esp+6Ch+Type],	eax
mov	[esp+6Ch+C], ecx
mov	[esp+6Ch+var_48], ecx
call	g_convert
mov	edx, eax
test	eax, eax
mov	ecx, [esp+6Ch+var_48]
jz	short loc_67D1A891
mov	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Type],	edx
mov	[esp+6Ch+C], ebp
mov	[esp+6Ch+var_44], edx
call	g_string_append_len
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+C], edx
call	g_free
mov	ecx, [esp+6Ch+var_48]
mov	[esp+6Ch+C], ecx
call	g_free
jmp	short loc_67D1A8F8
align 4
mov	esi, 6
jmp	loc_67D1A520
align 4
mov	esi, 8
jmp	loc_67D1A520
align 4
mov	[esp+6Ch+Type],	117h 
mov	[esp+6Ch+C], eax 
call	_isctype
jmp	loc_67D1A5C0
align 4
mov	edx, ds:_pctype
mov	edx, [edx]
mov	ax, [edx+eax*2]
and	eax, 117h
jmp	loc_67D1A57F
align 4
mov	[esp+6Ch+Type],	offset aB 
mov	[esp+6Ch+C], esi
call	g_ascii_strcasecmp
test	eax, eax
jz	short loc_67D1A93F
			
mov	[esp+6Ch+C], edi
call	g_free
mov	[esp+6Ch+C], esi
call	g_free
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+C], eax
call	g_free
xor	esi, esi
jmp	loc_67D1A520
align 4
mov	[esp+6Ch+var_64], offset aStrNull_0 
mov	[esp+6Ch+Type],	offset aPurple_mime_de 
mov	[esp+6Ch+C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1A4DC
lea	edx, [esp+6Ch+var_28]
mov	[esp+6Ch+Type],	edx
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+C], eax
call	g_base64_decode
mov	ecx, eax
jmp	loc_67D1A81F
call	__stack_chk_fail
align 10h
public purple_get_tzoff_str
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	esi, [esp+7Ch+arg_0]
mov	ebx, [esp+7Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
lea	edi, [esp+7Ch+var_44]
mov	ecx, 9
rep movsd
lea	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Tm], eax 
call	mktime
mov	esi, [esp+7Ch+var_44.tm_isdst]
test	esi, esi
js	loc_67D1AAFC
call	wpurple_get_tz_offset
mov	esi, eax
cmp	eax, 0FFFFFFFFh
jz	loc_67D1AB24
mov	ebp, 88888889h
imul	ebp
mov	[esp+7Ch+var_50], edx
mov	edi, [esp+7Ch+var_50]
add	edi, esi
sar	edi, 5
mov	eax, esi
sar	eax, 1Fh
sub	edi, eax
mov	eax, edi
imul	ebp
mov	[esp+7Ch+var_50], edx
mov	ecx, [esp+7Ch+var_50]
add	ecx, edi
sar	ecx, 5
mov	eax, edi
sar	eax, 1Fh
sub	ecx, eax
lea	eax, [ecx+ecx*2]
lea	eax, [eax+eax*4]
shl	eax, 2
mov	ecx, edi
sub	ecx, eax
sub	edi, ecx
mov	eax, edi
imul	ebp
mov	[esp+7Ch+var_54], eax
mov	[esp+7Ch+var_50], edx
mov	ebp, [esp+7Ch+var_50]
add	ebp, edi
sar	ebp, 5
mov	eax, edi
cdq
mov	eax, ebp
sub	eax, edx
test	ebx, ebx
jz	short loc_67D1AA74
test	esi, esi
jz	loc_67D1AB10
test	ecx, ecx
js	loc_67D1AB30
mov	[esp+7Ch+var_6C], ecx
movsx	eax, al
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], offset a03d02d 
mov	[esp+7Ch+var_78], 7
mov	[esp+7Ch+Tm], offset word_67D72448
call	g_snprintf
cmp	eax, 6
jg	loc_67D1AAE8
mov	eax, offset word_67D72448
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1AB3F
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
test	ecx, ecx
js	loc_67D1AB38
mov	[esp+7Ch+var_6C], ecx
movsx	eax, al
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], offset a03d02d_0 
mov	[esp+7Ch+var_78], 7
mov	[esp+7Ch+Tm], offset word_67D72448
call	g_snprintf
cmp	eax, 5
jle	short loc_67D1AA55
mov	[esp+7Ch+var_68], offset aPurple_get_tzo 
mov	[esp+7Ch+var_6C], 1EEh
			
mov	[esp+7Ch+var_70], offset aUtil_c 
mov	[esp+7Ch+var_74], offset aFileSLineDSS_9 
mov	[esp+7Ch+var_78], 8
mov	[esp+7Ch+Tm], 0
call	g_log
mov	eax, offset byte_67D45CB8
jmp	loc_67D1AA5A
align 4
mov	[esp+7Ch+var_68], offset aPurple_get_tzo 
mov	[esp+7Ch+var_6C], 1EAh
jmp	short loc_67D1AAB8
align 4
mov	[esp+7Ch+var_68], offset aPurple_get_tzo 
mov	[esp+7Ch+var_6C], 1D0h
jmp	short loc_67D1AAB8
align 10h
mov	ds:word_67D72448, 5Ah
mov	eax, offset word_67D72448
jmp	loc_67D1AA5A
align 4
mov	eax, offset byte_67D45CB8
jmp	loc_67D1AA5A
align 10h
neg	ecx
jmp	loc_67D1AA25
align 4
neg	ecx
jmp	loc_67D1AA7C
call	__stack_chk_fail
public purple_utf8_strftime
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_34], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], edx
xor	edx, edx
mov	[esp+5Ch+var_28], 0
test	ebx, ebx
jz	loc_67D1AE24
mov	edi, [esp+5Ch+var_34]
test	edi, edi
jz	loc_67D1AE6E
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+Tm], 0
mov	[esp+5Ch+Format], 0
mov	[esp+5Ch+SizeInBytes], 0FFFFFFFFh
mov	[esp+5Ch+Buf], ebx
call	g_locale_from_utf8
mov	edi, eax
mov	eax, [esp+5Ch+var_28]
test	eax, eax
jz	short loc_67D1ABEA
mov	eax, [eax+8]
mov	[esp+5Ch+Format], eax
mov	[esp+5Ch+SizeInBytes], offset aFormatConversi 
mov	[esp+5Ch+Buf], offset aUtil 
call	purple_debug_error
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Buf], eax
call	g_error_free
mov	[esp+5Ch+var_28], 0
mov	[esp+5Ch+Buf], ebx
call	g_strdup
mov	edi, eax
test	edi, edi
jz	loc_67D1AD6C
mov	al, [edi]
test	al, al
jz	loc_67D1AE47
mov	ecx, edi
mov	esi, edi
xor	ebp, ebp
mov	[esp+5Ch+var_30], edi
jmp	short loc_67D1AC14
mov	ebx, esi
lea	esi, [ebx+1]
mov	al, [ebx+1]
test	al, al
jz	short loc_67D1AC84
			
cmp	al, 25h
jnz	short loc_67D1AC08
lea	ebx, [esi+1]
mov	dl, [esi+1]
cmp	dl, 7Ah
jz	loc_67D1AD98
cmp	dl, 5Ah
jnz	short loc_67D1AC0A
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Buf], eax 
mov	[esp+5Ch+var_38], ecx
call	wpurple_get_timezone_abbreviation
lea	edi, [ebx-1]
mov	ecx, [esp+5Ch+var_38]
sub	edi, ecx
test	ebp, ebp
jz	loc_67D1AE9D
mov	edx, ebp
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+Tm], ecx
mov	[esp+5Ch+Format], edi
mov	[esp+5Ch+SizeInBytes], edx
mov	[esp+5Ch+Buf], offset aS_SS 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Buf], ebp
call	g_free
lea	ecx, [esi+2]
mov	ebp, edi
lea	esi, [ebx+1]
mov	al, [ebx+1]
test	al, al
jnz	short loc_67D1AC14
mov	edi, [esp+5Ch+var_30]
mov	ebx, ebp
test	ebp, ebp
jz	loc_67D1AE47
cmp	byte ptr [ecx],	0
jz	short loc_67D1ACB5
mov	[esp+5Ch+Format], 0
mov	[esp+5Ch+SizeInBytes], ecx
mov	[esp+5Ch+Buf], ebp
call	g_strconcat
mov	ebp, eax
mov	[esp+5Ch+Buf], ebx
call	g_free
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Tm], eax 
mov	[esp+5Ch+Format], ebp 
mov	[esp+5Ch+SizeInBytes], 80h 
mov	[esp+5Ch+Buf], offset Buf 
call	strftime
mov	ebx, eax
mov	[esp+5Ch+Buf], ebp
call	g_free
test	ebx, ebx
jz	loc_67D1AD88
mov	[esp+5Ch+Buf], edi
call	g_free
lea	edx, [esp+5Ch+var_28]
mov	[esp+5Ch+var_4C], edx
mov	[esp+5Ch+Tm], 0
mov	[esp+5Ch+Format], 0
mov	[esp+5Ch+SizeInBytes], ebx
mov	[esp+5Ch+Buf], offset Buf
call	g_locale_to_utf8
mov	ebx, eax
mov	edx, [esp+5Ch+var_28]
test	edx, edx
jz	loc_67D1ADF8
mov	eax, [edx+8]
mov	[esp+5Ch+Format], eax
mov	[esp+5Ch+SizeInBytes], offset aResultConversi 
mov	[esp+5Ch+Buf], offset aUtil 
call	purple_debug_error
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+Buf], eax
call	g_error_free
mov	eax, offset Buf
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1AEA7
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+Format], offset aFormatNull_0 
mov	[esp+5Ch+SizeInBytes], offset aPurple_interna 
mov	[esp+5Ch+Buf], 0
call	g_return_if_fail_warning
mov	[esp+5Ch+Buf], edi
call	g_free
mov	eax, offset byte_67D45CB8
jmp	short loc_67D1AD51
align 4
mov	[esp+5Ch+SizeInBytes], 0
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Buf], eax
mov	[esp+5Ch+var_38], ecx
call	purple_get_tzoff_str
mov	ecx, [esp+5Ch+var_38]
mov	edi, ebx
sub	edi, ecx
dec	edi
test	ebp, ebp
jz	loc_67D1AE93
mov	edx, ebp
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+Tm], ecx
mov	[esp+5Ch+Format], edi
mov	[esp+5Ch+SizeInBytes], edx
mov	[esp+5Ch+Buf], offset aS_SS 
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+Buf], ebp
call	g_free
lea	ecx, [esi+2]
mov	dl, [esi+1]
mov	ebp, edi
jmp	loc_67D1AC27
align 4
mov	[esp+5Ch+Format], 80h
mov	[esp+5Ch+SizeInBytes], eax
mov	[esp+5Ch+Buf], offset Buf
call	g_strlcpy
mov	[esp+5Ch+Buf], ebx
call	g_free
mov	eax, offset Buf
jmp	loc_67D1AD51
align 4
mov	[esp+5Ch+Format], offset aFormatNull_0 
mov	[esp+5Ch+SizeInBytes], offset aPurple_utf8_st 
mov	[esp+5Ch+Buf], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1AD51
			
mov	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Tm], eax 
mov	[esp+5Ch+Format], edi 
mov	[esp+5Ch+SizeInBytes], 80h 
mov	[esp+5Ch+Buf], offset Buf 
call	strftime
mov	ebx, eax
jmp	loc_67D1ACDF
mov	[esp+5Ch+Buf], 0 
call	time
mov	[esp+5Ch+Time],	eax
lea	eax, [esp+5Ch+Time]
mov	[esp+5Ch+Buf], eax 
call	localtime
mov	[esp+5Ch+var_34], eax
jmp	loc_67D1AB7F
mov	edx, offset byte_67D45CB8
jmp	loc_67D1ADC3
mov	edx, offset byte_67D45CB8
jmp	loc_67D1AC4F
call	__stack_chk_fail
public purple_date_format_short
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset asc_67D45D93 
call	purple_utf8_strftime
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1AEDE
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_date_format_long
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aXX 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	purple_utf8_strftime
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1AF28
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
public purple_date_format_full
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aC_0 
call	purple_utf8_strftime
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1AF62
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_time_format
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset asc_67D45DA6 
call	purple_utf8_strftime
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1AF9A
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public purple_time_build
push	ebx
sub	esp, 58h
mov	edx, [esp+5Ch+arg_14]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+5Ch+arg_0]
sub	eax, 76Ch
mov	[esp+5Ch+var_34.tm_year], eax
mov	eax, [esp+5Ch+arg_4]
dec	eax
mov	[esp+5Ch+var_34.tm_mon], eax
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_34.tm_mday], eax
mov	eax, [esp+5Ch+arg_C]
mov	[esp+5Ch+var_34.tm_hour], eax
mov	eax, [esp+5Ch+arg_10]
mov	[esp+5Ch+var_34.tm_min], eax
test	edx, edx
js	short loc_67D1B008
mov	[esp+5Ch+var_34.tm_sec], edx
lea	eax, [esp+5Ch+var_34]
mov	[esp+5Ch+Tm], eax 
call	mktime
mov	edx, [esp+5Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1B044
add	esp, 58h
pop	ebx
retn
align 4
mov	[esp+5Ch+Tm], 0	
call	time
mov	ebx, eax
mov	ecx, 88888889h
imul	ecx
mov	[esp+5Ch+var_44], eax
mov	[esp+5Ch+var_40], edx
mov	edx, [esp+5Ch+var_40]
add	edx, ebx
sar	edx, 5
mov	eax, ebx
sar	eax, 1Fh
sub	edx, eax
lea	eax, [edx+edx*2]
lea	eax, [eax+eax*4]
shl	eax, 2
mov	edx, ebx
sub	edx, eax
jmp	short loc_67D1AFE5
call	__stack_chk_fail
align 4
public purple_str_to_time
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 8Ch
mov	ebx, [esp+9Ch+arg_0]
mov	edx, [esp+9Ch+arg_4]
mov	[esp+9Ch+var_68], edx
mov	eax, [esp+9Ch+arg_8]
mov	[esp+9Ch+var_64], eax
mov	ebp, [esp+9Ch+arg_C]
mov	esi, [esp+9Ch+arg_10]
mov	edx, ds:__stack_chk_guard
mov	[esp+9Ch+var_20], edx
xor	edx, edx
mov	[esp+9Ch+var_50], 0
test	esi, esi
jz	short loc_67D1B09F
mov	dword ptr [esi], 0
test	ebx, ebx
jz	loc_67D1B2D4
lea	eax, [esp+9Ch+Tm]
mov	[esp+9Ch+var_6C], eax
mov	ecx, 24h
xor	eax, eax
mov	edi, [esp+9Ch+var_6C]
rep stosb
mov	eax, ds:g_ascii_table
mov	edi, [eax]
jmp	short loc_67D1B0C9
align 4
inc	ebx
mov	al, [ebx]
movzx	edx, al
mov	dx, [edi+edx*2]
test	dh, 1
jnz	short loc_67D1B0C8
test	al, al
jz	short loc_67D1B0F0
and	edx, 8
jnz	short loc_67D1B110
cmp	al, 2Dh
jz	short loc_67D1B110
cmp	al, 2Bh
jz	short loc_67D1B110
test	esi, esi
jz	short loc_67D1B0F0
mov	[esi], ebx
xchg	ax, ax
			
xor	eax, eax
			
mov	edx, [esp+9Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1B550
add	esp, 8Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
lea	eax, [esp+9Ch+var_50]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a04d 
mov	[esp+9Ch+Src], ebx 
call	sscanf
test	eax, eax
jz	short loc_67D1B158
mov	edx, [esp+9Ch+var_50]
cmp	edx, 76Bh
jle	short loc_67D1B158
mov	al, [ebx+4]
cmp	al, 2Dh
jz	loc_67D1B2FF
cmp	al, 2Fh
jz	loc_67D1B2FF
add	ebx, 4
sub	edx, 76Ch
mov	[esp+9Ch+Tm.tm_year], edx
			
lea	eax, [esp+9Ch+Tm.tm_mon]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a02d 
mov	[esp+9Ch+Src], ebx 
call	sscanf
test	eax, eax
jz	loc_67D1B2BC
dec	[esp+9Ch+Tm.tm_mon]
mov	al, [ebx+2]
cmp	al, 2Dh
jz	loc_67D1B2F7
cmp	al, 2Fh
jz	loc_67D1B2F7
add	ebx, 2
lea	eax, [esp+9Ch+Tm.tm_mday]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a02d 
mov	[esp+9Ch+Src], ebx 
call	sscanf
test	eax, eax
jz	loc_67D1B2BC
lea	ecx, [ebx+2]
mov	al, [ebx+2]
cmp	al, 2Fh
jz	loc_67D1B307
cmp	al, 2Dh
jz	loc_67D1B307
cmp	al, 54h
jz	loc_67D1B32E
cmp	al, 2Eh
jz	loc_67D1B32E
xor	ebx, ebx
mov	[esp+9Ch+var_68], 0FFF85EE0h
			
test	esi, esi
jz	short loc_67D1B20D
movzx	eax, byte ptr [ecx]
test	al, al
jz	short loc_67D1B20D
test	byte ptr [edi+eax*2+1],	1
jz	loc_67D1B417
inc	ecx
mov	al, [ecx]
movzx	edx, al
test	byte ptr [edi+edx*2+1],	1
jnz	short loc_67D1B1F8
test	al, al
jnz	loc_67D1B417
			
test	ebx, ebx
jz	loc_67D1B3C6
mov	edx, [esp+9Ch+Tm.tm_mon]
cmp	edx, 0Bh
ja	loc_67D1B555
mov	eax, [esp+9Ch+Tm.tm_year]
lea	ecx, [eax+eax*8]
lea	ecx, [eax+ecx*8]
lea	ecx, [ecx+ecx*4]
mov	ebx, [esp+9Ch+Tm.tm_mday]
lea	ecx, [ebx+ecx-63CEh]
add	ecx, ds:dword_67D471C0[edx*4]
mov	ebx, eax
sub	ebx, 44h
js	loc_67D1B45B
sar	ebx, 2
add	ecx, ebx
lea	ebx, [ecx-1]
test	al, 3
jnz	short loc_67D1B25F
dec	edx
jle	loc_67D1B47A
			
lea	edx, [ebx+ebx*2]
mov	eax, [esp+9Ch+Tm.tm_hour]
lea	eax, [eax+edx*8]
lea	eax, [eax+eax*2]
lea	edx, [eax+eax*4]
mov	eax, [esp+9Ch+Tm.tm_min]
lea	eax, [eax+edx*4]
lea	eax, [eax+eax*2]
lea	edx, [eax+eax*4]
mov	eax, [esp+9Ch+Tm.tm_sec]
lea	eax, [eax+edx*4]
			
mov	edx, [esp+9Ch+var_64]
test	edx, edx
jz	short loc_67D1B29A
mov	ecx, 9
mov	edi, [esp+9Ch+var_64]
mov	esi, [esp+9Ch+var_6C]
rep movsd
cmp	[esp+9Ch+var_68], 0FFF85EE0h
jz	short loc_67D1B2A8
sub	eax, [esp+9Ch+var_68]
test	ebp, ebp
jz	loc_67D1B0F2
mov	edx, [esp+9Ch+var_68]
mov	[ebp+0], edx
jmp	loc_67D1B0F2
			
test	esi, esi
jz	loc_67D1B0F0
cmp	byte ptr [ebx],	0
jz	loc_67D1B0F0
mov	[esi], ebx
jmp	loc_67D1B0F2
mov	[esp+9Ch+var_94], offset aTimestampNull	
mov	[esp+9Ch+Format], offset aPurple_str_to_ 
mov	[esp+9Ch+Src], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1B0F2
			
add	ebx, 3
jmp	loc_67D1B192
			
add	ebx, 5
jmp	loc_67D1B14E
			
cmp	[esp+9Ch+var_50], 76Bh
jle	loc_67D1B3D7
test	esi, esi
jz	loc_67D1B0F0
test	al, al
jz	loc_67D1B0F0
mov	[esi], ecx
xor	eax, eax
jmp	loc_67D1B0F2
			
lea	ecx, [ebx+3]
lea	eax, [esp+9Ch+Tm]
mov	[esp+9Ch+var_8C], eax
lea	edx, [esp+9Ch+Tm.tm_min]
mov	[esp+9Ch+var_90], edx
lea	eax, [esp+9Ch+Tm.tm_hour]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a02d02d02d 
mov	[esp+9Ch+Src], ecx 
mov	[esp+9Ch+var_70], edx
mov	[esp+9Ch+var_74], ecx
call	sscanf
cmp	eax, 3
mov	edx, [esp+9Ch+var_70]
mov	ecx, [esp+9Ch+var_74]
jnz	loc_67D1B41E
lea	ecx, [ebx+0Bh]
mov	dl, [ecx]
cmp	dl, 2Eh
jz	short loc_67D1B3BA
cmp	dl, 2Bh
jz	loc_67D1B50B
cmp	dl, 2Dh
jz	loc_67D1B494
cmp	dl, 5Ah
jz	loc_67D1B545
			
mov	eax, [esp+9Ch+var_68]
test	eax, eax
jnz	loc_67D1B482
mov	[esp+9Ch+Tm.tm_isdst], 0FFFFFFFFh
xor	ebx, ebx
mov	[esp+9Ch+var_68], 0FFF85EE0h
jmp	loc_67D1B1E2
			
inc	ecx
mov	dl, [ecx]
lea	eax, [edx-30h]
cmp	al, 9
jbe	short loc_67D1B3BA
jmp	short loc_67D1B37C
lea	eax, [esp+9Ch+Tm]
mov	[esp+9Ch+Src], eax 
call	mktime
jmp	loc_67D1B283
lea	ecx, [ebx+3]
lea	eax, [esp+9Ch+Tm.tm_year]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a04d 
mov	[esp+9Ch+Src], ecx 
mov	[esp+9Ch+var_74], ecx
call	sscanf
test	eax, eax
mov	ecx, [esp+9Ch+var_74]
jnz	short loc_67D1B463
test	esi, esi
jz	loc_67D1B0F0
cmp	byte ptr [ebx+3], 0
jz	loc_67D1B0F0
mov	[esi], ecx
jmp	loc_67D1B0F2
			
mov	[esi], ecx
jmp	loc_67D1B20D
lea	eax, [esp+9Ch+Tm]
mov	[esp+9Ch+var_8C], eax
mov	[esp+9Ch+var_90], edx
lea	edx, [esp+9Ch+Tm.tm_hour]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+Format], offset a02d02d02d_0 
mov	[esp+9Ch+Src], ecx 
mov	[esp+9Ch+var_74], ecx
call	sscanf
cmp	eax, 3
mov	ecx, [esp+9Ch+var_74]
jnz	loc_67D1B1D8
lea	ecx, [ebx+9]
jmp	loc_67D1B375
lea	ebx, [eax-41h]
jmp	loc_67D1B24C
sub	[esp+9Ch+Tm.tm_year], 76Ch
xor	ebx, ebx
mov	[esp+9Ch+var_68], 0FFF85EE0h
jmp	loc_67D1B1E2
lea	ebx, [ecx-2]
jmp	loc_67D1B25F
mov	ebx, 1
mov	[esp+9Ch+var_68], 0
jmp	loc_67D1B1E2
mov	[esp+9Ch+var_60], 0FFFFFFFFh
lea	ebx, [ecx+1]
lea	edx, [esp+9Ch+var_48]
mov	[esp+9Ch+var_90], edx
lea	eax, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_94], eax
mov	[esp+9Ch+Format], offset a02d02d 
mov	[esp+9Ch+Src], ebx 
mov	[esp+9Ch+var_70], edx
mov	[esp+9Ch+var_74], ecx
call	sscanf
cmp	eax, 2
mov	edx, [esp+9Ch+var_70]
mov	ecx, [esp+9Ch+var_74]
jnz	short loc_67D1B515
add	ecx, 6
mov	eax, [esp+9Ch+var_48]
lea	eax, [eax+eax*2]
lea	ebx, [eax+eax*4]
mov	eax, [esp+9Ch+var_4C]
lea	eax, [eax+eax*2]
lea	edx, [eax+eax*4]
mov	eax, edx
shl	eax, 4
sub	eax, edx
shl	eax, 4
lea	eax, [eax+ebx*4]
imul	eax, [esp+9Ch+var_60]
mov	[esp+9Ch+var_68], eax
mov	ebx, 1
jmp	loc_67D1B1E2
mov	[esp+9Ch+var_60], 1
jmp	short loc_67D1B49C
mov	[esp+9Ch+var_90], edx
lea	edx, [esp+9Ch+var_4C]
mov	[esp+9Ch+var_94], edx
mov	[esp+9Ch+Format], offset a02d02d_0 
mov	[esp+9Ch+Src], ebx 
mov	[esp+9Ch+var_74], ecx
call	sscanf
cmp	eax, 2
mov	ecx, [esp+9Ch+var_74]
jz	short loc_67D1B55F
mov	ecx, ebx
jmp	loc_67D1B397
inc	ecx
mov	[esp+9Ch+var_68], 0
jmp	short loc_67D1B501
call	__stack_chk_fail
mov	eax, 0FFFFFFFFh
jmp	loc_67D1B283
add	ecx, 5
jnz	loc_67D1B4D7
jmp	loc_67D1B397
align 10h
public purple_markup_escape_text
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_67D1B6F8
test	esi, esi
js	loc_67D1B6E0
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], edx
call	g_string_sized_new
mov	ebp, eax
mov	edx, [esp+4Ch+var_30]
add	esi, edx
cmp	edx, esi
jz	short loc_67D1B62E
mov	eax, ds:g_utf8_skip
mov	edi, [eax]
lea	esi, [esi+0]
mov	al, [edx]
movzx	ecx, al
movsx	ebx, byte ptr [edi+ecx]
add	ebx, edx
cmp	al, 26h
jz	loc_67D1B68C
jg	loc_67D1B658
cmp	al, 22h
jz	loc_67D1B6A0
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_30], edx
call	g_utf8_get_char
lea	ecx, [eax-1]
cmp	ecx, 7
mov	edx, [esp+4Ch+var_30]
jbe	short loc_67D1B614
lea	ecx, [eax-0Bh]
cmp	ecx, 1
jbe	short loc_67D1B614
lea	ecx, [eax-0Eh]
cmp	ecx, 11h
jbe	short loc_67D1B614
lea	ecx, [eax-7Fh]
cmp	ecx, 5
ja	loc_67D1B6B8
lea	esi, [esi+0]
			
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], offset aXX_0 
mov	[esp+4Ch+var_4C], ebp
call	g_string_append_printf
			
mov	edx, ebx
cmp	esi, ebx
jnz	short loc_67D1B5BC
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1B72A
mov	[esp+4Ch+arg_4], 0
mov	[esp+4Ch+arg_0], ebp
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
align 4
cmp	al, 3Ch
jz	short loc_67D1B678
cmp	al, 3Eh
jnz	loc_67D1B5DD
mov	[esp+4Ch+var_48], offset aGt 
mov	[esp+4Ch+var_4C], ebp
call	g_string_append
jmp	short loc_67D1B628
align 4
mov	[esp+4Ch+var_48], offset aLt 
mov	[esp+4Ch+var_4C], ebp
call	g_string_append
jmp	short loc_67D1B628
align 4
mov	[esp+4Ch+var_48], offset aAmp 
mov	[esp+4Ch+var_4C], ebp
call	g_string_append
jmp	short loc_67D1B628
align 10h
mov	[esp+4Ch+var_48], offset aQuot 
mov	[esp+4Ch+var_4C], ebp
call	g_string_append
jmp	loc_67D1B628
align 4
lea	ecx, [eax-86h]
cmp	ecx, 19h
jbe	loc_67D1B614
mov	eax, ebx
sub	eax, edx
mov	[esp+4Ch+var_44], eax
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], ebp
call	g_string_append_len
jmp	loc_67D1B628
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
lea	esi, [ecx-1]
jmp	loc_67D1B59A
align 4
mov	[esp+4Ch+var_44], offset aTextNull_2 
mov	[esp+4Ch+var_48], offset aPurple_markup_ 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1B72A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 10h
public purple_markup_unescape_entity
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D1B7B8
cmp	byte ptr [ebx],	26h
jnz	short loc_67D1B7B8
mov	[esp+4Ch+var_44], 5
mov	[esp+4Ch+Format], offset aAmp 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B7BC
mov	edi, 5
mov	eax, offset asc_67D45E0E 
			
test	esi, esi
jz	short loc_67D1B77F
mov	[esi], edi
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1B890
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_40], ebp
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+Format], offset aXX1 
mov	[esp+4Ch+Src], ebx 
call	sscanf
cmp	eax, 2
jz	loc_67D1B913
			
xor	eax, eax
jmp	short loc_67D1B77F
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+Format], offset aLt 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B7E4
mov	edi, 4
mov	eax, offset asc_67D45E10 
jmp	short loc_67D1B779
mov	[esp+4Ch+var_44], 4
mov	[esp+4Ch+Format], offset aGt 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B80F
mov	edi, 4
mov	eax, (offset asc_67D45E10+2) 
jmp	loc_67D1B779
mov	[esp+4Ch+var_44], 6
mov	[esp+4Ch+Format], offset aNbsp 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B83A
mov	edi, 6
mov	eax, (offset asc_67D45E10+4) 
jmp	loc_67D1B779
mov	[esp+4Ch+var_44], 6
mov	[esp+4Ch+Format], offset aCopy 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B865
mov	edi, 6
mov	eax, offset aI_0 
jmp	loc_67D1B779
mov	[esp+4Ch+var_44], 6
mov	[esp+4Ch+Format], offset aQuot 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B895
mov	edi, 6
mov	eax, offset asc_67D45E19 
jmp	loc_67D1B779
call	__stack_chk_fail
mov	[esp+4Ch+var_44], 5
mov	[esp+4Ch+Format], offset aReg 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1B8C0
mov	edi, 5
mov	eax, offset aO	
jmp	loc_67D1B779
mov	[esp+4Ch+var_44], 6
mov	[esp+4Ch+Format], offset aApos 
mov	[esp+4Ch+Src], ebx
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D1B98D
cmp	byte ptr [ebx+1], 23h
jnz	loc_67D1B7B8
lea	ebp, [esp+4Ch+var_22]
mov	[esp+4Ch+var_40], ebp
lea	edi, [esp+4Ch+var_28]
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+Format], offset aU1 
mov	[esp+4Ch+Src], ebx 
call	sscanf
cmp	eax, 2
jnz	loc_67D1B797
mov	eax, [esp+4Ch+var_28]
test	eax, eax
jz	loc_67D1B7B8
mov	[esp+4Ch+Format], offset byte_67D724E0
mov	[esp+4Ch+Src], eax
call	g_unichar_to_utf8
mov	ds:byte_67D724E0[eax], 0
xor	eax, eax
cmp	byte ptr [ebx+2], 78h
setz	al
lea	ebp, [ebx+eax+2]
jmp	short loc_67D1B95E
mov	ecx, ds:_pctype
mov	ecx, [ecx]
mov	ax, [ecx+eax*2]
and	eax, 80h
movzx	eax, ax
inc	ebp
test	eax, eax
jz	short loc_67D1B99C
mov	edi, ebp
sub	edi, ebx
mov	edx, ebp
movsx	eax, byte ptr [ebp+0]
mov	ecx, ds:__mb_cur_max
cmp	dword ptr [ecx], 1
jz	short loc_67D1B945
mov	[esp+4Ch+Format], 80h 
mov	[esp+4Ch+Src], eax 
mov	[esp+4Ch+var_30], ebp
call	_isctype
mov	edx, [esp+4Ch+var_30]
jmp	short loc_67D1B959
mov	edi, 6
mov	eax, offset asc_67D45E1E 
jmp	loc_67D1B779
mov	eax, offset byte_67D724E0
cmp	byte ptr [edx],	3Bh
setz	dl
movzx	edx, dl
add	edi, edx
jmp	loc_67D1B779
align 4
public purple_markup_find_tag
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_48], eax
mov	ebx, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_C]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jz	loc_67D1BDBC
mov	eax, [esp+6Ch+var_48]
cmp	byte ptr [eax],	0
jnz	short loc_67D1BA3A
mov	[esp+6Ch+var_64], offset aNeedle0 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1BE40
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
test	ebx, ebx
jz	loc_67D1BD06
mov	ebp, [esp+6Ch+var_40]
test	ebp, ebp
jz	loc_67D1BD76
mov	edi, [esp+6Ch+var_3C]
test	edi, edi
jz	loc_67D1BD99
mov	esi, [esp+6Ch+var_44]
test	esi, esi
jz	loc_67D1BDDF
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+var_48]
repne scasb
not	ecx
lea	edx, [ecx-1]
mov	[esp+6Ch+var_34], edx
lea	eax, [esp+6Ch+var_24]
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_50], ecx
call	g_datalist_init
mov	dl, [ebx]
xor	ebp, ebp
mov	[esp+6Ch+var_38], 0
xor	edi, edi
xor	esi, esi
mov	[esp+6Ch+var_4C], 0
mov	ecx, [esp+6Ch+var_50]
mov	[esp+6Ch+var_30], ecx
			
test	dl, dl
jz	loc_67D1BB4C
test	esi, esi
jnz	loc_67D1BC8C
test	edi, edi
jz	loc_67D1BB84
			
test	ebp, ebp
jz	loc_67D1BB98
mov	al, [ebp+0]
mov	edi, ebx
jmp	short loc_67D1BADB
align 4
inc	edi
mov	dl, [edi]
test	dl, dl
jz	short loc_67D1BB4C
cmp	dl, al
jnz	short loc_67D1BAD4
mov	ecx, [esp+6Ch+var_4C]
test	ecx, ecx
jz	short loc_67D1BB2D
mov	eax, edi
sub	eax, ebx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_strndup
mov	ebx, eax
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_quark_from_string
mov	[esp+6Ch+var_60], offset g_free
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], eax
lea	edx, [esp+6Ch+var_24]
mov	[esp+6Ch+var_6C], edx
call	g_datalist_id_set_data_full
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_free
lea	ebx, [edi+1]
mov	dl, [edi+1]
xor	ebp, ebp
mov	edi, 1
mov	[esp+6Ch+var_4C], 0
test	dl, dl
jnz	loc_67D1BAB4
xchg	ax, ax
			
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_free
test	esi, esi
jnz	loc_67D1BC98
mov	edx, [esp+6Ch+var_40]
mov	dword ptr [edx], 0
mov	edx, [esp+6Ch+var_3C]
mov	dword ptr [edx], 0
mov	edx, [esp+6Ch+var_44]
mov	dword ptr [edx], 0
jmp	loc_67D1BA20
align 4
cmp	dl, 3Ch
jz	short loc_67D1BC08
			
lea	ecx, [ebx+1]
mov	dl, [ebx+1]
mov	ebx, ecx
jmp	loc_67D1BAAC
align 4
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jz	loc_67D1BCA7
cmp	dl, 3Eh
jz	loc_67D1BE3C
cmp	dl, 22h
jz	loc_67D1BD30
cmp	dl, 27h
jz	loc_67D1BD30
cmp	dl, 20h
jz	loc_67D1BE3C
mov	edi, ebx
cmp	dl, 3Dh
jnz	short loc_67D1BBFC
jmp	loc_67D1BD5E
cmp	al, 3Eh
jz	loc_67D1BE19
cmp	al, 22h
jz	loc_67D1BE02
cmp	al, 27h
jz	loc_67D1BE02
cmp	al, 20h
jz	loc_67D1BE2F
cmp	al, 3Dh
jz	loc_67D1BE33
inc	edi
mov	al, [edi]
test	al, al
jnz	short loc_67D1BBD4
jmp	loc_67D1BB4C
lea	ecx, [ebx+1]
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_64], edx
mov	eax, [esp+6Ch+var_48]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_50], ecx
call	g_ascii_strncasecmp
test	eax, eax
mov	ecx, [esp+6Ch+var_50]
jnz	loc_67D1BB8C
mov	edx, [esp+6Ch+var_40]
mov	[edx], ebx
add	ebx, [esp+6Ch+var_30]
mov	al, [ebx]
cmp	al, 20h
jz	loc_67D1BE0B
cmp	al, 3Eh
jz	loc_67D1BD29
test	al, al
jz	loc_67D1BB4C
cmp	al, 22h
jz	loc_67D1BB89
cmp	al, 27h
jnz	short loc_67D1BC80
jmp	loc_67D1BB89
cmp	al, 22h
jz	loc_67D1BB89
cmp	al, 27h
jz	loc_67D1BB89
cmp	al, 3Eh
jz	loc_67D1BB89
inc	ebx
mov	al, [ebx]
test	al, al
jnz	short loc_67D1BC68
jmp	loc_67D1BB4C
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], eax
call	g_free
mov	eax, [esp+6Ch+var_24]
mov	edx, [esp+6Ch+var_44]
mov	[edx], eax
jmp	loc_67D1BA20
cmp	dl, 22h
jz	loc_67D1BE12
jle	short loc_67D1BCD7
cmp	dl, 27h
jz	loc_67D1BE12
cmp	dl, 3Eh
jnz	short loc_67D1BCDC
mov	edx, [esp+6Ch+var_3C]
mov	[edx], ebx
mov	dl, [ebx]
mov	edi, 1
mov	esi, 1
jmp	loc_67D1BAAC
cmp	dl, 20h
jz	short loc_67D1BCEC
			
mov	dl, [ebx+1]
inc	ebx
mov	edi, 1
jmp	loc_67D1BAAC
align 4
			
inc	ebx
mov	dl, [ebx]
cmp	dl, 20h
jz	short loc_67D1BCEC
mov	[esp+6Ch+var_38], 1
mov	edi, 1
jmp	loc_67D1BAAC
mov	[esp+6Ch+var_64], offset aHaystackNull 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1BA20
mov	dl, 3Eh
jmp	loc_67D1BAC4
			
mov	edi, ebx
xor	eax, eax
mov	ebp, edi
test	eax, eax
jz	short loc_67D1BD5E
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_6C], edx
mov	[esp+6Ch+var_50], eax
call	g_free
mov	eax, [esp+6Ch+var_50]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	g_ascii_strdown
mov	[esp+6Ch+var_4C], eax
			
lea	ebx, [edi+1]
mov	dl, [edi+1]
mov	[esp+6Ch+var_38], 0
mov	edi, 1
jmp	loc_67D1BAAC
mov	[esp+6Ch+var_64], offset aStartNull 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1BA20
mov	[esp+6Ch+var_64], offset aEndNull 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1BA20
mov	[esp+6Ch+var_64], offset aNeedleNull 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1BA20
mov	[esp+6Ch+var_64], offset aAttributesNull 
mov	[esp+6Ch+var_68], offset aPurple_marku_0 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1BA20
			
mov	eax, edi
sub	eax, ebx
jmp	loc_67D1BD34
mov	dl, 20h
jmp	loc_67D1BAC4
			
mov	ebp, ebx
jmp	loc_67D1BCDC
mov	dl, 3Eh
			
mov	ebx, edi
mov	[esp+6Ch+var_38], 0
mov	edi, 1
jmp	loc_67D1BAAC
mov	dl, 20h
jmp	short loc_67D1BE1B
mov	eax, edi
sub	eax, ebx
jmp	loc_67D1BD36
			
mov	edi, ebx
jmp	short loc_67D1BE1B
call	__stack_chk_fail
align 4
public purple_markup_extract_info_field
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	edx, [esp+6Ch+arg_4]
mov	[esp+6Ch+var_40], edx
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_48], edx
mov	edi, [esp+6Ch+arg_C]
mov	esi, [esp+6Ch+arg_10]
mov	ebp, [esp+6Ch+arg_14]
mov	eax, [esp+6Ch+arg_1C]
mov	[esp+6Ch+Str2],	eax
mov	edx, [esp+6Ch+arg_20]
mov	[esp+6Ch+var_44], edx
mov	edx, [esp+6Ch+arg_24]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_28]
mov	[esp+6Ch+var_30], edx
mov	edx, [esp+6Ch+arg_2C]
mov	[esp+6Ch+var_38], edx
mov	dl, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_39], dl
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1C118
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jz	loc_67D1C13C
test	edi, edi
jz	loc_67D1C160
test	ebp, ebp
jz	loc_67D1C184
mov	eax, [esp+6Ch+var_44]
test	eax, eax
jz	loc_67D1C1A8
mov	[esp+6Ch+SubStr], edi 
mov	[esp+6Ch+Str], ebx 
call	strstr
mov	edx, eax
test	eax, eax
jz	loc_67D1BF94
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
lea	esi, [esi+ecx-1]
add	esi, edx
add	ebx, [esp+6Ch+var_40]
cmp	esi, ebx
jnb	short loc_67D1BF94
mov	dl, [esi]
cmp	[esp+6Ch+var_39], 0
jnz	loc_67D1BFB0
mov	[esp+6Ch+SubStr], ebp 
mov	[esp+6Ch+Str], esi 
mov	[esp+6Ch+var_50], dl
call	strstr
mov	ebx, eax
movzx	edx, [esp+6Ch+var_50]
cmp	dl, 0Ah
jz	short loc_67D1BF6B
mov	eax, ds:g_ascii_table
mov	ecx, [eax]
test	byte ptr [ecx+edx*2+1],	1
jnz	short loc_67D1BF63
jmp	short loc_67D1BF6B
align 4
test	byte ptr [ecx+eax*2+1],	1
jz	short loc_67D1BF6B
inc	esi
movzx	eax, byte ptr [esi]
cmp	al, 0Ah
jnz	short loc_67D1BF5C
			
cmp	esi, ebx
jnb	short loc_67D1BFBC
mov	eax, ds:g_ascii_table
mov	edx, [eax]
movzx	eax, byte ptr [ebx-1]
test	byte ptr [edx+eax*2+1],	1
jnz	short loc_67D1BF8F
jmp	short loc_67D1BFBC
align 4
movzx	eax, byte ptr [ebx-1]
test	byte ptr [edx+eax*2+1],	1
jz	short loc_67D1BFC0
dec	ebx
cmp	ebx, esi
jnz	short loc_67D1BF84
			
xor	eax, eax
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1C1F5
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
cmp	dl, [esp+6Ch+var_39]
jnz	loc_67D1BF2E
jmp	short loc_67D1BF94
			
cmp	esi, ebx
jz	short loc_67D1BF94
test	ebx, ebx
jz	short loc_67D1BF94
mov	ebp, [esp+6Ch+Str2]
test	ebp, ebp
jz	short loc_67D1BFF4
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+6Ch+Str2]
repne scasb
not	ecx
dec	ecx
mov	[esp+6Ch+MaxCount], ecx	
mov	edx, [esp+6Ch+Str2]
mov	[esp+6Ch+SubStr], edx 
mov	[esp+6Ch+Str], esi 
call	strncmp
test	eax, eax
jz	short loc_67D1BF94
mov	[esp+6Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebp, eax
mov	edi, [esp+6Ch+var_34]
test	edi, edi
jnz	short loc_67D1C070
sub	ebx, esi
mov	eax, [esp+6Ch+var_38]
test	eax, eax
jz	loc_67D1C1CB
mov	[esp+6Ch+SubStr], ebx
mov	[esp+6Ch+Str], esi
mov	edx, [esp+6Ch+var_38]
call	edx
mov	ebx, eax
mov	[esp+6Ch+SubStr], eax
mov	[esp+6Ch+Str], ebp
call	g_string_append
mov	[esp+6Ch+Str], ebx
call	g_free
			
mov	eax, [ebp+0]
mov	[esp+6Ch+MaxCount], eax
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+SubStr], edx
mov	edx, [esp+6Ch+var_48]
mov	[esp+6Ch+Str], edx
call	purple_notify_user_info_add_pair
mov	[esp+6Ch+SubStr], 1
mov	[esp+6Ch+Str], ebp
call	g_string_free
mov	eax, 1
jmp	loc_67D1BF96
mov	[esp+6Ch+SubStr], offset aAHref	
mov	[esp+6Ch+Str], eax
call	g_string_append
mov	ecx, [esp+6Ch+var_30]
test	ecx, ecx
jz	short loc_67D1C098
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+SubStr], edx
mov	[esp+6Ch+Str], ebp
call	g_string_append
sub	ebx, esi
mov	edx, [esp+6Ch+var_38]
test	edx, edx
jz	loc_67D1C1E0
mov	[esp+6Ch+SubStr], ebx
mov	[esp+6Ch+Str], esi
mov	edx, [esp+6Ch+var_38]
call	edx
mov	edi, eax
mov	[esp+6Ch+SubStr], eax
mov	[esp+6Ch+Str], ebp
call	g_string_append
mov	[esp+6Ch+Str], edi
call	g_free
mov	[esp+6Ch+SubStr], offset asc_67D45E97 
mov	[esp+6Ch+Str], ebp
call	g_string_append
mov	eax, [esp+6Ch+var_30]
test	eax, eax
jz	short loc_67D1C0F1
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+SubStr], edx
mov	[esp+6Ch+Str], ebp
call	g_string_append
mov	[esp+6Ch+MaxCount], ebx
mov	[esp+6Ch+SubStr], esi
mov	[esp+6Ch+Str], ebp
call	g_string_append_len
mov	[esp+6Ch+SubStr], offset aA_0 
mov	[esp+6Ch+Str], ebp
call	g_string_append
jmp	loc_67D1C03B
align 4
mov	[esp+6Ch+MaxCount], offset aStrNull_0 
mov	[esp+6Ch+SubStr], offset aPurple_marku_1 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1BF96
align 4
mov	[esp+6Ch+MaxCount], offset aUser_infoNul_0 
mov	[esp+6Ch+SubStr], offset aPurple_marku_1 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1BF96
align 10h
mov	[esp+6Ch+MaxCount], offset aStart_tokenNul 
mov	[esp+6Ch+SubStr], offset aPurple_marku_1 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1BF96
align 4
mov	[esp+6Ch+MaxCount], offset aEnd_tokenNull 
mov	[esp+6Ch+SubStr], offset aPurple_marku_1 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1BF96
align 4
mov	[esp+6Ch+MaxCount], offset aDisplay_nameNu 
mov	[esp+6Ch+SubStr], offset aPurple_marku_1 
mov	[esp+6Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1BF96
mov	[esp+6Ch+MaxCount], ebx
mov	[esp+6Ch+SubStr], esi
mov	[esp+6Ch+Str], ebp
call	g_string_append_len
jmp	loc_67D1C03B
mov	[esp+6Ch+MaxCount], ebx
mov	[esp+6Ch+SubStr], esi
mov	[esp+6Ch+Str], ebp
call	g_string_append_len
jmp	loc_67D1C0C9
call	__stack_chk_fail
align 4
public purple_unescape_text
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1C2BB
mov	[esp+3Ch+var_3C], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
lea	edi, [esp+3Ch+var_24]
cmp	byte ptr [ebx],	0
jnz	short loc_67D1C249
jmp	short loc_67D1C280
align 4
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], esi
call	g_string_append
add	ebx, [esp+3Ch+var_24]
cmp	byte ptr [ebx],	0
jz	short loc_67D1C280
			
mov	[esp+3Ch+var_38], edi 
mov	[esp+3Ch+var_3C], ebx 
call	purple_markup_unescape_entity
test	eax, eax
jnz	short loc_67D1C234
movsx	edx, byte ptr [ebx]
mov	ecx, [esi+4]
lea	eax, [ecx+1]
cmp	eax, [esi+8]
jnb	short loc_67D1C2A4
mov	ebp, [esi]
mov	[ebp+ecx+0], dl
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+ecx+1], 0
inc	ebx
cmp	byte ptr [ebx],	0
jnz	short loc_67D1C249
lea	esi, [esi+0]
			
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], esi
call	g_string_free
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1C2BF
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_string_insert_c
inc	ebx
jmp	short loc_67D1C278
xor	eax, eax
jmp	short loc_67D1C290
call	__stack_chk_fail
public purple_unescape_html
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1C3DA
mov	[esp+3Ch+var_3C], offset byte_67D45CB8
call	g_string_new
mov	ebp, eax
			
cmp	byte ptr [ebx],	0
jz	short loc_67D1C31E
lea	edx, [esp+3Ch+var_24]
mov	[esp+3Ch+var_38], edx 
mov	[esp+3Ch+var_3C], ebx 
call	purple_markup_unescape_entity
test	eax, eax
jz	short loc_67D1C348
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebp
call	g_string_append
add	ebx, [esp+3Ch+var_24]
cmp	byte ptr [ebx],	0
jnz	short loc_67D1C2F5
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebp
call	g_string_free
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1C3E1
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, offset aBr_0 
mov	esi, ebx
mov	ecx, 4
repe cmpsb
jnz	short loc_67D1C37C
mov	edx, [ebp+4]
lea	eax, [edx+1]
cmp	eax, [ebp+8]
jnb	short loc_67D1C3C0
mov	ecx, [ebp+0]
mov	byte ptr [ecx+edx], 0Ah
mov	[ebp+4], eax
mov	edx, [ebp+0]
mov	byte ptr [edx+eax], 0
add	ebx, 4
jmp	loc_67D1C2F0
movsx	edx, byte ptr [ebx]
mov	ecx, [ebp+4]
lea	eax, [ecx+1]
cmp	eax, [ebp+8]
jnb	short loc_67D1C3A4
mov	esi, [ebp+0]
mov	[esi+ecx], dl
mov	[ebp+4], eax
mov	edx, [ebp+0]
mov	byte ptr [edx+ecx+1], 0
inc	ebx
jmp	loc_67D1C2F0
align 4
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], ebp
call	g_string_insert_c
inc	ebx
jmp	loc_67D1C2F0
align 10h
mov	[esp+3Ch+var_34], 0Ah
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], ebp
call	g_string_insert_c
jmp	short loc_67D1C374
xor	eax, eax
jmp	loc_67D1C32E
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	[esp+5Ch+var_38], eax
mov	esi, ecx
mov	edi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	eax, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
movzx	eax, byte ptr [ecx]
mov	ebx, ecx
mov	[esp+5Ch+var_34], ebp
mov	ebp, edx
cmp	al, 3Eh
jbe	short loc_67D1C433
			
mov	eax, ebx
call	sub_67D19D38
test	eax, eax
jnz	short loc_67D1C43C
movzx	eax, byte ptr [ebx+1]
inc	ebx
cmp	al, 3Eh
ja	short loc_67D1C41F
cmp	ds:byte_67D472E0[eax], 0
jz	short loc_67D1C41F
mov	eax, ebx
sub	eax, esi
cmp	eax, edi
jz	loc_67D1C4F0
cmp	byte ptr [ebx],	2Ch
jnz	short loc_67D1C455
movzx	eax, byte ptr [ebx+1]
cmp	al, 20h
jnz	short loc_67D1C42E
mov	edx, ebp
mov	ebp, [esp+5Ch+var_34]
cmp	edx, ebx
jb	short loc_67D1C4D4
			
cmp	ebx, edx
jbe	short loc_67D1C469
cmp	byte ptr [ebx-1], 29h
jz	short loc_67D1C4E0
			
mov	eax, ebx
sub	eax, esi
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_strndup
mov	esi, eax
mov	[esp+5Ch+var_5C], eax 
call	purple_unescape_html
mov	[esp+5Ch+var_4C], esi
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebp
mov	[esp+5Ch+var_58], offset aAHrefSSSA 
mov	edx, [esp+5Ch+var_38]
mov	[esp+5Ch+var_5C], edx
mov	[esp+5Ch+var_3C], eax
call	g_string_append_printf
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_5C], eax
call	g_free
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	eax, ebx
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1C4F4
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	byte ptr [ebx-1], 2Eh
jnz	short loc_67D1C45F
dec	ebx
jmp	short loc_67D1C45F
align 10h
mov	eax, [esp+5Ch+var_30]
test	eax, eax
jle	short loc_67D1C469
dec	ebx
jmp	loc_67D1C469
align 10h
mov	ebx, esi
jmp	short loc_67D1C4BB
call	__stack_chk_fail
align 4
public purple_markup_strip_html
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	eax, [esp+7Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D1CACB
mov	[esp+7Ch+Str1],	eax
call	g_strdup
mov	ebp, eax
movzx	eax, byte ptr [eax]
test	al, al
jz	loc_67D1CABC
mov	edx, ebp
mov	[esp+7Ch+var_50], 0
mov	[esp+7Ch+var_34], 0
mov	[esp+7Ch+Src], 0
xor	esi, esi
mov	[esp+7Ch+var_40], 0
mov	[esp+7Ch+var_48], 1
mov	[esp+7Ch+var_4C], 0
xor	ebx, ebx
mov	ebp, esi
mov	esi, edx
jmp	short loc_67D1C587
align 10h
test	ebp, ebp
jz	loc_67D1C60C
			
inc	ebx
mov	[esp+7Ch+var_50], ebx
lea	esi, [edx+ebx]
movzx	eax, byte ptr [esi]
test	al, al
jz	short loc_67D1C5D8
			
cmp	al, 3Ch
jnz	short loc_67D1C570
test	ebp, ebp
jz	loc_67D1C678
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebp
repne scasb
not	ecx
lea	edi, [ecx-1]
mov	[esp+7Ch+MaxCount], edi
mov	[esp+7Ch+Str2],	ebp
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	short loc_67D1C578
mov	ecx, [esp+7Ch+var_50]
lea	ebx, [ecx+edi-1]
xor	ebp, ebp
inc	ebx
mov	[esp+7Ch+var_50], ebx
lea	esi, [edx+ebx]
movzx	eax, byte ptr [esi]
test	al, al
jnz	short loc_67D1C587
mov	ebp, edx
mov	ebx, [esp+7Ch+var_4C]
mov	eax, [esp+7Ch+Src]
mov	[esp+7Ch+Str1],	eax
call	g_free
mov	byte ptr [ebp+ebx+0], 0
mov	eax, ebp
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1CB93
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edi, ds:g_ascii_table
mov	ecx, [edi]
test	byte ptr [ecx+eax*2+1],	1
jnz	short loc_67D1C623
mov	[esp+7Ch+var_48], 1
			
cmp	byte ptr [esi],	26h
jz	loc_67D1CA6C
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jz	loc_67D1C578
mov	ecx, [esp+7Ch+var_4C]
add	ecx, edx
mov	al, [esi]
movzx	esi, al
mov	edi, [edi]
test	byte ptr [edi+esi*2+1],	1
jnz	short loc_67D1C660
mov	[ecx], al
inc	[esp+7Ch+var_4C]
mov	[esp+7Ch+var_48], 1
jmp	loc_67D1C578
align 10h
mov	al, 20h
mov	[ecx], al
inc	[esp+7Ch+var_4C]
mov	[esp+7Ch+var_48], 1
jmp	loc_67D1C578
align 4
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aTd_0 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	short loc_67D1C6A8
mov	eax, [esp+7Ch+var_40]
test	eax, eax
jnz	loc_67D1C858
mov	[esp+7Ch+MaxCount], 5
mov	[esp+7Ch+Str2],	offset aTd 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
cmp	eax, 1
sbb	ecx, ecx
and	ecx, 1
mov	[esp+7Ch+var_40], ecx
cmp	eax, 1
sbb	eax, eax
inc	eax
mov	[esp+7Ch+var_48], eax
mov	edx, [esp+7Ch+var_54]
lea	ecx, [ebx+1]
mov	[esp+7Ch+var_3C], ecx
mov	edi, ds:g_ascii_table
mov	ecx, [edi]
mov	[esp+7Ch+var_30], ecx
mov	eax, [esp+7Ch+var_3C]
add	eax, edx
mov	[esp+7Ch+var_38], eax
mov	cl, [eax]
mov	[esp+7Ch+var_5D], cl
movzx	eax, cl
mov	ecx, [esp+7Ch+var_30]
test	byte ptr [ecx+eax*2+1],	1
jnz	loc_67D1C61B
cmp	[esp+7Ch+var_5D], 0
jz	loc_67D1C623
cmp	[esp+7Ch+var_5D], 3Ch
jz	short loc_67D1C751
cmp	[esp+7Ch+var_5D], 3Eh
jz	short loc_67D1C751
mov	eax, [esp+7Ch+var_3C]
jmp	short loc_67D1C73E
align 4
cmp	cl, 3Ch
jz	short loc_67D1C749
cmp	cl, 3Eh
jz	short loc_67D1C749
inc	eax
lea	edi, [edx+eax]
mov	cl, [edx+eax]
test	cl, cl
jnz	short loc_67D1C734
			
mov	[esp+7Ch+var_3C], eax
mov	[esp+7Ch+var_38], edi
			
mov	[esp+7Ch+MaxCount], 2
mov	[esp+7Ch+Str2],	offset aA_1 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	loc_67D1C87A
mov	ecx, [esp+7Ch+var_50]
movzx	eax, byte ptr [edx+ecx+2]
mov	ecx, [esp+7Ch+var_30]
test	byte ptr [ecx+eax*2+1],	1
jz	loc_67D1C87A
add	ebx, 3
cmp	[esp+7Ch+var_3C], ebx
jle	loc_67D1C958
mov	esi, edx
mov	edi, [esp+7Ch+var_3C]
jmp	short loc_67D1C7B1
align 4
inc	ebx
cmp	edi, ebx
jle	loc_67D1CAD2
mov	[esp+7Ch+MaxCount], 5
mov	[esp+7Ch+Str2],	offset aHref 
lea	eax, [esi+ebx]
mov	[esp+7Ch+Str1],	eax
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1C7A8
mov	edx, esi
lea	ecx, [ebx+5]
mov	al, [esi+ecx]
cmp	al, 22h
jz	loc_67D1CB56
cmp	al, 27h
jz	loc_67D1CB56
mov	al, 20h
cmp	ecx, [esp+7Ch+var_3C]
jge	loc_67D1C958
lea	esi, [edx+ecx]
cmp	[esi], al
jz	loc_67D1CB8C
mov	ebx, ecx
mov	edi, [esp+7Ch+var_3C]
jmp	short loc_67D1C80D
align 4
cmp	[edx+ebx], al
jz	short loc_67D1C812
inc	ebx
cmp	edi, ebx
jg	short loc_67D1C808
sub	ebx, ecx
mov	ecx, [esp+7Ch+Src]
mov	[esp+7Ch+Str1],	ecx
mov	[esp+7Ch+var_54], edx
call	g_free
mov	[esp+7Ch+Str2],	ebx
mov	[esp+7Ch+Str1],	esi
call	g_strndup
mov	ebx, eax
mov	[esp+7Ch+Str1],	eax 
call	purple_unescape_html
mov	[esp+7Ch+Src], eax
mov	[esp+7Ch+Str1],	ebx
call	g_free
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_34], eax
mov	edx, [esp+7Ch+var_54]
jmp	loc_67D1C958
align 4
mov	eax, [esp+7Ch+var_4C]
mov	byte ptr [edx+eax], 9
inc	eax
mov	[esp+7Ch+var_4C], eax
mov	[esp+7Ch+var_40], 1
mov	[esp+7Ch+var_48], 1
jmp	loc_67D1C6DE
			
mov	eax, [esp+7Ch+Src]
test	eax, eax
jz	loc_67D1C974
mov	[esp+7Ch+MaxCount], 4
mov	[esp+7Ch+Str2],	offset aA_0 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	loc_67D1C974
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+7Ch+Src]
repne scasb
not	ecx
lea	ebx, [ecx-1]
mov	esi, [esp+7Ch+var_4C]
sub	esi, [esp+7Ch+var_34]
cmp	esi, ebx
jz	loc_67D1CAD9
lea	eax, [esi+7]
cmp	eax, ebx
jnz	short loc_67D1C8FE
mov	[esp+7Ch+MaxCount], esi	
mov	eax, [esp+7Ch+Src]
add	eax, 7
mov	[esp+7Ch+Str2],	eax 
mov	eax, [esp+7Ch+var_34]
add	eax, edx
mov	[esp+7Ch+Str1],	eax 
mov	[esp+7Ch+var_54], edx
call	strncmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	short loc_67D1C958
mov	ecx, [esp+7Ch+var_4C]
mov	byte ptr [edx+ecx], 20h
mov	byte ptr [edx+ecx+1], 28h
mov	esi, ecx
add	esi, 2
mov	[esp+7Ch+MaxCount], ebx	
mov	eax, [esp+7Ch+Src]
mov	[esp+7Ch+Str2],	eax 
lea	eax, [edx+esi]
mov	[esp+7Ch+Str1],	eax 
mov	[esp+7Ch+var_54], edx
call	memmove
add	ebx, esi
mov	edx, [esp+7Ch+var_54]
mov	byte ptr [edx+ebx], 29h
inc	ebx
mov	[esp+7Ch+var_4C], ebx
mov	ecx, [esp+7Ch+Src]
mov	[esp+7Ch+Str1],	ecx
mov	[esp+7Ch+var_54], edx
call	g_free
mov	[esp+7Ch+Src], 0
mov	edx, [esp+7Ch+var_54]
xchg	ax, ax
			
mov	ecx, [esp+7Ch+var_38]
mov	al, [ecx]
mov	ebx, [esp+7Ch+var_3C]
cmp	al, 3Ch
jz	short loc_67D1C96E
test	al, al
jnz	loc_67D1C578
dec	ebx
jmp	loc_67D1C578
			
mov	eax, [esp+7Ch+var_4C]
test	eax, eax
jz	loc_67D1CA30
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aP 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	loc_67D1CA58
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aTr 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	loc_67D1CA58
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aHr_1 
mov	[esp+7Ch+Str1],	esi
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	short loc_67D1CA58
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aLi_1 
mov	[esp+7Ch+Str1],	esi
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	short loc_67D1CA58
mov	[esp+7Ch+MaxCount], 4
mov	[esp+7Ch+Str2],	offset aDiv 
mov	[esp+7Ch+Str1],	esi
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	short loc_67D1CA58
mov	[esp+7Ch+MaxCount], 3
mov	[esp+7Ch+Str2],	offset aBr_1 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	loc_67D1CB04
			
mov	eax, [esp+7Ch+var_4C]
mov	byte ptr [edx+eax], 0Ah
inc	eax
mov	[esp+7Ch+var_4C], eax
jmp	loc_67D1C958
align 4
lea	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+Str2],	eax 
mov	[esp+7Ch+Str1],	esi 
mov	[esp+7Ch+var_54], edx
call	purple_markup_unescape_entity
mov	[esp+7Ch+var_50], eax
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	loc_67D1C62C
mov	al, [eax]
mov	ecx, [esp+7Ch+var_4C]
test	al, al
jz	short loc_67D1CAAB
mov	esi, [esp+7Ch+var_50]
sub	esi, ecx
mov	[edx+ecx], al
inc	ecx
mov	al, [esi+ecx]
test	al, al
jnz	short loc_67D1CAA0
mov	eax, [esp+7Ch+var_24]
lea	ebx, [ebx+eax-1]
mov	[esp+7Ch+var_4C], ecx
jmp	loc_67D1C578
xor	ebx, ebx
mov	[esp+7Ch+Src], 0
jmp	loc_67D1C5DE
xor	ebp, ebp
jmp	loc_67D1C5EF
mov	edx, esi
jmp	loc_67D1C958
mov	[esp+7Ch+MaxCount], esi	
mov	eax, [esp+7Ch+Src]
mov	[esp+7Ch+Str2],	eax 
mov	eax, [esp+7Ch+var_34]
add	eax, edx
mov	[esp+7Ch+Str1],	eax 
call	strncmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	loc_67D1C958
jmp	loc_67D1C8CE
mov	[esp+7Ch+MaxCount], 8
mov	[esp+7Ch+Str2],	offset aTable 
mov	[esp+7Ch+Str1],	esi
mov	[esp+7Ch+var_54], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jz	loc_67D1CA58
mov	[esp+7Ch+MaxCount], 7
mov	[esp+7Ch+Str2],	offset aScript 
mov	[esp+7Ch+Str1],	esi
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	short loc_67D1CB5E
mov	ebp, offset aScript_0 
jmp	loc_67D1C958
			
lea	ecx, [ebx+6]
jmp	loc_67D1C7EA
mov	[esp+7Ch+MaxCount], 6
mov	[esp+7Ch+Str2],	offset aStyle 
mov	[esp+7Ch+Str1],	esi
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+7Ch+var_54]
jnz	loc_67D1C958
mov	ebp, offset aStyle_0 
jmp	loc_67D1C958
xor	ebx, ebx
jmp	loc_67D1C814
call	__stack_chk_fail
public purple_markup_get_css_property
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D1CD05
test	ebx, ebx
jz	short loc_67D1CC13
mov	eax, ds:g_ascii_table
mov	ebp, [eax]
lea	esi, [esi+0]
movzx	eax, byte ptr [ebx]
test	al, al
jnz	short loc_67D1CC30
mov	ax, [ebp+0]
test	al, 2
jz	short loc_67D1CC13
mov	ecx, 0FFFFFFFFh
mov	edi, esi
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_44], ecx
mov	[esp+4Ch+var_48], esi
mov	[esp+4Ch+var_4C], ebx
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D1CC3D
mov	al, [ebx]
test	al, al
jnz	short loc_67D1CC0F
jmp	short loc_67D1CC13
align 4
cmp	al, 3Bh
jz	short loc_67D1CC3A
inc	ebx
mov	al, [ebx]
test	al, al
jz	short loc_67D1CC13
cmp	al, 22h
jnz	short loc_67D1CC04
			
xor	eax, eax
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1CD28
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	ax, [ebp+eax*2+0]
test	ah, 1
jz	short loc_67D1CBD3
inc	ebx
jmp	short loc_67D1CBC8
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	eax, [ebx+ecx-1]
mov	dl, [eax]
test	dl, dl
jnz	short loc_67D1CC5F
jmp	short loc_67D1CC13
align 4
inc	eax
mov	dl, [eax]
test	dl, dl
jz	short loc_67D1CC13
movzx	ecx, dl
test	byte ptr [ebp+ecx*2+1],	1
jnz	short loc_67D1CC58
cmp	dl, 3Ah
jnz	short loc_67D1CC13
lea	edx, [eax+1]
mov	al, [eax+1]
test	al, al
jnz	short loc_67D1CC83
jmp	short loc_67D1CC13
align 4
inc	edx
mov	al, [edx]
test	al, al
jz	short loc_67D1CC13
movzx	ecx, al
test	byte ptr [ebp+ecx*2+1],	1
jnz	short loc_67D1CC7C
cmp	al, 22h
jz	short loc_67D1CC13
cmp	al, 3Bh
jz	loc_67D1CC13
mov	al, [edx]
mov	ecx, edx
test	al, al
jnz	short loc_67D1CCAF
jmp	short loc_67D1CCB3
align 4
cmp	al, 3Bh
jz	short loc_67D1CCB3
inc	ecx
mov	al, [ecx]
test	al, al
jz	short loc_67D1CCB3
cmp	al, 22h
jnz	short loc_67D1CCA4
			
lea	eax, [ecx-1]
cmp	eax, edx
jbe	short loc_67D1CCD7
movzx	ecx, byte ptr [ecx-1]
test	byte ptr [ebp+ecx*2+1],	1
jnz	short loc_67D1CCD2
jmp	short loc_67D1CCD7
align 4
movzx	ecx, byte ptr [eax]
test	byte ptr [ebp+ecx*2+1],	1
jz	short loc_67D1CCD7
dec	eax
cmp	eax, edx
jnz	short loc_67D1CCC8
			
sub	eax, edx
inc	eax
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], edx
call	g_strndup
mov	ebx, eax
mov	[esp+4Ch+var_4C], eax 
call	purple_unescape_html
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_30], eax
call	g_free
mov	eax, [esp+4Ch+var_30]
jmp	loc_67D1CC15
mov	[esp+4Ch+var_44], offset aOptNull 
mov	[esp+4Ch+var_48], offset aPurple_marku_2 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1CC15
call	__stack_chk_fail
align 10h
public purple_markup_is_rtl
push	esi
push	ebx
sub	esp, 44h
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
lea	ebx, [esp+4Ch+var_1C]
mov	[esp+4Ch+var_3C], ebx
lea	eax, [esp+4Ch+var_14]
mov	[esp+4Ch+var_40], eax
lea	eax, [esp+4Ch+var_18]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], offset aSpan 
call	purple_markup_find_tag
test	eax, eax
jnz	short loc_67D1CD88
xor	eax, eax
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1CE30
add	esp, 44h
pop	ebx
pop	esi
retn
mov	[esp+4Ch+var_4C], offset aDir_0	
call	g_quark_try_string
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_datalist_id_get_data
test	eax, eax
jz	short loc_67D1CDD0
mov	[esp+4Ch+var_48], offset aRtl 
mov	[esp+4Ch+var_4C], eax
call	g_ascii_strcasecmp
test	eax, eax
jnz	short loc_67D1CDD0
mov	eax, 1
			
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_20], eax
call	g_datalist_clear
mov	eax, [esp+4Ch+var_20]
jmp	short loc_67D1CD72
align 10h
			
mov	[esp+4Ch+var_4C], offset aStyle_1 
call	g_quark_try_string
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], ebx
call	g_datalist_id_get_data
test	eax, eax
jz	short loc_67D1CDBD
mov	[esp+4Ch+var_48], offset aDirection 
mov	[esp+4Ch+var_4C], eax
call	purple_markup_get_css_property
mov	esi, eax
test	eax, eax
jz	short loc_67D1CE2C
mov	[esp+4Ch+var_48], offset aRtl 
mov	[esp+4Ch+var_4C], eax
call	g_ascii_strcasecmp
test	eax, eax
setz	al
movzx	eax, al
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_20], eax
call	g_free
mov	eax, [esp+4Ch+var_20]
jmp	short loc_67D1CDBD
xor	eax, eax
jmp	short loc_67D1CE1A
call	__stack_chk_fail
align 4
public purple_markup_get_tag_name
push	ebx
sub	esp, 28h
mov	ecx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	short loc_67D1CEC8
cmp	byte ptr [ecx],	3Ch
jz	short loc_67D1CE84
mov	[esp+2Ch+var_24], offset aTag 
mov	[esp+2Ch+var_28], offset aPurple_marku_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1CEEC
add	esp, 28h
pop	ebx
retn
align 4
lea	ebx, [ecx+1]
mov	al, [ecx+1]
test	al, al
jz	short loc_67D1CEE8
cmp	al, 3Eh
jz	short loc_67D1CEE8
cmp	al, 20h
jz	short loc_67D1CEE8
cmp	al, 2Fh
jz	short loc_67D1CEE8
mov	edx, 1
jmp	short loc_67D1CEB0
align 4
cmp	al, 3Eh
jz	short loc_67D1CEB8
cmp	al, 20h
jz	short loc_67D1CEB8
cmp	al, 2Fh
jz	short loc_67D1CEB8
inc	edx
mov	al, [ecx+edx]
test	al, al
jnz	short loc_67D1CEA4
			
dec	edx
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], ebx
call	g_strndup
jmp	short loc_67D1CE72
align 4
mov	[esp+2Ch+var_24], offset aTagNull 
mov	[esp+2Ch+var_28], offset aPurple_marku_3 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1CE72
			
xor	edx, edx
jmp	short loc_67D1CEB9
call	__stack_chk_fail
align 4
public purple_markup_slice
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_40], edx
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_44], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D1D1E0
mov	edx, [esp+5Ch+var_44]
cmp	[esp+5Ch+var_40], edx
jbe	short loc_67D1CF64
mov	[esp+5Ch+var_54], offset aXY 
mov	[esp+5Ch+Val], offset aPurple_marku_4 
mov	[esp+5Ch+Str], 0
call	g_return_if_fail_warning
			
xor	eax, eax
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1D2D0
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
jz	loc_67D1D1BC
mov	[esp+5Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	[esp+5Ch+var_3C], eax
call	g_queue_new
mov	[esp+5Ch+var_38], eax
cmp	byte ptr [esi],	0
jz	short loc_67D1CFE3
mov	edx, [esp+5Ch+var_44]
test	edx, edx
jz	short loc_67D1CFE3
mov	[esp+5Ch+var_34], 0
xor	ebx, ebx
mov	edi, ds:g_utf8_skip
mov	[esp+5Ch+Str], esi
call	g_utf8_get_char
mov	ebp, eax
cmp	eax, 3Ch
jz	loc_67D1D0CC
cmp	eax, 26h
jz	loc_67D1D114
cmp	ebx, [esp+5Ch+var_40]
jz	loc_67D1D068
jnb	loc_67D1D0B5
inc	ebx
			
movzx	eax, byte ptr [esi]
mov	ecx, [edi]
movsx	eax, byte ptr [ecx+eax]
add	esi, eax
cmp	byte ptr [esi],	0
jz	short loc_67D1CFE3
cmp	ebx, [esp+5Ch+var_44]
jb	short loc_67D1CFA0
			
mov	ebp, [esp+5Ch+var_3C]
mov	edi, [esp+5Ch+var_38]
jmp	short loc_67D1D01E
align 10h
mov	[esp+5Ch+Str], ebx
call	purple_markup_get_tag_name
mov	esi, eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], offset aS_10 
mov	[esp+5Ch+Str], ebp
call	g_string_append_printf
mov	[esp+5Ch+Str], esi
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_free
mov	[esp+5Ch+Str], edi
call	g_queue_pop_head
mov	ebx, eax
test	eax, eax
jnz	short loc_67D1CFF0
mov	[esp+5Ch+var_3C], ebp
mov	[esp+5Ch+var_38], edi
mov	[esp+5Ch+Str], edi
call	g_queue_free
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1D2D0
mov	[esp+5Ch+arg_4], 0
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+arg_0], eax
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
test	ebx, ebx
jz	short loc_67D1D0B5
mov	eax, [esp+5Ch+var_34]
test	eax, eax
jnz	short loc_67D1D0B5
mov	eax, [esp+5Ch+var_38]
mov	ecx, [eax+4]
test	ecx, ecx
jz	short loc_67D1D0AD
mov	[esp+5Ch+var_34], ebx
mov	ebx, [esp+5Ch+var_3C]
mov	[esp+5Ch+var_30], esi
mov	esi, ecx
lea	esi, [esi+0]
mov	eax, [esi]
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], ebx
call	g_string_append
mov	esi, [esi+8]
test	esi, esi
jnz	short loc_67D1D090
mov	ebx, [esp+5Ch+var_34]
mov	esi, [esp+5Ch+var_30]
mov	[esp+5Ch+var_34], 1
			
mov	[esp+5Ch+Val], ebp
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_string_append_unichar
jmp	loc_67D1CFCC
align 4
mov	[esp+5Ch+Val], 3Eh 
mov	[esp+5Ch+Str], esi 
call	strchr
mov	ebp, eax
test	eax, eax
jz	loc_67D1D23A
mov	[esp+5Ch+var_54], 5
mov	[esp+5Ch+Val], offset aImg 
mov	[esp+5Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1D15C
add	ebx, 7
			
cmp	ebx, [esp+5Ch+var_40]
jnb	short loc_67D1D13C
mov	esi, ebp
jmp	loc_67D1CFCD
align 4
mov	[esp+5Ch+Val], 3Bh 
mov	[esp+5Ch+Str], esi 
call	strchr
mov	ebp, eax
test	eax, eax
jz	loc_67D1D279
cmp	ebx, [esp+5Ch+var_40]
jnb	short loc_67D1D17C
inc	ebx
mov	esi, ebp
jmp	loc_67D1CFCD
mov	eax, ebp
sub	eax, esi
inc	eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], esi
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_string_append_len
mov	esi, ebp
jmp	loc_67D1CFCD
mov	[esp+5Ch+var_54], 3
mov	[esp+5Ch+Val], offset aBr_1 
mov	[esp+5Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1D198
inc	ebx
jmp	short loc_67D1D105
align 4
sub	eax, esi
inc	eax
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Val], esi
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_string_append_len
jmp	short loc_67D1D134
align 4
mov	[esp+5Ch+var_54], 4
mov	[esp+5Ch+Val], offset aHr_0 
mov	[esp+5Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1D201
add	ebx, 5
jmp	loc_67D1D105
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1D2D0
mov	[esp+5Ch+arg_0], offset	byte_67D45CB8
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
mov	[esp+5Ch+var_54], offset aStrNull_0 
mov	[esp+5Ch+Val], offset aPurple_marku_4 
mov	[esp+5Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_67D1CF48
mov	[esp+5Ch+var_54], 2
mov	[esp+5Ch+Val], offset asc_67D45FAA 
mov	[esp+5Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1D2AA
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str], eax
call	g_queue_pop_head
mov	[esp+5Ch+Str], eax
call	g_free
jmp	loc_67D1D105
mov	[esp+5Ch+Val], 1
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_string_free
mov	ebx, [esp+5Ch+var_38]
jmp	short loc_67D1D25C
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_queue_pop_head
test	eax, eax
jnz	short loc_67D1D254
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str], eax
call	g_queue_free
jmp	loc_67D1CF48
mov	[esp+5Ch+Val], 1
mov	eax, [esp+5Ch+var_3C]
mov	[esp+5Ch+Str], eax
call	g_string_free
mov	ebx, [esp+5Ch+var_38]
jmp	short loc_67D1D29C
align 4
mov	[esp+5Ch+Str], eax
call	g_free
mov	[esp+5Ch+Str], ebx
call	g_queue_pop_head
test	eax, eax
jnz	short loc_67D1D294
jmp	short loc_67D1D268
mov	eax, ebp
sub	eax, esi
inc	eax
mov	[esp+5Ch+Val], eax
mov	[esp+5Ch+Str], esi
call	g_strndup
mov	[esp+5Ch+Val], eax
mov	eax, [esp+5Ch+var_38]
mov	[esp+5Ch+Str], eax
call	g_queue_push_head
jmp	loc_67D1D105
			
call	__stack_chk_fail
align 4
public purple_home_dir
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1D2FA
add	esp, 1Ch
jmp	wpurple_data_dir
call	__stack_chk_fail
align 10h
public purple_user_dir
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72440
test	eax, eax
jz	short loc_67D1D328
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1D355
add	esp, 2Ch
retn
align 4
mov	eax, ds:dword_67D72444
test	eax, eax
jnz	short loc_67D1D317
call	wpurple_data_dir
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], offset a_purple 
mov	[esp+2Ch+var_2C], eax
call	g_build_filename
mov	ds:dword_67D72444, eax
jmp	short loc_67D1D317
call	__stack_chk_fail
align 4
public purple_util_set_user_dir
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D72440
mov	[esp+2Ch+var_2C], eax
call	g_free
test	ebx, ebx
jz	short loc_67D1D385
cmp	byte ptr [ebx],	0
jnz	short loc_67D1D3A0
mov	ds:dword_67D72440, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D1D3AF
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_2C], ebx
call	g_strdup
mov	ds:dword_67D72440, eax
jmp	short loc_67D1D38F
call	__stack_chk_fail
public purple_build_dir
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D1D3E7
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_mkdir_with_parents
call	__stack_chk_fail
public purple_util_write_data_to_file_absolute
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edx, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_54], edx
mov	eax, [esp+7Ch+arg_4]
mov	[esp+7Ch+var_50], eax
mov	esi, [esp+7Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], edx
xor	edx, edx
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Count], edx
mov	[esp+7Ch+Size],	offset aWritingFileS 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_info
cmp	esi, 0FFFFFFFFh
jl	loc_67D1D570
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Size],	edx
mov	[esp+7Ch+Str], offset aS_save 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+7Ch+Size],	10h
mov	[esp+7Ch+Str], eax
call	g_file_test_utf8
test	eax, eax
jnz	loc_67D1D530
			
mov	[esp+7Ch+Size],	offset aWb_4 
mov	[esp+7Ch+Str], ebx
call	g_fopen
mov	ebp, eax
test	eax, eax
jz	loc_67D1D68C
cmp	esi, 0FFFFFFFFh
jz	loc_67D1D590
mov	[esp+7Ch+File],	ebp 
mov	[esp+7Ch+Count], esi 
mov	[esp+7Ch+Size],	1 
mov	eax, [esp+7Ch+var_50]
mov	[esp+7Ch+Str], eax 
call	fwrite
mov	edi, eax
mov	[esp+7Ch+Str], ebp 
call	fflush
test	eax, eax
js	loc_67D1D624
mov	eax, [ebp+10h]
mov	[esp+7Ch+Str], eax
call	_commit
test	eax, eax
js	loc_67D1D668
mov	[esp+7Ch+Str], ebp 
call	fclose
test	eax, eax
jnz	loc_67D1D5A4
cmp	esi, edi
jz	loc_67D1D5E0
mov	[esp+7Ch+var_6C], esi
mov	[esp+7Ch+File],	edi
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorWritingTo 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
mov	[esp+7Ch+Str], ebx
call	g_free
xor	eax, eax
			
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1D70A
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+7Ch+Str], ebx
call	g_unlink
inc	eax
jnz	loc_67D1D46F
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorRemovingO 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
jmp	loc_67D1D46F
align 10h
mov	[esp+7Ch+Count], offset	aSize1 
mov	[esp+7Ch+Size],	offset aPurple_util_wr 
mov	[esp+7Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1D515
xor	eax, eax
mov	ecx, esi
mov	edi, [esp+7Ch+var_50]
repne scasb
not	ecx
lea	esi, [ecx-1]
jmp	loc_67D1D492
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorClosingFi 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
mov	[esp+7Ch+Str], ebx
call	g_free
xor	eax, eax
jmp	loc_67D1D515
align 10h
lea	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+Size],	eax
mov	[esp+7Ch+Str], ebx
call	g_stat
inc	eax
jz	short loc_67D1D5FD
cmp	esi, [esp+7Ch+var_30]
jz	loc_67D1D6B0
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorWritingDa 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
mov	[esp+7Ch+Str], ebx
call	g_free
xor	eax, eax
jmp	loc_67D1D515
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorFlushingS 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
mov	[esp+7Ch+Str], ebx
call	g_free
mov	[esp+7Ch+Str], ebp 
call	fclose
xor	eax, eax
jmp	loc_67D1D515
align 4
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorSyncingFi 
jmp	short loc_67D1D643
align 4
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+File],	eax
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorOpening_1 
jmp	loc_67D1D5C3
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+Size],	edx
mov	[esp+7Ch+Str], ebx
call	g_rename
inc	eax
jz	short loc_67D1D6D5
mov	[esp+7Ch+Str], ebx
call	g_free
mov	eax, 1
jmp	loc_67D1D515
call	_errno
mov	eax, [eax]
mov	[esp+7Ch+Str], eax
call	wpurple_strerror
mov	[esp+7Ch+var_6C], eax
mov	edx, [esp+7Ch+var_54]
mov	[esp+7Ch+File],	edx
mov	[esp+7Ch+Count], ebx
mov	[esp+7Ch+Size],	offset aErrorRenamin_0 
mov	[esp+7Ch+Str], offset aUtil 
call	purple_debug_error
jmp	short loc_67D1D6C3
call	__stack_chk_fail
align 10h
public purple_util_write_data_to_file
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	edi, [esp+4Ch+arg_4]
mov	ebp, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
call	purple_user_dir
mov	ebx, eax
test	eax, eax
jz	loc_67D1D7FC
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], offset aWritingFileSTo 
mov	[esp+4Ch+var_4C], offset aUtil 
call	purple_debug_info
mov	[esp+4Ch+var_48], 4
mov	[esp+4Ch+var_4C], ebx
call	g_file_test_utf8
test	eax, eax
jz	short loc_67D1D7B8
mov	[esp+4Ch+var_44], esi
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], offset aSS_4 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+4Ch+var_44], ebp 
mov	[esp+4Ch+var_48], edi 
mov	[esp+4Ch+var_4C], eax 
call	purple_util_write_data_to_file_absolute
mov	[esp+4Ch+var_4C], ebx
mov	[esp+4Ch+var_30], eax
call	g_free
mov	eax, [esp+4Ch+var_30]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1D81C
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+var_48], 1C0h
mov	[esp+4Ch+var_4C], ebx
call	g_mkdir
inc	eax
jnz	short loc_67D1D76D
call	_errno
mov	eax, [eax]
mov	[esp+4Ch+var_4C], eax
call	wpurple_strerror
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], ebx
mov	[esp+4Ch+var_48], offset aErrorCreatin_0 
mov	[esp+4Ch+var_4C], offset aUtil 
call	purple_debug_error
xor	eax, eax
jmp	short loc_67D1D7A3
align 4
mov	[esp+4Ch+var_44], offset aUser_dirNull 
mov	[esp+4Ch+var_48], offset aPurple_util__0 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1D7A3
call	__stack_chk_fail
align 4
public purple_util_read_xml_from_file
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
call	purple_user_dir
mov	[esp+2Ch+var_20], offset aUtil 
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	xmlnode_from_file
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1D86B
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
public purple_mkstemp
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D1D93C
call	g_get_tmp_dir_utf8
test	eax, eax
jz	loc_67D1D95C
mov	[esp+3Ch+var_34], offset aPurplexxxxxx 
mov	[esp+3Ch+Format], eax
mov	[esp+3Ch+FileHandle], offset aSS_4 
call	g_strdup_printf
mov	[ebx], eax
test	eax, eax
jz	short loc_67D1D8F4
mov	[esp+3Ch+FileHandle], eax
call	g_mkstemp_utf8
mov	esi, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D1D8F8
mov	[esp+3Ch+Format], offset aR 
mov	[esp+3Ch+FileHandle], eax 
call	_fdopen
test	eax, eax
jz	loc_67D1D980
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1D9B4
add	esp, 34h
pop	ebx
pop	esi
retn
xor	eax, eax
jmp	short loc_67D1D8DE
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_2C], eax
mov	eax, [ebx]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aCouldnTMakeSEr 
mov	[esp+3Ch+Format], offset aPurple_mkstemp 
mov	[esp+3Ch+FileHandle], 4
call	purple_debug
mov	eax, [ebx]
mov	[esp+3Ch+FileHandle], eax
call	g_free
mov	dword ptr [ebx], 0
xor	eax, eax
jmp	short loc_67D1D8DE
align 4
mov	[esp+3Ch+var_34], offset aFpathNull 
mov	[esp+3Ch+Format], offset aPurple_mkste_0 
mov	[esp+3Ch+FileHandle], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1D8DE
mov	[esp+3Ch+var_34], offset aG_get_tmp_dirF 
mov	[esp+3Ch+Format], offset aPurple_mkstemp 
mov	[esp+3Ch+FileHandle], 4
call	purple_debug
xor	eax, eax
jmp	loc_67D1D8DE
align 10h
mov	[esp+3Ch+FileHandle], esi 
call	wpurple_close
call	_errno
mov	eax, [eax]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aCouldnTFdopenE 
mov	[esp+3Ch+Format], offset aPurple_mkstemp 
mov	[esp+3Ch+FileHandle], 4
call	purple_debug
jmp	loc_67D1D925
call	__stack_chk_fail
align 4
public purple_util_get_image_extension
			
push	edi
push	esi
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	loc_67D1DAB8
test	edx, edx
jnz	short loc_67D1DA18
mov	[esp+2Ch+var_24], offset aLen0_0 
mov	[esp+2Ch+var_28], offset aPurple_util_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1DAE6
add	esp, 24h
pop	esi
pop	edi
retn
align 4
cmp	edx, 3
ja	short loc_67D1DA24
mov	eax, offset aIcon 
jmp	short loc_67D1D9FF
mov	edi, offset aGif8 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jz	short loc_67D1DAAC
mov	edi, offset dword_67D46254
mov	ecx, 3
mov	esi, eax
repe cmpsb
jz	short loc_67D1DA94
mov	edi, offset aIpng 
mov	ecx, 4
mov	esi, eax
repe cmpsb
jz	loc_67D1DADC
mov	edi, offset aMm	
mov	ecx, 2
mov	esi, eax
repe cmpsb
jz	short loc_67D1DAA0
mov	edi, offset aIi	
mov	ecx, 2
mov	esi, eax
repe cmpsb
jz	short loc_67D1DAA0
mov	edi, offset aBm	
mov	ecx, 2
mov	esi, eax
repe cmpsb
jnz	short loc_67D1DA1D
mov	eax, offset aBmp 
jmp	loc_67D1D9FF
align 4
mov	eax, offset aJpg 
jmp	loc_67D1D9FF
align 10h
			
mov	eax, offset aTif 
jmp	loc_67D1D9FF
align 4
mov	eax, offset aGif 
jmp	loc_67D1D9FF
align 4
mov	[esp+2Ch+var_24], offset aDataNull_5 
mov	[esp+2Ch+var_28], offset aPurple_util_ge 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D1D9FF
align 4
mov	eax, offset aPng 
jmp	loc_67D1D9FF
call	__stack_chk_fail
align 4
public purple_util_get_image_checksum
			
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_10], eax
xor	eax, eax
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], offset aSha1_0 
call	purple_cipher_context_new_by_name
mov	ebx, eax
test	eax, eax
jz	loc_67D1DBC8
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], esi
mov	[esp+5Ch+var_5C], eax
call	purple_cipher_context_append
mov	[esp+5Ch+var_50], 0
lea	esi, [esp+5Ch+var_39]
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], 29h
mov	[esp+5Ch+var_5C], ebx
call	purple_cipher_context_digest_to_str
test	eax, eax
jz	short loc_67D1DB7C
mov	[esp+5Ch+var_5C], ebx
call	purple_cipher_context_destroy
mov	[esp+5Ch+var_5C], esi
call	g_strdup
mov	edx, [esp+5Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DBEE
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+5Ch+var_58], offset aFailedToGetSha 
mov	[esp+5Ch+var_5C], offset aUtil 
call	purple_debug_error
mov	[esp+5Ch+var_48], offset aPurple_util__1 
mov	[esp+5Ch+var_4C], 0B0Eh
mov	[esp+5Ch+var_50], offset aUtil_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_9 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
xor	eax, eax
jmp	short loc_67D1DB67
mov	[esp+5Ch+var_58], offset aCouldNotFindSh 
mov	[esp+5Ch+var_5C], offset aUtil 
call	purple_debug_error
mov	[esp+5Ch+var_48], offset aPurple_util__1 
mov	[esp+5Ch+var_4C], 0B06h
jmp	short loc_67D1DBA0
call	__stack_chk_fail
align 4
public purple_util_get_image_filename
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_util_get_image_checksum
mov	ebx, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_util_get_image_extension
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], ebx
mov	[esp+3Ch+var_3C], offset aS_S_0	
call	g_strdup_printf
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DC5E
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_program_is_valid
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_18], 0
test	ebx, ebx
jz	loc_67D1DDA4
cmp	byte ptr [ebx],	0
jz	loc_67D1DD24
lea	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+var_30], eax
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_34], eax
mov	[esp+3Ch+var_38], 0
mov	[esp+3Ch+var_3C], ebx
call	g_shell_parse_argv
test	eax, eax
jz	loc_67D1DD58
mov	eax, [esp+3Ch+var_14]
test	eax, eax
jz	loc_67D1DDA0
mov	eax, [eax]
mov	[esp+3Ch+var_3C], eax
call	g_find_program_in_path_utf8
mov	edi, eax
xor	edx, edx
test	eax, eax
setnz	dl
mov	esi, edx
call	purple_debug_is_verbose
test	eax, eax
jz	short loc_67D1DD0D
test	esi, esi
jnz	loc_67D1DD94
mov	eax, offset aInvalid 
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], offset aTestedProgramS 
mov	[esp+3Ch+var_3C], offset aProgram_is_val 
call	purple_debug_info
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_3C], eax
call	g_strfreev
mov	[esp+3Ch+var_3C], edi
call	g_free
jmp	short loc_67D1DD42
align 4
mov	[esp+3Ch+var_34], offset aProgram0 
mov	[esp+3Ch+var_38], offset aPurple_program 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
			
mov	eax, esi
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DDC7
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+3Ch+var_18]
mov	eax, [eax+8]
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], ebx
mov	[esp+3Ch+var_34], offset aCouldNotParseP 
mov	[esp+3Ch+var_38], offset aProgram_is_val 
mov	[esp+3Ch+var_3C], 4
call	purple_debug
mov	eax, [esp+3Ch+var_18]
mov	[esp+3Ch+var_3C], eax
call	g_error_free
xor	esi, esi
jmp	short loc_67D1DD42
align 4
mov	eax, offset aValid 
jmp	loc_67D1DCF1
align 10h
xor	esi, esi
jmp	short loc_67D1DD42
mov	[esp+3Ch+var_34], offset aProgramNull 
mov	[esp+3Ch+var_38], offset aPurple_program 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D1DD42
call	__stack_chk_fail
public purple_running_gnome
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DDEA
add	esp, 1Ch
retn
call	__stack_chk_fail
align 10h
public purple_running_kde
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DE0E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_running_osx
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DE32
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_fd_get_ip
sub	esp, 0ACh
mov	eax, [esp+0ACh+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+0ACh+var_10], edx
xor	edx, edx
mov	[esp+0ACh+var_98], 80h
test	eax, eax
jz	short loc_67D1DEB0
lea	edx, [esp+0ACh+var_98]
mov	[esp+0ACh+var_A4], edx 
lea	edx, [esp+0ACh+var_94]
mov	[esp+0ACh+var_A8], edx 
mov	dword ptr [esp+0ACh+in.S_un], eax 
call	wpurple_getsockname
test	eax, eax
jnz	short loc_67D1DED0
cmp	[esp+0ACh+var_94.sa_family], 2
jnz	short loc_67D1DED0
mov	eax, dword ptr [esp+0ACh+var_94.sa_data+2]
mov	dword ptr [esp+0ACh+in.S_un], eax 
call	inet_ntoa
push	ecx
mov	dword ptr [esp+0ACh+in.S_un], eax
call	g_strdup
			
mov	edx, [esp+0ACh+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DED4
add	esp, 0ACh
retn
align 10h
mov	[esp+0ACh+var_A4], offset aFd0_0 
mov	[esp+0ACh+var_A8], offset aPurple_fd_get_ 
mov	dword ptr [esp+0ACh+in.S_un], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1DE99
			
xor	eax, eax
jmp	short loc_67D1DE99
call	__stack_chk_fail
align 4
public purple_socket_get_family
sub	esp, 0ACh
mov	eax, [esp+0ACh+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+0ACh+var_10], edx
xor	edx, edx
mov	[esp+0ACh+var_98], 80h
test	eax, eax
js	short loc_67D1DF3C
lea	edx, [esp+0ACh+var_98]
mov	[esp+0ACh+var_A4], edx 
lea	edx, [esp+0ACh+var_94]
mov	[esp+0ACh+var_A8], edx 
mov	[esp+0ACh+var_AC], eax 
call	wpurple_getsockname
test	eax, eax
jnz	short loc_67D1DF60
movzx	eax, [esp+0ACh+var_94.sa_family]
			
mov	edx, [esp+0ACh+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DF67
add	esp, 0ACh
retn
align 4
mov	[esp+0ACh+var_A4], offset aFd0_1 
mov	[esp+0ACh+var_A8], offset aPurple_socket_ 
mov	[esp+0ACh+var_AC], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67D1DF25
align 10h
mov	eax, 0FFFFFFFFh
jmp	short loc_67D1DF25
call	__stack_chk_fail
public purple_socket_speaks_ipv4
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
js	short loc_67D1DFA4
mov	[esp+2Ch+var_2C], eax 
call	purple_socket_get_family
cmp	eax, 2
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1DFC4
add	esp, 2Ch
retn
mov	[esp+2Ch+var_24], offset aFd0_1	
mov	[esp+2Ch+var_28], offset aPurple_socke_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D1DF94
call	__stack_chk_fail
align 4
public purple_strequal
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	g_strcmp0
test	eax, eax
setz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D1E006
add	esp, 2Ch
retn
call	__stack_chk_fail
align 4
public purple_markup_html_to_xhtml
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 7Ch
mov	ebx, [esp+8Ch+arg_0]
mov	[esp+8Ch+var_38], ebx
mov	esi, [esp+8Ch+arg_4]
mov	[esp+8Ch+var_34], esi
mov	ebx, [esp+8Ch+arg_8]
mov	[esp+8Ch+var_30], ebx
mov	esi, ds:__stack_chk_guard
mov	[esp+8Ch+var_20], esi
xor	esi, esi
mov	edx, [esp+8Ch+var_34]
test	edx, edx
jz	loc_67D1EC0A
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_30]
test	eax, eax
jz	loc_67D1E694
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	[esp+8Ch+var_54], eax
mov	eax, [esp+8Ch+var_38]
test	eax, eax
jz	loc_67D1EC43
mov	ebx, [esp+8Ch+var_38]
movsx	eax, byte ptr [ebx]
test	al, al
jz	loc_67D1EC43
mov	ebp, ebx
mov	[esp+8Ch+var_44], 0
mov	[esp+8Ch+var_4C], 0
mov	[esp+8Ch+var_40], 0
lea	esi, [esi+0]
cmp	al, 3Ch
jz	loc_67D1E254
cmp	al, 26h
jz	loc_67D1E514
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	short loc_67D1E0F0
mov	edx, [esp+8Ch+var_50]
mov	ecx, [edx+4]
lea	edx, [ecx+1]
mov	ebx, [esp+8Ch+var_50]
cmp	edx, [ebx+8]
jnb	loc_67D1E314
mov	esi, ebx
mov	ebx, [ebx]
mov	[ebx+ecx], al
mov	[esi+4], edx
mov	eax, [esi]
mov	byte ptr [eax+ecx+1], 0
			
mov	edi, [esp+8Ch+var_54]
test	edi, edi
jz	short loc_67D1E123
movsx	ecx, byte ptr [ebp+0]
mov	eax, [esp+8Ch+var_54]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ebx, [esp+8Ch+var_54]
cmp	eax, [ebx+8]
jnb	loc_67D1E354
mov	esi, ebx
mov	ebx, [ebx]
mov	[ebx+edx], cl
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
			
mov	esi, [esp+8Ch+var_4C]
test	esi, esi
jz	short loc_67D1E156
movsx	ecx, byte ptr [ebp+0]
mov	eax, [esp+8Ch+var_4C]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ebx, [esp+8Ch+var_4C]
cmp	eax, [ebx+8]
jnb	loc_67D1E334
mov	esi, ebx
mov	ebx, [ebx]
mov	[ebx+edx], cl
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
			
inc	ebp
			
test	ebp, ebp
jz	short loc_67D1E167
movsx	eax, byte ptr [ebp+0]
test	al, al
jnz	loc_67D1E0B0
mov	ebx, [esp+8Ch+var_50]
test	ebx, ebx
jz	short loc_67D1E1B2
mov	ecx, [esp+8Ch+var_44]
test	ecx, ecx
jz	short loc_67D1E1B2
mov	ebx, [esp+8Ch+var_44]
mov	esi, [esp+8Ch+var_50]
jmp	short loc_67D1E18B
align 4
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D1E1B2
			
mov	eax, [ebx]
mov	edx, [eax+8]
test	edx, edx
jnz	short loc_67D1E184
mov	eax, [eax+4]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aS_10 
mov	[esp+8Ch+Str], esi
call	g_string_append_printf
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D1E18B
			
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_free
mov	eax, [esp+8Ch+var_34]
test	eax, eax
jz	short loc_67D1E1E0
mov	[esp+8Ch+Val], 0
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_free
mov	ebx, [esp+8Ch+var_34]
mov	[ebx], eax
mov	eax, [esp+8Ch+var_30]
test	eax, eax
jz	short loc_67D1E202
mov	[esp+8Ch+Val], 0
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_free
mov	ebx, [esp+8Ch+var_30]
mov	[ebx], eax
mov	eax, [esp+8Ch+var_40]
test	eax, eax
jz	short loc_67D1E21E
mov	[esp+8Ch+Val], 1
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+Str], eax
call	g_string_free
mov	eax, [esp+8Ch+var_4C]
test	eax, eax
jz	short loc_67D1E23A
mov	[esp+8Ch+Val], 1
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_string_free
			
mov	edx, [esp+8Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D1F712
add	esp, 7Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
cmp	byte ptr [ebp+1], 2Fh
jnz	loc_67D1E374
mov	eax, [esp+8Ch+var_44]
test	eax, eax
jz	loc_67D1EC95
lea	esi, [ebp+2]
mov	[esp+8Ch+var_3C], esi
mov	ebx, [esp+8Ch+var_44]
mov	[esp+8Ch+var_48], ebp
lea	esi, [esi+0]
mov	ebp, [ebx]
mov	edx, [ebp+0]
mov	ecx, 0FFFFFFFFh
mov	edi, edx
xor	eax, eax
repne scasb
not	ecx
dec	ecx
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], esi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1E2BE
mov	edi, [ebp+0]
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
mov	edx, [esp+8Ch+var_48]
cmp	byte ptr [edx+ecx+1], 3Eh
jz	loc_67D1E798
mov	ebx, [ebx+4]
test	ebx, ebx
jnz	short loc_67D1E27C
mov	ebp, [esp+8Ch+var_48]
mov	al, [ebp+2]
test	al, al
jz	loc_67D1EBB1
mov	edx, ds:g_ascii_table
mov	edx, [edx]
movzx	ecx, al
test	byte ptr [edx+ecx*2], 2
jz	short loc_67D1E301
mov	ecx, [esp+8Ch+var_3C]
inc	ecx
mov	al, [ecx]
test	al, al
jz	loc_67D1EBB1
movzx	ebx, al
test	byte ptr [edx+ebx*2], 2
jnz	short loc_67D1E2E9
mov	[esp+8Ch+var_3C], ecx
cmp	al, 3Eh
jnz	loc_67D1EBB1
mov	ebp, [esp+8Ch+var_3C]
inc	ebp
jmp	loc_67D1E157
align 4
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E0F0
align 4
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E156
align 4
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E123
align 4
mov	[esp+8Ch+var_84], 0Ch
mov	[esp+8Ch+Val], offset aBlockquote 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1E5A8
lea	esi, [ebp+0Bh]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	esi, esi
jz	short loc_67D1E3E1
movsx	edx, byte ptr [ebp+0Bh]
test	dl, dl
jz	short loc_67D1E3E1
mov	[esp+8Ch+var_48], 0
xor	ebx, ebx
nop
test	ebx, ebx
jz	loc_67D1E450
cmp	dl, [ebx]
jz	loc_67D1E4A8
cmp	byte ptr [ebp+0], 5Ch
jz	short loc_67D1E448
mov	eax, esi
			
mov	esi, eax
inc	esi
jz	short loc_67D1E3E1
movsx	edx, byte ptr [eax+1]
test	dl, dl
jnz	short loc_67D1E3BC
			
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D1E401
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	short loc_67D1E431
mov	eax, [esp+8Ch+var_54]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_54]
cmp	eax, [ecx+8]
jnb	loc_67D1E6A4
mov	ebx, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Ch
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
			
inc	ebp
			
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], edi
call	g_string_free
jmp	loc_67D1E157
align 4
lea	eax, [esi+1]
jmp	short loc_67D1E3D4
align 10h
cmp	dl, 22h
jz	loc_67D1E59C
cmp	dl, 27h
jz	loc_67D1E59C
cmp	dl, 3Ch
jz	loc_67D1E908
cmp	dl, 3Eh
jz	loc_67D1EE8D
mov	ecx, [edi+4]
mov	[esp+8Ch+var_3C], ecx
inc	ecx
mov	[esp+8Ch+var_60], ecx
cmp	ecx, [edi+8]
jnb	loc_67D1E914
mov	ecx, [edi]
mov	eax, [esp+8Ch+var_3C]
mov	[ecx+eax], dl
mov	eax, [esp+8Ch+var_60]
mov	[edi+4], eax
mov	edx, [edi]
mov	byte ptr [edx+eax], 0
mov	eax, esi
jmp	loc_67D1E3D4
align 4
lea	eax, [esi-1]
sub	eax, ebx
mov	[esp+8Ch+Val], eax
lea	eax, [ebx+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	edx, byte ptr [ebx]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], ecx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, esi
xor	ebx, ebx
jmp	loc_67D1E3D4
lea	edx, [esp+8Ch+var_2C]
mov	[esp+8Ch+Val], edx 
mov	[esp+8Ch+Str], ebp 
call	purple_markup_unescape_entity
mov	ebx, eax
test	eax, eax
jz	loc_67D1EC60
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	short loc_67D1E552
mov	eax, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], ebp
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append_len
mov	[esp+8Ch+var_50], eax
mov	esi, [esp+8Ch+var_54]
test	esi, esi
jz	short loc_67D1E56E
mov	[esp+8Ch+Val], ebx
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_54], eax
mov	ecx, [esp+8Ch+var_4C]
test	ecx, ecx
jz	short loc_67D1E592
mov	eax, [esp+8Ch+var_2C]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], ebp
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_string_append_len
mov	[esp+8Ch+var_4C], eax
add	ebp, [esp+8Ch+var_2C]
jmp	loc_67D1E157
align 4
			
mov	ebx, esi
mov	eax, esi
jmp	loc_67D1E3D4
align 4
mov	[esp+8Ch+var_84], 0Bh
mov	[esp+8Ch+Val], offset aBlockquote_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1E6C8
lea	ebx, [ebp+0Bh]
cmp	byte ptr [ebp+0Bh], 3Eh
jz	short loc_67D1E5F1
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1E6C8
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1F717
mov	[esp+8Ch+Val], offset aBlockquote_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+0Bh], 2Fh
jz	loc_67D1EA14
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBlockquote_1 
mov	dword ptr [eax+4], offset aBlockquote_1	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_50]
cmp	eax, [ecx+8]
jnb	loc_67D1ECA1
mov	esi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
			
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebx 
call	strchr
lea	ebp, [eax+1]
jmp	loc_67D1E157
mov	[esp+8Ch+var_54], 0
jmp	loc_67D1E078
align 4
mov	[esp+8Ch+var_84], 3Ch
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E431
align 4
			
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aCite 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1E92F
lea	esi, [ebp+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	esi, esi
jz	loc_67D1E3E1
movsx	eax, byte ptr [ebp+5]
test	al, al
jz	loc_67D1E3E1
mov	[esp+8Ch+var_48], 0
xor	ebx, ebx
test	ebx, ebx
jz	short loc_67D1E749
nop
cmp	al, [ebx]
jz	loc_67D1EB3C
cmp	byte ptr [ebp+0], 5Ch
jz	loc_67D1EA0C
mov	eax, esi
			
mov	esi, eax
inc	esi
jz	loc_67D1E3E1
movsx	eax, byte ptr [eax+1]
test	al, al
jz	loc_67D1E3E1
test	ebx, ebx
jnz	short loc_67D1E71C
cmp	al, 22h
jz	loc_67D1EBA8
cmp	al, 27h
jz	loc_67D1EBA8
cmp	al, 3Ch
jz	loc_67D1EC1F
cmp	al, 3Eh
jz	loc_67D1F20B
mov	edx, [edi+4]
mov	[esp+8Ch+var_3C], edx
inc	edx
mov	[esp+8Ch+var_60], edx
cmp	edx, [edi+8]
jnb	loc_67D1EC28
mov	edx, [edi]
mov	ecx, [esp+8Ch+var_3C]
mov	[edx+ecx], al
mov	ecx, [esp+8Ch+var_60]
mov	[edi+4], ecx
mov	eax, [edi]
mov	byte ptr [eax+ecx], 0
mov	eax, esi
jmp	short loc_67D1E730
lea	ebp, [edx+ecx+2]
mov	[esp+8Ch+var_3C], ebp
mov	esi, [esp+8Ch+var_50]
mov	[esp+8Ch+var_48], ebx
mov	edi, [esp+8Ch+var_4C]
mov	ebx, [esp+8Ch+var_44]
jmp	short loc_67D1E829
align 4
			
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	short loc_67D1E809
mov	[esp+8Ch+Val], offset aA_2 
mov	eax, [ebp+0]
mov	[esp+8Ch+Str], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D1E809
test	edi, edi
jz	short loc_67D1E809
mov	eax, [esp+8Ch+var_40]
test	eax, eax
jz	short loc_67D1E7F7
mov	eax, [esp+8Ch+var_40]
mov	[esp+8Ch+Val], eax
mov	[esp+8Ch+Str], edi
call	g_string_equal
test	eax, eax
jz	loc_67D1E890
			
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], edi
call	g_string_free
xor	edi, edi
			
cmp	ebx, [esp+8Ch+var_48]
jz	short loc_67D1E858
mov	[esp+8Ch+Val], ebp
mov	[esp+8Ch+Str], ebx
call	g_list_remove
mov	ebx, eax
mov	[esp+8Ch+Str], ebp
call	g_free
test	ebx, ebx
jz	short loc_67D1E858
mov	ebp, [ebx]
test	esi, esi
jz	short loc_67D1E7B4
mov	eax, [ebp+8]
test	eax, eax
jnz	loc_67D1E7B4
mov	eax, [ebp+4]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aS_10 
mov	[esp+8Ch+Str], esi
call	g_string_append_printf
jmp	loc_67D1E7B4
align 4
			
mov	ebp, [esp+8Ch+var_3C]
mov	[esp+8Ch+var_4C], edi
mov	[esp+8Ch+var_44], ebx
mov	ebx, [esp+8Ch+var_48]
mov	eax, [ebx]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, [ebx]
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_remove
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E157
align 10h
mov	[esp+8Ch+var_84], 7
mov	[esp+8Ch+Val], offset aMailto 
mov	edx, [esp+8Ch+var_40]
mov	eax, [edx]
mov	[esp+8Ch+Str], eax
call	g_ascii_strncasecmp
test	eax, eax
mov	eax, [esp+8Ch+var_40]
mov	ecx, [eax]
jnz	short loc_67D1E8D9
mov	eax, [edi]
mov	[esp+8Ch+Val], eax
lea	eax, [ecx+7]
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], ecx
call	g_utf8_collate
test	eax, eax
mov	ecx, [esp+8Ch+var_58]
jz	loc_67D1E7F7
mov	[esp+8Ch+Str], ecx
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aS_11 
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_append_printf
jmp	loc_67D1E7F7
align 4
mov	[esp+8Ch+var_48], esi
jmp	loc_67D1E3D2
align 4
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], edi
call	g_string_insert_c
mov	eax, esi
jmp	loc_67D1E3D4
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aCite_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1EA3D
lea	ebx, [ebp+5]
cmp	byte ptr [ebp+5], 3Eh
jz	short loc_67D1E978
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1EA3D
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1F6D6
mov	[esp+8Ch+Val], offset aCite_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D1ED7C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aCite_1	
mov	dword ptr [eax+4], offset aCite_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ebp, [esp+8Ch+var_50]
test	ebp, ebp
jz	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_50]
cmp	eax, [ecx+8]
jnb	loc_67D1F0BA
mov	esi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
jmp	loc_67D1E67C
lea	eax, [esi+1]
jmp	loc_67D1E730
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aDiv_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D1ECC2
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aDiv 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1EF85
lea	ebx, [ebp+4]
cmp	byte ptr [ebp+4], 3Eh
jz	short loc_67D1EAA6
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1EF85
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1F83D
mov	[esp+8Ch+Val], offset aDiv 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+4], 2Fh
jz	loc_67D1F1E2
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aDiv_1 
mov	dword ptr [eax+4], offset aDiv_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_50]
cmp	eax, [ecx+8]
jnb	loc_67D1F408
mov	esi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
jmp	loc_67D1E67C
align 4
lea	eax, [esi-1]
sub	eax, ebx
mov	[esp+8Ch+Val], eax
lea	eax, [ebx+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	edx, byte ptr [ebx]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	ecx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], ecx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, esi
xor	ebx, ebx
jmp	loc_67D1E730
			
mov	ebx, esi
mov	eax, esi
jmp	loc_67D1E730
			
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	short loc_67D1EBD1
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	edx, [esp+8Ch+var_54]
test	edx, edx
jz	loc_67D1E156
mov	eax, [esp+8Ch+var_54]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_54]
cmp	eax, [ecx+8]
jnb	loc_67D1EE6C
mov	ebx, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Ch
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
jmp	loc_67D1E156
test	ebx, ebx
jz	loc_67D1EF40
mov	[esp+8Ch+var_50], 0
jmp	loc_67D1E068
mov	[esp+8Ch+var_48], esi
jmp	loc_67D1E72E
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], edi
call	g_string_insert_c
mov	eax, esi
jmp	loc_67D1E730
			
mov	[esp+8Ch+var_40], 0
mov	[esp+8Ch+var_44], 0
mov	[esp+8Ch+var_4C], 0
jmp	loc_67D1E1B2
mov	[esp+8Ch+var_2C], 1
movsx	eax, byte ptr [ebp+0]
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], offset aC_0 
mov	[esp+8Ch+Val], 7
lea	ecx, [esp+8Ch+var_27]
mov	[esp+8Ch+Str], ecx
call	g_snprintf
lea	ebx, [esp+8Ch+var_27]
jmp	loc_67D1E52E
lea	edx, [ebp+2]
mov	[esp+8Ch+var_3C], edx
jmp	loc_67D1E2C9
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E67C
lea	edi, [ebp+4]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebx, eax
test	edi, edi
jz	short loc_67D1ED11
movsx	eax, byte ptr [ebp+4]
test	al, al
jz	short loc_67D1ED11
mov	[esp+8Ch+var_48], 0
xor	esi, esi
lea	esi, [esi+0]
test	esi, esi
jz	loc_67D1EDA5
cmp	al, [esi]
jz	loc_67D1EDF7
cmp	byte ptr [ebp+0], 5Ch
jz	short loc_67D1ED77
mov	eax, edi
			
mov	edi, eax
inc	edi
jz	short loc_67D1ED11
movsx	eax, byte ptr [eax+1]
test	al, al
jnz	short loc_67D1ECEC
			
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	short loc_67D1ED31
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	ecx, [esp+8Ch+var_54]
test	ecx, ecx
jz	short loc_67D1ED61
mov	eax, [esp+8Ch+var_54]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_54]
cmp	eax, [ecx+8]
jnb	loc_67D1F0DB
mov	esi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Ch
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
			
inc	ebp
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], ebx
call	g_string_free
jmp	loc_67D1E157
lea	eax, [edi+1]
jmp	short loc_67D1ED04
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	al, 22h
jz	loc_67D1EE63
cmp	al, 27h
jz	loc_67D1EE63
cmp	al, 3Ch
jz	loc_67D1EF61
cmp	al, 3Eh
jz	loc_67D1F5E9
mov	edx, [ebx+4]
mov	[esp+8Ch+var_3C], edx
inc	edx
mov	[esp+8Ch+var_60], edx
cmp	edx, [ebx+8]
jnb	loc_67D1EF6A
mov	edx, [ebx]
mov	ecx, [esp+8Ch+var_3C]
mov	[edx+ecx], al
mov	ecx, [esp+8Ch+var_60]
mov	[ebx+4], ecx
mov	eax, [ebx]
mov	byte ptr [eax+ecx], 0
mov	eax, edi
jmp	loc_67D1ED04
lea	eax, [edi-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, edi
xor	esi, esi
jmp	loc_67D1ED04
			
mov	esi, edi
mov	eax, edi
jmp	loc_67D1ED04
mov	[esp+8Ch+var_84], 3Ch
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E156
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1E3E1
cmp	byte ptr [esi-1], 2Fh
jz	short loc_67D1EECC
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBlockquote_1 
mov	dword ptr [eax+4], offset aBlockquote_1	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D1EF1A
mov	[esp+8Ch+Val], offset aBlockquote_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, [edi]
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_50]
cmp	eax, [ecx+8]
jnb	short loc_67D1EF22
mov	ebx, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
			
lea	ebp, [esi+1]
jmp	loc_67D1E432
			
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	short loc_67D1EF1A
mov	[esp+8Ch+var_84], offset aXhtml_outNullP 
mov	[esp+8Ch+Val], offset aPurple_marku_5 
mov	[esp+8Ch+Str], 0
call	g_return_if_fail_warning
jmp	loc_67D1E23A
mov	[esp+8Ch+var_48], edi
jmp	loc_67D1ED02
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], ebx
call	g_string_insert_c
mov	eax, edi
jmp	loc_67D1ED04
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aEm 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F105
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1E3E1
movsx	eax, byte ptr [ebp+3]
test	al, al
jz	loc_67D1E3E1
mov	[esp+8Ch+var_48], 0
xor	esi, esi
test	esi, esi
jz	short loc_67D1EFFF
cmp	al, [esi]
jz	short loc_67D1F04E
cmp	byte ptr [ebp+0], 5Ch
jz	short loc_67D1EFFA
mov	eax, ebx
			
mov	ebx, eax
inc	ebx
jz	loc_67D1E3E1
movsx	eax, byte ptr [eax+1]
test	al, al
jnz	short loc_67D1EFD4
jmp	loc_67D1E3E1
lea	eax, [ebx+1]
jmp	short loc_67D1EFE4
cmp	al, 22h
jz	loc_67D1F0FC
cmp	al, 27h
jz	loc_67D1F0FC
cmp	al, 3Ch
jz	loc_67D1F2A3
cmp	al, 3Eh
jz	loc_67D1FB1A
mov	edx, [edi+4]
mov	[esp+8Ch+var_3C], edx
inc	edx
mov	[esp+8Ch+var_60], edx
cmp	edx, [edi+8]
jnb	loc_67D1F2AC
mov	edx, [edi]
mov	ecx, [esp+8Ch+var_3C]
mov	[edx+ecx], al
mov	ecx, [esp+8Ch+var_60]
mov	[edi+4], ecx
mov	eax, [edi]
mov	byte ptr [eax+ecx], 0
mov	eax, ebx
jmp	short loc_67D1EFE4
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, ebx
xor	esi, esi
jmp	loc_67D1EFE4
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E67C
mov	[esp+8Ch+var_84], 3Ch
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1ED61
			
mov	esi, ebx
mov	eax, ebx
jmp	loc_67D1EFE4
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aEm_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F2C7
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D1F14E
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F2C7
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1F69A
mov	[esp+8Ch+Val], offset aEm_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1F5C0
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aEm_0 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
mov	edx, [eax+4]
lea	eax, [edx+1]
mov	ecx, [esp+8Ch+var_50]
cmp	eax, [ecx+8]
jnb	loc_67D1F879
mov	esi, ecx
mov	ecx, [ecx]
mov	byte ptr [ecx+edx], 3Eh
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+eax], 0
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
mov	ebx, [esp+8Ch+var_48]
test	ebx, ebx
jnz	loc_67D1E3E1
cmp	byte ptr [esi-1], 2Fh
jz	short loc_67D1F24A
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aCite_1	
mov	dword ptr [eax+4], offset aCite_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1EF1A
mov	[esp+8Ch+Val], offset aCite_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, [edi]
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	edx, eax
mov	eax, [eax+4]
lea	ecx, [eax+1]
cmp	ecx, [edx+8]
jnb	loc_67D1EF22
mov	ebx, edx
mov	edx, [edx]
mov	byte ptr [edx+eax], 3Eh
mov	[ebx+4], ecx
mov	eax, [ebx]
mov	byte ptr [eax+ecx], 0
jmp	loc_67D1EF1A
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D1EFE2
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], edi
call	g_string_insert_c
mov	eax, ebx
jmp	loc_67D1EFE4
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F429
lea	edi, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebx, eax
test	edi, edi
jz	loc_67D1ED11
movsx	ecx, byte ptr [ebp+3]
test	cl, cl
jz	loc_67D1ED11
mov	[esp+8Ch+var_48], 0
xor	esi, esi
test	esi, esi
jz	loc_67D1F3B1
cmp	cl, [esi]
jz	short loc_67D1F345
cmp	byte ptr [ebp+0], 5Ch
jz	short loc_67D1F340
mov	eax, edi
			
mov	edi, eax
inc	edi
jz	loc_67D1ED11
movsx	ecx, byte ptr [eax+1]
test	cl, cl
jnz	short loc_67D1F316
jmp	loc_67D1ED11
lea	eax, [edi+1]
jmp	short loc_67D1F32A
lea	eax, [edi-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], ebx
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
mov	eax, edi
xor	esi, esi
jmp	loc_67D1F32A
cmp	cl, 22h
jz	short loc_67D1F3FF
cmp	cl, 27h
jz	short loc_67D1F3FF
cmp	cl, 3Ch
jz	loc_67D1F5B7
cmp	cl, 3Eh
jz	loc_67D1F7BD
mov	edx, [ebx+4]
mov	[esp+8Ch+var_3C], edx
inc	edx
mov	[esp+8Ch+var_60], edx
cmp	edx, [ebx+8]
jnb	loc_67D1F59C
mov	edx, [ebx]
mov	eax, [esp+8Ch+var_3C]
mov	[edx+eax], cl
mov	ecx, [esp+8Ch+var_60]
mov	[ebx+4], ecx
mov	eax, [ebx]
mov	byte ptr [eax+ecx], 0
mov	eax, edi
jmp	loc_67D1F32A
			
mov	esi, edi
mov	eax, edi
jmp	loc_67D1F32A
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E67C
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH1_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F4EC
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D1F46E
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1F4EC
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D1FADE
mov	[esp+8Ch+Val], offset aH1_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1FAB5
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH1_0 
mov	dword ptr [eax+4], offset aH1_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH2 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F8DD
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
jmp	short loc_67D1F566
align 10h
cmp	dl, [esi]
jz	loc_67D1F753
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D1F54F
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
test	esi, esi
jnz	short loc_67D1F540
cmp	dl, 22h
jz	loc_67D1FBF6
cmp	dl, 27h
jz	loc_67D1FBF6
cmp	dl, 3Ch
jz	loc_67D1FBED
cmp	dl, 3Eh
jz	loc_67D1FB99
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	short loc_67D1F54F
align 4
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], ebx
call	g_string_insert_c
mov	eax, edi
jmp	loc_67D1F32A
mov	[esp+8Ch+var_48], edi
jmp	loc_67D1F328
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
mov	ecx, [esp+8Ch+var_48]
test	ecx, ecx
jnz	loc_67D1ED11
cmp	byte ptr [edi-1], 2Fh
jz	short loc_67D1F628
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aDiv_1 
mov	dword ptr [eax+4], offset aDiv_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	short loc_67D1F674
mov	[esp+8Ch+Val], offset aDiv 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, [ebx]
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	edx, eax
mov	eax, [eax+4]
lea	ecx, [eax+1]
cmp	ecx, [edx+8]
jnb	short loc_67D1F67C
mov	esi, edx
mov	edx, [edx]
mov	byte ptr [edx+eax], 3Eh
mov	[esi+4], ecx
mov	eax, [esi]
mov	byte ptr [eax+ecx], 0
			
lea	ebp, [edi+1]
jmp	loc_67D1ED62
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	short loc_67D1F674
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aEm_0 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aCite_1	
mov	dword ptr [eax+4], offset aCite_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
call	__stack_chk_fail
cmp	byte ptr [ebp+0Bh], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBlockquote_1 
mov	dword ptr [eax+4], offset aBlockquote_1	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	loc_67D1F54F
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1ED11
cmp	byte ptr [edi-1], 2Fh
jz	short loc_67D1F7FC
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH1_0 
mov	dword ptr [eax+4], offset aH1_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ebp, [esp+8Ch+var_50]
test	ebp, ebp
jz	loc_67D1F674
mov	[esp+8Ch+Val], offset aH1_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, [ebx]
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, 3Eh
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1F674
cmp	byte ptr [ebp+4], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aDiv_1 
mov	dword ptr [eax+4], offset aDiv_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_84], 3Eh
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_insert_c
jmp	loc_67D1E67C
			
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	short loc_67D1F8BA
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	edx, [esp+8Ch+var_54]
test	edx, edx
jz	loc_67D1E431
mov	edx, 3Ch
mov	eax, [esp+8Ch+var_54]
call	sub_67D19C34
mov	[esp+8Ch+var_54], eax
jmp	loc_67D1E431
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH2_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1F9A0
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D1F922
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1F9A0
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FA79
mov	[esp+8Ch+Val], offset aH2_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1FA50
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH2_0 
mov	dword ptr [eax+4], offset aH2_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH3 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1FC6D
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
jmp	short loc_67D1FA1D
align 4
cmp	dl, [esi]
jz	loc_67D1FC03
cmp	byte ptr [ebp+0], 5Ch
jz	loc_67D1FBFD
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
test	esi, esi
jnz	short loc_67D1F9F4
cmp	dl, 22h
jz	loc_67D2194A
cmp	dl, 27h
jz	loc_67D2194A
cmp	dl, 3Ch
jz	loc_67D21941
cmp	dl, 3Eh
jz	loc_67D21881
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	short loc_67D1FA06
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH2_0 
mov	dword ptr [eax+4], offset aH2_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH1_0 
mov	dword ptr [eax+4], offset aH1_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	edx, [esp+8Ch+var_48]
test	edx, edx
jnz	loc_67D1E3E1
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D1FB59
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aEm_0 
			
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
			
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D1FB91
mov	[esp+8Ch+Val], offset aEm_1 
			
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, [edi]
mov	[esp+8Ch+Val], edx
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	edx, 3Eh
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
			
lea	ebp, [ebx+1]
jmp	loc_67D1E432
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D1FBD8
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH2_0 
mov	dword ptr [eax+4], offset aH2_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D1FB91
mov	[esp+8Ch+Val], offset aH2_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D1F54F
			
mov	esi, ebx
jmp	loc_67D1F54F
inc	ebx
jmp	loc_67D1FA06
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	loc_67D1FA06
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH3_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1FD30
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D1FCB2
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1FD30
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D2197A
mov	[esp+8Ch+Val], offset aH3_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D21951
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH3_0 
mov	dword ptr [eax+4], offset aH3_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH4 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1FE46
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D1FE14
cmp	dl, [esi]
jz	short loc_67D1FDAD
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D1FD94
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D1FD81
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D1FD94
cmp	dl, 22h
jz	loc_67D2193A
cmp	dl, 27h
jz	loc_67D2193A
cmp	dl, 3Ch
jz	loc_67D21931
cmp	dl, 3Eh
jz	loc_67D218D9
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D1FD94
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH4_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D1FF09
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D1FE8B
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D1FF09
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D219EF
mov	[esp+8Ch+Val], offset aH4_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D219C6
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH4_0 
mov	dword ptr [eax+4], offset aH4_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH5 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2001F
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D1FFED
cmp	dl, [esi]
jz	short loc_67D1FF86
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D1FF6D
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D1FF5A
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D1FF6D
cmp	dl, 22h
jz	loc_67D219BF
cmp	dl, 27h
jz	loc_67D219BF
cmp	dl, 3Ch
jz	loc_67D219B6
cmp	dl, 3Eh
jz	loc_67D21A2B
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D1FF6D
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH5_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D200E2
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D20064
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D200E2
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D21EBD
mov	[esp+8Ch+Val], offset aH5_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D21E94
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH5_0 
mov	dword ptr [eax+4], offset aH5_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aH6 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D201F8
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D201C6
cmp	dl, [esi]
jz	short loc_67D2015F
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20146
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D20133
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20146
cmp	dl, 22h
jz	loc_67D21AE4
cmp	dl, 27h
jz	loc_67D21AE4
cmp	dl, 3Ch
jz	loc_67D21ADB
cmp	dl, 3Eh
jz	loc_67D21A83
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20146
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aH6_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D202BB
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D2023D
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D202BB
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D21E58
mov	[esp+8Ch+Val], offset aH6_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D21E2F
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH6_0 
mov	dword ptr [eax+4], offset aH6_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
cmp	ebp, [esp+8Ch+var_38]
jz	loc_67D21AEB
			
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aI_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D203DB
lea	ebx, [ebp+2]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+2]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D203A9
cmp	dl, [esi]
jz	short loc_67D20342
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20329
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D20316
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20329
cmp	dl, 22h
jz	loc_67D21E28
cmp	dl, 27h
jz	loc_67D21E28
cmp	dl, 3Ch
jz	loc_67D21E1F
cmp	dl, 3Eh
jz	loc_67D21D61
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20329
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset aI_3 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2049E
lea	ebx, [ebp+2]
cmp	byte ptr [ebp+2], 3Eh
jz	short loc_67D20420
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2049E
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D21F32
mov	[esp+8Ch+Val], offset aEm_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D21F09
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aI_2 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+Val], offset aItalic 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D205B4
lea	ebx, [ebp+7]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+7]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D20582
cmp	dl, [esi]
jz	short loc_67D2051B
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20502
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D204EF
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20502
cmp	dl, 22h
jz	loc_67D21F02
cmp	dl, 27h
jz	loc_67D21F02
cmp	dl, 3Ch
jz	loc_67D21EF9
cmp	dl, 3Eh
jz	loc_67D21F6E
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20502
mov	[esp+8Ch+var_84], 7
mov	[esp+8Ch+Val], offset aItalic_0	
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20677
lea	ebx, [ebp+7]
cmp	byte ptr [ebp+7], 3Eh
jz	short loc_67D205F9
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20677
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D221C6
mov	[esp+8Ch+Val], offset aEm_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+7], 2Fh
jz	loc_67D2219D
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aItalic_1 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aLi 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2078D
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D2075B
cmp	dl, [esi]
jz	short loc_67D206F4
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D206DB
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D206C8
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D206DB
cmp	dl, 22h
jz	loc_67D21FFC
cmp	dl, 27h
jz	loc_67D21FFC
cmp	dl, 3Ch
jz	loc_67D21FF3
cmp	dl, 3Eh
jz	loc_67D21F9B
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D206DB
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aLi_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20850
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D207D2
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20850
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D22161
mov	[esp+8Ch+Val], offset aLi_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D22138
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aLi_0 
mov	dword ptr [eax+4], offset aLi_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aOl 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20966
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D20934
cmp	dl, [esi]
jz	short loc_67D208CD
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D208B4
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D208A1
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D208B4
cmp	dl, 22h
jz	loc_67D2220B
cmp	dl, 27h
jz	loc_67D2220B
cmp	dl, 3Ch
jz	loc_67D22202
cmp	dl, 3Eh
jz	loc_67D22078
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D208B4
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aOl_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20A29
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D209AB
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20A29
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D2223B
mov	[esp+8Ch+Val], offset aOl_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D22212
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aOl_0 
mov	dword ptr [eax+4], offset aOl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aP_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20B3F
lea	ebx, [ebp+2]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+2]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D20B0D
cmp	dl, [esi]
jz	short loc_67D20AA6
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20A8D
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D20A7A
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20A8D
cmp	dl, 22h
jz	loc_67D22131
cmp	dl, 27h
jz	loc_67D22131
cmp	dl, 3Ch
jz	loc_67D22128
cmp	dl, 3Eh
jz	loc_67D220D0
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20A8D
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset aP_2 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20C02
lea	ebx, [ebp+2]
cmp	byte ptr [ebp+2], 3Eh
jz	short loc_67D20B84
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20C02
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D2203C
mov	[esp+8Ch+Val], offset aP_2 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D22013
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aP_1 
mov	dword ptr [eax+4], offset aP_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aPre 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20D18
lea	ebx, [ebp+4]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+4]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D20CE6
cmp	dl, [esi]
jz	short loc_67D20C7F
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20C66
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D20C53
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20C66
cmp	dl, 22h
jz	loc_67D2200C
cmp	dl, 27h
jz	loc_67D2200C
cmp	dl, 3Ch
jz	loc_67D22003
cmp	dl, 3Eh
jz	loc_67D22341
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20C66
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aPre_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20DDB
lea	ebx, [ebp+4]
cmp	byte ptr [ebp+4], 3Eh
jz	short loc_67D20D5D
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20DDB
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D22305
mov	[esp+8Ch+Val], offset aPre_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+4], 2Fh
jz	loc_67D222DC
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aPre_1 
mov	dword ptr [eax+4], offset aPre_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aQ_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20EF1
lea	ebx, [ebp+2]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+2]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D20EBF
cmp	dl, [esi]
jz	short loc_67D20E58
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D20E3F
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D20E2C
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D20E3F
cmp	dl, 22h
jz	loc_67D223FA
cmp	dl, 27h
jz	loc_67D223FA
cmp	dl, 3Ch
jz	loc_67D223F1
cmp	dl, 3Eh
jz	loc_67D22399
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D20E3F
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset aQ_2 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D20FB4
lea	ebx, [ebp+2]
cmp	byte ptr [ebp+2], 3Eh
jz	short loc_67D20F36
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D20FB4
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D222A0
mov	[esp+8Ch+Val], offset aQ_2 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D22277
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aQ_1 
mov	dword ptr [eax+4], offset aQ_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aSpan_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D210CA
lea	ebx, [ebp+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+5]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D21098
cmp	dl, [esi]
jz	short loc_67D21031
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D21018
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D21005
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D21018
cmp	dl, 22h
jz	loc_67D2240A
cmp	dl, 27h
jz	loc_67D2240A
cmp	dl, 3Ch
jz	loc_67D22401
cmp	dl, 3Eh
jz	loc_67D21829
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D21018
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aSpan_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2118D
lea	ebx, [ebp+5]
cmp	byte ptr [ebp+5], 3Eh
jz	short loc_67D2110F
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2118D
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D2243A
mov	[esp+8Ch+Val], offset aSpan_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D22411
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aSpan 
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aUl 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D212A3
lea	ebx, [ebp+3]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+3]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D21271
cmp	dl, [esi]
jz	short loc_67D2120A
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D211F1
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D211DE
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D211F1
cmp	dl, 22h
jz	loc_67D2247F
cmp	dl, 27h
jz	loc_67D2247F
cmp	dl, 3Ch
jz	loc_67D22476
cmp	dl, 3Eh
jz	loc_67D22486
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D211F1
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aUl_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21366
lea	ebx, [ebp+3]
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D212E8
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D21366
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D21514
mov	[esp+8Ch+Val], offset aUl_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D214EB
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aUl_0 
mov	dword ptr [eax+4], offset aUl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aBr_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21411
cmp	byte ptr [ebp+3], 3Eh
jz	short loc_67D213AF
lea	ebx, [ebp+3]
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21550
			
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
mov	ebx, eax
lea	ebp, [eax+1]
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D213E4
mov	[esp+8Ch+Val], offset aBr_2 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	loc_67D1E157
cmp	byte ptr [ebx+1], 0Ah
jz	loc_67D1E157
mov	edx, 0Ah
mov	eax, [esp+8Ch+var_54]
call	sub_67D19C34
mov	[esp+8Ch+var_54], eax
jmp	loc_67D1E157
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aHr_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D21386
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aB_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D2146D
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aBold 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21575
			
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dl, [ebp+2]
cmp	dl, 3Eh
jz	loc_67D2178B
cmp	dl, 6Fh
jz	loc_67D216F1
mov	dword ptr [eax], offset	aStrong	
			
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
lea	ebp, [eax+1]
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E157
mov	[esp+8Ch+Val], offset aSpanStyleFontW 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E157
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aUl_0 
mov	dword ptr [eax+4], offset aUl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset asc_67D46480 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21431
jmp	loc_67D213AF
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+Val], offset aStrong_0	
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D2146D
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aU_2 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D215CD
mov	[esp+8Ch+var_84], 0Bh
mov	[esp+8Ch+Val], offset aUnderline 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D21641
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
cmp	byte ptr [ebp+2], 3Eh
jz	loc_67D216FC
mov	edx, offset aUnderline_0 
mov	[eax], edx
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
lea	ebp, [eax+1]
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E157
mov	[esp+8Ch+Val], offset aSpanStyleTextD 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E157
mov	[esp+8Ch+var_84], 3
mov	[esp+8Ch+Val], offset aS_12 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D2167D
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+Val], offset aStrike 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21706
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
cmp	byte ptr [ebp+2], 3Eh
jz	loc_67D21796
mov	edx, offset aStrike_0 
mov	[eax], edx
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
lea	ebp, [eax+1]
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E157
mov	[esp+8Ch+Val], offset aSpanStyleTex_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E157
mov	dword ptr [eax], offset	aBold_0	
jmp	loc_67D21494
mov	edx, offset aU_3 
jmp	loc_67D215E8
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aSub 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D217A0
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aSub_0 
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
lea	ebp, [eax+1]
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D1E157
mov	[esp+8Ch+Val], offset aSpanStyleVerti 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E157
mov	dword ptr [eax], offset	aB_1 
jmp	loc_67D21494
mov	edx, offset aS_13 
jmp	loc_67D21698
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aSup 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D224DE
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aSup_0 
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebp 
call	strchr
lea	ebp, [eax+1]
mov	ebx, [esp+8Ch+var_50]
test	ebx, ebx
jz	loc_67D1E157
mov	[esp+8Ch+Val], offset aSpanStyleVer_0 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E157
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21868
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aSpan 
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aSpan_1 
jmp	loc_67D1FB69
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D218C0
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH3_0 
mov	dword ptr [eax+4], offset aH3_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ebp, [esp+8Ch+var_50]
test	ebp, ebp
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aH3_1 
jmp	loc_67D1FB69
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21918
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH4_0 
mov	dword ptr [eax+4], offset aH4_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aH4_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D1FD94
			
mov	esi, ebx
jmp	loc_67D1FD94
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D1FA06
			
mov	esi, ebx
jmp	loc_67D1FA06
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH3_0 
mov	dword ptr [eax+4], offset aH3_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D1FF6D
			
mov	esi, ebx
jmp	loc_67D1FF6D
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH4_0 
mov	dword ptr [eax+4], offset aH4_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21A6A
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH5_0 
mov	dword ptr [eax+4], offset aH5_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aH5_1 
jmp	loc_67D1FB69
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21AC2
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH6_0 
mov	dword ptr [eax+4], offset aH6_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aH6_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20146
			
mov	esi, ebx
jmp	loc_67D20146
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aHtml_2 
mov	ebx, [esp+8Ch+var_38]
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D21CAE
mov	ebx, [esp+8Ch+var_38]
add	ebx, 5
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D21C06
mov	esi, [esp+8Ch+var_38]
mov	al, [esi+5]
test	al, al
jz	loc_67D21C06
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D21BD8
cmp	dl, [esi]
jz	short loc_67D21B77
mov	eax, [esp+8Ch+var_38]
cmp	byte ptr [eax],	5Ch
jnz	short loc_67D21B5E
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D21C06
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D21C06
mov	ebx, eax
jmp	short loc_67D21B48
lea	edx, [ebx-1]
sub	edx, esi
mov	[esp+8Ch+Val], edx
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	ebp, eax
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
call	g_markup_escape_text
movsx	edx, byte ptr [esi]
mov	[esp+8Ch+var_7C], edx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	[esp+8Ch+Str], ebp
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	short loc_67D21B5E
cmp	dl, 22h
jz	loc_67D21CA7
cmp	dl, 27h
jz	loc_67D21CA7
cmp	dl, 3Ch
jz	loc_67D21C9E
cmp	dl, 3Eh
jz	short loc_67D21C4A
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D21B5E
			
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D21C26
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	short loc_67D21C40
mov	edx, 3Ch
mov	eax, [esp+8Ch+var_54]
call	sub_67D19C34
mov	[esp+8Ch+var_54], eax
mov	ebp, [esp+8Ch+var_38]
inc	ebp
jmp	loc_67D1E432
mov	ebp, [esp+8Ch+var_48]
test	ebp, ebp
jnz	short loc_67D21C06
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21C85
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aHtml_3	
mov	dword ptr [eax+4], offset aHtml_3 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aHtml_4 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D21B5E
			
mov	esi, ebx
jmp	loc_67D21B5E
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aHtml_4 
mov	ebx, [esp+8Ch+var_38]
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D202C5
cmp	byte ptr [ebx+5], 3Eh
jnz	loc_67D21DF7
mov	ebx, [esp+8Ch+var_38]
add	ebx, 5
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D21DB7
mov	[esp+8Ch+Val], offset aHtml_4 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	esi, [esp+8Ch+var_38]
cmp	byte ptr [esi+5], 2Fh
jz	short loc_67D21D8E
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aHtml_3	
mov	dword ptr [eax+4], offset aHtml_3 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ebp, [esp+8Ch+var_50]
test	ebp, ebp
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
mov	esi, [esp+8Ch+var_48]
test	esi, esi
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	loc_67D1FB59
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aI_2 
jmp	loc_67D1FB3E
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
mov	esi, [esp+8Ch+var_38]
cmp	byte ptr [esi+5], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aHtml_3	
mov	dword ptr [eax+4], offset aHtml_3 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
lea	ebx, [ebp+5]
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D202C5
jmp	loc_67D21CE3
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20329
			
mov	esi, ebx
jmp	loc_67D20329
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH6_0 
mov	dword ptr [eax+4], offset aH6_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aH5_0 
mov	dword ptr [eax+4], offset aH5_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20502
			
mov	esi, ebx
jmp	loc_67D20502
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aI_2 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	ecx, [esp+8Ch+var_48]
test	ecx, ecx
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	loc_67D1FB59
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aItalic_1 
jmp	loc_67D1FB3E
mov	edx, [esp+8Ch+var_48]
test	edx, edx
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D21FDA
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aLi_0 
mov	dword ptr [eax+4], offset aLi_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aLi_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D206DB
			
mov	esi, ebx
jmp	loc_67D206DB
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20C66
			
mov	esi, ebx
jmp	loc_67D20C66
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aP_1 
mov	dword ptr [eax+4], offset aP_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D220B7
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aOl_0 
mov	dword ptr [eax+4], offset aOl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aOl_1 
jmp	loc_67D1FB69
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D2210F
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aP_1 
mov	dword ptr [eax+4], offset aP_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aP_2 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20A8D
			
mov	esi, ebx
jmp	loc_67D20A8D
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aLi_0 
mov	dword ptr [eax+4], offset aLi_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+7], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aItalic_1 
mov	dword ptr [eax+4], offset aEm_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D208B4
			
mov	esi, ebx
jmp	loc_67D208B4
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+3], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aOl_0 
mov	dword ptr [eax+4], offset aOl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+2], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aQ_1 
mov	dword ptr [eax+4], offset aQ_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	edx, [esp+8Ch+var_50]
test	edx, edx
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+4], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aPre_1 
mov	dword ptr [eax+4], offset aPre_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D22380
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aPre_1 
mov	dword ptr [eax+4], offset aPre_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ebp, [esp+8Ch+var_50]
test	ebp, ebp
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aPre_0 
jmp	loc_67D1FB69
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D223D8
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aQ_1 
mov	dword ptr [eax+4], offset aQ_1 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aQ_2 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D20E3F
			
mov	esi, ebx
jmp	loc_67D20E3F
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D21018
			
mov	esi, ebx
jmp	loc_67D21018
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aSpan 
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D211F1
			
mov	esi, ebx
jmp	loc_67D211F1
mov	eax, [esp+8Ch+var_48]
test	eax, eax
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D224C5
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aUl_0 
mov	dword ptr [eax+4], offset aUl_0	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aUl_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aImg_0 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2250D
mov	al, [ebp+4]
cmp	al, 3Eh
jz	loc_67D22A84
cmp	al, 20h
jz	loc_67D22A84
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset aA_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2253C
mov	al, [ebp+2]
cmp	al, 3Eh
jz	loc_67D22EF7
cmp	al, 20h
jz	loc_67D22EF7
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aFont 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2256B
mov	al, [ebp+5]
cmp	al, 3Eh
jz	loc_67D2263D
cmp	al, 20h
jz	loc_67D2263D
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aBody 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D225BC
lea	ebx, [ebp+6]
mov	al, [ebp+6]
test	al, al
jz	short loc_67D225BC
cmp	al, 3Eh
jz	short loc_67D225BC
mov	[esp+8Ch+var_84], 8
mov	[esp+8Ch+Val], offset aBgcolor 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D22963
inc	ebx
mov	al, [ebx]
test	al, al
jnz	short loc_67D22591
			
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aBody 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D22D69
lea	ebx, [ebp+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
test	ebx, ebx
jz	loc_67D1F89A
mov	al, [ebp+5]
test	al, al
jz	loc_67D1F89A
mov	[esp+8Ch+var_48], 0
xor	esi, esi
movsx	edx, al
test	esi, esi
jz	loc_67D22D37
cmp	dl, [esi]
jz	loc_67D22CCD
cmp	byte ptr [ebp+0], 5Ch
jnz	short loc_67D22624
inc	ebx
			
mov	eax, ebx
inc	eax
jz	loc_67D1F89A
movsx	edx, byte ptr [ebx+1]
test	dl, dl
jz	loc_67D1F89A
mov	ebx, eax
jmp	short loc_67D2260D
			
lea	edi, [ebp+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
			
mov	al, [edi]
test	al, al
jz	loc_67D228B9
cmp	al, 3Eh
jz	loc_67D228B9
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aBack 
mov	[esp+8Ch+Str], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2270E
lea	ebx, [edi+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
movsx	edx, byte ptr [edi+5]
cmp	dl, 27h
jz	short loc_67D22703
cmp	dl, 22h
jz	short loc_67D22703
xor	ecx, ecx
test	dl, dl
jz	short loc_67D226CE
cmp	cl, dl
jz	short loc_67D226CE
test	cl, cl
jnz	short loc_67D226B5
cmp	dl, 20h
jz	short loc_67D226CE
cmp	dl, 3Eh
jz	short loc_67D226CE
mov	byte ptr [esp+8Ch+var_58], cl
call	sub_67D19C34
inc	ebx
movsx	edx, byte ptr [ebx]
test	dl, dl
mov	cl, byte ptr [esp+8Ch+var_58]
jz	short loc_67D226CE
cmp	dl, cl
jnz	short loc_67D226A7
			
mov	edx, [eax]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], offset aBackgroundS 
mov	[esp+8Ch+Str], esi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	[esp+8Ch+Val], 1
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_string_free
mov	edi, ebx
jmp	loc_67D2264E
			
lea	ebx, [edi+6]
mov	cl, dl
movsx	edx, byte ptr [edi+6]
jmp	short loc_67D2269F
mov	[esp+8Ch+var_84], 6
mov	[esp+8Ch+Val], offset aColor 
mov	[esp+8Ch+Str], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D22792
lea	ebx, [edi+6]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
movsx	edx, byte ptr [edi+6]
cmp	dl, 27h
jz	short loc_67D22787
cmp	dl, 22h
jz	short loc_67D22787
xor	ecx, ecx
test	dl, dl
jz	short loc_67D22774
cmp	cl, dl
jz	short loc_67D22774
test	cl, cl
jnz	short loc_67D2275F
cmp	dl, 20h
jz	short loc_67D22774
cmp	dl, 3Eh
jz	short loc_67D22774
mov	byte ptr [esp+8Ch+var_58], cl
call	sub_67D19C34
inc	ebx
movsx	edx, byte ptr [ebx]
test	dl, dl
mov	cl, byte ptr [esp+8Ch+var_58]
jnz	short loc_67D2274D
			
mov	edx, [eax]
mov	[esp+8Ch+var_84], edx
mov	[esp+8Ch+Val], offset aColorS 
jmp	loc_67D226DC
			
lea	ebx, [edi+7]
mov	cl, dl
movsx	edx, byte ptr [edi+7]
jmp	short loc_67D22749
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aFace 
mov	[esp+8Ch+Str], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2284F
lea	ebx, [edi+5]
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebp, eax
movsx	edx, byte ptr [edi+5]
cmp	dl, 27h
jz	short loc_67D22844
cmp	dl, 22h
jz	short loc_67D22844
xor	ecx, ecx
test	dl, dl
jz	short loc_67D22806
mov	eax, ebp
cmp	cl, dl
jz	short loc_67D22806
test	cl, cl
jnz	short loc_67D227EB
cmp	dl, 20h
jz	short loc_67D22804
cmp	dl, 3Eh
jz	short loc_67D22804
mov	byte ptr [esp+8Ch+var_58], cl
call	sub_67D19C34
inc	ebx
movsx	edx, byte ptr [ebx]
test	dl, dl
mov	cl, byte ptr [esp+8Ch+var_58]
jz	short loc_67D22804
cmp	cl, dl
jnz	short loc_67D227DD
			
mov	ebp, eax
			
mov	eax, [ebp+0]
mov	[esp+8Ch+Str], eax
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aFontFamilyS 
mov	[esp+8Ch+Str], esi
call	g_string_append_printf
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], ebp
call	g_string_free
mov	edi, ebx
jmp	loc_67D2264E
			
lea	ebx, [edi+6]
mov	cl, dl
movsx	edx, byte ptr [edi+6]
jmp	short loc_67D227D3
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aSize 
mov	[esp+8Ch+Str], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D22A6B
lea	ebx, [edi+5]
mov	al, [edi+5]
cmp	al, 27h
jz	loc_67D22A63
cmp	al, 22h
jz	loc_67D22A63
mov	[esp+8Ch+Str], ebx 
call	atoi
dec	eax
cmp	eax, 6
ja	loc_67D22959
mov	eax, ds:off_67D472C4[eax*4]
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aFontSizeS 
mov	[esp+8Ch+Str], esi
call	g_string_append_printf
mov	edi, ebx
jmp	loc_67D2264E
			
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], edi 
call	strchr
test	eax, eax
jz	loc_67D22A7D
lea	ebp, [eax+1]
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	ebx, eax
mov	dword ptr [eax], offset	aFont_0	
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esi+4]
test	eax, eax
jz	loc_67D22A71
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D22A71
mov	eax, [esi]
mov	[esp+8Ch+Str], eax
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aSpanStyleS 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append_printf
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], esi
call	g_string_free
jmp	loc_67D1E157
mov	eax, offset aMedium 
jmp	loc_67D2289E
lea	edi, [ebx+8]
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	[esp+8Ch+var_48], eax
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
mov	al, [ebx+8]
cmp	al, 27h
jz	loc_67D22A52
cmp	al, 22h
jz	loc_67D22A52
xor	ecx, ecx
test	al, al
jz	short loc_67D229CF
cmp	cl, al
jz	short loc_67D229CF
movsx	edx, al
mov	eax, esi
test	cl, cl
jnz	short loc_67D229B4
cmp	dl, 20h
jz	short loc_67D229CD
cmp	dl, 3Eh
jz	short loc_67D229CD
mov	byte ptr [esp+8Ch+var_58], cl
call	sub_67D19C34
inc	edi
movsx	edx, byte ptr [edi]
test	dl, dl
mov	cl, byte ptr [esp+8Ch+var_58]
jz	short loc_67D229CD
cmp	cl, dl
jnz	short loc_67D229A6
			
mov	esi, eax
			
mov	edi, [esp+8Ch+var_50]
test	edi, edi
jz	short loc_67D22A01
mov	eax, [esi]
mov	[esp+8Ch+Str], eax
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aSpanStyleBackg 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append_printf
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], esi
call	g_string_free
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebx 
call	strchr
test	eax, eax
jz	short loc_67D22A5F
lea	ebp, [eax+1]
mov	eax, [esp+8Ch+var_48]
mov	dword ptr [eax], offset	aBody_0	
mov	dword ptr [eax+4], offset aSpan	
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E157
			
lea	edi, [ebx+9]
mov	cl, al
mov	al, [ebx+9]
jmp	loc_67D22999
mov	ebp, ebx
jmp	short loc_67D22A28
			
lea	ebx, [edi+6]
jmp	loc_67D22885
inc	edi
jmp	loc_67D2264E
			
mov	dword ptr [ebx+8], 1
jmp	loc_67D22944
mov	ebp, edi
jmp	loc_67D228D4
			
lea	ebx, [ebp+4]
xor	esi, esi
xor	edi, edi
mov	dl, al
			
test	dl, dl
jz	loc_67D22B4C
cmp	dl, 3Eh
jz	loc_67D22B4C
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aSrc 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D22C28
lea	ebp, [ebx+4]
test	edi, edi
jz	short loc_67D22AD5
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], edi
call	g_string_free
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
movsx	edx, byte ptr [ebx+4]
cmp	dl, 27h
jz	loc_67D22C1A
cmp	dl, 22h
jz	loc_67D22C1A
xor	ecx, ecx
test	dl, dl
jz	loc_67D22C13
cmp	cl, dl
jz	short loc_67D22B41
mov	eax, edi
mov	bl, cl
test	bl, bl
jnz	short loc_67D22B21
cmp	dl, 20h
jz	loc_67D23127
cmp	dl, 3Eh
jz	loc_67D23127
call	sub_67D19C34
inc	ebp
movsx	edx, byte ptr [ebp+0]
test	dl, dl
jz	short loc_67D22B48
cmp	dl, bl
jnz	short loc_67D22B0B
mov	edi, eax
mov	ebx, ebp
jmp	loc_67D22A8D
			
mov	esi, eax
mov	dl, [ebp+0]
			
mov	ebx, ebp
jmp	loc_67D22A8D
mov	edi, eax
mov	ebx, ebp
			
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], ebx 
call	strchr
test	eax, eax
jz	loc_67D22BEA
lea	ebp, [eax+1]
test	edi, edi
jz	short loc_67D22BAB
mov	ecx, [esp+8Ch+var_50]
test	ecx, ecx
jz	short loc_67D22BAB
test	esi, esi
jz	loc_67D230CA
mov	ebx, [esi]
mov	eax, [edi]
mov	[esp+8Ch+Str], eax
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_80], ebx
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aImgSrcSAltS 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append_printf
			
test	esi, esi
jz	loc_67D1E432
mov	edx, [esp+8Ch+var_54]
test	edx, edx
jz	short loc_67D22BD1
mov	eax, [esi]
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_54]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_54], eax
test	edi, edi
jz	short loc_67D22BF1
			
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], esi
call	g_string_free
jmp	loc_67D1E432
mov	ebp, ebx
jmp	loc_67D22B67
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D22BD5
mov	eax, [esi]
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	short loc_67D22BD5
mov	esi, eax
			
mov	ebx, ebp
jmp	loc_67D22B4C
			
lea	ebp, [ebx+5]
mov	cl, dl
movsx	edx, byte ptr [ebx+5]
jmp	loc_67D22AFB
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset aAlt 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2311E
lea	ebp, [ebx+4]
test	esi, esi
jz	short loc_67D22C5F
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], esi
call	g_string_free
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
movsx	edx, byte ptr [ebx+4]
cmp	dl, 27h
jz	short loc_67D22CC2
cmp	dl, 22h
jz	short loc_67D22CC2
xor	ecx, ecx
test	dl, dl
jz	short loc_67D22C13
cmp	cl, dl
jz	loc_67D22B41
mov	eax, esi
mov	bl, cl
test	bl, bl
jnz	short loc_67D22CA3
cmp	dl, 20h
jz	loc_67D22B3C
cmp	dl, 3Eh
jz	loc_67D22B3C
call	sub_67D19C34
inc	ebp
movsx	edx, byte ptr [ebp+0]
test	dl, dl
jz	loc_67D22C11
cmp	dl, bl
jnz	short loc_67D22C8D
mov	esi, eax
mov	ebx, ebp
jmp	loc_67D22A8D
			
lea	ebp, [ebx+5]
mov	cl, dl
movsx	edx, byte ptr [ebx+5]
jmp	short loc_67D22C7D
lea	eax, [ebx-1]
sub	eax, esi
mov	[esp+8Ch+Val], eax
lea	eax, [esi+1]
mov	[esp+8Ch+Str], eax
call	g_strndup
mov	[esp+8Ch+Val], 0FFFFFFFFh
mov	[esp+8Ch+Str], eax
mov	[esp+8Ch+var_58], eax
call	g_markup_escape_text
movsx	ecx, byte ptr [esi]
mov	[esp+8Ch+var_7C], ecx
mov	[esp+8Ch+var_80], eax
mov	[esp+8Ch+var_84], ecx
mov	[esp+8Ch+Val], offset aCSC 
mov	[esp+8Ch+Str], edi
mov	[esp+8Ch+var_5C], eax
call	g_string_append_printf
mov	edx, [esp+8Ch+var_58]
mov	[esp+8Ch+Str], edx
call	g_free
mov	eax, [esp+8Ch+var_5C]
mov	[esp+8Ch+Str], eax
call	g_free
xor	esi, esi
jmp	loc_67D22624
cmp	dl, 22h
jz	loc_67D23194
cmp	dl, 27h
jz	loc_67D23194
cmp	dl, 3Ch
jz	loc_67D2318B
cmp	dl, 3Eh
jz	loc_67D23133
mov	eax, edi
call	sub_67D19C34
mov	edi, eax
jmp	loc_67D22624
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aBody_1 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D22E2C
lea	ebx, [ebp+5]
cmp	byte ptr [ebp+5], 3Eh
jz	short loc_67D22DAE
mov	[esp+8Ch+var_84], 2
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	[esp+8Ch+Str], ebx
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D22E2C
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D22EBB
mov	[esp+8Ch+Val], offset aBody_1 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D22E92
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBody_0	
mov	dword ptr [eax+4], offset aBody_0 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	edx, 3Eh
mov	eax, [esp+8Ch+var_50]
call	sub_67D19C34
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
			
mov	[esp+8Ch+var_84], 4
mov	[esp+8Ch+Val], offset asc_67D4668E 
mov	[esp+8Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D230DB
lea	ebx, [ebp+4]
mov	[esp+8Ch+Val], offset asc_67D46693 
mov	[esp+8Ch+Str], ebx 
call	strstr
test	eax, eax
jz	loc_67D230DB
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D230D4
mov	[esp+8Ch+Val], offset asc_67D4668E 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	ebp, ebx
jmp	loc_67D1E157
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E67C
mov	[esp+8Ch+Val], offset asc_67D4638C 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
jmp	loc_67D1E67C
cmp	byte ptr [ebp+5], 2Fh
jz	loc_67D1E67C
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBody_0	
mov	dword ptr [eax+4], offset aBody_0 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
jmp	loc_67D1E67C
			
lea	edi, [ebp+2]
mov	ebx, [esp+8Ch+var_40]
			
test	al, al
jz	loc_67D230C1
cmp	al, 3Eh
jz	loc_67D230C1
mov	[esp+8Ch+var_84], 5
mov	[esp+8Ch+Val], offset aHref 
mov	[esp+8Ch+Str], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D230B8
lea	esi, [edi+5]
test	ebx, ebx
jz	short loc_67D22F45
mov	[esp+8Ch+Val], 1
mov	[esp+8Ch+Str], ebx
call	g_string_free
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebx, eax
mov	eax, [esp+8Ch+var_4C]
test	eax, eax
jz	short loc_67D22F6F
mov	[esp+8Ch+Val], 1
mov	eax, [esp+8Ch+var_4C]
mov	[esp+8Ch+Str], eax
call	g_string_free
mov	[esp+8Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	[esp+8Ch+var_4C], eax
mov	al, [edi+5]
cmp	al, 27h
jz	loc_67D2309D
cmp	al, 22h
jz	loc_67D2309D
xor	ebp, ebp
test	al, al
jz	short loc_67D23008
mov	edx, ebp
cmp	dl, al
jz	short loc_67D22FD9
mov	dl, al
mov	ecx, ebp
test	cl, cl
jnz	short loc_67D22FB0
cmp	dl, 20h
jz	short loc_67D22FD7
cmp	dl, 3Eh
jz	short loc_67D22FD7
cmp	dl, 26h
jz	short loc_67D22FE0
movsx	edx, byte ptr [esi]
mov	eax, ebx
call	sub_67D19C34
mov	ebx, eax
inc	esi
mov	dl, [esi]
test	dl, dl
jz	short loc_67D23008
mov	eax, ebp
cmp	dl, al
jnz	short loc_67D22FA0
mov	al, dl
mov	edi, esi
jmp	loc_67D22EFE
			
mov	al, [esi]
mov	edi, esi
jmp	loc_67D22EFE
lea	ecx, [esp+8Ch+var_2C]
mov	[esp+8Ch+Val], ecx 
mov	[esp+8Ch+Str], esi 
call	purple_markup_unescape_entity
test	eax, eax
jnz	short loc_67D22FB5
mov	[esp+8Ch+Val], offset aAmp 
mov	[esp+8Ch+Str], ebx
call	g_string_append
mov	ebx, eax
jmp	short loc_67D22FC1
			
mov	[esp+8Ch+var_40], ebx
mov	edi, esi
mov	[esp+8Ch+Val], 3Eh 
mov	[esp+8Ch+Str], edi 
call	strchr
test	eax, eax
jz	loc_67D230B1
lea	ebp, [eax+1]
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aA_2 
mov	dword ptr [eax+4], offset aA_2 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	loc_67D1E157
mov	eax, [esp+8Ch+var_40]
test	eax, eax
jz	short loc_67D230AA
mov	edx, [esp+8Ch+var_40]
mov	eax, [edx]
mov	[esp+8Ch+Str], eax
call	g_strchug
mov	[esp+8Ch+Str], eax
call	g_strchomp
mov	[esp+8Ch+var_84], eax
mov	[esp+8Ch+Val], offset aAHrefS 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append_printf
jmp	loc_67D1E157
			
lea	esi, [edi+6]
mov	ebp, eax
mov	al, [edi+6]
jmp	loc_67D22F94
mov	eax, offset byte_67D45CB8
jmp	short loc_67D23080
mov	ebp, edi
jmp	loc_67D23029
mov	al, [edi+1]
inc	edi
jmp	loc_67D22EFE
			
mov	[esp+8Ch+var_40], ebx
jmp	loc_67D2300E
mov	ebx, offset byte_67D45CB8
jmp	loc_67D22B7D
mov	ebp, ebx
jmp	loc_67D1E157
			
mov	eax, [esp+8Ch+var_50]
test	eax, eax
jz	short loc_67D230FB
mov	[esp+8Ch+Val], offset aLt 
mov	eax, [esp+8Ch+var_50]
mov	[esp+8Ch+Str], eax
call	g_string_append
mov	[esp+8Ch+var_50], eax
mov	eax, [esp+8Ch+var_54]
test	eax, eax
jz	loc_67D1E156
mov	edx, 3Ch
mov	eax, [esp+8Ch+var_54]
call	sub_67D19C34
mov	[esp+8Ch+var_54], eax
jmp	loc_67D1E156
mov	dl, [ebx+1]
inc	ebx
jmp	loc_67D22A8D
			
mov	edi, eax
mov	dl, [ebp+0]
mov	ebx, ebp
jmp	loc_67D22A8D
mov	esi, [esp+8Ch+var_48]
test	esi, esi
jnz	loc_67D1F89A
cmp	byte ptr [ebx-1], 2Fh
jz	short loc_67D23172
mov	[esp+8Ch+Str], 0Ch
call	g_malloc0
mov	dword ptr [eax], offset	aBody_0	
mov	dword ptr [eax+4], offset aBody_0 
mov	[esp+8Ch+Val], eax
mov	eax, [esp+8Ch+var_44]
mov	[esp+8Ch+Str], eax
call	g_list_prepend
mov	[esp+8Ch+var_44], eax
mov	esi, [esp+8Ch+var_50]
test	esi, esi
jz	loc_67D1FB91
mov	[esp+8Ch+Val], offset aBody_1 
jmp	loc_67D1FB69
mov	[esp+8Ch+var_48], ebx
jmp	loc_67D22624
			
mov	esi, ebx
jmp	loc_67D22624
align 4
public purple_normalize
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D23250
test	ebx, ebx
jz	short loc_67D23204
mov	[esp+2Ch+var_2C], ebx
call	purple_account_get_protocol_id
mov	[esp+2Ch+var_2C], eax
call	purple_find_prpl
test	eax, eax
jz	short loc_67D23204
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+0D0h]
test	eax, eax
jz	short loc_67D23204
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	eax
test	eax, eax
jz	short loc_67D23204
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23276
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
			
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], esi
call	g_utf8_normalize
mov	ebx, eax
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], offset aS_14 
mov	[esp+2Ch+var_28], 800h
mov	[esp+2Ch+var_2C], offset dword_67D72500
call	g_snprintf
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, offset dword_67D72500
jmp	short loc_67D231F1
align 10h
mov	[esp+2Ch+var_24], offset aStrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_normali 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, offset byte_67D45CB8
jmp	loc_67D231F1
call	__stack_chk_fail
align 4
public purple_normalize_nocase
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D23310
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	g_utf8_strdown
mov	esi, eax
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], eax
call	g_utf8_normalize
mov	ebx, eax
test	eax, eax
jz	short loc_67D23330
mov	eax, ebx
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], offset aS_14 
mov	[esp+2Ch+var_28], 800h
mov	[esp+2Ch+var_2C], offset dword_67D72D00
call	g_snprintf
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_free
mov	eax, offset dword_67D72D00
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23337
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], offset aStrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_norma_0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D232FC
mov	eax, offset byte_67D45CB8
jmp	short loc_67D232C7
call	__stack_chk_fail
public purple_strdup_withhtml
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	edi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	loc_67D233EC
mov	al, [edi]
test	al, al
jz	loc_67D2340C
lea	edx, [edi+1]
mov	ebx, 1
jmp	short loc_67D2337D
align 10h
cmp	al, 0Dh
jz	short loc_67D23375
inc	ebx
inc	edx
mov	al, [edx-1]
test	al, al
jz	short loc_67D2338C
			
cmp	al, 0Ah
jnz	short loc_67D23370
add	ebx, 4
inc	edx
mov	al, [edx-1]
test	al, al
jnz	short loc_67D2337D
lea	esi, [ebx-1]
mov	[esp+2Ch+var_2C], ebx
call	g_malloc
mov	dl, [edi]
test	dl, dl
jz	short loc_67D233D4
lea	ecx, [edi+1]
xor	ebx, ebx
jmp	short loc_67D233B5
cmp	dl, 0Dh
jz	short loc_67D233AD
mov	[eax+ebx], dl
inc	ebx
inc	ecx
mov	dl, [ecx-1]
test	dl, dl
jz	short loc_67D233D4
			
cmp	dl, 0Ah
jnz	short loc_67D233A4
lea	edx, [eax+ebx]
mov	dword ptr [edx], 3E52423Ch
mov	byte ptr [edx+4], 0
add	ebx, 4
inc	ecx
mov	dl, [ecx-1]
test	dl, dl
jnz	short loc_67D233B5
xchg	ax, ax
			
mov	byte ptr [eax+esi], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23418
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_24], offset aSrcNull 
mov	[esp+2Ch+var_28], offset aPurple_strdup_ 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D233D8
xor	esi, esi
mov	ebx, 1
jmp	loc_67D2338F
call	__stack_chk_fail
align 10h
public purple_str_has_prefix
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D23453
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_str_has_prefix
call	__stack_chk_fail
public purple_str_has_suffix
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D2348B
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_str_has_suffix
call	__stack_chk_fail
public purple_str_add_cr
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D2354C
xor	edx, edx
cmp	byte ptr [ebx],	0Ah
setz	dl
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
mov	eax, 1
cmp	eax, ecx
jnb	short loc_67D234DB
lea	esi, [esi+0]
cmp	byte ptr [ebx+eax], 0Ah
jz	short loc_67D23540
inc	eax
cmp	eax, ecx
jb	short loc_67D234D0
test	edx, edx
jz	loc_67D23584
lea	eax, [edx+ecx+1]
mov	[esp+3Ch+var_3C], eax
call	g_malloc0
mov	ebp, eax
mov	al, [ebx]
cmp	al, 0Ah
jz	loc_67D235A0
mov	esi, 1
xor	edx, edx
mov	[ebp+edx+0], al
mov	edx, 1
xor	eax, eax
jmp	short loc_67D23516
align 10h
			
mov	[ebp+esi+0], cl
inc	esi
inc	edx
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
dec	ecx
cmp	edx, ecx
jnb	short loc_67D2356C
mov	cl, [ebx+edx]
cmp	cl, 0Ah
jnz	short loc_67D23510
cmp	byte ptr [ebx+edx-1], 0Dh
jz	short loc_67D23510
mov	byte ptr [ebp+esi+0], 0Dh
inc	esi
mov	cl, [ebx+edx]
jmp	short loc_67D23510
cmp	byte ptr [ebx+eax-1], 0Dh
jz	short loc_67D234D6
inc	edx
inc	eax
jmp	short loc_67D234D7
align 4
mov	[esp+3Ch+var_34], offset aTextNull_2 
mov	[esp+3Ch+var_38], offset aPurple_str_add 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
xchg	ax, ax
mov	eax, ebp
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D235B5
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D235B5
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_strdup
mov	byte ptr [ebp+0], 0Dh
mov	al, [ebx]
mov	esi, 2
mov	edx, 1
jmp	loc_67D23502
			
call	__stack_chk_fail
align 4
public purple_str_strip_char
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	bl, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D2360C
mov	al, [esi]
test	al, al
jz	short loc_67D2362A
lea	edx, [esi+1]
xor	ecx, ecx
nop
cmp	al, bl
jz	short loc_67D235EC
mov	[esi+ecx], al
inc	ecx
inc	edx
mov	al, [edx-1]
test	al, al
jnz	short loc_67D235E4
mov	byte ptr [esi+ecx], 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2362E
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aTextNull_2 
mov	[esp+2Ch+var_28], offset aPurple_str_str 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D235F8
xor	ecx, ecx
jmp	short loc_67D235F4
call	__stack_chk_fail
align 4
public purple_util_chrreplace
push	ebx
sub	esp, 28h
mov	ecx, [esp+2Ch+arg_0]
mov	bl, byte ptr [esp+2Ch+arg_4]
mov	al, byte ptr [esp+2Ch+arg_8]
mov	[esp+2Ch+var_1D], al
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	ecx, ecx
jz	short loc_67D23694
mov	dl, [ecx]
lea	eax, [ecx+1]
test	dl, dl
jnz	short loc_67D2366E
jmp	short loc_67D23682
align 4
mov	ecx, eax
inc	eax
mov	dl, [eax-1]
test	dl, dl
jz	short loc_67D23682
			
cmp	dl, bl
jnz	short loc_67D23664
mov	dl, [esp+2Ch+var_1D]
mov	[ecx], dl
mov	ecx, eax
inc	eax
mov	dl, [eax-1]
test	dl, dl
jnz	short loc_67D2366E
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D236C1
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D236C1
mov	[esp+2Ch+arg_8], offset	aStringNull 
mov	[esp+2Ch+arg_4], offset	aPurple_util_ch	
mov	[esp+2Ch+arg_0], 0
add	esp, 28h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_strreplace
push	esi
push	ebx
sub	esp, 34h
mov	eax, [esp+3Ch+arg_0]
mov	edx, [esp+3Ch+arg_4]
mov	ebx, [esp+3Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D2373C
test	edx, edx
jz	short loc_67D2375C
test	ebx, ebx
jz	loc_67D2377C
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], edx
mov	[esp+3Ch+var_3C], eax
call	g_strsplit
mov	esi, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_strjoinv
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	g_strfreev
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2379C
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aStringNull 
mov	[esp+3Ch+var_38], offset aPurple_strrepl 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D23727
mov	[esp+3Ch+var_34], offset aDelimiterNull	
mov	[esp+3Ch+var_38], offset aPurple_strrepl 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D23727
mov	[esp+3Ch+var_34], offset aReplacementNul 
mov	[esp+3Ch+var_38], offset aPurple_strrepl 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D23727
call	__stack_chk_fail
align 4
public purple_strcasereplace
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebp, [esp+5Ch+arg_0]
mov	eax, [esp+5Ch+arg_4]
mov	[esp+5Ch+var_40], eax
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67D238F8
mov	ebx, [esp+5Ch+var_40]
test	ebx, ebx
jz	loc_67D23920
mov	ecx, [esp+5Ch+var_30]
test	ecx, ecx
jz	loc_67D2394C
mov	edx, 0FFFFFFFFh
xor	eax, eax
mov	ecx, edx
mov	edi, [esp+5Ch+var_40]
repne scasb
not	ecx
lea	esi, [ecx-1]
mov	ecx, edx
mov	edi, [esp+5Ch+var_30]
repne scasb
not	ecx
dec	ecx
mov	[esp+5Ch+var_34], ecx
xor	ebx, ebx
xor	edi, edi
lea	esi, [esi+0]
lea	eax, [ebp+edi+0]
cmp	byte ptr [eax],	0
jz	short loc_67D23848
mov	[esp+5Ch+Count], esi
mov	edx, [esp+5Ch+var_40]
mov	[esp+5Ch+Source], edx
mov	[esp+5Ch+Dest],	eax
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D238C4
add	edi, esi
add	ebx, [esp+5Ch+var_34]
lea	eax, [ebp+edi+0]
cmp	byte ptr [eax],	0
jnz	short loc_67D2381D
inc	ebx
mov	[esp+5Ch+Dest],	ebx
call	g_malloc
mov	[esp+5Ch+var_3C], eax
xor	edi, edi
xor	ebx, ebx
mov	[esp+5Ch+var_38], ebp
mov	ebp, esi
mov	esi, ebx
mov	ebx, [esp+5Ch+var_38]
add	ebx, esi
cmp	byte ptr [ebx],	0
jz	short loc_67D2389E
mov	[esp+5Ch+Count], ebp
mov	eax, [esp+5Ch+var_40]
mov	[esp+5Ch+Source], eax
mov	[esp+5Ch+Dest],	ebx
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D238CC
mov	bl, [ebx]
mov	[esp+5Ch+var_41], bl
mov	eax, [esp+5Ch+var_3C]
mov	[eax+edi], bl
inc	esi
inc	edi
mov	ebx, [esp+5Ch+var_38]
add	ebx, esi
cmp	byte ptr [ebx],	0
jnz	short loc_67D2386C
mov	eax, [esp+5Ch+var_3C]
mov	byte ptr [eax+edi], 0
			
mov	eax, [esp+5Ch+var_3C]
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D23975
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
inc	edi
inc	ebx
jmp	loc_67D23814
align 4
mov	edx, [esp+5Ch+var_34]
mov	[esp+5Ch+Count], edx 
mov	eax, [esp+5Ch+var_30]
mov	[esp+5Ch+Source], eax 
mov	eax, [esp+5Ch+var_3C]
add	eax, edi
mov	[esp+5Ch+Dest],	eax 
call	strncpy
add	esi, ebp
add	edi, [esp+5Ch+var_34]
jmp	loc_67D23861
align 4
mov	[esp+5Ch+Count], offset	aStringNull 
mov	[esp+5Ch+Source], offset aPurple_strca_0 
mov	[esp+5Ch+Dest],	0
call	g_return_if_fail_warning
mov	[esp+5Ch+var_3C], 0
jmp	short loc_67D238A6
align 10h
mov	[esp+5Ch+Count], offset	aDelimiterNull 
mov	[esp+5Ch+Source], offset aPurple_strca_0 
mov	[esp+5Ch+Dest],	0
call	g_return_if_fail_warning
mov	[esp+5Ch+var_3C], 0
jmp	loc_67D238A6
align 4
mov	[esp+5Ch+Count], offset	aReplacementNul	
mov	[esp+5Ch+Source], offset aPurple_strca_0 
mov	[esp+5Ch+Dest],	0
call	g_return_if_fail_warning
mov	[esp+5Ch+var_3C], 0
jmp	loc_67D238A6
call	__stack_chk_fail
align 4
public purple_strcasestr
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D239B4
mov	[esp+1Ch+arg_0], 0FFFFFFFFh
mov	edx, 0FFFFFFFFh
add	esp, 1Ch
jmp	sub_67D19ADC
call	__stack_chk_fail
align 4
public purple_str_size_to_units
sub	esp, 3Ch
mov	ecx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
cmp	ecx, 0FFFFFFFFh
jz	loc_67D23A84
test	ecx, ecx
jz	short loc_67D23A58
xor	edx, edx
mov	dword ptr [esp+3Ch+var_24], ecx
mov	dword ptr [esp+3Ch+var_24+4], edx
fild	[esp+3Ch+var_24]
fld	ds:flt_67D47724
fxch	st(1)
fucom	st(1)
fnstsw	ax
test	ah, 45h
jnz	loc_67D23AAC
fld	ds:flt_67D47728
fmul	st(1), st
fxch	st(1)
fucom	st(2)
fnstsw	ax
test	ah, 45h
jnz	loc_67D23AD0
fmul	st, st(1)
fucom	st(2)
fnstsw	ax
fstp	st(2)
test	ah, 45h
jnz	loc_67D23AE0
fmulp	st(1), st
mov	eax, 3
			
mov	eax, ds:off_67D47524[eax*4]
mov	[esp+3Ch+var_30], eax
fstp	[esp+3Ch+var_38]
mov	[esp+3Ch+var_3C], offset a_2fS 
call	g_strdup_printf
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23AA4
add	esp, 3Ch
retn
mov	dword ptr [esp+3Ch+var_38], offset aUnknown_ 
mov	[esp+3Ch+var_3C], offset aPidgin_16 
call	libintl_dgettext
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23AA4
mov	[esp+3Ch+arg_0], eax
add	esp, 3Ch
jmp	g_strdup
mov	dword ptr [esp+3Ch+var_38], offset aCalculating___ 
mov	[esp+3Ch+var_3C], offset aPidgin_16 
call	libintl_dgettext
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jz	short loc_67D23A78
			
call	__stack_chk_fail
align 4
fstp	st
fstp	st
mov	dword ptr [esp+3Ch+var_38+4], offset aBytes 
mov	dword ptr [esp+3Ch+var_38], ecx
mov	[esp+3Ch+var_3C], offset aUS 
call	g_strdup_printf
jmp	loc_67D23A48
align 10h
fstp	st(1)
fstp	st(1)
mov	eax, 1
jmp	loc_67D23A2D
align 10h
fstp	st
mov	eax, 2
jmp	loc_67D23A2D
public purple_str_seconds_to_string
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
cmp	esi, 3Bh
jbe	loc_67D23C80
mov	ebx, 0C22E4507h
mov	eax, esi
mul	ebx
mov	ebx, edx
shr	ebx, 10h
lea	eax, [ebx+ebx*4]
lea	eax, [ebx+eax*4]
lea	ecx, [ebx+eax*8]
shl	ecx, 2
sub	ecx, ebx
shl	ecx, 7
mov	edi, esi
sub	edi, ecx
mov	esi, 91A2B3C5h
mov	eax, edi
mul	esi
mov	esi, edx
shr	esi, 0Bh
lea	eax, [esi+esi*2]
lea	eax, [eax+eax*4]
mov	ecx, eax
shl	ecx, 4
sub	ecx, eax
shl	ecx, 4
sub	edi, ecx
mov	ecx, 88888889h
mov	eax, edi
mul	ecx
mov	edi, edx
shr	edi, 5
test	ebx, ebx
jnz	loc_67D23C00
test	esi, esi
jz	loc_67D23CB3
nop
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], offset aDHours 
mov	[esp+2Ch+var_28], offset aDHour	
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	ebx, eax
xchg	ax, ax
			
test	edi, edi
jz	short loc_67D23BE4
test	ebx, ebx
jz	loc_67D23CC0
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], offset aSDMinutes 
mov	[esp+2Ch+var_28], offset aSDMinute 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, esi
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D23CF3
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
mov	[esp+2Ch+var_20], ebx
mov	[esp+2Ch+var_24], offset aDDays	
mov	[esp+2Ch+var_28], offset aDDay 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	ebx, eax
test	esi, esi
jz	loc_67D23B9C
test	eax, eax
jz	loc_67D23B6C
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], offset aSDHours 
mov	[esp+2Ch+var_28], offset aSDHour 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], ebx
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	ebx, esi
jmp	loc_67D23B9C
align 10h
mov	[esp+2Ch+var_20], esi
mov	[esp+2Ch+var_24], offset aDSeconds 
mov	[esp+2Ch+var_28], offset aDSecond 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	ebx, eax
jmp	loc_67D23BE4
xor	ebx, ebx
test	edi, edi
jz	loc_67D23BE4
lea	esi, [esi+0]
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], offset aDMinutes 
mov	[esp+2Ch+var_28], offset aDMinute 
mov	[esp+2Ch+var_2C], offset aPidgin_16 
call	libintl_dngettext
mov	[esp+2Ch+var_28], edi
mov	[esp+2Ch+var_2C], eax
call	g_strdup_printf
mov	ebx, eax
jmp	loc_67D23BE4
call	__stack_chk_fail
public purple_str_binary_to_ascii
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D23DC0
mov	[esp+3Ch+var_3C], edi
call	g_string_sized_new
mov	esi, eax
add	edi, ebx
jmp	short loc_67D23D4D
cmp	dl, 5Ch
jz	short loc_67D23DAC
mov	ecx, [esi+4]
lea	eax, [ecx+1]
cmp	eax, [esi+8]
jnb	short loc_67D23D94
mov	ebp, [esi]
mov	[ebp+ecx+0], dl
mov	[esi+4], eax
mov	edx, [esi]
mov	byte ptr [edx+ecx+1], 0
			
inc	ebx
cmp	ebx, edi
jz	short loc_67D23D70
			
movzx	edx, byte ptr [ebx]
lea	eax, [edx-20h]
cmp	al, 5Eh
jbe	short loc_67D23D28
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], offset aX02hhx 
mov	[esp+3Ch+var_3C], esi
call	g_string_append_printf
inc	ebx
cmp	ebx, edi
jnz	short loc_67D23D4D
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D23DF2
mov	[esp+3Ch+arg_4], 0
mov	[esp+3Ch+arg_0], esi
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
mov	[esp+3Ch+var_34], edx
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_string_insert_c
jmp	short loc_67D23D48
align 4
mov	[esp+3Ch+var_38], offset asc_67D467B8 
mov	[esp+3Ch+var_3C], esi
call	g_string_append
jmp	short loc_67D23D48
align 10h
mov	[esp+3Ch+var_34], offset aLen0_0 
mov	[esp+3Ch+var_38], offset aPurple_str_bin 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D23DF2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_got_protocol_handler_uri
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+Source]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+Val], 3Ah 
mov	[esp+6Ch+Str], esi 
call	strchr
mov	ebx, eax
test	eax, eax
jz	loc_67D24045
cmp	eax, esi
jz	loc_67D24045
mov	edi, eax
sub	edi, esi
cmp	edi, 0Ah
ja	loc_67D2403B
mov	[esp+6Ch+Count], edi 
mov	[esp+6Ch+Val], esi 
lea	edx, [esp+6Ch+Dest]
mov	[esp+6Ch+Str], edx 
call	strncpy
mov	[esp+edi+6Ch+Dest], 0
inc	ebx
mov	[esp+6Ch+Val], offset aXmpp 
lea	eax, [esp+6Ch+Dest]
mov	[esp+6Ch+Str], eax
call	g_str_equal
cmp	eax, 1
sbb	edx, edx
and	edx, 0FFFFFFEBh
add	edx, 3Bh
cmp	eax, 1
sbb	eax, eax
and	eax, 0FFFFFFEBh
add	eax, 3Bh
mov	[esp+6Ch+var_4C], al
mov	[esp+6Ch+var_5C], edx
lea	edx, [esp+6Ch+Dest]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+Count], ebx
mov	[esp+6Ch+Val], offset aProcessingMess 
mov	[esp+6Ch+Str], offset aUtil 
call	purple_debug_info
mov	[esp+6Ch+Val], 3Fh 
mov	[esp+6Ch+Str], ebx 
call	strchr
mov	esi, eax
test	eax, eax
jz	loc_67D2405B
sub	eax, ebx
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], ebx
call	g_strndup
mov	[esp+6Ch+var_30], eax
mov	[esp+6Ch+var_60], offset g_free
mov	[esp+6Ch+Count], offset	g_free
mov	[esp+6Ch+Val], offset g_str_equal
mov	[esp+6Ch+Str], offset g_str_hash
call	g_hash_table_new_full
mov	[esp+6Ch+var_34], eax
lea	ebx, [esi+1]
mov	al, [esi+1]
mov	edx, ebx
xor	edi, edi
test	al, al
jnz	loc_67D23FA6
nop
cmp	byte ptr [edx],	0
jz	loc_67D23FC9
			
test	edi, edi
jz	loc_67D24034
cmp	edi, edx
jz	short loc_67D23F8E
mov	eax, edi
sub	eax, edx
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], edx
call	g_strndup
mov	esi, eax
cmp	edi, ebx
jz	loc_67D2402C
lea	eax, [ebx-1]
cmp	edi, eax
jz	loc_67D2402C
sub	eax, edi
mov	[esp+6Ch+Val], eax
inc	edi
mov	[esp+6Ch+Str], edi
call	g_strndup
mov	edi, eax
movsx	eax, byte ptr [esi]
mov	ebp, esi
test	al, al
jz	short loc_67D23F78
mov	[esp+6Ch+Str], eax
call	g_ascii_tolower
mov	[ebp+0], al
inc	ebp
movsx	eax, byte ptr [ebp+0]
test	al, al
jnz	short loc_67D23F64
mov	[esp+6Ch+Count], edi
mov	[esp+6Ch+Val], esi
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	g_hash_table_insert
mov	al, [ebx]
test	al, al
jz	short loc_67D23FBC
lea	edx, [ebx+1]
mov	ecx, edx
xor	edi, edi
			
mov	al, [ebx+1]
mov	ebx, ecx
test	al, al
jz	loc_67D23F10
cmp	[esp+6Ch+var_4C], al
jz	loc_67D23F19
lea	ecx, [ebx+1]
cmp	al, 3Dh
jnz	short loc_67D23F99
mov	edi, ebx
jmp	short loc_67D23F99
align 4
mov	edx, ebx
xor	edi, edi
cmp	byte ptr [edx],	0
jnz	loc_67D23F19
call	purple_get_core
mov	edx, [esp+6Ch+var_34]
mov	[esp+6Ch+var_5C], edx
mov	edx, [esp+6Ch+var_30]
mov	[esp+6Ch+var_60], edx
lea	edx, [esp+6Ch+Dest]
mov	[esp+6Ch+Count], edx
mov	[esp+6Ch+Val], offset aUriHandler_0 
mov	[esp+6Ch+Str], eax
call	purple_signal_emit_return_1
mov	eax, [esp+6Ch+var_30]
mov	[esp+6Ch+Str], eax
call	g_free
mov	esi, [esp+6Ch+var_34]
test	esi, esi
jz	short loc_67D24016
mov	eax, [esp+6Ch+var_34]
mov	[esp+6Ch+Str], eax
call	g_hash_table_destroy
			
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2409B
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
xor	edi, edi
jmp	loc_67D23F5B
align 4
mov	edi, ebx
jmp	loc_67D23F21
mov	edi, 0Ah
jmp	loc_67D23E3D
			
mov	[esp+6Ch+Val], offset aMalformedProto 
mov	[esp+6Ch+Str], offset aUtil 
call	purple_debug_error
jmp	short loc_67D24016
mov	[esp+6Ch+Str], ebx
call	g_strdup
mov	ebx, eax
call	purple_get_core
mov	[esp+6Ch+var_5C], 0
mov	[esp+6Ch+var_60], ebx
lea	edx, [esp+6Ch+Dest]
mov	[esp+6Ch+Count], edx
mov	[esp+6Ch+Val], offset aUriHandler_0 
mov	[esp+6Ch+Str], eax
call	purple_signal_emit_return_1
mov	[esp+6Ch+Str], ebx
call	g_free
jmp	loc_67D24016
call	__stack_chk_fail
public purple_url_parse
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 45Ch
mov	ebx, [esp+46Ch+arg_0]
mov	edx, [esp+46Ch+arg_4]
mov	[esp+46Ch+var_440], edx
mov	esi, [esp+46Ch+arg_8]
mov	edx, [esp+46Ch+arg_C]
mov	[esp+46Ch+var_43C], edx
mov	edx, [esp+46Ch+arg_10]
mov	[esp+46Ch+var_438], edx
mov	edx, [esp+46Ch+arg_14]
mov	[esp+46Ch+var_434], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+46Ch+var_20], eax
xor	eax, eax
mov	[esp+46Ch+var_42C], 0
test	ebx, ebx
jz	loc_67D242D8
mov	[esp+46Ch+Val],	offset aHttp_5 
mov	[esp+46Ch+Str],	ebx
call	purple_strcasestr
test	eax, eax
jz	loc_67D2437C
lea	ebx, [eax+7]
mov	[esp+46Ch+var_430], 0
			
mov	[esp+46Ch+Val],	40h 
mov	[esp+46Ch+Str],	ebx 
call	strchr
mov	edi, eax
mov	[esp+46Ch+Val],	2Fh 
mov	[esp+46Ch+Str],	ebx 
call	strchr
test	edi, edi
jz	short loc_67D2415B
test	eax, eax
jz	loc_67D2428C
cmp	edi, eax
jb	loc_67D2428C
			
mov	[esp+46Ch+var_220], 0
mov	[esp+46Ch+var_120], 0
			
lea	edi, [esp+46Ch+var_320]
mov	[esp+46Ch+var_45C], edi
lea	ecx, [esp+46Ch+var_426]
mov	[esp+46Ch+var_460], ecx
lea	ebp, [esp+46Ch+var_420]
mov	[esp+46Ch+var_464], ebp
mov	[esp+46Ch+Val],	offset a255AZaZ09_5092 
mov	[esp+46Ch+Str],	ebx 
mov	[esp+46Ch+Src],	ecx
call	sscanf
mov	edx, eax
cmp	eax, 1
mov	ecx, [esp+46Ch+Src]
jz	loc_67D242FC
			
test	edx, edx
jnz	loc_67D242CC
mov	[esp+46Ch+var_420], 0
mov	[esp+46Ch+var_320], 0
lea	eax, [esp+46Ch+var_42C]
mov	[esp+46Ch+var_464], eax
mov	[esp+46Ch+Val],	offset aD_6 
mov	[esp+46Ch+Str],	ecx 
call	sscanf
dec	eax
jz	short loc_67D241F1
mov	[esp+46Ch+var_464], ebx
mov	[esp+46Ch+Val],	offset aErrorParsingUr 
mov	[esp+46Ch+Str],	offset aUtil 
call	purple_debug_error
mov	eax, [esp+46Ch+var_440]
test	eax, eax
jz	short loc_67D24207
mov	[esp+46Ch+Str],	ebp
call	g_strdup
mov	edx, [esp+46Ch+var_440]
mov	[edx], eax
test	esi, esi
jz	short loc_67D24211
mov	eax, [esp+46Ch+var_42C]
mov	[esi], eax
mov	eax, [esp+46Ch+var_43C]
test	eax, eax
jz	short loc_67D24227
mov	[esp+46Ch+Str],	edi
call	g_strdup
mov	edx, [esp+46Ch+var_43C]
mov	[edx], eax
mov	ebp, [esp+46Ch+var_438]
test	ebp, ebp
jz	short loc_67D24244
lea	eax, [esp+46Ch+var_220]
mov	[esp+46Ch+Str],	eax
call	g_strdup
mov	edx, [esp+46Ch+var_438]
mov	[edx], eax
mov	edi, [esp+46Ch+var_434]
test	edi, edi
jz	short loc_67D24261
lea	eax, [esp+46Ch+var_120]
mov	[esp+46Ch+Str],	eax
call	g_strdup
mov	edx, [esp+46Ch+var_434]
mov	[edx], eax
xor	eax, eax
cmp	[esp+46Ch+var_420], 0
setnz	al
mov	edx, [esp+46Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D243E0
add	esp, 45Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
lea	eax, [esp+46Ch+var_120]
mov	[esp+46Ch+var_460], eax
lea	ebp, [esp+46Ch+var_220]
mov	[esp+46Ch+var_464], ebp
mov	[esp+46Ch+Val],	offset a255AZaZ09__?25 
mov	[esp+46Ch+Str],	ebx 
call	sscanf
cmp	eax, 1
jz	loc_67D243A0
lea	ebx, [edi+1]
test	eax, eax
jg	loc_67D2416B
jmp	loc_67D2415B
align 4
dec	edx
jg	loc_67D241BE
jmp	loc_67D241B6
mov	[esp+46Ch+var_464], offset aUrlNull 
mov	[esp+46Ch+Val],	offset aPurple_url_par 
mov	[esp+46Ch+Str],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D2426B
align 4
mov	[esp+46Ch+var_460], edi
mov	[esp+46Ch+var_464], ebp
mov	[esp+46Ch+Val],	offset a255AZaZ09_255A 
mov	[esp+46Ch+Str],	ebx 
call	sscanf
mov	edx, eax
mov	eax, [esp+46Ch+var_430]
test	eax, eax
mov	ecx, [esp+46Ch+Src]
jz	short loc_67D2434C
mov	[esp+46Ch+var_464], offset a443	
mov	[esp+46Ch+Val],	6
mov	[esp+46Ch+Str],	ecx
mov	[esp+46Ch+var_444], edx
call	g_snprintf
mov	edx, [esp+46Ch+var_444]
mov	ecx, [esp+46Ch+Src]
jmp	loc_67D241A9
align 4
mov	[esp+46Ch+var_464], offset a80 
mov	[esp+46Ch+Val],	6
mov	[esp+46Ch+Str],	ecx
mov	[esp+46Ch+var_444], edx
mov	[esp+46Ch+Src],	ecx
call	g_snprintf
mov	ecx, [esp+46Ch+Src]
mov	edx, [esp+46Ch+var_444]
jmp	loc_67D241A9
align 4
mov	[esp+46Ch+Val],	offset aHttps 
mov	[esp+46Ch+Str],	ebx
call	purple_strcasestr
test	eax, eax
jz	short loc_67D243D3
lea	ebx, [eax+8]
mov	[esp+46Ch+var_430], 1
jmp	loc_67D24125
mov	[esp+46Ch+var_464], ebp
mov	[esp+46Ch+Val],	offset a255AZaZ09__?@ 
mov	[esp+46Ch+Str],	ebx 
call	sscanf
lea	ebx, [edi+1]
test	eax, eax
jle	loc_67D2415B
dec	eax
jnz	loc_67D2416B
mov	[esp+46Ch+var_120], 0
jmp	loc_67D2416B
mov	[esp+46Ch+var_430], 0
jmp	loc_67D24125
call	__stack_chk_fail
align 4
public purple_util_fetch_url_cancel
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+40h]
test	eax, eax
jz	short loc_67D2440A
mov	[esp+2Ch+var_2C], eax
call	purple_ssl_close
mov	eax, [ebx+44h]
test	eax, eax
jz	short loc_67D24419
mov	[esp+2Ch+var_2C], eax
call	purple_proxy_connect_cancel
mov	eax, [ebx+4Ch]
test	eax, eax
jnz	loc_67D244A4
mov	eax, [ebx+48h]
test	eax, eax
js	short loc_67D24433
mov	[esp+2Ch+var_2C], eax 
call	wpurple_close
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+18h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+1Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+30h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [ebx+58h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D244B1
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_2C], eax
call	purple_input_remove
jmp	loc_67D24424
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 34h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
lea	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_3C], eax
call	g_strdup_vprintf
mov	esi, eax
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	eax, [ebx+4]
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	dword ptr [ebx]
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	[esp+3Ch+var_3C], ebx
call	purple_util_fetch_url_cancel
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D24524
add	esp, 34h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 4
public purple_util_fetch_url_request_len_with_account
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	edi, [esp+6Ch+arg_0]
mov	ebx, [esp+6Ch+arg_4]
mov	edx, [esp+6Ch+arg_8]
mov	[esp+6Ch+var_40], edx
mov	esi, [esp+6Ch+arg_C]
mov	edx, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_3C], edx
mov	edx, [esp+6Ch+arg_14]
mov	[esp+6Ch+var_38], edx
mov	edx, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_34], edx
mov	edx, [esp+6Ch+arg_1C]
mov	[esp+6Ch+var_48], edx
mov	edx, [esp+6Ch+arg_20]
mov	[esp+6Ch+var_44], edx
mov	edx, [esp+6Ch+arg_24]
mov	[esp+6Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D24750
mov	eax, [esp+6Ch+var_44]
test	eax, eax
jz	loc_67D24774
call	purple_debug_is_unsafe
test	eax, eax
jz	loc_67D24700
test	esi, esi
jz	loc_67D247FC
mov	eax, esi
mov	edx, [esp+6Ch+var_3C]
mov	[esp+6Ch+var_58], edx
mov	[esp+6Ch+var_5C], eax
mov	edx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aRequestedToFet 
mov	[esp+6Ch+var_6C], offset aUtil 
call	purple_debug_info
mov	[esp+6Ch+var_6C], 70h
call	g_malloc0
mov	ebp, eax
mov	edx, [esp+6Ch+var_44]
mov	[eax], edx
mov	edx, [esp+6Ch+var_30]
mov	[eax+4], edx
mov	[esp+6Ch+var_6C], ebx
call	g_strdup
mov	[ebp+1Ch], eax
mov	[esp+6Ch+var_6C], esi
call	g_strdup
mov	[ebp+28h], eax
mov	edx, [esp+6Ch+var_3C]
mov	[ebp+2Ch], edx
mov	edx, [esp+6Ch+var_40]
mov	[ebp+24h], edx
mov	edx, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[ebp+30h], eax
mov	edx, [esp+6Ch+var_34]
mov	[ebp+38h], edx
mov	dword ptr [ebp+48h], 0FFFFFFFFh
mov	eax, [esp+6Ch+var_48]
test	eax, eax
jle	loc_67D247D0
mov	eax, [esp+6Ch+var_48]
mov	[ebp+64h], eax
mov	[ebp+6Ch], edi
lea	eax, [ebp+0Ch]
mov	[esp+6Ch+var_58], eax
lea	eax, [ebp+8]
mov	[esp+6Ch+var_5C], eax
lea	eax, [ebp+18h]
mov	[esp+6Ch+var_60], eax
lea	eax, [ebp+14h]
mov	[esp+6Ch+var_64], eax
lea	eax, [ebp+10h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebx
call	purple_url_parse
mov	[esp+6Ch+var_68], offset aHttps	
mov	[esp+6Ch+var_6C], ebx
call	purple_strcasestr
test	eax, eax
jz	loc_67D24798
call	purple_ssl_is_supported
test	eax, eax
jz	loc_67D24808
mov	dword ptr [ebp+3Ch], 1
mov	[esp+6Ch+var_58], ebp
mov	[esp+6Ch+var_5C], offset loc_67D24E54
mov	[esp+6Ch+var_60], offset loc_67D24D28
mov	eax, [ebp+14h]
mov	[esp+6Ch+var_64], eax
mov	eax, [ebp+10h]
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], edi
call	purple_ssl_connect
mov	[ebp+40h], eax
test	eax, eax
jz	short loc_67D2471C
			
mov	eax, ebp
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D24850
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+6Ch+var_68], offset aRequestingToFe 
mov	[esp+6Ch+var_6C], offset aUtil 
call	purple_debug_info
jmp	loc_67D245EB
align 4
mov	eax, [ebp+44h]
test	eax, eax
jnz	short loc_67D246E5
mov	ebx, [ebp+10h]
mov	[esp+6Ch+var_68], offset aUnableToConn_0 
mov	[esp+6Ch+var_6C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	sub_67D244B8
xor	ebp, ebp
jmp	short loc_67D246E5
align 10h
mov	[esp+6Ch+var_64], offset aUrlNull 
mov	[esp+6Ch+var_68], offset aPurple_util_fe 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	loc_67D246E5
align 4
mov	[esp+6Ch+var_64], offset aCallbackNull_0 
mov	[esp+6Ch+var_68], offset aPurple_util_fe 
mov	[esp+6Ch+var_6C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	loc_67D246E5
align 4
mov	[esp+6Ch+var_58], ebp
mov	[esp+6Ch+var_5C], offset loc_67D24D90
mov	eax, [ebp+14h]
mov	[esp+6Ch+var_60], eax
mov	eax, [ebp+10h]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+var_68], edi
mov	[esp+6Ch+var_6C], 0
call	purple_proxy_connect
mov	[ebp+44h], eax
mov	eax, [ebp+40h]
jmp	loc_67D246E1
align 10h
mov	[esp+6Ch+var_60], 80000h
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], offset aDefaultingMaxD 
mov	[esp+6Ch+var_6C], offset aUtil 
call	purple_debug_error
mov	eax, 80000h
jmp	loc_67D24657
align 4
mov	eax, offset aNull_4 
jmp	loc_67D245BF
align 4
mov	[esp+6Ch+var_68], offset aServerRequires 
mov	[esp+6Ch+var_6C], offset aPidgin_16 
call	libintl_dgettext
mov	esi, eax
mov	ebx, [ebp+10h]
mov	[esp+6Ch+var_68], offset aUnableToConn_1 
mov	[esp+6Ch+var_6C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], ebx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ebp
call	sub_67D244B8
xor	ebp, ebp
jmp	loc_67D246E5
call	__stack_chk_fail
align 4
public purple_util_fetch_url_request_len
			
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_20]
mov	[esp+4Ch+var_28], eax
mov	eax, [esp+4Ch+arg_1C]
mov	[esp+4Ch+var_2C], eax
mov	eax, [esp+4Ch+arg_18]
mov	[esp+4Ch+var_30], eax
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_34], eax
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_38], eax
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_3C], eax
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_40], eax
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 0
call	purple_util_fetch_url_request_len_with_account
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D248CA
add	esp, 4Ch
retn
call	__stack_chk_fail
align 10h
public purple_util_fetch_url_request
sub	esp, 4Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+4Ch+arg_1C]
mov	[esp+4Ch+var_28], eax
mov	eax, [esp+4Ch+arg_18]
mov	[esp+4Ch+var_2C], eax
mov	[esp+4Ch+var_30], 0FFFFFFFFh
mov	eax, [esp+4Ch+arg_14]
mov	[esp+4Ch+var_34], eax
mov	eax, [esp+4Ch+arg_10]
mov	[esp+4Ch+var_38], eax
mov	eax, [esp+4Ch+arg_C]
mov	[esp+4Ch+var_3C], eax
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_40], eax
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+var_44], eax
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], 0
call	purple_util_fetch_url_request_len_with_account
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D24942
add	esp, 4Ch
retn
call	__stack_chk_fail
align 4
			
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 14Ch
mov	ebp, [esp+15Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+15Ch+var_20], eax
xor	eax, eax
mov	eax, [ebp+30h]
test	eax, eax
jz	loc_67D24AE0
call	purple_debug_is_unsafe
test	eax, eax
jz	loc_67D24A9C
mov	eax, [ebp+30h]
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aRequestS 
mov	[esp+15Ch+var_15C], offset aUtil 
call	purple_debug_misc
mov	ebx, [ebp+30h]
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
lea	esi, [ecx-1]
mov	ecx, [ebp+3Ch]
test	ecx, ecx
mov	eax, [ebp+34h]
mov	ecx, esi
jz	short loc_67D24A34
sub	ecx, eax
mov	[esp+15Ch+var_154], ecx
add	ebx, eax
mov	[esp+15Ch+var_158], ebx
mov	eax, [ebp+40h]
mov	[esp+15Ch+var_15C], eax
call	purple_ssl_write
test	eax, eax
js	short loc_67D24A4F
add	eax, [ebp+34h]
mov	[ebp+34h], eax
cmp	esi, eax
ja	short loc_67D24A16
mov	edx, [ebp+3Ch]
test	edx, edx
mov	eax, [ebp+4Ch]
mov	[esp+15Ch+var_15C], eax
jnz	loc_67D24AB8
call	purple_input_remove
mov	[esp+15Ch+var_150], ebp
mov	[esp+15Ch+var_154], offset sub_67D24ECC
mov	[esp+15Ch+var_158], 1
mov	eax, [ebp+48h]
mov	[esp+15Ch+var_15C], eax
call	purple_input_add
mov	[ebp+4Ch], eax
			
mov	eax, [esp+15Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D24D20
add	esp, 14Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
sub	ecx, eax
mov	[esp+15Ch+var_154], ecx	
add	ebx, eax
mov	[esp+15Ch+var_158], ebx	
mov	eax, [ebp+48h]
mov	[esp+15Ch+var_15C], eax	
call	wpurple_write
test	eax, eax
jns	short loc_67D249D4
call	_errno
cmp	dword ptr [eax], 0Bh
jz	short loc_67D24A16
call	_errno
mov	eax, [eax]
mov	[esp+15Ch+var_15C], eax
call	wpurple_strerror
mov	edi, eax
mov	ebx, [ebp+10h]
mov	[esp+15Ch+var_158], offset aErrorWriting_5 
mov	[esp+15Ch+var_15C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+15Ch+var_150], edi
mov	[esp+15Ch+var_154], ebx
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+var_15C], ebp
call	sub_67D244B8
jmp	loc_67D24A16
align 4
mov	[esp+15Ch+var_158], offset aRequestConstru 
mov	[esp+15Ch+var_15C], offset aUtil 
call	purple_debug_misc
jmp	loc_67D2499A
align 4
call	purple_input_remove
mov	dword ptr [ebp+4Ch], 0
mov	[esp+15Ch+var_154], ebp
mov	[esp+15Ch+var_158], offset sub_67D257A8
mov	eax, [ebp+40h]
mov	[esp+15Ch+var_15C], eax
call	purple_ssl_input_add
jmp	loc_67D24A16
mov	eax, [ebp+6Ch]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_get_setup
mov	[esp+15Ch+var_130], eax
mov	[esp+15Ch+var_15C], 0
call	g_string_new
mov	ebx, eax
mov	edi, [ebp+2Ch]
test	edi, edi
jnz	loc_67D24BD8
mov	edi, offset a1_0_4 
mov	esi, [ebp+24h]
test	esi, esi
jz	loc_67D24BE4
mov	eax, [ebp+1Ch]
test	eax, eax
jz	loc_67D24D16
mov	ecx, offset byte_67D45CB8
mov	[esp+15Ch+var_14C], edi
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+var_154], ecx
mov	[esp+15Ch+var_158], offset aGetSSHttpSConn 
mov	[esp+15Ch+var_15C], ebx
call	g_string_append_printf
mov	eax, [ebp+28h]
test	eax, eax
jz	short loc_67D24B5F
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aUserAgentS 
mov	[esp+15Ch+var_15C], ebx
call	g_string_append_printf
mov	eax, [ebp+10h]
test	eax, eax
jz	loc_67D24CF8
mov	[esp+15Ch+var_154], eax
mov	[esp+15Ch+var_158], offset aAcceptHostS	
mov	[esp+15Ch+var_15C], ebx
call	g_string_append_printf
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_username
test	eax, eax
jz	short loc_67D24BAE
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_type
cmp	eax, 4
jz	short loc_67D24BFC
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_type
dec	eax
jz	short loc_67D24BFC
			
mov	[esp+15Ch+var_158], offset asc_67D46B6C	
mov	[esp+15Ch+var_15C], ebx
call	g_string_append
mov	[esp+15Ch+var_158], 0
mov	[esp+15Ch+var_15C], ebx
call	g_string_free
mov	[ebp+30h], eax
jmp	loc_67D24972
align 4
mov	edi, offset a1_1 
jmp	loc_67D24B0D
align 4
mov	eax, [ebp+18h]
test	eax, eax
jz	loc_67D24D0C
mov	ecx, offset asc_67D46A74 
jmp	loc_67D24B28
align 4
			
mov	[esp+15Ch+var_158], 100h 
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+var_134], eax
mov	[esp+15Ch+var_15C], eax	
call	wpurple_gethostname
mov	[esp+15Ch+var_21], 0
test	eax, eax
js	short loc_67D24C27
cmp	[esp+15Ch+var_120], 0
jnz	short loc_67D24C4B
mov	[esp+15Ch+var_158], offset aProxyGethostna 
mov	[esp+15Ch+var_15C], offset aUtil 
call	purple_debug_warning
mov	esi, offset aLocalhost_0 
mov	ecx, 0Ah
mov	edi, [esp+15Ch+var_134]
rep movsb
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_password
test	eax, eax
jz	loc_67D24D02
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_password
mov	edi, eax
mov	eax, [esp+15Ch+var_130]
mov	[esp+15Ch+var_15C], eax
call	purple_proxy_info_get_username
mov	[esp+15Ch+var_154], edi
mov	[esp+15Ch+var_158], eax
mov	[esp+15Ch+var_15C], offset aSS_5 
call	g_strdup_printf
mov	esi, eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+15Ch+var_158], ecx
mov	[esp+15Ch+var_15C], esi
call	g_base64_encode
mov	edi, eax
mov	[esp+15Ch+var_15C], esi
call	g_free
mov	[esp+15Ch+var_158], offset byte_67D45CB8
lea	eax, [esp+15Ch+var_120]
mov	[esp+15Ch+var_15C], eax
call	purple_ntlm_gen_type1
mov	esi, eax
mov	[esp+15Ch+var_150], eax
mov	[esp+15Ch+var_154], edi
mov	[esp+15Ch+var_158], offset aProxyAuthori_0 
mov	[esp+15Ch+var_15C], ebx
call	g_string_append_printf
mov	[esp+15Ch+var_15C], esi
call	g_free
mov	[esp+15Ch+var_15C], edi
call	g_free
jmp	loc_67D24BAE
align 4
mov	eax, offset byte_67D45CB8
jmp	loc_67D24B6A
mov	edi, offset byte_67D45CB8
jmp	loc_67D24C6D
mov	eax, offset byte_67D45CB8
jmp	loc_67D24BEF
mov	eax, offset byte_67D45CB8
jmp	loc_67D24B23
call	__stack_chk_fail
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	[esp+0Ch], ebx
mov	dword ptr [esp+8], offset sub_67D24948
mov	dword ptr [esp+4], 2
mov	eax, [esi+1Ch]
mov	[esp], eax
call	purple_input_add
mov	[ebx+4Ch], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D24D8B
mov	dword ptr [esp+38h], 2
mov	eax, [esi+1Ch]
mov	[esp+34h], eax
mov	[esp+30h], ebx
add	esp, 24h
pop	ebx
pop	esi
jmp	sub_67D24948
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+34h]
mov	edi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [ebx+44h], 0
cmp	esi, 0FFFFFFFFh
jz	short loc_67D24E04
mov	[ebx+48h], esi
mov	[esp+0Ch], ebx
mov	dword ptr [esp+8], offset sub_67D24948
mov	dword ptr [esp+4], 2
mov	[esp], esi
call	purple_input_add
mov	[ebx+4Ch], eax
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D24E4F
mov	dword ptr [esp+38h], 2
mov	[esp+34h], esi
mov	[esp+30h], ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	sub_67D24948
align 4
mov	esi, [ebx+10h]
test	esi, esi
jz	short loc_67D24E48
mov	dword ptr [esp+4], offset aUnableToConn_1 
mov	dword ptr [esp], offset	aPidgin_16 
call	libintl_dgettext
mov	[esp+0Ch], edi
mov	[esp+8], esi
mov	[esp+4], eax
mov	[esp], ebx
call	sub_67D244B8
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D24E4F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	esi, offset byte_67D45CB8
jmp	short loc_67D24E0B
			
call	__stack_chk_fail
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	dword ptr [ebx+40h], 0
mov	eax, [esp+34h]
mov	[esp], eax
call	purple_ssl_strerror
mov	edi, eax
mov	esi, [ebx+10h]
test	esi, esi
jz	short loc_67D24EC0
mov	dword ptr [esp+4], offset aUnableToConn_1 
mov	dword ptr [esp], offset	aPidgin_16 
call	libintl_dgettext
mov	[esp+0Ch], edi
mov	[esp+8], esi
mov	[esp+4], eax
mov	[esp], ebx
call	sub_67D244B8
mov	eax, [esp+1Ch]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D24EC7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	esi, offset byte_67D45CB8
jmp	short loc_67D24E85
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
mov	eax, 105Ch
call	sub_67D2FA40
sub	esp, eax
mov	ebp, [esp+10h+arg_105C]
mov	eax, [esp+10h+arg_1060]
mov	[esp+10h+arg_20], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+10h+arg_1038], edx
xor	edx, edx
mov	eax, [ebp+3Ch]
test	eax, eax
jnz	short loc_67D24F10
mov	edi, [esp+10h+arg_20]
test	edi, edi
js	loc_67D25599
			
mov	[esp+10h+arg_1C], 0FFFFFFFFh
lea	ecx, [esp+10h+arg_38]
mov	[esp+10h+arg_18], ecx
test	eax, eax
jnz	loc_67D252FE
			
mov	eax, [esp+10h+arg_20]
test	eax, eax
js	loc_67D25330
mov	[esp+10h+Count], 1000h 
lea	eax, [esp+10h+arg_38]
mov	[esp+10h+SubStr], eax 
mov	edx, [esp+10h+arg_20]
mov	[esp+10h+Str], edx 
call	wpurple_read
mov	[esp+10h+arg_1C], eax
test	eax, eax
jle	loc_67D25330
mov	ebx, [ebp+5Ch]
mov	ecx, [esp+10h+arg_1C]
add	ecx, ebx
mov	esi, [ebp+64h]
cmp	ecx, esi
ja	loc_67D2553D
mov	edx, [ebp+60h]
cmp	ecx, edx
jnb	loc_67D251C0
mov	eax, [ebp+58h]
mov	[ebp+5Ch], ecx
add	eax, ebx
mov	edi, eax
mov	esi, [esp+10h+arg_18]
mov	ecx, [esp+10h+arg_1C]
rep movsb
mov	edx, [ebp+58h]
mov	eax, [ebp+5Ch]
mov	byte ptr [edx+eax], 0
mov	esi, [ebp+50h]
test	esi, esi
jnz	loc_67D252E4
mov	ebx, [ebp+58h]
mov	[esp+10h+SubStr], offset asc_67D46BE6 
mov	[esp+10h+Str], ebx 
call	strstr
test	eax, eax
jz	loc_67D252E4
add	eax, 4
mov	[esp+10h+arg_24], eax
mov	edi, eax
sub	edi, ebx
mov	[esp+10h+var_4], ebx
mov	[esp+10h+Count], edi
mov	[esp+10h+SubStr], offset aResponseHeader 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_misc
mov	[esp+10h+Count], offset	aLocation 
mov	[esp+10h+SubStr], edi
mov	eax, [ebp+58h]
mov	[esp+10h+Str], eax
call	g_strstr_len
test	eax, eax
jz	loc_67D25205
lea	ebx, [eax+0Ah]
mov	[esp+10h+SubStr], 0Dh 
mov	[esp+10h+Str], ebx 
call	strchr
test	eax, eax
jz	loc_67D251ED
mov	edi, eax
sub	edi, ebx
lea	eax, [edi+1]
mov	[esp+10h+Str], eax
call	g_malloc
mov	esi, eax
mov	[esp+10h+Count], edi 
mov	[esp+10h+SubStr], ebx 
mov	[esp+10h+Str], eax 
call	strncpy
mov	byte ptr [esi+edi], 0
mov	ebx, [ebp+24h]
cmp	byte ptr [esi],	2Fh
jz	loc_67D253CC
mov	[esp+10h+Count], offset	asc_67D46C11 
mov	[esp+10h+SubStr], edi
mov	[esp+10h+Str], esi
call	g_strstr_len
test	eax, eax
jz	loc_67D253CC
mov	[esp+10h+Count], esi
mov	[esp+10h+SubStr], offset aRedirectingToS 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_info
mov	eax, [ebp+20h]
inc	eax
mov	[ebp+20h], eax
cmp	eax, 4
jg	loc_67D253A0
mov	eax, [ebp+1Ch]
mov	[esp+10h+Str], eax
call	g_free
mov	[ebp+1Ch], esi
mov	[ebp+24h], ebx
mov	eax, [ebp+30h]
mov	[esp+10h+Str], eax
call	g_free
mov	dword ptr [ebp+30h], 0
mov	ebx, [ebp+3Ch]
test	ebx, ebx
jz	loc_67D25484
mov	dword ptr [ebp+3Ch], 0
mov	eax, [ebp+40h]
mov	[esp+10h+Str], eax
call	purple_ssl_close
mov	dword ptr [ebp+40h], 0
mov	dword ptr [ebp+34h], 0
mov	dword ptr [ebp+5Ch], 0
mov	dword ptr [ebp+60h], 0
mov	eax, [ebp+8]
mov	[esp+10h+Str], eax
call	g_free
mov	eax, [ebp+0Ch]
mov	[esp+10h+Str], eax
call	g_free
mov	eax, [ebp+10h]
mov	[esp+10h+Str], eax
call	g_free
mov	eax, [ebp+18h]
mov	[esp+10h+Str], eax
call	g_free
lea	eax, [ebp+0Ch]
mov	[esp+10h+arg_0], eax
lea	eax, [ebp+8]
mov	[esp+10h], eax
lea	eax, [ebp+18h]
mov	[esp+10h+var_4], eax
lea	eax, [ebp+14h]
mov	[esp+10h+Count], eax
lea	eax, [ebp+10h]
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], esi
call	purple_url_parse
mov	[esp+10h+SubStr], offset aHttps	
mov	[esp+10h+Str], esi
call	purple_strcasestr
test	eax, eax
jz	loc_67D25505
mov	dword ptr [ebp+3Ch], 1
mov	[esp+10h+arg_0], ebp
mov	dword ptr [esp+10h], offset loc_67D24E54
mov	[esp+10h+var_4], offset	loc_67D24D28
mov	eax, [ebp+14h]
mov	[esp+10h+Count], eax
mov	eax, [ebp+10h]
mov	[esp+10h+SubStr], eax
mov	eax, [ebp+6Ch]
mov	[esp+10h+Str], eax
call	purple_ssl_connect
mov	[ebp+40h], eax
test	eax, eax
jz	loc_67D254EA
			
mov	eax, [esp+10h+arg_1038]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D25796
add	esp, 105Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
add	edx, 1000h
cmp	ecx, edx
jnb	short loc_67D251C0
mov	[ebp+60h], edx
mov	[esp+10h+SubStr], edx
mov	eax, [ebp+58h]
mov	[esp+10h+Str], eax
call	g_realloc
mov	[ebp+58h], eax
mov	ebx, [ebp+5Ch]
mov	ecx, [esp+10h+arg_1C]
add	ecx, ebx
jmp	loc_67D24F7E
mov	[esp+10h+SubStr], 0Ah 
mov	[esp+10h+Str], ebx 
call	strchr
test	eax, eax
jnz	loc_67D25020
mov	dword ptr [ebp+50h], 1
mov	eax, [ebp+58h]
mov	[esp+10h+Size],	0
mov	ecx, offset aContentLengt_0 
mov	edx, edi
call	sub_67D19C94
test	eax, eax
jz	short loc_67D25262
lea	edx, [esp+10h+Size]
mov	[esp+10h+Count], edx
mov	[esp+10h+SubStr], offset aU_5 
mov	[esp+10h+Str], eax 
call	sscanf
dec	eax
jnz	loc_67D25460
mov	eax, [esp+10h+Size]
mov	[esp+10h+Count], eax
mov	[esp+10h+SubStr], offset aParsedU 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_misc
mov	esi, [esp+10h+Size]
mov	eax, [ebp+58h]
mov	ecx, offset aTransferEncodi 
mov	edx, edi
call	sub_67D19C94
test	eax, eax
jz	loc_67D254B0
mov	[esp+10h+Count], 7
mov	[esp+10h+SubStr], offset aChunked 
mov	[esp+10h+Str], eax
call	g_ascii_strncasecmp
test	eax, eax
setz	al
movzx	eax, al
mov	[ebp+68h], eax
test	esi, esi
jz	loc_67D25400
mov	dword ptr [ebp+54h], 1
mov	eax, [ebp+64h]
cmp	eax, esi
jb	loc_67D254B7
mov	edx, [ebp+38h]
test	edx, edx
jz	loc_67D25410
add	edi, esi
mov	[ebp+60h], edi
mov	[esp+10h+SubStr], edi
mov	eax, [ebp+58h]
mov	[esp+10h+Str], eax
call	g_try_realloc
test	eax, eax
jz	loc_67D25710
mov	[ebp+58h], eax
			
mov	eax, [ebp+54h]
test	eax, eax
jz	short loc_67D252F3
mov	eax, [ebp+5Ch]
cmp	eax, [ebp+60h]
jnb	short loc_67D25344
mov	eax, [ebp+3Ch]
test	eax, eax
jz	loc_67D24F28
mov	[esp+10h+Count], 1000h
lea	ecx, [esp+10h+arg_38]
mov	[esp+10h+SubStr], ecx
mov	eax, [ebp+40h]
mov	[esp+10h+Str], eax
call	purple_ssl_read
mov	[esp+10h+arg_1C], eax
test	eax, eax
jg	loc_67D24F5C
mov	eax, [ebp+3Ch]
test	eax, eax
jz	loc_67D24F28
			
cmp	[esp+10h+arg_1C], 0
jl	loc_67D2556D
jnz	loc_67D2519F
mov	eax, [ebp+5Ch]
inc	eax
mov	[esp+10h+SubStr], eax
mov	eax, [ebp+58h]
mov	[esp+10h+Str], eax
call	g_realloc
mov	[ebp+58h], eax
mov	edx, [ebp+5Ch]
mov	byte ptr [eax+edx], 0
mov	eax, [ebp+38h]
test	eax, eax
jnz	short loc_67D25370
mov	eax, [ebp+68h]
test	eax, eax
jnz	loc_67D255D8
mov	esi, [ebp+5Ch]
mov	dword ptr [esp+10h], 0
mov	[esp+10h+var_4], esi
mov	eax, [ebp+58h]
mov	[esp+10h+Count], eax
mov	eax, [ebp+4]
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], ebp
call	dword ptr [ebp+0]
mov	[esp+10h+Str], ebp
call	purple_util_fetch_url_cancel
jmp	loc_67D2519F
mov	ebx, [ebp+1Ch]
mov	[esp+10h+SubStr], offset aCouldNotOpenSR 
			
mov	[esp+10h+Str], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+10h+Count], ebx
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], ebp
call	sub_67D244B8
jmp	loc_67D2519F
			
mov	[esp+10h+var_4], esi
mov	eax, [ebp+14h]
mov	[esp+10h+Count], eax
mov	eax, [ebp+10h]
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], offset aSDS 
call	g_strdup_printf
mov	ebx, eax
mov	[esp+10h+Str], esi
call	g_free
mov	esi, ebx
xor	ebx, ebx
jmp	loc_67D2506D
align 10h
mov	esi, 2000h
mov	edx, [ebp+38h]
test	edx, edx
jnz	loc_67D252C5
mov	ebx, [ebp+5Ch]
sub	ebx, edi
mov	[esp+10h+arg_28], esi
cmp	esi, ebx
jnb	short loc_67D25421
mov	[esp+10h+arg_28], ebx
mov	edx, [esp+10h+arg_28]
mov	[esp+10h+Str], edx
call	g_try_malloc
test	eax, eax
jz	loc_67D256D1
test	ebx, ebx
jnz	loc_67D254DB
mov	edx, [ebp+58h]
mov	[esp+10h+Str], edx
mov	[esp+10h+arg_14], eax
call	g_free
mov	[ebp+5Ch], ebx
mov	edx, [esp+10h+arg_28]
mov	[ebp+60h], edx
mov	eax, [esp+10h+arg_14]
jmp	loc_67D252E1
align 10h
mov	[esp+10h+SubStr], offset aInvalidNumberF 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_warning
mov	[esp+10h+Size],	0
xor	eax, eax
jmp	loc_67D2524A
align 4
mov	eax, [ebp+4Ch]
mov	[esp+10h+Str], eax
call	purple_input_remove
mov	dword ptr [ebp+4Ch], 0
mov	eax, [ebp+48h]
mov	[esp+10h+Str], eax 
call	wpurple_close
mov	dword ptr [ebp+48h], 0FFFFFFFFh
jmp	loc_67D250DC
align 10h
xor	eax, eax
jmp	loc_67D2529D
mov	[esp+10h+var_4], eax
mov	[esp+10h+Count], esi
mov	[esp+10h+SubStr], offset aOverridingExpl 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_error
mov	esi, [ebp+64h]
jmp	loc_67D252BA
mov	edi, eax
mov	esi, [esp+10h+arg_24]
mov	ecx, ebx
rep movsb
jmp	loc_67D2543D
mov	ecx, [ebp+44h]
test	ecx, ecx
jnz	loc_67D2519F
mov	ebx, [ebp+10h]
mov	[esp+10h+SubStr], offset aUnableToConn_0 
jmp	loc_67D253AB
mov	[esp+10h+arg_0], ebp
mov	dword ptr [esp+10h], offset loc_67D24D90
mov	eax, [ebp+14h]
mov	[esp+10h+var_4], eax
mov	eax, [ebp+10h]
mov	[esp+10h+Count], eax
mov	eax, [ebp+6Ch]
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], 0
call	purple_proxy_connect
mov	[ebp+44h], eax
mov	eax, [ebp+40h]
jmp	loc_67D25197
mov	ebx, [ebp+10h]
mov	[esp+10h+SubStr], offset aErrorReadingFr 
mov	[esp+10h+Str], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+10h+var_4], esi
mov	[esp+10h+Count], ebx
mov	[esp+10h+SubStr], eax
mov	[esp+10h+Str], ebp
call	sub_67D244B8
jmp	loc_67D2519F
call	_errno
cmp	dword ptr [eax], 0Bh
jz	loc_67D2519F
call	_errno
mov	eax, [eax]
mov	[esp+10h+Str], eax
call	wpurple_strerror
mov	esi, eax
mov	ebx, [ebp+10h]
mov	[esp+10h+SubStr], offset aErrorReading_4 
jmp	short loc_67D25548
mov	dword ptr [esp+10h], 0
mov	[esp+10h+var_4], offset	aUrl_fetch_recv	
mov	[esp+10h+Count], 0F04h
mov	[esp+10h+SubStr], offset aUtil_c 
mov	[esp+10h+Str], 0
call	g_warn_message
call	_errno
mov	dword ptr [eax], 16h
mov	eax, [ebp+3Ch]
jmp	loc_67D24F10
lea	ecx, [ebp+5Ch]
mov	[esp+10h+arg_28], ecx
mov	edx, [ebp+58h]
mov	[esp+10h+arg_20], edx
cmp	byte ptr [edx],	0
jz	loc_67D2579B
mov	edi, edx
xor	esi, esi
mov	[esp+10h+arg_1C], esi
mov	[esp+10h+arg_24], ebp
mov	ebp, edx
jmp	loc_67D25685
mov	ebx, [esp+10h+Size]
test	ebx, ebx
jz	loc_67D25729
mov	[esp+10h+SubStr], offset asc_67D46B6C 
mov	[esp+10h+Str], ebp 
call	strstr
test	eax, eax
jz	loc_67D25729
add	eax, 2
cmp	ebx, 0A00000h
ja	loc_67D25785
lea	esi, [eax+ebx]
mov	edx, [esp+10h+arg_20]
mov	ecx, [esp+10h+arg_28]
add	edx, [ecx]
cmp	esi, edx
ja	loc_67D2575A
mov	[esp+10h+Count], ebx 
mov	[esp+10h+SubStr], eax 
mov	[esp+10h+Str], edi 
call	memmove
add	edi, ebx
add	[esp+10h+arg_1C], ebx
mov	al, [esi]
test	al, al
jz	loc_67D25733
cmp	al, 0Dh
jz	short loc_67D25678
cmp	byte ptr [esi+1], 0Ah
jnz	loc_67D25733
lea	ebp, [esi+2]
cmp	byte ptr [esi+2], 0
jz	loc_67D25729
lea	ecx, [esp+10h+Size]
mov	[esp+10h+Count], ecx
mov	[esp+10h+SubStr], offset asc_67D45D93 
mov	[esp+10h+Str], ebp 
call	sscanf
dec	eax
jz	loc_67D25602
mov	edx, ebp
mov	esi, [esp+10h+arg_1C]
mov	ebp, [esp+10h+arg_24]
mov	[esp+10h+Count], edx
mov	[esp+10h+SubStr], offset aErrorProcessin 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_error
			
mov	byte ptr [edi],	0
mov	[ebp+5Ch], esi
jmp	loc_67D25373
call	_errno
mov	eax, [eax]
mov	[esp+10h+Str], eax
call	wpurple_strerror
mov	[esp+10h+var_4], eax
mov	edx, [esp+10h+arg_28]
mov	[esp+10h+Count], edx
mov	[esp+10h+SubStr], offset aFailedToAlloca 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_error
mov	ebx, [ebp+10h]
mov	[esp+10h+SubStr], offset aUnableToAlloca 
jmp	loc_67D253AB
call	_errno
mov	eax, [eax]
mov	[esp+10h+Str], eax
call	wpurple_strerror
mov	[esp+10h+var_4], eax
mov	[esp+10h+Count], esi
jmp	short loc_67D256EC
			
mov	esi, [esp+10h+arg_1C]
mov	ebp, [esp+10h+arg_24]
jmp	short loc_67D256C6
			
mov	ecx, esi
mov	esi, [esp+10h+arg_1C]
mov	ebp, [esp+10h+arg_24]
mov	[esp+10h+Count], ecx
mov	[esp+10h+SubStr], offset aErrorProcess_0 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_error
jmp	loc_67D256C6
mov	esi, [esp+10h+arg_1C]
mov	ebp, [esp+10h+arg_24]
sub	edx, eax
mov	[esp+10h+var_4], edx
mov	[esp+10h+Count], ebx
mov	[esp+10h+SubStr], offset aErrorProcess_1 
mov	[esp+10h+Str], offset aUtil 
call	purple_debug_error
jmp	loc_67D256C6
mov	esi, [esp+10h+arg_1C]
mov	ebp, [esp+10h+arg_24]
mov	edx, [esp+10h+arg_20]
add	edx, [ebp+5Ch]
jmp	short loc_67D25762
call	__stack_chk_fail
mov	edi, [esp+10h+arg_20]
xor	esi, esi
jmp	loc_67D256C6
align 4
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D257E3
mov	[esp+1Ch+arg_8], edx
mov	[esp+1Ch+arg_4], 0FFFFFFFFh
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	sub_67D24ECC
call	__stack_chk_fail
public purple_url_decode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_67D258E7
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
cmp	ecx, 7FFh
ja	loc_67D25907
mov	esi, 1
xor	ebx, ebx
lea	ebp, [esp+4Ch+Str]
jmp	short loc_67D25846
align 10h
mov	ds:byte_67D734FF[esi], al
inc	ebx
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, edx
repne scasb
not	ecx
dec	ecx
inc	esi
cmp	ebx, ecx
jnb	short loc_67D25899
mov	al, [edx+ebx]
cmp	al, 25h
jnz	short loc_67D25830
mov	[esp+4Ch+Count], 2 
lea	eax, [edx+ebx+1]
mov	[esp+4Ch+Source], eax 
mov	[esp+4Ch+Dest],	ebp 
mov	[esp+4Ch+var_30], edx
call	strncpy
mov	[esp+4Ch+var_21], 0
add	ebx, 2
mov	[esp+4Ch+Count], 10h 
mov	[esp+4Ch+Source], 0 
mov	[esp+4Ch+Dest],	ebp 
call	strtol
mov	ds:byte_67D734FF[esi], al
mov	edx, [esp+4Ch+var_30]
jmp	short loc_67D25836
mov	ds:byte_67D734FF[esi], 0
lea	eax, [esp+4Ch+var_28]
mov	[esp+4Ch+Count], eax
mov	[esp+4Ch+Source], 0FFFFFFFFh
mov	[esp+4Ch+Dest],	offset dword_67D73500
call	g_utf8_validate
test	eax, eax
jnz	short loc_67D258E0
mov	eax, [esp+4Ch+var_28]
mov	byte ptr [eax],	0
mov	eax, offset dword_67D73500
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2590B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, offset dword_67D73500
jmp	short loc_67D258CC
mov	[esp+4Ch+Count], offset	aStrNull_0 
mov	[esp+4Ch+Source], offset aPurple_url_dec 
mov	[esp+4Ch+Dest],	0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D258CC
xor	eax, eax
jmp	short loc_67D258CC
call	__stack_chk_fail
public purple_url_encode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D25B01
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+Type],	0FFFFFFFFh
mov	[esp+5Ch+C], esi
call	g_utf8_validate
test	eax, eax
jz	loc_67D25A7C
cmp	byte ptr [esi],	0
jz	loc_67D25B24
mov	eax, ds:g_utf8_skip
mov	eax, [eax]
mov	[esp+5Ch+var_30], eax
xor	ebx, ebx
			
mov	[esp+5Ch+C], esi
call	g_utf8_get_char
mov	edi, eax
cmp	eax, 7Fh
ja	short loc_67D259BF
mov	edx, ds:__mb_cur_max
cmp	dword ptr [edx], 1
jnz	loc_67D25AEC
mov	edx, ds:_pctype
mov	eax, [edx]
mov	ax, [eax+edi*2]
and	eax, 107h
test	eax, eax
jnz	loc_67D25AB4
cmp	edi, 2Dh
jz	loc_67D25AB4
cmp	edi, 2Eh
jz	loc_67D25AB4
cmp	edi, 5Fh
jz	loc_67D25AB4
cmp	edi, 7Eh
jz	loc_67D25AB4
lea	ebp, [esp+5Ch+var_26]
mov	[esp+5Ch+Type],	ebp
mov	[esp+5Ch+C], edi
call	g_unichar_to_utf8
mov	[esp+5Ch+var_34], eax
test	eax, eax
jle	loc_67D25ABD
xor	edi, edi
cmp	ebx, 7FCh
ja	loc_67D25ABD
movzx	eax, byte ptr [ebp+edi+0]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+Type],	offset a02x_0 
lea	eax, byte_67D73D00[ebx]
mov	[esp+5Ch+C], eax
call	libintl_sprintf
add	ebx, 3
inc	edi
cmp	edi, [esp+5Ch+var_34]
jz	loc_67D25ABD
cmp	ebx, 7FCh
ja	loc_67D25ABD
cmp	edi, 6
jnz	short loc_67D259E9
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset aPurple_url_enc 
mov	[esp+5Ch+var_54], 1103h
mov	[esp+5Ch+Type],	offset aUtil_c 
mov	[esp+5Ch+C], 0
call	g_warn_message
movzx	eax, byte ptr [esi]
mov	edx, [esp+5Ch+var_30]
movsx	eax, byte ptr [edx+eax]
add	esi, eax
cmp	byte ptr [esi],	0
jnz	loc_67D25964
lea	esi, [esi+0]
			
mov	ds:byte_67D73D00[ebx], 0
mov	eax, offset byte_67D73D00
jmp	short loc_67D25A9A
align 4
mov	[esp+5Ch+var_54], offset aG_utf8_validat 
mov	[esp+5Ch+Type],	offset aPurple_url_enc 
mov	[esp+5Ch+C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D25B2B
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	eax, edi
mov	ds:byte_67D73D00[ebx], al
inc	ebx
			
movzx	eax, byte ptr [esi]
mov	edx, [esp+5Ch+var_30]
movsx	eax, byte ptr [edx+eax]
add	esi, eax
cmp	byte ptr [esi],	0
jz	short loc_67D25A6C
cmp	ebx, 7FEh
jbe	loc_67D25964
mov	ds:byte_67D73D00[ebx], 0
mov	eax, offset byte_67D73D00
jmp	short loc_67D25A9A
align 4
mov	[esp+5Ch+Type],	107h 
mov	[esp+5Ch+C], eax 
call	_isctype
jmp	loc_67D25993
mov	[esp+5Ch+var_54], offset aStrNull_0 
mov	[esp+5Ch+Type],	offset aPurple_url_enc 
mov	[esp+5Ch+C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D25A9A
xor	ebx, ebx
jmp	loc_67D25A6C
call	__stack_chk_fail
public purple_email_is_valid
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D25BF0
movsx	eax, byte ptr [esi]
cmp	al, 2Eh
jz	short loc_67D25B90
test	al, al
jz	short loc_67D25B90
mov	ebx, esi
cmp	al, 22h
jz	short loc_67D25BA8
cmp	al, 40h
jz	loc_67D25C30
lea	edx, [eax-21h]
cmp	dl, 5Dh
ja	short loc_67D25B90
mov	[esp+2Ch+Val], eax 
mov	[esp+2Ch+Str], offset a@ 
call	strchr
test	eax, eax
jnz	short loc_67D25B90
mov	eax, ebx
lea	ebx, [eax+1]
movsx	eax, byte ptr [eax+1]
test	al, al
jnz	short loc_67D25B59
xchg	ax, ax
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D25CE2
add	esp, 24h
pop	ebx
pop	esi
retn
cmp	ebx, esi
jz	short loc_67D25BBC
mov	dl, [ebx-1]
cmp	dl, 2Eh
jz	short loc_67D25BBC
cmp	dl, 22h
jnz	short loc_67D25B6D
lea	esi, [esi+0]
			
mov	al, [ebx+1]
test	al, al
jz	short loc_67D25B90
cmp	al, 5Ch
jz	short loc_67D25BD8
cmp	al, 22h
jz	short loc_67D25C10
inc	ebx
sub	eax, 20h
cmp	al, 5Eh
jbe	short loc_67D25BBC
jmp	short loc_67D25B90
align 4
lea	edx, [ebx+2]
mov	al, [ebx+2]
cmp	al, 7Fh
jz	short loc_67D25B90
cmp	al, 0Ah
jz	short loc_67D25B90
cmp	al, 0Dh
jz	short loc_67D25B90
mov	ebx, edx
jmp	short loc_67D25BBC
align 10h
mov	[esp+2Ch+var_24], offset aAddressNull 
mov	[esp+2Ch+Val], offset aPurple_email_i 
mov	[esp+2Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D25B92
lea	eax, [ebx+2]
mov	dl, [ebx+2]
cmp	dl, 40h
jz	loc_67D25CDB
cmp	dl, 2Eh
jnz	loc_67D25B90
jmp	loc_67D25B83
align 10h
cmp	byte ptr [ebx],	0
jz	loc_67D25B90
cmp	ebx, esi
jz	loc_67D25B90
mov	al, [ebx+1]
test	al, al
jz	loc_67D25B90
inc	ebx
mov	edx, ebx
cmp	al, 2Eh
jz	short loc_67D25C8C
cmp	al, 2Dh
jz	short loc_67D25CAC
cmp	al, 2Fh
jle	loc_67D25B90
lea	ecx, [eax-3Ah]
cmp	cl, 6
jbe	loc_67D25B90
lea	ecx, [eax-5Bh]
cmp	cl, 5
jbe	loc_67D25B90
cmp	al, 7Ah
jg	loc_67D25B90
			
inc	edx
mov	cl, [edx]
test	cl, cl
jz	short loc_67D25CC4
mov	al, cl
cmp	al, 2Eh
jnz	short loc_67D25C53
cmp	edx, ebx
jz	loc_67D25B90
mov	cl, [edx-1]
cmp	cl, 2Eh
jz	loc_67D25B90
cmp	cl, 2Dh
jnz	short loc_67D25C7F
jmp	loc_67D25B90
align 4
mov	cl, [edx-1]
cmp	cl, 2Eh
jz	loc_67D25B90
cmp	cl, 40h
jnz	short loc_67D25C7F
jmp	loc_67D25B90
align 4
cmp	al, 2Dh
jz	loc_67D25B90
sub	edx, ebx
xor	eax, eax
cmp	edx, 3
setnle	al
jmp	loc_67D25B92
mov	ebx, eax
jmp	loc_67D25C39
call	__stack_chk_fail
align 4
public purple_markup_linkify
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	eax, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_50], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D26222
mov	[esp+6Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	ebx, eax
mov	edx, [esp+6Ch+var_50]
mov	al, [edx]
test	al, al
jz	loc_67D25E35
mov	ebp, edx
mov	[esp+6Ch+var_4C], 0
xor	edi, edi
mov	[esp+6Ch+var_54], 0
lea	edx, [esp+6Ch+var_3B]
mov	[esp+6Ch+var_58], edx
mov	edx, ebp
add	edx, 2
mov	[esp+6Ch+var_48], edx
cmp	al, 28h
jz	loc_67D25E60
test	edi, edi
jnz	loc_67D25E64
cmp	byte ptr [ebp+0], 3Ch
jz	loc_67D25EE4
mov	[esp+6Ch+var_64], 7
mov	[esp+6Ch+Val], offset aHttp_5 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D25F28
mov	[esp+6Ch+var_64], 8
mov	[esp+6Ch+Val], offset aHttps 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D25FB0
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], 8
			
mov	ecx, ebp
mov	edx, [esp+6Ch+var_50]
mov	eax, ebx
call	sub_67D1C3E8
mov	ebp, eax
			
movsx	edx, byte ptr [ebp+0]
			
cmp	dl, 29h
jnz	loc_67D261D7
dec	[esp+6Ch+var_4C]
mov	edx, [ebx+4]
lea	eax, [edx+1]
cmp	eax, [ebx+8]
jnb	loc_67D2604C
mov	ecx, [ebx]
mov	byte ptr [ecx+edx], 29h
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
lea	esi, [ebp+1]
movsx	edx, byte ptr [ebp+1]
xor	edi, edi
			
test	dl, dl
jz	short loc_67D25E35
mov	ecx, [ebx+4]
lea	eax, [ecx+1]
cmp	eax, [ebx+8]
jnb	loc_67D25E98
mov	ebp, [ebx]
mov	[ebp+ecx+0], dl
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+ecx+1], 0
lea	ebp, [esi+1]
mov	al, [esi+1]
test	al, al
jnz	loc_67D25D4C
			
mov	[esp+6Ch+Val], 0
mov	[esp+6Ch+Str], ebx
call	g_string_free
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2654F
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
test	edi, edi
jz	short loc_67D25EB4
movsx	edx, byte ptr [ebp+0]
cmp	dl, 3Eh
jz	loc_67D25F44
mov	eax, [esp+6Ch+var_54]
test	eax, eax
jz	loc_67D26018
mov	eax, [esp+6Ch+var_54]
cmp	dl, [eax]
jz	loc_67D26008
			
mov	esi, ebp
mov	edi, 1
jmp	loc_67D25E04
align 4
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], 0FFFFFFFFh
mov	[esp+6Ch+Str], ebx
call	g_string_insert_c
jmp	loc_67D25E27
align 4
inc	[esp+6Ch+var_4C]
mov	edx, [ebx+4]
lea	eax, [edx+1]
cmp	eax, [ebx+8]
jnb	loc_67D2606C
mov	ecx, [ebx]
mov	byte ptr [ecx+edx], 28h
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
inc	ebp
cmp	byte ptr [ebp+0], 3Ch
jnz	loc_67D25D66
lea	esi, [esi+0]
mov	[esp+6Ch+var_64], 2
mov	[esp+6Ch+Val], offset aA_3 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D25F6A
movsx	edx, byte ptr [ebp+0]
jmp	short loc_67D25E89
align 4
mov	[esp+6Ch+var_64], 7
mov	[esp+6Ch+Val], offset aFile_1 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2608C
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], 7
jmp	loc_67D25DBD
mov	esi, ebp
xor	edi, edi
jmp	loc_67D25E08
align 10h
mov	esi, [ebx]
mov	[esi+ecx], dl
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+ecx+1], 0
inc	ebp
cmp	byte ptr [ebp+0], 0
jz	loc_67D25E35
mov	[esp+6Ch+var_64], 3
mov	[esp+6Ch+Val], offset aA_4 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
movsx	edx, byte ptr [ebp+0]
test	eax, eax
jz	loc_67D25DD0
mov	ecx, [ebx+4]
lea	eax, [ecx+1]
cmp	eax, [ebx+8]
jb	short loc_67D25F50
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], 0FFFFFFFFh
mov	[esp+6Ch+Str], ebx
call	g_string_insert_c
jmp	short loc_67D25F5F
align 10h
mov	[esp+6Ch+var_64], 6
mov	[esp+6Ch+Val], offset aFtp 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D26030
mov	[esp+6Ch+var_64], 7
mov	[esp+6Ch+Val], offset aSftp 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D25F08
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], 7
jmp	loc_67D25DBD
mov	[esp+6Ch+var_54], 0
jmp	loc_67D25E89
align 4
cmp	dl, 22h
jz	short loc_67D26026
cmp	dl, 27h
jnz	loc_67D25E89
mov	[esp+6Ch+var_54], ebp
jmp	loc_67D25E89
align 10h
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], 6
jmp	loc_67D25DBD
mov	[esp+6Ch+var_64], 29h
mov	[esp+6Ch+Val], 0FFFFFFFFh
mov	[esp+6Ch+Str], ebx
call	g_string_insert_c
jmp	loc_67D25DFB
align 4
mov	[esp+6Ch+var_64], 28h
mov	[esp+6Ch+Val], 0FFFFFFFFh
mov	[esp+6Ch+Str], ebx
call	g_string_insert_c
inc	ebp
jmp	loc_67D25ED7
align 4
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+Val], offset aWww_ 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D260ED
cmp	byte ptr [ebp+4], 2Eh
jz	short loc_67D260ED
cmp	ebp, [esp+6Ch+var_50]
jz	short loc_67D260C5
movzx	eax, byte ptr [ebp-1]
cmp	al, 3Eh
ja	short loc_67D260E1
cmp	ds:byte_67D472E0[eax], 0
jz	short loc_67D260E1
			
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aHttp_5 
mov	[esp+6Ch+Str], 4
jmp	loc_67D25DBD
			
lea	eax, [ebp-1]
call	sub_67D19D38
test	eax, eax
jnz	short loc_67D260C5
			
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+Val], offset aFtp_ 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D261E0
cmp	byte ptr [ebp+4], 2Eh
jz	loc_67D261E0
cmp	ebp, [esp+6Ch+var_50]
jz	loc_67D26236
movzx	eax, byte ptr [ebp-1]
cmp	al, 3Eh
jbe	loc_67D26229
lea	eax, [ebp-1]
call	sub_67D19D38
test	eax, eax
jnz	loc_67D26236
mov	[esp+6Ch+var_64], 5
mov	[esp+6Ch+Val], offset aXmpp_0 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D26175
movzx	eax, byte ptr [ebp-1]
cmp	al, 3Eh
jbe	loc_67D26252
lea	eax, [ebp-1]
call	sub_67D19D38
test	eax, eax
jnz	loc_67D26206
mov	[esp+6Ch+var_64], 7
mov	[esp+6Ch+Val], offset aMailto 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	loc_67D2628B
movsx	edx, byte ptr [ebp+0]
cmp	dl, 40h
jnz	loc_67D25DD0
mov	esi, offset a@_0 
mov	ecx, 1Bh
mov	edi, [esp+6Ch+var_58]
rep movsb
movsx	eax, byte ptr [ebp-1]
mov	[esp+6Ch+Val], eax 
lea	eax, [esp+6Ch+var_3B]
mov	[esp+6Ch+Str], eax 
mov	byte ptr [esp+6Ch+var_5C], dl
call	strchr
test	eax, eax
movsx	edx, byte ptr [esp+6Ch+var_5C]
jz	loc_67D2635B
			
mov	esi, ebp
xor	edi, edi
jmp	loc_67D25E04
			
mov	[esp+6Ch+var_64], 5
mov	[esp+6Ch+Val], offset aXmpp_0 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D26260
cmp	ebp, [esp+6Ch+var_50]
jnz	loc_67D26159
			
mov	eax, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], 5
jmp	loc_67D25DBD
xor	eax, eax
jmp	loc_67D25E45
cmp	ds:byte_67D472E0[eax], 0
jz	loc_67D2612D
			
mov	edx, [esp+6Ch+var_4C]
mov	[esp+6Ch+var_64], edx
mov	[esp+6Ch+Val], offset aFtp 
mov	[esp+6Ch+Str], 4
jmp	loc_67D25DBD
cmp	ds:byte_67D472E0[eax], 0
jnz	short loc_67D26206
jmp	loc_67D26165
mov	[esp+6Ch+var_64], 7
mov	[esp+6Ch+Val], offset aMailto 
mov	[esp+6Ch+Str], ebp
call	g_ascii_strncasecmp
test	eax, eax
jz	short loc_67D2628B
cmp	ebp, [esp+6Ch+var_50]
jnz	loc_67D26195
jmp	loc_67D25DCC
			
mov	esi, ebp
jmp	short loc_67D2629B
			
mov	eax, esi
call	sub_67D19D38
test	eax, eax
jnz	short loc_67D262AB
inc	esi
movzx	eax, byte ptr [esi]
cmp	al, 3Eh
ja	short loc_67D2628F
cmp	ds:byte_67D472E0[eax], 0
jz	short loc_67D2628F
mov	eax, esi
sub	eax, ebp
cmp	eax, 7
jz	loc_67D25DCC
cmp	[esp+6Ch+var_50], esi
jnb	short loc_67D262C5
cmp	byte ptr [esi-1], 2Eh
jnz	short loc_67D262C5
dec	esi
			
lea	edi, [ebp+7]
mov	[esp+6Ch+Val], 3Fh 
mov	[esp+6Ch+Str], edi 
call	strchr
test	eax, eax
jz	short loc_67D262E0
cmp	esi, eax
ja	short loc_67D262E2
mov	eax, esi
sub	eax, ebp
sub	eax, 7
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], edi
call	g_strndup
mov	edi, eax
mov	[esp+6Ch+Str], eax
call	purple_email_is_valid
mov	[esp+6Ch+Str], edi
test	eax, eax
jz	loc_67D26545
call	g_free
mov	eax, esi
sub	eax, ebp
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], ebp
call	g_strndup
mov	edi, eax
mov	[esp+6Ch+Str], eax 
call	purple_unescape_html
mov	ebp, eax
mov	[esp+6Ch+var_60], edi
mov	[esp+6Ch+var_64], eax
mov	[esp+6Ch+Val], offset aAHrefSSA	
mov	[esp+6Ch+Str], ebx
call	g_string_append_printf
mov	[esp+6Ch+Str], edi
call	g_free
mov	[esp+6Ch+Str], ebp
call	g_free
movsx	edx, byte ptr [esi]
mov	ebp, esi
jmp	loc_67D25DD0
movsx	eax, byte ptr [ebp+1]
mov	[esp+6Ch+Val], eax 
lea	eax, [esp+6Ch+var_3B]
mov	[esp+6Ch+Str], eax 
call	strchr
test	eax, eax
movsx	edx, byte ptr [esp+6Ch+var_5C]
jnz	loc_67D261D7
mov	[esp+6Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
mov	edi, ebp
mov	edx, [esp+6Ch+var_50]
add	edx, 4
mov	[esp+6Ch+var_40], edx
jmp	short loc_67D263D2
align 4
			
cmp	edi, [esp+6Ch+var_40]
ja	loc_67D26554
			
mov	eax, [esp+6Ch+var_44]
mov	[esp+6Ch+Val], eax
mov	[esp+6Ch+Str], esi
call	g_string_prepend_unichar
mov	[esp+6Ch+Val], edi
mov	edx, [esp+6Ch+var_50]
mov	[esp+6Ch+Str], edx
call	g_utf8_find_prev_char
mov	edi, eax
cmp	[esp+6Ch+var_50], eax
ja	loc_67D2657C
mov	[esp+6Ch+Str], edi
call	g_utf8_get_char
mov	[esp+6Ch+var_44], eax
mov	al, [edi]
cmp	al, 3Eh
ja	short loc_67D263F0
movzx	edx, al
cmp	ds:byte_67D472E0[edx], 0
jnz	short loc_67D2644C
cmp	[esp+6Ch+var_44], 7Eh
ja	short loc_67D2644C
cmp	al, 28h
jz	short loc_67D2644C
cmp	al, 3Bh
jnz	short loc_67D263A6
cmp	edi, [esp+6Ch+var_48]
jbe	short loc_67D2639C
lea	edx, [edi-3]
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+Val], offset aLt 
mov	[esp+6Ch+Str], edx
mov	[esp+6Ch+var_5C], edx
call	g_ascii_strncasecmp
test	eax, eax
mov	edx, [esp+6Ch+var_5C]
jz	short loc_67D2644C
mov	[esp+6Ch+var_64], 4
mov	[esp+6Ch+Val], offset aGt 
mov	[esp+6Ch+Str], edx
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D2639C
			
sub	edi, ebp
add	edi, [ebx+4]
mov	[esp+6Ch+Val], edi
mov	[esp+6Ch+Str], ebx
call	g_string_truncate
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+Val], edx
mov	[esp+6Ch+Str], eax
call	g_string_append_unichar
mov	ebx, eax
mov	[esp+6Ch+Val], 0
mov	[esp+6Ch+Str], ebp
call	g_utf8_find_next_char
mov	ebp, eax
jmp	short loc_67D264B7
align 4
			
cmp	edi, 7Eh
ja	short loc_67D264D5
cmp	dl, 29h
jz	short loc_67D264D5
mov	eax, ebp
call	sub_67D19D38
test	eax, eax
jnz	short loc_67D264D5
mov	[esp+6Ch+Val], edi
mov	[esp+6Ch+Str], esi
call	g_string_append_unichar
mov	[esp+6Ch+Val], 0
mov	[esp+6Ch+Str], ebp
call	g_utf8_find_next_char
mov	ebp, eax
mov	[esp+6Ch+Str], ebp
call	g_utf8_get_char
mov	edi, eax
mov	dl, [ebp+0]
cmp	dl, 3Eh
ja	short loc_67D26484
movzx	eax, dl
cmp	ds:byte_67D472E0[eax], 0
jz	short loc_67D26484
			
mov	[esp+6Ch+Val], 0
mov	[esp+6Ch+Str], esi
call	g_string_free
mov	esi, eax
cmp	byte ptr [eax],	0
jz	short loc_67D2650C
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	eax, [esi+ecx-2]
cmp	byte ptr [eax],	2Eh
jnz	short loc_67D2650C
mov	byte ptr [eax],	0
dec	eax
dec	ebp
cmp	byte ptr [eax],	2Eh
jz	short loc_67D26502
			
mov	[esp+6Ch+Str], esi 
call	purple_unescape_html
mov	edi, eax
mov	[esp+6Ch+Str], eax
call	purple_email_is_valid
test	eax, eax
jz	short loc_67D26593
mov	[esp+6Ch+var_60], esi
mov	[esp+6Ch+var_64], edi
mov	[esp+6Ch+Val], offset aAHrefMailtoSSA 
mov	[esp+6Ch+Str], ebx
call	g_string_append_printf
mov	[esp+6Ch+Str], esi
call	g_free
mov	[esp+6Ch+Str], edi
call	g_free
jmp	loc_67D25DCC
call	__stack_chk_fail
mov	[esp+6Ch+var_64], 6
mov	[esp+6Ch+Val], offset aQuot 
lea	eax, [edi-5]
mov	[esp+6Ch+Str], eax
call	g_ascii_strncasecmp
test	eax, eax
jnz	loc_67D263A6
jmp	loc_67D2644C
mov	[esp+6Ch+Val], offset byte_67D45CB8
mov	[esp+6Ch+Str], ebx
call	g_string_assign
mov	ebx, eax
jmp	loc_67D2646F
mov	[esp+6Ch+Val], esi
mov	[esp+6Ch+Str], ebx
call	g_string_append
jmp	short loc_67D2653A
align 4
public purple_ipv4_address_is_valid
sub	esp, 4Ch
mov	eax, [esp+4Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67D26654
lea	edx, [esp+4Ch+var_21]
mov	[esp+4Ch+var_34], edx
lea	edx, [esp+4Ch+var_14]
mov	[esp+4Ch+var_38], edx
lea	edx, [esp+4Ch+var_18]
mov	[esp+4Ch+var_3C], edx
lea	edx, [esp+4Ch+var_1C]
mov	[esp+4Ch+var_40], edx
lea	edx, [esp+4Ch+var_20]
mov	[esp+4Ch+var_44], edx
mov	[esp+4Ch+Format], offset aD_D_D_DC 
mov	[esp+4Ch+Src], eax 
call	sscanf
cmp	eax, 4
jz	short loc_67D26610
			
xor	eax, eax
			
mov	edx, [esp+4Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26674
add	esp, 4Ch
retn
align 10h
mov	eax, [esp+4Ch+var_20]
test	eax, eax
js	short loc_67D265FC
cmp	eax, 0FFh
jg	short loc_67D265FC
mov	eax, [esp+4Ch+var_1C]
test	eax, eax
js	short loc_67D265FC
cmp	eax, 0FFh
jg	short loc_67D265FC
mov	eax, [esp+4Ch+var_18]
test	eax, eax
js	short loc_67D265FC
cmp	eax, 0FFh
jg	short loc_67D265FC
mov	eax, [esp+4Ch+var_14]
test	eax, eax
js	short loc_67D265FC
cmp	eax, 0FFh
setle	al
movzx	eax, al
jmp	short loc_67D265FE
align 4
mov	[esp+4Ch+var_44], offset aIpNull_0 
mov	[esp+4Ch+Format], offset aPurple_ipv4_ad 
mov	[esp+4Ch+Src], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D265FE
call	__stack_chk_fail
align 4
public purple_ipv6_address_is_valid
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ecx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ecx, ecx
jz	loc_67D2671C
mov	al, [ecx]
test	al, al
jz	short loc_67D266DC
xor	edx, edx
mov	esi, 1
xor	edi, edi
			
lea	ebx, [eax-30h]
cmp	bl, 9
jbe	short loc_67D266B8
lea	ebx, [eax-61h]
cmp	bl, 5
ja	short loc_67D266F4
			
inc	edx
cmp	edx, 4
jg	short loc_67D266DC
mov	al, [ecx+1]
inc	ecx
test	al, al
jnz	short loc_67D266A8
test	edi, edi
jnz	short loc_67D266D6
cmp	esi, 8
jnz	short loc_67D266DC
mov	eax, 1
jmp	short loc_67D266DE
cmp	esi, 7
jle	short loc_67D266CF
nop
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2673C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
lea	ebx, [eax-41h]
cmp	bl, 5
jbe	short loc_67D266B8
cmp	al, 3Ah
jnz	short loc_67D266DC
inc	esi
mov	al, [ecx+1]
cmp	al, 3Ah
jz	short loc_67D2670C
xor	edx, edx
jmp	short loc_67D266C1
test	edi, edi
jnz	short loc_67D266DC
inc	ecx
xor	edx, edx
mov	edi, 1
jmp	short loc_67D266A8
align 4
mov	[esp+2Ch+var_24], offset aIpNull_0 
mov	[esp+2Ch+var_28], offset aPurple_ipv6_ad 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D266DE
call	__stack_chk_fail
align 4
public purple_ip_address_is_valid
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2676F
mov	[esp+1Ch+arg_0], eax 
add	esp, 1Ch
jmp	purple_ipv4_address_is_valid
call	__stack_chk_fail
public purple_uri_list_extract_uris
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edx, [esp+4Ch+Source]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edx, edx
jz	loc_67D268E4
mov	ebp, edx
mov	[esp+4Ch+var_30], 0
mov	esi, ds:__mb_cur_max
mov	edi, ds:_pctype
movsx	eax, byte ptr [ebp+0]
cmp	al, 23h
jnz	short loc_67D267CD
jmp	loc_67D268A6
align 4
mov	edx, [edi]
mov	ax, [edx+eax*2]
and	eax, 8
movzx	eax, ax
test	eax, eax
jz	short loc_67D267E6
inc	ebp
movsx	eax, byte ptr [ebp+0]
cmp	dword ptr [esi], 1
jz	short loc_67D267B8
mov	[esp+4Ch+Type],	8 
mov	[esp+4Ch+C], eax 
call	_isctype
test	eax, eax
jnz	short loc_67D267C8
mov	al, [ebp+0]
test	al, al
jz	loc_67D268A6
cmp	al, 0Ah
jz	loc_67D268A6
cmp	al, 0Dh
jz	loc_67D268A6
mov	ebx, ebp
jmp	short loc_67D26812
align 4
cmp	al, 0Ah
jz	short loc_67D2681C
cmp	al, 0Dh
jz	short loc_67D2681C
mov	ebx, ecx
lea	ecx, [ebx+1]
mov	al, [ebx+1]
test	al, al
jnz	short loc_67D26808
			
cmp	ecx, ebp
jbe	loc_67D268A6
cmp	ebx, ebp
ja	short loc_67D26847
jmp	short loc_67D26863
align 4
mov	ecx, ds:_pctype
mov	edx, [ecx]
mov	ax, [edx+eax*2]
and	eax, 8
movzx	eax, ax
test	eax, eax
jz	short loc_67D26863
dec	ebx
cmp	ebx, ebp
jz	short loc_67D26863
movsx	eax, byte ptr [ebx]
cmp	dword ptr [esi], 1
jz	short loc_67D2682C
mov	[esp+4Ch+Type],	8 
mov	[esp+4Ch+C], eax 
call	_isctype
test	eax, eax
jnz	short loc_67D26842
			
sub	ebx, ebp
lea	eax, [ebx+2]
mov	[esp+4Ch+C], eax
call	g_malloc
mov	edx, eax
lea	eax, [ebx+1]
mov	[esp+4Ch+Count], eax 
mov	[esp+4Ch+Type],	ebp 
mov	[esp+4Ch+C], edx 
mov	[esp+4Ch+var_34], edx
call	strncpy
mov	edx, [esp+4Ch+var_34]
mov	byte ptr [edx+ebx+1], 0
mov	[esp+4Ch+Type],	edx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+C], eax
call	g_list_prepend
mov	[esp+4Ch+var_30], eax
			
mov	[esp+4Ch+Type],	0Ah 
mov	[esp+4Ch+C], ebp 
call	strchr
test	eax, eax
jz	short loc_67D268C4
mov	ebp, eax
inc	ebp
jnz	loc_67D267A8
nop
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26916
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Source], eax
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_list_reverse
mov	[esp+4Ch+Count], offset	aUri_listNull 
mov	[esp+4Ch+Type],	offset aPurple_uri_lis 
mov	[esp+4Ch+C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26916
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_uri_list_extract_filenames
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D269E8
mov	[esp+4Ch+Source], eax 
call	purple_uri_list_extract_uris
mov	[esp+4Ch+var_30], eax
test	eax, eax
jz	short loc_67D269BF
mov	edx, [esp+4Ch+var_30]
mov	ebx, edx
jmp	short loc_67D26982
align 4
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0
mov	[esp+4Ch+Source], ebp
call	g_filename_from_uri_utf8
mov	[ebx], eax
test	eax, eax
jz	short loc_67D269D8
mov	[esp+4Ch+Source], ebp
call	g_free
mov	ebx, [esp+4Ch+var_34]
test	ebx, ebx
jz	short loc_67D269BF
			
mov	ebp, [ebx]
mov	edx, [ebx+4]
mov	[esp+4Ch+var_34], edx
mov	esi, ebp
mov	edi, offset aFile_2 
mov	ecx, 5
repe cmpsb
jz	short loc_67D26954
mov	[esp+4Ch+var_48], ebx
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+Source], eax
call	g_list_delete_link
mov	[esp+4Ch+var_30], eax
mov	[esp+4Ch+Source], ebp
call	g_free
mov	ebx, [esp+4Ch+var_34]
test	ebx, ebx
jnz	short loc_67D26982
			
mov	eax, [esp+4Ch+var_30]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26A0E
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
lea	eax, [ebp+5]
mov	[esp+4Ch+Source], eax
call	g_strdup
mov	[ebx], eax
jmp	short loc_67D26972
align 4
mov	[esp+4Ch+var_44], offset aUri_listNull 
mov	[esp+4Ch+var_48], offset aPurple_uri_l_0 
mov	[esp+4Ch+Source], 0
call	g_return_if_fail_warning
mov	[esp+4Ch+var_30], 0
jmp	short loc_67D269BF
call	__stack_chk_fail
align 4
public purple_utf8_try_convert
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D26A9C
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edi
call	g_utf8_validate
test	eax, eax
jnz	short loc_67D26A90
mov	[esp+3Ch+var_2C], 0
mov	[esp+3Ch+var_30], 0
lea	esi, [esp+3Ch+var_14]
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edi
call	g_locale_to_utf8
mov	ebx, eax
test	eax, eax
jz	short loc_67D26ABC
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D26B1C
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	ebx, eax
jmp	short loc_67D26A77
mov	[esp+3Ch+var_34], offset aStrNull_0 
mov	[esp+3Ch+var_38], offset aPurple_utf8_tr 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D26A77
mov	[esp+3Ch+var_24], 0
mov	[esp+3Ch+var_28], 0
mov	[esp+3Ch+var_2C], esi
mov	[esp+3Ch+var_30], offset aIso885915 
mov	[esp+3Ch+var_34], offset aUtf8_1 
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edi
call	g_convert
mov	edx, eax
test	eax, eax
jz	short loc_67D26B0F
xor	eax, eax
mov	ecx, 0FFFFFFFFh
repne scasb
not	ecx
dec	ecx
cmp	ecx, [esp+3Ch+var_14]
jnz	short loc_67D26B0F
mov	ebx, edx
jmp	loc_67D26A77
			
mov	[esp+3Ch+var_3C], edx
call	g_free
jmp	loc_67D26A77
call	__stack_chk_fail
align 4
public purple_utf8_salvage
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D26C2F
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
dec	ecx
mov	[esp+2Ch+var_2C], ecx
call	g_string_sized_new
mov	ebx, eax
lea	edi, [esp+2Ch+var_14]
lea	esi, [esi+0]
			
mov	[esp+2Ch+var_24], edi
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], esi
call	g_utf8_validate
mov	eax, [esp+2Ch+var_14]
sub	eax, esi
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], esi
mov	[esp+2Ch+var_2C], ebx
call	g_string_append_len
mov	ebx, eax
mov	esi, [esp+2Ch+var_14]
cmp	byte ptr [esi],	0
jnz	short loc_67D26BDB
jmp	short loc_67D26C0C
align 4
mov	ecx, [ebx]
mov	byte ptr [ecx+edx], 3Fh
mov	[ebx+4], eax
mov	edx, [ebx]
mov	byte ptr [edx+eax], 0
inc	esi
movsx	eax, byte ptr [esi]
cmp	al, 0
jge	short loc_67D26C06
mov	edx, eax
and	edx, 0E0h
cmp	edx, 0C0h
jz	short loc_67D26B60
mov	edx, eax
and	edx, 0F0h
cmp	edx, 0E0h
jz	short loc_67D26B60
and	eax, 0F8h
cmp	eax, 0F0h
jz	short loc_67D26B60
mov	edx, [ebx+4]
lea	eax, [edx+1]
cmp	eax, [ebx+8]
jb	short loc_67D26B98
mov	[esp+2Ch+var_24], 3Fh
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	g_string_insert_c
inc	esi
movsx	eax, byte ptr [esi]
cmp	al, 0
jl	short loc_67D26BAF
jnz	loc_67D26B60
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], ebx
call	g_string_free
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26C4F
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aStrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_utf8_sa 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D26C1C
call	__stack_chk_fail
public purple_utf8_strip_unprintables
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D26D8B
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], esi
call	g_utf8_validate
test	eax, eax
jz	loc_67D26D2C
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
mov	[esp+5Ch+var_5C], ecx
call	g_malloc
mov	[esp+5Ch+var_30], eax
mov	ebx, eax
mov	ebp, ds:g_utf8_skip
cmp	byte ptr [esi],	0
jz	short loc_67D26D11
mov	[esp+5Ch+var_5C], esi
call	g_utf8_get_char
movzx	edx, byte ptr [esi]
mov	ecx, [ebp+0]
movsx	edx, byte ptr [ecx+edx]
add	edx, esi
lea	ecx, [eax-9]
cmp	ecx, 1
jbe	short loc_67D26D00
cmp	eax, 0Dh
jz	short loc_67D26D00
lea	ecx, [eax-20h]
cmp	ecx, 0D7DFh
jbe	short loc_67D26D00
lea	ecx, [eax-0E000h]
cmp	ecx, 1FFDh
jbe	short loc_67D26D00
sub	eax, 10000h
cmp	eax, 0FFFFFh
ja	short loc_67D26D0A
xchg	ax, ax
			
mov	ecx, edx
sub	ecx, esi
mov	edi, ebx
rep movsb
mov	ebx, edi
mov	esi, edx
cmp	byte ptr [esi],	0
jnz	short loc_67D26CB8
mov	byte ptr [ebx],	0
mov	eax, [esp+5Ch+var_30]
			
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26D8F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+5Ch+var_24]
movsx	eax, byte ptr [eax]
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aPurple_utf8__0 
mov	[esp+5Ch+var_5C], offset aUtil 
call	purple_debug_error
mov	[esp+5Ch+var_48], offset aPurple_utf8__1 
mov	[esp+5Ch+var_4C], 1220h
mov	[esp+5Ch+var_50], offset aUtil_c 
mov	[esp+5Ch+var_54], offset aFileSLineDSS_9 
mov	[esp+5Ch+var_58], 8
mov	[esp+5Ch+var_5C], 0
call	g_log
xor	eax, eax
jmp	short loc_67D26D18
xor	eax, eax
jmp	short loc_67D26D18
call	__stack_chk_fail
public purple_gai_strerror
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	esi, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	_errno
mov	edi, [eax]
mov	[esp+3Ch+Arguments], 0 
mov	[esp+3Ch+nSize], 400h 
mov	[esp+3Ch+lpBuffer], offset Buffer 
mov	[esp+3Ch+dwLanguageId],	400h 
mov	[esp+3Ch+dwMessageId], esi 
mov	[esp+3Ch+lpSource], 0 
mov	[esp+3Ch+dwFlags], 12FFh 
call	FormatMessageA
sub	esp, 1Ch
mov	[esp+3Ch+dwFlags], 0
call	g_get_charset
test	eax, eax
jnz	short loc_67D26E68
mov	[esp+3Ch+lpBuffer], 0
mov	[esp+3Ch+dwLanguageId],	0
mov	[esp+3Ch+dwMessageId], 0
mov	[esp+3Ch+lpSource], 0FFFFFFFFh
mov	[esp+3Ch+dwFlags], offset Buffer
call	g_locale_to_utf8
mov	ebx, eax
test	eax, eax
jz	short loc_67D26E78
mov	[esp+3Ch+dwFlags], eax
call	g_quark_from_string
mov	esi, eax
mov	[esp+3Ch+dwFlags], ebx
call	g_free
mov	[esp+3Ch+dwFlags], esi
call	g_quark_to_string
mov	ebx, eax
call	_errno
mov	[eax], edi
mov	eax, ebx
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D26ED1
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
call	_errno
mov	[eax], edi
mov	eax, offset Buffer
jmp	short loc_67D26E52
align 4
mov	[esp+3Ch+dwFlags], offset dword_67D74500
call	g_static_private_get
mov	ebx, eax
test	eax, eax
jz	short loc_67D26EA9
mov	[esp+3Ch+dwMessageId], esi
mov	[esp+3Ch+lpSource], offset aUnknownErrorD 
mov	[esp+3Ch+dwFlags], ebx
call	libintl_sprintf
call	_errno
mov	[eax], edi
mov	eax, ebx
jmp	short loc_67D26E52
mov	[esp+3Ch+dwFlags], 40h
call	g_malloc
mov	ebx, eax
mov	[esp+3Ch+dwMessageId], offset g_free
mov	[esp+3Ch+lpSource], eax
mov	[esp+3Ch+dwFlags], offset dword_67D74500
call	g_static_private_set
jmp	short loc_67D26E8A
call	__stack_chk_fail
align 4
public purple_utf8_ncr_encode
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D26FC4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], ebx
call	g_utf8_validate
test	eax, eax
jnz	short loc_67D26F48
mov	[esp+2Ch+var_24], offset aG_utf8_validat 
mov	[esp+2Ch+var_28], offset aPurple_utf8_nc 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D26FE7
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+2Ch+var_2C], offset byte_67D45CB8
call	g_string_new
mov	esi, eax
cmp	byte ptr [ebx],	0
jz	short loc_67D26FAD
mov	eax, ds:g_utf8_skip
mov	edi, [eax]
jmp	short loc_67D26F86
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aU_4 
mov	[esp+2Ch+var_2C], esi
call	g_string_append_printf
movzx	eax, byte ptr [ebx]
movsx	eax, byte ptr [edi+eax]
add	ebx, eax
cmp	byte ptr [ebx],	0
jz	short loc_67D26FAD
			
mov	[esp+2Ch+var_2C], ebx
call	g_utf8_get_char
cmp	eax, 7Fh
ja	short loc_67D26F64
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	g_string_append_unichar
movzx	eax, byte ptr [ebx]
movsx	eax, byte ptr [edi+eax]
add	ebx, eax
cmp	byte ptr [ebx],	0
jnz	short loc_67D26F86
			
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], esi
call	g_string_free
jmp	loc_67D26F2F
align 4
mov	[esp+2Ch+var_24], offset aStrNull_0 
mov	[esp+2Ch+var_28], offset aPurple_utf8_nc 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D26F2F
call	__stack_chk_fail
public purple_utf8_ncr_decode
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D2711A
mov	[esp+3Ch+Radix], 0
mov	[esp+3Ch+EndPtr], 0FFFFFFFFh
mov	[esp+3Ch+Str], ebx
call	g_utf8_validate
test	eax, eax
jz	loc_67D270AC
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+Str], offset byte_67D45CB8
call	g_string_new
mov	edi, eax
mov	ebx, [esp+3Ch+var_24]
lea	ebp, [esp+3Ch+var_24]
jmp	short loc_67D2706E
align 4
cmp	al, 58h
jz	short loc_67D2709F
add	esi, 2
xor	eax, eax
mov	[esp+3Ch+Radix], eax 
mov	[esp+3Ch+EndPtr], ebp 
mov	[esp+3Ch+Str], esi 
call	strtoul
mov	ebx, [esp+3Ch+var_24]
cmp	byte ptr [ebx],	3Bh
jz	loc_67D27100
			
mov	[esp+3Ch+EndPtr], offset asc_67D46FEF 
mov	[esp+3Ch+Str], ebx 
call	strstr
mov	esi, eax
test	eax, eax
jz	short loc_67D270E0
mov	eax, esi
sub	eax, ebx
mov	[esp+3Ch+Radix], eax
mov	[esp+3Ch+EndPtr], ebx
mov	[esp+3Ch+Str], edi
call	g_string_append_len
mov	al, [esi+2]
cmp	al, 78h
jnz	short loc_67D27048
add	esi, 3
mov	eax, 10h
jmp	short loc_67D27051
align 4
mov	[esp+3Ch+Radix], offset	aG_utf8_validat	
mov	[esp+3Ch+EndPtr], offset aPurple_utf8__2 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2713A
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+3Ch+EndPtr], ebx
mov	[esp+3Ch+Str], edi
call	g_string_append
mov	[esp+3Ch+EndPtr], 0
mov	[esp+3Ch+Str], edi
call	g_string_free
jmp	short loc_67D270CA
align 10h
mov	[esp+3Ch+EndPtr], eax
mov	[esp+3Ch+Str], edi
call	g_string_append_unichar
mov	ebx, [esp+3Ch+var_24]
inc	ebx
mov	[esp+3Ch+var_24], ebx
jmp	loc_67D2706E
mov	[esp+3Ch+Radix], offset	aStrNull_0 
mov	[esp+3Ch+EndPtr], offset aPurple_utf8__2 
mov	[esp+3Ch+Str], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D270CA
call	__stack_chk_fail
align 10h
public purple_utf8_strcasecmp
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D27200
test	esi, esi
jz	loc_67D27228
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], ebx
call	g_utf8_validate
test	eax, eax
jz	loc_67D2720C
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_utf8_validate
test	eax, eax
jz	short loc_67D2720C
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], ebx
call	g_utf8_casefold
mov	edi, eax
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_utf8_casefold
mov	esi, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], edi
call	g_utf8_collate
mov	[esp+3Ch+var_3C], edi
mov	[esp+3Ch+var_20], eax
call	g_free
mov	[esp+3Ch+var_3C], esi
call	g_free
mov	eax, [esp+3Ch+var_20]
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2722F
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
cmp	esi, 1
sbb	eax, eax
not	eax
jmp	short loc_67D271ED
align 4
			
mov	[esp+3Ch+var_38], offset aOneOrBothParam 
mov	[esp+3Ch+var_3C], offset aPurple_utf8__3 
call	purple_debug_error
mov	eax, 0FFFFFFFFh
jmp	short loc_67D271ED
align 4
mov	eax, 1
jmp	short loc_67D271ED
call	__stack_chk_fail
public purple_utf8_has_word
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+SubStr], 0FFFFFFFFh
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+Str], eax
call	g_utf8_strdown
mov	esi, eax
mov	[esp+4Ch+SubStr], 0FFFFFFFFh
mov	[esp+4Ch+Str], ebx
call	g_utf8_strdown
mov	[esp+4Ch+var_34], eax
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+4Ch+var_34]
repne scasb
not	ecx
dec	ecx
mov	[esp+4Ch+var_30], ecx
mov	ebx, esi
xchg	ax, ax
			
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+SubStr], edx 
mov	[esp+4Ch+Str], ebx 
call	strstr
mov	ebx, eax
test	eax, eax
jz	short loc_67D2730D
mov	[esp+4Ch+SubStr], ebx
mov	[esp+4Ch+Str], esi
call	g_utf8_find_prev_char
test	eax, eax
jz	loc_67D27338
mov	[esp+4Ch+Str], eax
call	g_utf8_get_char
mov	ebp, eax
mov	[esp+4Ch+SubStr], 0FFFFFFFFh
mov	eax, [esp+4Ch+var_30]
add	eax, ebx
mov	[esp+4Ch+Str], eax
call	g_utf8_get_char_validated
mov	edi, eax
cmp	ebx, esi
jz	short loc_67D272F3
cmp	ebp, 0FFFFFFFEh
jz	short loc_67D27304
mov	[esp+4Ch+Str], ebp
call	g_unichar_isalnum
test	eax, eax
jnz	short loc_67D27304
cmp	byte ptr [ebx-1], 26h
jz	short loc_67D27304
			
cmp	edi, 0FFFFFFFEh
jz	short loc_67D27304
mov	[esp+4Ch+Str], edi
call	g_unichar_isalnum
test	eax, eax
jz	short loc_67D27308
			
inc	ebx
jmp	short loc_67D2728C
align 4
mov	ebx, 1
mov	eax, [esp+4Ch+var_34]
mov	[esp+4Ch+Str], eax
call	g_free
mov	[esp+4Ch+Str], esi
call	g_free
mov	eax, ebx
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2735A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+SubStr], 0FFFFFFFFh
mov	eax, [esp+4Ch+var_30]
add	eax, ebx
mov	[esp+4Ch+Str], eax
call	g_utf8_get_char_validated
mov	edi, eax
cmp	ebx, esi
jz	short loc_67D272F3
inc	ebx
jmp	loc_67D2728C
call	__stack_chk_fail
align 10h
public purple_print_utf8_to_console
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	edi, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_14], 0
lea	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+File],	0FFFFFFFFh
mov	[esp+3Ch+Str], esi
call	g_locale_from_utf8
mov	ebx, eax
test	eax, eax
jz	short loc_67D273D8
mov	[esp+3Ch+File],	edi 
mov	[esp+3Ch+Str], eax 
call	fputs
mov	[esp+3Ch+Str], ebx
call	g_free
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D27419
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [esp+3Ch+var_14]
mov	eax, [eax+8]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], offset aS_15 
mov	[esp+3Ch+File],	10h
mov	[esp+3Ch+Str], 0
call	g_log
mov	eax, [esp+3Ch+var_14]
mov	[esp+3Ch+Str], eax
call	g_error_free
mov	[esp+3Ch+File],	edi 
mov	[esp+3Ch+Str], esi 
call	fputs
jmp	short loc_67D273C3
call	__stack_chk_fail
align 10h
public purple_message_meify
			
push	edi
push	ebx
sub	esp, 24h
mov	edx, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	loc_67D274E0
cmp	ebx, 0FFFFFFFFh
jz	loc_67D274CC
mov	al, [edx]
test	al, al
jz	short loc_67D2747C
mov	edi, edx
xor	edx, edx
jmp	short loc_67D27467
align 4
xor	edx, edx
cmp	al, 3Eh
setnz	dl
inc	edi
dec	ebx
mov	al, [edi]
test	al, al
jz	short loc_67D2747C
			
test	edx, edx
jnz	short loc_67D27458
cmp	al, 3Ch
jnz	short loc_67D27490
mov	edx, 1
inc	edi
dec	ebx
mov	al, [edi]
test	al, al
jnz	short loc_67D27467
			
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27501
add	esp, 24h
pop	ebx
pop	edi
retn
mov	[esp+2Ch+Size],	4
mov	[esp+2Ch+Src], offset aMe 
mov	[esp+2Ch+Dst], edi
call	g_ascii_strncasecmp
test	eax, eax
jnz	short loc_67D2747C
sub	ebx, 3
mov	[esp+2Ch+Size],	ebx 
lea	eax, [edi+4]
mov	[esp+2Ch+Src], eax 
mov	[esp+2Ch+Dst], edi 
call	memmove
mov	eax, 1
jmp	short loc_67D2747E
align 4
xor	eax, eax
mov	ecx, ebx
mov	edi, edx
repne scasb
not	ecx
lea	ebx, [ecx-1]
jmp	loc_67D27449
align 10h
mov	[esp+2Ch+Size],	offset aMessageNull_2 
mov	[esp+2Ch+Src], offset aPurple_message 
mov	[esp+2Ch+Dst], 0
call	g_return_if_fail_warning
jmp	loc_67D2747C
call	__stack_chk_fail
align 4
public purple_text_strip_mnemonic
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	eax, [esp+4Ch+arg_0]
mov	[esp+4Ch+var_30], eax
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D27696
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, [esp+4Ch+var_30]
repne scasb
not	ecx
mov	[esp+4Ch+var_4C], ecx
call	g_malloc
mov	[esp+4Ch+var_34], eax
mov	edx, [esp+4Ch+var_30]
mov	al, [edx]
mov	esi, edx
mov	ecx, [esp+4Ch+var_34]
mov	edi, ecx
			
test	al, al
jz	short loc_67D27571
cmp	al, 5Fh
jz	short loc_67D27590
test	al, al
js	short loc_67D275CC
cmp	al, 20h
jz	short loc_67D27566
mov	ecx, edi
mov	[edi], al
inc	edi
mov	al, [esi+1]
inc	esi
test	al, al
jnz	short loc_67D27558
			
mov	byte ptr [edi],	0
mov	eax, [esp+4Ch+var_34]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D276BF
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
cmp	edi, [esp+4Ch+var_34]
jbe	short loc_67D275C4
cmp	esi, [esp+4Ch+var_30]
jbe	short loc_67D275C4
cmp	byte ptr [esi-1], 28h
mov	al, [esi+1]
jz	loc_67D27677
lea	esi, [esi+0]
			
cmp	al, 5Fh
jz	short loc_67D275B4
inc	esi
jmp	short loc_67D27554
align 4
mov	byte ptr [edi],	5Fh
inc	edi
mov	al, [esi+2]
add	esi, 2
mov	ecx, edi
jmp	short loc_67D27554
align 4
			
mov	al, [esi+1]
jmp	short loc_67D275AC
align 4
movsx	edx, al
mov	ecx, edx
and	ecx, 0E0h
cmp	ecx, 0C0h
jz	short loc_67D27658
mov	ecx, edx
and	ecx, 0F0h
cmp	ecx, 0E0h
jz	short loc_67D27660
mov	ecx, edx
and	ecx, 0F8h
cmp	ecx, 0F0h
jz	short loc_67D27668
mov	ecx, edx
and	ecx, 0FCh
cmp	ecx, 0F8h
jz	short loc_67D27670
and	edx, 0FEh
cmp	edx, 0FCh
setz	dl
movzx	edx, dl
lea	ebp, [edx+edx*4+1]
			
mov	ecx, esi
mov	edx, edi
jmp	short loc_67D27632
align 4
mov	ecx, ebx
test	al, al
jz	short loc_67D27650
mov	[edx], al
inc	edx
lea	ebx, [ecx+1]
mov	eax, ebx
sub	eax, esi
cmp	ebp, eax
mov	al, [ecx+1]
jg	short loc_67D2762C
mov	esi, ebx
mov	ecx, edi
mov	edi, edx
jmp	loc_67D27554
align 10h
mov	edi, edx
jmp	loc_67D27571
align 4
mov	ebp, 2
jmp	short loc_67D27625
align 10h
mov	ebp, 3
jmp	short loc_67D27625
align 4
mov	ebp, 4
jmp	short loc_67D27625
align 10h
mov	ebp, 5
jmp	short loc_67D27625
test	al, al
jle	loc_67D275B0
cmp	byte ptr [esi+2], 29h
jnz	loc_67D275AC
mov	al, [esi+3]
add	esi, 3
mov	edi, ecx
jmp	loc_67D27554
mov	[esp+4Ch+var_44], offset aInNull 
mov	[esp+4Ch+var_48], offset aPurple_text_st 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
mov	[esp+4Ch+var_34], 0
jmp	loc_67D27574
call	__stack_chk_fail
public purple_unescape_filename
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D276EF
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	purple_url_decode
call	__stack_chk_fail
public purple_escape_filename
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D278BE
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0FFFFFFFFh
mov	[esp+5Ch+var_5C], ebx
call	g_utf8_validate
test	eax, eax
jz	loc_67D27864
cmp	byte ptr [ebx],	0
jz	loc_67D27851
xor	esi, esi
mov	ebp, ds:g_utf8_skip
nop
			
mov	[esp+5Ch+var_5C], ebx
call	g_utf8_get_char
cmp	eax, 7Fh
ja	short loc_67D27790
mov	ecx, ds:g_ascii_table
mov	edx, [ecx]
test	byte ptr [edx+eax*2], 1
jnz	loc_67D27898
cmp	eax, 40h
jz	loc_67D27898
cmp	eax, 2Dh
jz	loc_67D27898
cmp	eax, 5Fh
jz	loc_67D27898
cmp	eax, 2Eh
jz	loc_67D27898
cmp	eax, 23h
jz	loc_67D27898
lea	edx, [esp+5Ch+var_26]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	g_unichar_to_utf8
mov	[esp+5Ch+var_30], eax
test	eax, eax
jle	loc_67D2789F
xor	edi, edi
cmp	esi, 7FCh
ja	loc_67D2789F
movzx	eax, [esp+edi+5Ch+var_26]
mov	[esp+5Ch+var_54], eax
mov	[esp+5Ch+var_58], offset a02x_1	
lea	eax, byte_67D74940[esi]
mov	[esp+5Ch+var_5C], eax
call	libintl_sprintf
add	esi, 3
inc	edi
cmp	edi, [esp+5Ch+var_30]
jz	loc_67D2789F
cmp	esi, 7FCh
ja	loc_67D2789F
cmp	edi, 6
jnz	short loc_67D277BA
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], offset aPurple_escape_ 
mov	[esp+5Ch+var_54], 1396h
mov	[esp+5Ch+var_58], offset aUtil_c 
mov	[esp+5Ch+var_5C], 0
call	g_warn_message
movzx	eax, byte ptr [ebx]
mov	edx, [ebp+0]
movsx	eax, byte ptr [edx+eax]
add	ebx, eax
cmp	byte ptr [ebx],	0
jnz	loc_67D27744
test	esi, esi
jz	short loc_67D27851
lea	esi, [esi+0]
			
mov	al, ds:byte_67D7493F[esi]
cmp	al, 2Eh
jz	short loc_67D2784E
cmp	al, 20h
jnz	short loc_67D27853
dec	esi
jnz	short loc_67D27840
			
xor	esi, esi
mov	ds:byte_67D74940[esi], 0
mov	eax, offset byte_67D74940
jmp	short loc_67D27882
align 4
mov	[esp+5Ch+var_54], offset aG_utf8_validat 
mov	[esp+5Ch+var_58], offset aPurple_escape_ 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	ecx, [esp+5Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D278DE
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
			
mov	ds:byte_67D74940[esi], al
inc	esi
			
movzx	eax, byte ptr [ebx]
mov	edx, [ebp+0]
movsx	eax, byte ptr [edx+eax]
add	ebx, eax
cmp	byte ptr [ebx],	0
jz	short loc_67D27839
cmp	esi, 7FEh
jbe	loc_67D27744
jmp	short loc_67D27840
mov	[esp+5Ch+var_54], offset aStrNull_0 
mov	[esp+5Ch+var_58], offset aPurple_escape_ 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D27882
call	__stack_chk_fail
align 4
public _purple_oscar_convert
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D27940
mov	[esp+2Ch+var_28], offset aPrplOscar 
mov	[esp+2Ch+var_2C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67D27940
movsx	eax, byte ptr [esi]
test	al, al
jz	short loc_67D27938
sub	eax, 30h
cmp	eax, 9
ja	short loc_67D27954
lea	eax, [esi+1]
jmp	short loc_67D27931
inc	eax
sub	edx, 30h
cmp	edx, 9
ja	short loc_67D27954
movsx	edx, byte ptr [eax]
test	dl, dl
jnz	short loc_67D27928
mov	ebx, offset aPrplIcq_0 
lea	esi, [esi+0]
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2795B
add	esp, 24h
pop	ebx
pop	esi
retn
			
mov	ebx, offset aPrplAim 
jmp	short loc_67D27940
call	__stack_chk_fail
public purple_restore_default_signal_handlers
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2797E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_util_set_current_song
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	ebp, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
call	purple_accounts_get_all
mov	edi, eax
test	eax, eax
jnz	short loc_67D279BF
jmp	loc_67D27A38
align 4
			
mov	edi, [edi+4]
test	edi, edi
jz	short loc_67D27A38
			
mov	ebx, [edi]
call	purple_core_get_ui
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_enabled
test	eax, eax
jz	short loc_67D279B8
mov	[esp+5Ch+var_5C], ebx
call	purple_account_get_presence
mov	[esp+5Ch+var_58], offset aTune 
mov	[esp+5Ch+var_5C], eax
call	purple_presence_get_status
test	eax, eax
jz	short loc_67D279B8
test	esi, esi
jz	short loc_67D27A4C
mov	[esp+5Ch+var_40], 0
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_44], edx
mov	[esp+5Ch+var_48], offset aTune_album 
mov	[esp+5Ch+var_4C], ebp
mov	[esp+5Ch+var_50], offset aTune_artist 
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+var_58], offset aTune_title 
mov	[esp+5Ch+var_5C], eax
call	sub_67D19A9C
mov	edi, [edi+4]
test	edi, edi
jnz	short loc_67D279BF
lea	esi, [esi+0]
			
mov	eax, [esp+5Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D27A61
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], eax
call	purple_status_set_active
jmp	loc_67D279B8
call	__stack_chk_fail
align 4
public purple_util_format_song_info
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	esi, [esp+3Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D27B10
cmp	byte ptr [eax],	0
jz	short loc_67D27B10
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+3Ch+var_3C], offset byte_67D45CB8
call	g_string_new
mov	ebx, eax
mov	[esp+3Ch+var_34], ebp
mov	[esp+3Ch+var_38], offset aS_14 
mov	[esp+3Ch+var_3C], eax
call	g_string_append_printf
mov	[esp+3Ch+var_3C], ebp
call	g_free
test	edi, edi
jz	short loc_67D27ADD
cmp	byte ptr [edi],	0
jnz	loc_67D27B70
			
test	esi, esi
jz	short loc_67D27AE6
cmp	byte ptr [esi],	0
jnz	short loc_67D27B2C
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D27BB3
mov	[esp+3Ch+arg_4], 0
mov	[esp+3Ch+arg_0], ebx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_string_free
align 10h
			
xor	eax, eax
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D27BB3
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], esi
call	g_markup_escape_text
mov	esi, eax
mov	[esp+3Ch+var_38], offset aS_16 
mov	[esp+3Ch+var_3C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+3Ch+var_34], esi
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_string_append_printf
mov	[esp+3Ch+var_3C], esi
call	g_free
jmp	loc_67D27AE6
align 10h
mov	[esp+3Ch+var_38], 0FFFFFFFFh
mov	[esp+3Ch+var_3C], edi
call	g_markup_escape_text
mov	edi, eax
mov	[esp+3Ch+var_38], offset aS_17 
mov	[esp+3Ch+var_3C], offset aPidgin_16 
call	libintl_dgettext
mov	[esp+3Ch+var_34], edi
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
call	g_string_append_printf
mov	[esp+3Ch+var_3C], edi
call	g_free
jmp	loc_67D27ADD
			
call	__stack_chk_fail
public purple_get_host_name
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D27BDA
add	esp, 1Ch
jmp	g_get_host_name
call	__stack_chk_fail
align 10h
public purple_uuid_random
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
call	g_random_int
mov	esi, eax
call	g_random_int
mov	ebx, eax
call	g_random_int
mov	edi, eax
call	g_random_int
mov	[esp+3Ch+var_24], edi
mov	edx, ebx
shr	edx, 10h
mov	[esp+3Ch+var_28], edx
mov	edx, esi
shr	edx, 0Ch
and	edx, 3FFFh
or	dh, 80h
mov	[esp+3Ch+var_2C], edx
mov	edx, esi
and	edx, 0FFFh
or	dh, 40h
mov	[esp+3Ch+var_30], edx
and	ebx, 0FFFFh
mov	[esp+3Ch+var_34], ebx
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset a08x04x04x04x04 
call	g_strdup_printf
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27C66
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public purple_value_new
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D27CB4
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
mov	esi, eax
mov	[eax], ebx
cmp	ebx, 1
jz	short loc_67D27CD4
cmp	ebx, 11h
jz	short loc_67D27CE0
			
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27CF1
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aTypePurple_typ 
mov	[esp+2Ch+var_28], offset aPurple_value_n 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	short loc_67D27C9E
mov	eax, [esp+2Ch+arg_4]
mov	[esi+10h], eax
jmp	short loc_67D27C9E
align 10h
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[esi+10h], eax
jmp	short loc_67D27C9E
call	__stack_chk_fail
align 4
public purple_value_new_outgoing
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D27D44
mov	[esp+2Ch+var_2C], 18h
call	g_malloc0
mov	ebx, eax
mov	[eax], esi
cmp	esi, 1
jz	short loc_67D27D64
cmp	esi, 11h
jz	short loc_67D27D70
			
or	word ptr [ebx+4], 1
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27D81
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
mov	[esp+2Ch+var_24], offset aTypePurple_typ 
mov	[esp+2Ch+var_28], offset aPurple_value_8 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	short loc_67D27D2F
mov	eax, [esp+2Ch+arg_4]
mov	[ebx+10h], eax
jmp	short loc_67D27D2A
align 10h
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[ebx+10h], eax
jmp	short loc_67D27D2A
call	__stack_chk_fail
align 4
public purple_value_get_type
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D27DB4
mov	eax, [eax]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27DD4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_value_9 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D27DA1
call	__stack_chk_fail
align 4
public purple_value_destroy
			
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D27E38
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 11h
jz	short loc_67D27E28
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 0Dh
jz	short loc_67D27E68
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D27E75
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
align 4
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_67D27E0D
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_value_d 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D27E75
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
jmp	short loc_67D27E0D
			
call	__stack_chk_fail
align 4
public purple_value_get_subtype
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D27ED8
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
dec	eax
jz	short loc_67D27ED0
mov	[esp+2Ch+var_24], offset aPurple_valu_10 
mov	[esp+2Ch+var_28], offset aPurple_valu_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27EF8
add	esp, 28h
pop	ebx
retn
align 10h
mov	eax, [ebx+10h]
jmp	short loc_67D27EBC
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_11 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D27EBC
call	__stack_chk_fail
align 10h
public purple_value_get_specific_type
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D27F5C
mov	[esp+2Ch+var_2C], ebx
call	purple_value_get_type
cmp	eax, 11h
jz	short loc_67D27F54
mov	[esp+2Ch+var_24], offset aPurple_valu_12 
mov	[esp+2Ch+var_28], offset aPurple_valu_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27F7C
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+10h]
jmp	short loc_67D27F42
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_13 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D27F42
call	__stack_chk_fail
align 4
public purple_value_is_outgoing
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D27FB4
mov	eax, [eax+4]
and	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D27FD4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_value_i 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D27FA1
call	__stack_chk_fail
align 4
public purple_value_set_char
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D2800C
mov	[eax+8], dl
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2802A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_value_s 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D27FFA
call	__stack_chk_fail
align 10h
public purple_value_set_uchar
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28060
mov	[eax+8], dl
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2807E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_14 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2804E
call	__stack_chk_fail
align 4
public purple_value_set_boolean
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D280B4
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D280D2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_15 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D280A2
call	__stack_chk_fail
align 4
public purple_value_set_short
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28108
mov	[eax+8], dx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28126
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_16 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D280F7
call	__stack_chk_fail
align 4
public purple_value_set_ushort
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D2815C
mov	[eax+8], dx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2817A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_17 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2814B
call	__stack_chk_fail
align 10h
public purple_value_set_int
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D281B0
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D281CE
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_18 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2819E
call	__stack_chk_fail
align 4
public purple_value_set_uint
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28204
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28222
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_19 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D281F2
call	__stack_chk_fail
align 4
public purple_value_set_long
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28258
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28276
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_20 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D28246
call	__stack_chk_fail
align 4
public purple_value_set_ulong
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D282AC
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D282CA
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_21 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2829A
call	__stack_chk_fail
align 10h
public purple_value_set_int64
push	ebx
sub	esp, 18h
mov	ecx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	ecx, ecx
jz	short loc_67D28308
mov	[ecx+8], eax
mov	[ecx+0Ch], edx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D28335
add	esp, 18h
pop	ebx
retn
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28335
mov	[esp+1Ch+arg_8], offset	aValueNull_3 
mov	[esp+1Ch+arg_4], offset	aPurple_valu_22	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_value_set_uint64
push	ebx
sub	esp, 18h
mov	ecx, [esp+1Ch+arg_0]
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ebx
xor	ebx, ebx
test	ecx, ecx
jz	short loc_67D28374
mov	[ecx+8], eax
mov	[ecx+0Ch], edx
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D283A1
add	esp, 18h
pop	ebx
retn
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D283A1
mov	[esp+1Ch+arg_8], offset	aValueNull_3 
mov	[esp+1Ch+arg_4], offset	aPurple_valu_23	
mov	[esp+1Ch+arg_0], 0
add	esp, 18h
pop	ebx
jmp	g_return_if_fail_warning
			
call	__stack_chk_fail
align 4
public purple_value_set_string
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D2842C
test	esi, esi
jz	short loc_67D283E4
mov	[esp+2Ch+var_24], 0
mov	[esp+2Ch+var_28], 0FFFFFFFFh
mov	[esp+2Ch+var_2C], esi
call	g_utf8_validate
test	eax, eax
jz	short loc_67D2840C
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+8], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2844A
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aDataNullG_utf8 
mov	[esp+2Ch+var_28], offset aPurple_valu_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D283FA
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_24 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D283FA
call	__stack_chk_fail
align 10h
public purple_value_set_object
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28480
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2849E
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_25 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2846E
call	__stack_chk_fail
align 4
public purple_value_set_pointer
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D284D4
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D284F2
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_26 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D284C2
call	__stack_chk_fail
align 4
public purple_value_set_enum
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D28528
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28546
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_27 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D28516
call	__stack_chk_fail
align 4
public purple_value_set_boxed
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D2857C
mov	[eax+8], edx
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2859A
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_28 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2856A
call	__stack_chk_fail
align 10h
public purple_value_get_char
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D285CC
mov	al, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D285EC
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_29 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D285BA
call	__stack_chk_fail
align 4
public purple_value_get_uchar
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28620
mov	al, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28640
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_30 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2860E
call	__stack_chk_fail
align 4
public purple_value_get_boolean
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28674
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28694
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_31 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D28662
call	__stack_chk_fail
align 4
public purple_value_get_short
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D286C8
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D286E8
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_32 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D286B6
call	__stack_chk_fail
align 10h
public purple_value_get_ushort
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2871C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2873C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_33 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2870A
call	__stack_chk_fail
align 4
public purple_value_get_int
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28770
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28790
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_34 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2875E
call	__stack_chk_fail
align 4
public purple_value_get_uint
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D287C4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D287E4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_35 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D287B2
call	__stack_chk_fail
align 4
public purple_value_get_long
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28818
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28838
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_36 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D28806
call	__stack_chk_fail
align 10h
public purple_value_get_ulong
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2886C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2888C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_37 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2885A
call	__stack_chk_fail
align 4
public purple_value_get_int64
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D288C4
mov	edx, [eax+0Ch]
mov	eax, [eax+8]
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D288E6
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_38 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
xor	edx, edx
jmp	short loc_67D288B1
call	__stack_chk_fail
align 4
public purple_value_get_uint64
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2891C
mov	edx, [eax+0Ch]
mov	eax, [eax+8]
mov	ecx, [esp+2Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D2893E
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_39 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
xor	edx, edx
jmp	short loc_67D28909
call	__stack_chk_fail
align 4
public purple_value_get_string
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28970
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28990
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_40 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2895E
call	__stack_chk_fail
align 4
public purple_value_get_object
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D289C4
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D289E4
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_41 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D289B2
call	__stack_chk_fail
align 4
public purple_value_get_pointer
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28A18
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28A38
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_42 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D28A06
call	__stack_chk_fail
align 10h
public purple_value_get_enum
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28A6C
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28A8F
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_43 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, 0FFFFFFFFh
jmp	short loc_67D28A5A
call	__stack_chk_fail
public purple_value_get_boxed
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D28AC0
mov	eax, [eax+8]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28AE0
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_44 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D28AAE
call	__stack_chk_fail
align 4
public purple_value_dup
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D28D18
mov	[esp+2Ch+var_2C], esi
call	purple_value_get_type
mov	edi, eax
cmp	eax, 1
jz	loc_67D28D3C
cmp	edi, 11h
jz	short loc_67D28B58
mov	[esp+2Ch+var_2C], edi
call	purple_value_new
mov	ebx, eax
mov	eax, [esi+4]
mov	[ebx+4], ax
cmp	edi, 11h	
jbe	short loc_67D28B50
nop			
			
mov	eax, ebx	
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D28D62
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 10h
jmp	ds:off_67D47804[edi*4] 
align 4
mov	[esp+2Ch+var_2C], esi
call	purple_value_get_specific_type
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 11h
call	purple_value_new
mov	ebx, eax
mov	eax, [esi+4]
mov	[ebx+4], ax
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_boxed
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_boxed
jmp	short loc_67D28B34 
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_enum
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_enum
jmp	short loc_67D28B34 
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_pointer
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_pointer
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_object
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_object
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_string
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_string
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_uint64
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_uint64
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_int64
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_int64
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_ulong
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_ulong
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_long
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_long
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_uint
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_uint
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_int
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_int
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_ushort
movzx	eax, ax
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_ushort
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_short
cwde
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_short
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_boolean
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_boolean
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_uchar
movzx	eax, al
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_uchar
jmp	loc_67D28B34	
			
mov	[esp+2Ch+var_2C], esi 
call	purple_value_get_char
movsx	eax, al
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], ebx
call	purple_value_set_char
jmp	loc_67D28B34	
align 4
mov	[esp+2Ch+var_24], offset aValueNull_3 
mov	[esp+2Ch+var_28], offset aPurple_valu_45 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D28B34	
align 4
mov	[esp+2Ch+var_2C], esi
call	purple_value_get_subtype
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], 1
call	purple_value_new
mov	ebx, eax
mov	eax, [esi+4]
mov	[ebx+4], ax
jmp	loc_67D28B34	
call	__stack_chk_fail
align 4
public purple_version_check
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
mov	edx, [esp+1Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
cmp	[esp+1Ch+arg_0], 2
ja	short loc_67D28DAC
jnz	short loc_67D28DB4
cmp	eax, 0Ah
ja	short loc_67D28DBC
jnz	short loc_67D28DC4
cmp	edx, 0Bh
jbe	short loc_67D28DC4
mov	eax, offset aLibpurpleVersi 
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28DC8
add	esp, 1Ch
retn
align 4
mov	eax, offset aLibpurpleVer_0 
jmp	short loc_67D28D99
align 4
mov	eax, offset aLibpurpleVer_1 
jmp	short loc_67D28D99
align 4
mov	eax, offset aLibpurpleVer_2 
jmp	short loc_67D28D99
align 4
			
xor	eax, eax
jmp	short loc_67D28D99
call	__stack_chk_fail
align 10h
public purple_whiteboard_set_ui_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:dword_67D75140, eax
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28DF7
add	esp, 1Ch
retn
call	__stack_chk_fail
public purple_whiteboard_set_prpl_ops
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+arg_4]
mov	eax, [esp+1Ch+arg_0]
mov	[eax+14h], edx
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28E25
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
public purple_whiteboard_create
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	esi, [esp+3Ch+arg_0]
mov	edi, [esp+3Ch+arg_4]
mov	ebp, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], 1Ch
call	g_malloc0
mov	ebx, eax
mov	[eax+4], esi
mov	[eax], ebp
mov	[esp+3Ch+var_3C], edi
call	g_strdup
mov	[ebx+8], eax
mov	[esp+3Ch+var_3C], esi
call	purple_account_get_connection
mov	[esp+3Ch+var_3C], eax
call	purple_connection_get_prpl
mov	eax, [eax+10h]
mov	eax, [eax+4Ch]
mov	eax, [eax+104h]
mov	[ebx+14h], eax
test	eax, eax
jz	short loc_67D28E96
mov	eax, [eax]
test	eax, eax
jz	short loc_67D28E96
mov	[esp+3Ch+var_3C], ebx
call	eax
			
mov	[esp+3Ch+var_38], ebx
mov	eax, ds:dword_67D75144
mov	[esp+3Ch+var_3C], eax
call	g_list_append
mov	ds:dword_67D75144, eax
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D28EC2
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
call	__stack_chk_fail
align 4
public purple_whiteboard_destroy
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D28F48
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67D28EFB
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D28EFB
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67D28EFB
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+14h]
test	eax, eax
jz	short loc_67D28F0E
mov	eax, [eax+4]
test	eax, eax
jz	short loc_67D28F0E
mov	[esp+2Ch+var_2C], ebx
call	eax
			
mov	eax, [ebx+8]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_28], ebx
mov	eax, ds:dword_67D75144
mov	[esp+2Ch+var_2C], eax
call	g_list_remove
mov	ds:dword_67D75144, eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28F75
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	[esp+2Ch+var_24], offset aWbNull 
mov	[esp+2Ch+var_28], offset aPurple_whitebo 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28F75
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_start
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D28FB4
mov	eax, [eax]
test	eax, eax
jz	short loc_67D28FB4
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D28FC4
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D28FC4
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_get_session
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	ebx, ds:dword_67D75144
test	ebx, ebx
jnz	short loc_67D28FFB
jmp	short loc_67D29030
align 4
			
mov	ebx, [ebx+4]
test	ebx, ebx
jz	short loc_67D29030
mov	esi, [ebx]
cmp	[esi+4], edi
jnz	short loc_67D28FF4
mov	[esp+3Ch+var_38], ebp
mov	eax, [esi+8]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D28FF4
lea	esi, [esi+0]
mov	eax, esi
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29034
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
			
xor	esi, esi
jmp	short loc_67D29018
call	__stack_chk_fail
align 4
public purple_whiteboard_draw_list_destroy
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29067
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_list_free
call	__stack_chk_fail
public purple_whiteboard_get_dimensions
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D290B8
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67D290B8
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D290BC
add	esp, 28h
pop	ebx
retn
			
xor	eax, eax
jmp	short loc_67D290A7
call	__stack_chk_fail
align 4
public purple_whiteboard_set_dimensions
push	esi
push	ebx
sub	esp, 14h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D29110
mov	eax, [eax+8]
test	eax, eax
jz	short loc_67D29110
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D29122
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 14h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29122
add	esp, 14h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_send_draw_list
push	ebx
sub	esp, 18h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D29168
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67D29168
mov	ebx, [esp+1Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D29179
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 18h
pop	ebx
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29179
add	esp, 18h
pop	ebx
retn
			
call	__stack_chk_fail
align 10h
public purple_whiteboard_draw_point
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 1Ch
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	esi, [esp+2Ch+arg_C]
mov	edi, [esp+2Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D291E0
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67D291E0
mov	ebp, [esp+2Ch+var_20]
xor	ebp, ds:__stack_chk_guard
jnz	short loc_67D291F4
mov	[esp+2Ch+arg_10], edi
mov	[esp+2Ch+arg_C], esi
mov	[esp+2Ch+arg_8], ebx
mov	[esp+2Ch+arg_4], ecx
mov	[esp+2Ch+arg_0], edx
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 10h
			
mov	eax, [esp+2Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D291F4
add	esp, 1Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_draw_line
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_30], eax
mov	edx, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_34], edx
mov	ecx, [esp+3Ch+arg_8]
mov	ebx, [esp+3Ch+arg_C]
mov	esi, [esp+3Ch+arg_10]
mov	edi, [esp+3Ch+arg_14]
mov	ebp, [esp+3Ch+arg_18]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D2927C
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_67D2927C
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29290
mov	[esp+3Ch+arg_18], ebp
mov	[esp+3Ch+arg_14], edi
mov	[esp+3Ch+arg_10], esi
mov	[esp+3Ch+arg_C], ebx
mov	[esp+3Ch+arg_8], ecx
mov	edx, [esp+3Ch+var_34]
mov	[esp+3Ch+arg_4], edx
mov	edx, [esp+3Ch+var_30]
mov	[esp+3Ch+arg_0], edx
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	eax
align 4
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29290
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_clear
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D292D0
mov	eax, [eax+18h]
test	eax, eax
jz	short loc_67D292D0
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D292E0
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D292E0
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_send_clear
sub	esp, 1Ch
mov	edx, [esp+1Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D29320
mov	eax, [eax+1Ch]
test	eax, eax
jz	short loc_67D29320
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D29330
mov	[esp+1Ch+arg_0], edx
add	esp, 1Ch
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29330
add	esp, 1Ch
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_send_brush
push	esi
push	ebx
sub	esp, 14h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D29384
mov	eax, [eax+14h]
test	eax, eax
jz	short loc_67D29384
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D29396
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 14h
pop	ebx
pop	esi
jmp	eax
align 4
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29396
add	esp, 14h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
public purple_whiteboard_get_brush
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	ebx, [esp+2Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D293E8
mov	eax, [eax+10h]
test	eax, eax
jz	short loc_67D293E8
mov	[esp+2Ch+var_24], ebx
mov	[esp+2Ch+var_28], ecx
mov	[esp+2Ch+var_2C], edx
call	eax
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D293EC
add	esp, 28h
pop	ebx
retn
			
xor	eax, eax
jmp	short loc_67D293D7
call	__stack_chk_fail
align 4
public purple_whiteboard_set_brush
push	esi
push	ebx
sub	esp, 14h
mov	edx, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75140
test	eax, eax
jz	short loc_67D29440
mov	eax, [eax+0Ch]
test	eax, eax
jz	short loc_67D29440
mov	esi, [esp+1Ch+var_10]
xor	esi, ds:__stack_chk_guard
jnz	short loc_67D29452
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 14h
pop	ebx
pop	esi
jmp	eax
align 10h
			
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29452
add	esp, 14h
pop	ebx
pop	esi
retn
			
call	__stack_chk_fail
align 4
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, eax
mov	edi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_2C], 2Ch
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx], eax
mov	[ebx+8], edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2949D
mov	eax, ebx
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+30h]
mov	esi, [esp+38h]
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch], eax
xor	eax, eax
mov	eax, [esp+34h]
mov	[esp], eax
call	g_strdup
mov	edi, eax
mov	[esp], ebx
call	g_strdup
mov	edx, [esp+1Ch]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D294F6
mov	[esp+38h], edi
mov	[esp+34h], eax
mov	[esp+30h], esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	g_hash_table_insert
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 38h
mov	ecx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	loc_67D295B8
mov	edx, [eax+0Ch]
lea	ebx, [edx-2]
cmp	ebx, 1
jbe	short loc_67D2956C
mov	ebx, [eax+8]
test	ebx, ebx
jz	short loc_67D295AC
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_2C], edx
mov	eax, [eax]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], offset aXmlParserError 
mov	[esp+3Ch+var_3C], offset aXmlnode 
call	purple_debug_warning
			
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D295DB
add	esp, 38h
pop	ebx
retn
mov	dword ptr [ecx+4], 1
mov	ebx, [eax+8]
test	ebx, ebx
jz	short loc_67D295D4
mov	[esp+3Ch+var_24], ebx
mov	[esp+3Ch+var_28], edx
mov	edx, [eax+4]
mov	[esp+3Ch+var_2C], edx
mov	eax, [eax]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], offset aXmlParserError 
mov	[esp+3Ch+var_3C], offset aXmlnode 
call	purple_debug_error
jmp	short loc_67D2955B
align 4
mov	ebx, offset aNull_5 
jmp	loc_67D2952E
align 4
mov	[esp+3Ch+var_34], ecx
mov	[esp+3Ch+var_38], offset aXmlParserErr_0 
mov	[esp+3Ch+var_3C], offset aXmlnode 
call	purple_debug_warning
jmp	short loc_67D2955B
align 4
mov	ebx, offset aNull_5 
jmp	short loc_67D2957A
call	__stack_chk_fail
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	edx, edx
jz	short loc_67D29628
mov	eax, [ebx]
test	eax, eax
jz	short loc_67D29628
mov	ecx, [ebx+4]
test	ecx, ecx
jnz	short loc_67D29628
mov	ecx, [eax+14h]
test	ecx, ecx
jz	short loc_67D29628
mov	[esp+2Ch+var_28], edx
mov	eax, [eax]
mov	[esp+2Ch+var_2C], eax
call	xmlStrcmp
test	eax, eax
jnz	short loc_67D29628
mov	eax, [ebx]
mov	eax, [eax+14h]
mov	[ebx], eax
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29639
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 828h
mov	eax, ds:__stack_chk_guard
mov	[esp+82Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+82Ch+arg_0]
mov	dword ptr [eax+4], 1
lea	eax, [esp+82Ch+arg_8]
mov	[esp+82Ch+ArgList], eax	
mov	eax, [esp+82Ch+arg_4]
mov	[esp+82Ch+Format], eax 
mov	[esp+82Ch+MaxCount], 800h 
lea	ebx, [esp+82Ch+var_810]
mov	[esp+82Ch+DstBuf], ebx 
call	_vsnprintf
mov	[esp+82Ch+Format], ebx
mov	[esp+82Ch+MaxCount], offset aErrorParsingXm 
mov	[esp+82Ch+DstBuf], offset aXmlnode 
call	purple_debug_error
mov	eax, [esp+82Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D296BC
add	esp, 828h
pop	ebx
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	ecx, [esp+2Ch+arg_4]
mov	edx, [esp+2Ch+arg_8]
mov	ebx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ebx
xor	ebx, ebx
cmp	byte ptr [eax],	0
jnz	short loc_67D2970C
mov	ebx, [esp+2Ch+var_10]
xor	ebx, ds:__stack_chk_guard
jnz	short loc_67D29735
mov	[esp+2Ch+arg_8], ecx
mov	[esp+2Ch+arg_4], offset	aXmlnsS	
mov	[esp+2Ch+arg_0], edx
add	esp, 28h
pop	ebx
jmp	g_string_append_printf
align 4
mov	[esp+2Ch+var_20], ecx
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aXmlnsSS 
mov	[esp+2Ch+var_2C], edx
call	g_string_append_printf
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29735
add	esp, 28h
pop	ebx
retn
			
call	__stack_chk_fail
align 4
public xmlnode_new
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D29770
cmp	byte ptr [eax],	0
jz	short loc_67D29770
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2979E
xor	edx, edx
add	esp, 2Ch
jmp	sub_67D29458
align 10h
			
mov	[esp+2Ch+var_24], offset aNameNullName_1 
mov	[esp+2Ch+var_28], offset aXmlnode_new 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2979E
add	esp, 2Ch
retn
			
call	__stack_chk_fail
align 4
public xmlnode_insert_child
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
test	eax, eax
jz	short loc_67D297E4
test	edx, edx
jz	short loc_67D29804
mov	[edx+14h], eax
mov	ecx, [eax+1Ch]
test	ecx, ecx
jz	short loc_67D29824
mov	[ecx+20h], edx
mov	[eax+1Ch], edx
			
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29829
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aParentNull 
mov	[esp+2Ch+var_28], offset aXmlnode_insert 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D297D3
align 4
mov	[esp+2Ch+var_24], offset aChildNull 
mov	[esp+2Ch+var_28], offset aXmlnode_insert 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D297D3
align 4
mov	[eax+18h], edx
jmp	short loc_67D297D0
call	__stack_chk_fail
align 10h
public xmlnode_new_child
			
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	ebx, ebx
jz	short loc_67D298A4
test	eax, eax
jz	short loc_67D29855
cmp	byte ptr [eax],	0
jnz	short loc_67D29884
mov	[esp+3Ch+var_34], offset aNameNullName_1 
mov	[esp+3Ch+var_38], offset aXmlnode_new_ch 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D298C4
add	esp, 38h
pop	ebx
retn
xor	edx, edx
call	sub_67D29458
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	xmlnode_insert_child
mov	eax, [esp+3Ch+var_20]
jmp	short loc_67D29873
align 4
mov	[esp+3Ch+var_34], offset aParentNull 
mov	[esp+3Ch+var_38], offset aXmlnode_new_ch 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29873
call	__stack_chk_fail
align 4
public xmlnode_insert_data
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	ecx, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	ebp, ebp
jz	loc_67D2998C
test	esi, esi
jz	loc_67D299A4
test	ecx, ecx
jz	short loc_67D2994C
cmp	ecx, 0FFFFFFFFh
jz	short loc_67D2997C
mov	edi, ecx
mov	edx, 2
xor	eax, eax
call	sub_67D29458
mov	ebx, eax
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	g_memdup
mov	[ebx+0Ch], eax
mov	[ebx+10h], edi
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	loc_67D299BA
mov	[esp+3Ch+arg_4], ebx
mov	[esp+3Ch+arg_0], ebp
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_insert_child
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D299BA
mov	[esp+3Ch+arg_8], offset	aSize0_2 
			
mov	[esp+3Ch+arg_4], offset	aXmlnode_inse_0	
mov	[esp+3Ch+arg_0], 0
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
xor	eax, eax
mov	edi, esi
repne scasb
not	ecx
lea	edi, [ecx-1]
jmp	loc_67D29905
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D299BA
mov	[esp+3Ch+arg_8], offset	aNodeNull_1 
jmp	short loc_67D29960
align 4
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D299BA
mov	[esp+3Ch+arg_8], offset	aDataNull_6 
jmp	short loc_67D29960
			
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 18h
mov	eax, [esp+1Ch+arg_0]
mov	ecx, [esp+1Ch+arg_4]
mov	ebx, [esp+1Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], edx
xor	edx, edx
mov	edx, [eax]
test	edx, edx
jz	short loc_67D299F1
mov	eax, [eax+4]
test	eax, eax
jnz	short loc_67D299F1
test	ecx, ecx
jz	short loc_67D299F1
test	ebx, ebx
jnz	short loc_67D29A04
			
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29A25
add	esp, 18h
pop	ebx
retn
align 4
mov	eax, [esp+1Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29A25
mov	[esp+1Ch+arg_8], ebx
mov	[esp+1Ch+arg_4], ecx
mov	[esp+1Ch+arg_0], edx
add	esp, 18h
pop	ebx
jmp	xmlnode_insert_data
			
call	__stack_chk_fail
align 4
public xmlnode_get_attrib
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D29A90
test	esi, esi
jz	short loc_67D29AB0
mov	ebx, [eax+18h]
test	ebx, ebx
jnz	short loc_67D29A5F
jmp	short loc_67D29A7C
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67D29A7C
cmp	dword ptr [ebx+8], 1
jnz	short loc_67D29A58
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67D29A58
mov	eax, [ebx+0Ch]
jmp	short loc_67D29A7E
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29AD0
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get_at 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29A7E
mov	[esp+2Ch+var_24], offset aAttrNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get_at 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29A7E
call	__stack_chk_fail
align 4
public xmlnode_get_attrib_with_namespace
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	edi, [esp+2Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D29B55
test	esi, esi
jz	short loc_67D29B75
mov	ebx, [eax+18h]
test	ebx, ebx
jnz	short loc_67D29B0F
jmp	short loc_67D29B40
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67D29B40
cmp	dword ptr [ebx+8], 1
jnz	short loc_67D29B08
mov	eax, [ebx]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67D29B08
mov	eax, [ebx+4]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], edi
call	purple_strequal
test	eax, eax
jz	short loc_67D29B08
mov	eax, [ebx+0Ch]
jmp	short loc_67D29B42
align 10h
			
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29B95
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29B42
mov	[esp+2Ch+var_24], offset aAttrNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get__0 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29B42
call	__stack_chk_fail
align 4
public xmlnode_set_namespace
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D29BE0
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+4], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29BFE
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_set_na 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D29BCE
call	__stack_chk_fail
align 4
public xmlnode_get_namespace
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D29C30
mov	eax, [eax+4]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29C50
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get_na 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29C1E
call	__stack_chk_fail
align 4
public xmlnode_set_prefix
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D29C9C
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	[esp+2Ch+var_2C], esi
call	g_strdup
mov	[ebx+24h], eax
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D29CBA
add	esp, 24h
pop	ebx
pop	esi
retn
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_set_pr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
jmp	short loc_67D29C8A
call	__stack_chk_fail
align 10h
public xmlnode_get_prefix
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D29CEC
mov	eax, [eax+24h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D29D0C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get_pr 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D29CDA
call	__stack_chk_fail
align 4
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 6Ch
mov	edi, eax
mov	[esp+7Ch+var_3C], edx
mov	[esp+7Ch+var_48], ecx
mov	edx, [esp+7Ch+arg_0]
mov	[esp+7Ch+var_34], edx
mov	eax, ds:__stack_chk_guard
mov	[esp+7Ch+var_20], eax
xor	eax, eax
mov	[esp+7Ch+var_7C], offset byte_67D47DFA
call	g_string_new
test	edi, edi
jz	loc_67D2A120
mov	ebx, eax
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jnz	loc_67D29F0C
mov	[esp+7Ch+var_38], 0
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	eax, [edi]
mov	[esp+7Ch+var_7C], eax
call	g_markup_escape_text
mov	[esp+7Ch+var_44], eax
mov	[esp+7Ch+var_7C], edi
call	xmlnode_get_prefix
mov	[esp+7Ch+var_4C], eax
test	eax, eax
mov	eax, [esp+7Ch+var_44]
jz	loc_67D2A144
mov	[esp+7Ch+var_70], eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aSS_6 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
mov	eax, [edi+28h]
test	eax, eax
jz	loc_67D2A090
mov	[esp+7Ch+var_74], ebx
mov	[esp+7Ch+var_78], offset sub_67D296C4
mov	[esp+7Ch+var_7C], eax
call	g_hash_table_foreach
			
mov	ebp, [edi+18h]
test	ebp, ebp
jz	loc_67D29FD0
mov	edx, [esp+7Ch+var_48]
mov	[esp+7Ch+var_50], edx
xor	esi, esi
mov	[esp+7Ch+var_40], ebx
mov	[esp+7Ch+var_30], edi
mov	edi, ebp
jmp	short loc_67D29E00
align 10h
cmp	eax, 2
jz	loc_67D29FBC
mov	edi, [edi+20h]
test	edi, edi
jz	short loc_67D29E1C
			
mov	eax, [edi+8]
cmp	eax, 1
jz	loc_67D29F44
test	eax, eax
jnz	short loc_67D29DF0
mov	esi, 1
mov	edi, [edi+20h]
test	edi, edi
jnz	short loc_67D29E00
mov	ebx, [esp+7Ch+var_40]
mov	edi, [esp+7Ch+var_30]
test	esi, esi
jz	loc_67D29FD0
mov	ebp, [esp+7Ch+var_50]
test	ebp, ebp
jnz	loc_67D2A04C
mov	eax, offset byte_67D47DFA
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aS_21 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
mov	esi, [edi+18h]
test	esi, esi
jz	short loc_67D29EB0
mov	edi, [esp+7Ch+var_34]
inc	edi
jmp	short loc_67D29E70
align 10h
cmp	edx, 2
jz	loc_67D2A058
			
mov	esi, [esi+20h]
test	esi, esi
jz	short loc_67D29EB0
			
mov	edx, [esi+8]
test	edx, edx
jnz	short loc_67D29E60
mov	[esp+7Ch+var_7C], edi
mov	ecx, [esp+7Ch+var_50]
lea	edx, [esp+7Ch+var_24]
mov	eax, esi
call	sub_67D29D14
mov	ebp, eax
mov	eax, [esp+7Ch+var_24]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], ebp
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_len
mov	ebx, eax
mov	[esp+7Ch+var_7C], ebp
call	g_free
mov	esi, [esi+20h]
test	esi, esi
jnz	short loc_67D29E70
			
mov	esi, [esp+7Ch+var_38]
test	esi, esi
jz	short loc_67D29EC4
mov	ecx, [esp+7Ch+var_50]
test	ecx, ecx
jnz	loc_67D2A160
			
mov	edx, [esp+7Ch+var_4C]
test	edx, edx
jz	loc_67D2A177
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jz	loc_67D2A0F0
mov	eax, offset asc_67D47DF7 
mov	[esp+7Ch+var_6C], eax
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_70], eax
mov	eax, [esp+7Ch+var_4C]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aSSS_5	
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
jmp	loc_67D29FF1
align 4
mov	eax, [esp+7Ch+var_34]
test	eax, eax
jz	loc_67D29D5D
mov	[esp+7Ch+var_78], 9
mov	edx, [esp+7Ch+var_34]
mov	[esp+7Ch+var_7C], edx
call	g_strnfill
mov	[esp+7Ch+var_38], eax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	g_string_append
mov	ebx, eax
jmp	loc_67D29D65
align 4
mov	[esp+7Ch+var_7C], edi
call	xmlnode_get_prefix
mov	ecx, eax
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	eax, [edi]
mov	[esp+7Ch+var_7C], eax
mov	[esp+7Ch+var_54], ecx
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	eax, [edi+0Ch]
mov	[esp+7Ch+var_7C], eax
call	g_markup_escape_text
mov	ebx, eax
mov	ecx, [esp+7Ch+var_54]
test	ecx, ecx
jz	loc_67D2A0FC
mov	[esp+7Ch+var_6C], eax
mov	[esp+7Ch+var_70], ebp
mov	[esp+7Ch+var_74], ecx
mov	[esp+7Ch+var_78], offset aSSS_6	
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	g_string_append_printf
mov	[esp+7Ch+var_7C], ebp
call	g_free
mov	[esp+7Ch+var_7C], ebx
call	g_free
jmp	loc_67D29DF9
mov	[esp+7Ch+var_50], 0
mov	esi, 1
jmp	loc_67D29E15
align 10h
			
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jnz	short loc_67D2A044
mov	eax, offset byte_67D47DFA
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aS_18 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
			
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_7C], eax
call	g_free
mov	eax, [esp+7Ch+var_3C]
test	eax, eax
jz	short loc_67D2A01A
mov	eax, [ebx+4]
mov	edx, [esp+7Ch+var_3C]
mov	[edx], eax
mov	[esp+7Ch+var_78], 0
mov	[esp+7Ch+var_7C], ebx
call	g_string_free
mov	edx, [esp+7Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2A1AC
add	esp, 6Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	eax, offset asc_67D47DF7 
jmp	short loc_67D29FDD
align 4
mov	eax, offset asc_67D47DF7 
jmp	loc_67D29E3D
align 4
mov	eax, [esi+10h]
test	eax, eax
jz	loc_67D29E69
mov	[esp+7Ch+var_78], eax
mov	eax, [esi+0Ch]
mov	[esp+7Ch+var_7C], eax
call	g_markup_escape_text
mov	ebp, eax
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	g_string_append
mov	ebx, eax
mov	[esp+7Ch+var_7C], ebp
call	g_free
jmp	loc_67D29E69
align 10h
mov	eax, [edi+4]
test	eax, eax
jz	loc_67D29DCE
mov	edx, [edi+14h]
test	edx, edx
jz	short loc_67D2A0BC
mov	edx, [edx+4]
mov	[esp+7Ch+var_78], edx
mov	[esp+7Ch+var_7C], eax
call	purple_strequal
test	eax, eax
jnz	loc_67D29DCE
mov	eax, [edi+4]
mov	[esp+7Ch+var_78], 0FFFFFFFFh
mov	[esp+7Ch+var_7C], eax
call	g_markup_escape_text
mov	esi, eax
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aXmlnsS 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
mov	[esp+7Ch+var_7C], esi
call	g_free
jmp	loc_67D29DCE
align 10h
mov	eax, offset byte_67D47DFA
jmp	loc_67D29EE1
align 4
mov	[esp+7Ch+var_70], eax
mov	[esp+7Ch+var_74], ebp
mov	[esp+7Ch+var_78], offset aSS_7 
mov	eax, [esp+7Ch+var_40]
mov	[esp+7Ch+var_7C], eax
call	g_string_append_printf
jmp	loc_67D29FA7
align 10h
mov	[esp+7Ch+var_74], offset aNodeNull_1 
mov	[esp+7Ch+var_78], offset aXmlnode_to_str 
mov	[esp+7Ch+var_7C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	loc_67D2A02A
align 4
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aS_19 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
jmp	loc_67D29DAF
align 10h
mov	eax, [esp+7Ch+var_38]
mov	[esp+7Ch+var_78], eax
mov	[esp+7Ch+var_7C], ebx
call	g_string_append
mov	ebx, eax
jmp	loc_67D29EC4
mov	eax, [esp+7Ch+var_48]
test	eax, eax
jnz	short loc_67D2A1A5
mov	eax, offset byte_67D47DFA
mov	[esp+7Ch+var_70], eax
mov	eax, [esp+7Ch+var_44]
mov	[esp+7Ch+var_74], eax
mov	[esp+7Ch+var_78], offset aSS_8 
mov	[esp+7Ch+var_7C], ebx
call	g_string_append_printf
jmp	loc_67D29FF1
mov	eax, offset asc_67D47DF7 
jmp	short loc_67D2A184
call	__stack_chk_fail
align 4
public xmlnode_get_parent
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2A1E0
mov	eax, [eax+14h]
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2A200
add	esp, 2Ch
retn
align 10h
mov	[esp+2Ch+var_24], offset aChildNull 
mov	[esp+2Ch+var_28], offset aXmlnode_get_pa 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2A1CE
call	__stack_chk_fail
align 4
public xmlnode_free
			
push	esi
push	ebx
sub	esp, 24h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	loc_67D2A2E0
mov	ecx, [esi+14h]
test	ecx, ecx
jz	short loc_67D2A260
mov	edx, [ecx+18h]
cmp	edx, esi
jz	loc_67D2A2D0
test	edx, edx
jz	short loc_67D2A260
mov	eax, [edx+20h]
cmp	eax, esi
jnz	short loc_67D2A24A
jmp	loc_67D2A30E
align 4
mov	eax, edx
test	eax, eax
jz	short loc_67D2A260
mov	edx, [eax+20h]
cmp	edx, esi
jnz	short loc_67D2A248
mov	edx, [esi+20h]
mov	[eax+20h], edx
cmp	[ecx+1Ch], esi
jz	short loc_67D2A2DB
			
mov	eax, [esi+18h]
test	eax, eax
jz	short loc_67D2A279
nop
mov	ebx, [eax+20h]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
mov	eax, ebx
test	ebx, ebx
jnz	short loc_67D2A268
mov	eax, [esi]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+4]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+24h]
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, [esi+28h]
test	eax, eax
jz	short loc_67D2A2B3
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_destroy
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A315
mov	[esp+2Ch+arg_0], esi
add	esp, 24h
pop	ebx
pop	esi
jmp	g_free
align 10h
mov	eax, [esi+20h]
mov	[ecx+18h], eax
cmp	esi, [ecx+1Ch]
jnz	short loc_67D2A260
mov	[ecx+1Ch], eax
jmp	short loc_67D2A260
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_free 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A315
add	esp, 24h
pop	ebx
pop	esi
retn
mov	eax, edx
jmp	loc_67D2A255
			
call	__stack_chk_fail
align 4
public xmlnode_remove_attrib_with_namespace
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	edi, [esp+4Ch+arg_0]
mov	esi, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_8]
mov	[esp+4Ch+var_30], eax
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	loc_67D2A3DC
test	esi, esi
jz	loc_67D2A40C
mov	ebx, [edi+18h]
xor	ebp, ebp
test	ebx, ebx
jnz	short loc_67D2A367
jmp	short loc_67D2A3C8
align 4
			
mov	eax, [ebx+20h]
mov	ebp, ebx
test	eax, eax
jz	short loc_67D2A3C8
mov	ebx, eax
cmp	dword ptr [ebx+8], 1
jnz	short loc_67D2A35C
mov	eax, [ebx]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67D2A35C
mov	eax, [ebx+4]
mov	[esp+4Ch+var_48], eax
mov	eax, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D2A35C
mov	eax, [ebx+20h]
test	ebp, ebp
jz	loc_67D2A427
mov	[ebp+20h], eax
cmp	[edi+1Ch], ebx
jz	short loc_67D2A422
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A42F
mov	[esp+4Ch+arg_0], ebx
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_free
align 4
			
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A42F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A42F
mov	[esp+4Ch+arg_8], offset	aNodeNull_1 
mov	[esp+4Ch+arg_4], offset	aXmlnode_remove	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A42F
mov	[esp+4Ch+arg_8], offset	aAttrNull_1 
jmp	short loc_67D2A3F0
mov	[edi+1Ch], ebp
jmp	short loc_67D2A3A9
mov	[edi+18h], eax
jmp	loc_67D2A3A4
			
call	__stack_chk_fail
public xmlnode_set_attrib_full
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebx, [esp+4Ch+arg_4]
mov	edi, [esp+4Ch+arg_8]
mov	ecx, [esp+4Ch+arg_C]
mov	ebp, [esp+4Ch+arg_10]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D2A4D8
test	ebx, ebx
jz	loc_67D2A508
test	ebp, ebp
jz	loc_67D2A520
mov	[esp+4Ch+var_44], edi
mov	[esp+4Ch+var_48], ebx
mov	[esp+4Ch+var_4C], esi
mov	[esp+4Ch+var_30], ecx
call	xmlnode_remove_attrib_with_namespace
mov	edx, 1
mov	eax, ebx
call	sub_67D29458
mov	ebx, eax
mov	[esp+4Ch+var_4C], ebp
call	g_strdup
mov	[ebx+0Ch], eax
mov	[esp+4Ch+var_4C], edi
call	g_strdup
mov	[ebx+4], eax
mov	ecx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_4C], ecx
call	g_strdup
mov	[ebx+24h], eax
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A536
mov	[esp+4Ch+arg_4], ebx
mov	[esp+4Ch+arg_0], esi
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	xmlnode_insert_child
align 4
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A536
mov	[esp+4Ch+arg_8], offset	aNodeNull_1 
			
mov	[esp+4Ch+arg_4], offset	aXmlnode_set_at	
mov	[esp+4Ch+arg_0], 0
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
jmp	g_return_if_fail_warning
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A536
mov	[esp+4Ch+arg_8], offset	aAttrNull_1 
jmp	short loc_67D2A4EC
align 10h
mov	eax, [esp+4Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A536
mov	[esp+4Ch+arg_8], offset	aValueNull_4 
jmp	short loc_67D2A4EC
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ecx, [esp+6Ch+arg_0]
mov	[esp+6Ch+var_34], ecx
mov	eax, [esp+6Ch+arg_4]
mov	ebx, [esp+6Ch+arg_8]
mov	edx, [esp+6Ch+arg_C]
mov	edi, [esp+6Ch+arg_10]
mov	[esp+6Ch+var_3C], edi
mov	ebp, [esp+6Ch+arg_14]
mov	ecx, [esp+6Ch+arg_18]
mov	[esp+6Ch+var_38], ecx
mov	esi, [esp+6Ch+arg_20]
mov	edi, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], edi
xor	edi, edi
test	eax, eax
jz	loc_67D2A672
mov	ecx, [esp+6Ch+var_34]
mov	edi, [ecx+4]
test	edi, edi
jnz	loc_67D2A672
mov	ecx, [ecx]
test	ecx, ecx
jz	loc_67D2A68C
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_44], edx
call	xmlnode_new_child
mov	edi, eax
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_68], edx
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_namespace
mov	[esp+6Ch+var_68], ebx
mov	[esp+6Ch+var_6C], edi
call	xmlnode_set_prefix
mov	eax, [esp+6Ch+var_3C]
test	eax, eax
jnz	loc_67D2A6A4
			
mov	ecx, [esp+6Ch+var_38]
lea	ecx, [ecx+ecx*4]
mov	[esp+6Ch+var_3C], ecx
xor	ebx, ebx
test	ecx, ecx
jle	short loc_67D2A66C
mov	[esp+6Ch+var_38], edi
nop
mov	ebp, [esi+ebx*4]
mov	edx, [esi+ebx*4+4]
mov	ecx, [esi+ebx*4+0Ch]
mov	eax, [esi+ebx*4+10h]
sub	eax, ecx
mov	[esp+6Ch+var_68], eax
mov	[esp+6Ch+var_6C], ecx
mov	[esp+6Ch+var_44], edx
call	g_strndup
mov	[esp+6Ch+var_6C], eax 
mov	[esp+6Ch+var_40], eax
call	purple_unescape_text
mov	edi, eax
mov	ecx, [esp+6Ch+var_40]
mov	[esp+6Ch+var_6C], ecx
call	g_free
mov	[esp+6Ch+var_5C], edi
mov	edx, [esp+6Ch+var_44]
mov	[esp+6Ch+var_60], edx
mov	[esp+6Ch+var_64], 0
mov	[esp+6Ch+var_68], ebp
mov	eax, [esp+6Ch+var_38]
mov	[esp+6Ch+var_6C], eax
call	xmlnode_set_attrib_full
mov	[esp+6Ch+var_6C], edi
call	g_free
add	ebx, 5
cmp	ebx, [esp+6Ch+var_3C]
jl	short loc_67D2A5F8
mov	edi, [esp+6Ch+var_38]
mov	ecx, [esp+6Ch+var_34]
mov	[ecx], edi
			
mov	ecx, [esp+6Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D2A73D
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_44], edx
call	xmlnode_new
mov	edi, eax
mov	edx, [esp+6Ch+var_44]
jmp	loc_67D2A5BE
align 4
mov	[esp+6Ch+var_60], offset g_free
mov	[esp+6Ch+var_64], offset g_free
mov	[esp+6Ch+var_68], offset g_str_equal
mov	[esp+6Ch+var_6C], offset g_str_hash
call	g_hash_table_new_full
mov	[edi+28h], eax
mov	eax, [esp+6Ch+var_3C]
test	eax, eax
jle	loc_67D2A5E2
xor	ebx, ebx
mov	[esp+6Ch+var_30], esi
jmp	short loc_67D2A718
align 10h
			
mov	[esp+6Ch+var_6C], eax
mov	[esp+6Ch+var_44], edx
call	g_strdup
mov	esi, eax
mov	edx, [esp+6Ch+var_44]
test	edx, edx
jz	short loc_67D2A72C
mov	[esp+6Ch+var_6C], edx
call	g_strdup
mov	[esp+6Ch+var_64], esi
mov	[esp+6Ch+var_68], eax
mov	eax, [edi+28h]
mov	[esp+6Ch+var_6C], eax
call	g_hash_table_insert
inc	ebx
cmp	ebx, [esp+6Ch+var_3C]
jz	short loc_67D2A734
mov	edx, [ebp+ebx*8+0]
mov	eax, [ebp+ebx*8+4]
test	eax, eax
jnz	short loc_67D2A6E0
mov	eax, offset byte_67D47DFA
jmp	short loc_67D2A6E0
align 4
mov	edx, offset byte_67D47DFA
jmp	short loc_67D2A6F6
align 4
mov	esi, [esp+6Ch+var_30]
jmp	loc_67D2A5E2
call	__stack_chk_fail
align 4
public xmlnode_set_attrib_with_prefix
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_30], eax
mov	[esp+3Ch+var_34], 0
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib_full
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A78E
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public xmlnode_set_attrib_with_namespace
sub	esp, 3Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+var_2C], eax
mov	[esp+3Ch+var_30], 0
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+var_34], eax
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+var_38], eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_set_attrib_full
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A7DE
add	esp, 3Ch
retn
call	__stack_chk_fail
align 4
public xmlnode_remove_attrib
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	edi, [esp+3Ch+arg_0]
mov	ebp, [esp+3Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
test	edi, edi
jz	short loc_67D2A870
test	ebp, ebp
jz	loc_67D2A890
mov	ebx, [edi+18h]
xor	esi, esi
test	ebx, ebx
jnz	short loc_67D2A821
jmp	short loc_67D2A85C
align 4
			
mov	ebx, [ebx+20h]
mov	esi, ebx
test	ebx, ebx
jz	short loc_67D2A85C
			
cmp	dword ptr [ebx+8], 1
jnz	short loc_67D2A818
mov	[esp+3Ch+var_38], ebp
mov	eax, [ebx]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D2A818
cmp	[edi+1Ch], ebx
jz	short loc_67D2A8B0
mov	eax, [ebx+20h]
test	esi, esi
jz	short loc_67D2A8BC
mov	[esi+20h], eax
mov	esi, [ebx+20h]
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_free
mov	ebx, esi
mov	esi, ebx
test	ebx, ebx
jnz	short loc_67D2A821
nop
			
mov	eax, [esp+3Ch+var_20]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A8CF
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+3Ch+var_34], offset aNodeNull_1 
mov	[esp+3Ch+var_38], offset aXmlnode_remo_0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2A85C
align 10h
mov	[esp+3Ch+var_34], offset aAttrNull_1 
mov	[esp+3Ch+var_38], offset aXmlnode_remo_0 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
jmp	short loc_67D2A85C
align 10h
mov	[edi+1Ch], esi
mov	eax, [ebx+20h]
test	esi, esi
jnz	short loc_67D2A845
xchg	ax, ax
mov	[edi+18h], eax
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_free
mov	ebx, [edi+18h]
jmp	loc_67D2A81B
call	__stack_chk_fail
public xmlnode_set_attrib
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_remove_attrib
mov	[esp+3Ch+var_2C], edi
mov	[esp+3Ch+var_30], 0
mov	[esp+3Ch+var_34], 0
mov	[esp+3Ch+var_38], esi
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_set_attrib_full
mov	eax, [esp+3Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2A930
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
call	__stack_chk_fail
align 4
public xmlnode_get_child_with_namespace
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebp, [esp+4Ch+arg_0]
mov	eax, [esp+4Ch+arg_4]
mov	ebx, [esp+4Ch+arg_8]
mov	edx, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], edx
xor	edx, edx
test	ebp, ebp
jz	loc_67D2AA2A
test	eax, eax
jz	loc_67D2AA4A
mov	[esp+4Ch+var_44], 2
mov	[esp+4Ch+var_48], offset asc_67D47E52 
mov	[esp+4Ch+var_4C], eax
call	g_strsplit
mov	[esp+4Ch+var_34], eax
mov	esi, [eax]
mov	edx, [eax+4]
mov	[esp+4Ch+var_30], edx
mov	ebp, [ebp+18h]
test	ebp, ebp
jnz	short loc_67D2A9B0
jmp	short loc_67D2A9E4
align 4
mov	[esp+4Ch+var_4C], ebp
call	xmlnode_get_namespace
mov	edi, eax
mov	eax, [ebp+8]
test	eax, eax
jz	short loc_67D2A9BD
			
mov	ebp, [ebp+20h]
test	ebp, ebp
jz	short loc_67D2A9E4
test	ebx, ebx
jnz	short loc_67D2A998
xor	edi, edi
mov	eax, [ebp+8]
test	eax, eax
jnz	short loc_67D2A9A9
mov	eax, [ebp+0]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+var_4C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67D2A9A9
mov	[esp+4Ch+var_48], edi
mov	[esp+4Ch+var_4C], ebx
call	purple_strequal
test	eax, eax
jz	short loc_67D2A9A9
mov	eax, ebp
jmp	short loc_67D2A9E6
			
xor	eax, eax
mov	ebp, [esp+4Ch+var_30]
test	ebp, ebp
jz	short loc_67D2AA02
test	eax, eax
jz	short loc_67D2AA02
mov	edx, [esp+4Ch+var_30]
mov	[esp+4Ch+var_48], edx
mov	[esp+4Ch+var_4C], eax
call	xmlnode_get_child
			
mov	edx, [esp+4Ch+var_34]
mov	[esp+4Ch+var_4C], edx
mov	[esp+4Ch+var_38], eax
call	g_strfreev
mov	eax, [esp+4Ch+var_38]
			
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2AA6A
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	[esp+4Ch+var_44], offset aParentNull 
mov	[esp+4Ch+var_48], offset aXmlnode_get_ch 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2AA16
mov	[esp+4Ch+var_44], offset aNameNull_10 
mov	[esp+4Ch+var_48], offset aXmlnode_get_ch 
mov	[esp+4Ch+var_4C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2AA16
call	__stack_chk_fail
align 10h
public xmlnode_get_child
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_24], 0
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+var_28], eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax
call	xmlnode_get_child_with_namespace
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2AAAA
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public xmlnode_get_data
			
push	ebx
sub	esp, 28h
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2AB40
mov	ebx, [eax+18h]
xor	eax, eax
test	ebx, ebx
jnz	short loc_67D2AADF
jmp	loc_67D2AB5C
align 4
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67D2AB06
			
cmp	dword ptr [ebx+8], 2
jnz	short loc_67D2AAD8
test	eax, eax
jz	short loc_67D2AB2C
mov	edx, [ebx+10h]
mov	[esp+2Ch+var_24], edx
mov	edx, [ebx+0Ch]
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_string_append_len
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_67D2AADF
test	eax, eax
jz	short loc_67D2AB5C
mov	[esp+2Ch+var_28], 0
mov	[esp+2Ch+var_2C], eax
call	g_string_free
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2AB60
add	esp, 28h
pop	ebx
retn
align 4
mov	eax, [ebx+10h]
mov	[esp+2Ch+var_28], eax
mov	eax, [ebx+0Ch]
mov	[esp+2Ch+var_2C], eax
call	g_string_new_len
jmp	short loc_67D2AAD8
mov	[esp+2Ch+var_24], offset aNodeNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_get_da 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
			
xor	eax, eax
jmp	short loc_67D2AB1A
call	__stack_chk_fail
align 4
public xmlnode_get_data_unescaped
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+var_3C], eax
call	xmlnode_get_data
mov	ebx, eax
test	eax, eax
jz	short loc_67D2ABB4
mov	[esp+3Ch+var_3C], eax 
call	purple_unescape_html
mov	[esp+3Ch+var_3C], ebx
mov	[esp+3Ch+var_20], eax
call	g_free
mov	eax, [esp+3Ch+var_20]
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2ABB8
add	esp, 38h
pop	ebx
retn
align 4
xor	eax, eax
jmp	short loc_67D2AB91
call	__stack_chk_fail
align 10h
public xmlnode_to_str
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D2ABF5
mov	[esp+1Ch+arg_0], 0
xor	ecx, ecx
add	esp, 1Ch
jmp	sub_67D29D14
call	__stack_chk_fail
align 4
public xmlnode_to_formatted_str
			
push	esi
push	ebx
sub	esp, 34h
mov	eax, [esp+3Ch+arg_0]
mov	ebx, [esp+3Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2AC68
mov	[esp+3Ch+var_3C], 0
mov	ecx, 1
mov	edx, ebx
call	sub_67D29D14
mov	esi, eax
mov	[esp+3Ch+var_38], eax
mov	[esp+3Ch+var_3C], offset a?xmlVersion1_1 
call	g_strdup_printf
mov	[esp+3Ch+var_3C], esi
mov	[esp+3Ch+var_20], eax
call	g_free
test	ebx, ebx
mov	eax, [esp+3Ch+var_20]
jz	short loc_67D2AC55
add	dword ptr [ebx], 2Bh
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2AC88
add	esp, 34h
pop	ebx
pop	esi
retn
align 4
mov	[esp+3Ch+var_34], offset aNodeNull_1 
mov	[esp+3Ch+var_38], offset aXmlnode_to_for 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2AC55
call	__stack_chk_fail
align 10h
public xmlnode_from_str
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	esi, esi
jz	loc_67D2AD6C
test	eax, eax
js	loc_67D2AD54
mov	edi, eax
mov	[esp+2Ch+var_2C], 8
call	g_malloc0
mov	ebx, eax
mov	[esp+2Ch+var_20], edi
mov	[esp+2Ch+var_24], esi
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset dword_67D304C0
call	xmlSAXUserParseMemory
test	eax, eax
js	short loc_67D2AD20
mov	esi, [ebx]
mov	eax, [ebx+4]
test	eax, eax
jnz	short loc_67D2AD10
			
mov	[esp+2Ch+var_2C], ebx
call	g_free
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2AD93
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
test	esi, esi
jz	short loc_67D2AD1C
mov	[esp+2Ch+var_2C], esi
call	xmlnode_free
xor	esi, esi
jmp	short loc_67D2ACEF
mov	edx, [ebx]
test	edx, edx
jz	short loc_67D2AD47
mov	eax, [edx+14h]
test	eax, eax
jz	short loc_67D2AD8F
mov	[ebx], eax
jmp	short loc_67D2AD38
align 4
mov	[ebx], edx
mov	eax, edx
mov	edx, [eax+14h]
test	edx, edx
jnz	short loc_67D2AD34
mov	[esp+2Ch+var_2C], eax
call	xmlnode_free
mov	dword ptr [ebx], 0
xor	esi, esi
jmp	short loc_67D2ACEF
align 4
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, esi
repne scasb
not	ecx
lea	edi, [ecx-1]
jmp	loc_67D2ACBC
align 4
mov	[esp+2Ch+var_24], offset aStrNull_1 
mov	[esp+2Ch+var_28], offset aXmlnode_from_s 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	esi, esi
jmp	loc_67D2ACF7
mov	eax, edx
jmp	short loc_67D2AD3F
call	__stack_chk_fail
public xmlnode_from_file
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	edx, [esp+5Ch+arg_8]
mov	[esp+5Ch+var_30], edx
mov	ebp, [esp+5Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_2C], 0
mov	[esp+5Ch+var_28], 0
test	esi, esi
jz	loc_67D2AF5C
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+var_58], offset aReadingFileSFr 
mov	[esp+5Ch+var_5C], ebp
call	purple_debug_info
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], esi
call	g_build_filename
mov	ebx, eax
mov	[esp+5Ch+var_58], 10h
mov	[esp+5Ch+var_5C], eax
call	g_file_test_utf8
test	eax, eax
jz	loc_67D2AF80
lea	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_50], eax
lea	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax
lea	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], ebx
call	g_file_get_contents_utf8
test	eax, eax
jz	loc_67D2AF0C
mov	eax, [esp+5Ch+var_28]
test	eax, eax
jz	short loc_67D2AE58
mov	edx, [esp+5Ch+var_24]
test	edx, edx
jnz	loc_67D2AF3C
			
mov	[esp+5Ch+var_58], offset aErrorReadingS	
mov	[esp+5Ch+var_5C], offset aPidgin_17 
call	libintl_dgettext
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	esi, eax
mov	[esp+5Ch+var_58], offset aAnErrorWasEnco 
mov	[esp+5Ch+var_5C], offset aPidgin_17 
call	libintl_dgettext
mov	[esp+5Ch+var_54], ebx
mov	edx, [esp+5Ch+var_30]
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	g_strdup_printf
mov	edi, eax
mov	[esp+5Ch+var_44], 0
mov	[esp+5Ch+var_48], 0
mov	[esp+5Ch+var_4C], eax
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], 0
mov	[esp+5Ch+var_5C], 0
call	purple_notify_message
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	[esp+5Ch+var_5C], edi
call	g_free
xor	ebp, ebp
mov	[esp+5Ch+var_5C], ebx
call	g_free
			
mov	eax, ebp
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2B020
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
mov	eax, [esp+5Ch+var_2C]
mov	eax, [eax+8]
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aErrorReadingFi 
mov	[esp+5Ch+var_5C], ebp
call	purple_debug_error
mov	eax, [esp+5Ch+var_2C]
mov	[esp+5Ch+var_5C], eax
call	g_error_free
jmp	loc_67D2AE44
mov	[esp+5Ch+var_58], edx
mov	[esp+5Ch+var_5C], eax
call	xmlnode_from_str
mov	ebp, eax
test	eax, eax
jz	short loc_67D2AFA3
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	short loc_67D2AEEA
mov	[esp+5Ch+var_54], offset aDirNull_1 
mov	[esp+5Ch+var_58], offset aXmlnode_from_f 
mov	[esp+5Ch+var_5C], 0
call	g_return_if_fail_warning
xor	ebp, ebp
jmp	loc_67D2AEF2
align 10h
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aFileSDoesNotEx 
mov	[esp+5Ch+var_5C], ebp
call	purple_debug_info
mov	[esp+5Ch+var_5C], ebx
call	g_free
xor	ebp, ebp
jmp	loc_67D2AEF2
mov	[esp+5Ch+var_58], edi
mov	[esp+5Ch+var_5C], offset aS_20 
call	g_strdup_printf
mov	ebp, eax
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+var_58], eax
mov	[esp+5Ch+var_5C], esi
call	g_build_filename
mov	esi, eax
mov	[esp+5Ch+var_50], ebp
mov	[esp+5Ch+var_54], ebx
mov	[esp+5Ch+var_58], offset aErrorParsingFi 
mov	[esp+5Ch+var_5C], offset aUtil_0 
call	purple_debug_error
mov	eax, [esp+5Ch+var_24]
mov	[esp+5Ch+var_54], eax 
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_58], eax 
mov	[esp+5Ch+var_5C], esi 
call	purple_util_write_data_to_file_absolute
mov	[esp+5Ch+var_5C], esi
call	g_free
mov	[esp+5Ch+var_5C], ebp
call	g_free
mov	eax, [esp+5Ch+var_28]
mov	[esp+5Ch+var_5C], eax
call	g_free
jmp	loc_67D2AE58
call	__stack_chk_fail
align 4
public xmlnode_copy
			
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	loc_67D2B13C
mov	edx, [ebx+8]
mov	eax, [ebx]
call	sub_67D29458
mov	edi, eax
mov	eax, [ebx+4]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[edi+4], eax
mov	eax, [ebx+0Ch]
test	eax, eax
jz	short loc_67D2B086
mov	edx, [ebx+10h]
test	edx, edx
jz	loc_67D2B12C
mov	[esp+2Ch+var_28], edx
mov	[esp+2Ch+var_2C], eax
call	g_memdup
mov	[edi+0Ch], eax
mov	eax, [ebx+10h]
mov	[edi+10h], eax
			
mov	eax, [ebx+24h]
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[edi+24h], eax
mov	eax, [ebx+28h]
test	eax, eax
jz	short loc_67D2B0D9
mov	[esp+2Ch+var_20], offset g_free
mov	[esp+2Ch+var_24], offset g_free
mov	[esp+2Ch+var_28], offset g_str_equal
mov	[esp+2Ch+var_2C], offset g_str_hash
call	g_hash_table_new_full
mov	[edi+28h], eax
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset loc_67D294A4
mov	eax, [ebx+28h]
mov	[esp+2Ch+var_2C], eax
call	g_hash_table_foreach
mov	ebx, [ebx+18h]
xor	esi, esi
test	ebx, ebx
jnz	short loc_67D2B0F8
jmp	short loc_67D2B114
call	xmlnode_copy
mov	[esi+20h], eax
mov	esi, eax
mov	[esi+14h], edi
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67D2B114
			
mov	[esp+2Ch+var_2C], ebx
test	esi, esi
jnz	short loc_67D2B0E4
call	xmlnode_copy
mov	esi, eax
mov	[edi+18h], eax
mov	[esi+14h], edi
mov	ebx, [ebx+20h]
test	ebx, ebx
jnz	short loc_67D2B0F8
nop
			
mov	[edi+1Ch], esi
mov	eax, edi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2B15C
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	[edi+0Ch], eax
jmp	loc_67D2B086
mov	[esp+2Ch+var_24], offset aSrcNull_0 
mov	[esp+2Ch+var_28], offset aXmlnode_copy 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	edi, edi
jmp	short loc_67D2B117
call	__stack_chk_fail
align 4
public xmlnode_get_next_twin
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 2Ch
mov	ebp, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_20], eax
xor	eax, eax
mov	[esp+3Ch+var_3C], ebp
call	xmlnode_get_namespace
test	ebp, ebp
jz	loc_67D2B228
mov	edx, [ebp+8]
test	edx, edx
jz	short loc_67D2B1CC
mov	[esp+3Ch+var_34], offset aNodeTypeXmlnod 
mov	[esp+3Ch+var_38], offset aXmlnode_get_ne 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2B24B
add	esp, 2Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	esi, eax
mov	ebx, [ebp+20h]
test	ebx, ebx
jnz	short loc_67D2B1F4
lea	esi, [esi+0]
xor	ebx, ebx
jmp	short loc_67D2B1AF
mov	[esp+3Ch+var_3C], ebx
call	xmlnode_get_namespace
mov	edi, eax
mov	ecx, [ebx+8]
test	ecx, ecx
jz	short loc_67D2B201
			
mov	ebx, [ebx+20h]
test	ebx, ebx
jz	short loc_67D2B1D8
test	esi, esi
jnz	short loc_67D2B1DC
xor	edi, edi
mov	ecx, [ebx+8]
test	ecx, ecx
jnz	short loc_67D2B1ED
mov	eax, [ebx]
mov	[esp+3Ch+var_38], eax
mov	eax, [ebp+0]
mov	[esp+3Ch+var_3C], eax
call	purple_strequal
test	eax, eax
jz	short loc_67D2B1ED
mov	[esp+3Ch+var_38], edi
mov	[esp+3Ch+var_3C], esi
call	purple_strequal
test	eax, eax
jz	short loc_67D2B1ED
jmp	short loc_67D2B1AF
mov	[esp+3Ch+var_34], offset aNodeNull_1 
mov	[esp+3Ch+var_38], offset aXmlnode_get_ne 
mov	[esp+3Ch+var_3C], 0
call	g_return_if_fail_warning
xor	ebx, ebx
jmp	loc_67D2B1AF
call	__stack_chk_fail
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2B26E
add	esp, 1Ch
retn
call	__stack_chk_fail
align 4
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	eax, [eax+48h]
test	eax, eax
jnz	short loc_67D2B2C8
mov	[esp+2Ch+var_24], offset aG_io_win32_set 
mov	[esp+2Ch+var_28], 10h
mov	[esp+2Ch+var_2C], 0
call	g_log
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2B37A
add	esp, 28h
pop	ebx
retn
mov	[esp+2Ch+var_2C], offset aG_io_win32_s_0 
call	g_print
test	bl, 1
jnz	loc_67D2B364
mov	eax, offset byte_67D48240
test	bl, 2
jnz	short loc_67D2B330
test	bl, 4
jnz	short loc_67D2B34A
			
test	bl, 8
jnz	short loc_67D2B318
and	ebx, 10h
jz	short loc_67D2B306
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSseekable 
call	g_print
mov	[esp+2Ch+var_2C], offset asc_67D4828E 
call	g_print
jmp	loc_67D2B292
align 4
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSwriteable 
call	g_print
mov	eax, offset asc_67D48241 
jmp	short loc_67D2B2F1
align 10h
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSnonblock 
call	g_print
mov	eax, offset asc_67D48241 
test	bl, 4
jz	short loc_67D2B2EC
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSreadable 
call	g_print
mov	eax, offset asc_67D48241 
jmp	short loc_67D2B2EC
align 4
mov	[esp+2Ch+var_2C], offset aAppend 
call	g_print
mov	eax, offset asc_67D48241 
jmp	loc_67D2B2E2
call	__stack_chk_fail
align 10h
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [ebx+48h]
test	eax, eax
jnz	loc_67D2B440
mov	eax, [ebx+94h]
lea	edx, [eax+1]
cmp	edx, 1
jbe	short loc_67D2B3B5
mov	[esp+2Ch+s], eax 
call	closesocket
push	eax
mov	eax, [ebx+98h]
lea	edx, [eax+1]
cmp	edx, 1
jbe	short loc_67D2B3CC
mov	[esp+2Ch+s], eax 
call	closesocket
push	eax
mov	eax, [ebx+74h]
test	eax, eax
jz	short loc_67D2B3DC
mov	[esp+2Ch+s], eax 
call	CloseHandle
push	eax
mov	eax, [ebx+88h]
test	eax, eax
jz	short loc_67D2B3EF
mov	[esp+2Ch+s], eax 
call	CloseHandle
push	eax
mov	eax, [ebx+90h]
test	eax, eax
jz	short loc_67D2B402
mov	[esp+2Ch+s], eax 
call	CloseHandle
push	ecx
lea	eax, [ebx+4Ch]
mov	[esp+2Ch+s], eax 
call	DeleteCriticalSection
push	edx
mov	eax, [ebx+7Ch]
mov	[esp+2Ch+s], eax
call	g_free
mov	eax, [ebx+8Ch]
mov	[esp+2Ch+s], eax
call	g_slist_free
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2B45F
mov	[esp+2Ch+arg_0], ebx
add	esp, 28h
pop	ebx
jmp	g_free
mov	eax, [ebx+40h]
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+70h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+s], offset aThreadXFreeing 
call	g_print
jmp	loc_67D2B39E
call	__stack_chk_fail
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
lea	esi, [ebx+4Ch]
mov	[esp+2Ch+lpCriticalSection], esi 
call	EnterCriticalSection
push	eax
mov	eax, [ebx+68h]
test	eax, eax
jz	short loc_67D2B4AF
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B50C
mov	dword ptr [ebx+68h], 0
mov	dword ptr [ebx+6Ch], 1
mov	eax, [ebx+90h]
mov	[esp+2Ch+lpCriticalSection], eax 
call	SetEvent
push	eax
mov	eax, [ebx+40h]
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2B4CE
mov	ecx, [ebx+48h]
test	ecx, ecx
jnz	short loc_67D2B4F0
mov	[esp+2Ch+lpCriticalSection], eax 
call	closesocket
push	edx
mov	dword ptr [ebx+40h], 0FFFFFFFFh
mov	[esp+2Ch+lpCriticalSection], esi 
call	LeaveCriticalSection
push	eax
mov	eax, 1
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2B524
add	esp, 24h
pop	ebx
pop	esi
retn
align 10h
mov	[esp+2Ch+var_24], eax
mov	eax, [ebx+70h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+lpCriticalSection], offset aThreadXClosing 
call	g_print
mov	eax, [ebx+40h]
jmp	short loc_67D2B4BE
mov	eax, [ebx+70h]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+lpCriticalSection], offset aThreadXRunning 
call	g_print
jmp	loc_67D2B492
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	ebx, [esi+3Ch]
mov	word ptr [esp+2Ch+var_12], 66h
lea	edi, [ebx+4Ch]
mov	[esp+2Ch+lpCriticalSection], edi 
call	EnterCriticalSection
push	edx
mov	ecx, [ebx+48h]
test	ecx, ecx
jnz	short loc_67D2B5B4
mov	[esp+2Ch+buf], esi
mov	eax, [ebx+8Ch]
mov	[esp+2Ch+lpCriticalSection], eax
call	g_slist_remove
mov	[ebx+8Ch], eax
mov	eax, [ebx+90h]
mov	[esp+2Ch+lpCriticalSection], eax 
call	SetEvent
push	eax
cmp	dword ptr [ebx+44h], 2
jz	short loc_67D2B5CC
mov	[esp+2Ch+lpCriticalSection], edi 
call	LeaveCriticalSection
push	eax
mov	eax, [esi+3Ch]
mov	[esp+2Ch+lpCriticalSection], eax
call	g_io_channel_unref
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2B5FE
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	eax, [ebx+70h]
mov	[esp+2Ch+buf], eax
mov	[esp+2Ch+lpCriticalSection], offset aG_io_win32_fin 
call	g_print
jmp	short loc_67D2B55E
align 4
mov	dword ptr [ebx+6Ch], 1
mov	[esp+2Ch+flags], 0 
mov	[esp+2Ch+len], 2 
lea	eax, [esp+2Ch+var_12]
mov	[esp+2Ch+buf], eax 
mov	eax, [ebx+94h]
mov	[esp+2Ch+lpCriticalSection], eax 
call	send
sub	esp, 10h
jmp	short loc_67D2B58B
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	eax, [esi+3Ch]
mov	[esp+4Ch+lpCriticalSection], eax
call	g_io_channel_get_buffer_condition
mov	edi, eax
mov	ebx, [esi+3Ch]
mov	dword ptr [ebp+0], 0FFFFFFFFh
mov	ecx, [ebx+48h]
test	ecx, ecx
jnz	short loc_67D2B674
mov	eax, [ebx+44h]
cmp	eax, 1
jz	short loc_67D2B6AB
cmp	eax, 2
jz	loc_67D2B6DC
mov	edx, [esi+40h]
and	edi, edx
xor	eax, eax
cmp	edx, edi
setz	al
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2B761
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
movzx	eax, word ptr [ebx+78h]
mov	[esp+4Ch+var_38], eax
movzx	eax, word ptr [esi+3Ah]
mov	[esp+4Ch+var_3C], eax
movzx	eax, word ptr [esi+38h]
mov	[esp+4Ch+var_40], eax
mov	[esp+4Ch+var_44], edi
mov	eax, [ebx+70h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+lpCriticalSection], offset aG_io_win32_pre 
call	g_print
mov	eax, [ebx+44h]
cmp	eax, 1
jnz	short loc_67D2B644
lea	ebp, [ebx+4Ch]
mov	[esp+4Ch+lpCriticalSection], ebp 
call	EnterCriticalSection
push	eax
mov	edx, [ebx+68h]
test	edx, edx
jz	short loc_67D2B70B
mov	edx, [ebx+84h]
cmp	[ebx+80h], edx
jnz	short loc_67D2B70B
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B749
mov	word ptr [ebx+78h], 0
jmp	short loc_67D2B70B
align 4
lea	ebp, [ebx+4Ch]
mov	[esp+4Ch+lpCriticalSection], ebp 
call	EnterCriticalSection
push	eax
mov	word ptr [ebx+78h], 0
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B734
mov	eax, [ebx+90h]
mov	[esp+4Ch+lpCriticalSection], eax 
call	SetEvent
push	eax
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B71C
			
mov	[esp+4Ch+lpCriticalSection], ebp 
call	LeaveCriticalSection
push	ebx
jmp	loc_67D2B64D
align 4
mov	eax, [ebx+70h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+lpCriticalSection], offset aG_io_win32_p_0 
call	g_print
jmp	short loc_67D2B70B
align 4
mov	eax, [ebx+70h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+lpCriticalSection], offset aG_io_win32_p_1 
call	g_print
jmp	short loc_67D2B6F5
mov	eax, [ebx+70h]
mov	[esp+4Ch+var_48], eax
mov	[esp+4Ch+lpCriticalSection], offset aG_io_win32_p_2 
call	g_print
jmp	loc_67D2B6D3
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	ebx, [esi+3Ch]
mov	[esp+5Ch+lpMsg], ebx
call	g_io_channel_get_buffer_condition
mov	edi, eax
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B7CC
mov	ecx, [ebx+44h]
test	ecx, ecx
jz	short loc_67D2B802
mov	edx, [ebx+78h]
and	edx, [esi+38h]
mov	[esi+3Ah], dx
cmp	ecx, 2
jz	loc_67D2B834
movzx	eax, dx
or	eax, edi
and	eax, [esi+40h]
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2B899
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
movzx	eax, word ptr [ebx+78h]
mov	[esp+5Ch+var_48], eax
movzx	eax, word ptr [esi+3Ah]
mov	[esp+5Ch+wRemoveMsg], eax
movzx	eax, word ptr [esi+38h]
mov	[esp+5Ch+wMsgFilterMax], eax
mov	[esp+5Ch+wMsgFilterMin], edi
mov	eax, [ebx+70h]
mov	[esp+5Ch+hWnd],	eax
mov	[esp+5Ch+lpMsg], offset	aG_io_win32_che	
call	g_print
mov	ecx, [ebx+44h]
test	ecx, ecx
jnz	short loc_67D2B799
mov	[esp+5Ch+wRemoveMsg], 0	
mov	[esp+5Ch+wMsgFilterMax], 0 
mov	[esp+5Ch+wMsgFilterMin], 0 
mov	eax, [ebx+64h]
mov	[esp+5Ch+hWnd],	eax 
lea	eax, [esp+5Ch+Msg]
mov	[esp+5Ch+lpMsg], eax 
call	PeekMessageA
sub	esp, 14h
jmp	short loc_67D2B7B4
align 4
lea	ebp, [ebx+4Ch]
mov	[esp+5Ch+lpMsg], ebp 
call	EnterCriticalSection
push	eax
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B86C
mov	eax, [ebx+74h]
mov	[esp+5Ch+lpMsg], eax 
call	ResetEvent
push	eax
mov	eax, [ebx+48h]
test	eax, eax
jnz	short loc_67D2B884
mov	[esp+5Ch+lpMsg], ebp 
call	LeaveCriticalSection
push	ebx
mov	dx, [esi+3Ah]
jmp	loc_67D2B7AC
mov	eax, [ebx+70h]
mov	[esp+5Ch+hWnd],	eax
mov	[esp+5Ch+lpMsg], offset	aG_io_win32_c_0	
call	g_print
jmp	short loc_67D2B847
align 4
mov	eax, [ebx+70h]
mov	[esp+5Ch+hWnd],	eax
mov	[esp+5Ch+lpMsg], offset	aG_io_win32_c_1	
call	g_print
jmp	short loc_67D2B85A
call	__stack_chk_fail
align 10h
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 36Ch
mov	edx, [esp+37Ch+arg_0]
mov	[esp+37Ch+var_348], edx
mov	ecx, ds:__stack_chk_guard
mov	[esp+37Ch+var_20], ecx
xor	ecx, ecx
mov	[esp+37Ch+hEvent], edx
call	g_io_channel_ref
mov	edx, [esp+37Ch+var_348]
mov	ecx, [edx+48h]
test	ecx, ecx
jnz	loc_67D2BF40
mov	ecx, [esp+37Ch+var_348]
mov	dword ptr [ecx+80h], 0
mov	dword ptr [ecx+84h], 0
mov	dword ptr [ecx+68h], 1
mov	eax, [ecx+88h]
mov	[esp+37Ch+hEvent], eax 
call	SetEvent
push	eax
mov	edx, [esp+37Ch+var_348]
add	edx, 4Ch
mov	[esp+37Ch+lpCriticalSection], edx
			
mov	ecx, [esp+37Ch+var_348]
mov	esi, [ecx+68h]
test	esi, esi
jz	loc_67D2BB85
mov	[esp+37Ch+var_230.fd_count], 0
mov	[esp+37Ch+var_12C.fd_count], 0
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+98h]
mov	[esp+37Ch+var_334.fd_array], eax
mov	[esp+37Ch+var_334.fd_count], 1
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	EnterCriticalSection
push	eax
mov	ecx, [esp+37Ch+var_348]
mov	edx, [ecx+8Ch]
test	edx, edx
jz	loc_67D2BED8
mov	eax, [esp+37Ch+var_230.fd_count]
mov	[esp+37Ch+var_350], eax
mov	ecx, [esp+37Ch+var_12C.fd_count]
mov	[esp+37Ch+var_344], ecx
mov	eax, [esp+37Ch+var_334.fd_count]
mov	[esp+37Ch+var_34C], eax
lea	ebx, [esp+37Ch+var_334]
lea	edi, [esp+37Ch+var_230]
lea	esi, [esp+37Ch+var_12C]
xchg	ax, ax
mov	eax, [edx]
mov	ecx, [eax+40h]
test	cl, 11h
jz	short loc_67D2B9E4
mov	eax, [esp+37Ch+var_348]
mov	ebp, [eax+40h]
mov	eax, [esp+37Ch+var_34C]
test	eax, eax
jz	loc_67D2BDDA
cmp	[esp+37Ch+var_334.fd_array], ebp
jz	short loc_67D2B9E4
xor	eax, eax
jmp	short loc_67D2B9CE
align 4
cmp	[ebx+eax*4+4], ebp
jz	short loc_67D2B9E4
inc	eax
cmp	eax, [esp+37Ch+var_34C]
jnz	short loc_67D2B9C8
cmp	eax, 3Fh
ja	short loc_67D2B9E4
mov	[esp+eax*4+37Ch+var_334.fd_array], ebp
inc	[esp+37Ch+var_34C]
xchg	ax, ax
			
test	cl, 4
jz	short loc_67D2BA30
mov	eax, [esp+37Ch+var_348]
mov	ebp, [eax+40h]
mov	eax, [esp+37Ch+var_350]
test	eax, eax
jz	loc_67D2BDE1
cmp	[esp+37Ch+var_230.fd_array], ebp
jz	short loc_67D2BA30
xor	eax, eax
jmp	short loc_67D2BA16
align 4
cmp	[edi+eax*4+4], ebp
jz	loc_67D2BC14
inc	eax
cmp	eax, [esp+37Ch+var_350]
jnz	short loc_67D2BA0C
cmp	[esp+37Ch+var_350], 3Fh
ja	short loc_67D2BA30
mov	[esp+eax*4+37Ch+var_230.fd_array], ebp
inc	[esp+37Ch+var_350]
nop
			
and	ecx, 8
jz	short loc_67D2BA7C
mov	eax, [esp+37Ch+var_348]
mov	ecx, [eax+40h]
mov	ebp, [esp+37Ch+var_344]
xor	eax, eax
test	ebp, ebp
jz	short loc_67D2BA6E
cmp	[esp+37Ch+var_12C.fd_array], ecx
jz	short loc_67D2BA7C
xor	eax, eax
mov	ebp, [esp+37Ch+var_344]
jmp	short loc_67D2BA62
align 4
cmp	[esi+eax*4+4], ecx
jz	loc_67D2BC04
inc	eax
cmp	eax, ebp
jnz	short loc_67D2BA58
cmp	[esp+37Ch+var_344], 3Fh
ja	short loc_67D2BA7C
mov	[esp+eax*4+37Ch+var_12C.fd_array], ecx
inc	[esp+37Ch+var_344]
lea	esi, [esi+0]
			
mov	edx, [edx+4]
test	edx, edx
jnz	loc_67D2B9A0
mov	edx, [esp+37Ch+var_350]
mov	[esp+37Ch+var_230.fd_count], edx
mov	ecx, [esp+37Ch+var_344]
mov	[esp+37Ch+var_12C.fd_count], ecx
mov	eax, [esp+37Ch+var_34C]
mov	[esp+37Ch+var_334.fd_count], eax
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	LeaveCriticalSection
push	eax
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+48h]
test	eax, eax
jnz	loc_67D2BD4A
mov	[esp+37Ch+timeout], 0 
mov	[esp+37Ch+exceptfds], esi 
mov	[esp+37Ch+writefds], edi 
mov	[esp+37Ch+readfds], ebx	
mov	[esp+37Ch+hEvent], 1 
call	select
sub	esp, 14h
mov	ebp, eax
mov	ecx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], ecx 
call	EnterCriticalSection
push	eax
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+6Ch]
test	eax, eax
jnz	loc_67D2BF2E
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	LeaveCriticalSection
push	eax
inc	ebp
jz	loc_67D2BF07
mov	[esp+37Ch+readfds], ebx	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+98h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	loc_67D2BC24
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+48h]
test	eax, eax
jnz	loc_67D2BE03
mov	[esp+37Ch+exceptfds], 0	
mov	[esp+37Ch+writefds], 8 
lea	ecx, [esp+37Ch+buf]
mov	[esp+37Ch+readfds], ecx	
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+98h]
mov	[esp+37Ch+hEvent], eax 
call	recv
sub	esp, 10h
mov	ecx, [esp+37Ch+var_348]
mov	esi, [ecx+68h]
test	esi, esi
jnz	loc_67D2B923
			
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	EnterCriticalSection
push	ecx
mov	ecx, [esp+37Ch+var_348]
mov	dword ptr [ecx+68h], 0
mov	ebx, [ecx+48h]
test	ebx, ebx
jz	short loc_67D2BBB7
mov	eax, [ecx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threadX 
call	g_print
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+74h]
mov	[esp+37Ch+hEvent], eax 
call	SetEvent
push	eax
mov	ecx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], ecx 
call	LeaveCriticalSection
push	edx
mov	edx, [esp+37Ch+var_348]
mov	[esp+37Ch+hEvent], edx
call	g_io_channel_unref
xor	eax, eax
mov	ecx, [esp+37Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D2BF82
add	esp, 36Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn	4
align 4
cmp	[esp+37Ch+var_344], eax
jnz	loc_67D2BA7C
jmp	loc_67D2BA67
align 4
cmp	[esp+37Ch+var_350], eax
jnz	loc_67D2BA30
jmp	loc_67D2BA1D
align 4
mov	ecx, [esp+37Ch+var_348]
mov	ebp, [ecx+48h]
test	ebp, ebp
jnz	loc_67D2BE4B
mov	[esp+37Ch+readfds], ebx	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BC56
mov	edx, [esp+37Ch+var_348]
or	word ptr [edx+78h], 1
mov	[esp+37Ch+readfds], edi	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BC79
mov	edx, [esp+37Ch+var_348]
or	word ptr [edx+78h], 4
mov	[esp+37Ch+readfds], esi	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BC9C
mov	edx, [esp+37Ch+var_348]
or	word ptr [edx+78h], 8
mov	ecx, [esp+37Ch+var_348]
mov	edx, [ecx+48h]
test	edx, edx
jnz	loc_67D2BE33
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	EnterCriticalSection
push	eax
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+90h]
mov	[esp+37Ch+hEvent], eax 
call	ResetEvent
push	eax
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+74h]
mov	[esp+37Ch+hEvent], eax 
call	SetEvent
push	eax
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+6Ch]
test	eax, eax
jnz	loc_67D2BF70
mov	ecx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], ecx 
call	LeaveCriticalSection
push	ebp
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+48h]
test	eax, eax
jnz	loc_67D2BE1B
mov	[esp+37Ch+readfds], 0FFFFFFFFh 
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+90h]
mov	[esp+37Ch+hEvent], eax 
call	WaitForSingleObject
sub	esp, 8
mov	edx, [esp+37Ch+var_348]
mov	edi, [edx+48h]
test	edi, edi
jz	loc_67D2B914
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_0 
call	g_print
jmp	loc_67D2B914
mov	[esp+37Ch+readfds], esi	
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	loc_67D2BDF9
mov	ebp, offset aErr 
mov	[esp+37Ch+readfds], edi	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BDEF
mov	[esp+37Ch+var_350], offset aOut	
mov	[esp+37Ch+readfds], ebx	
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BDE8
mov	eax, offset aIn	
mov	[esp+37Ch+timeout], ebp
mov	ecx, [esp+37Ch+var_350]
mov	[esp+37Ch+exceptfds], ecx
mov	[esp+37Ch+writefds], eax
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_1 
call	g_print
jmp	loc_67D2BAC1
xor	eax, eax
jmp	loc_67D2B9DA
xor	eax, eax
jmp	loc_67D2BA24
mov	eax, offset byte_67D48240
jmp	short loc_67D2BDAE
mov	[esp+37Ch+var_350], offset byte_67D48240
jmp	short loc_67D2BD8F
mov	ebp, offset byte_67D48240
jmp	loc_67D2BD6D
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_2 
call	g_print
jmp	loc_67D2BB46
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_3 
call	g_print
jmp	loc_67D2BD06
mov	eax, [ecx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_4 
call	g_print
jmp	loc_67D2BCAB
mov	[esp+37Ch+readfds], esi	
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	loc_67D2BEFD
mov	ebp, offset aErr 
mov	[esp+37Ch+readfds], edi	
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+40h]
mov	[esp+37Ch+hEvent], eax 
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
jz	short loc_67D2BEF6
mov	edx, offset aOut 
mov	[esp+37Ch+readfds], ebx	
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+40h]
mov	[esp+37Ch+hEvent], eax 
mov	[esp+37Ch+var_354], edx
call	__WSAFDIsSet
sub	esp, 8
test	eax, eax
mov	edx, [esp+37Ch+var_354]
jz	short loc_67D2BEEF
mov	eax, offset aIn	
mov	[esp+37Ch+timeout], ebp
mov	[esp+37Ch+exceptfds], edx
mov	[esp+37Ch+writefds], eax
mov	edx, [esp+37Ch+var_348]
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_5 
call	g_print
jmp	loc_67D2BC33
lea	ebx, [esp+37Ch+var_334]
lea	edi, [esp+37Ch+var_230]
lea	esi, [esp+37Ch+var_12C]
jmp	loc_67D2BAA5
mov	eax, offset byte_67D48240
jmp	short loc_67D2BEB0
mov	edx, offset byte_67D48240
jmp	short loc_67D2BE89
mov	ebp, offset byte_67D48240
jmp	loc_67D2BE6A
mov	ecx, [esp+37Ch+var_348]
mov	eax, [ecx+48h]
test	eax, eax
jz	loc_67D2BB85
mov	eax, [ecx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_6 
call	g_print
jmp	loc_67D2BB85
mov	ecx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], ecx 
call	LeaveCriticalSection
push	eax
jmp	loc_67D2BB85
mov	eax, [edx+90h]
mov	[esp+37Ch+timeout], eax
mov	eax, [edx+74h]
mov	[esp+37Ch+exceptfds], eax
mov	eax, [edx+40h]
mov	[esp+37Ch+writefds], eax
mov	eax, [edx+70h]
mov	[esp+37Ch+readfds], eax
mov	[esp+37Ch+hEvent], offset aSelect_threa_7 
call	g_print
jmp	loc_67D2B8DB
mov	edx, [esp+37Ch+lpCriticalSection]
mov	[esp+37Ch+hEvent], edx 
call	LeaveCriticalSection
push	eax
jmp	loc_67D2BB85
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+3C8h+readfds]
mov	eax, [esp+3C8h+writefds]
mov	ebp, [esp+3C8h+exceptfds]
mov	esi, [esp+3C8h+timeout]
mov	edi, [esp+3C8h+var_368]
mov	edx, ds:__stack_chk_guard
mov	[esp+3C8h+var_39C], edx
xor	edx, edx
mov	word ptr [esp+3C8h+var_39F], 7773h
mov	[esp+3C8h+var_39D], 0
mov	ecx, [ebx+48h]
test	ecx, ecx
jnz	short loc_67D2C00C
mov	[esp+3C8h+flags], 0 
mov	[esp+3C8h+len],	ebp 
mov	[esp+3C8h+var_3C4], eax	
mov	eax, [ebx+40h]
mov	[esp+3C8h+s], eax 
call	send
sub	esp, 10h
mov	edx, [ebx+48h]
test	edx, edx
jnz	short loc_67D2C030
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2C04D
mov	[esi], eax
mov	eax, 1
			
mov	edx, [esp+3C8h+var_39C]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2C0FE
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+3C8h+len],	ebp
mov	edx, [ebx+40h]
mov	[esp+3C8h+var_3C4], edx
mov	[esp+3C8h+s], offset aG_io_win32_soc 
mov	[esp+3C8h+var_3AC], eax
call	g_print
mov	eax, [esp+3C8h+var_3AC]
jmp	short loc_67D2BFC2
align 10h
mov	[esp+3C8h+var_3C4], eax
mov	[esp+3C8h+s], offset aG_io_win32_s_1 
mov	[esp+3C8h+var_3AC], eax
call	g_print
mov	eax, [esp+3C8h+var_3AC]
cmp	eax, 0FFFFFFFFh
jnz	short loc_67D2BFEC
mov	dword ptr [esi], 0
call	WSAGetLastError
cmp	eax, 2726h
jz	loc_67D2C0EC
cmp	eax, 2733h
jz	loc_67D2C0F4
mov	esi, 8
call	g_io_channel_error_quark
mov	[esp+3C8h+flags], offset aSocketWriteErr 
mov	[esp+3C8h+len],	esi
mov	[esp+3C8h+var_3C4], eax
mov	[esp+3C8h+s], edi
call	g_set_error
lea	esi, [ebx+4Ch]
mov	[esp+3C8h+s], esi 
call	EnterCriticalSection
push	edi
mov	eax, [ebx+90h]
mov	[esp+3C8h+s], eax 
call	SetEvent
push	ebp
mov	dword ptr [ebx+6Ch], 1
mov	[esp+3C8h+flags], 0 
mov	[esp+3C8h+len],	3 
lea	eax, [esp+3C8h+var_39F]
mov	[esp+3C8h+var_3C4], eax	
mov	eax, [ebx+94h]
mov	[esp+3C8h+s], eax 
call	send
sub	esp, 10h
mov	[esp+3C8h+s], esi 
call	LeaveCriticalSection
push	eax
xor	eax, eax
jmp	loc_67D2BFF3
align 4
mov	esi, 1
jmp	short loc_67D2C073
align 4
mov	eax, 3
jmp	loc_67D2BFF3
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, [esp+414h+var_3C4]
mov	eax, [esp+414h+len]
mov	ebp, [esp+414h+flags]
mov	esi, [esp+5Ch]
mov	edi, [esp+60h]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch], edx
xor	edx, edx
mov	word ptr [esp+29h], 7273h
mov	byte ptr [esp+2Bh], 0
mov	ecx, [ebx+48h]
test	ecx, ecx
jnz	loc_67D2C25C
mov	[esp+414h+var_408], 0 
mov	[esp+414h+var_40C], ebp	
mov	[esp+414h+var_410], eax	
mov	eax, [ebx+40h]
mov	[esp+0], eax	
call	recv
sub	esp, 10h
mov	edx, [ebx+48h]
test	edx, edx
jnz	loc_67D2C1F8
cmp	eax, 0FFFFFFFFh
jz	loc_67D2C219
mov	[esi], eax
test	eax, eax
jz	short loc_67D2C19C
mov	esi, 1
			
mov	eax, esi
mov	edx, [esp+2Ch]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2C292
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	esi, 2
lea	edi, [ebx+4Ch]
mov	[esp+0], edi	
call	EnterCriticalSection
push	ebp
mov	eax, [ebx+90h]
mov	[esp+0], eax	
call	SetEvent
push	eax
mov	dword ptr [ebx+6Ch], 1
mov	[esp+414h+var_408], 0 
mov	[esp+414h+var_40C], 3 
lea	eax, [esp+29h]
mov	[esp+414h+var_410], eax	
mov	eax, [ebx+94h]
mov	[esp+0], eax	
call	send
sub	esp, 10h
mov	[esp+0], edi	
call	LeaveCriticalSection
push	eax
jmp	short loc_67D2C17F
align 4
mov	[esp+414h+var_410], eax
mov	dword ptr [esp+0], offset aG_io_win32_s_2 
mov	[esp+1Ch], eax
call	g_print
mov	eax, [esp+1Ch]
cmp	eax, 0FFFFFFFFh
jnz	loc_67D2C174
mov	dword ptr [esi], 0
call	WSAGetLastError
cmp	eax, 2726h
jz	short loc_67D2C280
cmp	eax, 2733h
jz	short loc_67D2C288
mov	esi, 8
call	g_io_channel_error_quark
mov	[esp+414h+var_408], offset aSocketReadErro 
mov	[esp+414h+var_40C], esi
mov	[esp+414h+var_410], eax
mov	[esp+0], edi
call	g_set_error
xor	esi, esi
jmp	loc_67D2C1A1
align 4
mov	[esp+414h+var_40C], ebp
mov	edx, [ebx+40h]
mov	[esp+414h+var_410], edx
mov	dword ptr [esp+0], offset aG_io_win32_s_3 
mov	[esp+1Ch], eax
call	g_print
mov	eax, [esp+1Ch]
jmp	loc_67D2C142
mov	esi, 1
jmp	short loc_67D2C237
align 4
mov	esi, 3
jmp	loc_67D2C17F
call	__stack_chk_fail
align 4
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	ebx, [esp+440h+var_410]
mov	esi, [esp+440h+var_40C]
mov	edi, [esp+440h+var_408]
mov	eax, ds:__stack_chk_guard
mov	[esp+440h+var_424], eax
xor	eax, eax
mov	eax, [ebx+3Ch]
mov	[esp+440h+var_440], eax
call	g_io_channel_get_buffer_condition
test	esi, esi
jz	short loc_67D2C2F4
mov	edx, [esp+440h+var_424]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2C325
mov	[esp+440h+var_408], edi
movzx	edx, word ptr [ebx+3Ah]
or	edx, eax
and	edx, [ebx+40h]
mov	[esp+440h+var_40C], edx
mov	eax, [ebx+3Ch]
mov	[esp+440h+var_410], eax
mov	edx, esi
add	esp, 20h
pop	ebx
pop	esi
pop	edi
jmp	edx
align 4
mov	[esp+440h+var_438], offset aWin32Giowin32_ 
mov	[esp+440h+var_43C], 10h
mov	[esp+440h+var_440], 0
call	g_log
xor	eax, eax
mov	edx, [esp+440h+var_424]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2C325
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
			
call	__stack_chk_fail
align 4
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, [esp+49Ch+var_43C]
mov	edi, [esp+49Ch+var_438]
mov	eax, ds:__stack_chk_guard
mov	[esp+49Ch+var_460], eax
xor	eax, eax
mov	word ptr [esp+49Ch+var_462], 63h
mov	[esp+49Ch+dwMilliseconds], 44h
mov	[esp+49Ch+var_49C], offset off_67D30560
call	g_source_new
mov	esi, eax
mov	[eax+3Ch], ebx
mov	[esp+49Ch+var_49C], ebx
call	g_io_channel_ref
mov	[esi+40h], edi
mov	eax, [ebx+74h]
test	eax, eax
jz	loc_67D2C4C4
mov	[esi+34h], eax
mov	[esi+38h], di
mov	edx, [ebx+48h]
test	edx, edx
jnz	loc_67D2C4A4
lea	edi, [ebx+4Ch]
mov	[esp+49Ch+var_49C], edi	
call	EnterCriticalSection
push	eax
mov	[esp+49Ch+dwMilliseconds], esi
mov	eax, [ebx+8Ch]
mov	[esp+49Ch+var_49C], eax
call	g_slist_append
mov	[ebx+8Ch], eax
mov	eax, [ebx+70h]
test	eax, eax
jz	short loc_67D2C414
mov	[esp+49Ch+lpName], 0 
mov	[esp+49Ch+bInitialState], 2 
lea	eax, [esp+49Ch+var_462]
mov	[esp+49Ch+dwMilliseconds], eax 
mov	eax, [ebx+94h]
mov	[esp+49Ch+var_49C], eax	
call	send
sub	esp, 10h
lea	eax, [esi+34h]
mov	[esp+49Ch+dwMilliseconds], eax
mov	[esp+49Ch+var_49C], esi
call	g_source_add_poll
mov	[esp+49Ch+var_49C], edi	
call	LeaveCriticalSection
push	ebx
mov	eax, esi
mov	edx, [esp+49Ch+var_460]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2C5D3
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
lea	eax, [ebx+70h]
mov	[esp+49Ch+var_488], eax
mov	[esp+49Ch+var_48C], 0
mov	[esp+49Ch+lpName], ebx
mov	[esp+49Ch+bInitialState], offset sub_67D2B8A0
mov	[esp+49Ch+dwMilliseconds], 0
mov	[esp+49Ch+var_49C], 0
call	_beginthreadex
test	eax, eax
jz	loc_67D2C570
mov	[esp+49Ch+var_49C], eax	
call	CloseHandle
push	ebp
test	eax, eax
jnz	short loc_67D2C485
call	GetLastError
mov	[esp+49Ch+var_49C], eax
call	g_win32_error_message
mov	[esp+49Ch+lpName], eax
mov	[esp+49Ch+bInitialState], offset aWin32Giowin3_0 
mov	[esp+49Ch+dwMilliseconds], 10h
mov	[esp+49Ch+var_49C], 0
call	g_log
			
mov	[esp+49Ch+dwMilliseconds], 0FFFFFFFFh 
mov	eax, [ebx+88h]
mov	[esp+49Ch+var_49C], eax	
call	WaitForSingleObject
sub	esp, 8
jmp	loc_67D2C3E2
align 4
mov	[esp+49Ch+lpName], eax
mov	[esp+49Ch+bInitialState], edi
mov	eax, [ebx+40h]
mov	[esp+49Ch+dwMilliseconds], eax
mov	[esp+49Ch+var_49C], offset aG_io_win32_cre 
call	g_print
jmp	loc_67D2C38E
mov	[esp+49Ch+EventAttributes.nLength], 0Ch
mov	[esp+49Ch+EventAttributes.lpSecurityDescriptor], 0
mov	[esp+49Ch+EventAttributes.bInheritHandle], 0
mov	[esp+49Ch+lpName], 0 
mov	[esp+49Ch+bInitialState], 0 
mov	[esp+49Ch+dwMilliseconds], 1 
lea	ebp, [esp+49Ch+EventAttributes]
mov	[esp+49Ch+var_49C], ebp	
call	CreateEventA
sub	esp, 10h
mov	[ebx+74h], eax
test	eax, eax
jz	loc_67D2C5A4
mov	[esp+49Ch+lpName], 0 
mov	[esp+49Ch+bInitialState], 0 
mov	[esp+49Ch+dwMilliseconds], 0 
mov	[esp+49Ch+var_49C], ebp	
call	CreateEventA
sub	esp, 10h
mov	[ebx+88h], eax
test	eax, eax
jz	short loc_67D2C5A4
mov	[esp+49Ch+lpName], 0 
mov	[esp+49Ch+bInitialState], 0 
mov	[esp+49Ch+dwMilliseconds], 0 
mov	[esp+49Ch+var_49C], ebp	
call	CreateEventA
sub	esp, 10h
mov	[ebx+90h], eax
test	eax, eax
jz	short loc_67D2C5A4
mov	eax, [ebx+74h]
jmp	loc_67D2C37C
call	_errno
mov	eax, [eax]
mov	[esp+49Ch+var_49C], eax
call	g_strerror
mov	[esp+49Ch+lpName], eax
mov	[esp+49Ch+bInitialState], offset aWin32Giowin3_1 
mov	[esp+49Ch+dwMilliseconds], 10h
mov	[esp+49Ch+var_49C], 0
call	g_log
jmp	loc_67D2C485
			
call	GetLastError
mov	[esp+49Ch+var_49C], eax
call	g_win32_error_message
mov	[esp+49Ch+lpName], eax
mov	[esp+49Ch+bInitialState], offset aErrorCreatingE 
mov	[esp+49Ch+dwMilliseconds], 4
mov	[esp+49Ch+var_49C], 0
call	g_log
jmp	short loc_67D2C5D1
call	__stack_chk_fail
public wpurple_g_io_channel_win32_new_socket
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	esi, [esp+6Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	[esp+6Ch+VarName], 9Ch
call	g_malloc
mov	ebx, eax
mov	[esp+6Ch+VarName], eax
call	g_io_channel_init
mov	[esp+6Ch+VarName], offset VarName 
call	getenv
test	eax, eax
setnz	al
movzx	eax, al
mov	[ebx+48h], eax
mov	dword ptr [ebx+7Ch], 0
mov	dword ptr [ebx+68h], 0
mov	dword ptr [ebx+6Ch], 0
mov	dword ptr [ebx+70h], 0
mov	dword ptr [ebx+74h], 0
mov	word ptr [ebx+78h], 0
mov	dword ptr [ebx+88h], 0
mov	dword ptr [ebx+94h], 0FFFFFFFFh
mov	dword ptr [ebx+98h], 0FFFFFFFFh
mov	dword ptr [ebx+90h], 0
mov	dword ptr [ebx+8Ch], 0
lea	eax, [ebx+4Ch]
mov	[esp+6Ch+VarName], eax 
call	InitializeCriticalSection
push	ecx
mov	[esp+6Ch+protocol], 0 
mov	[esp+6Ch+type],	2 
mov	[esp+6Ch+VarName], 2 
call	socket
sub	esp, 0Ch
mov	[ebx+94h], eax
inc	eax
jz	loc_67D2C860
mov	[esp+6Ch+name.sa_family], 2
mov	word ptr [esp+6Ch+name.sa_data], 0
mov	[esp+6Ch+VarName], 7F000001h 
call	htonl
push	edx
mov	dword ptr [esp+6Ch+name.sa_data+2], eax
mov	[esp+6Ch+protocol], 10h	
lea	eax, [esp+6Ch+name]
mov	[esp+6Ch+type],	eax 
mov	eax, [ebx+94h]
mov	[esp+6Ch+VarName], eax 
call	bind
sub	esp, 0Ch
inc	eax
jz	loc_67D2C894
mov	[esp+6Ch+var_40.sa_family], 2
mov	word ptr [esp+6Ch+var_40.sa_data], 0
mov	[esp+6Ch+VarName], 7F000001h 
call	htonl
push	ebp
mov	dword ptr [esp+6Ch+var_40.sa_data+2], eax
mov	[esp+6Ch+protocol], 0 
mov	[esp+6Ch+type],	2 
mov	[esp+6Ch+VarName], 2 
call	socket
sub	esp, 0Ch
mov	[ebx+98h], eax
cmp	eax, 0FFFFFFFFh
jz	loc_67D2C8C8
mov	[esp+6Ch+protocol], 10h	
lea	ebp, [esp+6Ch+var_40]
mov	[esp+6Ch+type],	ebp 
mov	[esp+6Ch+VarName], eax 
call	bind
sub	esp, 0Ch
inc	eax
jz	loc_67D2C900
mov	[esp+6Ch+namelen], 10h
lea	eax, [esp+6Ch+namelen]
mov	[esp+6Ch+protocol], eax	
mov	[esp+6Ch+type],	ebp 
mov	eax, [ebx+98h]
mov	[esp+6Ch+VarName], eax 
call	getsockname
sub	esp, 0Ch
inc	eax
jz	loc_67D2C934
lea	ebp, [esp+6Ch+var_30]
mov	ecx, 10h
xor	eax, eax
mov	edi, ebp
rep stosb
mov	[esp+6Ch+VarName], 7F000001h 
call	htonl
push	edi
mov	dword ptr [esp+6Ch+var_30.sa_data+2], eax
mov	[esp+6Ch+var_30.sa_family], 2
mov	ax, word ptr [esp+6Ch+var_40.sa_data]
mov	word ptr [esp+6Ch+var_30.sa_data], ax
mov	[esp+6Ch+protocol], 10h	
mov	[esp+6Ch+type],	ebp 
mov	eax, [ebx+94h]
mov	[esp+6Ch+VarName], eax 
call	connect
sub	esp, 0Ch
inc	eax
jz	short loc_67D2C830
mov	ecx, [ebx+48h]
test	ecx, ecx
jz	short loc_67D2C7F8
mov	[esp+6Ch+type],	esi
mov	[esp+6Ch+VarName], offset aG_io_channel_w 
call	g_print
mov	dword ptr [ebx+4], offset off_67D30540
mov	dword ptr [ebx+44h], 2
mov	[ebx+40h], esi
mov	al, [ebx+34h]
or	eax, 18h
and	eax, 0FFFFFFDFh
mov	[ebx+34h], al
mov	eax, ebx
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2C966
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_2 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
jmp	short loc_67D2C7E1
align 10h
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_3 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
jmp	loc_67D2C6AE
align 4
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_4 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
jmp	loc_67D2C6F5
align 4
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_5 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
mov	eax, [ebx+98h]
jmp	loc_67D2C742
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_6 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
jmp	loc_67D2C764
align 4
call	WSAGetLastError
mov	[esp+6Ch+VarName], eax
call	g_win32_error_message
mov	[esp+6Ch+var_60], eax
mov	[esp+6Ch+protocol], offset aWin32Giowin3_7 
mov	[esp+6Ch+type],	10h
mov	[esp+6Ch+VarName], 0
call	g_log
jmp	loc_67D2C790
call	__stack_chk_fail
align 4
			
sub	esp, 3Ch
mov	edx, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], edx
xor	edx, edx
mov	[esp+3Ch+var_14], 4
lea	edx, [esp+3Ch+var_14]
mov	[esp+3Ch+optlen], edx 
lea	edx, [esp+3Ch+var_18]
mov	[esp+3Ch+optval], edx 
mov	[esp+3Ch+optname], 1008h 
mov	[esp+3Ch+level], 0FFFFh	
mov	[esp+3Ch+s], eax 
call	getsockopt
sub	esp, 14h
inc	eax
jz	short loc_67D2C9C8
mov	eax, 1
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2C9FC
add	esp, 3Ch
retn
align 4
call	WSAGetLastError
cmp	eax, 2736h
jz	short loc_67D2C9F8
mov	[esp+3Ch+optval], eax
mov	[esp+3Ch+optname], offset aWpurple_is_soc 
mov	[esp+3Ch+level], offset	aWpurple 
mov	[esp+3Ch+s], 3
call	purple_debug
xor	eax, eax
jmp	short loc_67D2C9B6
xor	eax, eax
jmp	short loc_67D2C9B6
call	__stack_chk_fail
align 4
public wpurple_socket
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+protocol], eax	
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+type],	eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+var_2C], eax 
call	socket
sub	esp, 0Ch
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2CA4E
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CA5E
add	esp, 24h
pop	ebx
pop	esi
retn
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
jmp	short loc_67D2CA3A
call	__stack_chk_fail
align 4
public wpurple_connect
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+namelen], eax 
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+name],	eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	connect
sub	esp, 0Ch
inc	eax
jz	short loc_67D2CAA8
xor	eax, eax
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CADE
add	esp, 28h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_67D2CACC
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CA97
align 4
call	_errno
mov	dword ptr [eax], 2734h
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CA97
call	__stack_chk_fail
align 4
public wpurple_getsockopt
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+optlen], eax 
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+optval], eax 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+optname], eax 
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+level], eax 
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+s], eax 
call	getsockopt
sub	esp, 14h
inc	eax
jz	short loc_67D2CB38
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CB4D
add	esp, 38h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CB27
call	__stack_chk_fail
align 4
public wpurple_setsockopt
push	ebx
sub	esp, 38h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+optlen], eax 
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+optval], eax 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+optname], eax 
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+level], eax 
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+s], eax 
call	setsockopt
sub	esp, 14h
inc	eax
jz	short loc_67D2CBA8
xor	eax, eax
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CBBD
add	esp, 38h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CB97
call	__stack_chk_fail
align 4
public wpurple_getsockname
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+namelen], eax 
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+name],	eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	getsockname
sub	esp, 0Ch
inc	eax
jz	short loc_67D2CC08
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CC1D
add	esp, 28h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CBF7
call	__stack_chk_fail
align 4
public wpurple_bind
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+namelen], eax 
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+name],	eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	bind
sub	esp, 0Ch
inc	eax
jz	short loc_67D2CC68
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CC7D
add	esp, 28h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CC57
call	__stack_chk_fail
align 4
public wpurple_listen
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+backlog], eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	listen
sub	esp, 8
inc	eax
jz	short loc_67D2CCC0
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CCD5
add	esp, 28h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CCAF
call	__stack_chk_fail
align 4
public wpurple_sendto
			
push	esi
push	ebx
sub	esp, 34h
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+3Ch+arg_14]
mov	[esp+3Ch+tolen], eax 
mov	eax, [esp+3Ch+arg_10]
mov	[esp+3Ch+to], eax 
mov	eax, [esp+3Ch+arg_C]
mov	[esp+3Ch+flags], eax 
mov	eax, [esp+3Ch+arg_8]
mov	[esp+3Ch+len], eax 
mov	eax, [esp+3Ch+arg_4]
mov	[esp+3Ch+buf], eax 
mov	eax, [esp+3Ch+arg_0]
mov	[esp+3Ch+s], eax 
call	sendto
sub	esp, 18h
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2CD40
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CD75
add	esp, 34h
pop	ebx
pop	esi
retn
align 10h
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_67D2CD68
call	_errno
cmp	dword ptr [eax], 2734h
jnz	short loc_67D2CD2A
call	_errno
mov	dword ptr [eax], 0Bh
jmp	short loc_67D2CD2A
call	__stack_chk_fail
align 4
public wpurple_fcntl
			
push	ebx
sub	esp, 28h
mov	edx, [esp+2Ch+arg_0]
mov	eax, [esp+2Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], ecx
xor	ecx, ecx
cmp	eax, 3
jz	short loc_67D2CDFE
cmp	eax, 4
jz	short loc_67D2CDD0
mov	[esp+2Ch+argp],	offset aWpurple_fcntlU 
mov	[esp+2Ch+cmd], offset aWpurple 
mov	[esp+2Ch+s], 3
call	purple_debug
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2CE44
add	esp, 28h
pop	ebx
retn
mov	eax, [esp+2Ch+arg_8]
test	eax, eax
jnz	short loc_67D2CE04
mov	[esp+2Ch+var_14], 0
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+argp],	eax 
mov	[esp+2Ch+cmd], 8004667Eh 
mov	[esp+2Ch+s], edx 
call	ioctlsocket
sub	esp, 0Ch
inc	eax
jz	short loc_67D2CE2C
xor	eax, eax
jmp	short loc_67D2CDBF
align 4
cmp	eax, 800h
jz	short loc_67D2CE20
call	_errno
mov	dword ptr [eax], 16h
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2CDBF
align 10h
mov	[esp+2Ch+var_14], 1
jmp	short loc_67D2CDE0
align 4
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	loc_67D2CDBF
call	__stack_chk_fail
align 4
public wpurple_ioctl
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 64Ch
mov	edx, [esp+65Ch+arg_0]
mov	eax, [esp+65Ch+arg_4]
mov	esi, [esp+65Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+65Ch+var_20], ecx
xor	ecx, ecx
cmp	eax, 8004667Eh
jz	short loc_67D2CEB8
cmp	eax, 8912h
jz	short loc_67D2CEDC
call	_errno
mov	dword ptr [eax], 16h
mov	eax, 0FFFFFFFFh
			
mov	ecx, [esp+65Ch+var_20]
xor	ecx, ds:__stack_chk_guard
jnz	loc_67D2D006
add	esp, 64Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+65Ch+argp], esi 
mov	[esp+65Ch+cmd],	8004667Eh 
mov	[esp+65Ch+s], edx 
call	ioctlsocket
sub	esp, 0Ch
inc	eax
jz	loc_67D2CFE0
xor	eax, eax
jmp	short loc_67D2CE98
align 4
mov	[esp+65Ch+lpCompletionRoutine],	0 
mov	[esp+65Ch+lpOverlapped], 0 
lea	eax, [esp+65Ch+cbBytesReturned]
mov	[esp+65Ch+lpcbBytesReturned], eax 
mov	[esp+65Ch+cbOutBuffer],	5F0h 
lea	eax, [esp+65Ch+vOutBuffer]
mov	[esp+65Ch+lpvOutBuffer], eax 
mov	[esp+65Ch+cbInBuffer], 0 
mov	[esp+65Ch+argp], 0 
mov	[esp+65Ch+cmd],	4004747Fh 
mov	[esp+65Ch+s], edx 
call	WSAIoctl
sub	esp, 24h
inc	eax
jz	loc_67D2CFE0
mov	edi, [esi+4]
mov	eax, [esp+65Ch+cbBytesReturned]
shr	eax, 2
mov	edx, 1AF286BDh
mul	edx
shr	edx, 1
mov	[esp+65Ch+var_620], edx
jz	loc_67D2CFF8
mov	eax, [esp+65Ch+var_60C]
mov	[edi+8], ax
mov	ax, word ptr [esp+65Ch+var_60C+2]
mov	[edi+0Ah], ax
mov	eax, [esp+65Ch+var_608]
mov	[edi+0Ch], eax
lea	ebp, [edi+18h]
mov	ecx, [esi+4]
mov	[esp+65Ch+var_628], ecx
mov	ebx, [esi]
mov	[esp+65Ch+var_624], ebx
lea	eax, [ecx+ebx+18h]
cmp	ebp, eax
jnb	short loc_67D2CFCD
lea	edx, [edi+20h]
xor	eax, eax
jmp	short loc_67D2CFBE
align 4
lea	ecx, [eax+eax*8]
lea	ecx, [eax+ecx*2]
lea	ecx, [esp+ecx*4+65Ch+vOutBuffer]
mov	di, [ecx+4]
mov	bx, [ecx+6]
mov	ecx, [ecx+8]
mov	[edx], di
mov	[edx+2], bx
mov	[edx+4], ecx
add	ebp, 18h
mov	ecx, [esi+4]
mov	[esp+65Ch+var_628], ecx
mov	ebx, [esi]
mov	[esp+65Ch+var_624], ebx
add	edx, 18h
lea	edi, [ecx+ebx+18h]
cmp	ebp, edi
jnb	short loc_67D2CFCD
inc	eax
cmp	[esp+65Ch+var_620], eax
jnz	short loc_67D2CF84
mov	[esp+65Ch+var_624], ebx
mov	[esp+65Ch+var_628], ecx
			
add	ebp, [esp+65Ch+var_624]
sub	ebp, [esp+65Ch+var_628]
mov	[esi], ebp
xor	eax, eax
jmp	loc_67D2CE98
align 10h
			
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	loc_67D2CE98
mov	edx, [esi]
mov	[esp+65Ch+var_624], edx
mov	[esp+65Ch+var_628], edi
mov	ebp, edi
jmp	short loc_67D2CFCD
call	__stack_chk_fail
align 4
public wpurple_inet_aton
push	ebx
sub	esp, 28h
mov	ebx, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+cp], eax 
call	inet_addr
push	edx
mov	[ebx], eax
inc	eax
setnz	al
movzx	eax, al
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D046
add	esp, 28h
pop	ebx
retn
call	__stack_chk_fail
align 4
public wpurple_inet_ntop
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 5Ch
mov	ebx, [esp+6Ch+arg_0]
mov	esi, [esp+6Ch+arg_4]
mov	ebp, [esp+6Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+6Ch+var_20], eax
xor	eax, eax
mov	eax, [esp+6Ch+arg_C]
mov	[esp+6Ch+dwAddressStringLength], eax
lea	edx, [esp+6Ch+saAddress]
mov	ecx, 1Ch
xor	eax, eax
mov	edi, edx
rep stosb
cmp	ebx, 2
jz	short loc_67D2D090
cmp	ebx, 17h
jz	short loc_67D2D0E0
call	abort
mov	[esp+6Ch+saAddress.sa_family], 2
mov	eax, [esi]
mov	dword ptr [esp+6Ch+saAddress.sa_data+2], eax
mov	eax, 10h
lea	ecx, [esp+6Ch+dwAddressStringLength]
mov	[esp+6Ch+lpdwAddressStringLength], ecx 
mov	[esp+6Ch+lpszAddressString], ebp 
mov	[esp+6Ch+lpProtocolInfo], 0 
mov	[esp+6Ch+dwAddressLength], eax 
mov	[esp+6Ch+lpsaAddress], edx 
call	WSAAddressToStringA
sub	esp, 14h
test	eax, eax
jnz	short loc_67D2D0FC
mov	eax, ebp
mov	edx, [esp+6Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D10E
add	esp, 5Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 10h
mov	[esp+6Ch+saAddress.sa_family], 17h
lea	edi, [esp+6Ch+saAddress.sa_data+6]
mov	ecx, 4
rep movsd
mov	eax, 1Ch
jmp	short loc_67D2D0A2
align 4
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
xor	ebp, ebp
jmp	short loc_67D2D0C9
call	__stack_chk_fail
align 4
public wpurple_inet_pton
push	edi
push	esi
push	ebx
sub	esp, 50h
mov	eax, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	ebx, [esp+5Ch+arg_8]
mov	ecx, ds:__stack_chk_guard
mov	[esp+5Ch+var_10], ecx
xor	ecx, ecx
cmp	eax, 2
jz	short loc_67D2D164
cmp	eax, 17h
jz	short loc_67D2D1B0
call	_errno
mov	dword ptr [eax], 273Eh
mov	eax, 0FFFFFFFFh
			
mov	edx, [esp+5Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D21D
add	esp, 50h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	[esp+5Ch+Address.sa_family], 2
mov	[esp+5Ch+AddressLength], 10h
lea	eax, [esp+5Ch+AddressLength]
mov	[esp+5Ch+lpAddressLength], eax 
lea	eax, [esp+5Ch+Address]
mov	[esp+5Ch+lpAddress], eax 
mov	[esp+5Ch+lpProtocolInfo], 0 
mov	[esp+5Ch+AddressFamily], 2 
mov	[esp+5Ch+AddressString], edx 
call	WSAStringToAddressA
sub	esp, 14h
test	eax, eax
jnz	short loc_67D2D205
mov	eax, dword ptr [esp+5Ch+Address.sa_data+2]
mov	[ebx], eax
mov	eax, 1
jmp	short loc_67D2D14C
align 10h
mov	[esp+5Ch+Address.sa_family], 17h
mov	[esp+5Ch+AddressLength], 1Ch
lea	eax, [esp+5Ch+AddressLength]
mov	[esp+5Ch+lpAddressLength], eax 
lea	eax, [esp+5Ch+Address]
mov	[esp+5Ch+lpAddress], eax 
mov	[esp+5Ch+lpProtocolInfo], 0 
mov	[esp+5Ch+AddressFamily], 17h 
mov	[esp+5Ch+AddressString], edx 
call	WSAStringToAddressA
sub	esp, 14h
test	eax, eax
jnz	short loc_67D2D205
lea	esi, [esp+5Ch+Address.sa_data+6]
mov	ecx, 4
mov	edi, ebx
rep movsd
mov	eax, 1
jmp	loc_67D2D14C
			
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	loc_67D2D14C
call	__stack_chk_fail
align 4
public wpurple_gethostbyname
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+name],	eax 
call	gethostbyname
push	ecx
mov	ebx, eax
test	eax, eax
jz	short loc_67D2D25B
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D26B
add	esp, 24h
pop	ebx
pop	esi
retn
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
jmp	short loc_67D2D247
call	__stack_chk_fail
public wpurple_strerror
			
sub	esp, 2Ch
mov	eax, [esp+2Ch+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
cmp	eax, 2710h
jle	short loc_67D2D2C0
lea	edx, [eax-2740h]
cmp	edx, 0Dh	
jbe	short loc_67D2D2B8
			
mov	[esp+2Ch+var_20], eax 
mov	[esp+2Ch+var_24], offset aWindowsSocketE 
mov	[esp+2Ch+var_28], 400h
mov	[esp+2Ch+var_2C], offset dword_67D75160
call	g_snprintf
jmp	short loc_67D2D2E8
align 4
jmp	ds:off_67D48C04[edx*4] 
align 10h
mov	[esp+2Ch+var_2C], eax
call	g_strerror
			
mov	[esp+2Ch+var_20], eax
mov	[esp+2Ch+var_24], offset aS_22 
mov	[esp+2Ch+var_28], 400h
mov	[esp+2Ch+var_2C], offset dword_67D75160
call	g_snprintf
mov	eax, offset dword_67D75160
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D385
add	esp, 2Ch
retn
align 4
			
mov	[esp+2Ch+var_28], offset aConnectionRefu 
mov	[esp+2Ch+var_2C], offset aPidgin_18 
call	libintl_dgettext
jmp	short loc_67D2D2C8
align 4
			
mov	[esp+2Ch+var_28], offset aConnectionTime 
mov	[esp+2Ch+var_2C], offset aPidgin_18 
call	libintl_dgettext
jmp	short loc_67D2D2C8
align 4
			
mov	[esp+2Ch+var_28], offset aRemoteHostClos 
mov	[esp+2Ch+var_2C], offset aPidgin_18 
call	libintl_dgettext
jmp	loc_67D2D2C8
align 10h
			
mov	[esp+2Ch+var_28], offset aConnectionInte 
mov	[esp+2Ch+var_2C], offset aPidgin_18 
call	libintl_dgettext
jmp	loc_67D2D2C8
align 4
			
mov	[esp+2Ch+var_28], offset aAddressAlready 
mov	[esp+2Ch+var_2C], offset aPidgin_18 
call	libintl_dgettext
jmp	loc_67D2D2C8
call	__stack_chk_fail
align 4
public wpurple_read
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
js	loc_67D2D458
mov	eax, ebx
call	sub_67D2C96C
test	eax, eax
jz	short loc_67D2D3F8
mov	[esp+3Ch+flags], 0 
mov	[esp+3Ch+len], edi 
mov	[esp+3Ch+buf], esi 
mov	[esp+3Ch+s], ebx 
call	recv
sub	esp, 10h
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2D420
			
mov	eax, ebx
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D4A1
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D4A1
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	_read
align 10h
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_67D2D448
call	_errno
cmp	dword ptr [eax], 2734h
jnz	short loc_67D2D3DE
call	_errno
mov	dword ptr [eax], 0Bh
jmp	short loc_67D2D3DE
align 4
call	_errno
mov	dword ptr [eax], 9
mov	[esp+3Ch+var_28], offset aWpurple_read 
mov	[esp+3Ch+var_2C], 18Eh
mov	[esp+3Ch+flags], offset	aWin32Libc_inte	
mov	[esp+3Ch+len], offset aFileSLineDS_10 
mov	[esp+3Ch+buf], 8
mov	[esp+3Ch+s], 0
call	g_log
mov	ebx, 0FFFFFFFFh
jmp	loc_67D2D3DE
			
call	__stack_chk_fail
align 4
public wpurple_send
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_C]
mov	[esp+2Ch+flags], eax 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+len], eax 
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+buf], eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	send
sub	esp, 10h
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2D4FC
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D531
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_67D2D524
call	_errno
cmp	dword ptr [eax], 2734h
jnz	short loc_67D2D4E6
call	_errno
mov	dword ptr [eax], 0Bh
jmp	short loc_67D2D4E6
call	__stack_chk_fail
align 4
public wpurple_write
			
push	edi
push	esi
push	ebx
sub	esp, 30h
mov	ebx, [esp+3Ch+arg_0]
mov	esi, [esp+3Ch+arg_4]
mov	edi, [esp+3Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
js	short loc_67D2D5B8
mov	eax, ebx
call	sub_67D2C96C
test	eax, eax
jnz	short loc_67D2D58C
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D5FE
mov	[esp+3Ch+arg_8], edi
mov	[esp+3Ch+arg_4], esi
mov	[esp+3Ch+arg_0], ebx
add	esp, 30h
pop	ebx
pop	esi
pop	edi
jmp	_write
align 4
mov	[esp+3Ch+var_30], 0 
mov	[esp+3Ch+var_34], edi 
mov	[esp+3Ch+var_38], esi 
mov	[esp+3Ch+var_3C], ebx 
call	wpurple_send
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D5FE
add	esp, 30h
pop	ebx
pop	esi
pop	edi
retn
align 4
call	_errno
mov	dword ptr [eax], 9
mov	[esp+3Ch+var_28], offset aWpurple_write	
mov	[esp+3Ch+var_2C], 1BBh
mov	[esp+3Ch+var_30], offset aWin32Libc_inte 
mov	[esp+3Ch+var_34], offset aFileSLineDS_10 
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+var_3C], 0
call	g_log
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2D5A4
			
call	__stack_chk_fail
align 4
public wpurple_recv
			
push	esi
push	ebx
sub	esp, 24h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_C]
mov	[esp+2Ch+flags], eax 
mov	eax, [esp+2Ch+arg_8]
mov	[esp+2Ch+len], eax 
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+buf], eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+s], eax 
call	recv
sub	esp, 10h
mov	ebx, eax
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2D658
			
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D68D
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
call	_errno
mov	esi, eax
call	WSAGetLastError
mov	[esi], eax
call	_errno
cmp	dword ptr [eax], 2733h
jz	short loc_67D2D680
call	_errno
cmp	dword ptr [eax], 2734h
jnz	short loc_67D2D642
call	_errno
mov	dword ptr [eax], 0Bh
jmp	short loc_67D2D642
call	__stack_chk_fail
align 4
public wpurple_close
			
push	ebx
sub	esp, 38h
mov	ebx, [esp+3Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+3Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
js	short loc_67D2D6F8
mov	eax, ebx
call	sub_67D2C96C
test	eax, eax
jz	short loc_67D2D6DC
mov	[esp+3Ch+s], ebx 
call	closesocket
push	ebx
inc	eax
jz	short loc_67D2D73E
xor	eax, eax
			
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2D756
add	esp, 38h
pop	ebx
retn
align 4
mov	edx, [esp+3Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D756
mov	[esp+3Ch+arg_0], ebx
add	esp, 38h
pop	ebx
jmp	_close
align 4
call	_errno
mov	dword ptr [eax], 9
mov	[esp+3Ch+var_28], offset aWpurple_close	
mov	[esp+3Ch+var_2C], 1D6h
mov	[esp+3Ch+var_30], offset aWin32Libc_inte 
mov	[esp+3Ch+var_34], offset aFileSLineDS_10 
mov	[esp+3Ch+var_38], 8
mov	[esp+3Ch+s], 0
call	g_log
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2D6C4
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	loc_67D2D6C4
			
call	__stack_chk_fail
align 4
public wpurple_gethostname
			
push	ebx
sub	esp, 28h
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+namelen], eax 
mov	eax, [esp+2Ch+arg_0]
mov	[esp+2Ch+name],	eax 
call	gethostname
sub	esp, 8
inc	eax
jz	short loc_67D2D798
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D7AD
add	esp, 28h
pop	ebx
retn
call	_errno
mov	ebx, eax
call	WSAGetLastError
mov	[ebx], eax
mov	eax, 0FFFFFFFFh
jmp	short loc_67D2D787
call	__stack_chk_fail
align 4
public wpurple_gettimeofday
push	esi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	esi, [esp+2Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	esi, esi
jz	short loc_67D2D7FA
call	_tzset
mov	eax, ds:_timezone
mov	ecx, [eax]
mov	eax, 88888889h
imul	ecx
lea	eax, [ecx+edx]
sar	eax, 5
sar	ecx, 1Fh
sub	eax, ecx
mov	[esi], eax
mov	eax, ds:_daylight
mov	eax, [eax]
mov	[esi+4], eax
test	ebx, ebx
jz	short loc_67D2D824
lea	eax, [esp+2Ch+var_1C]
mov	[esp+2Ch+var_2C], eax
call	_ftime
mov	eax, [esp+2Ch+var_1C]
mov	[ebx], eax
movsx	eax, [esp+2Ch+var_18]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
lea	eax, [eax+eax*4]
shl	eax, 3
mov	[ebx+4], eax
xor	eax, eax
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D838
add	esp, 24h
pop	ebx
pop	esi
retn
call	__stack_chk_fail
align 10h
public wpurple_rename
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D2D873
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_rename
call	__stack_chk_fail
public wpurple_localtime_r
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	eax, [esp+2Ch+arg_0]
mov	ebx, [esp+2Ch+arg_4]
mov	edx, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], edx
xor	edx, edx
test	eax, eax
jz	short loc_67D2D8C8
mov	[esp+2Ch+Time],	eax 
call	localtime
test	ebx, ebx
jz	short loc_67D2D8C8
test	eax, eax
jz	short loc_67D2D8C8
mov	ecx, 9
mov	edi, ebx
mov	esi, eax
rep movsd
mov	eax, ebx
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2D8CC
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
			
xor	eax, eax
jmp	short loc_67D2D8B3
call	__stack_chk_fail
align 4
public wpurple_get_timezone_abbreviation
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3DCh
mov	eax, [esp+3ECh+arg_0]
mov	edx, ds:__stack_chk_guard
mov	[esp+3ECh+var_20], edx
xor	edx, edx
test	eax, eax
jz	loc_67D2DC50
mov	[esp+3ECh+Tm], eax 
mov	[esp+3ECh+Format], offset aZ_0 
mov	[esp+3ECh+SizeInBytes],	7Fh 
lea	ebx, [esp+3ECh+Str1]
mov	[esp+3ECh+Buf],	ebx 
call	strftime
test	eax, eax
jz	loc_67D2DC30
mov	ebp, Str2
test	ebp, ebp
jz	loc_67D2D9C4
mov	esi, offset off_67D30590
mov	eax, ebp
xor	edi, edi
jmp	short loc_67D2D962
align 10h
mov	eax, [esi-0Ch]
mov	[esp+3ECh+SizeInBytes],	eax 
mov	[esp+3ECh+Buf],	ebx 
call	strcmp
test	eax, eax
jz	loc_67D2DBCC
inc	edi
add	esi, 10h
mov	eax, [esi-10h]
test	eax, eax
jz	short loc_67D2D9C4
mov	[esp+3ECh+SizeInBytes],	eax 
mov	[esp+3ECh+Buf],	ebx 
call	strcmp
test	eax, eax
jnz	short loc_67D2D940
test	edi, edi
jle	short loc_67D2D99D
cmp	byte ptr [ebp+0], 0
jnz	loc_67D2DD6E
mov	[esp+3ECh+Buf],	ebx
call	g_strdup
mov	Str2, eax
mov	eax, edi
shl	eax, 4
mov	eax, off_67D30588[eax]
mov	off_67D30588, eax
shl	edi, 4
mov	eax, off_67D30588[edi]
			
mov	edx, [esp+3ECh+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2DE1A
add	esp, 3DCh
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
			
lea	eax, [esp+3ECh+var_320]
mov	[esp+3ECh+var_3C4], eax
mov	ecx, 100h
xor	eax, eax
mov	edi, [esp+3ECh+var_3C4]
rep stosb
lea	eax, [esp+3ECh+hKey]
mov	[esp+3ECh+phkResult], eax 
mov	[esp+3ECh+Tm], 20019h 
mov	[esp+3ECh+Format], 0 
mov	[esp+3ECh+SizeInBytes],	offset SubKey 
mov	[esp+3ECh+Buf],	80000002h 
call	RegOpenKeyExA
sub	esp, 14h
test	eax, eax
jnz	loc_67D2DC09
mov	[esp+3ECh+dwIndex], 0
lea	edx, [esp+3ECh+SubKey]
mov	[esp+3ECh+var_3C8], edx
lea	ebp, [esp+3ECh+cbData]
lea	esi, [esp+3ECh+Data]
jmp	loc_67D2DB3F
align 4
lea	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+phkResult], eax 
mov	[esp+3ECh+Tm], 20019h 
mov	[esp+3ECh+Format], 0 
lea	edx, [esp+3ECh+SubKey]
mov	[esp+3ECh+SizeInBytes],	edx 
mov	eax, [esp+3ECh+hKey]
mov	[esp+3ECh+Buf],	eax 
call	RegOpenKeyExA
sub	esp, 14h
test	eax, eax
jnz	loc_67D2DDC5
mov	ecx, 100h
mov	edi, esi
xor	eax, eax
rep stosb
mov	[esp+3ECh+cbData], 100h
mov	[esp+3ECh+lpcbData], ebp 
mov	[esp+3ECh+phkResult], esi 
mov	[esp+3ECh+Tm], 0 
mov	[esp+3ECh+Format], 0 
mov	[esp+3ECh+SizeInBytes],	offset ValueName 
mov	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+Buf],	eax 
call	RegQueryValueExA
sub	esp, 18h
test	eax, eax
jnz	loc_67D2DDE2
mov	[esp+3ECh+SizeInBytes],	esi 
mov	[esp+3ECh+Buf],	ebx 
call	strcmp
test	eax, eax
jz	loc_67D2DC6E
mov	ecx, 100h
mov	edi, esi
xor	eax, eax
rep stosb
mov	[esp+3ECh+cbData], 100h
mov	[esp+3ECh+lpcbData], ebp 
mov	[esp+3ECh+phkResult], esi 
mov	[esp+3ECh+Tm], 0 
mov	[esp+3ECh+Format], 0 
mov	[esp+3ECh+SizeInBytes],	offset aDlt 
mov	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+Buf],	eax 
call	RegQueryValueExA
sub	esp, 18h
test	eax, eax
jnz	loc_67D2DE0C
mov	[esp+3ECh+SizeInBytes],	esi 
mov	[esp+3ECh+Buf],	ebx 
call	strcmp
test	eax, eax
jz	loc_67D2DC6E
mov	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+Buf],	eax 
call	RegCloseKey
push	edi
inc	[esp+3ECh+dwIndex]
mov	ecx, 100h
mov	edi, [esp+3ECh+var_3C8]
xor	eax, eax
rep stosb
mov	[esp+3ECh+cbData], 100h
lea	edx, [esp+3ECh+ftLastWriteTime]
mov	[esp+3ECh+lpftLastWriteTime], edx 
mov	[esp+3ECh+lpcchClass], 0 
mov	[esp+3ECh+lpcbData], 0 
mov	[esp+3ECh+phkResult], 0	
mov	[esp+3ECh+Tm], ebp 
lea	eax, [esp+3ECh+SubKey]
mov	[esp+3ECh+Format], eax 
mov	edx, [esp+3ECh+dwIndex]
mov	[esp+3ECh+SizeInBytes],	edx 
mov	eax, [esp+3ECh+hKey]
mov	[esp+3ECh+Buf],	eax 
call	RegEnumKeyExA
sub	esp, 20h
test	eax, eax
jz	loc_67D2DA38
cmp	eax, 103h
jz	loc_67D2DC9D
mov	[esp+3ECh+Format], eax
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotEnumer 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
jmp	loc_67D2DC9D
align 4
test	edi, edi
jle	short loc_67D2DBFB
mov	eax, off_67D30584
cmp	byte ptr [eax],	0
jnz	loc_67D2DD7B
mov	[esp+3ECh+Buf],	ebx
call	g_strdup
mov	off_67D30584, eax
mov	eax, edi
shl	eax, 4
mov	eax, off_67D3058C[eax]
mov	off_67D3058C, eax
shl	edi, 4
mov	eax, off_67D3058C[edi]
jmp	loc_67D2D9A6
call	GetLastError
mov	[esp+3ECh+Format], eax
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotOpenRe 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
mov	eax, offset byte_67D48C81
jmp	loc_67D2D9A6
mov	[esp+3ECh+SizeInBytes],	offset aTimezoneNameIs 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_error
mov	eax, offset byte_67D48C81
jmp	loc_67D2D9A6
align 10h
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotDeterm 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
mov	eax, offset byte_67D48C81
jmp	loc_67D2D9A6
			
mov	[esp+3ECh+Format], 100h
lea	edx, [esp+3ECh+SubKey]
mov	[esp+3ECh+SizeInBytes],	edx
lea	eax, [esp+3ECh+var_320]
mov	[esp+3ECh+Buf],	eax
call	g_strlcpy
mov	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+Buf],	eax 
call	RegCloseKey
push	ebp
			
mov	eax, [esp+3ECh+hKey]
mov	[esp+3ECh+Buf],	eax 
call	RegCloseKey
push	esi
cmp	[esp+3ECh+var_320], 0
jz	loc_67D2DD4C
mov	edi, Str2
test	edi, edi
jz	loc_67D2DD4C
mov	esi, offset off_67D30590
mov	eax, edi
xor	ebp, ebp
jmp	short loc_67D2DCFD
align 4
mov	eax, [esi-0Ch]
mov	[esp+3ECh+SizeInBytes],	eax 
lea	eax, [esp+3ECh+var_320]
mov	[esp+3ECh+Buf],	eax 
call	strcmp
test	eax, eax
jz	loc_67D2DD88
inc	ebp
add	esi, 10h
mov	eax, [esi-10h]
test	eax, eax
jz	short loc_67D2DD4C
mov	[esp+3ECh+SizeInBytes],	eax 
lea	edx, [esp+3ECh+var_320]
mov	[esp+3ECh+Buf],	edx 
call	strcmp
test	eax, eax
jnz	short loc_67D2DCD4
cmp	byte ptr [edi],	0
jz	short loc_67D2DD21
mov	[esp+3ECh+Buf],	edi
call	g_free
mov	[esp+3ECh+Buf],	ebx
call	g_strdup
mov	Str2, eax
mov	eax, ebp
shl	eax, 4
mov	edx, off_67D30588[eax]
add	eax, offset Str2
mov	off_67D30588, edx
mov	eax, [eax+8]
jmp	loc_67D2D9A6
			
mov	[esp+3ECh+Format], ebx
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotFindAM 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
mov	eax, offset byte_67D48C81
jmp	loc_67D2D9A6
mov	[esp+3ECh+Buf],	ebp
call	g_free
jmp	loc_67D2D980
mov	[esp+3ECh+Buf],	eax
call	g_free
jmp	loc_67D2DBDE
mov	eax, off_67D30584
cmp	byte ptr [eax],	0
jz	short loc_67D2DD9A
mov	[esp+3ECh+Buf],	eax
call	g_free
mov	[esp+3ECh+Buf],	ebx
call	g_strdup
mov	off_67D30584, eax
mov	eax, ebp
shl	eax, 4
mov	edx, off_67D3058C[eax]
add	eax, offset Str2
mov	off_67D3058C, edx
mov	eax, [eax+0Ch]
jmp	loc_67D2D9A6
mov	[esp+3ECh+Format], eax
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotOpen_0 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
jmp	loc_67D2DC9D
mov	[esp+3ECh+Format], eax
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotQueryV 
mov	[esp+3ECh+Buf],	offset aWpurple	
call	purple_debug_warning
mov	eax, [esp+3ECh+var_3AC]
mov	[esp+3ECh+Buf],	eax 
call	RegCloseKey
push	eax
jmp	loc_67D2DC9D
mov	[esp+3ECh+Format], eax
mov	[esp+3ECh+SizeInBytes],	offset aCouldNotQuer_0 
jmp	short loc_67D2DDEE
call	__stack_chk_fail
align 10h
public wpurple_g_access
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_0]
mov	edx, [esp+1Ch+arg_4]
mov	ecx, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], ecx
xor	ecx, ecx
mov	ecx, [esp+1Ch+var_10]
xor	ecx, ds:__stack_chk_guard
jnz	short loc_67D2DE53
mov	[esp+1Ch+arg_4], edx
mov	[esp+1Ch+arg_0], eax
add	esp, 1Ch
jmp	g_access
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	ebx, eax
mov	esi, edx
mov	ebp, [esp+5Ch+arg_0]
mov	edx, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
test	esi, esi
jz	loc_67D2DF38
mov	[esp+5Ch+lpData], 0
mov	[esp+5Ch+lpType], 0
mov	[esp+5Ch+lpReserved], 0
mov	[esp+5Ch+lpValueName], 0FFFFFFFFh
mov	[esp+5Ch+hKey],	esi
mov	[esp+5Ch+var_34], edx
mov	[esp+5Ch+var_30], ecx
call	g_utf8_to_utf16
mov	edi, eax
mov	edx, [esp+5Ch+var_34]
mov	ecx, [esp+5Ch+var_30]
mov	[esp+5Ch+lpcbData], edx	
mov	[esp+5Ch+lpData], ebp 
mov	[esp+5Ch+lpType], ecx 
mov	[esp+5Ch+lpReserved], 0	
mov	[esp+5Ch+lpValueName], edi 
mov	[esp+5Ch+hKey],	ebx 
call	RegQueryValueExW
sub	esp, 18h
mov	ebx, eax
mov	[esp+5Ch+hKey],	edi
call	g_free
test	ebx, ebx
jz	short loc_67D2DF1B
mov	[esp+5Ch+hKey],	ebx
call	g_win32_error_message
mov	edi, eax
mov	[esp+5Ch+lpData], eax
mov	[esp+5Ch+lpType], ebx
mov	[esp+5Ch+lpReserved], esi
mov	[esp+5Ch+lpValueName], offset aCouldNotReadFr 
mov	[esp+5Ch+hKey],	offset aWpurple_0 
call	purple_debug_error
mov	[esp+5Ch+hKey],	edi
call	g_free
xor	eax, eax
test	ebx, ebx
setz	al
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2DF3F
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	edi, edi
jmp	loc_67D2DEB8
call	__stack_chk_fail
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	ebx, eax
mov	ebp, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+var_24], 0
mov	[esp+4Ch+phkResult], 0
mov	[esp+4Ch+samDesired], 0
mov	[esp+4Ch+ulOptions], 0
mov	[esp+4Ch+lpSubKey], 0FFFFFFFFh
mov	[esp+4Ch+hKey],	edx
call	g_utf8_to_utf16
mov	esi, eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+phkResult], eax 
mov	[esp+4Ch+samDesired], 1	
mov	[esp+4Ch+ulOptions], 0 
mov	[esp+4Ch+lpSubKey], esi	
mov	[esp+4Ch+hKey],	ebx 
call	RegOpenKeyExW
sub	esp, 14h
mov	edi, eax
mov	[esp+4Ch+hKey],	esi
call	g_free
test	edi, edi
jnz	short loc_67D2DFDC
mov	eax, [esp+4Ch+var_24]
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E04B
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+4Ch+hKey],	edi
call	g_win32_error_message
mov	esi, eax
cmp	ebx, 80000002h
jz	short loc_67D2E034
cmp	ebx, 80000001h
jz	short loc_67D2E03C
cmp	ebx, 80000000h
jz	short loc_67D2E044
mov	eax, offset a??? 
			
mov	[esp+4Ch+var_38], esi
mov	[esp+4Ch+phkResult], edi
mov	[esp+4Ch+samDesired], ebp
mov	[esp+4Ch+ulOptions], eax
mov	[esp+4Ch+lpSubKey], offset aCouldNotOpen_1 
mov	[esp+4Ch+hKey],	offset aWpurple_0 
call	purple_debug_error
mov	[esp+4Ch+hKey],	esi
call	g_free
jmp	short loc_67D2DFC1
align 4
mov	eax, offset aHklm 
jmp	short loc_67D2E003
align 4
mov	eax, offset aHkcu 
jmp	short loc_67D2E003
align 4
mov	eax, offset aHkcr 
jmp	short loc_67D2E003
call	__stack_chk_fail
public wpurple_escape_dirsep
push	edi
push	ebx
sub	esp, 24h
mov	ebx, [esp+2Ch+arg_0]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
test	ebx, ebx
jz	short loc_67D2E0E4
mov	al, [ebx]
test	al, al
jz	loc_67D2E104
mov	edx, ebx
xor	ecx, ecx
jmp	short loc_67D2E07F
inc	edx
mov	al, [edx]
test	al, al
jz	short loc_67D2E08B
			
cmp	al, 5Ch
jnz	short loc_67D2E078
inc	ecx
inc	edx
mov	al, [edx]
test	al, al
jnz	short loc_67D2E07F
mov	edx, ecx
xor	eax, eax
mov	ecx, 0FFFFFFFFh
mov	edi, ebx
repne scasb
not	ecx
add	ecx, edx
mov	[esp+2Ch+var_2C], ecx
call	g_malloc0
mov	cl, [ebx]
xor	edx, edx
test	cl, cl
jnz	short loc_67D2E0B8
jmp	short loc_67D2E0CE
align 10h
inc	ebx
inc	edx
mov	cl, [ebx]
test	cl, cl
jz	short loc_67D2E0CE
			
mov	[eax+edx], cl
cmp	byte ptr [ebx],	5Ch
jnz	short loc_67D2E0B0
mov	byte ptr [eax+edx+1], 5Ch
inc	edx
inc	ebx
inc	edx
mov	cl, [ebx]
test	cl, cl
jnz	short loc_67D2E0B8
			
mov	byte ptr [eax+edx], 0
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E108
add	esp, 24h
pop	ebx
pop	edi
retn
mov	[esp+2Ch+var_24], offset aFilenameNull_3 
mov	[esp+2Ch+var_28], offset aWpurple_escape 
mov	[esp+2Ch+var_2C], 0
call	g_return_if_fail_warning
xor	eax, eax
jmp	short loc_67D2E0D2
xor	edx, edx
jmp	short loc_67D2E08D
call	__stack_chk_fail
align 10h
public wpurple_find_and_loadproc
			
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 4Ch
mov	esi, [esp+5Ch+arg_0]
mov	edi, [esp+5Ch+arg_4]
mov	eax, ds:__stack_chk_guard
mov	[esp+5Ch+var_20], eax
xor	eax, eax
mov	[esp+5Ch+var_4C], 0
mov	[esp+5Ch+var_50], 0
mov	[esp+5Ch+var_54], 0
mov	[esp+5Ch+lpProcName], 0FFFFFFFFh
mov	[esp+5Ch+lpModuleName],	esi
call	g_utf8_to_utf16
mov	ebp, eax
mov	[esp+5Ch+lpModuleName],	eax 
call	GetModuleHandleW
push	ebx
mov	ebx, eax
test	eax, eax
jz	loc_67D2E1F4
mov	[esp+5Ch+var_30], 0
mov	[esp+5Ch+lpModuleName],	ebp
call	g_free
mov	[esp+5Ch+lpProcName], edi 
mov	[esp+5Ch+lpModuleName],	ebx 
call	GetProcAddress
sub	esp, 8
mov	ebp, eax
test	eax, eax
jz	short loc_67D2E1C4
mov	[esp+5Ch+var_50], edi
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+lpProcName], offset aThisVersionOfS 
mov	[esp+5Ch+lpModuleName],	offset aWpurple_0 
call	purple_debug_info
			
mov	eax, ebp
mov	edx, [esp+5Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2E260
add	esp, 4Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
mov	[esp+5Ch+var_50], esi
mov	[esp+5Ch+var_54], edi
mov	[esp+5Ch+lpProcName], offset aFunctionSNotFo 
mov	[esp+5Ch+lpModuleName],	offset aWpurple_0 
call	purple_debug_warning
mov	edx, [esp+5Ch+var_30]
test	edx, edx
jz	short loc_67D2E1A8
mov	[esp+5Ch+lpModuleName],	ebx 
call	FreeLibrary
push	eax
jmp	short loc_67D2E1A8
align 4
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+lpProcName], offset aSNotAlreadyLoa 
mov	[esp+5Ch+lpModuleName],	offset aWpurple_0 
call	purple_debug_warning
mov	[esp+5Ch+lpModuleName],	ebp 
call	LoadLibraryW
push	ecx
mov	ebx, eax
test	eax, eax
jz	short loc_67D2E228
mov	[esp+5Ch+var_30], 1
jmp	loc_67D2E16F
call	GetLastError
mov	[esp+5Ch+lpModuleName],	eax
call	g_win32_error_message
mov	[esp+5Ch+var_50], eax
mov	[esp+5Ch+var_54], esi
mov	[esp+5Ch+lpProcName], offset aCouldNotLoadSS 
mov	[esp+5Ch+lpModuleName],	offset aWpurple_0 
call	purple_debug_error
mov	[esp+5Ch+lpModuleName],	ebp
call	g_free
xor	ebp, ebp
jmp	loc_67D2E1A8
call	__stack_chk_fail
align 4
public wpurple_get_special_folder
			
push	ebx
sub	esp, 238h
mov	eax, ds:__stack_chk_guard
mov	[esp+23Ch+var_10], eax
xor	eax, eax
lea	ebx, [esp+23Ch+var_21A]
mov	[esp+23Ch+pszPath], ebx	
mov	[esp+23Ch+dwFlags], 0 
mov	[esp+23Ch+hToken], 0 
mov	eax, [esp+23Ch+arg_0]
mov	[esp+23Ch+csidl], eax 
mov	[esp+23Ch+hwnd], 0 
call	SHGetFolderPathW
sub	esp, 14h
test	eax, eax
js	short loc_67D2E2F4
mov	[esp+23Ch+pszPath], 0
mov	[esp+23Ch+dwFlags], 0
mov	[esp+23Ch+hToken], 0
mov	[esp+23Ch+csidl], 0FFFFFFFFh
mov	[esp+23Ch+hwnd], ebx
call	g_utf16_to_utf8
mov	edx, [esp+23Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E2F8
add	esp, 238h
pop	ebx
retn
align 4
xor	eax, eax
jmp	short loc_67D2E2DB
call	__stack_chk_fail
align 10h
public wpurple_install_dir
			
push	ebx
sub	esp, 838h
mov	eax, ds:__stack_chk_guard
mov	[esp+83Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75560
test	eax, eax
jz	short loc_67D2E340
mov	eax, ds:dword_67D75568
mov	edx, [esp+83Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2E3EA
add	esp, 838h
pop	ebx
retn
align 10h
mov	[esp+83Ch+nSize], 400h 
lea	ebx, [esp+83Ch+Filename]
mov	[esp+83Ch+lpFilename], ebx 
mov	eax, ds:hModule
mov	[esp+83Ch+hModule], eax	
call	GetModuleFileNameW
sub	esp, 0Ch
test	eax, eax
jnz	short loc_67D2E398
call	GetLastError
mov	[esp+83Ch+hModule], eax
call	g_win32_error_message
mov	ebx, eax
mov	[esp+83Ch+nSize], eax
mov	[esp+83Ch+lpFilename], offset aGetmodulefilen 
mov	[esp+83Ch+hModule], offset aWpurple_0 
call	purple_debug_error
mov	[esp+83Ch+hModule], ebx
call	g_free
xor	eax, eax
jmp	short loc_67D2E323
align 4
mov	[esp+83Ch+var_82C], 0
mov	[esp+83Ch+var_830], 0
mov	[esp+83Ch+nSize], 0
mov	[esp+83Ch+lpFilename], 0FFFFFFFFh
mov	[esp+83Ch+hModule], ebx
call	g_utf16_to_utf8
mov	ebx, eax
test	eax, eax
jz	short loc_67D2E364
mov	[esp+83Ch+hModule], eax
call	g_path_get_dirname
mov	ds:dword_67D75568, eax
mov	[esp+83Ch+hModule], ebx
call	g_free
mov	ds:dword_67D75560, 1
jmp	loc_67D2E31E
call	__stack_chk_fail
align 10h
public wpurple_lib_dir
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7556C
test	eax, eax
jz	short loc_67D2E41C
mov	eax, ds:dword_67D75570
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E44A
add	esp, 2Ch
retn
call	wpurple_install_dir
test	eax, eax
jz	short loc_67D2E446
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSPlugins 
call	g_strdup_printf
mov	ds:dword_67D75570, eax
mov	ds:dword_67D7556C, 1
jmp	short loc_67D2E40C
xor	eax, eax
jmp	short loc_67D2E40C
call	__stack_chk_fail
align 10h
public wpurple_locale_dir
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D75574
test	eax, eax
jz	short loc_67D2E47C
mov	eax, ds:dword_67D75578
			
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E4AA
add	esp, 2Ch
retn
call	wpurple_install_dir
test	eax, eax
jz	short loc_67D2E4A6
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+var_2C], offset aSLocale 
call	g_strdup_printf
mov	ds:dword_67D75578, eax
mov	ds:dword_67D75574, 1
jmp	short loc_67D2E46C
xor	eax, eax
jmp	short loc_67D2E46C
call	__stack_chk_fail
align 10h
public wpurple_data_dir
			
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	eax, ds:dword_67D7557C
test	eax, eax
jz	short loc_67D2E4D8
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E53C
add	esp, 2Ch
retn
align 4
mov	[esp+2Ch+var_2C], offset aPurplehome 
call	g_getenv_utf8
test	eax, eax
jz	short loc_67D2E514
mov	[esp+2Ch+var_2C], eax
call	g_strdup
mov	ds:dword_67D7557C, eax
			
mov	[esp+2Ch+var_24], eax
mov	[esp+2Ch+var_28], offset aPurpleSettings 
mov	[esp+2Ch+var_2C], offset aWpurple_0 
call	purple_debug_info
mov	eax, ds:dword_67D7557C
jmp	short loc_67D2E4C7
mov	[esp+2Ch+var_2C], 1Ah
call	wpurple_get_special_folder
mov	ds:dword_67D7557C, eax
test	eax, eax
jnz	short loc_67D2E4F5
mov	[esp+2Ch+var_2C], offset aC_1 
call	g_strdup
mov	ds:dword_67D7557C, eax
jmp	short loc_67D2E4F5
call	__stack_chk_fail
align 4
public wpurple_write_reg_string
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_0]
mov	ebp, [esp+4Ch+arg_8]
mov	edi, [esp+4Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	[esp+4Ch+phkResult], 0
mov	[esp+4Ch+samDesired], 0
mov	[esp+4Ch+ulOptions], 0
mov	[esp+4Ch+lpSubKey], 0FFFFFFFFh
mov	eax, [esp+4Ch+arg_4]
mov	[esp+4Ch+hKey],	eax
call	g_utf8_to_utf16
mov	ebx, eax
lea	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+phkResult], eax 
mov	[esp+4Ch+samDesired], 2	
mov	[esp+4Ch+ulOptions], 0 
mov	[esp+4Ch+lpSubKey], ebx	
mov	[esp+4Ch+hKey],	esi 
call	RegOpenKeyExW
sub	esp, 14h
test	eax, eax
jnz	loc_67D2E678
test	ebp, ebp
jz	loc_67D2E6AC
mov	[esp+4Ch+phkResult], 0
mov	[esp+4Ch+samDesired], 0
mov	[esp+4Ch+ulOptions], 0
mov	[esp+4Ch+lpSubKey], 0FFFFFFFFh
mov	[esp+4Ch+hKey],	ebp
call	g_utf8_to_utf16
mov	ebp, eax
test	edi, edi
jz	loc_67D2E6B4
mov	[esp+4Ch+phkResult], 0
mov	[esp+4Ch+samDesired], 0
mov	[esp+4Ch+ulOptions], 0
mov	[esp+4Ch+lpSubKey], 0FFFFFFFFh
mov	[esp+4Ch+hKey],	edi
call	g_utf8_to_utf16
mov	edi, eax
mov	[esp+4Ch+hKey],	eax 
call	wcslen
lea	eax, [eax+eax+1]
mov	[esp+4Ch+cbData], eax 
mov	[esp+4Ch+phkResult], edi 
mov	[esp+4Ch+samDesired], 1	
mov	[esp+4Ch+ulOptions], 0 
mov	[esp+4Ch+lpSubKey], ebp	
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+hKey],	eax 
call	RegSetValueExW
sub	esp, 18h
xor	edx, edx
test	eax, eax
setz	dl
mov	esi, edx
mov	[esp+4Ch+hKey],	edi
call	g_free
mov	[esp+4Ch+hKey],	ebp
call	g_free
jmp	short loc_67D2E67A
align 4
xor	esi, esi
mov	[esp+4Ch+hKey],	ebx
call	g_free
mov	edx, [esp+4Ch+var_24]
test	edx, edx
jz	short loc_67D2E693
mov	[esp+4Ch+hKey],	edx 
call	RegCloseKey
push	eax
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E6D3
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
align 4
xor	ebp, ebp
jmp	loc_67D2E5F1
align 4
mov	[esp+4Ch+lpSubKey], ebp	
mov	eax, [esp+4Ch+var_24]
mov	[esp+4Ch+hKey],	eax 
call	RegDeleteValueW
sub	esp, 8
test	eax, eax
setz	al
movzx	eax, al
mov	esi, eax
jmp	short loc_67D2E66B
call	__stack_chk_fail
public wpurple_read_reg_dword
push	edi
push	esi
push	ebx
sub	esp, 20h
mov	esi, [esp+2Ch+arg_8]
mov	edi, [esp+2Ch+arg_C]
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	edx, [esp+2Ch+arg_4]
mov	eax, [esp+2Ch+arg_0]
call	sub_67D2DF44
mov	ebx, eax
test	eax, eax
jz	short loc_67D2E744
lea	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+var_28], eax
mov	[esp+2Ch+hKey],	edi
lea	ecx, [esp+2Ch+var_18]
mov	edx, esi
mov	eax, ebx
call	sub_67D2DE58
xor	edx, edx
test	eax, eax
setnz	dl
mov	esi, edx
mov	[esp+2Ch+hKey],	ebx 
call	RegCloseKey
push	eax
mov	eax, esi
mov	edx, [esp+2Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2E748
add	esp, 20h
pop	ebx
pop	esi
pop	edi
retn
align 4
xor	esi, esi
jmp	short loc_67D2E72E
call	__stack_chk_fail
align 10h
public wpurple_read_reg_string
push	ebp
push	edi
push	esi
push	ebx
sub	esp, 3Ch
mov	esi, [esp+4Ch+arg_8]
mov	eax, ds:__stack_chk_guard
mov	[esp+4Ch+var_20], eax
xor	eax, eax
mov	edx, [esp+4Ch+arg_4]
mov	eax, [esp+4Ch+arg_0]
call	sub_67D2DF44
mov	ebx, eax
test	eax, eax
jz	loc_67D2E838
lea	ebp, [esp+4Ch+var_24]
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+hKey],	0
lea	ecx, [esp+4Ch+var_28]
mov	edx, esi
call	sub_67D2DE58
test	eax, eax
jnz	short loc_67D2E7C0
xor	esi, esi
mov	[esp+4Ch+hKey],	ebx 
call	RegCloseKey
push	eax
mov	eax, esi
mov	edx, [esp+4Ch+var_20]
xor	edx, ds:__stack_chk_guard
jnz	loc_67D2E83F
add	esp, 3Ch
pop	ebx
pop	esi
pop	edi
pop	ebp
retn
cmp	[esp+4Ch+var_28], 1
jnz	short loc_67D2E79B
mov	eax, [esp+4Ch+var_24]
inc	eax
shr	eax, 1
lea	eax, [eax+eax+2]
mov	[esp+4Ch+hKey],	eax
call	g_malloc
mov	edi, eax
mov	[esp+4Ch+var_48], ebp
mov	[esp+4Ch+hKey],	eax
lea	ecx, [esp+4Ch+var_28]
mov	edx, esi
mov	eax, ebx
call	sub_67D2DE58
test	eax, eax
jnz	short loc_67D2E800
xor	esi, esi
mov	[esp+4Ch+hKey],	edi
call	g_free
jmp	short loc_67D2E79D
mov	eax, [esp+4Ch+var_24]
shr	eax, 1
mov	word ptr [edi+eax*2], 0
mov	[esp+4Ch+var_3C], 0
mov	[esp+4Ch+var_40], 0
mov	[esp+4Ch+var_44], 0
mov	[esp+4Ch+var_48], 0FFFFFFFFh
mov	[esp+4Ch+hKey],	edi
call	g_utf16_to_utf8
mov	esi, eax
jmp	short loc_67D2E7F6
xor	esi, esi
jmp	loc_67D2E7A6
call	__stack_chk_fail
public wpurple_init
sub	esp, 1CCh
mov	eax, ds:__stack_chk_guard
mov	[esp+1CCh+var_10], eax
xor	eax, eax
mov	eax, ds:g_threads_got_initialized
mov	edx, [eax]
test	edx, edx
jz	loc_67D2E934
mov	[esp+1CCh+lpWSAData], offset aWpurple_initSt 
mov	dword ptr [esp+1CCh+wVersionRequested],	offset aWpurple_0 
call	purple_debug_info
mov	[esp+1CCh+lpWSAData], offset aLibpurpleVer_3 
mov	dword ptr [esp+1CCh+wVersionRequested],	offset aWpurple_0 
call	purple_debug_info
mov	eax, ds:glib_micro_version
mov	eax, [eax]
mov	[esp+1CCh+var_1BC], eax
mov	eax, ds:glib_minor_version
mov	eax, [eax]
mov	[esp+1CCh+var_1C0], eax
mov	eax, ds:glib_major_version
mov	eax, [eax]
mov	[esp+1CCh+var_1C4], eax
mov	[esp+1CCh+lpWSAData], offset aGlibU_U_U	
mov	dword ptr [esp+1CCh+wVersionRequested],	offset aWpurple_0 
call	purple_debug_info
lea	eax, [esp+1CCh+WSAData]
mov	[esp+1CCh+lpWSAData], eax 
mov	dword ptr [esp+1CCh+wVersionRequested],	202h 
call	WSAStartup
sub	esp, 8
mov	eax, dword ptr [esp+1CCh+WSAData.wVersion]
cmp	al, 2
jz	short loc_67D2E928
mov	[esp+1CCh+lpWSAData], offset aCouldNotFindAU 
mov	dword ptr [esp+1CCh+wVersionRequested],	offset aWpurple_0 
call	purple_debug_error
call	WSACleanup
mov	[esp+1CCh+lpWSAData], offset aWpurple_initEn 
mov	dword ptr [esp+1CCh+wVersionRequested],	offset aWpurple_0 
call	purple_debug_info
mov	eax, [esp+1CCh+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2E945
add	esp, 1CCh
retn
align 4
shr	ax, 8
cmp	al, 2
jnz	short loc_67D2E8E3
jmp	short loc_67D2E8FC
align 4
mov	dword ptr [esp+1CCh+wVersionRequested],	0
call	g_thread_init
jmp	loc_67D2E867
call	__stack_chk_fail
align 4
public wpurple_cleanup
sub	esp, 2Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_28], offset aWpurple_cleanu 
mov	[esp+2Ch+var_2C], offset aWpurple_0 
call	purple_debug_info
call	WSACleanup
mov	eax, ds:dword_67D7557C
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D75568
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D75570
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	eax, ds:dword_67D75578
mov	[esp+2Ch+var_2C], eax
call	g_free
mov	ds:dword_67D7557C, 0
mov	ds:dword_67D75568, 0
mov	ds:dword_67D75570, 0
mov	ds:dword_67D75578, 0
mov	ds:hModule, 0
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jnz	short loc_67D2E9E9
add	esp, 2Ch
retn
call	__stack_chk_fail
align 10h
public wpurple_get_tz_offset
sub	esp, 0CCh
mov	eax, ds:__stack_chk_guard
mov	[esp+0CCh+var_10], eax
xor	eax, eax
lea	eax, [esp+0CCh+TimeZoneInformation]
mov	[esp+0CCh+lpTimeZoneInformation], eax 
call	GetTimeZoneInformation
push	ecx
cmp	eax, 0FFFFFFFFh
jz	short loc_67D2EA54
mov	edx, [esp+0CCh+TimeZoneInformation.Bias]
lea	edx, [edx+edx*2]
lea	edx, [edx+edx*4]
shl	edx, 2
neg	edx
cmp	eax, 2
jnz	short loc_67D2EA3C
mov	eax, [esp+0CCh+TimeZoneInformation.DaylightBias]
lea	eax, [eax+eax*2]
lea	eax, [eax+eax*4]
shl	eax, 2
sub	edx, eax
			
mov	eax, edx
mov	edx, [esp+0CCh+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2EA5B
add	esp, 0CCh
retn
mov	edx, 0FFFFFFFFh
jmp	short loc_67D2EA3C
call	__stack_chk_fail
			
sub	esp, 1Ch
mov	eax, ds:__stack_chk_guard
mov	[esp+1Ch+var_10], eax
xor	eax, eax
mov	eax, [esp+1Ch+arg_0]
mov	ds:hModule, eax
mov	eax, 1
mov	edx, [esp+1Ch+var_10]
xor	edx, ds:__stack_chk_guard
jnz	short loc_67D2EA8E
add	esp, 1Ch
retn	0Ch
call	__stack_chk_fail
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
jmp	ds:g_direct_equal
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
jmp	ds:g_int_equal
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 10h
public TlsCallback_1
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
test	eax, eax
jz	short loc_67D2F360
cmp	eax, 3
jz	short loc_67D2F360
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
			
mov	edx, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_14], edx
mov	[esp+1Ch+var_1C], eax
call	sub_67D2F9A0
mov	eax, 1
add	esp, 1Ch
retn	0Ch
align 10h
public TlsCallback_0
			
push	esi
push	ebx
sub	esp, 14h
cmp	ds:dword_67D75598, 2
mov	eax, [esp+1Ch+arg_4]
jz	short loc_67D2F3AC
mov	ds:dword_67D75598, 2
cmp	eax, 2
jz	short loc_67D2F3C3
cmp	eax, 1
jz	short loc_67D2F3F8
			
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	esi, offset dword_67D89014
sub	esi, offset dword_67D89014
sar	esi, 2
test	esi, esi
jle	short loc_67D2F3B6
xor	ebx, ebx
mov	eax, ds:dword_67D89014[ebx*4]
test	eax, eax
jz	short loc_67D2F3E4
call	eax 
add	ebx, 1
cmp	ebx, esi
jnz	short loc_67D2F3D7
add	esp, 14h
mov	eax, 1
pop	ebx
pop	esi
retn	0Ch
mov	eax, [esp+1Ch+arg_8]
mov	[esp+1Ch+var_18], 1
mov	[esp+1Ch+var_14], eax
mov	eax, [esp+1Ch+arg_0]
mov	[esp+1Ch+var_1C], eax
call	sub_67D2F9A0
jmp	short loc_67D2F3B6
align 10h
xor	eax, eax
retn
align 10h
			
push	ebx
sub	esp, 28h
mov	ebx, ds:_iob
lea	eax, [esp+2Ch+arg_4]
mov	[esp+2Ch+Count], 17h 
mov	[esp+2Ch+Size],	1 
add	ebx, 40h
mov	[esp+2Ch+File],	ebx 
mov	[esp+2Ch+Str], offset aMingwRuntimeFa 
mov	[esp+2Ch+ArgList], eax
call	fwrite
mov	eax, [esp+2Ch+ArgList]
mov	[esp+2Ch+Str], ebx 
mov	[esp+2Ch+Count], eax 
mov	eax, [esp+2Ch+Format]
mov	[esp+2Ch+Size],	eax 
call	vfprintf
call	abort
align 10h
			
sub	esp, 5Ch
mov	[esp+5Ch+var_10], ebx
mov	ebx, eax
lea	eax, [esp+5Ch+Buffer]
mov	[esp+5Ch+dwLength], 1Ch	
mov	[esp+5Ch+lpBuffer], eax	
mov	[esp+5Ch+lpAddress], ebx 
mov	[esp+5Ch+var_C], esi
mov	esi, edx
mov	[esp+5Ch+var_8], edi
mov	edi, ecx
mov	[esp+5Ch+var_4], ebp
call	VirtualQuery
sub	esp, 0Ch
test	eax, eax
jz	loc_67D2F586
mov	eax, [esp+5Ch+Buffer.Protect]
cmp	eax, 4
jnz	short loc_67D2F500
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
call	memcpy
			
mov	ebx, [esp+5Ch+var_10]
mov	esi, [esp+5Ch+var_C]
mov	edi, [esp+5Ch+var_8]
mov	ebp, [esp+5Ch+var_4]
add	esp, 5Ch
retn
align 10h
cmp	eax, 40h
jz	short loc_67D2F4D5
mov	eax, [esp+5Ch+Buffer.RegionSize]
lea	ebp, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], 40h	
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
mov	eax, [esp+5Ch+Buffer.Protect]
mov	[esp+5Ch+dwLength], edi	
mov	[esp+5Ch+lpBuffer], esi	
mov	[esp+5Ch+lpAddress], ebx 
cmp	eax, 40h
setnz	[esp+5Ch+var_3E]
cmp	eax, 4
setnz	[esp+5Ch+var_3D]
call	memcpy
cmp	[esp+5Ch+var_3D], 0
jz	short loc_67D2F4E5
cmp	[esp+5Ch+var_3E], 0
jz	short loc_67D2F4E5
mov	eax, [esp+5Ch+flOldProtect]
mov	[esp+5Ch+lpflOldProtect], ebp 
mov	[esp+5Ch+dwLength], eax	
mov	eax, [esp+5Ch+Buffer.RegionSize]
mov	[esp+5Ch+lpBuffer], eax	
mov	eax, [esp+5Ch+Buffer.BaseAddress]
mov	[esp+5Ch+lpAddress], eax 
call	VirtualProtect
sub	esp, 10h
jmp	loc_67D2F4E5
mov	[esp+5Ch+dwLength], ebx
mov	[esp+5Ch+lpBuffer], 1Ch	
mov	[esp+5Ch+lpAddress], offset aVirtualqueryFa 
call	sub_67D2F430
align 10h
mov	eax, ds:dword_67D75590
test	eax, eax
jz	short loc_67D2F5B0
retn
align 10h
mov	eax, offset dword_67D58498
sub	eax, offset dword_67D4A158
cmp	eax, 7
mov	ds:dword_67D75590, 1
jle	short locret_67D2F5A9
sub	esp, 2Ch
cmp	eax, 0Bh
mov	[esp+2Ch+var_C], ebx
mov	[esp+2Ch+var_8], esi
mov	[esp+2Ch+var_4], edi
jle	loc_67D2F6C0
mov	esi, ds:dword_67D4A158
test	esi, esi
jnz	loc_67D2F674
mov	ebx, ds:dword_67D4A15C
test	ebx, ebx
jnz	short loc_67D2F674
mov	ecx, ds:dword_67D4A160
mov	ebx, offset dword_67D4A164
test	ecx, ecx
jz	loc_67D2F6C5
mov	ebx, offset dword_67D4A158
mov	eax, [ebx+8]
cmp	eax, 1
jnz	loc_67D2F764
			
add	ebx, 0Ch
cmp	ebx, offset dword_67D58498
jnb	loc_67D2F6AF
movzx	edx, byte ptr [ebx+8]
mov	esi, [ebx+4]
mov	ecx, [ebx]
cmp	edx, 10h
lea	eax, [esi+67CC0000h]
mov	edi, [ecx+67CC0000h]
jz	loc_67D2F6D8
cmp	edx, 20h
jz	loc_67D2F743
cmp	edx, 8
jz	loc_67D2F710
mov	dword ptr [esp+2Ch+var_28], edx	
mov	[esp+2Ch+Format], offset aUnknownPseudoR 
mov	[esp+2Ch+var_14], 0
call	sub_67D2F430
			
mov	ebx, offset dword_67D4A158
			
cmp	ebx, offset dword_67D58498
jnb	short loc_67D2F6AF
mov	edx, [ebx+4]
mov	ecx, 4		
lea	eax, [edx+67CC0000h]
mov	edx, [edx+67CC0000h]
add	edx, [ebx]
add	ebx, 8
mov	[esp+2Ch+Src], edx
lea	edx, [esp+2Ch+Src] 
call	sub_67D2F490
cmp	ebx, offset dword_67D58498
jb	short loc_67D2F681
			
mov	ebx, [esp+2Ch+var_C]
mov	esi, [esp+2Ch+var_8]
mov	edi, [esp+2Ch+var_4]
add	esp, 2Ch
retn
align 10h
mov	ebx, offset dword_67D4A158
mov	edx, [ebx]
test	edx, edx
jnz	short loc_67D2F679
mov	eax, [ebx+4]
test	eax, eax
jz	loc_67D2F611
jmp	short loc_67D2F679
movzx	esi, word ptr [esi+67CC0000h]
test	si, si
movzx	edx, si
jns	short loc_67D2F6ED
or	edx, 0FFFF0000h
sub	edx, ecx
mov	ecx, 2		
sub	edx, 67CC0000h
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_67D2F490
jmp	loc_67D2F61D
align 10h
movzx	edx, byte ptr [eax]
test	dl, dl
movzx	esi, dl
jns	short loc_67D2F720
or	esi, 0FFFFFF00h
mov	edx, esi
sub	edx, 67CC0000h
sub	edx, ecx
mov	ecx, 1		
add	edx, edi
mov	[esp+2Ch+var_14], edx
lea	edx, [esp+2Ch+var_14] 
call	sub_67D2F490
jmp	loc_67D2F61D
add	ecx, 67CC0000h
sub	edi, ecx
mov	ecx, 4		
add	edi, [eax]
lea	edx, [esp+2Ch+var_14] 
mov	[esp+2Ch+var_14], edi
call	sub_67D2F490
jmp	loc_67D2F61D
mov	dword ptr [esp+2Ch+var_28], eax	
mov	[esp+2Ch+Format], offset aUnknownPseud_0 
call	sub_67D2F430
align 10h
mov	eax, off_67D30A60
mov	eax, [eax]
test	eax, eax
jz	short locret_67D2F7AA
sub	esp, 0Ch
xchg	ax, ax
call	eax
mov	eax, off_67D30A60
lea	edx, [eax+4]
mov	eax, [eax+4]
mov	off_67D30A60, edx
test	eax, eax
jnz	short loc_67D2F790
add	esp, 0Ch
rep retn
align 10h
push	ebx
sub	esp, 18h
mov	ebx, ds:dword_67D2FDF0
cmp	ebx, 0FFFFFFFFh
jz	short loc_67D2F7E3
test	ebx, ebx
jz	short loc_67D2F7D2
call	ds:dword_67D2FDF0[ebx*4]
sub	ebx, 1
lea	esi, [esi+0]
jnz	short loc_67D2F7C3
mov	[esp+1Ch+var_1C], offset loc_67D2F780
call	sub_67CC1160
add	esp, 18h
pop	ebx
retn
xor	ebx, ebx
jmp	short loc_67D2F7E9
mov	ebx, eax
lea	eax, [ebx+1]
mov	edx, ds:dword_67D2FDF0[eax*4]
test	edx, edx
jnz	short loc_67D2F7E7
jmp	short loc_67D2F7BF
align 10h
mov	ecx, ds:dword_67D75594
test	ecx, ecx
jz	short loc_67D2F810
rep retn
align 10h
mov	ds:dword_67D75594, 1
jmp	short loc_67D2F7B0
align 10h
			
push	esi
push	ebx
sub	esp, 14h
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	EnterCriticalSection
mov	ebx, ds:dword_67D755B8
sub	esp, 4
test	ebx, ebx
jz	short loc_67D2F86B
xchg	ax, ax
mov	eax, [ebx]
mov	[esp+1Ch+lpCriticalSection], eax 
call	TlsGetValue
sub	esp, 4
mov	esi, eax
call	GetLastError
test	eax, eax
jnz	short loc_67D2F864
test	esi, esi
jz	short loc_67D2F864
mov	eax, [ebx+4]
mov	[esp+1Ch+lpCriticalSection], esi
call	eax
			
mov	ebx, [ebx+8]
test	ebx, ebx
jnz	short loc_67D2F840
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	LeaveCriticalSection
sub	esp, 4
add	esp, 14h
pop	ebx
pop	esi
retn
sub	esp, 1Ch
mov	eax, ds:dword_67D7559C
mov	[esp+18h], esi
xor	esi, esi
mov	[esp+14h], ebx
test	eax, eax
jnz	short loc_67D2F8A4
mov	eax, esi
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	dword ptr [esp+4], 0Ch
mov	dword ptr [esp], 1
call	calloc
test	eax, eax
mov	ebx, eax
jz	short loc_67D2F905
mov	eax, [esp+20h]
mov	dword ptr [esp], offset	CriticalSection
mov	[ebx], eax
mov	eax, [esp+24h]
mov	[ebx+4], eax
call	EnterCriticalSection
mov	eax, ds:dword_67D755B8
mov	ds:dword_67D755B8, ebx
mov	[ebx+8], eax
sub	esp, 4
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
mov	eax, esi
sub	esp, 4
mov	ebx, [esp+14h]
mov	esi, [esp+18h]
add	esp, 1Ch
retn
mov	esi, 0FFFFFFFFh
jmp	short loc_67D2F896
align 10h
push	ebx
sub	esp, 18h
mov	eax, ds:dword_67D7559C
mov	ebx, [esp+20h]
test	eax, eax
jnz	short loc_67D2F928
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	dword ptr [esp], offset	CriticalSection
call	EnterCriticalSection
mov	edx, ds:dword_67D755B8
sub	esp, 4
test	edx, edx
jz	short loc_67D2F95F
mov	eax, [edx]
cmp	eax, ebx
jnz	short loc_67D2F958
jmp	short loc_67D2F994
align 10h
mov	ecx, [eax]
cmp	ecx, ebx
jz	short loc_67D2F975
mov	edx, eax
mov	eax, [edx+8]
test	eax, eax
jnz	short loc_67D2F950
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
add	esp, 18h
xor	eax, eax
pop	ebx
retn
mov	ecx, [eax+8]
mov	[edx+8], ecx
mov	[esp], eax
call	free
mov	dword ptr [esp], offset	CriticalSection
call	LeaveCriticalSection
sub	esp, 4
jmp	short loc_67D2F96E
mov	eax, [edx+8]
mov	ds:dword_67D755B8, eax
mov	eax, edx
jmp	short loc_67D2F97B
			
sub	esp, 1Ch
mov	eax, [esp+1Ch+arg_4]
cmp	eax, 1
jz	short loc_67D2F9F0
jb	short loc_67D2F9C0
cmp	eax, 3
jz	short loc_67D2FA10
			
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_67D7559C
test	eax, eax
jnz	short loc_67D2FA31
mov	eax, ds:dword_67D7559C
cmp	eax, 1
jnz	short loc_67D2F9B3
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
mov	ds:dword_67D7559C, 0
call	DeleteCriticalSection
sub	esp, 4
jmp	short loc_67D2F9B3
align 10h
mov	eax, ds:dword_67D7559C
test	eax, eax
jz	short loc_67D2FA20
mov	ds:dword_67D7559C, 1
mov	eax, 1
add	esp, 1Ch
retn
align 10h
mov	eax, ds:dword_67D7559C
test	eax, eax
jz	short loc_67D2F9B3
call	sub_67D2F820
jmp	short loc_67D2F9B3
mov	[esp+1Ch+lpCriticalSection], offset CriticalSection 
call	InitializeCriticalSection
sub	esp, 4
jmp	short loc_67D2F9F9
call	sub_67D2F820
jmp	short loc_67D2F9C9
align 10h
			
push	ecx
push	eax
cmp	eax, 1000h
lea	ecx, [esp+8+arg_0]
jb	short loc_67D2FA62
sub	ecx, 1000h
or	dword ptr [ecx], 0
sub	eax, 1000h
cmp	eax, 1000h
ja	short loc_67D2FA4D
sub	ecx, eax
or	dword ptr [ecx], 0
pop	eax
pop	ecx
retn
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
align 4
			
push	esi
push	ebx
sub	esp, 24h
mov	ebx, eax
mov	esi, edx
mov	eax, ds:__stack_chk_guard
mov	[esp+2Ch+var_10], eax
xor	eax, eax
mov	[esp+2Ch+var_14], edx
mov	[esp+2Ch+Format], offset asc_67D3EA6A 
mov	[esp+2Ch+Src], ebx
call	g_strrstr
test	eax, eax
jz	short loc_67D2FD97
mov	byte ptr [eax],	0
cmp	byte ptr [eax+1], 0
jz	short loc_67D2FD8C
lea	edx, [esp+2Ch+var_14]
mov	[esp+2Ch+var_24], edx
mov	[esp+2Ch+Format], offset aD_2 
lea	ecx, [eax+1]
mov	[esp+2Ch+Src], ecx 
call	sscanf
cmp	[esp+2Ch+var_14], 0
jnz	short loc_67D2FD97
mov	[esp+2Ch+var_14], esi
			
mov	[esp+2Ch+Format], ebx
mov	[esp+2Ch+Src], offset dword_67D722AC
call	purple_proxy_info_set_host
mov	eax, [esp+2Ch+var_14]
mov	[esp+2Ch+Format], eax
mov	[esp+2Ch+Src], offset dword_67D722AC
call	purple_proxy_info_set_port
mov	eax, [esp+2Ch+var_10]
xor	eax, ds:__stack_chk_guard
jz	short loc_67D2FDCC
call	__stack_chk_fail
add	esp, 24h
pop	ebx
pop	esi
retn
align 4
push	ebp
mov	ebp, esp
sub	esp, 18h
call	sub_67CC11C0
mov	[esp+18h+var_18], offset sub_67CC124C
call	sub_67CC1160
leave
retn
align 10h
			
dd offset sub_67D2FDD4
dd 0
dd 0FFFFFFFFh
assume cs:_data

			
align 20h
			
dd offset aSingleuse	
dd offset sub_67CD33EC
dd offset sub_67CD236C
align 20h
			
			
dd offset aCa		
dd offset aCertificateAut 
align 10h
dd offset sub_67CD482C
dd offset loc_67CD2558
dd offset sub_67CD479C
dd offset sub_67CD45A8
dd offset sub_67CD49B0
dd offset sub_67CD46D0
dd offset loc_67CD4648
align 20h
			
			
dd offset aTls_peers	
dd offset aSslPeersCache 
align 10h
dd offset sub_67CD3C78
align 8
dd offset sub_67CD3B24
dd offset sub_67CD4B10
dd offset sub_67CD4A18
dd offset sub_67CD3BA8
dd offset loc_67CD3A64
align 20h
			
			
dd offset aTls_cached_0	
dd offset sub_67CD5B54
dd offset sub_67CD2794
align 20h
dd offset loc_67CD99E4
align 10h
dd offset loc_67CD9958
align 10h
dd offset loc_67CD97F8
dd offset loc_67CD96E0
align 10h
dd offset loc_67CD9678
align 40h
dd offset loc_67CD99A0
align 10h
dd offset loc_67CD9910
dd offset sub_67CDA0EC
align 10h
dd offset loc_67CD9DD8
dd offset loc_67CD9A28
align 10h
dd offset loc_67CD95B8
align 8
dd offset loc_67CD9580
dd offset loc_67CD954C
dd 8 dup(0)
dd offset sub_67CDA630
dd offset sub_67CDA604
dd offset sub_67CDA4E8
align 8
dd offset loc_67CDA420
dd offset loc_67CDA3D8
dd 8 dup(0)
dd offset loc_67CDA1B4
align 20h
dd offset loc_67CDA22C
dd offset sub_67CDA5D8
dd offset sub_67CDA4E8
align 8
dd offset loc_67CDA420
dd offset loc_67CDA38C
align 40h
dd offset loc_67CDA1DC
align 20h
dd offset sub_67CDA674
dd offset sub_67CDA5AC
dd offset sub_67CDA4E8
align 8
dd offset loc_67CDA420
dd offset loc_67CDA340
dd 8 dup(0)
dd offset loc_67CDA204
align 20h
dd offset sub_67CDAB98
dd offset sub_67CDAB44
dd offset sub_67CDAAD0
dd offset sub_67CDA764
align 8
dd offset sub_67CDAC88
dd offset sub_67CDA7B0
dd 4 dup(0)
dd offset sub_67CDAA84
align 10h
dd offset sub_67CDA730
dd offset sub_67CDA8CC
align 20h
dd offset loc_67CDB414
dd offset loc_67CDB294
dd offset loc_67CDB3BC
align 8
dd offset loc_67CDB494
dd offset loc_67CDB2EC
dd 8 dup(0)
dd offset loc_67CDB26C
align 20h
dd offset loc_67CDB7D0
dd offset loc_67CDB77C
dd offset loc_67CDB910
dd offset loc_67CDB734
align 10h
dd offset loc_67CDB65C
align 10h
dd offset loc_67CDB5C8
dd offset loc_67CDB888
dd 0Ah dup(0)
			
			
dd offset sub_67CFA3FC
dd offset loc_67CF94C4
dd 2 dup(0)
dd offset sub_67CFC58C
align 20h
			
dd 0FFFFFFB5h
dd 0FFFFFE70h, 0
			
			
			
dd 0Ah,	3 dup(0)
			
			
			
align 4
dd 3 dup(0)
			
			
			
			
			
align 4
dd 4 dup(0)
			
align 10h
dd 3 dup(0)
			
align 10h
dd 3 dup(0)
			
dd offset sub_67D299C0
dd 4 dup(0)
dd offset sub_67D29640
dd 4 dup(0)
align 4
dd offset loc_67D2A53C
dd offset sub_67D295E0
dd offset sub_67D294FC
dd offset loc_67D2BF88
dd 0
dd offset sub_67D2B464
dd offset loc_67D2C32C
dd offset sub_67D2B380
dd offset sub_67D2B274
dd offset sub_67D2B250
dd offset sub_67D2B768
dd offset loc_67D2C298
dd offset sub_67D2B52C
align 20h
			
			
			
			
			
			
dd offset aAfghanistanDay 
dd offset aAft		
dd offset aAft		
dd offset aAlaskanStandar 
dd offset aAlaskanDayligh 
dd offset aAkst		
dd offset aAkdt		
dd offset aArabStandardTi 
dd offset aArabDaylightTi 
dd offset aAst		
dd offset aAst		
dd offset aArabianStandar 
dd offset aArabianDayligh 
dd offset aGst		
dd offset aGst		
dd offset aArabicStandard 
dd offset aArabicDaylight 
dd offset aAst		
dd offset aAdt		
dd offset aAtlanticStanda 
dd offset aAtlanticDaylig 
dd offset aAst		
dd offset aAdt		
dd offset aAusCentralStan 
dd offset aAusCentralDayl 
dd offset aCst		
dd offset aCst		
dd offset aAusEasternStan 
dd offset aAusEasternDayl 
dd offset aEst		
dd offset aEst		
dd offset aAzoresStandard 
dd offset aAzoresDaylight 
dd offset aAzot		
dd offset aAzost	
dd offset aCanadaCentralS 
dd offset aCanadaCentralD 
dd offset aCst		
dd offset aMdt		
dd offset aCapeVerdeStand 
dd offset aCapeVerdeDayli 
dd offset aCvt		
dd offset aCvst		
dd offset aCaucasusStanda 
dd offset aCaucasusDaylig 
dd offset aAzt		
dd offset aAzst		
dd offset aCen_AustraliaS 
dd offset aCen_AustraliaD 
dd offset aCst		
dd offset aCst		
dd offset aCentralAmerica 
dd offset aCentralAmeri_0 
dd offset aCst		
dd offset aCdt		
dd offset aCentralAsiaSta 
dd offset aCentralAsiaDay 
dd offset aBdt		
dd offset aBdt		
dd offset aCentralEuropeS 
dd offset aCentralEuropeD 
dd offset aCet		
dd offset aCest		
dd offset aCentralEuropea 
dd offset aCentralEurop_0 
dd offset aCet		
dd offset aCest		
dd offset aCentralPacific 
dd offset aCentralPacif_0 
dd offset aNct		
dd offset aNcst		
dd offset aCentralStandar 
dd offset aCentralDayligh 
dd offset aCst		
dd offset aCdt		
dd offset aChinaStandardT 
dd offset aChinaDaylightT 
dd offset aHkt		
dd offset aHkst		
dd offset aDatelineStanda 
dd offset aDatelineDaylig 
dd offset aGmt12	
dd offset aGmt12	
dd offset aE_AfricaStanda 
dd offset aE_AfricaDaylig 
dd offset aEat		
dd offset aEat		
dd offset aE_AustraliaSta 
dd offset aE_AustraliaDay 
dd offset aEst		
dd offset aEst		
dd offset aE_EuropeStanda 
dd offset aE_EuropeDaylig 
dd offset aEet		
dd offset aEest		
dd offset aE_SouthAmerica 
dd offset aE_SouthAmeri_0 
dd offset aBrt		
dd offset aBrst		
dd offset aEasternStandar 
dd offset aEasternDayligh 
dd offset aEst		
dd offset aEdt		
dd offset aEgyptStandardT 
dd offset aEgyptDaylightT 
dd offset aEet		
dd offset aEest		
dd offset aEkaterinburgSt 
dd offset aEkaterinburgDa 
dd offset aYekt		
dd offset aYekst	
dd offset aFijiStandardTi 
dd offset aFijiDaylightTi 
dd offset aFjt		
dd offset aFjst		
dd offset aFleStandardTim 
dd offset aFleDaylightTim 
dd offset aEet		
dd offset aEest		
dd offset aGmtStandardTim 
dd offset aGmtDaylightTim 
dd offset aGmt		
dd offset aIst		
dd offset aGreenlandStand 
dd offset aGreenlandDayli 
dd offset aWgt		
dd offset aWgst		
dd offset aGreenwichStand 
dd offset aGreenwichDayli 
dd offset aWet		
dd offset aWest		
dd offset aGtbStandardTim 
dd offset aGtbDaylightTim 
dd offset aEet		
dd offset aEest		
dd offset aHawaiianStanda 
dd offset aHawaiianDaylig 
dd offset aHst		
dd offset aHpt		
dd offset aIndiaStandardT 
dd offset aIndiaDaylightT 
dd offset aIst		
dd offset aIst		
dd offset aIranStandardTi 
dd offset aIranDaylightTi 
dd offset aIrst		
dd offset aIrdt		
dd offset aJerusalemStand 
dd offset aJerusalemDayli 
dd offset aIst		
dd offset aIdt		
dd offset aKoreaStandardT 
dd offset aKoreaDaylightT 
dd offset aKst		
dd offset aKdt		
dd offset aMexicoStandard 
dd offset aMexicoDaylight 
dd offset aCst		
dd offset aCdt		
dd offset aMexicoStandard 
dd offset aMexicoDaylight 
dd offset aBot		
dd offset aBost		
dd offset aMidAtlanticSta 
dd offset aMidAtlanticDay 
dd offset aGst		
dd offset aGst		
dd offset aMountainStanda 
dd offset aMountainDaylig 
dd offset aMst		
dd offset aMdt		
dd offset aMyanmarStandar 
dd offset aMyanmarDayligh 
dd offset aMmt		
dd offset aMmt		
dd offset aN_CentralAsiaS 
dd offset aN_CentralAsiaD 
dd offset aAlmt		
dd offset aAlmst	
dd offset aNepalStandardT 
dd offset aNepalDaylightT 
dd offset aNpt		
dd offset aNpt		
dd offset aNewZealandStan 
dd offset aNewZealandDayl 
dd offset aNzst		
dd offset aNzdt		
dd offset aNewfoundlandSt 
dd offset aNewfoundlandDa 
dd offset aNst		
dd offset aNdt		
dd offset aNorthAsiaEastS 
dd offset aNorthAsiaEastD 
dd offset aIrkt		
dd offset aIrkst	
dd offset aNorthAsiaStand 
dd offset aNorthAsiaDayli 
dd offset aKrat		
dd offset aKrast	
dd offset aPacificSaStand 
dd offset aPacificSaDayli 
dd offset aClt		
dd offset aClst		
dd offset aPacificStandar 
dd offset aPacificDayligh 
dd offset aPst		
dd offset aPdt		
dd offset aRomanceStandar 
dd offset aRomanceDayligh 
dd offset aCet		
dd offset aCest		
dd offset aRussianStandar 
dd offset aRussianDayligh 
dd offset aMsk		
dd offset aMsd		
dd offset aSaEasternStand 
dd offset aSaEasternDayli 
dd offset aArt		
dd offset aArst		
dd offset aSaPacificStand 
dd offset aSaPacificDayli 
dd offset aCot		
dd offset aCost		
dd offset aSaWesternStand 
dd offset aSaWesternDayli 
dd offset aVet		
dd offset aVet		
dd offset aSamoaStandardT 
dd offset aSamoaDaylightT 
dd offset aSst		
dd offset aNdt		
dd offset aSeAsiaStandard 
dd offset aSeAsiaDaylight 
dd offset aIct		
dd offset aIct		
dd offset aMalayPeninsula 
dd offset aMalayPeninsu_0 
dd offset aMyt		
dd offset aMalst	
dd offset aSouthAfricaSta 
dd offset aSouthAfricaDay 
dd offset aCat		
dd offset aCat		
dd offset aSriLankaStanda 
dd offset aSriLankaDaylig 
dd offset aLkt		
dd offset aIst		
dd offset aTaipeiStandard 
dd offset aTaipeiDaylight 
dd offset aCst		
dd offset aCdt		
dd offset aTasmaniaStanda 
dd offset aTasmaniaDaylig 
dd offset aEst		
dd offset aEst		
dd offset aTokyoStandardT 
dd offset aTokyoDaylightT 
dd offset aJst		
dd offset aJdt		
dd offset aTongaStandardT 
dd offset aTongaDaylightT 
dd offset aTot		
dd offset aTost		
dd offset aUsEasternStand 
dd offset aUsEasternDayli 
dd offset aEst		
dd offset aEdt		
dd offset aUsMountainStan 
dd offset aUsMountainDayl 
dd offset aMst		
dd offset aMdt		
dd offset aVladivostokSta 
dd offset aVladivostokDay 
dd offset aVlat		
dd offset aVlast	
dd offset aW_AustraliaSta 
dd offset aW_AustraliaDay 
dd offset aWst		
dd offset aWst		
dd offset aW_CentralAfric 
dd offset aW_CentralAfr_0 
dd offset aWat		
dd offset aWat		
dd offset aW_EuropeStanda 
dd offset aW_EuropeDaylig 
dd offset aCet		
dd offset aCest		
dd offset aWestAsiaStanda 
dd offset aWestAsiaDaylig 
dd offset aPkt		
dd offset aPkst		
dd offset aWestPacificSta 
dd offset aWestPacificDay 
dd offset aChst		
dd offset aChst		
dd offset aYakutskStandar 
dd offset aYakutskDayligh 
dd offset aYakt		
dd offset aYakst	
dd 8 dup(0)
			
			
align 800h
assume cs:_rdata

			
align 20h
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
align 4
			
			
			
align 4
			
align 4
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
			
			
			
align 4
			
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
db 0
align 10h
			
db ' information for %s',0Ah,0
align 4
			
			
align 10h
			
			
			
			
align 10h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
			
			
			
align 4
			
			
			
align 20h
			
			
			
			
align 10h
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
align 4
			
align 20h
			
			
align 10h
			
			
			
			
			
align 10h
			
			
			
align 4
			
			
align 10h
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
align 20h
			
			
			
			
			
align 10h
			
			
			
			
align 4
			
			
			
			
			
			
align 10h
			
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 4
			
			
align 20h
			
			
align 4
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 4
			
			
			
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
			
			
align 4
			
align 10h
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
			
			
align 4
			
db 'ly is not what you want!',0Ah,0
			
			
align 10h
			
			
			
align 20h
			
			
			
			
align 4
			
align 4
			
			
			
			
align 20h
			
			
			
			
			
			
			
align 20h
			
			
align 10h
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
align 20h
			
			
			
			
			
align 4
			
db 'name was: %s',0Ah,0
align 10h
			
align 4
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 10h
			
			
			
align 10h
			
align 20h
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 4
			
align 20h
			
db 'd.',0
			
align 4
			
db 'rify it is currently trusted.',0
align 4
			
db 'date and time are accurate.',0
align 4
			
db 'Check that your computer',27h,'s date and time are accurate.',0
			
			
db 'nnot be validated.',0
			
align 4
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
align 10h
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
db ':',0
align 4
db 'Fingerprint (SHA1): %s',0
align 4
			
align 4
			
align 4
			
			
align 4
			
db 'Chain is INVALID',0Ah,0
align 4
			
db 'Chain is INVALID',0Ah,0
align 4
			
db 'Chain is INVALID',0Ah,0
			
align 4
			
db 'Chain is INVALID',0Ah,0
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
align 4
			
align 4
			
db ')',0
align 4
			
db 'aybe it will be better later.',0Ah,0
			
			
align 4
			
align 4
			
db ' It has been deferred to later.',0Ah,0
align 4
			
db 'me_name)',0
			
align 10h
			
align 10h
			
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
			
align 4
align 10h
			
db 'hat you are not connecting to the service you believe you are.',0
			
align 4
			
			
align 4
			
align 4
			
align 4
db 'Caching first in chain for future use as %s...',0Ah,0
align 4
			
align 10h
			
db 'm), but found the last certificate %s in the CA pool.',0Ah,0
			
align 4
align 10h
			
db 'ompt the user, I guess.',0Ah,0
align 4
			
align 4
			
			
align 10h
			
db 'Falling back to full verification.',0Ah,0
align 4
align 10h
			
			
align 4
			
			
db 0Ah
db 'Issued By: %s',0Ah
db 0Ah
db 'Fingerprint (SHA1): %s',0Ah
db 0Ah
db 'Activation date: %s',0Ah
db 'Expiration date: %s',0Ah,0
			
			
			
align 10h
			
align 20h
			
			
			
			
align 10h
			
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
align 4
			
			
align 4
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
align 10h
			
			
align 10h
			
			
			
			
			
			
			
			
			
align 20h
			
			
			
align 4
			
align 10h
			
align 20h
			
			
align 20h
			
			
			
align 20h
			
			
align 20h
			
			
			
			
align 10h
			
			
			
			
			
align 4
			
align 4
			
db 'tion',0Ah,0
align 4
			
align 4
			
align 4
			
db 'ding and or digesting.',0
align 10h
			
align 4
			
align 10h
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
			
			
			
			
			
			
			
db 'mp(algorithm, "MD5") || g_ascii_strcasecmp(algorithm, "MD5-sess")'
db 0
			
			
align 10h
			
align 4
			
align 4
			
			
			
align 4
			
db 'h") || g_ascii_strcasecmp(qop, "auth-int")',0
align 4
			
			
			
			
			
align 4
			
			
align 20h
			
			
align 20h
			
align 20h
			
			
align 10h
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 4
			
align 4
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 10h
			
			
align 20h
			
dd 1, 100h, 101h, 10000h, 10001h, 10100h, 10101h, 1000000h
dd 1000001h, 1000100h, 1000101h, 1010000h, 1010001h, 1010100h
dd 1010101h
			
dd 1000000h, 10000h, 1010000h, 100h, 1000100h, 10100h
dd 1010100h, 1,	1000001h, 10001h, 1010001h, 101h, 1000101h
dd 10101h, 1010101h
db 1, 2	dup(2)
dd 2020202h, 2020201h, 1020202h, 4 dup(0)
			
dd 800h, 20000h, 8020820h, 8000000h, 8000820h, 20h, 8000000h
dd 20020h, 8020000h, 8020820h, 20800h, 8020800h, 20820h
dd 800h, 20h, 8020000h,	8000020h, 8000800h, 820h, 20800h
dd 20020h, 8020020h, 8020800h, 820h, 2 dup(0)
dd 8020020h, 8000020h, 8000800h, 20820h, 20000h, 20820h
dd 20000h, 8020800h, 800h, 20h,	8020020h, 800h,	20820h
dd 8000800h, 20h, 8000020h, 8020000h, 8020020h,	8000000h
dd 20000h, 8000820h, 0
dd 8020820h, 20020h, 8000020h, 8020000h, 8000800h, 8000820h
dd 0
dd 8020820h, 2 dup(20800h), 2 dup(820h), 20020h, 8000000h
dd 8020800h
			
dd 10200000h, 2000h, 10202008h,	10200000h, 8, 10202008h
dd 200000h, 10002000h, 202008h,	200000h, 10000008h, 200008h
dd 10002000h, 10000000h, 2008h,	0
dd 200008h, 10002008h, 2000h, 202000h, 10002008h, 8, 2 dup(10200008h)
dd 0
dd 202008h, 10202000h, 2008h, 202000h, 10202000h, 10000000h
dd 10002000h, 8, 10200008h, 202000h, 10202008h,	200000h
dd 2008h, 10000008h, 200000h, 10002000h, 10000000h, 2008h
dd 10000008h, 10202008h, 202000h, 10200000h, 202008h, 10202000h
dd 0
dd 10200008h, 8, 2000h,	10200000h, 202008h, 2000h, 200008h
dd 10002008h, 0
dd 10202000h, 10000000h, 200008h, 10002008h
			
dd 2 dup(80001040h), 40h, 401040h, 80400040h, 80400000h
dd 80001000h, 0
dd 2 dup(401000h), 80401040h, 80000040h, 0
unicode	0, <@@>,0
db 2 dup(0), 80h
dd 1000h, 400000h, 80401000h, 40h, 400000h, 80001000h
dd 1040h, 80400040h, 80000000h,	1040h, 400040h,	1000h
dd 401040h, 80401040h, 80000040h, 400040h, 80400000h, 401000h
dd 80401040h, 80000040h, 2 dup(0)
dd 401000h, 1040h, 400040h, 80400040h, 80000000h, 80401000h
dd 2 dup(80001040h), 40h, 80401040h, 80000040h,	80000000h
dd 1000h, 80400000h, 80001000h,	401040h, 80400040h, 80001000h
dd 1040h, 400000h, 80401000h, 40h, 400000h, 1000h, 401040h
			
dd 40004000h, 4000h, 84010h, 80000h, 10h, 40080010h, 40004010h
dd 40000010h, 40084010h, 40084000h, 40000000h, 40004000h
dd 80000h, 10h,	40080010h, 84000h, 80010h, 40004010h, 0
dd 40000000h, 4000h, 84010h, 40080000h,	80010h,	40000010h
dd 0
dd 84000h, 4010h, 40084000h, 40080000h,	4010h, 0
dd 84010h, 40080010h, 80000h, 40004010h, 40080000h, 40084000h
dd 4000h, 40080000h, 40004000h,	10h, 40084010h,	84010h
dd 10h,	4000h, 40000000h, 4010h, 40084000h, 80000h, 40000010h
dd 80010h, 40004010h, 40000010h, 80010h, 84000h, 0
dd 40004000h, 4010h, 40000000h,	40080010h, 40084010h, 84000h
			
dd 2100001h, 2000401h, 0
dd 400h, 2000401h, 100401h, 2100400h, 2100401h,	100000h
dd 0
dd 2000001h, 1,	2000000h, 2100001h, 401h, 2000400h, 100401h
dd 100001h, 2000400h, 2000001h,	2100000h, 2100400h, 100001h
dd 2100000h, 400h, 401h, 2100401h, 100400h, 1, 2000000h
dd 100400h, 2000000h, 100400h, 100000h,	2 dup(2000401h)
dd 2 dup(2100001h), 1, 100001h,	2000000h, 2000400h, 100000h
dd 2100400h, 401h, 100401h, 2100400h, 401h, 2000001h, 2100401h
dd 2100000h, 100400h, 0
dd 1, 2100401h,	0
dd 100401h, 2100000h, 400h, 2000001h, 2000400h,	400h, 100001h
			
dd 1040080h, 1040000h, 21000080h, 40000h, 80h, 20000000h
dd 1040000h, 20040080h,	40000h,	1000080h, 20040080h, 21000080h
dd 21040000h, 40080h, 20000000h, 1000000h, 2 dup(20040000h)
dd 0
dd 20000080h, 2	dup(21040080h),	1000080h, 21040000h, 20000080h
dd 0
dd 21000000h, 1040080h,	1000000h, 21000000h, 40080h, 40000h
dd 21000080h, 80h, 1000000h, 20000000h,	1040000h, 21000080h
dd 20040080h, 1000080h,	20000000h, 21040000h, 1040080h
dd 20040080h, 80h, 1000000h, 21040000h,	21040080h, 40080h
dd 21000000h, 21040080h, 1040000h, 0
dd 20040000h, 21000000h, 40080h, 1000080h, 20000080h, 40000h
dd 0
dd 20040000h, 1040080h,	20000080h
			
dd 4010100h, 0
dd 4010004h, 4000100h, 0
dd 10104h, 4000100h, 10004h, 2 dup(4000004h), 10000h, 4010104h
dd 10004h, 4010000h, 104h, 4000000h, 4,	4010100h, 100h
dd 10100h, 4010000h, 4010004h, 10104h, 4000104h, 10100h
dd 10000h, 4000104h, 4,	4010104h, 100h,	4000000h, 4010100h
dd 4000000h, 10004h, 104h, 10000h, 4010100h, 4000100h
dd 0
dd 100h, 10004h, 4010104h, 4000100h, 4000004h, 100h, 0
dd 4010004h, 4000104h, 10000h, 4000000h, 4010104h, 4, 10104h
dd 10100h, 4000004h, 4010000h, 4000104h, 104h, 4010000h
dd 10104h, 4, 4010004h,	10100h
			
dd 0
dd 8000h, 808202h, 808002h, 8202h, 2, 8000h, 200h, 808200h
dd 808202h, 200h, 800202h, 808002h, 800000h, 2,	202h, 2	dup(800200h)
dd 2 dup(8200h), 2 dup(808000h), 800202h, 8002h, 2 dup(800002h)
dd 8002h, 0
dd 202h, 8202h,	800000h, 8000h,	808202h, 2, 808000h, 808200h
dd 2 dup(800000h), 200h, 808002h, 8000h, 8200h,	800002h
dd 200h, 2, 800202h, 8202h, 808202h, 8002h, 808000h, 800202h
dd 800002h, 202h, 8202h, 808200h, 202h,	2 dup(800200h)
dd 0
dd 8002h, 8200h, 0
dd 808002h
align 20h
			
			
			
align 4
			
			
align 10h
			
			
align 10h
			
			
			
align 20h
			
			
			
align 10h
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
align 10h
dd offset loc_67CDDB80	
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB7C
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
dd offset loc_67CDDB80
			
db 0Ah,0
			
align 10h
			
			
align 20h
			
			
			
			
			
align 10h
			
align 20h
			
			
			
			
align 4
			
align 10h
			
align 20h
			
align 20h
			
			
align 4
			
			
align 10h
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
db '%s',0
			
			
align 4
			
align 4
			
			
			
align 4
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
align 4
			
			
			
			
align 10h
			
db 'an optional invite message.',0
align 4
			
db 'ated and will be removed in libpurple 3.0.0',0
			
			
			
			
			
align 4
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
align 20h
			
			
align 10h
			
align 10h
			
align 10h
			
			
			
			
			
			
align 10h
			
			
			
			
align 10h
			
			
align 10h
			
align 10h
			
			
			
			
			
align 10h
			
			
			
			
			
align 10h
			
align 20h
			
			
			
align 20h
			
align 20h
			
			
			
align 10h
			
align 10h
			
align 20h
			
			
			
			
			
align 4
			
align 10h
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
align 20h
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
			
			
align 20h
			
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
db 'er.pidgin.im/',0Ah,0
			
			
			
			
			
align 4
			
			
db 'eloper.pidgin.im/',0Ah,0
align 4
			
			
db '://developer.pidgin.im/',0Ah,0
align 4
			
			
db 'loper.pidgin.im/',0Ah,0
			
			
db '://developer.pidgin.im/',0Ah,0
align 4
			
db 'in.im/',0Ah,0
align 4
			
db 'in.im/',0Ah,0
align 4
			
db 'gin.im/',0Ah,0
			
align 4
			
db 'er.pidgin.im/',0Ah,0
			
align 4
			
			
			
			
align 4
			
align 4
			
			
			
align 4
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
align 4
			
			
			
			
			
			
align 20h
			
			
			
			
align 10h
			
			
align 10h
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
align 4
dd offset loc_67CE7C3D	
dd offset loc_67CE7D6F
dd offset loc_67CE7D52
dd offset loc_67CE7D35
dd offset loc_67CE7D18
dd offset loc_67CE7D18
dd offset loc_67CE7C3D	
dd offset loc_67CE7CFB
dd offset loc_67CE7CDE
dd offset loc_67CE7CC1
dd offset loc_67CE7CA4
dd offset loc_67CE7CA4
align 10h
			
			
			
			
			
			
			
			
db '%s.',0Ah,0
db '%s.',0Ah,0
db '%s.',0Ah,0
align 10h
			
			
align 10h
			
			
align 10h
			
			
			
			
			
align 10h
			
			
			
			
align 4
			
			
			
align 4
			
			
			
			
			
align 4
			
			
			
align 10h
			
			
			
			
			
			
align 10h
			
db 'Remote host: %s',0Ah
db 'Remote port: %d',0
			
			
			
			
			
align 20h
			
			
			
dd 1
dd offset aNotStarted	
dd 2
dd offset aAccepted	
dd 3
dd offset aStarted	
dd 4
dd offset aDone		
dd 5
dd offset aCancelledLocal 
dd 6
dd offset aCancelledRemot 
			
			
			
align 4
			
			
align 10h
			
			
			
			
align 10h
			
			
align 10h
			
			
			
			
			
			
align 10h
			
			
align 20h
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
align 4
			
			
align 10h
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
align 4
			
align 4
			
			
			
			
align 10h
			
			
align 10h
			
align 4
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
db '">',0
			
align 4
align 4
			
align 4
			
db '<br/>',0Ah,0
			
db '> %s<br/>',0Ah,0
			
db 'EPLY&gt
align 4
			
db 'EPLY&gt
align 4
			
db 'nt> %s<br/>',0Ah,0
align 4
			
db '> %s<br/>',0Ah,0
			
db '> %s<br/>',0Ah,0
align 10h
			
			
			
			
			
			
align 4
			
align 4
align 10h
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
db 0Dh,0Ah,0
			
			
			
align 20h
			
			
			
			
align 20h
			
			
			
			
			
			
			
align 10h
			
			
align 10h
			
align 10h
			
align 20h
			
align 4
			
			
db 'y not running. Message: %s (%d).',0Ah,0
align 10h
			
align 10h
			
			
align 10h
			
db ', previous count was %d.',0Ah,0
			
align 4
			
			
			
			
			
			
			
			
			
align 4
			
align 10h
			
			
			
			
align 4
			
			
			
			
align 4
			
db 'pport',0Ah,0
align 4
			
			
align 4
			
			
			
			
align 10h
			
			
			
align 4
			
			
			
align 10h
			
			
			
align 10h
			
			
align 20h
			
align 20h
			
			
			
align 4
			
			
			
			
			
			
			
align 10h
			
align 20h
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 10h
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
			
align 20h
			
			
			
			
			
			
align 4
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
align 4
			
align 10h
			
align 4
			
align 10h
			
align 10h
			
			
align 4
			
db 'y been loaded.',0Ah,0
align 4
			
			
align 4
			
db 'uld not be found.  Does the plugin call the PURPLE_INIT_PLUGIN() '
db 'macro?',0Ah,0
align 10h
			
align 10h
			
align 4
			
align 10h
			
align 10h
			
align 4
			
			
			
			
db 0
align 4
			
db 'n and close)',0
align 4
			
db 0
align 10h
			
db 'and try again.',0
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
align 4
			
align 20h
			
			
align 10h
			
			
			
			
			
align 4
			
			
			
			
align 10h
			
align 10h
			
align 20h
			
			
			
align 10h
			
			
align 20h
			
align 20h
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 20h
			
align 20h
			
			
			
align 10h
			
			
align 20h
			
align 20h
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
align 10h
			
align 20h
			
			
			
			
			
			
align 10h
			
			
align 10h
			
align 10h
			
			
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
align 4
			
align 4
dd offset loc_67CFC523	
dd offset loc_67CFC523
dd offset loc_67CFC518
dd offset loc_67CFC549
dd offset loc_67CFC518
dd offset loc_67CFC549
			
align 4
			
db 'f %s',0Ah,0
align 10h
			
db 'st pref %s',0Ah,0
align 10h
			
			
align 4
			
align 4
			
align 4
			
db 'f %s',0Ah,0
align 4
			
align 4
			
align 10h
			
db 'st pref %s',0Ah,0
align 10h
			
align 4
			
align 4
			
			
align 4
align 4
dd offset loc_67CFD387	
dd offset loc_67CFD372
dd offset loc_67CFD35D
dd offset loc_67CFD348
dd offset loc_67CFD333
dd offset loc_67CFD2FC
dd offset loc_67CFD790	
dd offset loc_67CFD832
dd offset loc_67CFD81B
dd offset loc_67CFD804
dd offset loc_67CFD7AF
dd offset loc_67CFD851
			
			
align 4
			
align 10h
			
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 10h
			
			
db 0
			
align 4
			
			
align 4
			
			
align 10h
			
align 4
			
align 4
			
align 4
			
			
align 4
			
			
align 4
			
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 4
			
			
			
			
			
align 10h
			
align 20h
			
			
			
			
			
			
align 4
dd offset loc_67CFEBBF	
dd offset loc_67CFEC30
dd offset loc_67CFEC50
dd offset loc_67CFEC64
dd offset loc_67CFEBE0
dd offset loc_67CFEDC4	
dd offset loc_67CFED3B
dd offset loc_67CFEDE4
dd offset loc_67CFEE00
dd offset loc_67CFED5C
dd offset loc_67CFEEC3	
dd offset loc_67CFEF1D
dd offset loc_67CFEEEC
dd offset loc_67CFEF3C
dd offset loc_67CFEF24
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
align 4
			
db 'oxy server is specified.  Using Pidgin',27h,'s proxy settings instea'
db 'd.',0Ah,0
			
align 4
			
align 10h
			
			
			
align 4
			
align 10h
			
			
			
align 10h
			
align 4
			
			
db 'y type is invalid.',0
			
			
align 4
			
			
			
			
			
			
			
align 4
			
align 4
			
			
			
align 4
			
			
align 4
db 'Host: %s:%d',0Dh,0Ah,0
align 4
			
			
			
			
align 4
db 'Proxy-Authorization: NTLM %s',0Dh,0Ah
db 'Proxy-Connection: Keep-Alive',0Dh,0Ah,0
			
			
			
align 4
			
align 4
align 4
align 4
			
			
			
			
			
			
			
db ' happen).',0Ah,0
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
db 'supporting.  This is a violation of the socks5 CHAP specification'
db '.  Disconnecting...',0
align 4
			
align 4
			
align 4
			
			
align 4
			
			
			
			
align 4
			
			
align 4
align 10h
			
align 4
dd offset loc_67D028D4	
dd offset loc_67D028E4
dd offset loc_67D029B4
dd offset loc_67D028D4
dd offset loc_67D029B4
db 0Dh,0Ah,0
			
align 10h
			
align 10h
db '%s',0Ah,0
			
align 4
db 'Host: %s:%d',0Dh,0Ah
db 'Proxy-Authorization: NTLM %s',0Dh,0Ah
db 'Proxy-Connection: Keep-Alive',0Dh,0Ah
db 0Dh,0Ah,0
align 4
db 'Host: %s:%d',0Dh,0Ah
db 'Proxy-Authorization: Basic %s',0Dh,0Ah,0
align 10h
			
align 4
			
			
			
			
			
			
align 4
			
			
			
			
			
align 4
			
			
align 4
			
align 4
			
align 4
			
			
			
align 4
			
align 4
align 10h
			
align 10h
			
align 4
			
align 4
			
align 4
			
db 0
align 20h
			
dd offset aGsettingsGetOr 
dd offset aGconftool2GS_0 
dd offset aGsettingsGet_0 
dd offset aGconftool2GS_1 
dd offset aGsettingsGet_1 
dd offset aGconftool2GS_2 
dd offset aGsettingsGet_2 
dd offset aGconftool2GS_3 
dd offset aGsettingsGet_3 
dd offset aGconftool2GS_4 
dd offset aGsettingsGet_4 
dd offset aGconftool2GS_5 
dd offset aGsettingsGet_5 
dd offset aGconftool2GS_6 
dd offset aGsettingsGet_6 
			
align 10h
align 10h
			
			
dd offset aGeneralSocksSe 
dd offset aConnectionNotA 
dd offset aNetworkUnreach 
dd offset aHostUnreachabl 
dd offset aConnectionRe_0 
dd offset aTtlExpired	
dd offset aCommandNotSupp 
dd offset aAddressTypeNot 
			
align 10h
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
db 'ing(account)',0
			
align 4
			
			
			
			
align 4
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
align 4
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 4
			
			
align 20h
			
			
			
align 10h
			
			
			
align 10h
			
align 20h
			
			
			
align 20h
			
			
			
			
align 4
			
align 4
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
			
align 4
			
			
			
align 10h
			
			
align 4
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
			
align 10h
			
align 20h
			
			
align 20h
			
align 20h
			
align 20h
			
align 20h
			
			
			
			
align 20h
			
			
align 4
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 20h
			
			
align 20h
			
align 20h
			
			
			
			
align 10h
			
align 20h
			
align 20h
			
			
			
			
align 4
			
align 10h
			
			
align 20h
			
align 20h
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
align 4
			
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
align 20h
			
			
			
			
			
			
align 20h
			
			
align 10h
			
			
align 20h
			
align 20h
			
align 10h
			
			
align 4
			
			
			
align 4
			
			
			
			
			
align 20h
			
			
			
			
align 10h
			
			
			
			
align 4
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
align 10h
			
align 10h
			
align 20h
			
			
align 20h
			
align 20h
			
			
			
align 4
			
align 10h
			
align 20h
			
align 20h
			
			
align 20h
			
align 20h
			
			
align 20h
			
			
align 20h
			
align 20h
			
			
			
			
			
align 4
			
			
			
			
db '%s',0
align 4
			
			
			
align 4
			
			
align 20h
			
			
			
			
align 10h
			
db ' but we do not have any signals registered with the given handle',0Ah
db 0
			
align 10h
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
align 20h
			
			
			
			
			
align 20h
			
			
align 20h
			
			
			
			
			
			
			
			
			
align 10h
			
align 4
			
			
			
			
			
			
			
align 10h
			
			
			
align 10h
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_67D0F848
dd 2 dup(0)
dd 18h
dd offset sub_67D0FE48
dd 0
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_67D10BD8
dd 2 dup(0)
dd 10h,	2 dup(0)
align 10h
			
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_67D10F04
dd 2 dup(0)
dd 14h
dd offset sub_67D10FB0
dd 0
			
			
			
			
align 10h
			
			
align 20h
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
align 20h
			
			
			
			
align 10h
			
align 20h
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
align 4
			
db ' which is not legal.  Fix this!',0Ah,0
			
align 4
			
			
align 4
			
align 4
			
			
			
align 4
			
			
			
db 'RESENCE_CONTEXT_BUDDY',0
align 4
			
			
db 'CONV',0
align 4
			
db 'BUDDY',0
			
			
			
align 4
			
align 4
			
align 10h
			
			
			
align 10h
			
db 'ependent statuses can be specifically marked inactive.',0
			
align 4
			
			
			
align 10h
			
			
			
align 10h
			
align 20h
			
			
			
			
dd 1
dd offset aOffline_1	
dd offset aOffline_2	
dd 2
dd offset aAvailable	
dd offset aAvailable_0	
dd 3
dd offset aUnavailable	
dd offset aDoNotDisturb	
dd 4
dd offset aInvisible	
dd offset aInvisible_0	
dd 5
dd offset aAway_1	
dd offset aAway_2	
dd 6
dd offset aExtended_away 
dd offset aExtendedAway	
dd 7
dd offset aMobile	
dd offset aMobile_0	
dd 8
dd offset aTune_0	
dd offset aListeningToMus 
dd 9
dd offset aMood		
dd offset aFeeling	
align 10h
			
			
align 10h
			
			
			
align 10h
			
			
			
			
			
			
			
			
align 4
			
align 10h
			
align 20h
			
align 20h
			
			
			
			
			
			
align 10h
			
			
			
			
			
			
align 20h
			
align 4
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
align 20h
			
			
			
			
			
			
align 20h
			
align 4
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
align 10h
			
			
align 10h
			
			
align 20h
			
			
			
align 4
			
align 20h
			
			
			
align 4
align 10h
			
			
align 20h
			
align 4
			
			
			
			
align 10h
			
align 10h
align 4
dd 2 dup(0)
dd offset sub_67D165A8
dd 2 dup(0)
dd 10h
dd offset sub_67D166A0
dd 8 dup(0)
			
align 20h
			
align 20h
			
align 4
			
			
			
			
			
			
			
align 4
			
align 20h
align 4
dd 5 dup(0)
dd 0Ch,	9 dup(0)
			
			
align 20h
			
			
align 20h
			
			
align 10h
			
			
align 10h
			
			
align 20h
			
align 20h
			
			
align 10h
			
			
			
			
			
			
align 4
dd offset loc_67D17E78	
dd offset loc_67D17EA0
dd offset loc_67D17EBC
dd offset loc_67D17ED4
dd offset loc_67D17EEC
dd offset loc_67D17F04
dd offset loc_67D180E0	
dd offset loc_67D1810C
dd offset loc_67D18138
dd offset loc_67D18164
dd offset loc_67D1818C
dd offset loc_67D181B4
align 10h
dd offset sub_67D1751C
dd 2 dup(0)
dd 10h
dd offset sub_67D17754
dd 0
			
			
			
			
align 20h
			
			
align 10h
			
db '<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s'
db ':encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">',0Dh,0Ah
db '<s:Body>',0Dh,0Ah
db '<u:%s xmlns:u="urn:schemas-upnp-org:service:%s">',0Dh,0Ah
db '%s</u:%s>',0Dh,0Ah
db '</s:Body>',0Dh,0Ah
db '</s:Envelope>',0
align 4
db 'HOST: %s:%d',0Dh,0Ah
db 'SOAPACTION: "urn:schemas-upnp-org:service:%s#%s"',0Dh,0Ah
db 'CONTENT-TYPE: text/xml 
db 'CONTENT-LENGTH: %u',0Dh,0Ah
db 0Dh,0Ah
db '%s',0
			
align 4
			
db '%s',0Ah,0
align 10h
			
db 'MX: 2',0Dh,0Ah
db 'HOST: 239.255.255.250:1900',0Dh,0Ah
db 'MAN: "ssdp:discover"',0Dh,0Ah
db 'ST: urn:schemas-upnp-org:service:%s',0Dh,0Ah
db 0Dh,0Ah,0
align 4
			
			
align 4
			
align 10h
			
align 4
			
align 4
db 'Connection: close',0Dh,0Ah
db 'Host: %s:%d',0Dh,0Ah
db 0Dh,0Ah,0
align 4
			
align 4
			
align 4
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
align 4
			
align 10h
			
align 10h
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
			
align 10h
			
align 4
			
align 4
			
align 4
			
align 4
db '<NewExternalPort>%i</NewExternalPort>',0Dh,0Ah
db '<NewProtocol>%s</NewProtocol>',0Dh,0Ah,0
			
align 4
db '<NewExternalPort>%i</NewExternalPort>',0Dh,0Ah
db '<NewProtocol>%s</NewProtocol>',0Dh,0Ah
db '<NewInternalPort>%i</NewInternalPort>',0Dh,0Ah
db '<NewInternalClient>%s</NewInternalClient>',0Dh,0Ah
db '<NewEnabled>1</NewEnabled>',0Dh,0Ah
db '<NewPortMappingDescription>PURPLE_UPNP_PORT_FORWARD</NewPortMappi'
db 'ngDescription>',0Dh,0Ah
db '<NewLeaseDuration>0</NewLeaseDuration>',0Dh,0Ah,0
align 20h
			
			
			
			
			
			
			
			
align 4
dd offset loc_67D1A10C	
dd offset loc_67D1A104
dd offset loc_67D1A0FC
dd offset loc_67D1A0F4
dd offset loc_67D1A11C
			
align 4
dd offset loc_67D1A700	
dd offset loc_67D1A634
dd offset loc_67D1A6EC
dd offset loc_67D1A690
dd offset loc_67D1A5D8
dd offset loc_67D1A588
dd offset loc_67D1A550
dd offset loc_67D1A4FC
			
			
			
			
align 4
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
dw 3Ch,	3Eh
unicode	0, < >
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
align 4
			
			
align 4
			
			
align 4
			
db '%u
align 4
			
db 'isk full?',0Ah,0
			
align 4
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
align 10h
			
			
			
			
align 4
			
			
			
			
align 4
			
			
			
			
			
			
align 4
			
align 4
			
db 'iter ',27h,'%c',27h,'.',0Ah,0
			
			
align 4
			
align 4
			
align 10h
			
			
			
align 4
			
			
align 4
			
align 4
			
			
			
			
			
align 4
db 'Connection: close',0Dh,0Ah,0
db 'Host: %s',0Dh,0Ah,0
align 4
			
align 10h
db 'Proxy-Authorization: NTLM %s',0Dh,0Ah
db 'Proxy-Connection: Keep-Alive',0Dh,0Ah,0
			
align 4
			
db 0Dh,0Ah,0
db 'Location: ',0
			
db 'Transfer-Encoding: ',0
align 10h
			
align 4
			
align 10h
			
db 'he web server may be trying something malicious.',0
			
			
db 'n the data remaining in the buffer (%u bytes)',0Ah,0
			
db 'Content-Length: ',0
align 10h
			
			
			
			
db ' ',0
align 4
			
			
align 4
			
db 's %02x (%c)',0Ah,0
align 4
			
			
			
			
			
			
			
align 20h
dd 1Fh,	3Bh, 5Ah, 78h, 97h, 0B5h, 0D4h,	0F3h, 111h, 130h
dd 14Eh
align 4
			
			
align 20h
			
			
			
			
align 4
			
dd offset aSmall	
dd offset aMedium	
dd offset aLarge	
dd offset aXLarge	
dd offset aXxLarge	
dd offset aXxLarge	
			
align 4
dd 0
dd 10000h, 100h, 4 dup(0)
dd 10001h, 2 dup(0)
dd 1, 3	dup(0)
db 1, 0, 1
			
			
			
align 10h
			
align 20h
			
align 10h
			
			
			
			
			
			
			
			
			
dd offset aKib		
dd offset aMib		
dd offset aGib		
			
			
			
			
			
			
			
align 10h
			
align 10h
			
			
			
			
			
align 20h
			
			
			
align 4
			
			
align 4
			
dd offset loc_67D28B34	
dd offset loc_67D28CF9
dd offset loc_67D28CDD
dd offset loc_67D28CC4
dd offset loc_67D28CAA
dd offset loc_67D28C8E
dd offset loc_67D28C75
dd offset loc_67D28C5C
dd offset loc_67D28C43
dd offset loc_67D28C2A
dd offset loc_67D28C0D
dd offset loc_67D28BF0
dd offset loc_67D28BD7
dd offset loc_67D28BBE
dd offset loc_67D28BA5
dd offset loc_67D28B8F
dd offset loc_67D28B79
			
			
			
			
			
align 4
			
align 10h
			
align 4
			
align 4
public purple_micro_version
align 4
public purple_minor_version
align 10h
public purple_major_version
align 20h
			
			
			
db 0
			
align 4
			
			
			
			
			
			
			
			
			
			
db 0Dh,0Ah
db '%s',0
align 10h
			
align 4
			
			
align 4
			
db 'loaded, and the old file has been renamed to %s~.',0
align 4
			
align 4
			
			
			
align 20h
			
			
			
align 20h
			
			
align 10h
			
			
			
align 20h
			
			
			
align 4
align 4
			
align 4
align 4
			
align 4
			
db '  watch->pollfd.events:%#x watch->pollfd.revents:%#x channel->rev'
db 'ents:%#x',0Ah,0
align 4
			
db 0
align 4
			
			
			
db '  watch->pollfd.events:%#x watch->pollfd.revents:%#x channel->rev'
db 'ents:%#x',0Ah,0
align 4
			
			
			
			
			
			
db '%#x',0Ah,0
align 4
			
align 4
			
align 4
align 4
			
db 'il',0Ah,0
align 4
			
align 4
			
align 4
			
align 4
			
align 4
align 4
			
align 4
align 4
			
db 'You must call g_source_connect().',0
align 4
			
align 10h
			
align 4
			
			
			
align 4
			
			
align 4
			
db 's',0Ah,0
			
			
align 10h
			
			
align 4
			
			
align 4
			
align 4
dd offset loc_67D2D295	
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D350
dd offset loc_67D2D334
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D295
dd offset loc_67D2D31C
dd offset loc_67D2D304
			
align 4
			
			
			
			
			
align 4
			
			
align 4
			
db ': %i',0Ah,0
align 4
			
db 0
align 4
			
db 'e: %i',0Ah,0
align 4
			
db 'e: %i',0Ah,0
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
align 4
align 4
			
			
			
			
align 4
align 4
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
align 4
			
db 'Message: (%ld) %s',0Ah,0
			
align 4
			
db 'Message: (%ld) %s',0Ah,0
align 4
			
			
align 4
			
			
align 4
			
align 4
			
align 4
			
align 4
			
align 4
dd 6F5DEh
			
			
dd 20h,	0C6DB0h, 133Ch,	20h, 0C6DB0h, 13F6h, 20h, 0C6DB0h
dd 1432h, 20h, 0C6DB0h,	144Eh, 20h, 0C6DB0h, 148Ah, 20h
dd 0C6DB0h, 14A0h, 20h,	0C6DB0h, 14D4h,	20h, 0C6DB0h, 14E9h
dd 20h,	0C6DB0h, 14FEh,	20h, 0C6DB0h, 1531h, 20h, 0C6DB0h
dd 1562h, 20h, 0C6DB0h,	1581h, 20h, 0C6DB0h, 15D8h, 20h
dd 0C6DB0h, 15F9h, 20h,	0C6DB0h, 1650h,	20h, 0C6DB0h, 167Bh
dd 20h,	0C6DB0h, 1697h,	20h, 0C6DB0h, 16D0h, 20h, 0C6DB0h
dd 16FCh, 20h, 0C6DB0h,	1737h, 20h, 0C6DB0h, 1753h, 20h
dd 0C6DB0h, 1779h, 20h,	0C6DB0h, 17D6h,	20h, 0C6DB0h, 1831h
dd 20h,	0C6DB0h, 1870h,	20h, 0C6DB0h, 18D6h, 20h, 0C6DB0h
dd 18EAh, 20h, 0C6DB0h,	192Eh, 20h, 0C6DB0h, 1948h, 20h
dd 0C6DB0h, 195Ah, 20h,	0C6DB0h, 19A5h,	20h, 0C6DB0h, 19CDh
dd 20h,	0C6DB0h, 19F6h,	20h, 0C6DB0h, 1A26h, 20h, 0C6DB0h
dd 1A41h, 20h, 0C6DB0h,	1A6Dh, 20h, 0C6DB0h, 1A96h, 20h
dd 0C6DB0h, 1AC2h, 20h,	0C6DB0h, 1AF2h,	20h, 0C6DB0h, 1B0Dh
dd 20h,	0C6DB0h, 1B27h,	20h, 0C6DB0h, 1B56h, 20h, 0C6DB0h
dd 1BB3h, 20h, 0C6DB0h,	1BE2h, 20h, 0C6DB0h, 1C8Fh, 20h
dd 0C6DB0h, 1CE5h, 20h,	0C6DB0h, 1E6Eh,	20h, 0C6DB0h, 1EABh
dd 20h,	0C6DB0h, 1EDEh,	20h, 0C6DB0h, 1EFEh, 20h, 0C6DB0h
dd 1F28h, 20h, 0C6DB0h,	1F5Ah, 20h, 0C6DB0h, 1F7Bh, 20h
dd 0C6DB0h, 1FE5h, 20h,	0C6DB0h, 201Ah,	20h, 0C6DB0h, 2046h
dd 20h,	0C6DB0h, 2070h,	20h, 0C6DB0h, 20A2h, 20h, 0C6DB0h
dd 20C2h, 20h, 0C6DB0h,	20ECh, 20h, 0C6DB0h, 211Eh, 20h
dd 0C6DB0h, 213Eh, 20h,	0C6DB0h, 216Ch,	20h, 0C6DB0h, 219Eh
dd 20h,	0C6DB0h, 21DDh,	20h, 0C6DB0h, 21F4h, 20h, 0C6DB0h
dd 2231h, 20h, 0C6DB0h,	2248h, 20h, 0C6DB0h, 227Ah, 20h
dd 0C6DB0h, 229Bh, 20h,	0C6DB0h, 22FEh,	20h, 0C6DB0h, 2382h
dd 20h,	0C6DB0h, 23A8h,	20h, 0C6DB0h, 23DAh, 20h, 0C6DB0h
dd 23F9h, 20h, 0C6DB0h,	2410h, 20h, 0C6DB0h, 244Eh, 20h
dd 0C6DB0h, 248Fh, 20h,	0C6DB0h, 24CBh,	20h, 0C6DB0h, 265Dh
dd 20h,	0C6DB0h, 26AEh,	20h, 0C6DB0h, 26C9h, 20h, 0C6DB0h
dd 270Fh, 20h, 0C6DB0h,	274Dh, 20h, 0C6DB0h, 2765h, 20h
dd 0C6DB0h, 27A2h, 20h,	0C6DB0h, 27E4h,	20h, 0C6DB0h, 282Eh
dd 20h,	0C6DB0h, 2846h,	20h, 0C6DB0h, 2876h, 20h, 0C6DB0h
dd 28A0h, 20h, 0C6DB0h,	28F6h, 20h, 0C6DB0h, 290Eh, 20h
dd 0C6DB0h, 293Eh, 20h,	0C6DB0h, 2968h,	20h, 0C6DB0h, 29B2h
dd 20h,	0C6DB0h, 29CAh,	20h, 0C6DB0h, 29FAh, 20h, 0C6DB0h
dd 2A1Dh, 20h, 0C6DB0h,	2A45h, 20h, 0C6DB0h, 2A81h, 20h
dd 0C6DB0h, 2AA9h, 20h,	0C6DB0h, 2AF0h,	20h, 0C6DB0h, 2B62h
dd 20h,	0C6DB0h, 2B7Ah,	20h, 0C6DB0h, 2BAAh, 20h, 0C6DB0h
dd 2BC2h, 20h, 0C6DB0h,	2BF0h, 20h, 0C6DB0h, 2C6Ah, 20h
dd 0C6DB0h, 2C82h, 20h,	0C6DB0h, 2CB2h,	20h, 0C6DB0h, 2CCAh
dd 20h,	0C6DB0h, 2CF8h,	20h, 0C6DB0h, 2D6Ah, 20h, 0C6DB0h
dd 2D82h, 20h, 0C6DB0h,	2DB2h, 20h, 0C6DB0h, 2DCAh, 20h
dd 0C6DB0h, 2DE9h, 20h,	0C6DB0h, 2DFFh,	20h, 0C6DB0h, 2E3Dh
dd 20h,	0C6DB0h, 2E54h,	20h, 0C6DB0h, 2E9Bh, 20h, 0C6DB0h
dd 2EEBh, 20h, 0C6DB0h,	2EFEh, 20h, 0C6DB0h, 2F35h, 20h
dd 0C6DB0h, 2F85h, 20h,	0C6DB0h, 2FBDh,	20h, 0C6DB0h, 2FD4h
dd 20h,	0C6DB0h, 3011h,	20h, 0C6DB0h, 3028h, 20h, 0C6DB0h
dd 3065h, 20h, 0C6DB0h,	307Ch, 20h, 0C6DB0h, 30B9h, 20h
dd 0C6DB0h, 30D0h, 20h,	0C6DB0h, 310Dh,	20h, 0C6DB0h, 314Fh
dd 20h,	0C6DB0h, 31C4h,	20h, 0C6DB0h, 3361h, 20h, 0C6DB0h
dd 3389h, 20h, 0C6DB0h,	33A0h, 20h, 0C6DB0h, 33D9h, 20h
dd 0C6DB0h, 3401h, 20h,	0C6DB0h, 343Ch,	20h, 0C6DB0h, 345Dh
dd 20h,	0C6DB0h, 3470h,	20h, 0C6DB0h, 3492h, 20h, 0C6DB0h
dd 34A8h, 20h, 0C6DB0h,	34C8h, 20h, 0C6DB0h, 34ECh, 20h
dd 0C6DB0h, 353Eh, 20h,	0C6DB0h, 3566h,	20h, 0C6DB0h, 35ABh
dd 20h,	0C6DB0h, 35DAh,	20h, 0C6DB0h, 35F5h, 20h, 0C6DB0h
dd 361Ch, 20h, 0C6DB0h,	3674h, 20h, 0C6DB0h, 369Eh, 20h
dd 0C6DB0h, 36E3h, 20h,	0C6DB0h, 3712h,	20h, 0C6DB0h, 372Dh
dd 20h,	0C6DB0h, 374Eh,	20h, 0C6DB0h, 38B1h, 20h, 0C6DB0h
dd 3906h, 20h, 0C6DB0h,	392Ah, 20h, 0C6DB0h, 395Ah, 20h
dd 0C6DB0h, 3C31h, 20h,	0C6DB0h, 3DBFh,	20h, 0C6DB0h, 3DDBh
dd 20h,	0C6DB0h, 3E49h,	20h, 0C6DB0h, 3E60h, 20h, 0C6DB0h
dd 3E9Dh, 20h, 0C6DB0h,	3F46h, 20h, 0C6DB0h, 3FA1h, 20h
dd 0C6DB0h, 3FB8h, 20h,	0C6DB0h, 3FF5h,	20h, 0C6DB0h, 400Ch
dd 20h,	0C6DB0h, 4049h,	20h, 0C6DB0h, 405Dh, 20h, 0C6DB0h
dd 4098h, 20h, 0C6DB0h,	40B5h, 20h, 0C6DB0h, 40CDh, 20h
dd 0C6DB0h, 410Ch, 20h,	0C6DB0h, 4158h,	20h, 0C6DB0h, 41A2h
dd 20h,	0C6DB0h, 41CEh,	20h, 0C6DB0h, 4202h, 20h, 0C6DB0h
dd 424Ch, 20h, 0C6DB0h,	4274h, 20h, 0C6DB0h, 42DBh, 20h
dd 0C6DB0h, 42FDh, 20h,	0C6DB0h, 4314h,	20h, 0C6DB0h, 4350h
dd 20h,	0C6DB0h, 4B04h,	20h, 0C6DB0h, 4D64h, 20h, 0C6DB0h
dd 4D85h, 20h, 0C6DB0h,	4DA1h, 20h, 0C6DB0h, 4DB9h, 20h
dd 0C6DB0h, 4DF8h, 20h,	0C6DB0h, 4E31h,	20h, 0C6DB0h, 4E48h
dd 20h,	0C6DB0h, 4E8Ch,	20h, 0C6DB0h, 4EC9h, 20h, 0C6DB0h
dd 4F14h, 20h, 0C6DB0h,	4F61h, 20h, 0C6DB0h, 4FCDh, 20h
dd 0C6DB0h, 501Bh, 20h,	0C6DB0h, 5085h,	20h, 0C6DB0h, 50D3h
dd 20h,	0C6DB0h, 513Dh,	20h, 0C6DB0h, 518Bh, 20h, 0C6DB0h
dd 51EDh, 20h, 0C6DB0h,	5219h, 20h, 0C6DB0h, 5250h, 20h
dd 0C6DB0h, 527Ch, 20h,	0C6DB0h, 52A2h,	20h, 0C6DB0h, 530Ch
dd 20h,	0C6DB0h, 539Ah,	20h, 0C6DB0h, 5404h, 20h, 0C6DB0h
dd 5492h, 20h, 0C6DB0h,	54FCh, 20h, 0C6DB0h, 5581h, 20h
dd 0C6DB0h, 55B5h, 20h,	0C6DB0h, 5613h,	20h, 0C6DB0h, 56A2h
dd 20h,	0C6DB0h, 5780h,	20h, 0C6DB0h, 57B0h, 20h, 0C6DB0h
dd 5828h, 20h, 0C6DB0h,	5879h, 20h, 0C6DB0h, 589Ah, 20h
dd 0C6DB0h, 58CEh, 20h,	0C6DB0h, 590Eh,	20h, 0C6DB0h, 5935h
dd 20h,	0C6DB0h, 595Eh,	20h, 0C6DB0h, 597Eh, 20h, 0C6DB0h
dd 5999h, 20h, 0C6DB0h,	5A3Dh, 20h, 0C6DB0h, 5A67h, 20h
dd 0C6DB0h, 5AA8h, 20h,	0C6DB0h, 5B22h,	20h, 0C6DB0h, 5BA9h
dd 20h,	0C6DB0h, 5C1Ch,	20h, 0C6DB0h, 5C45h, 20h, 0C6DB0h
dd 5C6Ah, 20h, 0C6DB0h,	5C9Ah, 20h, 0C6DB0h, 5CC0h, 20h
dd 0C6DB0h, 5D66h, 20h,	0C6DB0h, 5E06h,	20h, 0C6DB0h, 5E94h
dd 20h,	0C6DB0h, 5F3Ah,	20h, 0C6DB0h, 603Ah, 20h, 0C6DB0h
dd 6063h, 20h, 0C6DB0h,	60A2h, 20h, 0C6DB0h, 60C2h, 20h
dd 0C6DB0h, 60E8h, 20h,	0C6DB0h, 6123h,	20h, 0C6DB0h, 6168h
dd 20h,	0C6DB0h, 6186h,	20h, 0C6DB0h, 61C8h, 20h, 0C6DB0h
dd 61E6h, 20h, 0C6DB0h,	620Ch, 20h, 0C6DB0h, 6253h, 20h
dd 0C6DB0h, 6276h, 20h,	0C6DB0h, 62A0h,	20h, 0C6DB0h, 63B6h
dd 20h,	0C6DB0h, 63E2h,	20h, 0C6DB0h, 6426h, 20h, 0C6DB0h
dd 645Ch, 20h, 0C6DB0h,	6490h, 20h, 0C6DB0h, 64A9h, 20h
dd 0C6DB0h, 64C1h, 20h,	0C6DB0h, 64D1h,	20h, 0C6DB0h, 64EDh
dd 20h,	0C6DB0h, 652Bh,	20h, 0C6DB0h, 6545h, 20h, 0C6DB0h
dd 656Eh, 20h, 0C6DB0h,	65E1h, 20h, 0C6DB0h, 6630h, 20h
dd 0C6DB0h, 6670h, 20h,	0C6DB0h, 67E1h,	20h, 0C6DB0h, 6827h
dd 20h,	0C6DB0h, 684Bh,	20h, 0C6DB0h, 68D9h, 20h, 0C6DB0h
dd 6912h, 20h, 0C6DB0h,	698Ch, 20h, 0C6DB0h, 69A1h, 20h
dd 0C6DB0h, 69B7h, 20h,	0C6DB0h, 6A0Bh,	20h, 0C6DB0h, 6A34h
dd 20h,	0C6DB0h, 6ACFh,	20h, 0C6DB0h, 6B3Bh, 20h, 0C6DB0h
dd 6B67h, 20h, 0C6DB0h,	6D02h, 20h, 0C6DB0h, 6D66h, 20h
dd 0C6DB0h, 6D94h, 20h,	0C6DB0h, 6DADh,	20h, 0C6DB0h, 6DC0h
dd 20h,	0C6DB0h, 6DD5h,	20h, 0C6DB0h, 6DE8h, 20h, 0C6DB0h
dd 6DFDh, 20h, 0C6DB0h,	6E14h, 20h, 0C6DB0h, 7DE2h, 20h
dd 0C6DB0h, 847Ch, 20h,	0C6DB0h, 84DAh,	20h, 0C6DB0h, 850Dh
dd 20h,	0C6DB0h, 8532h,	20h, 0C6DB0h, 8560h, 20h, 0C6DB0h
dd 85A4h, 20h, 0C6DB0h,	8625h, 20h, 0C6DB0h, 8658h, 20h
dd 0C6DB0h, 8671h, 20h,	0C6DB0h, 86A4h,	20h, 0C6DB0h, 86BEh
dd 20h,	0C6DB0h, 86FDh,	20h, 0C6DB0h, 8719h, 20h, 0C6DB0h
dd 874Ch, 20h, 0C6DB0h,	8765h, 20h, 0C6DB0h, 879Bh, 20h
dd 0C6DB0h, 87FEh, 20h,	0C6DB0h, 8831h,	20h, 0C6DB0h, 8866h
dd 20h,	0C6DB0h, 88A9h,	20h, 0C6DB0h, 88DEh, 20h, 0C6DB0h
dd 8922h, 20h, 0C6DB0h,	8957h, 20h, 0C6DB0h, 89ADh, 20h
dd 0C6DB0h, 89E2h, 20h,	0C6DB0h, 8A26h,	20h, 0C6DB0h, 8A5Bh
dd 20h,	0C6DB0h, 8AD0h,	20h, 0C6DB0h, 8AFDh, 20h, 0C6DB0h
dd 8B68h, 20h, 0C6DB0h,	8B7Eh, 20h, 0C6DB0h, 8B96h, 20h
dd 0C6DB0h, 8BB2h, 20h,	0C6DB0h, 8BD5h,	20h, 0C6DB0h, 8BEBh
dd 20h,	0C6DB0h, 8C29h,	20h, 0C6DB0h, 8C40h, 20h, 0C6DB0h
dd 8C7Dh, 20h, 0C6DB0h,	8C94h, 20h, 0C6DB0h, 8CD1h, 20h
dd 0C6DB0h, 8D08h, 20h,	0C6DB0h, 8D4Dh,	20h, 0C6DB0h, 8D87h
dd 20h,	0C6DB0h, 8DCDh,	20h, 0C6DB0h, 8E04h, 20h, 0C6DB0h
dd 8E49h, 20h, 0C6DB0h,	8E80h, 20h, 0C6DB0h, 8ED5h, 20h
dd 0C6DB0h, 8F0Ch, 20h,	0C6DB0h, 8F51h,	20h, 0C6DB0h, 8F88h
dd 20h,	0C6DB0h, 8FD9h,	20h, 0C6DB0h, 9013h, 20h, 0C6DB0h
dd 9089h, 20h, 0C6DB0h,	90B2h, 20h, 0C6DB0h, 90EAh, 20h
dd 0C6DB0h, 9105h, 20h,	0C6DB0h, 911Bh,	20h, 0C6DB0h, 9159h
dd 20h,	0C6DB0h, 9170h,	20h, 0C6DB0h, 91ADh, 20h, 0C6DB0h
dd 91C4h, 20h, 0C6DB0h,	9201h, 20h, 0C6DB0h, 9218h, 20h
dd 0C6DB0h, 9259h, 20h,	0C6DB0h, 9270h,	20h, 0C6DB0h, 92A9h
dd 20h,	0C6DB0h, 92C3h,	20h, 0C6DB0h, 92F0h, 20h, 0C6DB0h
dd 935Dh, 20h, 0C6DB0h,	9458h, 20h, 0C6DB0h, 947Dh, 20h
dd 0C6DB0h, 9495h, 20h,	0C6DB0h, 94DEh,	20h, 0C6DB0h, 94FDh
dd 20h,	0C6DB0h, 9517h,	20h, 0C6DB0h, 9557h, 20h, 0C6DB0h
dd 958Fh, 20h, 0C6DB0h,	95ADh, 20h, 0C6DB0h, 95D1h, 20h
dd 0C6DB0h, 95EDh, 20h,	0C6DB0h, 9611h,	20h, 0C6DB0h, 962Dh
dd 20h,	0C6DB0h, 963Dh,	20h, 0C6DB0h, 965Bh, 20h, 0C6DB0h
dd 968Dh, 20h, 0C6DB0h,	96C8h, 20h, 0C6DB0h, 9702h, 20h
dd 0C6DB0h, 972Ah, 20h,	0C6DB0h, 975Fh,	20h, 0C6DB0h, 9775h
dd 20h,	0C6DB0h, 97B4h,	20h, 0C6DB0h, 97E5h, 20h, 0C6DB0h
dd 97F8h, 20h, 0C6DB0h,	9812h, 20h, 0C6DB0h, 9822h, 20h
dd 0C6DB0h, 9838h, 20h,	0C6DB0h, 9852h,	20h, 0C6DB0h, 9862h
dd 20h,	0C6DB0h, 987Ch,	20h, 0C6DB0h, 98A5h, 20h, 0C6DB0h
dd 98BBh, 20h, 0C6DB0h,	9988h, 20h, 0C6DB0h, 99A0h, 20h
dd 0C6DB0h, 99B9h, 20h,	0C6DB0h, 99CCh,	20h, 0C6DB0h, 99E1h
dd 20h,	0C6DB0h, 99F4h,	20h, 0C6DB0h, 9A0Fh, 20h, 0C6DB0h
dd 9A28h, 20h, 0C6DB0h,	9A68h, 20h, 0C6DB0h, 9A84h, 20h
dd 0C6DB0h, 9A9Ch, 20h,	0C6DB0h, 9AB0h,	20h, 0C6DB0h, 9ACCh
dd 20h,	0C6DB0h, 9AE0h,	20h, 0C6DB0h, 9B0Bh, 20h, 0C6DB0h
dd 9B21h, 20h, 0C6DB0h,	9B69h, 20h, 0C6DB0h, 9B84h, 20h
dd 0C6DB0h, 9BB3h, 20h,	0C6DB0h, 9BCDh,	20h, 0C6DB0h, 9BE4h
dd 20h,	0C6DB0h, 9C01h,	20h, 0C6DB0h, 9C18h, 20h, 0C6DB0h
dd 9C35h, 20h, 0C6DB0h,	9C4Ch, 20h, 0C6DB0h, 9C69h, 20h
dd 0C6DB0h, 9C80h, 20h,	0C6DB0h, 9C9Dh,	20h, 0C6DB0h, 9CB4h
dd 20h,	0C6DB0h, 9CF5h,	20h, 0C6DB0h, 9D0Ch, 20h, 0C6DB0h
dd 9D44h, 20h, 0C6DB0h,	9D77h, 20h, 0C6DB0h, 9DB1h, 20h
dd 0C6DB0h, 9DC1h, 20h,	0C6DB0h, 9DECh,	20h, 0C6DB0h, 9F16h
dd 20h,	0C6DB0h, 9F56h,	20h, 0C6DB0h, 9F7Dh, 20h, 0C6DB0h
dd 0A043h, 20h,	0C6DB0h, 0A09Ah, 20h, 0C6DB0h, 0A0D2h
dd 20h,	0C6DB0h, 0A0F9h, 20h, 0C6DB0h, 0A18Bh, 20h, 0C6DB0h
dd 0A1E2h, 20h,	0C6DB0h, 0A21Ah, 20h, 0C6DB0h, 0A241h
dd 20h,	0C6DB0h, 0A2F9h, 20h, 0C6DB0h, 0A34Eh, 20h, 0C6DB0h
dd 0A386h, 20h,	0C6DB0h, 0A3ACh, 20h, 0C6DB0h, 0A464h
dd 20h,	0C6DB0h, 0A4DAh, 20h, 0C6DB0h, 0A512h, 20h, 0C6DB0h
dd 0A53Ch, 20h,	0C6DB0h, 0A5A3h, 20h, 0C6DB0h, 0A615h
dd 20h,	0C6DB0h, 0A646h, 20h, 0C6DB0h, 0A674h, 20h, 0C6DB0h
dd 0A70Ch, 20h,	0C6DB0h, 0A76Dh, 20h, 0C6DB0h, 0A806h
dd 20h,	0C6DB0h, 0A826h, 20h, 0C6DB0h, 0A870h, 20h, 0C6DB0h
dd 0A8AAh, 20h,	0C6DB0h, 0A8C5h, 20h, 0C6DB0h, 0A8DCh
dd 20h,	0C6DB0h, 0A919h, 20h, 0C6DB0h, 0A930h, 20h, 0C6DB0h
dd 0A96Dh, 20h,	0C6DB0h, 0A984h, 20h, 0C6DB0h, 0A9C1h
dd 20h,	0C6DB0h, 0A9D8h, 20h, 0C6DB0h, 0AA19h, 20h, 0C6DB0h
dd 0AA30h, 20h,	0C6DB0h, 0AA66h, 20h, 0C6DB0h, 0AABFh
dd 20h,	0C6DB0h, 0AAD9h, 20h, 0C6DB0h, 0AAFFh, 20h, 0C6DB0h
dd 0AB21h, 20h,	0C6DB0h, 0AB38h, 20h, 0C6DB0h, 0AB79h
dd 20h,	0C6DB0h, 0AB89h, 20h, 0C6DB0h, 0ABADh, 20h, 0C6DB0h
dd 0ABC8h, 20h,	0C6DB0h, 0AC01h, 20h, 0C6DB0h, 0AC27h
dd 20h,	0C6DB0h, 0AC4Bh, 20h, 0C6DB0h, 0ACE0h, 20h, 0C6DB0h
dd 0AD22h, 20h,	0C6DB0h, 0AD4Bh, 20h, 0C6DB0h, 0AD70h
dd 20h,	0C6DB0h, 0AE26h, 20h, 0C6DB0h, 0AEA0h, 20h, 0C6DB0h
dd 0AECCh, 20h,	0C6DB0h, 0AF08h, 20h, 0C6DB0h, 0AF23h
dd 20h,	0C6DB0h, 0AF75h, 20h, 0C6DB0h, 0AF8Ch, 20h, 0C6DB0h
dd 0AFC9h, 20h,	0C6DB0h, 0AFE9h, 20h, 0C6DB0h, 0B02Bh
dd 20h,	0C6DB0h, 0B0BDh, 20h, 0C6DB0h, 0B107h, 20h, 0C6DB0h
dd 0B1A8h, 20h,	0C6DB0h, 0B20Fh, 20h
dd 0C6DB0h, 0B258h, 20h, 0C6DB0h, 0B2F0h, 20h, 0C6DB0h
dd 0B356h, 20h,	0C6DB0h, 0B422h, 20h, 0C6DB0h, 0B463h
dd 20h,	0C6DB0h, 0B4DBh, 20h, 0C6DB0h, 0B51Eh, 20h, 0C6DB0h
dd 0B5BDh, 20h,	0C6DB0h, 0B5D4h, 20h, 0C6DB0h, 0B611h
dd 20h,	0C6DB0h, 0B628h, 20h, 0C6DB0h, 0B665h, 20h, 0C6DB0h
dd 0B67Ch, 20h,	0C6DB0h, 0B6B9h, 20h, 0C6DB0h, 0B6D0h
dd 20h,	0C6DB0h, 0B70Dh, 20h, 0C6DB0h, 0B728h, 20h, 0C6DB0h
dd 0B77Dh, 20h,	0C6DB0h, 0B798h, 20h, 0C6DB0h, 0B7F9h
dd 20h,	0C6DB0h, 0B810h, 20h, 0C6DB0h, 0B850h, 20h, 0C6DB0h
dd 0B9AEh, 20h,	0C6DB0h, 0BB4Ah, 20h, 0C6DB0h, 0BB84h
dd 20h,	0C6DB0h, 0BBBEh, 20h, 0C6DB0h, 0BC2Ah, 20h, 0C6DB0h
dd 0BC51h, 20h,	0C6DB0h, 0BC68h, 20h, 0C6DB0h, 0BCA9h
dd 20h,	0C6DB0h, 0BCC0h, 20h, 0C6DB0h, 0BCF9h, 20h, 0C6DB0h
dd 0BD17h, 20h,	0C6DB0h, 0BD59h, 20h, 0C6DB0h, 0BD70h
dd 20h,	0C6DB0h, 0BDBBh, 20h, 0C6DB0h, 0BDDBh, 20h, 0C6DB0h
dd 0BE02h, 20h,	0C6DB0h, 0BE2Bh, 20h, 0C6DB0h, 0BE4Bh
dd 20h,	0C6DB0h, 0BE72h, 20h, 0C6DB0h, 0BE88h, 20h, 0C6DB0h
dd 0BEA8h, 20h,	0C6DB0h, 0BEBAh, 20h, 0C6DB0h, 0BEDAh
dd 20h,	0C6DB0h, 0BF19h, 20h, 0C6DB0h, 0BF4Eh, 20h, 0C6DB0h
dd 0BFADh, 20h,	0C6DB0h, 0BFC4h, 20h, 0C6DB0h, 0BFFDh
dd 20h,	0C6DB0h, 0C014h, 20h, 0C6DB0h, 0C051h, 20h, 0C6DB0h
dd 0C067h, 20h,	0C6DB0h, 0C0A4h, 20h, 0C6DB0h, 0C41Ch
dd 20h,	0C6DB0h, 0C5A8h, 20h, 0C6DB0h, 0C5C9h, 20h, 0C6DB0h
dd 0C5DFh, 20h,	0C6DB0h, 0C64Ch, 20h, 0C6DB0h, 0C6B8h
dd 20h,	0C6DB0h, 0C713h, 20h, 0C6DB0h, 0C752h, 20h, 0C6DB0h
dd 0C8ACh, 20h,	0C6DB0h, 0C8D0h, 20h, 0C6DB0h, 0C9B8h
dd 20h,	0C6DB0h, 0C9D3h, 20h, 0C6DB0h, 0CA0Eh, 20h, 0C6DB0h
dd 0CA37h, 20h,	0C6DB0h, 0CA98h, 20h, 0C6DB0h, 0CAD6h
dd 20h,	0C6DB0h, 0CB40h, 20h, 0C6DB0h, 0CB6Eh, 20h, 0C6DB0h
dd 0CBA6h, 20h,	0C6DB0h, 0CC0Dh, 20h, 0C6DB0h, 0CC9Fh
dd 20h,	0C6DB0h, 0CCE3h, 20h, 0C6DB0h, 0CD23h, 20h, 0C6DB0h
dd 0CEE8h, 20h,	0C6DB0h, 0CF15h, 20h, 0C6DB0h, 0D288h
dd 20h,	0C6DB0h, 0D2A2h, 20h, 0C6DB0h, 0D2F6h, 20h, 0C6DB0h
dd 0D3A4h, 20h,	0C6DB0h, 0D3EFh, 20h, 0C6DB0h, 0D8A8h
dd 20h,	0C6DB0h, 0D8E0h, 20h, 0C6DB0h, 0D9C0h, 20h, 0C6DB0h
dd 0D9EBh, 20h,	0C6DB0h, 0DB02h, 20h, 0C6DB0h, 0DB32h
dd 20h,	0C6DB0h, 0DC06h, 20h, 0C6DB0h, 0DC29h, 20h, 0C6DB0h
dd 0DC7Dh, 20h,	0C6DB0h, 0DEB5h, 20h, 0C6DB0h, 0DF12h
dd 20h,	0C6DB0h, 0E0DCh, 20h, 0C6DB0h, 0E14Ch, 20h, 0C6DB0h
dd 0E166h, 20h,	0C6DB0h, 0E196h, 20h, 0C6DB0h, 0E1AEh
dd 20h,	0C6DB0h, 0E1C9h, 20h, 0C6DB0h, 0E1E6h, 20h, 0C6DB0h
dd 0E24Eh, 20h,	0C6DB0h, 0E266h, 20h, 0C6DB0h, 0E2F0h
dd 20h,	0C6DB0h, 0E416h, 20h, 0C6DB0h, 0E4B0h, 20h, 0C6DB0h
dd 0E520h, 20h,	0C6DB0h, 0E53Ah, 20h, 0C6DB0h, 0E56Ah
dd 20h,	0C6DB0h, 0E582h, 20h, 0C6DB0h, 0E59Dh, 20h, 0C6DB0h
dd 0E5B8h, 20h,	0C6DB0h, 0E74Fh, 20h, 0C6DB0h, 0E84Bh
dd 20h,	0C6DB0h, 0E870h, 20h, 0C6DB0h, 0E935h, 20h, 0C6DB0h
dd 0E9D6h, 20h,	0C6DB0h, 0EA2Eh, 20h, 0C6DB0h, 0EA96h
dd 20h,	0C6DB0h, 0EAAEh, 20h, 0C6DB0h, 0EB40h, 20h, 0C6DB0h
dd 0EBB0h, 20h,	0C6DB0h, 0EBCAh, 20h, 0C6DB0h, 0EBFAh
dd 20h,	0C6DB0h, 0EC12h, 20h, 0C6DB0h, 0EC2Dh, 20h, 0C6DB0h
dd 0EC48h, 20h,	0C6DB0h, 0ECBAh, 20h, 0C6DB0h, 0ED34h
dd 20h,	0C6DB0h, 0EF8Dh, 20h, 0C6DB0h, 0F48Eh, 20h, 0C6DB0h
dd 0F4D2h, 20h,	0C6DB0h, 0F53Ah, 20h, 0C6DB0h, 0F552h
dd 20h,	0C6DB0h, 0F5D9h, 20h, 0C6DB0h, 0F619h, 20h, 0C6DB0h
dd 0F659h, 20h,	0C6DB0h, 0F674h, 20h, 0C6DB0h, 0F69Dh
dd 20h,	0C6DB0h, 0F6B4h, 20h, 0C6DB0h, 0F6D5h, 20h, 0C6DB0h
dd 0F726h, 20h,	0C6DB0h, 0F780h, 20h, 0C6DB0h, 0F795h
dd 20h,	0C6DB0h, 0F7A8h, 20h, 0C6DB0h, 0F7BDh, 20h, 0C6DB0h
dd 0F7D2h, 20h,	0C6DB0h, 0FCC8h, 20h, 0C6DB0h, 0FCE1h
dd 20h,	0C6DB0h, 0FDA4h, 20h, 0C6DB0h, 0FDD8h, 20h, 0C6DB0h
dd 0FDF5h, 20h,	0C6DB0h, 0FE0Bh, 20h, 0C6DB0h, 0FE44h
dd 20h,	0C6DB0h, 0FE92h, 20h, 0C6DB0h, 0FEE2h, 20h, 0C6DB0h
dd 0FEFCh, 20h,	0C6DB0h, 0FF41h, 20h, 0C6DB0h, 0FF88h
dd 20h,	0C6DB0h, 10069h, 20h, 0C6DB0h, 10348h, 20h, 0C6DB0h
dd 10392h, 20h,	0C6DB0h, 103BFh, 20h, 0C6DB0h, 103E8h
dd 20h,	0C6DB0h, 104BBh, 20h, 0C6DB0h, 104F0h, 20h, 0C6DB0h
dd 10542h, 20h,	0C6DB0h, 105CAh, 20h, 0C6DB0h, 1073Dh
dd 20h,	0C6DB0h, 10754h
dd 20h,	0C6DB0h, 10795h, 20h, 0C6DB0h, 107ABh, 20h, 0C6DB0h
dd 107E9h, 20h,	0C6DB0h, 10800h, 20h, 0C6DB0h, 1083Fh
dd 20h,	0C6DB0h, 108A9h, 20h, 0C6DB0h, 108F6h, 20h, 0C6DB0h
dd 1091Bh, 20h,	0C6DB0h, 109C8h, 20h, 0C6DB0h, 10B1Eh
dd 20h,	0C6DB0h, 10B9Eh, 20h, 0C6DB0h, 10BD8h, 20h, 0C6DB0h
dd 10C24h, 20h,	0C6DB0h, 10C4Eh, 20h, 0C6DB0h, 10C85h
dd 20h,	0C6DB0h, 10C9Ch, 20h, 0C6DB0h, 10CDEh, 20h, 0C6DB0h
dd 10D0Ah, 20h,	0C6DB0h, 10D44h, 20h, 0C6DB0h, 10D5Ch
dd 20h,	0C6DB0h, 10D77h, 20h, 0C6DB0h, 10D94h, 20h, 0C6DB0h
dd 10DAEh, 20h,	0C6DB0h, 10E02h, 20h, 0C6DB0h, 10E4Ch
dd 20h,	0C6DB0h, 10E70h, 20h, 0C6DB0h, 10E90h, 20h, 0C6DB0h
dd 10EDFh, 20h,	0C6DB0h, 1104Fh, 20h, 0C6DB0h, 11099h
dd 20h,	0C6DB0h, 111A0h, 20h, 0C6DB0h, 111E5h, 20h, 0C6DB0h
dd 1127Fh, 20h,	0C6DB0h, 1129Ah, 20h, 0C6DB0h, 112CAh
dd 20h,	0C6DB0h, 112FEh, 20h, 0C6DB0h, 11331h, 20h, 0C6DB0h
dd 11411h, 20h,	0C6DB0h, 1154Ah, 20h, 0C6DB0h, 1157Fh
dd 20h,	0C6DB0h, 1164Ah, 20h, 0C6DB0h, 1167Eh, 20h, 0C6DB0h
dd 116FDh, 20h,	0C6DB0h, 11729h, 20h, 0C6DB0h, 11770h
dd 20h,	0C6DB0h, 11857h, 20h, 0C6DB0h, 11A16h, 20h, 0C6DB0h
dd 11A4Bh, 20h,	0C6DB0h, 11B12h, 20h, 0C6DB0h, 11B89h
dd 20h,	0C6DB0h, 11BC9h, 20h, 0C6DB0h, 11BD9h, 20h, 0C6DB0h
dd 11BF9h, 20h,	0C6DB0h, 11C09h, 20h, 0C6DB0h, 11C32h
dd 20h,	0C6DB0h, 11C42h, 20h, 0C6DB0h, 11C68h, 20h, 0C6DB0h
dd 11C89h, 20h,	0C6DB0h, 11CA0h, 20h, 0C6DB0h, 11D4Ah
dd 20h,	0C6DB0h, 11D68h, 20h, 0C6DB0h, 11EBAh, 20h, 0C6DB0h
dd 11F78h, 20h,	0C6DB0h, 11F91h, 20h, 0C6DB0h, 11FA4h
dd 20h,	0C6DB0h, 11FB9h, 20h, 0C6DB0h, 11FD1h, 20h, 0C6DB0h
dd 11FFFh, 20h,	0C6DB0h, 12034h, 20h, 0C6DB0h, 12049h
dd 20h,	0C6DB0h, 1205Ch, 20h, 0C6DB0h, 12071h, 20h, 0C6DB0h
dd 12084h, 20h,	0C6DB0h, 12162h, 20h, 0C6DB0h, 1219Ch
dd 20h,	0C6DB0h, 1221Ah, 20h, 0C6DB0h, 12240h, 20h, 0C6DB0h
dd 122D2h, 20h,	0C6DB0h, 12329h, 20h, 0C6DB0h, 1233Dh
dd 20h,	0C6DB0h, 1235Ah, 20h, 0C6DB0h, 12370h, 20h, 0C6DB0h
dd 12380h, 20h,	0C6DB0h, 12395h, 20h, 0C6DB0h, 123C2h
dd 20h,	0C6DB0h, 12513h, 20h, 0C6DB0h, 12548h, 20h, 0C6DB0h
dd 1255Dh, 20h,	0C6DB0h, 125DDh, 20h, 0C6DB0h, 12600h
dd 20h,	0C6DB0h, 12727h, 20h, 0C6DB0h, 12746h, 20h, 0C6DB0h
dd 1277Bh, 20h,	0C6DB0h, 12798h, 20h, 0C6DB0h, 127B0h
dd 20h,	0C6DB0h, 127E7h, 20h, 0C6DB0h, 1280Eh, 20h, 0C6DB0h
dd 12849h, 20h,	0C6DB0h, 12893h, 20h, 0C6DB0h, 128C9h
dd 20h,	0C6DB0h, 12959h, 20h, 0C6DB0h, 129A1h, 20h, 0C6DB0h
dd 129C3h, 20h,	0C6DB0h, 12A41h, 20h, 0C6DB0h, 12A62h
dd 20h,	0C6DB0h, 12A98h, 20h, 0C6DB0h, 12AEEh, 20h, 0C6DB0h
dd 12B27h, 20h,	0C6DB0h, 12B42h, 20h, 0C6DB0h, 12B6Fh
dd 20h,	0C6DB0h, 12B96h, 20h, 0C6DB0h, 12BF9h, 20h, 0C6DB0h
dd 12C52h, 20h,	0C6DB0h, 12C72h, 20h, 0C6DB0h, 12CA8h
dd 20h,	0C6DB0h, 12CCAh, 20h, 0C6DB0h, 12D0Ah, 20h, 0C6DB0h
dd 12D2Ah, 20h,	0C6DB0h, 12D70h, 20h, 0C6DB0h, 12DE6h
dd 20h,	0C6DB0h, 12E11h, 20h, 0C6DB0h, 12E30h, 20h, 0C6DB0h
dd 12E64h, 20h,	0C6DB0h, 12EC1h, 20h, 0C6DB0h, 12EE0h
dd 20h,	0C6DB0h, 12F14h, 20h, 0C6DB0h, 12F72h, 20h, 0C6DB0h
dd 12F9Bh, 20h,	0C6DB0h, 12FD8h, 20h, 0C6DB0h, 13051h
dd 20h,	0C6DB0h, 13072h, 20h, 0C6DB0h, 130A8h, 20h, 0C6DB0h
dd 13101h, 20h,	0C6DB0h, 13122h, 20h, 0C6DB0h, 13158h
dd 20h,	0C6DB0h, 131B1h, 20h, 0C6DB0h, 131D2h, 20h, 0C6DB0h
dd 13208h, 20h,	0C6DB0h, 13261h, 20h, 0C6DB0h, 13282h
dd 20h,	0C6DB0h, 132B8h, 20h, 0C6DB0h, 13316h, 20h, 0C6DB0h
dd 1333Fh, 20h,	0C6DB0h, 1337Ch, 20h, 0C6DB0h, 133FBh
dd 20h,	0C6DB0h, 1358Dh, 20h, 0C6DB0h, 135CFh, 20h, 0C6DB0h
dd 135EDh, 20h,	0C6DB0h, 13634h, 20h, 0C6DB0h, 1369Ch
dd 20h,	0C6DB0h, 137D1h, 20h, 0C6DB0h, 138F0h, 20h, 0C6DB0h
dd 13914h, 20h,	0C6DB0h, 13934h, 20h, 0C6DB0h, 139E7h
dd 20h,	0C6DB0h, 13A6Ah, 20h, 0C6DB0h, 13AEEh, 20h, 0C6DB0h
dd 13B2Eh, 20h,	0C6DB0h, 13B74h, 20h, 0C6DB0h, 13BB2h
dd 20h,	0C6DB0h, 13C09h, 20h, 0C6DB0h, 13C7Dh, 20h, 0C6DB0h
dd 13CDCh, 20h,	0C6DB0h, 13CF9h, 20h, 0C6DB0h, 13D18h
dd 20h,	0C6DB0h, 13D4Ch, 20h, 0C6DB0h, 13DA9h, 20h, 0C6DB0h
dd 13DC8h, 20h,	0C6DB0h, 13DFCh, 20h, 0C6DB0h, 13E5Fh
dd 20h,	0C6DB0h
dd 13EBEh, 20h,	0C6DB0h, 13F7Ah, 20h, 0C6DB0h, 13FA6h
dd 20h,	0C6DB0h, 1404Dh, 20h, 0C6DB0h, 14068h, 20h, 0C6DB0h
dd 14098h, 20h,	0C6DB0h, 140D2h, 20h, 0C6DB0h, 140FBh
dd 20h,	0C6DB0h, 14118h, 20h, 0C6DB0h, 14162h, 20h, 0C6DB0h
dd 14178h, 20h,	0C6DB0h, 1418Dh, 20h, 0C6DB0h, 141A7h
dd 20h,	0C6DB0h, 141E7h, 20h, 0C6DB0h, 14241h, 20h, 0C6DB0h
dd 1428Ch, 20h,	0C6DB0h, 14350h, 20h, 0C6DB0h, 1436Eh
dd 20h,	0C6DB0h, 145B1h, 20h, 0C6DB0h, 145DEh, 20h, 0C6DB0h
dd 14618h, 20h,	0C6DB0h, 1464Eh, 20h, 0C6DB0h, 14699h
dd 20h,	0C6DB0h, 146DAh, 20h, 0C6DB0h, 1472Bh, 20h, 0C6DB0h
dd 147A5h, 20h,	0C6DB0h, 147D6h, 20h, 0C6DB0h, 14830h
dd 20h,	0C6DB0h, 1486Bh, 20h, 0C6DB0h, 148BEh, 20h, 0C6DB0h
dd 1495Ah, 20h,	0C6DB0h, 149B9h, 20h, 0C6DB0h, 149F0h
dd 20h,	0C6DB0h, 14A02h, 20h, 0C6DB0h, 14A27h, 20h, 0C6DB0h
dd 14A72h, 20h,	0C6DB0h, 14B1Bh, 20h, 0C6DB0h, 14B7Bh
dd 20h,	0C6DB0h, 14BDDh, 20h, 0C6DB0h, 14BF7h, 20h, 0C6DB0h
dd 14C30h, 20h,	0C6DB0h, 14C69h, 20h, 0C6DB0h, 14C93h
dd 20h,	0C6DB0h, 14D08h, 20h, 0C6DB0h, 14D46h, 20h, 0C6DB0h
dd 14D7Ah, 20h,	0C6DB0h, 14D96h, 20h, 0C6DB0h, 14DB2h
dd 20h,	0C6DB0h, 14DCEh, 20h, 0C6DB0h, 14E2Fh, 20h, 0C6DB0h
dd 14E50h, 20h,	0C6DB0h, 14E65h, 20h, 0C6DB0h, 14E7Dh
dd 20h,	0C6DB0h, 14EA3h, 20h, 0C6DB0h, 14F15h, 20h, 0C6DB0h
dd 14F5Eh, 20h,	0C6DB0h, 14F9Ch, 20h, 0C6DB0h, 14FF8h
dd 20h,	0C6DB0h, 15074h, 20h, 0C6DB0h, 15089h, 20h, 0C6DB0h
dd 150A1h, 20h,	0C6DB0h, 150CEh, 20h, 0C6DB0h, 1514Ch
dd 20h,	0C6DB0h, 151A8h, 20h, 0C6DB0h, 1522Ch, 20h, 0C6DB0h
dd 15387h, 20h,	0C6DB0h, 15573h, 20h, 0C6DB0h, 155DBh
dd 20h,	0C6DB0h, 15601h, 20h, 0C6DB0h, 15665h, 20h, 0C6DB0h
dd 15719h, 20h,	0C6DB0h, 15729h, 20h, 0C6DB0h, 1574Dh
dd 20h,	0C6DB0h, 1575Dh, 20h, 0C6DB0h, 1578Ah, 20h, 0C6DB0h
dd 157D0h, 20h,	0C6DB0h, 15B60h, 20h, 0C6DB0h, 15D5Dh
dd 20h,	0C6DB0h, 15E9Ch, 20h, 0C6DB0h, 15EB1h, 20h, 0C6DB0h
dd 15ECAh, 20h,	0C6DB0h, 15F14h, 20h, 0C6DB0h, 160A8h
dd 20h,	0C6DB0h, 160E8h, 20h, 0C6DB0h, 1610Ah, 20h, 0C6DB0h
dd 1636Fh, 20h,	0C6DB0h, 16492h, 20h, 0C6DB0h, 164C0h
dd 20h,	0C6DB0h, 16546h, 20h, 0C6DB0h, 1656Dh, 20h, 0C6DB0h
dd 1658Dh, 20h,	0C6DB0h, 165BAh, 20h, 0C6DB0h, 165F9h
dd 20h,	0C6DB0h, 1660Fh, 20h, 0C6DB0h, 1664Dh, 20h, 0C6DB0h
dd 16729h, 20h,	0C6DB0h, 16787h, 20h, 0C6DB0h, 167C7h
dd 20h,	0C6DB0h, 1680Fh, 20h, 0C6DB0h, 16853h, 20h, 0C6DB0h
dd 16901h, 20h,	0C6DB0h, 1693Eh, 20h, 0C6DB0h, 169C0h
dd 20h,	0C6DB0h, 169D5h, 20h, 0C6DB0h, 169E8h, 20h, 0C6DB0h
dd 169FDh, 20h,	0C6DB0h, 16A10h, 20h, 0C6DB0h, 16B50h
dd 20h,	0C6DB0h, 16B65h, 20h, 0C6DB0h, 16BAAh, 20h, 0C6DB0h
dd 16BD3h, 20h,	0C6DB0h, 16C06h, 20h, 0C6DB0h, 16C2Ah
dd 20h,	0C6DB0h, 16C56h, 20h, 0C6DB0h, 16C86h, 20h, 0C6DB0h
dd 16C9Eh, 20h,	0C6DB0h, 16CC2h, 20h, 0C6DB0h, 16CFAh
dd 20h,	0C6DB0h, 16D38h, 20h, 0C6DB0h, 16DB6h, 20h, 0C6DB0h
dd 16DF6h, 20h,	0C6DB0h, 16E3Ah, 20h, 0C6DB0h, 16E5Ah
dd 20h,	0C6DB0h, 16E98h, 20h, 0C6DB0h, 16ED6h, 20h, 0C6DB0h
dd 16EFEh, 20h,	0C6DB0h, 16F36h, 20h, 0C6DB0h, 16F71h
dd 20h,	0C6DB0h, 16FAEh, 20h, 0C6DB0h, 16FE6h, 20h, 0C6DB0h
dd 1702Bh, 20h,	0C6DB0h, 1705Fh, 20h, 0C6DB0h, 17082h
dd 20h,	0C6DB0h, 170AEh, 20h, 0C6DB0h, 170DEh, 20h, 0C6DB0h
dd 170F6h, 20h,	0C6DB0h, 1711Fh, 20h, 0C6DB0h, 1714Bh
dd 20h,	0C6DB0h, 1716Eh, 20h, 0C6DB0h, 1719Ah, 20h, 0C6DB0h
dd 171CAh, 20h,	0C6DB0h, 171F8h, 20h, 0C6DB0h, 1721Ch
dd 20h,	0C6DB0h, 1725Eh, 20h, 0C6DB0h, 172B9h, 20h, 0C6DB0h
dd 17348h, 20h,	0C6DB0h, 17416h, 20h, 0C6DB0h, 174C7h
dd 20h,	0C6DB0h, 17549h, 20h, 0C6DB0h, 17579h, 20h, 0C6DB0h
dd 175CFh, 20h,	0C6DB0h, 17641h, 20h, 0C6DB0h, 17671h
dd 20h,	0C6DB0h, 176C7h, 20h, 0C6DB0h, 1772Ah, 20h, 0C6DB0h
dd 17752h, 20h,	0C6DB0h, 17788h, 20h, 0C6DB0h, 177E1h
dd 20h,	0C6DB0h, 17809h, 20h, 0C6DB0h, 1783Dh, 20h, 0C6DB0h
dd 1789Ah, 20h,	0C6DB0h, 178C2h, 20h, 0C6DB0h, 178F8h
dd 20h,	0C6DB0h, 17951h, 20h, 0C6DB0h, 17979h, 20h, 0C6DB0h
dd 179ADh, 20h,	0C6DB0h, 17A0Ah, 20h, 0C6DB0h, 17A32h
dd 20h,	0C6DB0h, 17A68h, 20h, 0C6DB0h, 17AC1h, 20h, 0C6DB0h
dd 17AE9h, 20h
dd 0C6DB0h, 17B1Dh, 20h, 0C6DB0h, 17B75h, 20h, 0C6DB0h
dd 17B9Dh, 20h,	0C6DB0h, 17BD1h, 20h, 0C6DB0h, 17C33h
dd 20h,	0C6DB0h, 17C5Fh, 20h, 0C6DB0h, 17C82h, 20h, 0C6DB0h
dd 17CAEh, 20h,	0C6DB0h, 17CDEh, 20h, 0C6DB0h, 17D01h
dd 20h,	0C6DB0h, 17D18h, 20h, 0C6DB0h, 17D51h, 20h, 0C6DB0h
dd 17D68h, 20h,	0C6DB0h, 17DDEh, 20h, 0C6DB0h, 17F34h
dd 20h,	0C6DB0h, 181B3h, 20h, 0C6DB0h, 18533h, 20h, 0C6DB0h
dd 187B7h, 20h,	0C6DB0h, 18BCFh, 20h, 0C6DB0h, 18BF1h
dd 20h,	0C6DB0h, 19538h, 20h, 0C6DB0h, 19550h, 20h, 0C6DB0h
dd 1956Eh, 20h,	0C6DB0h, 19589h, 20h, 0C6DB0h, 195A7h
dd 20h,	0C6DB0h, 195C2h, 20h, 0C6DB0h, 19664h, 20h, 0C6DB0h
dd 19682h, 20h,	0C6DB0h, 196CDh, 20h, 0C6DB0h, 1970Ch
dd 20h,	0C6DB0h, 197D3h, 20h, 0C6DB0h, 19824h, 20h, 0C6DB0h
dd 198EBh, 20h,	0C6DB0h, 19915h, 20h, 0C6DB0h, 1993Eh
dd 20h,	0C6DB0h, 1995Dh, 20h, 0C6DB0h, 19986h, 20h, 0C6DB0h
dd 199A9h, 20h,	0C6DB0h, 199C5h, 20h, 0C6DB0h, 199EDh
dd 20h,	0C6DB0h, 19A09h, 20h, 0C6DB0h, 19A5Dh, 20h, 0C6DB0h
dd 19AC5h, 20h,	0C6DB0h, 19DFFh, 20h, 0C6DB0h, 19E62h
dd 20h,	0C6DB0h, 1A0FAh, 20h, 0C6DB0h, 1A111h, 20h, 0C6DB0h
dd 1A151h, 20h,	0C6DB0h, 1A168h, 20h, 0C6DB0h, 1A17Dh
dd 20h,	0C6DB0h, 1A190h, 20h, 0C6DB0h, 1A1A5h, 20h, 0C6DB0h
dd 1A1B8h, 20h,	0C6DB0h, 1A1CAh, 20h, 0C6DB0h, 1A1E0h
dd 20h,	0C6DB0h, 1A1F2h, 20h, 0C6DB0h, 1A208h, 20h, 0C6DB0h
dd 1A21Ah, 20h,	0C6DB0h, 1A235h, 20h, 0C6DB0h, 1A251h
dd 20h,	0C6DB0h, 1A286h, 20h, 0C6DB0h, 1A2E7h, 20h, 0C6DB0h
dd 1A357h, 20h,	0C6DB0h, 1A367h, 20h, 0C6DB0h, 1A3A3h
dd 20h,	0C6DB0h, 1A3B3h, 20h, 0C6DB0h, 1A3EFh, 20h, 0C6DB0h
dd 1A3FFh, 20h,	0C6DB0h, 1A42Fh, 20h, 0C6DB0h, 1A482h
dd 20h,	0C6DB0h, 1A496h, 20h, 0C6DB0h, 1A4B9h, 20h, 0C6DB0h
dd 1A4ECh, 20h,	0C6DB0h, 1A50Ch, 20h, 0C6DB0h, 1A542h
dd 20h,	0C6DB0h, 1A559h, 20h, 0C6DB0h, 1A57Dh, 20h, 0C6DB0h
dd 1A5B5h, 20h,	0C6DB0h, 1A5C5h, 20h, 0C6DB0h, 1A5E1h
dd 20h,	0C6DB0h, 1A5F1h, 20h, 0C6DB0h, 1A60Dh, 20h, 0C6DB0h
dd 1A61Dh, 20h,	0C6DB0h, 1A639h, 20h, 0C6DB0h, 1A655h
dd 20h,	0C6DB0h, 1A67Dh, 20h, 0C6DB0h, 1A699h, 20h, 0C6DB0h
dd 1A6BCh, 20h,	0C6DB0h, 1A6D1h, 20h, 0C6DB0h, 1A6E4h
dd 20h,	0C6DB0h, 1A6F9h, 20h, 0C6DB0h, 1A70Ch, 20h, 0C6DB0h
dd 1A721h, 20h,	0C6DB0h, 1A734h, 20h, 0C6DB0h, 1A753h
dd 20h,	0C6DB0h, 1A76Dh, 20h, 0C6DB0h, 1A795h, 20h, 0C6DB0h
dd 1A7CCh, 20h,	0C6DB0h, 1A86Ch, 20h, 0C6DB0h, 1A8E0h
dd 20h,	0C6DB0h, 1A9BFh, 20h, 0C6DB0h, 1AA8Dh, 20h, 0C6DB0h
dd 1AABDh, 20h,	0C6DB0h, 1AAD5h, 20h, 0C6DB0h, 1AB32h
dd 20h,	0C6DB0h, 1AB52h, 20h, 0C6DB0h, 1AB7Ah, 20h, 0C6DB0h
dd 1ABA2h, 20h,	0C6DB0h, 1ABD7h, 20h, 0C6DB0h, 1ABFFh
dd 20h,	0C6DB0h, 1AC31h, 20h, 0C6DB0h, 1AC96h, 20h, 0C6DB0h
dd 1ACB8h, 20h,	0C6DB0h, 1ACDAh, 20h, 0C6DB0h, 1AD0Ch
dd 20h,	0C6DB0h, 1AD21h, 20h, 0C6DB0h, 1AD3Ch, 20h, 0C6DB0h
dd 1B257h, 20h,	0C6DB0h, 1B270h, 20h, 0C6DB0h, 1B282h
dd 20h,	0C6DB0h, 1B298h, 20h, 0C6DB0h, 1B2DDh, 20h, 0C6DB0h
dd 1B300h, 20h,	0C6DB0h, 1B387h, 20h, 0C6DB0h, 1B3C6h
dd 20h,	0C6DB0h, 1B3FBh, 20h, 0C6DB0h, 1B423h, 20h, 0C6DB0h
dd 1B482h, 20h,	0C6DB0h, 1B4A4h, 20h, 0C6DB0h, 1B57Ch
dd 20h,	0C6DB0h, 1B5A4h, 20h, 0C6DB0h, 1B5B9h, 20h, 0C6DB0h
dd 1B5D4h, 20h,	0C6DB0h, 1B646h, 20h, 0C6DB0h, 1B681h
dd 20h,	0C6DB0h, 1B71Fh, 20h, 0C6DB0h, 1B739h, 20h, 0C6DB0h
dd 1B762h, 20h,	0C6DB0h, 1B78Ah, 20h, 0C6DB0h, 1B7B2h
dd 20h,	0C6DB0h, 1B7DAh, 20h, 0C6DB0h, 1B812h, 20h, 0C6DB0h
dd 1B83Bh, 20h,	0C6DB0h, 1B873h, 20h, 0C6DB0h, 1B891h
dd 20h,	0C6DB0h, 1B8B7h, 20h, 0C6DB0h, 1B914h, 20h, 0C6DB0h
dd 1B95Ah, 20h,	0C6DB0h, 1B98Ch, 20h, 0C6DB0h, 1B9A1h
dd 20h,	0C6DB0h, 1B9B9h, 20h, 0C6DB0h, 1B9E0h, 20h, 0C6DB0h
dd 1B9F9h, 20h,	0C6DB0h, 1BA17h, 20h, 0C6DB0h, 1BA4Eh
dd 20h,	0C6DB0h, 1BA79h, 20h, 0C6DB0h, 1BAC0h, 20h, 0C6DB0h
dd 1BBB6h, 20h,	0C6DB0h, 1BC34h, 20h, 0C6DB0h, 1BC60h
dd 20h,	0C6DB0h, 1BCAAh, 20h, 0C6DB0h, 1BD08h, 20h, 0C6DB0h
dd 1BD40h, 20h,	0C6DB0h, 1BD66h, 20h, 0C6DB0h, 1BDC0h
dd 20h,	0C6DB0h, 1BECEh, 20h, 0C6DB0h, 1BF2Dh, 20h, 0C6DB0h
dd 1BF5Fh, 20h,	0C6DB0h, 1BFCAh, 20h, 0C6DB0h, 1C010h
dd 20h,	0C6DB0h, 1C06Fh
dd 20h,	0C6DB0h, 1C67Ch, 20h, 0C6DB0h, 1C6FAh, 20h, 0C6DB0h
dd 1C750h, 20h,	0C6DB0h, 1C7E2h, 20h, 0C6DB0h, 1C848h
dd 20h,	0C6DB0h, 1C85Dh, 20h, 0C6DB0h, 1C872h, 20h, 0C6DB0h
dd 1C91Eh, 20h,	0C6DB0h, 1C934h, 20h, 0C6DB0h, 1C950h
dd 20h,	0C6DB0h, 1C96Ah, 20h, 0C6DB0h, 1C9BDh, 20h, 0C6DB0h
dd 1C9D9h, 20h,	0C6DB0h, 1CA19h, 20h, 0C6DB0h, 1CA33h
dd 20h,	0C6DB0h, 1CA72h, 20h, 0C6DB0h, 1CA91h, 20h, 0C6DB0h
dd 1CAACh, 20h,	0C6DB0h, 1CB0Ah, 20h, 0C6DB0h, 1CB34h
dd 20h,	0C6DB0h, 1CB71h, 20h, 0C6DB0h, 1CB88h, 20h, 0C6DB0h
dd 1CBC1h, 20h,	0C6DB0h, 1CBD8h, 20h, 0C6DB0h, 1CC15h
dd 20h,	0C6DB0h, 1CC2Ch, 20h, 0C6DB0h, 1CC71h, 20h, 0C6DB0h
dd 1CCBEh, 20h,	0C6DB0h, 1CD07h, 20h, 0C6DB0h, 1CDFAh
dd 20h,	0C6DB0h, 1CF88h, 20h, 0C6DB0h, 1D079h, 20h, 0C6DB0h
dd 1D0DEh, 20h,	0C6DB0h, 1D186h, 20h, 0C6DB0h, 1D1AAh
dd 20h,	0C6DB0h, 1D1EFh, 20h, 0C6DB0h, 1D1FFh, 20h, 0C6DB0h
dd 1D238h, 20h,	0C6DB0h, 1D25Ch, 20h, 0C6DB0h, 1D363h
dd 20h,	0C6DB0h, 1D3C2h, 20h, 0C6DB0h, 1D411h, 20h, 0C6DB0h
dd 1D44Bh, 20h,	0C6DB0h, 1D50Ah, 20h, 0C6DB0h, 1D54Eh
dd 20h,	0C6DB0h, 1D55Eh, 20h, 0C6DB0h, 1D58Ch, 20h, 0C6DB0h
dd 1D73Ah, 20h,	0C6DB0h, 1D7BEh, 20h, 0C6DB0h, 1D7DDh
dd 20h,	0C6DB0h, 1D7EDh, 20h, 0C6DB0h, 1D80Dh, 20h, 0C6DB0h
dd 1D823h, 20h,	0C6DB0h, 1D860h, 20h, 0C6DB0h, 1D87Bh
dd 20h,	0C6DB0h, 1D8C1h, 20h, 0C6DB0h, 1D8D8h, 20h, 0C6DB0h
dd 1D915h, 20h,	0C6DB0h, 1D92Ch, 20h, 0C6DB0h, 1D978h
dd 20h,	0C6DB0h, 1D9B9h, 20h, 0C6DB0h, 1D9E6h, 20h, 0C6DB0h
dd 1DA16h, 20h,	0C6DB0h, 1DA2Eh, 20h, 0C6DB0h, 1DA46h
dd 20h,	0C6DB0h, 1DA61h, 20h, 0C6DB0h, 1DA7Eh, 20h, 0C6DB0h
dd 1DAA7h, 20h,	0C6DB0h, 1DADEh, 20h, 0C6DB0h, 1DB19h
dd 20h,	0C6DB0h, 1DB67h, 20h, 0C6DB0h, 1DBA0h, 20h, 0C6DB0h
dd 1DBD0h, 20h,	0C6DB0h, 1DCB2h, 20h, 0C6DB0h, 1DD1Fh
dd 20h,	0C6DB0h, 1DD87h, 20h, 0C6DB0h, 1DDB0h, 20h, 0C6DB0h
dd 1DDDFh, 20h,	0C6DB0h, 1DDF4h, 20h, 0C6DB0h, 1DE2Bh
dd 20h,	0C6DB0h, 1DE40h, 20h, 0C6DB0h, 1DE55h, 20h, 0C6DB0h
dd 1DE68h, 20h,	0C6DB0h, 1DE7Dh, 20h, 0C6DB0h, 1DE90h
dd 20h,	0C6DB0h, 1DEA9h, 20h, 0C6DB0h, 1DEBCh, 20h, 0C6DB0h
dd 1DED1h, 20h,	0C6DB0h, 1DEE6h, 20h, 0C6DB0h, 1E0B2h
dd 20h,	0C6DB0h, 1E0C8h, 20h, 0C6DB0h, 1E0E4h, 20h, 0C6DB0h
dd 1E0F8h, 20h,	0C6DB0h, 1E10Dh, 20h, 0C6DB0h, 1E125h
dd 20h,	0C6DB0h, 1E140h, 20h, 0C6DB0h, 1E161h, 20h, 0C6DB0h
dd 1E191h, 20h,	0C6DB0h, 1E1B9h, 20h, 0C6DB0h, 1E1D1h
dd 20h,	0C6DB0h, 1E212h, 20h, 0C6DB0h, 1E23Eh, 20h, 0C6DB0h
dd 1E259h, 20h,	0C6DB0h, 1E2B0h, 20h, 0C6DB0h, 1E2CAh
dd 20h,	0C6DB0h, 1E2E5h, 20h, 0C6DB0h, 1E309h, 20h, 0C6DB0h
dd 1E32Ch, 20h,	0C6DB0h, 1E367h, 20h, 0C6DB0h, 1E3B2h
dd 20h,	0C6DB0h, 1E3D7h, 20h, 0C6DB0h, 1E434h, 20h, 0C6DB0h
dd 1E448h, 20h,	0C6DB0h, 1E474h, 20h, 0C6DB0h, 1E489h
dd 20h,	0C6DB0h, 1E4C7h, 20h, 0C6DB0h, 1E4DCh, 20h, 0C6DB0h
dd 1E4F5h, 20h,	0C6DB0h, 1E50Dh, 20h, 0C6DB0h, 1E524h
dd 20h,	0C6DB0h, 1E561h, 20h, 0C6DB0h, 1E577h, 20h, 0C6DB0h
dd 1E5BAh, 20h,	0C6DB0h, 1E5EFh, 20h, 0C6DB0h, 1E629h
dd 20h,	0C6DB0h, 1E640h, 20h, 0C6DB0h, 1E67Dh, 20h, 0C6DB0h
dd 1E6A4h, 20h,	0C6DB0h, 1E6D6h, 20h, 0C6DB0h, 1E6F1h
dd 20h,	0C6DB0h, 1E708h, 20h, 0C6DB0h, 1E745h, 20h, 0C6DB0h
dd 1E768h, 20h,	0C6DB0h, 1E7A9h, 20h, 0C6DB0h, 1E7C0h
dd 20h,	0C6DB0h, 1E7FEh, 20h, 0C6DB0h, 1E82Ch, 20h, 0C6DB0h
dd 1E865h, 20h,	0C6DB0h, 1E87Ch, 20h, 0C6DB0h, 1E8B9h
dd 20h,	0C6DB0h, 1E8D0h, 20h, 0C6DB0h, 1E90Dh, 20h, 0C6DB0h
dd 1E94Eh, 20h,	0C6DB0h, 1E989h, 20h, 0C6DB0h, 1E9ABh
dd 20h,	0C6DB0h, 1E9EDh, 20h, 0C6DB0h, 1EA11h, 20h, 0C6DB0h
dd 1EA58h, 20h,	0C6DB0h, 1EABBh, 20h, 0C6DB0h, 1EAE3h
dd 20h,	0C6DB0h, 1EB03h, 20h, 0C6DB0h, 1EB2Ah, 20h, 0C6DB0h
dd 1EB5Ah, 20h,	0C6DB0h, 1EB7Dh, 20h, 0C6DB0h, 1EB95h
dd 20h,	0C6DB0h, 1EBD4h, 20h, 0C6DB0h, 1EC08h, 20h, 0C6DB0h
dd 1EC1Dh, 20h,	0C6DB0h, 1EC30h, 20h, 0C6DB0h, 1EC45h
dd 20h,	0C6DB0h, 1EC58h, 20h, 0C6DB0h, 1EC6Dh, 20h, 0C6DB0h
dd 1EC8Fh, 20h,	0C6DB0h, 1ECFAh, 20h, 0C6DB0h, 1EDC7h
dd 20h,	0C6DB0h, 1EEAEh, 20h, 0C6DB0h, 1F2C1h, 20h, 0C6DB0h
dd 1F2E8h, 20h,	0C6DB0h, 1F31Ch, 20h, 0C6DB0h, 1F339h
dd 20h,	0C6DB0h
dd 1F369h, 20h,	0C6DB0h, 1F3A5h, 20h, 0C6DB0h, 1F3C1h
dd 20h,	0C6DB0h, 1F3FEh, 20h, 0C6DB0h, 1F41Eh, 20h, 0C6DB0h
dd 1F44Ch, 20h,	0C6DB0h, 1F48Ah, 20h, 0C6DB0h, 1F4C7h
dd 20h,	0C6DB0h, 1F519h, 20h, 0C6DB0h, 1F59Fh, 20h, 0C6DB0h
dd 1F637h, 20h,	0C6DB0h, 1F66Eh, 20h, 0C6DB0h, 1F68Eh
dd 20h,	0C6DB0h, 1F6B1h, 20h, 0C6DB0h, 1F6F2h, 20h, 0C6DB0h
dd 1F711h, 20h,	0C6DB0h, 1F728h, 20h, 0C6DB0h, 1F766h
dd 20h,	0C6DB0h, 1F781h, 20h, 0C6DB0h, 1F797h, 20h, 0C6DB0h
dd 1F7DAh, 20h,	0C6DB0h, 1F814h, 20h, 0C6DB0h, 1F856h
dd 20h,	0C6DB0h, 1F871h, 20h, 0C6DB0h, 1F888h, 20h, 0C6DB0h
dd 1F8C5h, 20h,	0C6DB0h, 1F8DCh, 20h, 0C6DB0h, 1F919h
dd 20h,	0C6DB0h, 1F943h, 20h, 0C6DB0h, 1F982h, 20h, 0C6DB0h
dd 1F9BCh, 20h,	0C6DB0h, 1FA01h, 20h, 0C6DB0h, 1FA18h
dd 20h,	0C6DB0h, 1FA5Ah, 20h, 0C6DB0h, 1FA79h, 20h, 0C6DB0h
dd 1FACBh, 20h,	0C6DB0h, 1FB45h, 20h, 0C6DB0h, 1FB81h
dd 20h,	0C6DB0h, 1FB98h, 20h, 0C6DB0h, 1FBD5h, 20h, 0C6DB0h
dd 1FC0Ch, 20h,	0C6DB0h, 1FC45h, 20h, 0C6DB0h, 1FC6Fh
dd 20h,	0C6DB0h, 1FCA9h, 20h, 0C6DB0h, 1FCC0h, 20h, 0C6DB0h
dd 1FCFDh, 20h,	0C6DB0h, 1FD29h, 20h, 0C6DB0h, 1FD66h
dd 20h,	0C6DB0h, 1FDBAh, 20h, 0C6DB0h, 1FE46h, 20h, 0C6DB0h
dd 1FE5Dh, 20h,	0C6DB0h, 1FE95h, 20h, 0C6DB0h, 1FEC9h
dd 20h,	0C6DB0h, 1FF07h, 20h, 0C6DB0h, 1FF3Ah, 20h, 0C6DB0h
dd 1FF8Eh, 20h,	0C6DB0h, 1FFBEh, 20h, 0C6DB0h, 1FFE7h
dd 20h,	0C6DB0h, 20056h, 20h, 0C6DB0h, 200E2h, 20h, 0C6DB0h
dd 20110h, 20h,	0C6DB0h, 20209h, 20h, 0C6DB0h, 2026Fh
dd 20h,	0C6DB0h, 2029Ah, 20h, 0C6DB0h, 202D0h, 20h, 0C6DB0h
dd 202FCh, 20h,	0C6DB0h, 2032Bh, 20h, 0C6DB0h, 20356h
dd 20h,	0C6DB0h, 20386h, 20h, 0C6DB0h, 203AEh, 20h, 0C6DB0h
dd 203D2h, 20h,	0C6DB0h, 20401h, 20h, 0C6DB0h, 2043Eh
dd 20h,	0C6DB0h, 20452h, 20h, 0C6DB0h, 204A1h, 20h, 0C6DB0h
dd 204B7h, 20h,	0C6DB0h, 204F9h, 20h, 0C6DB0h, 20510h
dd 20h,	0C6DB0h, 2054Dh, 20h, 0C6DB0h, 20564h, 20h, 0C6DB0h
dd 205A5h, 20h,	0C6DB0h, 205BCh, 20h, 0C6DB0h, 205F9h
dd 20h,	0C6DB0h, 20610h, 20h, 0C6DB0h, 20655h, 20h, 0C6DB0h
dd 206D8h, 20h,	0C6DB0h, 20781h, 20h, 0C6DB0h, 207ADh
dd 20h,	0C6DB0h, 2080Eh, 20h, 0C6DB0h, 2083Eh, 20h, 0C6DB0h
dd 2089Fh, 20h,	0C6DB0h, 2090Eh, 20h, 0C6DB0h, 2093Ah
dd 20h,	0C6DB0h, 20969h, 20h, 0C6DB0h, 209DFh, 20h, 0C6DB0h
dd 20A5Fh, 20h,	0C6DB0h, 20A72h, 20h, 0C6DB0h, 20AA9h
dd 20h,	0C6DB0h, 20AC0h, 20h, 0C6DB0h, 20B01h, 20h, 0C6DB0h
dd 20B18h, 20h,	0C6DB0h, 20B51h, 20h, 0C6DB0h, 20B68h
dd 20h,	0C6DB0h, 20BA6h, 20h, 0C6DB0h, 20BC3h, 20h, 0C6DB0h
dd 20FF7h, 20h,	0C6DB0h, 21017h, 20h, 0C6DB0h, 21032h
dd 20h,	0C6DB0h, 21062h, 20h, 0C6DB0h, 2107Ch, 20h, 0C6DB0h
dd 210A8h, 20h,	0C6DB0h, 210C2h, 20h, 0C6DB0h, 210DFh
dd 20h,	0C6DB0h, 2111Ch, 20h, 0C6DB0h, 2119Bh, 20h, 0C6DB0h
dd 211CEh, 20h,	0C6DB0h, 2123Eh, 20h, 0C6DB0h, 21272h
dd 20h,	0C6DB0h, 2128Ah, 20h, 0C6DB0h, 21301h, 20h, 0C6DB0h
dd 21323h, 20h,	0C6DB0h, 21343h, 20h, 0C6DB0h, 2135Eh
dd 20h,	0C6DB0h, 2138Eh, 20h, 0C6DB0h, 213A8h, 20h, 0C6DB0h
dd 213D4h, 20h,	0C6DB0h, 213F0h, 20h, 0C6DB0h, 214FBh
dd 20h,	0C6DB0h, 21546h, 20h, 0C6DB0h, 21581h, 20h, 0C6DB0h
dd 215BDh, 20h,	0C6DB0h, 215D4h, 20h, 0C6DB0h, 21618h
dd 20h,	0C6DB0h, 21664h, 20h, 0C6DB0h, 21689h, 20h, 0C6DB0h
dd 216B6h, 20h,	0C6DB0h, 21709h, 20h, 0C6DB0h, 218C0h
dd 20h,	0C6DB0h, 21913h, 20h, 0C6DB0h, 2194Ah, 20h, 0C6DB0h
dd 2198Dh, 20h,	0C6DB0h, 219A4h, 20h, 0C6DB0h, 219ECh
dd 20h,	0C6DB0h, 21A5Bh, 20h, 0C6DB0h, 21E48h, 20h, 0C6DB0h
dd 21EABh, 20h,	0C6DB0h, 21F17h, 20h, 0C6DB0h, 22292h
dd 20h,	0C6DB0h, 222FAh, 20h, 0C6DB0h, 2233Ah, 20h, 0C6DB0h
dd 22356h, 20h,	0C6DB0h, 22372h, 20h, 0C6DB0h, 223A4h
dd 20h,	0C6DB0h, 2241Eh, 20h, 0C6DB0h, 22449h, 20h, 0C6DB0h
dd 22461h, 20h,	0C6DB0h, 224A0h, 20h, 0C6DB0h, 224DDh
dd 20h,	0C6DB0h, 22508h, 20h, 0C6DB0h, 2256Dh, 20h, 0C6DB0h
dd 22599h, 20h,	0C6DB0h, 22600h, 20h, 0C6DB0h, 22684h
dd 20h,	0C6DB0h, 2269Ah, 20h, 0C6DB0h, 226CAh, 20h, 0C6DB0h
dd 226FCh, 20h,	0C6DB0h, 228E3h, 20h, 0C6DB0h, 2298Ah
dd 20h,	0C6DB0h, 229BEh, 20h, 0C6DB0h, 229D6h, 20h, 0C6DB0h
dd 229EEh, 20h
dd 0C6DB0h, 22A06h, 20h, 0C6DB0h, 22A2Bh, 20h, 0C6DB0h
dd 22A61h, 20h,	0C6DB0h, 22AA2h, 20h, 0C6DB0h, 22C83h
dd 20h,	0C6DB0h, 22F8Dh, 20h, 0C6DB0h, 22FA3h, 20h, 0C6DB0h
dd 22FE5h, 20h,	0C6DB0h, 22FFDh, 20h, 0C6DB0h, 2303Ch
dd 20h,	0C6DB0h, 23075h, 20h, 0C6DB0h, 230B0h, 20h, 0C6DB0h
dd 230FDh, 20h,	0C6DB0h, 2316Bh, 20h, 0C6DB0h, 2318Ah
dd 20h,	0C6DB0h, 231BAh, 20h, 0C6DB0h, 231D2h, 20h, 0C6DB0h
dd 231EDh, 20h,	0C6DB0h, 23218h, 20h, 0C6DB0h, 232A2h
dd 20h,	0C6DB0h, 232C6h, 20h, 0C6DB0h, 232F6h, 20h, 0C6DB0h
dd 2330Ch, 20h,	0C6DB0h, 23322h, 20h, 0C6DB0h, 23341h
dd 20h,	0C6DB0h, 23381h, 20h, 0C6DB0h, 233BEh, 20h, 0C6DB0h
dd 23410h, 20h,	0C6DB0h, 23430h, 20h, 0C6DB0h, 2359Ah
dd 20h,	0C6DB0h, 237D8h, 20h, 0C6DB0h, 237EFh, 20h, 0C6DB0h
dd 23809h, 20h,	0C6DB0h, 2381Fh, 20h, 0C6DB0h, 2385Dh
dd 20h,	0C6DB0h, 23874h, 20h, 0C6DB0h, 238B1h, 20h, 0C6DB0h
dd 238C8h, 20h,	0C6DB0h, 23905h, 20h, 0C6DB0h, 2391Ch
dd 20h,	0C6DB0h, 23968h, 20h, 0C6DB0h, 239DEh, 20h, 0C6DB0h
dd 23A0Ch, 20h,	0C6DB0h, 23A21h, 20h, 0C6DB0h, 23A38h
dd 20h,	0C6DB0h, 24B19h, 20h, 0C6DB0h, 24B30h, 20h, 0C6DB0h
dd 24B76h, 20h,	0C6DB0h, 24B90h, 20h, 0C6DB0h, 24BD3h
dd 20h,	0C6DB0h, 24C2Ch, 20h, 0C6DB0h, 24C67h, 20h, 0C6DB0h
dd 24E6Dh, 20h,	0C6DB0h, 24F93h, 20h, 0C6DB0h, 24FC8h
dd 20h,	0C6DB0h, 24FDFh, 20h, 0C6DB0h, 24FF4h, 20h, 0C6DB0h
dd 25009h, 20h,	0C6DB0h, 2501Ch, 20h, 0C6DB0h, 25037h
dd 20h,	0C6DB0h, 25070h, 20h, 0C6DB0h, 25085h, 20h, 0C6DB0h
dd 25098h, 20h,	0C6DB0h, 250B1h, 20h, 0C6DB0h, 250C4h
dd 20h,	0C6DB0h, 250D9h, 20h, 0C6DB0h, 250ECh, 20h, 0C6DB0h
dd 250FEh, 20h,	0C6DB0h, 2511Bh, 20h, 0C6DB0h, 254EAh
dd 20h,	0C6DB0h, 258D0h, 20h, 0C6DB0h, 258F0h, 20h, 0C6DB0h
dd 25904h, 20h,	0C6DB0h, 25922h, 20h, 0C6DB0h, 259B0h
dd 20h,	0C6DB0h, 25AAEh, 20h, 0C6DB0h, 25ADEh, 20h, 0C6DB0h
dd 25B30h, 20h,	0C6DB0h, 25B55h, 20h, 0C6DB0h, 25B90h
dd 20h,	0C6DB0h, 25BB5h, 20h, 0C6DB0h, 25BF0h, 20h, 0C6DB0h
dd 25C15h, 20h,	0C6DB0h, 25C50h, 20h, 0C6DB0h, 25C75h
dd 20h,	0C6DB0h, 25CB0h, 20h, 0C6DB0h, 25CD5h, 20h, 0C6DB0h
dd 25D08h, 20h,	0C6DB0h, 25D21h, 20h, 0C6DB0h, 25D34h
dd 20h,	0C6DB0h, 25D49h, 20h, 0C6DB0h, 25D5Ch, 20h, 0C6DB0h
dd 25D75h, 20h,	0C6DB0h, 25D88h, 20h, 0C6DB0h, 25D9Dh
dd 20h,	0C6DB0h, 25DB0h, 20h, 0C6DB0h, 25DC9h, 20h, 0C6DB0h
dd 25DDCh, 20h,	0C6DB0h, 25DF1h, 20h, 0C6DB0h, 25E04h
dd 20h,	0C6DB0h, 25E1Dh, 20h, 0C6DB0h, 25E30h, 20h, 0C6DB0h
dd 25E45h, 20h,	0C6DB0h, 25E58h, 20h, 0C6DB0h, 25EBCh
dd 20h,	0C6DB0h, 25ED8h, 20h, 0C6DB0h, 25FA4h, 20h, 0C6DB0h
dd 25FF5h, 20h,	0C6DB0h, 26028h, 20h, 0C6DB0h, 26095h
dd 20h,	0C6DB0h, 260D4h, 20h, 0C6DB0h, 261A2h, 20h, 0C6DB0h
dd 26240h, 20h,	0C6DB0h, 2627Ch, 20h, 0C6DB0h, 2629Bh
dd 20h,	0C6DB0h, 262E8h, 20h, 0C6DB0h, 2633Eh, 20h, 0C6DB0h
dd 26381h, 20h,	0C6DB0h, 263A7h, 20h, 0C6DB0h, 26404h
dd 20h,	0C6DB0h, 26499h, 20h, 0C6DB0h, 264C5h, 20h, 0C6DB0h
dd 264FAh, 20h,	0C6DB0h, 26575h, 20h, 0C6DB0h, 26629h
dd 20h,	0C6DB0h, 2663Fh, 20h, 0C6DB0h, 2667Dh, 20h, 0C6DB0h
dd 26694h, 20h,	0C6DB0h, 266CCh, 20h, 0C6DB0h, 266E5h
dd 20h,	0C6DB0h, 266F8h, 20h, 0C6DB0h, 2670Dh, 20h, 0C6DB0h
dd 26720h, 20h,	0C6DB0h, 26730h, 20h, 0C6DB0h, 26744h
dd 20h,	0C6DB0h, 26754h, 20h, 0C6DB0h, 26769h, 20h, 0C6DB0h
dd 267A5h, 20h,	0C6DB0h, 267D0h, 20h, 0C6DB0h, 2695Ah
dd 20h,	0C6DB0h, 2697Ch, 20h, 0C6DB0h, 26A06h, 20h, 0C6DB0h
dd 26C35h, 20h,	0C6DB0h, 26C5Dh, 20h, 0C6DB0h, 26C89h
dd 20h,	0C6DB0h, 26CC2h, 20h, 0C6DB0h, 26CFBh, 20h, 0C6DB0h
dd 26D1Dh, 20h,	0C6DB0h, 26D67h, 20h, 0C6DB0h, 26D8Eh
dd 20h,	0C6DB0h, 26DDBh, 20h, 0C6DB0h, 26E32h, 20h, 0C6DB0h
dd 26E55h, 20h,	0C6DB0h, 26F32h, 20h, 0C6DB0h, 26FB5h
dd 20h,	0C6DB0h, 26FDCh, 20h, 0C6DB0h, 27034h, 20h, 0C6DB0h
dd 27211h, 20h,	0C6DB0h, 272F0h, 20h, 0C6DB0h, 27450h
dd 20h,	0C6DB0h, 27494h, 20h, 0C6DB0h, 274BCh, 20h, 0C6DB0h
dd 27563h, 20h,	0C6DB0h, 27648h, 20h, 0C6DB0h, 27684h
dd 20h,	0C6DB0h, 2769Dh, 20h, 0C6DB0h, 276ADh, 20h, 0C6DB0h
dd 276CDh, 20h,	0C6DB0h, 276DDh, 20h, 0C6DB0h, 276FDh
dd 20h,	0C6DB0h, 27713h
dd 20h,	0C6DB0h, 27751h, 20h, 0C6DB0h, 2776Fh, 20h, 0C6DB0h
dd 277A6h, 20h,	0C6DB0h, 277BCh, 20h, 0C6DB0h, 277D5h
dd 20h,	0C6DB0h, 277E8h, 20h, 0C6DB0h, 277FDh, 20h, 0C6DB0h
dd 27815h, 20h,	0C6DB0h, 2782Ch, 20h, 0C6DB0h, 27869h
dd 20h,	0C6DB0h, 27880h, 20h, 0C6DB0h, 278B8h, 20h, 0C6DB0h
dd 278D1h, 20h,	0C6DB0h, 278E4h, 20h, 0C6DB0h, 278FDh
dd 20h,	0C6DB0h, 27942h, 20h, 0C6DB0h, 27974h, 20h, 0C6DB0h
dd 279C1h, 20h,	0C6DB0h, 279D6h, 20h, 0C6DB0h, 27A08h
dd 20h,	0C6DB0h, 27A1Dh, 20h, 0C6DB0h, 27A4Dh, 20h, 0C6DB0h
dd 27A62h, 20h,	0C6DB0h, 27A8Fh, 20h, 0C6DB0h, 27AABh
dd 20h,	0C6DB0h, 27ACEh, 20h, 0C6DB0h, 27B0Fh, 20h, 0C6DB0h
dd 27B24h, 20h,	0C6DB0h, 27B51h, 20h, 0C6DB0h, 27B8Eh
dd 20h,	0C6DB0h, 27BB0h, 20h, 0C6DB0h, 27C43h, 20h, 0C6DB0h
dd 27D98h, 20h,	0C6DB0h, 27DADh, 20h, 0C6DB0h, 27DC5h
dd 20h,	0C6DB0h, 27E02h, 20h, 0C6DB0h, 27E3Dh, 20h, 0C6DB0h
dd 27E54h, 20h,	0C6DB0h, 27E91h, 20h, 0C6DB0h, 27EA8h
dd 20h,	0C6DB0h, 27EE5h, 20h, 0C6DB0h, 27EFCh, 20h, 0C6DB0h
dd 27F39h, 20h,	0C6DB0h, 27F50h, 20h, 0C6DB0h, 27F8Dh
dd 20h,	0C6DB0h, 27FBFh, 20h, 0C6DB0h, 28005h, 20h, 0C6DB0h
dd 2802Ah, 20h,	0C6DB0h, 28065h, 20h, 0C6DB0h, 2807Ch
dd 20h,	0C6DB0h, 280BCh, 20h, 0C6DB0h, 28131h, 20h, 0C6DB0h
dd 2814Dh, 20h,	0C6DB0h, 28164h, 20h, 0C6DB0h, 281A1h
dd 20h,	0C6DB0h, 281B8h, 20h, 0C6DB0h, 281F5h, 20h, 0C6DB0h
dd 2820Ch, 20h,	0C6DB0h, 28249h, 20h, 0C6DB0h, 28260h
dd 20h,	0C6DB0h, 2829Eh, 20h, 0C6DB0h, 282C0h, 20h, 0C6DB0h
dd 28331h, 20h,	0C6DB0h, 28348h, 20h, 0C6DB0h, 28385h
dd 20h,	0C6DB0h, 2839Ch, 20h, 0C6DB0h, 283D9h, 20h, 0C6DB0h
dd 283F0h, 20h,	0C6DB0h, 2842Dh, 20h, 0C6DB0h, 28444h
dd 20h,	0C6DB0h, 28481h, 20h, 0C6DB0h, 28498h, 20h, 0C6DB0h
dd 284DAh, 20h,	0C6DB0h, 28504h, 20h, 0C6DB0h, 28542h
dd 20h,	0C6DB0h, 2856Ch, 20h, 0C6DB0h, 285AAh, 20h, 0C6DB0h
dd 285D4h, 20h,	0C6DB0h, 28612h, 20h, 0C6DB0h, 28636h
dd 20h,	0C6DB0h, 28676h, 20h, 0C6DB0h, 2869Ah, 20h, 0C6DB0h
dd 286D5h, 20h,	0C6DB0h, 286ECh, 20h, 0C6DB0h, 28731h
dd 20h,	0C6DB0h, 2876Ch, 20h, 0C6DB0h, 28904h, 20h, 0C6DB0h
dd 289EAh, 20h,	0C6DB0h, 28AA9h, 20h, 0C6DB0h, 28AC0h
dd 20h,	0C6DB0h, 28AFDh, 20h, 0C6DB0h, 28B14h, 20h, 0C6DB0h
dd 28B51h, 20h,	0C6DB0h, 28B68h, 20h, 0C6DB0h, 28BA5h
dd 20h,	0C6DB0h, 28BBCh, 20h, 0C6DB0h, 28BF9h, 20h, 0C6DB0h
dd 28C10h, 20h,	0C6DB0h, 28C4Dh, 20h, 0C6DB0h, 28C64h
dd 20h,	0C6DB0h, 28CA1h, 20h, 0C6DB0h, 28CB8h, 20h, 0C6DB0h
dd 28CF5h, 20h,	0C6DB0h, 28D0Ch, 20h, 0C6DB0h, 28D49h
dd 20h,	0C6DB0h, 28D60h, 20h, 0C6DB0h, 28D9Fh, 20h, 0C6DB0h
dd 28DF1h, 20h,	0C6DB0h, 28F13h, 20h, 0C6DB0h, 28FBEh
dd 20h,	0C6DB0h, 29065h, 20h, 0C6DB0h, 2908Ch, 20h, 0C6DB0h
dd 290BEh, 20h,	0C6DB0h, 290E8h, 20h, 0C6DB0h, 29183h
dd 20h,	0C6DB0h, 2919Eh, 20h, 0C6DB0h, 291DEh, 20h, 0C6DB0h
dd 291FEh, 20h,	0C6DB0h, 29236h, 20h, 0C6DB0h, 29271h
dd 20h,	0C6DB0h, 292A2h, 20h, 0C6DB0h, 292C6h, 20h, 0C6DB0h
dd 293E0h, 20h,	0C6DB0h, 2947Eh, 20h, 0C6DB0h, 2948Eh
dd 20h,	0C6DB0h, 294B8h, 20h, 0C6DB0h, 29590h, 20h, 0C6DB0h
dd 295DEh, 20h,	0C6DB0h, 296D8h, 20h, 0C6DB0h, 29736h
dd 20h,	0C6DB0h, 29777h, 20h, 0C6DB0h, 297F1h, 20h, 0C6DB0h
dd 298F8h, 20h,	0C6DB0h, 29950h, 20h, 0C6DB0h, 2996Eh
dd 20h,	0C6DB0h, 299DBh, 20h, 0C6DB0h, 29A02h, 20h, 0C6DB0h
dd 29A29h, 20h,	0C6DB0h, 29A40h, 20h, 0C6DB0h, 29A5Ah
dd 20h,	0C6DB0h, 29A7Dh, 20h, 0C6DB0h, 29B63h, 20h, 0C6DB0h
dd 29B9Eh, 20h,	0C6DB0h, 29C0Dh, 20h, 0C6DB0h, 29C45h
dd 20h,	0C6DB0h, 29C7Ah, 20h, 0C6DB0h, 29C95h, 20h, 0C6DB0h
dd 29CB7h, 20h,	0C6DB0h, 29CD1h, 20h, 0C6DB0h, 29CFFh
dd 20h,	0C6DB0h, 29D19h, 20h, 0C6DB0h, 29D85h, 20h, 0C6DB0h
dd 29D9Eh, 20h,	0C6DB0h, 29DF2h, 20h, 0C6DB0h, 29E0Dh
dd 20h,	0C6DB0h, 29E3Ch, 20h, 0C6DB0h, 29E68h, 20h, 0C6DB0h
dd 29FB6h, 20h,	0C6DB0h, 2A05Ah, 20h, 0C6DB0h, 2A082h
dd 20h,	0C6DB0h, 2A0C7h, 20h, 0C6DB0h, 2A4DDh, 20h, 0C6DB0h
dd 2A4F4h, 20h,	0C6DB0h, 2A545h, 20h, 0C6DB0h, 2A57Ah
dd 20h,	0C6DB0h, 2A5D3h, 20h, 0C6DB0h, 2A60Ah, 20h, 0C6DB0h
dd 2A646h, 20h,	0C6DB0h, 2A6B3h, 20h, 0C6DB0h, 2A712h
dd 20h,	0C6DB0h
dd 2A75Ah, 20h,	0C6DB0h, 2A83Ch, 20h, 0C6DB0h, 2AA88h
dd 20h,	0C6DB0h, 2AAAEh, 20h, 0C6DB0h, 2AACFh, 20h, 0C6DB0h
dd 2AB38h, 20h,	0C6DB0h, 2AD9Fh, 20h, 0C6DB0h, 2ADDFh
dd 20h,	0C6DB0h, 2B2C0h, 20h, 0C6DB0h, 2B2E8h, 20h, 0C6DB0h
dd 2B30Ch, 20h,	0C6DB0h, 2B366h, 20h, 0C6DB0h, 2B3A5h
dd 20h,	0C6DB0h, 2B3BFh, 20h, 0C6DB0h, 2B3DAh, 20h, 0C6DB0h
dd 2B3F0h, 20h,	0C6DB0h, 2B405h, 20h, 0C6DB0h, 2B418h
dd 20h,	0C6DB0h, 2B6B5h, 20h, 0C6DB0h, 2B6C8h, 20h, 0C6DB0h
dd 2B707h, 20h,	0C6DB0h, 2B71Ch, 20h, 0C6DB0h, 2B735h
dd 20h,	0C6DB0h, 2B748h, 20h, 0C6DB0h, 2B75Dh, 20h, 0C6DB0h
dd 2B774h, 20h,	0C6DB0h, 2B7E8h, 20h, 0C6DB0h, 2B804h
dd 20h,	0C6DB0h, 2B8FAh, 20h, 0C6DB0h, 2BAE4h, 20h, 0C6DB0h
dd 2BB0Eh, 20h,	0C6DB0h, 2BB44h, 20h, 0C6DB0h, 2BB6Fh
dd 20h,	0C6DB0h, 2BB88h, 20h, 0C6DB0h, 2BB98h, 20h, 0C6DB0h
dd 2BBB0h, 20h,	0C6DB0h, 2BBC0h, 20h, 0C6DB0h, 2BBD8h
dd 20h,	0C6DB0h, 2BBF4h, 20h, 0C6DB0h, 2BC0Ch, 20h, 0C6DB0h
dd 2BC45h, 20h,	0C6DB0h, 2BC5Ah, 20h, 0C6DB0h, 2BC78h
dd 20h,	0C6DB0h, 2BCC5h, 20h, 0C6DB0h, 2BCD8h, 20h, 0C6DB0h
dd 2BCF1h, 20h,	0C6DB0h, 2BD04h, 20h, 0C6DB0h, 2BD1Dh
dd 20h,	0C6DB0h, 2BD30h, 20h, 0C6DB0h, 2BD45h, 20h, 0C6DB0h
dd 2BD58h, 20h,	0C6DB0h, 2BE2Fh, 20h, 0C6DB0h, 2BE44h
dd 20h,	0C6DB0h, 2BE87h, 20h, 0C6DB0h, 2BEACh, 20h, 0C6DB0h
dd 2BEE4h, 20h,	0C6DB0h, 2BF51h, 20h, 0C6DB0h, 2BF98h
dd 20h,	0C6DB0h, 2C025h, 20h, 0C6DB0h, 2C099h, 20h, 0C6DB0h
dd 2C0BCh, 20h,	0C6DB0h, 2C107h, 20h, 0C6DB0h, 2C121h
dd 20h,	0C6DB0h, 2C138h, 20h, 0C6DB0h, 2C175h, 20h, 0C6DB0h
dd 2C18Ch, 20h,	0C6DB0h, 2C1C9h, 20h, 0C6DB0h, 2C1E0h
dd 20h,	0C6DB0h, 2C21Dh, 20h, 0C6DB0h, 2C243h, 20h, 0C6DB0h
dd 2C281h, 20h,	0C6DB0h, 2C298h, 20h, 0C6DB0h, 2C2D4h
dd 20h,	0C6DB0h, 2C2F4h, 20h, 0C6DB0h, 2C32Ah, 20h, 0C6DB0h
dd 2C345h, 20h,	0C6DB0h, 2C36Ah, 20h, 0C6DB0h, 2C3F4h
dd 20h,	0C6DB0h, 2C414h, 20h, 0C6DB0h, 2C44Ah, 20h, 0C6DB0h
dd 2C460h, 20h,	0C6DB0h, 2C475h, 20h, 0C6DB0h, 2C488h
dd 20h,	0C6DB0h, 2C4F5h, 20h, 0C6DB0h, 2C508h, 20h, 0C6DB0h
dd 2C531h, 20h,	0C6DB0h, 2C544h, 20h, 0C6DB0h, 2C562h
dd 20h,	0C6DB0h, 2C578h, 20h, 0C6DB0h, 2C596h, 20h, 0C6DB0h
dd 2C5B5h, 20h,	0C6DB0h, 2C5CFh, 20h, 0C6DB0h, 2C5F5h
dd 20h,	0C6DB0h, 2C60Dh, 20h, 0C6DB0h, 2C641h, 20h, 0C6DB0h
dd 2C651h, 20h,	0C6DB0h, 2C685h, 20h, 0C6DB0h, 2C856h
dd 20h,	0C6DB0h, 2C8C5h, 20h, 0C6DB0h, 2C8DFh, 20h, 0C6DB0h
dd 2C962h, 20h,	0C6DB0h, 2C986h, 20h, 0C6DB0h, 2C9FCh
dd 20h,	0C6DB0h, 2CA20h, 20h, 0C6DB0h, 2CADBh, 20h, 0C6DB0h
dd 2CB36h, 20h,	0C6DB0h, 2CB56h, 20h, 0C6DB0h, 2CB79h
dd 20h,	0C6DB0h, 2CBAAh, 20h, 0C6DB0h, 2CBC1h, 20h, 0C6DB0h
dd 2CC05h, 20h,	0C6DB0h, 2CC1Dh, 20h, 0C6DB0h, 2CC74h
dd 20h,	0C6DB0h, 2CC89h, 20h, 0C6DB0h, 2CCF8h, 20h, 0C6DB0h
dd 2CD5Dh, 20h,	0C6DB0h, 2CDDDh, 20h, 0C6DB0h, 2CE40h
dd 20h,	0C6DB0h, 2CE99h, 20h, 0C6DB0h, 2CEF2h, 20h, 0C6DB0h
dd 2CF19h, 20h,	0C6DB0h, 2CF35h, 20h, 0C6DB0h, 2CF59h
dd 20h,	0C6DB0h, 2CF9Ah, 20h, 0C6DB0h, 2CFE6h, 20h, 0C6DB0h
dd 2D05Ch, 20h,	0C6DB0h, 2D093h, 20h, 0C6DB0h, 2D0D9h
dd 20h,	0C6DB0h, 2D118h, 20h, 0C6DB0h, 2D156h, 20h, 0C6DB0h
dd 2D17Dh, 20h,	0C6DB0h, 2D1B1h, 20h, 0C6DB0h, 2D1FCh
dd 20h,	0C6DB0h, 2D290h, 20h, 0C6DB0h, 2D2D7h, 20h, 0C6DB0h
dd 2D859h, 20h,	0C6DB0h, 2DE01h, 20h, 0C6DB0h, 2DE5Ah
dd 20h,	0C6DB0h, 2DEA8h, 20h, 0C6DB0h, 2DF75h, 20h, 0C6DB0h
dd 2E069h, 20h,	0C6DB0h, 2E0B0h, 20h, 0C6DB0h, 2E111h
dd 20h,	0C6DB0h, 2E133h, 20h, 0C6DB0h, 2E168h, 20h, 0C6DB0h
dd 2E198h, 20h,	0C6DB0h, 2E2CCh, 20h, 0C6DB0h, 2E334h
dd 20h,	0C6DB0h, 2E4AAh, 20h, 0C6DB0h, 2E4EDh, 20h, 0C6DB0h
dd 2E516h, 20h,	0C6DB0h, 2E533h, 20h, 0C6DB0h, 2E595h
dd 20h,	0C6DB0h, 2E5B7h, 20h, 0C6DB0h, 2E5ECh, 20h, 0C6DB0h
dd 2E634h, 20h,	0C6DB0h, 2E6F5h, 20h, 0C6DB0h, 2E768h
dd 20h,	0C6DB0h, 2E85Dh, 20h, 0C6DB0h, 2E8DDh, 20h, 0C6DB0h
dd 2E902h, 20h,	0C6DB0h, 2E925h, 20h, 0C6DB0h, 2E94Eh
dd 20h,	0C6DB0h, 2E9B7h, 20h, 0C6DB0h, 2E9DDh, 20h, 0C6DB0h
dd 2EA07h, 20h,	0C6DB0h, 2EA41h, 20h, 0C6DB0h, 2EA5Ah
dd 20h,	0C6DB0h, 2EA93h, 20h, 0C6DB0h, 2EACEh, 20h, 0C6DB0h
dd 2EAEAh, 20h
dd 0C6DB0h, 2EB10h, 20h, 0C6DB0h, 2EB25h, 20h, 0C6DB0h
dd 2EB3Ah, 20h,	0C6DB0h, 2EB83h, 20h, 0C6DB0h, 2EBB0h
dd 20h,	0C6DB0h, 2EBFDh, 20h, 0C6DB0h, 2EC2Fh, 20h, 0C6DB0h
dd 2EC8Ch, 20h,	0C6DB0h, 2ECA4h, 20h, 0C6DB0h, 2ECD0h
dd 20h,	0C6DB0h, 2ECE8h, 20h, 0C6DB0h, 2F0BCh, 20h, 0C6DB0h
dd 2F0EBh, 20h,	0C6DB0h, 2F13Dh, 20h, 0C6DB0h, 2F154h
dd 20h,	0C6DB0h, 2F169h, 20h, 0C6DB0h, 2F17Fh, 20h, 0C6DB0h
dd 2F482h, 20h,	0C6DB0h, 2F498h, 20h, 0C6DB0h, 2F53Ah
dd 20h,	0C6DB0h, 2F55Ch, 20h, 0C6DB0h, 2F573h, 20h, 0C6DB0h
dd 2F669h, 20h,	0C6DB0h, 2F731h, 20h, 0C6DB0h, 2F876h
dd 20h,	0C6DB0h, 2FA7Fh, 20h, 0C6DB0h, 2FE6Eh, 20h, 0C6DB0h
dd 3020Fh, 20h,	0C6DB0h, 3039Eh, 20h, 0C6DB0h, 303D4h
dd 20h,	0C6DB0h, 30411h, 20h, 0C6DB0h, 30424h, 20h, 0C6DB0h
dd 30461h, 20h,	0C6DB0h, 30474h, 20h, 0C6DB0h, 304B1h
dd 20h,	0C6DB0h, 304C4h, 20h, 0C6DB0h, 30501h, 20h, 0C6DB0h
dd 30529h, 20h,	0C6DB0h, 30646h, 20h, 0C6DB0h, 30680h
dd 20h,	0C6DB0h, 306B4h, 20h, 0C6DB0h, 306C8h, 20h, 0C6DB0h
dd 306FCh, 20h,	0C6DB0h, 30710h, 20h, 0C6DB0h, 30722h
dd 20h,	0C6DB0h, 30738h, 20h, 0C6DB0h, 30748h, 20h, 0C6DB0h
dd 3075Ch, 20h,	0C6DB0h, 3076Ch, 20h, 0C6DB0h, 30780h
dd 20h,	0C6DB0h, 30790h, 20h, 0C6DB0h, 307A4h, 20h, 0C6DB0h
dd 307B4h, 20h,	0C6DB0h, 307C8h, 20h, 0C6DB0h, 307D8h
dd 20h,	0C6DB0h, 307ECh, 20h, 0C6DB0h, 307FCh, 20h, 0C6DB0h
dd 30810h, 20h,	0C6DB0h, 30820h, 20h, 0C6DB0h, 30834h
dd 20h,	0C6DB0h, 30844h, 20h, 0C6DB0h, 30858h, 20h, 0C6DB0h
dd 30868h, 20h,	0C6DB0h, 3087Ch, 20h, 0C6DB0h, 3088Ch
dd 20h,	0C6DB0h, 308A0h, 20h, 0C6DB0h, 308B0h, 20h, 0C6DB0h
dd 308C4h, 20h,	0C6DB0h, 308D4h, 20h, 0C6DB0h, 308E8h
dd 20h,	0C6DB0h, 308FAh, 20h, 0C6DB0h, 30910h, 20h, 0C6DB0h
dd 30922h, 20h,	0C6DB0h, 30938h, 20h, 0C6DB0h, 30948h
dd 20h,	0C6DB0h, 3095Ch, 20h, 0C6DB0h, 3096Ch, 20h, 0C6DB0h
dd 30980h, 20h,	0C6DB0h, 30990h, 20h, 0C6DB0h, 309A4h
dd 20h,	0C6DB0h, 309B4h, 20h, 0C6DB0h, 309C8h, 20h, 0C6DB0h
dd 309D8h, 20h,	0C6DB0h, 309ECh, 20h, 0C6DB0h, 309FCh
dd 20h,	0C6DB0h, 30A10h, 20h, 0C6DB0h, 30A20h, 20h, 0C6DB0h
dd 30A34h, 20h,	0C6DB0h, 30A44h, 20h, 0C6DB0h, 30A58h
dd 20h,	0C6DB0h, 30A6Dh, 20h, 0C6DB0h, 30A80h, 20h, 0C6DB0h
dd 30A90h, 20h,	0C6DB0h, 30AA4h, 20h, 0C6DB0h, 30AB4h
dd 20h,	0C6DB0h, 30ACDh, 20h, 0C6DB0h, 30B1Eh, 20h, 0C6DB0h
dd 30B5Ch, 20h,	0C6DB0h, 30B6Ch, 20h, 0C6DB0h, 30B80h
dd 20h,	0C6DB0h, 30B90h, 20h, 0C6DB0h, 30BA4h, 20h, 0C6DB0h
dd 30BB4h, 20h,	0C6DB0h, 30BC8h, 20h, 0C6DB0h, 30BD8h
dd 20h,	0C6DB0h, 30BECh, 20h, 0C6DB0h, 30BFCh, 20h, 0C6DB0h
dd 30C10h, 20h,	0C6DB0h, 30C20h, 20h, 0C6DB0h, 30C34h
dd 20h,	0C6DB0h, 30C44h, 20h, 0C6DB0h, 30C58h, 20h, 0C6DB0h
dd 30C68h, 20h,	0C6DB0h, 30C7Ch, 20h, 0C6DB0h, 30C8Ch
dd 20h,	0C6DB0h, 30CA0h, 20h, 0C6DB0h, 30CB0h, 20h, 0C6DB0h
dd 30CC4h, 20h,	0C6DB0h, 30CD4h, 20h, 0C6DB0h, 30CE8h
dd 20h,	0C6DB0h, 30CF8h, 20h, 0C6DB0h, 30D0Ch, 20h, 0C6DB0h
dd 30D1Ch, 20h,	0C6DB0h, 30D30h, 20h, 0C6DB0h, 30D40h
dd 20h,	0C6DB0h, 30D54h, 20h, 0C6DB0h, 30D64h, 20h, 0C6DB0h
dd 30D78h, 20h,	0C6DB0h, 30D88h, 20h, 0C6DB0h, 30DA1h
dd 20h,	0C6DB0h, 30DFDh, 20h, 0C6DB0h, 30E6Ch, 20h, 0C6DB0h
dd 30EA0h, 20h,	0C6DB0h, 30EC0h, 20h, 0C6DB0h, 3104Eh
dd 20h,	0C6DB0h, 3106Bh, 20h, 0C6DB0h, 310A1h, 20h, 0C6DB0h
dd 310D8h, 20h,	0C6DB0h, 31122h, 20h, 0C6DB0h, 31180h
dd 20h,	0C6DB0h, 311BAh, 20h, 0C6DB0h, 311F3h, 20h, 0C6DB0h
dd 3122Dh, 20h,	0C6DB0h, 31264h, 20h, 0C6DB0h, 312ABh
dd 20h,	0C6DB0h, 312C9h, 20h, 0C6DB0h, 312DDh, 20h, 0C6DB0h
dd 31310h, 20h,	0C6DB0h, 31329h, 20h, 0C6DB0h, 31340h
dd 20h,	0C6DB0h, 31381h, 20h, 0C6DB0h, 31395h, 20h, 0C6DB0h
dd 313C8h, 20h,	0C6DB0h, 313E5h, 20h, 0C6DB0h, 313FEh
dd 20h,	0C6DB0h, 31434h, 20h, 0C6DB0h, 31456h, 20h, 0C6DB0h
dd 3146Ah, 20h,	0C6DB0h, 31482h, 20h, 0C6DB0h, 314B9h
dd 20h,	0C6DB0h, 314D6h, 20h, 0C6DB0h, 3153Ch, 20h, 0C6DB0h
dd 3163Ah, 20h,	0C6DB0h, 3166Ah, 20h, 0C6DB0h, 3169Eh
dd 20h,	0C6DB0h, 316B6h, 20h, 0C6DB0h, 316CEh, 20h, 0C6DB0h
dd 31721h, 20h,	0C6DB0h, 3173Fh, 20h, 0C6DB0h, 317A2h
dd 20h,	0C6DB0h, 317D4h
dd 20h,	0C6DB0h, 31809h, 20h, 0C6DB0h, 3182Ch, 20h, 0C6DB0h
dd 31851h, 20h,	0C6DB0h, 3187Eh, 20h, 0C6DB0h, 31AA5h
dd 20h,	0C6DB0h, 31AD3h, 20h, 0C6DB0h, 31B18h, 20h, 0C6DB0h
dd 31BCEh, 20h,	0C6DB0h, 31C05h, 20h, 0C6DB0h, 31C61h
dd 20h,	0C6DB0h, 31C78h, 20h, 0C6DB0h, 31CB9h, 20h, 0C6DB0h
dd 31CCDh, 20h,	0C6DB0h, 31D00h, 20h, 0C6DB0h, 31D22h
dd 20h,	0C6DB0h, 31D36h, 20h, 0C6DB0h, 31D4Eh, 20h, 0C6DB0h
dd 31D85h, 20h,	0C6DB0h, 31D9Ch, 20h, 0C6DB0h, 31DDAh
dd 20h,	0C6DB0h, 31E3Fh, 20h, 0C6DB0h, 31E5Ah, 20h, 0C6DB0h
dd 31E70h, 20h,	0C6DB0h, 31E80h, 20h, 0C6DB0h, 31E94h
dd 20h,	0C6DB0h, 31EA4h, 20h, 0C6DB0h, 31EB8h, 20h, 0C6DB0h
dd 31EC8h, 20h,	0C6DB0h, 31EDCh, 20h, 0C6DB0h, 31EECh
dd 20h,	0C6DB0h, 31F05h, 20h, 0C6DB0h, 31F37h, 20h, 0C6DB0h
dd 31F4Ch, 20h,	0C6DB0h, 31F5Ch, 20h, 0C6DB0h, 31F90h
dd 20h,	0C6DB0h, 320A8h, 20h, 0C6DB0h, 3210Dh, 20h, 0C6DB0h
dd 32440h, 20h,	0C6DB0h, 325D2h, 20h, 0C6DB0h, 3264Ah
dd 20h,	0C6DB0h, 32688h, 20h, 0C6DB0h, 326BCh, 20h, 0C6DB0h
dd 3277Fh, 20h,	0C6DB0h, 327DEh, 20h, 0C6DB0h, 3282Dh
dd 20h,	0C6DB0h, 32851h, 20h, 0C6DB0h, 32884h, 20h, 0C6DB0h
dd 328A0h, 20h,	0C6DB0h, 328C1h, 20h, 0C6DB0h, 32992h
dd 20h,	0C6DB0h, 32A0Fh, 20h, 0C6DB0h, 32AFFh, 20h, 0C6DB0h
dd 32B3Eh, 20h,	0C6DB0h, 32B75h, 20h, 0C6DB0h, 32BB4h
dd 20h,	0C6DB0h, 32BE0h, 20h, 0C6DB0h, 32BF9h, 20h, 0C6DB0h
dd 32C11h, 20h,	0C6DB0h, 32C3Fh, 20h, 0C6DB0h, 32C61h
dd 20h,	0C6DB0h, 32CA6h, 20h, 0C6DB0h, 32D0Ah, 20h, 0C6DB0h
dd 32D6Bh, 20h,	0C6DB0h, 32DC3h, 20h, 0C6DB0h, 32E61h
dd 20h,	0C6DB0h, 32EBCh, 20h, 0C6DB0h, 32ED0h, 20h, 0C6DB0h
dd 32EEFh, 20h,	0C6DB0h, 32F14h, 20h, 0C6DB0h, 32F2Eh
dd 20h,	0C6DB0h, 32F49h, 20h, 0C6DB0h, 32FA7h, 20h, 0C6DB0h
dd 32FF9h, 20h,	0C6DB0h, 3305Fh, 20h, 0C6DB0h, 330ACh
dd 20h,	0C6DB0h, 330C1h, 20h, 0C6DB0h, 330D4h, 20h, 0C6DB0h
dd 330E9h, 20h,	0C6DB0h, 330FCh, 20h, 0C6DB0h, 33111h
dd 20h,	0C6DB0h, 33125h, 20h, 0C6DB0h, 3316Eh, 20h, 0C6DB0h
dd 3323Eh, 20h,	0C6DB0h, 3325Eh, 20h, 0C6DB0h, 3329Dh
dd 20h,	0C6DB0h, 332DEh, 20h, 0C6DB0h, 33349h, 20h, 0C6DB0h
dd 334B6h, 20h,	0C6DB0h, 3366Ah, 20h, 0C6DB0h, 336BDh
dd 20h,	0C6DB0h, 33707h, 20h, 0C6DB0h, 33743h, 20h, 0C6DB0h
dd 33771h, 20h,	0C6DB0h, 337A4h, 20h, 0C6DB0h, 337BAh
dd 20h,	0C6DB0h, 337E2h, 20h, 0C6DB0h, 3381Ah, 20h, 0C6DB0h
dd 33830h, 20h,	0C6DB0h, 33A85h, 20h, 0C6DB0h, 33ADFh
dd 20h,	0C6DB0h, 33BB7h, 20h, 0C6DB0h, 33C33h, 20h, 0C6DB0h
dd 33C64h, 20h,	0C6DB0h, 33CBDh, 20h, 0C6DB0h, 33D49h
dd 20h,	0C6DB0h, 33DADh, 20h, 0C6DB0h, 33E7Dh, 20h, 0C6DB0h
dd 33EE0h, 20h,	0C6DB0h, 33FBEh, 20h, 0C6DB0h, 34003h
dd 20h,	0C6DB0h, 3408Dh, 20h, 0C6DB0h, 34119h, 20h, 0C6DB0h
dd 3417Ch, 20h,	0C6DB0h, 3420Dh, 20h, 0C6DB0h, 34233h
dd 20h,	0C6DB0h, 342E4h, 20h, 0C6DB0h, 3431Eh, 20h, 0C6DB0h
dd 34342h, 20h,	0C6DB0h, 34362h, 20h, 0C6DB0h, 34386h
dd 20h,	0C6DB0h, 343ABh, 20h, 0C6DB0h, 343E6h, 20h, 0C6DB0h
dd 343FAh, 20h,	0C6DB0h, 3442Ah, 20h, 0C6DB0h, 34454h
dd 20h,	0C6DB0h, 34481h, 20h, 0C6DB0h, 344EAh, 20h, 0C6DB0h
dd 344FEh, 20h,	0C6DB0h, 34516h, 20h, 0C6DB0h, 34532h
dd 20h,	0C6DB0h, 34550h, 20h, 0C6DB0h, 3456Ch, 20h, 0C6DB0h
dd 3458Ah, 20h,	0C6DB0h, 345B2h, 20h, 0C6DB0h, 34612h
dd 20h,	0C6DB0h, 3463Ch, 20h, 0C6DB0h, 34696h, 20h, 0C6DB0h
dd 346C4h, 20h,	0C6DB0h, 34701h, 20h, 0C6DB0h, 34715h
dd 20h,	0C6DB0h, 34750h, 20h, 0C6DB0h, 34769h, 20h, 0C6DB0h
dd 3477Dh, 20h,	0C6DB0h, 347B8h, 20h, 0C6DB0h, 347D5h
dd 20h,	0C6DB0h, 347F9h, 20h, 0C6DB0h, 34839h, 20h, 0C6DB0h
dd 3484Dh, 20h,	0C6DB0h, 3488Ch, 20h, 0C6DB0h, 348BCh
dd 20h,	0C6DB0h, 34981h, 20h, 0C6DB0h, 349CBh, 20h, 0C6DB0h
dd 34A05h, 20h,	0C6DB0h, 34A20h, 20h, 0C6DB0h, 34A42h
dd 20h,	0C6DB0h, 34A5Eh, 20h, 0C6DB0h, 34A8Eh, 20h, 0C6DB0h
dd 34AB5h, 20h,	0C6DB0h, 34ACBh, 20h, 0C6DB0h, 34B10h
dd 20h,	0C6DB0h, 34BEEh, 20h, 0C6DB0h, 34C29h, 20h, 0C6DB0h
dd 34C3Fh, 20h,	0C6DB0h, 34C82h, 20h, 0C6DB0h, 34CAAh
dd 20h,	0C6DB0h, 34CE5h, 20h, 0C6DB0h, 34CFCh, 20h, 0C6DB0h
dd 34D3Eh, 20h,	0C6DB0h, 34D68h, 20h, 0C6DB0h, 34DA1h
dd 20h,	0C6DB0h
dd 34DB8h, 20h,	0C6DB0h, 34DF9h, 20h, 0C6DB0h, 34E10h
dd 20h,	0C6DB0h, 34E49h, 20h, 0C6DB0h, 34E7Dh, 20h, 0C6DB0h
dd 34E9Fh, 20h,	0C6DB0h, 34EEBh, 20h, 0C6DB0h, 34F09h
dd 20h,	0C6DB0h, 34F3Dh, 20h, 0C6DB0h, 34F5Eh, 20h, 0C6DB0h
dd 34F86h, 20h,	0C6DB0h, 34FE1h, 20h, 0C6DB0h, 3501Ch
dd 20h,	0C6DB0h, 35035h, 20h, 0C6DB0h, 35070h, 20h, 0C6DB0h
dd 35089h, 20h,	0C6DB0h, 350C4h, 20h, 0C6DB0h, 350DDh
dd 20h,	0C6DB0h, 35118h, 20h, 0C6DB0h, 35132h, 20h, 0C6DB0h
dd 35169h, 20h,	0C6DB0h, 3518Ch, 20h, 0C6DB0h, 351EFh
dd 20h,	0C6DB0h, 3522Fh, 20h, 0C6DB0h, 35270h, 20h, 0C6DB0h
dd 352BCh, 20h,	0C6DB0h, 35308h, 20h, 0C6DB0h, 35341h
dd 20h,	0C6DB0h, 353D0h, 20h, 0C6DB0h, 353E9h, 20h, 0C6DB0h
dd 353FCh, 20h,	0C6DB0h, 35411h, 20h, 0C6DB0h, 35424h
dd 20h,	0C6DB0h, 35439h, 20h, 0C6DB0h, 35450h, 20h, 0C6DB0h
dd 355C6h, 20h,	0C6DB0h, 355E0h, 20h, 0C6DB0h, 355FCh
dd 20h,	0C6DB0h, 35612h, 20h, 0C6DB0h, 35699h, 20h, 0C6DB0h
dd 356BAh, 20h,	0C6DB0h, 3571Ch, 20h, 0C6DB0h, 3573Dh
dd 20h,	0C6DB0h, 35799h, 20h, 0C6DB0h, 357C1h, 20h, 0C6DB0h
dd 35897h, 20h,	0C6DB0h, 358B5h, 20h, 0C6DB0h, 35921h
dd 20h,	0C6DB0h, 35999h, 20h, 0C6DB0h, 35E0Dh, 20h, 0C6DB0h
dd 35E9Eh, 20h,	0C6DB0h, 35F40h, 20h, 0C6DB0h, 35F68h
dd 20h,	0C6DB0h, 35F92h, 20h, 0C6DB0h, 35FABh, 20h, 0C6DB0h
dd 35FE1h, 20h,	0C6DB0h, 35FF1h, 20h, 0C6DB0h, 36022h
dd 20h,	0C6DB0h, 3606Dh, 20h, 0C6DB0h, 36092h, 20h, 0C6DB0h
dd 360ECh, 20h,	0C6DB0h, 3610Ah, 20h, 0C6DB0h, 36160h
dd 20h,	0C6DB0h, 3618Bh, 20h, 0C6DB0h, 361B6h, 20h, 0C6DB0h
dd 361D5h, 20h,	0C6DB0h, 361FEh, 20h, 0C6DB0h, 36255h
dd 20h,	0C6DB0h, 3626Ch, 20h, 0C6DB0h, 362A9h, 20h, 0C6DB0h
dd 362C0h, 20h,	0C6DB0h, 362FDh, 20h, 0C6DB0h, 3631Bh
dd 20h,	0C6DB0h, 36379h, 20h, 0C6DB0h, 363A7h, 20h, 0C6DB0h
dd 36405h, 20h,	0C6DB0h, 36423h, 20h, 0C6DB0h, 36481h
dd 20h,	0C6DB0h, 364AFh, 20h, 0C6DB0h, 3650Dh, 20h, 0C6DB0h
dd 3653Bh, 20h,	0C6DB0h, 36599h, 20h, 0C6DB0h, 365C7h
dd 20h,	0C6DB0h, 36625h, 20h, 0C6DB0h, 36643h, 20h, 0C6DB0h
dd 366BCh, 20h,	0C6DB0h, 3676Fh, 20h, 0C6DB0h, 3686Bh
dd 20h,	0C6DB0h, 368B7h, 20h, 0C6DB0h, 3695Ah, 20h, 0C6DB0h
dd 3698Eh, 20h,	0C6DB0h, 369DCh, 20h, 0C6DB0h, 36A42h
dd 20h,	0C6DB0h, 36ADBh, 20h, 0C6DB0h, 36B50h, 20h, 0C6DB0h
dd 36BD0h, 20h,	0C6DB0h, 36BE5h, 20h, 0C6DB0h, 36BF8h
dd 20h,	0C6DB0h, 36C4Eh, 20h, 0C6DB0h, 36C69h, 20h, 0C6DB0h
dd 36C9Ah, 20h,	0C6DB0h, 36CF4h, 20h, 0C6DB0h, 36D99h
dd 20h,	0C6DB0h, 36DACh, 20h, 0C6DB0h, 36DC1h, 20h, 0C6DB0h
dd 36DDCh, 20h,	0C6DB0h, 36E30h, 20h, 0C6DB0h, 36E69h
dd 20h,	0C6DB0h, 36E9Bh, 20h, 0C6DB0h, 36F7Ch, 20h, 0C6DB0h
dd 36F8Eh, 20h,	0C6DB0h, 36FA4h, 20h, 0C6DB0h, 36FC6h
dd 20h,	0C6DB0h, 36FDCh, 20h, 0C6DB0h, 37000h, 20h, 0C6DB0h
dd 37014h, 20h,	0C6DB0h, 37036h, 20h, 0C6DB0h, 3704Ch
dd 20h,	0C6DB0h, 37070h, 20h, 0C6DB0h, 37084h, 20h, 0C6DB0h
dd 370A6h, 20h,	0C6DB0h, 370BCh, 20h, 0C6DB0h, 370E0h
dd 20h,	0C6DB0h, 370FBh, 20h, 0C6DB0h, 3713Bh, 20h, 0C6DB0h
dd 3715Fh, 20h,	0C6DB0h, 3719Ch, 20h, 0C6DB0h, 371C4h
dd 20h,	0C6DB0h, 37215h, 20h, 0C6DB0h, 3725Fh, 20h, 0C6DB0h
dd 372A3h, 20h,	0C6DB0h, 372E8h, 20h, 0C6DB0h, 3732Ah
dd 20h,	0C6DB0h, 3763Bh, 20h, 0C6DB0h, 37686h, 20h, 0C6DB0h
dd 3769Ch, 20h,	0C6DB0h, 376C9h, 20h, 0C6DB0h, 376E4h
dd 20h,	0C6DB0h, 37775h, 20h, 0C6DB0h, 3793Ch, 20h, 0C6DB0h
dd 37969h, 20h,	0C6DB0h, 37984h, 20h, 0C6DB0h, 37A00h
dd 20h,	0C6DB0h, 3800Ch, 20h, 0C6DB0h, 38031h, 20h, 0C6DB0h
dd 382A1h, 20h,	0C6DB0h, 382DFh, 20h, 0C6DB0h, 38344h
dd 20h,	0C6DB0h, 38467h, 20h, 0C6DB0h, 384D4h, 20h, 0C6DB0h
dd 3852Dh, 20h,	0C6DB0h, 3865Eh, 20h, 0C6DB0h, 3869Ah
dd 20h,	0C6DB0h, 386B4h, 20h, 0C6DB0h, 386C9h, 20h, 0C6DB0h
dd 386DCh, 20h,	0C6DB0h, 386F1h, 20h, 0C6DB0h, 38704h
dd 20h,	0C6DB0h, 38719h, 20h, 0C6DB0h, 38737h, 20h, 0C6DB0h
dd 38762h, 20h,	0C6DB0h, 38781h, 20h, 0C6DB0h, 3879Fh
dd 20h,	0C6DB0h, 387D6h, 20h, 0C6DB0h, 387F2h, 20h, 0C6DB0h
dd 3884Ah, 20h,	0C6DB0h, 38882h, 20h, 0C6DB0h, 38898h
dd 20h,	0C6DB0h, 388B4h, 20h, 0C6DB0h, 388CDh, 20h, 0C6DB0h
dd 38905h, 20h
dd 0C6DB0h, 3893Ah, 20h, 0C6DB0h, 3895Ah, 20h, 0C6DB0h
dd 38982h, 20h,	0C6DB0h, 389DDh, 20h, 0C6DB0h, 389F7h
dd 20h,	0C6DB0h, 38A54h, 20h, 0C6DB0h, 38A70h, 20h, 0C6DB0h
dd 38A8Ah, 20h,	0C6DB0h, 38AB8h, 20h, 0C6DB0h, 38AF6h
dd 20h,	0C6DB0h, 38B25h, 20h, 0C6DB0h, 38B6Bh, 20h, 0C6DB0h
dd 38BA8h, 20h,	0C6DB0h, 38C0Eh, 20h, 0C6DB0h, 38C3Ah
dd 20h,	0C6DB0h, 38C95h, 20h, 0C6DB0h, 38CABh, 20h, 0C6DB0h
dd 38CEEh, 20h,	0C6DB0h, 38D1Ch, 20h, 0C6DB0h, 38D75h
dd 20h,	0C6DB0h, 38D8Ch, 20h, 0C6DB0h, 38DD3h, 20h, 0C6DB0h
dd 38E08h, 20h,	0C6DB0h, 38E2Ah, 20h, 0C6DB0h, 38E5Ah
dd 20h,	0C6DB0h, 38E8Ah, 20h, 0C6DB0h, 38EB3h, 20h, 0C6DB0h
dd 38EE8h, 20h,	0C6DB0h, 38F02h, 20h, 0C6DB0h, 38F32h
dd 20h,	0C6DB0h, 38F62h, 20h, 0C6DB0h, 38F85h, 20h, 0C6DB0h
dd 38F9Ch, 20h,	0C6DB0h, 38FD5h, 20h, 0C6DB0h, 38FECh
dd 20h,	0C6DB0h, 39033h, 20h, 0C6DB0h, 3907Ch, 20h, 0C6DB0h
dd 39092h, 20h,	0C6DB0h, 390C2h, 20h, 0C6DB0h, 390EDh
dd 20h,	0C6DB0h, 3910Dh, 20h, 0C6DB0h, 39124h, 20h, 0C6DB0h
dd 39165h, 20h,	0C6DB0h, 3917Ch, 20h, 0C6DB0h, 391B5h
dd 20h,	0C6DB0h, 391CCh, 20h, 0C6DB0h, 3920Dh, 20h, 0C6DB0h
dd 39224h, 20h,	0C6DB0h, 3925Dh, 20h, 0C6DB0h, 39274h
dd 20h,	0C6DB0h, 392B5h, 20h, 0C6DB0h, 392EBh, 20h, 0C6DB0h
dd 3932Dh, 20h,	0C6DB0h, 39349h, 20h, 0C6DB0h, 3938Dh
dd 20h,	0C6DB0h, 393A7h, 20h, 0C6DB0h, 393C9h, 20h, 0C6DB0h
dd 393EEh, 20h,	0C6DB0h, 39410h, 20h, 0C6DB0h, 39444h
dd 20h,	0C6DB0h, 39463h, 20h, 0C6DB0h, 3949Dh, 20h, 0C6DB0h
dd 394D5h, 20h,	0C6DB0h, 394EBh, 20h, 0C6DB0h, 3951Ch
dd 20h,	0C6DB0h, 39550h, 20h, 0C6DB0h, 39652h, 20h, 0C6DB0h
dd 398B1h, 20h,	0C6DB0h, 3992Fh, 20h, 0C6DB0h, 3995Ch
dd 20h,	0C6DB0h, 39973h, 20h, 0C6DB0h, 399ACh, 20h, 0C6DB0h
dd 399DDh, 20h,	0C6DB0h, 39A04h, 20h, 0C6DB0h, 39A5Ch
dd 20h,	0C6DB0h, 39A96h, 20h, 0C6DB0h, 39AAEh, 20h, 0C6DB0h
dd 39BFAh, 20h,	0C6DB0h, 39C68h, 20h, 0C6DB0h, 39D5Eh
dd 20h,	0C6DB0h, 39DDEh, 20h, 0C6DB0h, 39E55h, 20h, 0C6DB0h
dd 39E8Ah, 20h,	0C6DB0h, 39EA9h, 20h, 0C6DB0h, 39EDDh
dd 20h,	0C6DB0h, 39EF1h, 20h, 0C6DB0h, 39F31h, 20h, 0C6DB0h
dd 39F48h, 20h,	0C6DB0h, 39F7Ah, 20h, 0C6DB0h, 39F99h
dd 20h,	0C6DB0h, 39FB4h, 20h, 0C6DB0h, 39FE6h, 20h, 0C6DB0h
dd 3A022h, 20h,	0C6DB0h, 3A050h, 20h, 0C6DB0h, 3A082h
dd 20h,	0C6DB0h, 3A0C1h, 20h, 0C6DB0h, 3A0D8h, 20h, 0C6DB0h
dd 3A10Ah, 20h,	0C6DB0h, 3A12Bh, 20h, 0C6DB0h, 3A156h
dd 20h,	0C6DB0h, 3A20Fh, 20h, 0C6DB0h, 3A23Ah, 20h, 0C6DB0h
dd 3A25Eh, 20h,	0C6DB0h, 3A276h, 20h, 0C6DB0h, 3A2A6h
dd 20h,	0C6DB0h, 3A2BEh, 20h, 0C6DB0h, 3A2ECh, 20h, 0C6DB0h
dd 3A34Ch, 20h,	0C6DB0h, 3A36Ah, 20h, 0C6DB0h, 3A39Eh
dd 20h,	0C6DB0h, 3A3B6h, 20h, 0C6DB0h, 3A3CEh, 20h, 0C6DB0h
dd 3A40Bh, 20h,	0C6DB0h, 3A4E4h, 20h, 0C6DB0h, 3A945h
dd 20h,	0C6DB0h, 3A95Ch, 20h, 0C6DB0h, 3A98Eh, 20h, 0C6DB0h
dd 3A9A9h, 20h,	0C6DB0h, 3A9C0h, 20h, 0C6DB0h, 3A9FDh
dd 20h,	0C6DB0h, 3AA14h, 20h, 0C6DB0h, 3AA51h, 20h, 0C6DB0h
dd 3AA68h, 20h,	0C6DB0h, 3AAA7h, 20h, 0C6DB0h, 3AADDh
dd 20h,	0C6DB0h, 3AB25h, 20h, 0C6DB0h, 3AB3Ch, 20h, 0C6DB0h
dd 3AB7Ch, 20h,	0C6DB0h, 3ABEEh, 20h, 0C6DB0h, 3AC29h
dd 20h,	0C6DB0h, 3AC40h, 20h, 0C6DB0h, 3AC7Ch, 20h, 0C6DB0h
dd 3AFCCh, 20h,	0C6DB0h, 3AFFCh, 20h, 0C6DB0h, 3B01Dh
dd 20h,	0C6DB0h, 3B039h, 20h, 0C6DB0h, 3B05Dh, 20h, 0C6DB0h
dd 3B0E2h, 20h,	0C6DB0h, 3B10Fh, 20h, 0C6DB0h, 3B154h
dd 20h,	0C6DB0h, 3B1CDh, 20h, 0C6DB0h, 3B1E4h, 20h, 0C6DB0h
dd 3B231h, 20h,	0C6DB0h, 3B34Ah, 20h, 0C6DB0h, 3B37Ah
dd 20h,	0C6DB0h, 3B39Ah, 20h, 0C6DB0h, 3B3B2h, 20h, 0C6DB0h
dd 3B3D5h, 20h,	0C6DB0h, 3B3E5h, 20h, 0C6DB0h, 3B416h
dd 20h,	0C6DB0h, 3B460h, 20h, 0C6DB0h, 3B48Ah, 20h, 0C6DB0h
dd 3B4ABh, 20h,	0C6DB0h, 3B4DDh, 20h, 0C6DB0h, 3B504h
dd 20h,	0C6DB0h, 3B544h, 20h, 0C6DB0h, 3B55Eh, 20h, 0C6DB0h
dd 3B58Ah, 20h,	0C6DB0h, 3B5B4h, 20h, 0C6DB0h, 3B5DEh
dd 20h,	0C6DB0h, 3B5F6h, 20h, 0C6DB0h, 3B61Eh, 20h, 0C6DB0h
dd 3B649h, 20h,	0C6DB0h, 3B68Dh, 20h, 0C6DB0h, 3B784h
dd 20h,	0C6DB0h, 3B7D1h, 20h, 0C6DB0h, 3B7FAh, 20h, 0C6DB0h
dd 3B82Ah, 20h,	0C6DB0h, 3B849h, 20h, 0C6DB0h, 3B86Eh
dd 20h,	0C6DB0h, 3B8A0h
dd 20h,	0C6DB0h, 3B8B5h, 20h, 0C6DB0h, 3B8D0h, 20h, 0C6DB0h
dd 3B922h, 20h,	0C6DB0h, 3B95Ch, 20h, 0C6DB0h, 3B974h
dd 20h,	0C6DB0h, 3B989h, 20h, 0C6DB0h, 3B99Eh, 20h, 0C6DB0h
dd 3BB25h, 20h,	0C6DB0h, 3BB3Ch, 20h, 0C6DB0h, 3BB8Fh
dd 20h,	0C6DB0h, 3BBACh, 20h, 0C6DB0h, 3BBF4h, 20h, 0C6DB0h
dd 3BC13h, 20h,	0C6DB0h, 3BC96h, 20h, 0C6DB0h, 3BEC9h
dd 20h,	0C6DB0h, 3BF12h, 20h, 0C6DB0h, 3BF4Dh, 20h, 0C6DB0h
dd 3BFA7h, 20h,	0C6DB0h, 3BFE6h, 20h, 0C6DB0h, 3C098h
dd 20h,	0C6DB0h, 3C0C4h, 20h, 0C6DB0h, 3C0E5h, 20h, 0C6DB0h
dd 3C0FDh, 20h,	0C6DB0h, 3C117h, 20h, 0C6DB0h, 3C175h
dd 20h,	0C6DB0h, 3C1ACh, 20h, 0C6DB0h, 3C1F2h, 20h, 0C6DB0h
dd 3C2A8h, 20h,	0C6DB0h, 3C383h, 20h, 0C6DB0h, 3C407h
dd 20h,	0C6DB0h, 3C434h, 20h, 0C6DB0h, 3C50Ch, 20h, 0C6DB0h
dd 3C595h, 20h,	0C6DB0h, 3C5C3h, 20h, 0C6DB0h, 3C604h
dd 20h,	0C6DB0h, 3C7E0h, 20h, 0C6DB0h, 3C894h, 20h, 0C6DB0h
dd 3C8A4h, 20h,	0C6DB0h, 3C8C5h, 20h, 0C6DB0h, 3C8E7h
dd 20h,	0C6DB0h, 3C901h, 20h, 0C6DB0h, 3C923h, 20h, 0C6DB0h
dd 3C942h, 20h,	0C6DB0h, 3C98Fh, 20h, 0C6DB0h, 3C9CBh
dd 20h,	0C6DB0h, 3CA52h, 20h, 0C6DB0h, 3CA6Eh, 20h, 0C6DB0h
dd 3CA9Ah, 20h,	0C6DB0h, 3CAB6h, 20h, 0C6DB0h, 3CAFDh
dd 20h,	0C6DB0h, 3CB14h, 20h, 0C6DB0h, 3CB31h, 20h, 0C6DB0h
dd 3CB46h, 20h,	0C6DB0h, 3CB5Ch, 20h, 0C6DB0h, 3CB78h
dd 20h,	0C6DB0h, 3CB91h, 20h, 0C6DB0h, 3CBACh, 20h, 0C6DB0h
dd 3CBDEh, 20h,	0C6DB0h, 3CBFEh, 20h, 0C6DB0h, 3CC1Ch
dd 20h,	0C6DB0h, 3CC4Eh, 20h, 0C6DB0h, 3CC6Eh, 20h, 0C6DB0h
dd 3CC96h, 20h,	0C6DB0h, 3CCCAh, 20h, 0C6DB0h, 3CCDEh
dd 20h,	0C6DB0h, 3CD0Ah, 20h, 0C6DB0h, 3CD32h, 20h, 0C6DB0h
dd 3CD66h, 20h,	0C6DB0h, 3CD7Ah, 20h, 0C6DB0h, 3CDA7h
dd 20h,	0C6DB0h, 3CE0Bh, 20h, 0C6DB0h, 3CE54h, 20h, 0C6DB0h
dd 3CE92h, 20h,	0C6DB0h, 3CEBFh, 20h, 0C6DB0h, 3CEFDh
dd 20h,	0C6DB0h, 3CFC0h, 20h, 0C6DB0h, 3CFE6h, 20h, 0C6DB0h
dd 3D017h, 20h,	0C6DB0h, 3D051h, 20h, 0C6DB0h, 3D08Fh
dd 20h,	0C6DB0h, 3D0AAh, 20h, 0C6DB0h, 3D0D7h, 20h, 0C6DB0h
dd 3D115h, 20h,	0C6DB0h, 3D190h, 20h, 0C6DB0h, 3D1AEh
dd 20h,	0C6DB0h, 3D1DEh, 20h, 0C6DB0h, 3D284h, 20h, 0C6DB0h
dd 3D31Dh, 20h,	0C6DB0h, 3D3C0h, 20h, 0C6DB0h, 3D500h
dd 20h,	0C6DB0h, 3D5F6h, 20h, 0C6DB0h, 3D6C8h, 20h, 0C6DB0h
dd 3D8B0h, 20h,	0C6DB0h, 3D8D1h, 20h, 0C6DB0h, 3D8E4h
dd 20h,	0C6DB0h, 3D903h, 20h, 0C6DB0h, 3D925h, 20h, 0C6DB0h
dd 3D948h, 20h,	0C6DB0h, 3D99Dh, 20h, 0C6DB0h, 3D9C0h
dd 20h,	0C6DB0h, 3DA15h, 20h, 0C6DB0h, 3DA38h, 20h, 0C6DB0h
dd 3DA8Eh, 20h,	0C6DB0h, 3DAD9h, 20h, 0C6DB0h, 3DB10h
dd 20h,	0C6DB0h, 3DB45h, 20h, 0C6DB0h, 3DB68h, 20h, 0C6DB0h
dd 3DBBEh, 20h,	0C6DB0h, 3DC09h, 20h, 0C6DB0h, 3DC40h
dd 20h,	0C6DB0h, 3DC7Bh, 20h, 0C6DB0h, 3DCA3h, 20h, 0C6DB0h
dd 3DCDAh, 20h,	0C6DB0h, 3DCFBh, 20h, 0C6DB0h, 3DD40h
dd 20h,	0C6DB0h, 3DDD4h, 20h, 0C6DB0h, 3DE2Ch, 20h, 0C6DB0h
dd 3DE96h, 20h,	0C6DB0h, 3DF10h, 20h, 0C6DB0h, 3DF20h
dd 20h,	0C6DB0h, 3DF40h, 20h, 0C6DB0h, 3DF54h, 20h, 0C6DB0h
dd 3DF8Ah, 20h,	0C6DB0h, 3DFA8h, 20h, 0C6DB0h, 3E028h
dd 20h,	0C6DB0h, 3E048h, 20h, 0C6DB0h, 3E1ACh, 20h, 0C6DB0h
dd 3E1E8h, 20h,	0C6DB0h, 3E1FDh, 20h, 0C6DB0h, 3E210h
dd 20h,	0C6DB0h, 3E37Ah, 20h, 0C6DB0h, 3E3ECh, 20h, 0C6DB0h
dd 3E44Eh, 20h,	0C6DB0h, 3E478h, 20h, 0C6DB0h, 3E4DEh
dd 20h,	0C6DB0h, 3E608h, 20h, 0C6DB0h, 3E710h, 20h, 0C6DB0h
dd 3E780h, 20h,	0C6DB0h, 3E7FFh, 20h, 0C6DB0h, 3E854h
dd 20h,	0C6DB0h, 3E8BAh, 20h, 0C6DB0h, 3E9E8h, 20h, 0C6DB0h
dd 3EAF0h, 20h,	0C6DB0h, 3EB79h, 20h, 0C6DB0h, 3EBC5h
dd 20h,	0C6DB0h, 3EC13h, 20h, 0C6DB0h, 3ECF5h, 20h, 0C6DB0h
dd 3ED41h, 20h,	0C6DB0h, 3EDAAh, 20h, 0C6DB0h, 3EE7Fh
dd 20h,	0C6DB0h, 3EECEh, 20h, 0C6DB0h, 3EF88h, 20h, 0C6DB0h
dd 3EFA1h, 20h,	0C6DB0h, 3EFB4h, 20h, 0C6DB0h, 3EFC9h
dd 20h,	0C6DB0h, 3EFDCh, 20h, 0C6DB0h, 3EFECh, 20h, 0C6DB0h
dd 3F003h, 20h,	0C6DB0h, 3F088h, 20h, 0C6DB0h, 3F09Fh
dd 20h,	0C6DB0h, 3F0BDh, 20h, 0C6DB0h, 3F11Ch, 20h, 0C6DB0h
dd 3F202h, 20h,	0C6DB0h, 3F224h, 20h, 0C6DB0h, 3F240h
dd 20h,	0C6DB0h, 3F259h, 20h, 0C6DB0h, 3F28Eh, 20h, 0C6DB0h
dd 3F2C6h, 20h,	0C6DB0h, 3F2E5h, 20h, 0C6DB0h, 3F2FBh
dd 20h,	0C6DB0h
dd 3F33Ah, 20h,	0C6DB0h, 3F364h, 20h, 0C6DB0h, 3F3A1h
dd 20h,	0C6DB0h, 3F3B8h, 20h, 0C6DB0h, 3F3F6h, 20h, 0C6DB0h
dd 3F420h, 20h,	0C6DB0h, 3F45Eh, 20h, 0C6DB0h, 3F488h
dd 20h,	0C6DB0h, 3F4C7h, 20h, 0C6DB0h, 3F50Bh, 20h, 0C6DB0h
dd 3F58Ah, 20h,	0C6DB0h, 3F5A2h, 20h, 0C6DB0h, 3F5E6h
dd 20h,	0C6DB0h, 3F62Ah, 20h, 0C6DB0h, 3F66Eh, 20h, 0C6DB0h
dd 3F6D1h, 20h,	0C6DB0h, 3F6E7h, 20h, 0C6DB0h, 3F725h
dd 20h,	0C6DB0h, 3F73Ch, 20h, 0C6DB0h, 3F779h, 20h, 0C6DB0h
dd 3F790h, 20h,	0C6DB0h, 3F7CDh, 20h, 0C6DB0h, 3F7E4h
dd 20h,	0C6DB0h, 3F821h, 20h, 0C6DB0h, 3F838h, 20h, 0C6DB0h
dd 3F870h, 20h,	0C6DB0h, 3F885h, 20h, 0C6DB0h, 3F89Dh
dd 20h,	0C6DB0h, 3F8C4h, 20h, 0C6DB0h, 3F8FFh, 20h, 0C6DB0h
dd 3F955h, 20h,	0C6DB0h, 401E0h, 20h, 0C6DB0h, 402DFh
dd 20h,	0C6DB0h, 40470h, 20h, 0C6DB0h, 4056Dh, 20h, 0C6DB0h
dd 406F8h, 20h,	0C6DB0h, 407CDh, 20h, 0C6DB0h, 4086Ch
dd 20h,	0C6DB0h, 408B8h, 20h, 0C6DB0h, 408D1h, 20h, 0C6DB0h
dd 408EEh, 20h,	0C6DB0h, 40922h, 20h, 0C6DB0h, 4093Eh
dd 20h,	0C6DB0h, 409C8h, 20h, 0C6DB0h, 409F6h, 20h, 0C6DB0h
dd 40A1Fh, 20h,	0C6DB0h, 40A42h, 20h, 0C6DB0h, 40A79h
dd 20h,	0C6DB0h, 40A93h, 20h, 0C6DB0h, 40AEDh, 20h, 0C6DB0h
dd 40B08h, 20h,	0C6DB0h, 40B23h, 20h, 0C6DB0h, 40B3Dh
dd 20h,	0C6DB0h, 40BF9h, 20h, 0C6DB0h, 40C46h, 20h, 0C6DB0h
dd 40C7Fh, 20h,	0C6DB0h, 40CEBh, 20h, 0C6DB0h, 40D0Eh
dd 20h,	0C6DB0h, 40DB5h, 20h, 0C6DB0h, 40DD5h, 20h, 0C6DB0h
dd 40F9Ah, 20h,	0C6DB0h, 41008h, 20h, 0C6DB0h, 41072h
dd 20h,	0C6DB0h, 411E4h, 20h, 0C6DB0h, 41206h, 20h, 0C6DB0h
dd 41346h, 20h,	0C6DB0h, 413A7h, 20h, 0C6DB0h, 413CEh
dd 20h,	0C6DB0h, 41412h, 20h, 0C6DB0h, 41438h, 20h, 0C6DB0h
dd 414A2h, 20h,	0C6DB0h, 4158Fh, 20h, 0C6DB0h, 415EFh
dd 20h,	0C6DB0h, 41673h, 20h, 0C6DB0h, 4169Ah, 20h, 0C6DB0h
dd 416CCh, 20h,	0C6DB0h, 41776h, 20h, 0C6DB0h, 41792h
dd 20h,	0C6DB0h, 417BAh, 20h, 0C6DB0h, 417EAh, 20h, 0C6DB0h
dd 4182Dh, 20h,	0C6DB0h, 4196Ch, 20h, 0C6DB0h, 41A41h
dd 20h,	0C6DB0h, 41A8Eh, 20h, 0C6DB0h, 41B0Dh, 20h, 0C6DB0h
dd 41B2Ah, 20h,	0C6DB0h, 41B52h, 20h, 0C6DB0h, 41BD1h
dd 20h,	0C6DB0h, 41C21h, 20h, 0C6DB0h, 41CBBh, 20h, 0C6DB0h
dd 41D1Fh, 20h,	0C6DB0h, 41EB8h, 20h, 0C6DB0h, 423F6h
dd 20h,	0C6DB0h, 4248Dh, 20h, 0C6DB0h, 424AAh, 20h, 0C6DB0h
dd 424D2h, 20h,	0C6DB0h, 424F5h, 20h, 0C6DB0h, 4253Dh
dd 20h,	0C6DB0h, 42589h, 20h, 0C6DB0h, 425FDh, 20h, 0C6DB0h
dd 42666h, 20h,	0C6DB0h, 4273Bh, 20h, 0C6DB0h, 4277Ch
dd 20h,	0C6DB0h, 4282Ah, 20h, 0C6DB0h, 428BAh, 20h, 0C6DB0h
dd 42D5Dh, 20h,	0C6DB0h, 42EDAh, 20h, 0C6DB0h, 43452h
dd 20h,	0C6DB0h, 4346Dh, 20h, 0C6DB0h, 4348Dh, 20h, 0C6DB0h
dd 434BAh, 20h,	0C6DB0h, 434D6h, 20h, 0C6DB0h, 43501h
dd 20h,	0C6DB0h, 43524h, 20h, 0C6DB0h, 43539h, 20h, 0C6DB0h
dd 4354Ch, 20h,	0C6DB0h, 436DAh, 20h, 0C6DB0h, 436F0h
dd 20h,	0C6DB0h, 4374Bh, 20h, 0C6DB0h, 6FD46h, 20h, 0C6DB0h
dd 6FDC1h, 20h,	0C6DB0h, 43769h, 20h, 0C6DB0h, 4377Fh
dd 20h,	0C6DB0h, 437BDh, 20h, 0C6DB0h, 437D4h, 20h, 0C6DB0h
dd 43811h, 20h,	0C6DB0h, 43828h, 20h, 0C6DB0h, 43865h
dd 20h,	0C6DB0h, 4387Ch, 20h, 0C6DB0h, 438B9h, 20h, 0C6DB0h
dd 438D0h, 20h,	0C6DB0h, 43918h, 20h, 0C6DB0h, 4396Eh
dd 20h,	0C6DB0h, 4398Dh, 20h, 0C6DB0h, 439A3h, 20h, 0C6DB0h
dd 439E1h, 20h,	0C6DB0h, 439F8h, 20h, 0C6DB0h, 43A3Eh
dd 20h,	0C6DB0h, 43B0Ah, 20h, 0C6DB0h, 43B75h, 20h, 0C6DB0h
dd 43B8Ch, 20h,	0C6DB0h, 43BC9h, 20h, 0C6DB0h, 43BE9h
dd 20h,	0C6DB0h, 43C29h, 20h, 0C6DB0h, 43C40h, 20h, 0C6DB0h
dd 43C87h, 20h,	0C6DB0h, 43CA7h, 20h, 0C6DB0h, 43CDEh
dd 20h,	0C6DB0h, 43D02h, 20h, 0C6DB0h, 43D26h, 20h, 0C6DB0h
dd 43D60h, 20h,	0C6DB0h, 43D9Ah, 20h, 0C6DB0h, 43DDAh
dd 20h,	0C6DB0h, 43E1Eh, 20h, 0C6DB0h, 43ED9h, 20h, 0C6DB0h
dd 43F15h, 20h,	0C6DB0h, 43F78h, 20h, 0C6DB0h, 43FE4h
dd 20h,	0C6DB0h, 44006h, 20h, 0C6DB0h, 44036h, 20h, 0C6DB0h
dd 4404Eh, 20h,	0C6DB0h, 44079h, 20h, 0C6DB0h, 44101h
dd 20h,	0C6DB0h, 44126h, 20h, 0C6DB0h, 44156h, 20h, 0C6DB0h
dd 4418Ch, 20h,	0C6DB0h, 44288h, 20h, 0C6DB0h, 44350h
dd 20h,	0C6DB0h, 443F8h, 20h, 0C6DB0h, 4442Eh, 20h, 0C6DB0h
dd 4445Eh, 20h
dd 0C6DB0h, 44476h, 20h, 0C6DB0h, 4448Eh, 20h, 0C6DB0h
dd 444A4h, 20h,	0C6DB0h, 444C8h, 20h, 0C6DB0h, 44519h
dd 20h,	0C6DB0h, 44554h, 20h, 0C6DB0h, 4459Ch, 20h, 0C6DB0h
dd 4461Ch, 20h,	0C6DB0h, 44647h, 20h, 0C6DB0h, 44657h
dd 20h,	0C6DB0h, 44674h, 20h, 0C6DB0h, 44684h, 20h, 0C6DB0h
dd 44698h, 20h,	0C6DB0h, 446A8h, 20h, 0C6DB0h, 446BCh
dd 20h,	0C6DB0h, 446CCh, 20h, 0C6DB0h, 446E7h, 20h, 0C6DB0h
dd 44743h, 20h,	0C6DB0h, 447BCh, 20h, 0C6DB0h, 448ABh
dd 20h,	0C6DB0h, 44964h, 20h, 0C6DB0h, 4498Eh, 20h, 0C6DB0h
dd 449BEh, 20h,	0C6DB0h, 449D6h, 20h, 0C6DB0h, 44A00h
dd 20h,	0C6DB0h, 44A89h, 20h, 0C6DB0h, 44AD2h, 20h, 0C6DB0h
dd 44B76h, 20h,	0C6DB0h, 44B92h, 20h, 0C6DB0h, 44BB5h
dd 20h,	0C6DB0h, 44C03h, 20h, 0C6DB0h, 44CDAh, 20h, 0C6DB0h
dd 44D11h, 20h,	0C6DB0h, 44D56h, 20h, 0C6DB0h, 44D8Eh
dd 20h,	0C6DB0h, 44DA5h, 20h, 0C6DB0h, 44DEAh, 20h, 0C6DB0h
dd 44E05h, 20h,	0C6DB0h, 44E53h, 20h, 0C6DB0h, 44E8Ah
dd 20h,	0C6DB0h, 44EA5h, 20h, 0C6DB0h, 44EBBh, 20h, 0C6DB0h
dd 44EFDh, 20h,	0C6DB0h, 44F2Ch, 20h, 0C6DB0h, 44F89h
dd 20h,	0C6DB0h, 44FA0h, 20h, 0C6DB0h, 44FDDh, 20h, 0C6DB0h
dd 44FF4h, 20h,	0C6DB0h, 45035h, 20h, 0C6DB0h, 4504Ch
dd 20h,	0C6DB0h, 45089h, 20h, 0C6DB0h, 450B4h, 20h, 0C6DB0h
dd 45136h, 20h,	0C6DB0h, 4515Fh, 20h, 0C6DB0h, 4517Dh
dd 20h,	0C6DB0h, 45194h, 20h, 0C6DB0h, 451D1h, 20h, 0C6DB0h
dd 451E8h, 20h,	0C6DB0h, 4522Ah, 20h, 0C6DB0h, 45254h
dd 20h,	0C6DB0h, 45291h, 20h, 0C6DB0h, 452A8h, 20h, 0C6DB0h
dd 452ECh, 20h,	0C6DB0h, 45324h, 20h, 0C6DB0h, 453A6h
dd 20h,	0C6DB0h, 453D0h, 20h, 0C6DB0h, 4540Eh, 20h, 0C6DB0h
dd 45449h, 20h,	0C6DB0h, 4548Dh, 20h, 0C6DB0h, 454A3h
dd 20h,	0C6DB0h, 454E1h, 20h, 0C6DB0h, 454F8h, 20h, 0C6DB0h
dd 45535h, 20h,	0C6DB0h, 4554Ch, 20h, 0C6DB0h, 45589h
dd 20h,	0C6DB0h, 455A0h, 20h, 0C6DB0h, 455DDh, 20h, 0C6DB0h
dd 455F4h, 20h,	0C6DB0h, 45631h, 20h, 0C6DB0h, 45648h
dd 20h,	0C6DB0h, 45685h, 20h, 0C6DB0h, 4569Ch, 20h, 0C6DB0h
dd 456DFh, 20h,	0C6DB0h, 45747h, 20h, 0C6DB0h, 457BDh
dd 20h,	0C6DB0h, 457E5h, 20h, 0C6DB0h, 4581Ch, 20h, 0C6DB0h
dd 4585Bh, 20h,	0C6DB0h, 458EFh, 20h, 0C6DB0h, 4594Eh
dd 20h,	0C6DB0h, 45983h, 20h, 0C6DB0h, 459DAh, 20h, 0C6DB0h
dd 45A0Fh, 20h,	0C6DB0h, 45A70h, 20h, 0C6DB0h, 45AC2h
dd 20h,	0C6DB0h, 45B25h, 20h, 0C6DB0h, 45B5Ah, 20h, 0C6DB0h
dd 45B9Dh, 20h,	0C6DB0h, 45BD2h, 20h, 0C6DB0h, 45C11h
dd 20h,	0C6DB0h, 45C48h, 20h, 0C6DB0h, 45C8Dh, 20h, 0C6DB0h
dd 45CC4h, 20h,	0C6DB0h, 45D0Dh, 20h, 0C6DB0h, 45D35h
dd 20h,	0C6DB0h, 45D6Ch, 20h, 0C6DB0h, 45DA7h, 20h, 0C6DB0h
dd 45DF5h, 20h,	0C6DB0h, 45E39h, 20h, 0C6DB0h, 45E70h
dd 20h,	0C6DB0h, 45EB5h, 20h, 0C6DB0h, 45EECh, 20h, 0C6DB0h
dd 45F31h, 20h,	0C6DB0h, 45F68h, 20h, 0C6DB0h, 45FB1h
dd 20h,	0C6DB0h, 45FE6h, 20h, 0C6DB0h, 46029h, 20h, 0C6DB0h
dd 4605Eh, 20h,	0C6DB0h, 460A7h, 20h, 0C6DB0h, 460EFh
dd 20h,	0C6DB0h, 4614Dh, 20h, 0C6DB0h, 46184h, 20h, 0C6DB0h
dd 461C9h, 20h,	0C6DB0h, 46200h, 20h, 0C6DB0h, 46249h
dd 20h,	0C6DB0h, 46271h, 20h, 0C6DB0h, 462A8h, 20h, 0C6DB0h
dd 462E5h, 20h,	0C6DB0h, 4631Ah, 20h, 0C6DB0h, 4635Dh
dd 20h,	0C6DB0h, 46392h, 20h, 0C6DB0h, 463DBh, 20h, 0C6DB0h
dd 46423h, 20h,	0C6DB0h, 46481h, 20h, 0C6DB0h, 464B8h
dd 20h,	0C6DB0h, 464FDh, 20h, 0C6DB0h, 46534h, 20h, 0C6DB0h
dd 4657Dh, 20h,	0C6DB0h, 465A5h, 20h, 0C6DB0h, 465DCh
dd 20h,	0C6DB0h, 4661Ah, 20h, 0C6DB0h, 46653h, 20h, 0C6DB0h
dd 466CDh, 20h,	0C6DB0h, 46702h, 20h, 0C6DB0h, 46745h
dd 20h,	0C6DB0h, 4677Ah, 20h, 0C6DB0h, 467C3h, 20h, 0C6DB0h
dd 4680Bh, 20h,	0C6DB0h, 46869h, 20h, 0C6DB0h, 468A3h
dd 20h,	0C6DB0h, 468E9h, 20h, 0C6DB0h, 46923h, 20h, 0C6DB0h
dd 4696Dh, 20h,	0C6DB0h, 46995h, 20h, 0C6DB0h, 469CFh
dd 20h,	0C6DB0h, 46A09h, 20h, 0C6DB0h, 46A40h, 20h, 0C6DB0h
dd 46A8Ah, 20h,	0C6DB0h, 46B04h, 20h, 0C6DB0h, 46B45h
dd 20h,	0C6DB0h, 46B7Ah, 20h, 0C6DB0h, 46BB9h, 20h, 0C6DB0h
dd 46BF0h, 20h,	0C6DB0h, 46C39h, 20h, 0C6DB0h, 46C74h
dd 20h,	0C6DB0h, 46C86h, 20h, 0C6DB0h, 46D00h, 20h, 0C6DB0h
dd 46D2Dh, 20h,	0C6DB0h, 46DB9h, 20h, 0C6DB0h, 46DE6h
dd 20h,	0C6DB0h, 46E06h
dd 20h,	0C6DB0h, 46E22h, 20h, 0C6DB0h, 46E94h, 20h, 0C6DB0h
dd 46EC8h, 20h,	0C6DB0h, 46EE6h, 20h, 0C6DB0h, 46F27h
dd 20h,	0C6DB0h, 47005h, 20h, 0C6DB0h, 4703Eh, 20h, 0C6DB0h
dd 470EEh, 20h,	0C6DB0h, 4712Fh, 20h, 0C6DB0h, 47225h
dd 20h,	0C6DB0h, 47260h, 20h, 0C6DB0h, 472E1h, 20h, 0C6DB0h
dd 47318h, 20h,	0C6DB0h, 4735Dh, 20h, 0C6DB0h, 47394h
dd 20h,	0C6DB0h, 473D9h, 20h, 0C6DB0h, 47410h, 20h, 0C6DB0h
dd 47459h, 20h,	0C6DB0h, 47485h, 20h, 0C6DB0h, 474F0h
dd 20h,	0C6DB0h, 4753Ch, 20h, 0C6DB0h, 47606h, 20h, 0C6DB0h
dd 4761Fh, 20h,	0C6DB0h, 47654h, 20h, 0C6DB0h, 47666h
dd 20h,	0C6DB0h, 47685h, 20h, 0C6DB0h, 476BCh, 20h, 0C6DB0h
dd 47701h, 20h,	0C6DB0h, 47738h, 20h, 0C6DB0h, 4777Dh
dd 20h,	0C6DB0h, 477B4h, 20h, 0C6DB0h, 477F9h, 20h, 0C6DB0h
dd 47830h, 20h,	0C6DB0h, 47879h, 20h, 0C6DB0h, 478AEh
dd 20h,	0C6DB0h, 478F1h, 20h, 0C6DB0h, 47926h, 20h, 0C6DB0h
dd 4796Fh, 20h,	0C6DB0h, 479BBh, 20h, 0C6DB0h, 47A3Ah
dd 20h,	0C6DB0h, 47A73h, 20h, 0C6DB0h, 47AB9h, 20h, 0C6DB0h
dd 47B21h, 20h,	0C6DB0h, 47B56h, 20h, 0C6DB0h, 47B95h
dd 20h,	0C6DB0h, 47BCCh, 20h, 0C6DB0h, 47C11h, 20h, 0C6DB0h
dd 47C48h, 20h,	0C6DB0h, 47C91h, 20h, 0C6DB0h, 47CB9h
dd 20h,	0C6DB0h, 47CF0h, 20h, 0C6DB0h, 47D29h, 20h, 0C6DB0h
dd 47D60h, 20h,	0C6DB0h, 47DA5h, 20h, 0C6DB0h, 47DDCh
dd 20h,	0C6DB0h, 47EC3h, 20h, 0C6DB0h, 47FB1h, 20h, 0C6DB0h
dd 480A5h, 20h,	0C6DB0h, 48187h, 20h, 0C6DB0h, 48284h
dd 20h,	0C6DB0h, 482FFh, 20h, 0C6DB0h, 483C9h, 20h, 0C6DB0h
dd 48483h, 20h,	0C6DB0h, 48513h, 20h, 0C6DB0h, 4856Eh
dd 20h,	0C6DB0h, 4862Bh, 20h, 0C6DB0h, 486F5h, 20h, 0C6DB0h
dd 4872Eh, 20h,	0C6DB0h, 48825h, 20h, 0C6DB0h, 48890h
dd 20h,	0C6DB0h, 4894Fh, 20h, 0C6DB0h, 48A31h, 20h, 0C6DB0h
dd 48B3Ah, 20h,	0C6DB0h, 48BE4h, 20h, 0C6DB0h, 48C4Fh
dd 20h,	0C6DB0h, 48CF1h, 20h, 0C6DB0h, 48D17h, 20h, 0C6DB0h
dd 48D46h, 20h,	0C6DB0h, 48DA0h, 20h, 0C6DB0h, 48DEDh
dd 20h,	0C6DB0h, 48E0Ah, 20h, 0C6DB0h, 48E44h, 20h, 0C6DB0h
dd 48E67h, 20h,	0C6DB0h, 48EA0h, 20h, 0C6DB0h, 48EB9h
dd 20h,	0C6DB0h, 48ECCh, 20h, 0C6DB0h, 48EE1h, 20h, 0C6DB0h
dd 48EF9h, 20h,	0C6DB0h, 48F1Fh, 20h, 0C6DB0h, 48F40h
dd 20h,	0C6DB0h, 48F5Fh, 20h, 0C6DB0h, 48F76h, 20h, 0C6DB0h
dd 48F91h, 20h,	0C6DB0h, 48FE6h, 20h, 0C6DB0h, 49025h
dd 20h,	0C6DB0h, 49058h, 20h, 0C6DB0h, 49099h, 20h, 0C6DB0h
dd 490D8h, 20h,	0C6DB0h, 49208h, 20h, 0C6DB0h, 4925Ah
dd 20h,	0C6DB0h, 49282h, 20h, 0C6DB0h, 492BAh, 20h, 0C6DB0h
dd 492DAh, 20h,	0C6DB0h, 49302h, 20h, 0C6DB0h, 4933Ah
dd 20h,	0C6DB0h, 49355h, 20h, 0C6DB0h, 4936Ch, 20h, 0C6DB0h
dd 493AEh, 20h,	0C6DB0h, 493E8h, 20h, 0C6DB0h, 49422h
dd 20h,	0C6DB0h, 4945Dh, 20h, 0C6DB0h, 4949Ah, 20h, 0C6DB0h
dd 494CEh, 20h,	0C6DB0h, 4950Dh, 20h, 0C6DB0h, 4954Fh
dd 20h,	0C6DB0h, 49582h, 20h, 0C6DB0h, 495C2h, 20h, 0C6DB0h
dd 49619h, 20h,	0C6DB0h, 49656h, 20h, 0C6DB0h, 496CCh
dd 20h,	0C6DB0h, 496E3h, 20h, 0C6DB0h, 49708h, 20h, 0C6DB0h
dd 4973Ch, 20h,	0C6DB0h, 49787h, 20h, 0C6DB0h, 497FAh
dd 20h,	0C6DB0h, 4982Ch, 20h, 0C6DB0h, 49842h, 20h, 0C6DB0h
dd 49872h, 20h,	0C6DB0h, 4988Ah, 20h, 0C6DB0h, 498B0h
dd 20h,	0C6DB0h, 4994Fh, 20h, 0C6DB0h, 4998Ah, 20h, 0C6DB0h
dd 499C0h, 20h,	0C6DB0h, 499D6h, 20h, 0C6DB0h, 499ECh
dd 20h,	0C6DB0h, 49A03h, 20h, 0C6DB0h, 49A18h, 20h, 0C6DB0h
dd 49A2Fh, 20h,	0C6DB0h, 49A44h, 20h, 0C6DB0h, 49A5Bh
dd 20h,	0C6DB0h, 49A84h, 20h, 0C6DB0h, 49ACFh, 20h, 0C6DB0h
dd 49B2Ch, 20h,	0C6DB0h, 49B42h, 20h, 0C6DB0h, 49B58h
dd 20h,	0C6DB0h, 49B6Fh, 20h, 0C6DB0h, 49B84h, 20h, 0C6DB0h
dd 49B9Bh, 20h,	0C6DB0h, 49BB0h, 20h, 0C6DB0h, 49BC9h
dd 20h,	0C6DB0h, 49BDCh, 20h, 0C6DB0h, 49BF1h, 20h, 0C6DB0h
dd 49C0Dh, 20h,	0C6DB0h, 49C69h, 20h, 0C6DB0h, 49C84h
dd 20h,	0C6DB0h, 49CBEh, 20h, 0C6DB0h, 49CD8h, 20h, 0C6DB0h
dd 49FECh, 20h,	0C6DB0h, 4A058h, 20h, 0C6DB0h, 4A079h
dd 20h,	0C6DB0h, 4A090h, 20h, 0C6DB0h, 4A10Bh, 20h, 0C6DB0h
dd 4A163h, 20h,	0C6DB0h, 4A1B6h, 20h, 0C6DB0h, 4A1F6h
dd 20h,	0C6DB0h, 4A22Ah, 20h, 0C6DB0h, 4A26Ah, 20h, 0C6DB0h
dd 4A2BAh, 20h,	0C6DB0h, 4A306h, 20h, 0C6DB0h, 4A35Fh
dd 20h,	0C6DB0h
dd 4A38Ch, 20h,	0C6DB0h, 4A3F2h, 20h, 0C6DB0h, 4A427h
dd 20h,	0C6DB0h, 4A45Ch, 20h, 0C6DB0h, 4A471h, 20h, 0C6DB0h
dd 4A484h, 20h,	0C6DB0h, 4A4A0h, 20h, 0C6DB0h, 4A4BBh
dd 20h,	0C6DB0h, 4A4FBh, 20h, 0C6DB0h, 4A542h, 20h, 0C6DB0h
dd 4A57Eh, 20h,	0C6DB0h, 4A5F3h, 20h, 0C6DB0h, 4A633h
dd 20h,	0C6DB0h, 4A6C0h, 20h, 0C6DB0h, 4A6ECh, 20h, 0C6DB0h
dd 4A70Dh, 20h,	0C6DB0h, 4A72Bh, 20h, 0C6DB0h, 4A769h
dd 20h,	0C6DB0h, 4A780h, 20h, 0C6DB0h, 4A7BDh, 20h, 0C6DB0h
dd 4A7D4h, 20h,	0C6DB0h, 4A812h, 20h, 0C6DB0h, 4A82Ch
dd 20h,	0C6DB0h, 4A87Bh, 20h, 0C6DB0h, 4A92Ch, 20h, 0C6DB0h
dd 4A994h, 20h,	0C6DB0h, 4A9B9h, 20h, 0C6DB0h, 4A9D0h
dd 20h,	0C6DB0h, 4AA0Eh, 20h, 0C6DB0h, 4AA9Bh, 20h, 0C6DB0h
dd 4AB11h, 20h,	0C6DB0h, 4AB61h, 20h, 0C6DB0h, 4AB95h
dd 20h,	0C6DB0h, 4ABB4h, 20h, 0C6DB0h, 4ABF8h, 20h, 0C6DB0h
dd 4AC5Ah, 20h,	0C6DB0h, 4AC75h, 20h, 0C6DB0h, 4ACC1h
dd 20h,	0C6DB0h, 4AD44h, 20h, 0C6DB0h, 4AD5Dh, 20h, 0C6DB0h
dd 4AD72h, 20h,	0C6DB0h, 4AD8Ch, 20h, 0C6DB0h, 4ADACh
dd 20h,	0C6DB0h, 4ADD3h, 20h, 0C6DB0h, 4ADE9h, 20h, 0C6DB0h
dd 4AE21h, 20h,	0C6DB0h, 4AE45h, 20h, 0C6DB0h, 4AE73h
dd 20h,	0C6DB0h, 4AEE4h, 20h, 0C6DB0h, 4AF44h, 20h, 0C6DB0h
dd 4AF76h, 20h,	0C6DB0h, 4AFAAh, 20h, 0C6DB0h, 4AFC2h
dd 20h,	0C6DB0h, 4B011h, 20h, 0C6DB0h, 4B028h, 20h, 0C6DB0h
dd 4B065h, 20h,	0C6DB0h, 4B07Ch, 20h, 0C6DB0h, 4B0BFh
dd 20h,	0C6DB0h, 4B141h, 20h, 0C6DB0h, 4B1F0h, 20h, 0C6DB0h
dd 4B2AFh, 20h,	0C6DB0h, 4B300h, 20h, 0C6DB0h, 4B3C8h
dd 20h,	0C6DB0h, 4B3DEh, 20h, 0C6DB0h, 4B420h, 20h, 0C6DB0h
dd 4B435h, 20h,	0C6DB0h, 4B44Ch, 20h, 0C6DB0h, 4B965h
dd 20h,	0C6DB0h, 4B9D0h, 20h, 0C6DB0h, 4BABDh, 20h, 0C6DB0h
dd 4BAFAh, 20h,	0C6DB0h, 4BB5Dh, 20h, 0C6DB0h, 4BB7Ch
dd 20h,	0C6DB0h, 4BBE0h, 20h, 0C6DB0h, 4BC57h, 20h, 0C6DB0h
dd 4BC80h, 20h,	0C6DB0h, 4BCA4h, 20h, 0C6DB0h, 4BCD8h
dd 20h,	0C6DB0h, 4BD86h, 20h, 0C6DB0h, 4BE66h, 20h, 0C6DB0h
dd 4BE8Fh, 20h,	0C6DB0h, 4BEAAh, 20h, 0C6DB0h, 4BECCh
dd 20h,	0C6DB0h, 4BF20h, 20h, 0C6DB0h, 4BF6Ch, 20h, 0C6DB0h
dd 4BFD1h, 20h,	0C6DB0h, 4BFF8h, 20h, 0C6DB0h, 4C15Ah
dd 20h,	0C6DB0h, 4C17Fh, 20h, 0C6DB0h, 4C1E6h, 20h, 0C6DB0h
dd 4C206h, 20h,	0C6DB0h, 4C23Fh, 20h, 0C6DB0h, 4C27Ch
dd 20h,	0C6DB0h, 4C2A2h, 20h, 0C6DB0h, 4C2B2h, 20h, 0C6DB0h
dd 4C2E6h, 20h,	0C6DB0h, 4C2F6h, 20h, 0C6DB0h, 4C32Ch
dd 20h,	0C6DB0h, 4C3B7h, 20h, 0C6DB0h, 4C3CEh, 20h, 0C6DB0h
dd 4C3FEh, 20h,	0C6DB0h, 4C416h, 20h, 0C6DB0h, 4C43Ah
dd 20h,	0C6DB0h, 4C463h, 20h, 0C6DB0h, 4C47Eh, 20h, 0C6DB0h
dd 4C49Eh, 20h,	0C6DB0h, 4C4CAh, 20h, 0C6DB0h, 4C4E6h
dd 20h,	0C6DB0h, 4C506h, 20h, 0C6DB0h, 4C532h, 20h, 0C6DB0h
dd 4C54Eh, 20h,	0C6DB0h, 4C56Eh, 20h, 0C6DB0h, 4C59Ah
dd 20h,	0C6DB0h, 4C5B6h, 20h, 0C6DB0h, 4C5D1h, 20h, 0C6DB0h
dd 4C5FDh, 20h,	0C6DB0h, 4C616h, 20h, 0C6DB0h, 4C636h
dd 20h,	0C6DB0h, 4C662h, 20h, 0C6DB0h, 4C67Eh, 20h, 0C6DB0h
dd 4C699h, 20h,	0C6DB0h, 4C6C9h, 20h, 0C6DB0h, 4C6F2h
dd 20h,	0C6DB0h, 4C71Eh, 20h, 0C6DB0h, 4C73Ah, 20h, 0C6DB0h
dd 4C755h, 20h,	0C6DB0h, 4C785h, 20h, 0C6DB0h, 4C7B9h
dd 20h,	0C6DB0h, 4C891h, 20h, 0C6DB0h, 4C8EAh, 20h, 0C6DB0h
dd 4C912h, 20h,	0C6DB0h, 4C92Eh, 20h, 0C6DB0h, 4C958h
dd 20h,	0C6DB0h, 4C984h, 20h, 0C6DB0h, 4C9AAh, 20h, 0C6DB0h
dd 4C9D8h, 20h,	0C6DB0h, 4CA00h, 20h, 0C6DB0h, 4CA2Bh
dd 20h,	0C6DB0h, 4CA63h, 20h, 0C6DB0h, 4CB47h, 20h, 0C6DB0h
dd 4CE24h, 20h,	0C6DB0h, 4CE69h, 20h, 0C6DB0h, 4CE9Ah
dd 20h,	0C6DB0h, 4CEBAh, 20h, 0C6DB0h, 4CEEEh, 20h, 0C6DB0h
dd 4CF16h, 20h,	0C6DB0h, 4CF42h, 20h, 0C6DB0h, 4CF7Ch
dd 20h,	0C6DB0h, 4CF9Ah, 20h, 0C6DB0h, 4D020h, 20h, 0C6DB0h
dd 4D1BDh, 20h,	0C6DB0h, 4D2C8h, 20h, 0C6DB0h, 4D356h
dd 20h,	0C6DB0h, 4D3F0h, 20h, 0C6DB0h, 4D492h, 20h, 0C6DB0h
dd 4D4B6h, 20h,	0C6DB0h, 4D4E3h, 20h, 0C6DB0h, 4D52Fh
dd 20h,	0C6DB0h, 4D66Eh, 20h, 0C6DB0h, 4D790h, 20h, 0C6DB0h
dd 4D7D9h, 20h,	0C6DB0h, 4D7FAh, 20h, 0C6DB0h, 4D814h
dd 20h,	0C6DB0h, 4D83Bh, 20h, 0C6DB0h, 4D85Dh, 20h, 0C6DB0h
dd 4D878h, 20h,	0C6DB0h, 4D89Dh, 20h, 0C6DB0h, 4D8ADh
dd 20h,	0C6DB0h, 4D8E4h, 20h, 0C6DB0h, 4D90Eh, 20h, 0C6DB0h
dd 4D967h, 20h
dd 0C6DB0h, 4DA1Bh, 20h, 0C6DB0h, 4DB3Eh, 20h, 0C6DB0h
dd 4DBB1h, 20h,	0C6DB0h, 4DBF0h, 20h, 0C6DB0h, 4DCACh
dd 20h,	0C6DB0h, 4DD8Fh, 20h, 0C6DB0h, 4DDDAh, 20h, 0C6DB0h
dd 4DDF2h, 20h,	0C6DB0h, 4DE81h, 20h, 0C6DB0h, 4DEAAh
dd 20h,	0C6DB0h, 4DF15h, 20h, 0C6DB0h, 4DF84h, 20h, 0C6DB0h
dd 4DF9Eh, 20h,	0C6DB0h, 4DFD2h, 20h, 0C6DB0h, 4DFEAh
dd 20h,	0C6DB0h, 4E002h, 20h, 0C6DB0h, 4E01Ah, 20h, 0C6DB0h
dd 4E032h, 20h,	0C6DB0h, 4E06Dh, 20h, 0C6DB0h, 4E07Dh
dd 20h,	0C6DB0h, 4E0C4h, 20h, 0C6DB0h, 4E0D4h, 20h, 0C6DB0h
dd 4E125h, 20h,	0C6DB0h, 4E135h, 20h, 0C6DB0h, 4E17Ch
dd 20h,	0C6DB0h, 4E18Ch, 20h, 0C6DB0h, 4E1D5h, 20h, 0C6DB0h
dd 4E272h, 20h,	0C6DB0h, 4E28Ah, 20h, 0C6DB0h, 4E2BEh
dd 20h,	0C6DB0h, 4E2D8h, 20h, 0C6DB0h, 4E2F2h, 20h, 0C6DB0h
dd 4E308h, 20h,	0C6DB0h, 4E31Eh, 20h, 0C6DB0h, 4E337h
dd 20h,	0C6DB0h, 4E375h, 20h, 0C6DB0h, 4E3A2h, 20h, 0C6DB0h
dd 4E3E4h, 20h,	0C6DB0h, 4E483h, 20h, 0C6DB0h, 4E49Ah
dd 20h,	0C6DB0h, 4E4CAh, 20h, 0C6DB0h, 4E4E2h, 20h, 0C6DB0h
dd 4E529h, 20h,	0C6DB0h, 4E555h, 20h, 0C6DB0h, 4E5B9h
dd 20h,	0C6DB0h, 4E66Eh, 20h, 0C6DB0h, 4E719h, 20h, 0C6DB0h
dd 4E745h, 20h,	0C6DB0h, 4E79Ch, 20h, 0C6DB0h, 4E7D1h
dd 20h,	0C6DB0h, 4E810h, 20h, 0C6DB0h, 4E83Bh, 20h, 0C6DB0h
dd 4E879h, 20h,	0C6DB0h, 4E889h, 20h, 0C6DB0h, 4E8B2h
dd 20h,	0C6DB0h, 4E8C2h, 20h, 0C6DB0h, 4E8F2h, 20h, 0C6DB0h
dd 4E902h, 20h,	0C6DB0h, 4E936h, 20h, 0C6DB0h, 4E946h
dd 20h,	0C6DB0h, 4E976h, 20h, 0C6DB0h, 4E986h, 20h, 0C6DB0h
dd 4E9BAh, 20h,	0C6DB0h, 4E9CAh, 20h, 0C6DB0h, 4EA06h
dd 20h,	0C6DB0h, 4EA16h, 20h, 0C6DB0h, 4EA52h, 20h, 0C6DB0h
dd 4EA62h, 20h,	0C6DB0h, 4EA96h, 20h, 0C6DB0h, 4EAA6h
dd 20h,	0C6DB0h, 4EAD9h, 20h, 0C6DB0h, 4EB0Fh, 20h, 0C6DB0h
dd 4EB32h, 20h,	0C6DB0h, 4EB42h, 20h, 0C6DB0h, 4EB75h
dd 20h,	0C6DB0h, 4EBABh, 20h, 0C6DB0h, 4EBC5h, 20h, 0C6DB0h
dd 4EC02h, 20h,	0C6DB0h, 4EC1Dh, 20h, 0C6DB0h, 4EC53h
dd 20h,	0C6DB0h, 4EC6Dh, 20h, 0C6DB0h, 4ECAAh, 20h, 0C6DB0h
dd 4ECC5h, 20h,	0C6DB0h, 4ED02h, 20h, 0C6DB0h, 4ED1Dh
dd 20h,	0C6DB0h, 4ED48h, 20h, 0C6DB0h, 4ED66h, 20h, 0C6DB0h
dd 4ED94h, 20h,	0C6DB0h, 4EDB2h, 20h, 0C6DB0h, 4EDE0h
dd 20h,	0C6DB0h, 4EDFEh, 20h, 0C6DB0h, 4EE33h, 20h, 0C6DB0h
dd 4EE52h, 20h,	0C6DB0h, 4EE95h, 20h, 0C6DB0h, 4EEB1h
dd 20h,	0C6DB0h, 4EEDCh, 20h, 0C6DB0h, 4EEFAh, 20h, 0C6DB0h
dd 4EF28h, 20h,	0C6DB0h, 4EF46h, 20h, 0C6DB0h, 4EF74h
dd 20h,	0C6DB0h, 4EF92h, 20h, 0C6DB0h, 4EFC7h, 20h, 0C6DB0h
dd 4EFE6h, 20h,	0C6DB0h, 4F01Bh, 20h, 0C6DB0h, 4F03Ah
dd 20h,	0C6DB0h, 4F076h, 20h, 0C6DB0h, 4F096h, 20h, 0C6DB0h
dd 4F0D2h, 20h,	0C6DB0h, 4F0F2h, 20h, 0C6DB0h, 4F135h
dd 20h,	0C6DB0h, 4F156h, 20h, 0C6DB0h, 4F199h, 20h, 0C6DB0h
dd 4F1BAh, 20h,	0C6DB0h, 4F204h, 20h, 0C6DB0h, 4F222h
dd 20h,	0C6DB0h, 4F250h, 20h, 0C6DB0h, 4F269h, 20h, 0C6DB0h
dd 4F294h, 20h,	0C6DB0h, 4F2B2h, 20h, 0C6DB0h, 4F2E0h
dd 20h,	0C6DB0h, 4F2FDh, 20h, 0C6DB0h, 4F332h, 20h, 0C6DB0h
dd 4F352h, 20h,	0C6DB0h, 4F387h, 20h, 0C6DB0h, 4F3A5h
dd 20h,	0C6DB0h, 4F3E1h, 20h, 0C6DB0h, 4F402h, 20h, 0C6DB0h
dd 4F430h, 20h,	0C6DB0h, 4F44Fh, 20h, 0C6DB0h, 4F4BEh
dd 20h,	0C6DB0h, 4F4E2h, 20h, 0C6DB0h, 4F523h, 20h, 0C6DB0h
dd 4F54Bh, 20h,	0C6DB0h, 4F584h, 20h, 0C6DB0h, 4F5CEh
dd 20h,	0C6DB0h, 4F61Dh, 20h, 0C6DB0h, 4F6B2h, 20h, 0C6DB0h
dd 4F79Ah, 20h,	0C6DB0h, 4F811h, 20h, 0C6DB0h, 4F835h
dd 20h,	0C6DB0h, 4F853h, 20h, 0C6DB0h, 4F9A9h, 20h, 0C6DB0h
dd 4F9C5h, 20h,	0C6DB0h, 4F9EEh, 20h, 0C6DB0h, 4FA13h
dd 20h,	0C6DB0h, 4FAFDh, 20h, 0C6DB0h, 4FB2Ch, 20h, 0C6DB0h
dd 4FB4Dh, 20h,	0C6DB0h, 4FB60h, 20h, 0C6DB0h, 4FB9Bh
dd 20h,	0C6DB0h, 4FBB6h, 20h, 0C6DB0h, 4FBD8h, 20h, 0C6DB0h
dd 4FD94h, 20h,	0C6DB0h, 4FDD6h, 20h, 0C6DB0h, 4FDF0h
dd 20h,	0C6DB0h, 4FE34h, 20h, 0C6DB0h, 4FE51h, 20h, 0C6DB0h
dd 4FE66h, 20h,	0C6DB0h, 4FE9Ch, 20h, 0C6DB0h, 4FF24h
dd 20h,	0C6DB0h, 4FF3Ah, 20h, 0C6DB0h, 4FF5Eh, 20h, 0C6DB0h
dd 4FF89h, 20h,	0C6DB0h, 50021h, 20h, 0C6DB0h, 50045h
dd 20h,	0C6DB0h, 50059h, 20h, 0C6DB0h, 5008Eh, 20h, 0C6DB0h
dd 500AEh, 20h,	0C6DB0h, 500E5h, 20h, 0C6DB0h, 501DCh
dd 20h,	0C6DB0h, 50266h
dd 20h,	0C6DB0h, 502D1h, 20h, 0C6DB0h, 50302h, 20h, 0C6DB0h
dd 5033Fh, 20h,	0C6DB0h, 50363h, 20h, 0C6DB0h, 503D5h
dd 20h,	0C6DB0h, 503EEh, 20h, 0C6DB0h, 5040Ah, 20h, 0C6DB0h
dd 5042Dh, 20h,	0C6DB0h, 5043Dh, 20h, 0C6DB0h, 50461h
dd 20h,	0C6DB0h, 50478h, 20h, 0C6DB0h, 504B5h, 20h, 0C6DB0h
dd 504CCh, 20h,	0C6DB0h, 5050Eh, 20h, 0C6DB0h, 5053Ah
dd 20h,	0C6DB0h, 50574h, 20h, 0C6DB0h, 5058Ch, 20h, 0C6DB0h
dd 505A7h, 20h,	0C6DB0h, 505C4h, 20h, 0C6DB0h, 505DDh
dd 20h,	0C6DB0h, 50600h, 20h, 0C6DB0h, 50634h, 20h, 0C6DB0h
dd 50648h, 20h,	0C6DB0h, 50681h, 20h, 0C6DB0h, 50699h
dd 20h,	0C6DB0h, 506BEh, 20h, 0C6DB0h, 506FFh, 20h, 0C6DB0h
dd 50727h, 20h,	0C6DB0h, 507CDh, 20h, 0C6DB0h, 50802h
dd 20h,	0C6DB0h, 508F1h, 20h, 0C6DB0h, 50916h, 20h, 0C6DB0h
dd 5094Ch, 20h,	0C6DB0h, 50961h, 20h, 0C6DB0h, 50978h
dd 20h,	0C6DB0h, 50A7Eh, 20h, 0C6DB0h, 50B70h, 20h, 0C6DB0h
dd 50BC7h, 20h,	0C6DB0h, 50BE1h, 20h, 0C6DB0h, 50C09h
dd 20h,	0C6DB0h, 50C2Bh, 20h, 0C6DB0h, 50C7Bh, 20h, 0C6DB0h
dd 50EB0h, 20h,	0C6DB0h, 50EF3h, 20h, 0C6DB0h, 50F0Eh
dd 20h,	0C6DB0h, 50F44h, 20h, 0C6DB0h, 50F5Ch, 20h, 0C6DB0h
dd 50F9Fh, 20h,	0C6DB0h, 50FBAh, 20h, 0C6DB0h, 51026h
dd 20h,	0C6DB0h, 51041h, 20h, 0C6DB0h, 5106Fh, 20h, 0C6DB0h
dd 5109Ah, 20h,	0C6DB0h, 510EBh, 20h, 0C6DB0h, 5110Fh
dd 20h,	0C6DB0h, 51142h, 20h, 0C6DB0h, 51193h, 20h, 0C6DB0h
dd 51220h, 20h,	0C6DB0h, 51253h, 20h, 0C6DB0h, 512B4h
dd 20h,	0C6DB0h, 512DEh, 20h, 0C6DB0h, 51308h, 20h, 0C6DB0h
dd 5134Ah, 20h,	0C6DB0h, 51385h, 20h, 0C6DB0h, 513B2h
dd 20h,	0C6DB0h, 513CAh, 20h, 0C6DB0h, 513EAh, 20h, 0C6DB0h
dd 51405h, 20h,	0C6DB0h, 51477h, 20h, 0C6DB0h, 514A1h
dd 20h,	0C6DB0h, 514D3h, 20h, 0C6DB0h, 514E6h, 20h, 0C6DB0h
dd 514FCh, 20h,	0C6DB0h, 51511h, 20h, 0C6DB0h, 51527h
dd 20h,	0C6DB0h, 515F4h, 20h, 0C6DB0h, 5160Ch, 20h, 0C6DB0h
dd 5163Ah, 20h,	0C6DB0h, 51650h, 20h, 0C6DB0h, 51665h
dd 20h,	0C6DB0h, 51681h, 20h, 0C6DB0h, 51691h, 20h, 0C6DB0h
dd 516B9h, 20h,	0C6DB0h, 516D4h, 20h, 0C6DB0h, 51750h
dd 20h,	0C6DB0h, 51772h, 20h, 0C6DB0h, 517B8h, 20h, 0C6DB0h
dd 518CAh, 20h,	0C6DB0h, 51958h, 20h, 0C6DB0h, 519A4h
dd 20h,	0C6DB0h, 519C7h, 20h, 0C6DB0h, 519E4h, 20h, 0C6DB0h
dd 51A3Eh, 20h,	0C6DB0h, 51A52h, 20h, 0C6DB0h, 51A71h
dd 20h,	0C6DB0h, 51ABCh, 20h, 0C6DB0h, 51B38h, 20h, 0C6DB0h
dd 51BEEh, 20h,	0C6DB0h, 51C4Ch, 20h, 0C6DB0h, 51C90h
dd 20h,	0C6DB0h, 51CA9h, 20h, 0C6DB0h, 51D07h, 20h, 0C6DB0h
dd 51D4Ah, 20h,	0C6DB0h, 51D6Ah, 20h, 0C6DB0h, 51D88h
dd 20h,	0C6DB0h, 51DC1h, 20h, 0C6DB0h, 51DEEh, 20h, 0C6DB0h
dd 51E28h, 20h,	0C6DB0h, 51E3Ah, 20h, 0C6DB0h, 51EB2h
dd 20h,	0C6DB0h, 51EECh, 20h, 0C6DB0h, 51EFEh, 20h, 0C6DB0h
dd 51F6Dh, 20h,	0C6DB0h, 51F81h, 20h, 0C6DB0h, 51FBCh
dd 20h,	0C6DB0h, 51FD0h, 20h, 0C6DB0h, 51FE9h, 20h, 0C6DB0h
dd 51FFCh, 20h,	0C6DB0h, 52011h, 20h, 0C6DB0h, 52024h
dd 20h,	0C6DB0h, 52051h, 20h, 0C6DB0h, 52064h, 20h, 0C6DB0h
dd 5208Fh, 20h,	0C6DB0h, 520A4h, 20h, 0C6DB0h, 520C3h
dd 20h,	0C6DB0h, 520DDh, 20h, 0C6DB0h, 520FCh, 20h, 0C6DB0h
dd 52132h, 20h,	0C6DB0h, 5214Dh, 20h, 0C6DB0h, 52181h
dd 20h,	0C6DB0h, 521B6h, 20h, 0C6DB0h, 521D0h, 20h, 0C6DB0h
dd 521F8h, 20h,	0C6DB0h, 52220h, 20h, 0C6DB0h, 52257h
dd 20h,	0C6DB0h, 52293h, 20h, 0C6DB0h, 522CBh, 20h, 0C6DB0h
dd 52330h, 20h,	0C6DB0h, 52391h, 20h, 0C6DB0h, 5242Bh
dd 20h,	0C6DB0h, 52463h, 20h, 0C6DB0h, 524A1h, 20h, 0C6DB0h
dd 524FCh, 20h,	0C6DB0h, 52532h, 20h, 0C6DB0h, 52552h
dd 20h,	0C6DB0h, 5257Ch, 20h, 0C6DB0h, 525B5h, 20h, 0C6DB0h
dd 525CBh, 20h,	0C6DB0h, 52609h, 20h, 0C6DB0h, 52620h
dd 20h,	0C6DB0h, 5265Dh, 20h, 0C6DB0h, 52674h, 20h, 0C6DB0h
dd 526B1h, 20h,	0C6DB0h, 526C8h, 20h, 0C6DB0h, 52705h
dd 20h,	0C6DB0h, 5271Ch, 20h, 0C6DB0h, 52759h, 20h, 0C6DB0h
dd 52770h, 20h,	0C6DB0h, 527ADh, 20h, 0C6DB0h, 527CCh
dd 20h,	0C6DB0h, 52809h, 20h, 0C6DB0h, 5282Eh, 20h, 0C6DB0h
dd 52869h, 20h,	0C6DB0h, 52880h, 20h, 0C6DB0h, 528BDh
dd 20h,	0C6DB0h, 528D4h, 20h, 0C6DB0h, 52917h, 20h, 0C6DB0h
dd 5294Eh, 20h,	0C6DB0h, 52994h, 20h, 0C6DB0h, 529D8h
dd 20h,	0C6DB0h
dd 52A67h, 20h,	0C6DB0h, 52AB1h, 20h, 0C6DB0h, 52AC6h
dd 20h,	0C6DB0h, 52AF6h, 20h, 0C6DB0h, 52B0Eh, 20h, 0C6DB0h
dd 52B26h, 20h,	0C6DB0h, 52B4Ah, 20h, 0C6DB0h, 52BC1h
dd 20h,	0C6DB0h, 52C2Bh, 20h, 0C6DB0h, 52C77h, 20h, 0C6DB0h
dd 52D4Ch, 20h,	0C6DB0h, 52DCFh, 20h, 0C6DB0h, 52E75h
dd 20h,	0C6DB0h, 52E8Bh, 20h, 0C6DB0h, 52ED0h, 20h, 0C6DB0h
dd 52F15h, 20h,	0C6DB0h, 52F79h, 20h, 0C6DB0h, 52F90h
dd 20h,	0C6DB0h, 52FCDh, 20h, 0C6DB0h, 52FE4h, 20h, 0C6DB0h
dd 53028h, 20h,	0C6DB0h, 530CAh, 20h, 0C6DB0h, 53129h
dd 20h,	0C6DB0h, 5313Fh, 20h, 0C6DB0h, 5317Dh, 20h, 0C6DB0h
dd 53194h, 20h,	0C6DB0h, 531D1h, 20h, 0C6DB0h, 531EDh
dd 20h,	0C6DB0h, 53224h, 20h, 0C6DB0h, 5323Dh, 20h, 0C6DB0h
dd 53259h, 20h,	0C6DB0h, 53290h, 20h, 0C6DB0h, 532A9h
dd 20h,	0C6DB0h, 532C5h, 20h, 0C6DB0h, 532FCh, 20h, 0C6DB0h
dd 53315h, 20h,	0C6DB0h, 53331h, 20h, 0C6DB0h, 53368h
dd 20h,	0C6DB0h, 53381h, 20h, 0C6DB0h, 5339Dh, 20h, 0C6DB0h
dd 533D4h, 20h,	0C6DB0h, 533EDh, 20h, 0C6DB0h, 53404h
dd 20h,	0C6DB0h, 53441h, 20h, 0C6DB0h, 5346Eh, 20h, 0C6DB0h
dd 534ADh, 20h,	0C6DB0h, 534C5h, 20h, 0C6DB0h, 53504h
dd 20h,	0C6DB0h, 53548h, 20h, 0C6DB0h, 5358Bh, 20h, 0C6DB0h
dd 535C2h, 20h,	0C6DB0h, 535E6h, 20h, 0C6DB0h, 535FEh
dd 20h,	0C6DB0h, 53642h, 20h, 0C6DB0h, 5366Bh, 20h, 0C6DB0h
dd 536AAh, 20h,	0C6DB0h, 536DEh, 20h, 0C6DB0h, 536FEh
dd 20h,	0C6DB0h, 53716h, 20h, 0C6DB0h, 5372Eh, 20h, 0C6DB0h
dd 5375Bh, 20h,	0C6DB0h, 5379Ah, 20h, 0C6DB0h, 537CEh
dd 20h,	0C6DB0h, 537EEh, 20h, 0C6DB0h, 53806h, 20h, 0C6DB0h
dd 5381Eh, 20h,	0C6DB0h, 53846h, 20h, 0C6DB0h, 5389Fh
dd 20h,	0C6DB0h, 538B2h, 20h, 0C6DB0h, 5391Ah, 20h, 0C6DB0h
dd 53973h, 20h,	0C6DB0h, 53986h, 20h, 0C6DB0h, 539EEh
dd 20h,	0C6DB0h, 53A47h, 20h, 0C6DB0h, 53A5Ah, 20h, 0C6DB0h
dd 53AC4h, 20h,	0C6DB0h, 53B26h, 20h, 0C6DB0h, 53B86h
dd 20h,	0C6DB0h, 53BD3h, 20h, 0C6DB0h, 53C12h, 20h, 0C6DB0h
dd 53C48h, 20h,	0C6DB0h, 53C85h, 20h, 0C6DB0h, 53CA8h
dd 20h,	0C6DB0h, 53CE7h, 20h, 0C6DB0h, 53D3Dh, 20h, 0C6DB0h
dd 53D82h, 20h,	0C6DB0h, 53DCFh, 20h, 0C6DB0h, 53E2Eh
dd 20h,	0C6DB0h, 53E5Bh, 20h, 0C6DB0h, 53EB9h, 20h, 0C6DB0h
dd 53ED5h, 20h,	0C6DB0h, 53F0Dh, 20h, 0C6DB0h, 53F23h
dd 20h,	0C6DB0h, 53F61h, 20h, 0C6DB0h, 53FC0h, 20h, 0C6DB0h
dd 54006h, 20h,	0C6DB0h, 54021h, 20h, 0C6DB0h, 54065h
dd 20h,	0C6DB0h, 540A9h, 20h, 0C6DB0h, 540E8h, 20h, 0C6DB0h
dd 5412Dh, 20h,	0C6DB0h, 5416Ch, 20h, 0C6DB0h, 541B1h
dd 20h,	0C6DB0h, 541F0h, 20h, 0C6DB0h, 54240h, 20h, 0C6DB0h
dd 54297h, 20h,	0C6DB0h, 54331h, 20h, 0C6DB0h, 543CEh
dd 20h,	0C6DB0h, 543F2h, 20h, 0C6DB0h, 54671h, 20h, 0C6DB0h
dd 54695h, 20h,	0C6DB0h, 546ACh, 20h, 0C6DB0h, 546F0h
dd 20h,	0C6DB0h, 5471Fh, 20h, 0C6DB0h, 54801h, 20h, 0C6DB0h
dd 54818h, 20h,	0C6DB0h, 54860h, 20h, 0C6DB0h, 54935h
dd 20h,	0C6DB0h, 54B68h, 20h, 0C6DB0h, 54BA2h, 20h, 0C6DB0h
dd 54C1Eh, 20h,	0C6DB0h, 54D66h, 20h, 0C6DB0h, 54E1Fh
dd 20h,	0C6DB0h, 54E6Eh, 20h, 0C6DB0h, 54E94h, 20h, 0C6DB0h
dd 54EC0h, 20h,	0C6DB0h, 54EE4h, 20h, 0C6DB0h, 54F26h
dd 20h,	0C6DB0h, 54F4Ah, 20h, 0C6DB0h, 54F7Ah, 20h, 0C6DB0h
dd 54F92h, 20h,	0C6DB0h, 54FAAh, 20h, 0C6DB0h, 54FD8h
dd 20h,	0C6DB0h, 55004h, 20h, 0C6DB0h, 5501Dh, 20h, 0C6DB0h
dd 5503Dh, 20h,	0C6DB0h, 55074h, 20h, 0C6DB0h, 55091h
dd 20h,	0C6DB0h, 550C9h, 20h, 0C6DB0h, 5512Ch, 20h, 0C6DB0h
dd 55162h, 20h,	0C6DB0h, 551E5h, 20h, 0C6DB0h, 55207h
dd 20h,	0C6DB0h, 55254h, 20h, 0C6DB0h, 5532Ch, 20h, 0C6DB0h
dd 55349h, 20h,	0C6DB0h, 55377h, 20h, 0C6DB0h, 553C5h
dd 20h,	0C6DB0h, 553DCh, 20h, 0C6DB0h, 55419h, 20h, 0C6DB0h
dd 55439h, 20h,	0C6DB0h, 55484h, 20h, 0C6DB0h, 5553Ch
dd 20h,	0C6DB0h, 55578h, 20h, 0C6DB0h, 5558Dh, 20h, 0C6DB0h
dd 555A0h, 20h,	0C6DB0h, 557ABh, 20h, 0C6DB0h, 557C0h
dd 20h,	0C6DB0h, 557DDh, 20h, 0C6DB0h, 557F0h, 20h, 0C6DB0h
dd 55844h, 20h,	0C6DB0h, 5585Fh, 20h, 0C6DB0h, 558A8h
dd 20h,	0C6DB0h, 558CFh, 20h, 0C6DB0h, 55930h, 20h, 0C6DB0h
dd 5597Bh, 20h,	0C6DB0h, 559C7h, 20h, 0C6DB0h, 559E9h
dd 20h,	0C6DB0h, 559FFh, 20h, 0C6DB0h, 55A19h, 20h, 0C6DB0h
dd 55A3Dh, 20h
dd 0C6DB0h, 55A56h, 20h, 0C6DB0h, 55A8Dh, 20h, 0C6DB0h
dd 55AA4h, 20h,	0C6DB0h, 55AC5h, 20h, 0C6DB0h, 55AE7h
dd 20h,	0C6DB0h, 55B14h, 20h, 0C6DB0h, 55B2Dh, 20h, 0C6DB0h
dd 55B52h, 20h,	0C6DB0h, 55B70h, 20h, 0C6DB0h, 55B8Dh
dd 20h,	0C6DB0h, 55BB0h, 20h, 0C6DB0h, 55C10h, 20h, 0C6DB0h
dd 55C38h, 20h,	0C6DB0h, 55C7Bh, 20h, 0C6DB0h, 55C93h
dd 20h,	0C6DB0h, 55CC7h, 20h, 0C6DB0h, 55D00h, 20h, 0C6DB0h
dd 55E85h, 20h,	0C6DB0h, 55EBAh, 20h, 0C6DB0h, 55EF1h
dd 20h,	0C6DB0h, 55F27h, 20h, 0C6DB0h, 55FA5h, 20h, 0C6DB0h
dd 561E5h, 20h,	0C6DB0h, 5622Bh, 20h, 0C6DB0h, 56291h
dd 20h,	0C6DB0h, 562B1h, 20h, 0C6DB0h, 56311h, 20h, 0C6DB0h
dd 563A7h, 20h,	0C6DB0h, 564E7h, 20h, 0C6DB0h, 56574h
dd 20h,	0C6DB0h, 56598h, 20h, 0C6DB0h, 565B2h, 20h, 0C6DB0h
dd 56636h, 20h,	0C6DB0h, 5664Ch, 20h, 0C6DB0h, 5668Eh
dd 20h,	0C6DB0h, 566A9h, 20h, 0C6DB0h, 566DBh, 20h, 0C6DB0h
dd 566F6h, 20h,	0C6DB0h, 5672Ch, 20h, 0C6DB0h, 56755h
dd 20h,	0C6DB0h, 567A6h, 20h, 0C6DB0h, 567D8h, 20h, 0C6DB0h
dd 56857h, 20h,	0C6DB0h, 56876h, 20h, 0C6DB0h, 568A6h
dd 20h,	0C6DB0h, 568F5h, 20h, 0C6DB0h, 5693Ch, 20h, 0C6DB0h
dd 569BBh, 20h,	0C6DB0h, 569DEh, 20h, 0C6DB0h, 56A11h
dd 20h,	0C6DB0h, 56A21h, 20h, 0C6DB0h, 56A4Ah, 20h, 0C6DB0h
dd 56A7Dh, 20h,	0C6DB0h, 56A92h, 20h, 0C6DB0h, 56AB5h
dd 20h,	0C6DB0h, 56AD8h, 20h, 0C6DB0h, 56AFBh, 20h, 0C6DB0h
dd 56B15h, 20h,	0C6DB0h, 56B41h, 20h, 0C6DB0h, 56B65h
dd 20h,	0C6DB0h, 56BC4h, 20h, 0C6DB0h, 56BFCh, 20h, 0C6DB0h
dd 56C3Eh, 20h,	0C6DB0h, 56C54h, 20h, 0C6DB0h, 56C8Dh
dd 20h,	0C6DB0h, 56CA0h, 20h, 0C6DB0h, 56CBDh, 20h, 0C6DB0h
dd 56CD6h, 20h,	0C6DB0h, 56D25h, 20h, 0C6DB0h, 56DA6h
dd 20h,	0C6DB0h, 56DF5h, 20h, 0C6DB0h, 56E81h, 20h, 0C6DB0h
dd 56EC5h, 20h,	0C6DB0h, 56F02h, 20h, 0C6DB0h, 56F51h
dd 20h,	0C6DB0h, 56FDCh, 20h, 0C6DB0h, 5713Ah, 20h, 0C6DB0h
dd 57157h, 20h,	0C6DB0h, 5725Bh, 20h, 0C6DB0h, 572A6h
dd 20h,	0C6DB0h, 572F5h, 20h, 0C6DB0h, 5733Ah, 20h, 0C6DB0h
dd 5737Dh, 20h,	0C6DB0h, 573AAh, 20h, 0C6DB0h, 573E7h
dd 20h,	0C6DB0h, 5745Bh, 20h, 0C6DB0h, 5746Eh, 20h, 0C6DB0h
dd 574B2h, 20h,	0C6DB0h, 57502h, 20h, 0C6DB0h, 57526h
dd 20h,	0C6DB0h, 576EAh, 20h, 0C6DB0h, 57700h, 20h, 0C6DB0h
dd 57742h, 20h,	0C6DB0h, 5775Dh, 20h, 0C6DB0h, 5778Fh
dd 20h,	0C6DB0h, 577AAh, 20h, 0C6DB0h, 57824h, 20h, 0C6DB0h
dd 57849h, 20h,	0C6DB0h, 5789Ah, 20h, 0C6DB0h, 578C2h
dd 20h,	0C6DB0h, 57911h, 20h, 0C6DB0h, 57949h, 20h, 0C6DB0h
dd 5799Ah, 20h,	0C6DB0h, 579C6h, 20h, 0C6DB0h, 57A15h
dd 20h,	0C6DB0h, 57A4Dh, 20h, 0C6DB0h, 57A9Eh, 20h, 0C6DB0h
dd 57ACAh, 20h,	0C6DB0h, 57B19h, 20h, 0C6DB0h, 57B51h
dd 20h,	0C6DB0h, 57BA2h, 20h, 0C6DB0h, 57BCEh, 20h, 0C6DB0h
dd 57C1Dh, 20h,	0C6DB0h, 57C55h, 20h, 0C6DB0h, 57CA6h
dd 20h,	0C6DB0h, 57CD2h, 20h, 0C6DB0h, 57D21h, 20h, 0C6DB0h
dd 57D59h, 20h,	0C6DB0h, 57DAAh, 20h, 0C6DB0h, 57DE0h
dd 20h,	0C6DB0h, 57E60h, 20h, 0C6DB0h, 57E86h, 20h, 0C6DB0h
dd 57EAEh, 20h,	0C6DB0h, 57ECAh, 20h, 0C6DB0h, 57EE2h
dd 20h,	0C6DB0h, 57EFAh, 20h, 0C6DB0h, 57F12h, 20h, 0C6DB0h
dd 57F2Ah, 20h,	0C6DB0h, 57F75h, 20h, 0C6DB0h, 57F9Eh
dd 20h,	0C6DB0h, 57FEDh, 20h, 0C6DB0h, 58038h, 20h, 0C6DB0h
dd 580BFh, 20h,	0C6DB0h, 580EEh, 20h, 0C6DB0h, 5811Ah
dd 20h,	0C6DB0h, 58146h, 20h, 0C6DB0h, 58172h, 20h, 0C6DB0h
dd 5819Ah, 20h,	0C6DB0h, 581C2h, 20h, 0C6DB0h, 581E8h
dd 20h,	0C6DB0h, 58238h, 20h, 0C6DB0h, 58251h, 20h, 0C6DB0h
dd 58285h, 20h,	0C6DB0h, 582AAh, 20h, 0C6DB0h, 583F0h
dd 20h,	0C6DB0h, 58473h, 20h, 0C6DB0h, 584CBh, 20h, 0C6DB0h
dd 58529h, 20h,	0C6DB0h, 5857Fh, 20h, 0C6DB0h, 5859Eh
dd 20h,	0C6DB0h, 586CAh, 20h, 0C6DB0h, 58701h, 20h, 0C6DB0h
dd 58799h, 20h,	0C6DB0h, 587F0h, 20h, 0C6DB0h, 58926h
dd 20h,	0C6DB0h, 58AB9h, 20h, 0C6DB0h, 58B0Bh, 20h, 0C6DB0h
dd 58B38h, 20h,	0C6DB0h, 58BDBh, 20h, 0C6DB0h, 591B7h
dd 20h,	0C6DB0h, 591CFh, 20h, 0C6DB0h, 59266h, 20h, 0C6DB0h
dd 59296h, 20h,	0C6DB0h, 592BEh, 20h, 0C6DB0h, 592D6h
dd 20h,	0C6DB0h, 592F5h, 20h, 0C6DB0h, 59346h, 20h, 0C6DB0h
dd 59362h, 20h,	0C6DB0h, 59397h, 20h, 0C6DB0h, 59468h
dd 20h,	0C6DB0h, 594B1h
dd 20h,	0C6DB0h, 59513h, 20h, 0C6DB0h, 595ACh, 20h, 0C6DB0h
dd 59679h, 20h,	0C6DB0h, 596A2h, 20h, 0C6DB0h, 596B8h
dd 20h,	0C6DB0h, 596F1h, 20h, 0C6DB0h, 59737h, 20h, 0C6DB0h
dd 5977Bh, 20h,	0C6DB0h, 597ECh, 20h, 0C6DB0h, 59862h
dd 20h,	0C6DB0h, 59928h, 20h, 0C6DB0h, 5999Eh, 20h, 0C6DB0h
dd 59A50h, 20h,	0C6DB0h, 59A8Dh, 20h, 0C6DB0h, 59AA0h
dd 20h,	0C6DB0h, 59ACCh, 20h, 0C6DB0h, 59AEAh, 20h, 0C6DB0h
dd 59B64h, 20h,	0C6DB0h, 59C3Ch, 20h, 0C6DB0h, 59C68h
dd 20h,	0C6DB0h, 59CA2h, 20h, 0C6DB0h, 59D02h, 20h, 0C6DB0h
dd 59D3Fh, 20h,	0C6DB0h, 59D70h, 20h, 0C6DB0h, 59DD8h
dd 20h,	0C6DB0h, 59E11h, 20h, 0C6DB0h, 59E31h, 20h, 0C6DB0h
dd 59E4Fh, 20h,	0C6DB0h, 59E86h, 20h, 0C6DB0h, 59E9Ch
dd 20h,	0C6DB0h, 59EACh, 20h, 0C6DB0h, 59EC0h, 20h, 0C6DB0h
dd 59EFEh, 20h,	0C6DB0h, 59F20h, 20h, 0C6DB0h, 59F58h
dd 20h,	0C6DB0h, 59FE5h, 20h, 0C6DB0h, 5A03Dh, 20h, 0C6DB0h
dd 5A190h, 20h,	0C6DB0h, 5A1CCh, 20h, 0C6DB0h, 5A25Dh
dd 20h,	0C6DB0h, 5A26Dh, 20h, 0C6DB0h, 5A295h, 20h, 0C6DB0h
dd 5A2B5h, 20h,	0C6DB0h, 5A2DCh, 20h, 0C6DB0h, 5A363h
dd 20h,	0C6DB0h, 5A440h, 20h, 0C6DB0h, 5A4E2h, 20h, 0C6DB0h
dd 5A976h, 20h,	0C6DB0h, 5AA60h, 20h, 0C6DB0h, 5AB59h
dd 20h,	0C6DB0h, 5AD57h, 20h, 0C6DB0h, 5AEB0h, 20h, 0C6DB0h
dd 5AED4h, 20h,	0C6DB0h, 5AEEDh, 20h, 0C6DB0h, 5AF1Dh
dd 20h,	0C6DB0h, 5AF34h, 20h, 0C6DB0h, 5AF58h, 20h, 0C6DB0h
dd 5AF6Ch, 20h,	0C6DB0h, 5AF90h, 20h, 0C6DB0h, 5AFA9h
dd 20h,	0C6DB0h, 5AFFBh, 20h, 0C6DB0h, 5B083h, 20h, 0C6DB0h
dd 5B0F8h, 20h,	0C6DB0h, 5B580h, 20h, 0C6DB0h, 5B634h
dd 20h,	0C6DB0h, 5B71Ch, 20h, 0C6DB0h, 5B740h, 20h, 0C6DB0h
dd 5B785h, 20h,	0C6DB0h, 5B9E3h, 20h, 0C6DB0h, 5BA28h
dd 20h,	0C6DB0h, 5BEB8h, 20h, 0C6DB0h, 5BF9Ch, 20h, 0C6DB0h
dd 5C208h, 20h,	0C6DB0h, 5C296h, 20h, 0C6DB0h, 5C2D0h
dd 20h,	0C6DB0h, 5C334h, 20h, 0C6DB0h, 5C406h, 20h, 0C6DB0h
dd 5C4C3h, 20h,	0C6DB0h, 5C50Ch, 20h, 0C6DB0h, 5C5F7h
dd 20h,	0C6DB0h, 5CBA8h, 20h, 0C6DB0h, 5CC1Bh, 20h, 0C6DB0h
dd 5CD36h, 20h,	0C6DB0h, 5CD78h, 20h, 0C6DB0h, 5CE41h
dd 20h,	0C6DB0h, 5CE78h, 20h, 0C6DB0h, 5CF10h, 20h, 0C6DB0h
dd 5CF50h, 20h,	0C6DB0h, 5D042h, 20h, 0C6DB0h, 5D1C2h
dd 20h,	0C6DB0h, 5D2DCh, 20h, 0C6DB0h, 5D2ECh, 20h, 0C6DB0h
dd 5D304h, 20h,	0C6DB0h, 5D31Dh, 20h, 0C6DB0h, 5D365h
dd 20h,	0C6DB0h, 5D395h, 20h, 0C6DB0h, 5D3C1h, 20h, 0C6DB0h
dd 5D3D1h, 20h,	0C6DB0h, 5D412h, 20h, 0C6DB0h, 5D51Bh
dd 20h,	0C6DB0h, 5D724h, 20h, 0C6DB0h, 5D7A9h, 20h, 0C6DB0h
dd 5D832h, 20h,	0C6DB0h, 5D85Fh, 20h, 0C6DB0h, 5D87Ah
dd 20h,	0C6DB0h, 5D8E4h, 20h, 0C6DB0h, 5D9CBh, 20h, 0C6DB0h
dd 5DA05h, 20h,	0C6DB0h, 5DAFBh, 20h, 0C6DB0h, 5DB6Dh
dd 20h,	0C6DB0h, 5DC03h, 20h, 0C6DB0h, 5DC51h, 20h, 0C6DB0h
dd 5DC6Fh, 20h,	0C6DB0h, 5DD4Ah, 20h, 0C6DB0h, 5DDD0h
dd 20h,	0C6DB0h, 5DDE0h, 20h, 0C6DB0h, 5DDF4h, 20h, 0C6DB0h
dd 5DE04h, 20h,	0C6DB0h, 5DE18h, 20h, 0C6DB0h, 5DE28h
dd 20h,	0C6DB0h, 5DE47h, 20h, 0C6DB0h, 5DEA2h, 20h, 0C6DB0h
dd 5DEEBh, 20h,	0C6DB0h, 5DF2Eh, 20h, 0C6DB0h, 5DF75h
dd 20h,	0C6DB0h, 5DF9Ah, 20h, 0C6DB0h, 5DFD0h, 20h, 0C6DB0h
dd 5DFFCh, 20h,	0C6DB0h, 5E036h, 20h, 0C6DB0h, 5E240h
dd 20h,	0C6DB0h, 631AAh, 20h, 0C6DB0h, 631F7h, 20h, 0C6DB0h
dd 63287h, 20h,	0C6DB0h, 63302h, 20h, 0C6DB0h, 63347h
dd 20h,	0C6DB0h, 633DEh, 20h, 0C6DB0h, 6342Dh, 20h, 0C6DB0h
dd 6343Dh, 20h,	0C6DB0h, 63465h, 20h, 0C6DB0h, 63475h
dd 20h,	0C6DB0h, 6349Ch, 20h, 0C6DB0h, 63574h, 20h, 0C6DB0h
dd 6358Ah, 20h,	0C6DB0h, 635CAh, 20h, 0C6DB0h, 635FEh
dd 20h,	0C6DB0h, 6364Ah, 20h, 0C6DB0h, 63688h, 20h, 0C6DB0h
dd 6369Ah, 20h,	0C6DB0h, 636DBh, 20h, 0C6DB0h, 6372Dh
dd 20h,	0C6DB0h, 637C0h, 20h, 0C6DB0h, 638B0h, 20h, 0C6DB0h
dd 63989h, 20h,	0C6DB0h, 63999h, 20h, 0C6DB0h, 639C4h
dd 20h,	0C6DB0h, 63A4Eh, 20h, 0C6DB0h, 63A72h, 20h, 0C6DB0h
dd 63A9Eh, 20h,	0C6DB0h, 63AF7h, 20h, 0C6DB0h, 63BECh
dd 20h,	0C6DB0h, 63D08h, 20h, 0C6DB0h, 63D76h, 20h, 0C6DB0h
dd 63DE4h, 20h,	0C6DB0h, 63E04h, 20h, 0C6DB0h, 6401Ch
dd 20h,	0C6DB0h, 640E5h, 20h, 0C6DB0h, 64274h, 20h, 0C6DB0h
dd 643F1h, 20h,	0C6DB0h, 64491h, 20h, 0C6DB0h, 644C2h
dd 20h,	0C6DB0h
dd 64518h, 20h,	0C6DB0h, 6458Ah, 20h, 0C6DB0h, 646EDh
dd 20h,	0C6DB0h, 6485Ch, 20h, 0C6DB0h, 648C0h, 20h, 0C6DB0h
dd 648D4h, 20h,	0C6DB0h, 64938h, 20h, 0C6DB0h, 6495Ah
dd 20h,	0C6DB0h, 64A1Fh, 20h, 0C6DB0h, 64D36h, 20h, 0C6DB0h
dd 64D68h, 20h,	0C6DB0h, 64DA3h, 20h, 0C6DB0h, 64DE1h
dd 20h,	0C6DB0h, 64E39h, 20h, 0C6DB0h, 64E5Fh, 20h, 0C6DB0h
dd 64EB3h, 20h,	0C6DB0h, 64EF0h, 20h, 0C6DB0h, 651A8h
dd 20h,	0C6DB0h, 657B5h, 20h, 0C6DB0h, 657C5h, 20h, 0C6DB0h
dd 657F4h, 20h,	0C6DB0h, 658D2h, 20h, 0C6DB0h, 6591Ch
dd 20h,	0C6DB0h, 65AA0h, 20h, 0C6DB0h, 65B3Ah, 20h, 0C6DB0h
dd 65B98h, 20h,	0C6DB0h, 65CF9h, 20h, 0C6DB0h, 65E4Bh
dd 20h,	0C6DB0h, 665ADh, 20h, 0C6DB0h, 66604h, 20h, 0C6DB0h
dd 66687h, 20h,	0C6DB0h, 666E4h, 20h, 0C6DB0h, 6674Dh
dd 20h,	0C6DB0h, 6675Dh, 20h, 0C6DB0h, 66780h, 20h, 0C6DB0h
dd 668CAh, 20h,	0C6DB0h, 66908h, 20h, 0C6DB0h, 66929h
dd 20h,	0C6DB0h, 669C9h, 20h, 0C6DB0h, 66A1Fh, 20h, 0C6DB0h
dd 66A7Fh, 20h,	0C6DB0h, 66B2Fh, 20h, 0C6DB0h, 66C22h
dd 20h,	0C6DB0h, 66C60h, 20h, 0C6DB0h, 66D1Eh, 20h, 0C6DB0h
dd 66D9Fh, 20h,	0C6DB0h, 66E58h, 20h, 0C6DB0h, 66EE3h
dd 20h,	0C6DB0h, 66F35h, 20h, 0C6DB0h, 66FF8h, 20h, 0C6DB0h
dd 670D0h, 20h,	0C6DB0h, 6714Fh, 20h, 0C6DB0h, 671F3h
dd 20h,	0C6DB0h, 67240h, 20h, 0C6DB0h, 67329h, 20h, 0C6DB0h
dd 6736Fh, 20h,	0C6DB0h, 673C9h, 20h, 0C6DB0h, 6742Eh
dd 20h,	0C6DB0h, 67484h, 20h, 0C6DB0h, 67519h, 20h, 0C6DB0h
dd 6757Eh, 20h,	0C6DB0h, 676CDh, 20h, 0C6DB0h, 676DDh
dd 20h,	0C6DB0h, 67700h, 20h, 0C6DB0h, 67888h, 20h, 0C6DB0h
dd 678F2h, 20h,	0C6DB0h, 67948h, 20h, 0C6DB0h, 67964h
dd 20h,	0C6DB0h, 67974h, 20h, 0C6DB0h, 6799Ch, 20h, 0C6DB0h
dd 67A3Eh, 20h,	0C6DB0h, 67A7Dh, 20h, 0C6DB0h, 67AECh
dd 20h,	0C6DB0h, 67B18h, 20h, 0C6DB0h, 67BBCh, 20h, 0C6DB0h
dd 67BCCh, 20h,	0C6DB0h, 67BE7h, 20h, 0C6DB0h, 67C59h
dd 20h,	0C6DB0h, 67C76h, 20h, 0C6DB0h, 67CA6h, 20h, 0C6DB0h
dd 67D02h, 20h,	0C6DB0h, 67D37h, 20h, 0C6DB0h, 67D91h
dd 20h,	0C6DB0h, 67DA7h, 20h, 0C6DB0h, 67DE5h, 20h, 0C6DB0h
dd 67E13h, 20h,	0C6DB0h, 67E5Ah, 20h, 0C6DB0h, 67E85h
dd 20h,	0C6DB0h, 67EC2h, 20h, 0C6DB0h, 67F09h, 20h, 0C6DB0h
dd 67F48h, 20h,	0C6DB0h, 67F8Dh, 20h, 0C6DB0h, 67FA7h
dd 20h,	0C6DB0h, 67FE9h, 20h, 0C6DB0h, 68000h, 20h, 0C6DB0h
dd 6803Dh, 20h,	0C6DB0h, 68054h, 20h, 0C6DB0h, 68091h
dd 20h,	0C6DB0h, 680A8h, 20h, 0C6DB0h, 680E5h, 20h, 0C6DB0h
dd 680FDh, 20h,	0C6DB0h, 68139h, 20h, 0C6DB0h, 68151h
dd 20h,	0C6DB0h, 6818Dh, 20h, 0C6DB0h, 681A4h, 20h, 0C6DB0h
dd 681E1h, 20h,	0C6DB0h, 681F8h, 20h, 0C6DB0h, 68235h
dd 20h,	0C6DB0h, 6824Ch, 20h, 0C6DB0h, 68289h, 20h, 0C6DB0h
dd 682A0h, 20h,	0C6DB0h, 682E2h, 20h, 0C6DB0h, 682FCh
dd 20h,	0C6DB0h, 6830Eh, 20h, 0C6DB0h, 6834Eh, 20h, 0C6DB0h
dd 68368h, 20h,	0C6DB0h, 6837Ah, 20h, 0C6DB0h, 683B6h
dd 20h,	0C6DB0h, 68400h, 20h, 0C6DB0h, 6845Dh, 20h, 0C6DB0h
dd 68474h, 20h,	0C6DB0h, 684B1h, 20h, 0C6DB0h, 684C8h
dd 20h,	0C6DB0h, 68505h, 20h, 0C6DB0h, 6851Ch, 20h, 0C6DB0h
dd 68559h, 20h,	0C6DB0h, 68570h, 20h, 0C6DB0h, 685A9h
dd 20h,	0C6DB0h, 685C0h, 20h, 0C6DB0h, 685FDh, 20h, 0C6DB0h
dd 68614h, 20h,	0C6DB0h, 68651h, 20h, 0C6DB0h, 68668h
dd 20h,	0C6DB0h, 686A5h, 20h, 0C6DB0h, 686BCh, 20h, 0C6DB0h
dd 686F9h, 20h,	0C6DB0h, 68710h, 20h, 0C6DB0h, 6874Dh
dd 20h,	0C6DB0h, 68764h, 20h, 0C6DB0h, 687A1h, 20h, 0C6DB0h
dd 687B8h, 20h,	0C6DB0h, 687F5h, 20h, 0C6DB0h, 6880Ch
dd 20h,	0C6DB0h, 68849h, 20h, 0C6DB0h, 68860h, 20h, 0C6DB0h
dd 6889Dh, 20h,	0C6DB0h, 688B7h, 20h, 0C6DB0h, 688F5h
dd 20h,	0C6DB0h, 6890Fh, 20h, 0C6DB0h, 6894Dh, 20h, 0C6DB0h
dd 68964h, 20h,	0C6DB0h, 689A1h, 20h, 0C6DB0h, 689B8h
dd 20h,	0C6DB0h, 689F5h, 20h, 0C6DB0h, 68A0Ch, 20h, 0C6DB0h
dd 68A49h, 20h,	0C6DB0h, 68A60h, 20h, 0C6DB0h, 68A9Dh
dd 20h,	0C6DB0h, 68AB4h, 20h, 0C6DB0h, 68AF3h, 20h, 0C6DB0h
dd 68B3Ch, 20h,	0C6DB0h, 68D75h, 20h, 0C6DB0h, 68D9Fh
dd 20h,	0C6DB0h, 68DD4h, 20h, 0C6DB0h, 68DEDh, 20h, 0C6DB0h
dd 68E00h, 20h,	0C6DB0h, 68E1Bh, 20h, 0C6DB0h, 68E40h
dd 20h,	0C6DB0h, 68EB4h, 20h, 0C6DB0h, 68ED1h, 20h, 0C6DB0h
dd 68F35h, 20h
dd 0C6DB0h, 68F6Ah, 20h, 0C6DB0h, 68F84h, 20h, 0C6DB0h
dd 68FA3h, 20h,	0C6DB0h, 68FBAh, 20h, 0C6DB0h, 68FDCh
dd 20h,	0C6DB0h, 69020h, 20h, 0C6DB0h, 69045h, 20h, 0C6DB0h
dd 69055h, 20h,	0C6DB0h, 6907Dh, 20h, 0C6DB0h, 690ADh
dd 20h,	0C6DB0h, 690D6h, 20h, 0C6DB0h, 690F6h, 20h, 0C6DB0h
dd 69116h, 20h,	0C6DB0h, 69135h, 20h, 0C6DB0h, 69153h
dd 20h,	0C6DB0h, 6916Eh, 20h, 0C6DB0h, 6919Ch, 20h, 0C6DB0h
dd 691BCh, 20h,	0C6DB0h, 691E6h, 20h, 0C6DB0h, 69228h
dd 20h,	0C6DB0h, 69248h, 20h, 0C6DB0h, 69282h, 20h, 0C6DB0h
dd 692A0h, 20h,	0C6DB0h, 692C0h, 20h, 0C6DB0h, 692D6h
dd 20h,	0C6DB0h, 692F0h, 20h, 0C6DB0h, 6930Eh, 20h, 0C6DB0h
dd 69326h, 20h,	0C6DB0h, 6934Ah, 20h, 0C6DB0h, 69368h
dd 20h,	0C6DB0h, 6938Ah, 20h, 0C6DB0h, 693ADh, 20h, 0C6DB0h
dd 693DDh, 20h,	0C6DB0h, 69406h, 20h, 0C6DB0h, 69426h
dd 20h,	0C6DB0h, 69446h, 20h, 0C6DB0h, 69463h, 20h, 0C6DB0h
dd 6948Eh, 20h,	0C6DB0h, 694B3h, 20h, 0C6DB0h, 694D9h
dd 20h,	0C6DB0h, 6950Ah, 20h, 0C6DB0h, 69561h, 20h, 0C6DB0h
dd 695EDh, 20h,	0C6DB0h, 6962Eh, 20h, 0C6DB0h, 69648h
dd 20h,	0C6DB0h, 696AEh, 20h, 0C6DB0h, 696D6h, 20h, 0C6DB0h
dd 696EBh, 20h,	0C6DB0h, 6972Ah, 20h, 0C6DB0h, 69745h
dd 20h,	0C6DB0h, 6975Eh, 20h, 0C6DB0h, 69794h, 20h, 0C6DB0h
dd 697B1h, 20h,	0C6DB0h, 697D9h, 20h, 0C6DB0h, 6983Eh
dd 20h,	0C6DB0h, 69879h, 20h, 0C6DB0h, 698E0h, 20h, 0C6DB0h
dd 6992Bh, 20h,	0C6DB0h, 69952h, 20h, 0C6DB0h, 69992h
dd 20h,	0C6DB0h, 699AAh, 20h, 0C6DB0h, 699D2h, 20h, 0C6DB0h
dd 699F7h, 20h,	0C6DB0h, 69A0Ah, 20h, 0C6DB0h, 69A3Bh
dd 20h,	0C6DB0h, 69A84h, 20h, 0C6DB0h, 69AECh, 20h, 0C6DB0h
dd 69B48h, 20h,	0C6DB0h, 69BAAh, 20h, 0C6DB0h, 69BD4h
dd 20h,	0C6DB0h, 69C0Dh, 20h, 0C6DB0h, 69C24h, 20h, 0C6DB0h
dd 69C66h, 20h,	0C6DB0h, 69C90h, 20h, 0C6DB0h, 69CC9h
dd 20h,	0C6DB0h, 69CE0h, 20h, 0C6DB0h, 69D31h, 20h, 0C6DB0h
dd 6A030h, 20h,	0C6DB0h, 6A1BDh, 20h, 0C6DB0h, 6A1D4h
dd 20h,	0C6DB0h, 6A212h, 20h, 0C6DB0h, 6A2B9h, 20h, 0C6DB0h
dd 6A302h, 20h,	0C6DB0h, 6A334h, 20h, 0C6DB0h, 6A3AFh
dd 20h,	0C6DB0h, 6A3CEh, 20h, 0C6DB0h, 6A3E2h, 20h, 0C6DB0h
dd 6A412h, 20h,	0C6DB0h, 6A450h, 20h, 0C6DB0h, 6A4BBh
dd 20h,	0C6DB0h, 6A4DEh, 20h, 0C6DB0h, 6A50Eh, 20h, 0C6DB0h
dd 6A526h, 20h,	0C6DB0h, 6A57Dh, 20h, 0C6DB0h, 6A678h
dd 20h,	0C6DB0h, 6A748h, 20h, 0C6DB0h, 6A784h, 20h, 0C6DB0h
dd 6A798h, 20h,	0C6DB0h, 6A7D4h, 20h, 0C6DB0h, 6A7F4h
dd 20h,	0C6DB0h, 6A862h, 20h, 0C6DB0h, 6A8E7h, 20h, 0C6DB0h
dd 6A923h, 20h,	0C6DB0h, 6A94Dh, 20h, 0C6DB0h, 6AA1Ch
dd 20h,	0C6DB0h, 6AA74h, 20h, 0C6DB0h, 6AAA0h, 20h, 0C6DB0h
dd 6AABAh, 20h,	0C6DB0h, 6AB20h, 20h, 0C6DB0h, 6AB6Dh
dd 20h,	0C6DB0h, 6ABA7h, 20h, 0C6DB0h, 6ABCDh, 20h, 0C6DB0h
dd 6ABDDh, 20h,	0C6DB0h, 6AC0Bh, 20h, 0C6DB0h, 6AC5Bh
dd 20h,	0C6DB0h, 6ACA0h, 20h, 0C6DB0h, 6ACFFh, 20h, 0C6DB0h
dd 6ADB4h, 20h,	0C6DB0h, 6AEFAh, 20h, 0C6DB0h, 6B033h
dd 20h,	0C6DB0h, 6B11Fh, 20h, 0C6DB0h, 6B170h, 20h, 0C6DB0h
dd 6B1B7h, 20h,	0C6DB0h, 6B254h, 20h, 0C6DB0h, 6B264h
dd 20h,	0C6DB0h, 6B27Dh, 20h, 0C6DB0h, 6B2B9h, 20h, 0C6DB0h
dd 6B389h, 20h,	0C6DB0h, 6B42Dh, 20h, 0C6DB0h, 6B46Eh
dd 20h,	0C6DB0h, 6B4E2h, 20h, 0C6DB0h, 6B537h, 20h, 0C6DB0h
dd 6B5A5h, 20h,	0C6DB0h, 6B614h, 20h, 0C6DB0h, 6B65Fh
dd 20h,	0C6DB0h, 6B774h, 20h, 0C6DB0h, 6B7BAh, 20h, 0C6DB0h
dd 6B8B7h, 20h,	0C6DB0h, 6BBEBh, 20h, 0C6DB0h, 6BFA5h
dd 20h,	0C6DB0h, 6BFF9h, 20h, 0C6DB0h, 6C121h, 20h, 0C6DB0h
dd 6C187h, 20h,	0C6DB0h, 6C2ABh, 20h, 0C6DB0h, 6C2CAh
dd 20h,	0C6DB0h, 6C318h, 20h, 0C6DB0h, 6C33Ch, 20h, 0C6DB0h
dd 6C402h, 20h,	0C6DB0h, 6C5E4h, 20h, 0C6DB0h, 6C81Dh
dd 20h,	0C6DB0h, 6C971h, 20h, 0C6DB0h, 6C9BCh, 20h, 0C6DB0h
dd 6CA0Ah, 20h,	0C6DB0h, 6CA42h, 20h, 0C6DB0h, 6CA69h
dd 20h,	0C6DB0h, 6CA9Dh, 20h, 0C6DB0h, 6CAE9h, 20h, 0C6DB0h
dd 6CB2Dh, 20h,	0C6DB0h, 6CB59h, 20h, 0C6DB0h, 6CB9Dh
dd 20h,	0C6DB0h, 6CBC9h, 20h, 0C6DB0h, 6CBFDh, 20h, 0C6DB0h
dd 6CC29h, 20h,	0C6DB0h, 6CC5Dh, 20h, 0C6DB0h, 6CC89h
dd 20h,	0C6DB0h, 6CCB5h, 20h, 0C6DB0h, 6CCE2h, 20h, 0C6DB0h
dd 6CD32h, 20h,	0C6DB0h, 6CD8Ah, 20h, 0C6DB0h, 6CDC5h
dd 20h,	0C6DB0h, 6CE6Dh
dd 20h,	0C6DB0h, 6CEA1h, 20h, 0C6DB0h, 6D015h, 20h, 0C6DB0h
dd 6D03Bh, 20h,	0C6DB0h, 6D060h, 20h, 0C6DB0h, 6D0D1h
dd 20h,	0C6DB0h, 6D128h, 20h, 0C6DB0h, 6D152h, 20h, 0C6DB0h
dd 6D22Ah, 20h,	0C6DB0h, 6D24Fh, 20h, 0C6DB0h, 6D279h
dd 20h,	0C6DB0h, 6D2F3h, 20h, 0C6DB0h, 6D39Fh, 20h, 0C6DB0h
dd 6D3E6h, 20h,	0C6DB0h, 6D3FEh, 20h, 0C6DB0h, 6D4AEh
dd 20h,	0C6DB0h, 6D4EEh, 20h, 0C6DB0h, 6D54Bh, 20h, 0C6DB0h
dd 6D56Ah, 20h,	0C6DB0h, 6D5AAh, 20h, 0C6DB0h, 6D60Ah
dd 20h,	0C6DB0h, 6D64Ah, 20h, 0C6DB0h, 6D69Dh, 20h, 0C6DB0h
dd 6D6CAh, 20h,	0C6DB0h, 6D6E2h, 20h, 0C6DB0h, 6D761h
dd 20h,	0C6DB0h, 6D78Dh, 20h, 0C6DB0h, 6D7C2h, 20h, 0C6DB0h
dd 6D82Ch, 20h,	0C6DB0h, 6D84Dh, 20h, 0C6DB0h, 6D85Dh
dd 20h,	0C6DB0h, 6D888h, 20h, 0C6DB0h, 6D8B9h, 20h, 0C6DB0h
dd 6D8E7h, 20h,	0C6DB0h, 6D9AFh, 20h, 0C6DB0h, 6DE2Dh
dd 20h,	0C6DB0h, 6DE3Dh, 20h, 0C6DB0h, 6DE6Ch, 20h, 0C6DB0h
dd 6DF28h, 20h,	0C6DB0h, 6DF50h, 20h, 0C6DB0h, 6DFCBh
dd 20h,	0C6DB0h, 6E05Ah, 20h, 0C6DB0h, 6E0D8h, 20h, 0C6DB0h
dd 6E120h, 20h,	0C6DB0h, 6E1B0h, 20h, 0C6DB0h, 6E270h
dd 20h,	0C6DB0h, 6E2E4h, 20h, 0C6DB0h, 6E308h, 20h, 0C6DB0h
dd 6E32Ch, 20h,	0C6DB0h, 6E3F4h, 20h, 0C6DB0h, 6E412h
dd 20h,	0C6DB0h, 6E454h, 20h, 0C6DB0h, 6E472h, 20h, 0C6DB0h
dd 6E4B4h, 20h,	0C6DB0h, 6E4CDh, 20h, 0C6DB0h, 6E558h
dd 20h,	0C6DB0h, 6E69Bh, 20h, 0C6DB0h, 6E6E7h, 20h, 0C6DB0h
dd 6E736h, 20h,	0C6DB0h, 6E75Ch, 20h, 0C6DB0h, 6E7AEh
dd 20h,	0C6DB0h, 6E84Bh, 20h, 0C6DB0h, 6E919h, 20h, 0C6DB0h
dd 6E950h, 20h,	0C6DB0h, 6E9DFh, 20h, 0C6DB0h, 6E9F7h
dd 20h,	0C6DB0h, 6EA47h, 20h, 0C6DB0h, 6EA64h, 20h, 0C6DB0h
dd 6EA82h, 20h
			
align 1000h
assume cs:_eh_frame

dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF67FE0h
dd 53h,	80E4100h, 0E430283h, 0E4D0220h,	0EC34108h, 4, 34h
dd 40h,	0FFF6801Ch, 0F2h, 300E4300h, 48048344h,	87480386h
dd 240E5902h, 6E300E43h, 0C3C6C70Ah, 0B43040Eh,	43240E7Ah
dd 0E5E300Eh, 300E4324h, 14h, 78h, 0FFF680E4h, 28h, 200E4300h
dd 40E64h, 14h,	90h, 0FFF680FCh, 23h, 200E4300h, 40E5Fh
			
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF680FCh
dd 8Bh,	80E4100h, 0D420285h, 0A780205h,	4040CC5h, 0B41h
dd 20h,	40h, 0FFF68164h, 43h, 80E4100h,	0D420285h, 0C50A7505h
dd 4404040Ch, 0Bh, 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF6816Ch
dd 4Eh,	80E4100h, 0E430283h, 0E0A7230h,	0EC34108h, 0B4504h
dd 34h,	40h, 0FFF68198h, 10Bh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A63h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 2Ch, 78h, 0FFF6826Ch, 57h, 80E4100h
dd 0E410286h, 4303830Ch, 4A02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 2Ch,	0A8h, 0FFF68294h, 57h, 80E4100h
dd 0E410286h, 4303830Ch, 4A02300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	0D8h, 0FFF682BCh, 47h, 300E4300h
dd 40E0A7Eh, 0B41h, 18h, 0F4h, 0FFF682E8h, 48h,	400E4300h
dd 40E0A60h, 0B41h, 18h, 110h, 0FFF68314h, 49h,	400E4300h
dd 40E0A7Ch, 0B45h, 20h, 12Ch, 0FFF68344h, 76h,	80E4100h
dd 0E430283h, 0A670230h, 0C341080Eh, 0B45040Eh,	20h, 150h
dd 0FFF68398h, 76h, 80E4100h, 0E430283h, 0A670230h, 0C341080Eh
dd 0B45040Eh, 44h, 174h, 0FFF683ECh, 8Eh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	72300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 41040EC7h, 0A45020Bh, 0C341100Eh,	0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 18h, 1BCh, 0FFF68434h, 4Eh, 300E4300h
dd 0E0A4502h, 0B4104h, 34h, 1D8h, 0FFF68468h, 87h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 74300E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 43040EC7h, 0Bh, 20h, 210h, 0FFF684B8h
dd 8Fh,	80E4100h, 0E430283h, 0A660240h,	0C341080Eh, 0B41040Eh
dd 54h,	234h, 0FFF68524h, 0B9h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4104h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 2Ch
dd 28Ch, 0FFF68588h, 6Ah, 80E4100h, 0E430283h, 0E0A7120h
dd 0EC34108h, 670B4204h, 41080E0Ah, 45040EC3h, 0Bh, 64h
dd 2BCh, 0FFF685C4h, 0C7h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	300E4305h, 0E0A5B02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4204h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 140E6A0Bh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 64h, 324h
dd 0FFF68624h, 0CBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 300E4305h, 0E0A5C02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 140E6A0Bh, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 34h, 38Ch, 0FFF68688h
dd 8Bh,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 7D300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 42040EC7h, 0Bh, 34h
dd 3C4h, 0FFF686DCh, 8Bh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 7D300E43h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 42040EC7h, 0Bh, 3Ch,	3FCh, 0FFF68730h, 22Ch,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 0AB70201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B42040Eh, 38h, 43Ch, 0FFF6891Ch, 8Fh, 80E4100h, 0E410286h
dd 4303830Ch, 5302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0E0A6B0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 38h, 478h
dd 0FFF68970h, 7Bh, 80E4100h, 0E410286h, 4303830Ch, 0A7C300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 0C0E0A6Bh, 80EC341h
dd 40EC641h, 0B41h, 44h, 4B4h, 0FFF689B0h, 0CAh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A7Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 0A6B0B47h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B42040Eh, 38h, 4FCh, 0FFF68A34h
dd 7Bh,	80E4100h, 0E410286h, 4303830Ch,	0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 0C0E0A6Bh, 80EC341h, 40EC641h
dd 0B41h, 38h, 538h, 0FFF68A74h, 7Bh, 80E4100h,	0E410286h
dd 4303830Ch, 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh
dd 0C0E0A6Bh, 80EC341h,	40EC641h, 0B41h, 38h, 574h, 0FFF68AB4h
dd 9Fh,	80E4100h, 0E410286h, 4303830Ch,	4002300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4304h, 18h, 5B0h, 0FFF68B18h, 53h,	300E4300h, 40E0A6Ah
dd 0B43h, 1Ch, 5CCh, 0FFF68B50h, 65h, 300E4300h, 40E0A6Ah
dd 0A6B0B47h, 0B41040Eh, 34h, 5ECh, 0FFF68B98h,	0E6h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A75h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 38h, 624h, 0FFF68C48h
dd 77h,	80E4100h, 0E410286h, 4303830Ch,	0A78300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 0C0E0A6Bh, 80EC341h, 40EC641h
dd 0B41h, 18h, 660h, 0FFF68C84h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 2Ch, 67Ch, 0FFF68CBCh, 7Fh, 80E4100h,	0E410286h
dd 4303830Ch, 5302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	48h, 6ACh, 0FFF68D0Ch, 200h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	3300E43h, 0E0A01A4h, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 20B4704h, 100E0A43h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 20h, 6F8h, 0FFF68EC0h, 7Fh
dd 80E4100h, 0E430283h,	0A540230h, 0C341080Eh, 0B43040Eh
dd 1Ch,	71Ch, 0FFF68F1Ch, 8Fh, 300E4300h, 40E0A76h, 0A6B0B47h
dd 0B41040Eh, 54h, 73Ch, 0FFF68F8Ch, 0BBh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A6002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4504h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	54h, 794h, 0FFF68FF0h, 0C7h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A6C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4504h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	54h, 7ECh, 0FFF69060h, 0BBh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A6002h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 18h, 844h, 0FFF690C4h
dd 63h,	300E4300h, 40E0A7Bh, 0B42h, 18h, 860h, 0FFF6910Ch
dd 63h,	300E4300h, 40E0A7Bh, 0B42h, 54h, 87Ch, 0FFF69154h
dd 0FFh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 54h, 8D4h, 0FFF691FCh, 107h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A9402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 54h, 92Ch, 0FFF692ACh, 0FFh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 18h, 984h, 0FFF69354h, 51h
dd 300E4300h, 40E0A65h,	0B44h, 18h, 9A0h, 0FFF6938Ch, 51h
dd 300E4300h, 40E0A66h,	0B43h, 44h, 9BCh, 0FFF693C4h, 0A4h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A66h, 0C0EC341h, 80EC641h, 40EC741h, 0A670B41h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 20h
dd 0A04h, 0FFF69420h, 87h, 80E4100h, 0E430283h,	0A5E0230h
dd 0C341080Eh, 0B41040Eh, 18h, 0A28h, 0FFF69484h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 18h, 0A44h, 0FFF694BCh
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 0A60h,	0FFF694F4h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 0A7Ch,	0FFF6952Ch
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 0A98h,	0FFF69564h
dd 95h,	300E4300h, 0E0A5102h, 0B4404h, 40h, 0AB4h, 0FFF695E0h
dd 1E3h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 1CE0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 18h, 0AF8h, 0FFF69780h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 18h, 0B14h, 0FFF697B8h
dd 61h,	300E4300h, 40E0A73h, 0B42h, 18h, 0B30h,	0FFF69800h
dd 34h,	200E4300h, 40E0A6Bh, 0B41h, 18h, 0B4Ch,	0FFF69818h
dd 35h,	200E4300h, 40E0A6Ch, 0B41h, 18h, 0B68h,	0FFF69834h
dd 33h,	200E4300h, 40E0A6Ah, 0B41h, 7Ch, 0B84h,	0FFF6984Ch
dd 12Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A7802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0E0A780Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 6A0B4804h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 40Eh, 7Ch, 0C04h, 0FFF698F8h
dd 137h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0E0A780Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 6A0B4804h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 40Eh, 40h, 0C84h, 0FFF699B0h
dd 1BBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4605h, 1770303h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 28h, 0CC8h, 0FFF69B28h, 4Fh
dd 80E4100h, 0E410286h,	4303830Ch, 0A7E300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 40h, 0CF4h, 0FFF69B4Ch, 46Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4605h, 2EF0303h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 34h, 0D38h, 0FFF69F74h, 89h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 6A300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 18h
dd 0D70h, 0FFF69FC8h, 51h, 300E4300h, 40E0A66h,	0B43h
dd 20h,	0D8Ch, 0FFF6A000h, 103h, 80E4100h, 0E430283h, 0AB70230h
dd 0C341080Eh, 0B44040Eh, 18h, 0DB0h, 0FFF6A0E0h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 18h, 0DCCh, 0FFF6A118h
dd 54h,	300E4300h, 40E0A66h, 0B43h, 1Ch, 0DE8h,	0FFF6A150h
dd 67h,	300E4300h, 40E0A6Ah, 0A6D0B47h,	0B41040Eh, 1Ch
dd 0E08h, 0FFF6A198h, 93h, 300E4300h, 40E0A76h,	0A6D0B47h
dd 0B43040Eh, 68h, 0E28h, 0FFF6A20Ch, 123h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A6C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 7B0B4504h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0A59020Bh, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 3Ch, 0E94h, 0FFF6A2C4h, 92h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A7D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	0ED4h, 0FFF6A318h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 40h,	0EF0h, 0FFF6A350h, 0A15h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 900E4305h, 7C20301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	18h, 0F34h, 0FFF6AD24h,	34h, 200E4300h,	40E0A6Bh
dd 0B41h, 1Ch, 0F50h, 0FFF6AD3Ch, 93h, 300E4300h, 40E0A76h
dd 0A6D0B47h, 0B43040Eh, 18h, 0F70h, 0FFF6ADB0h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 34h, 0F8Ch,	0FFF6ADE8h, 85h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A50h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 34h, 0FC4h, 0FFF6AE38h
dd 0B5h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A60h, 0C0EC341h, 80EC641h, 40EC741h, 0B43h, 20h
dd 0FFCh, 0FFF6AEB8h, 0B7h
dd 80E4100h, 0E430283h,	0A640230h, 0C341080Eh, 0B43040Eh
dd 20h,	1020h, 0FFF6AF4Ch, 0B7h, 80E4100h, 0E430283h, 0A640230h
dd 0C341080Eh, 0B43040Eh, 20h, 1044h, 0FFF6AFE0h, 0B7h
dd 80E4100h, 0E430283h,	0A640230h, 0C341080Eh, 0B43040Eh
dd 18h,	1068h, 0FFF6B074h, 65h,	300E4300h, 40E0A7Bh, 0B42h
dd 18h,	1084h, 0FFF6B0C0h, 3Fh,	300E4300h, 40E0A76h, 0B41h
dd 2Ch,	10A0h, 0FFF6B0E4h, 0F7h, 80E4100h, 0E410286h, 4303830Ch
dd 8402300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 2Ch
dd 10D0h, 0FFF6B1ACh, 0F7h, 80E4100h, 0E410286h, 4303830Ch
dd 8402300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 2Ch
dd 1100h, 0FFF6B274h, 0F7h, 80E4100h, 0E410286h, 4303830Ch
dd 8402300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 18h
dd 1130h, 0FFF6B33Ch, 91h, 300E4300h, 0E0A4702h, 0B4204h
dd 48h,	114Ch, 0FFF6B3B4h, 192h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0AA1h, 0C0EC341h, 80EC641h
dd 40EC741h, 0D9020B42h, 41100E0Ah, 410C0EC3h, 41080EC6h
dd 45040EC7h, 0Bh, 80h,	1198h, 0FFF6B4FCh, 18Dh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A9202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4304h, 140E0A4Eh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0A6B0B46h,	0C341140Eh, 0C641100Eh,	0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 0E0A5302h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 20h, 121Ch, 0FFF6B608h
dd 42h,	80E4100h, 0E430283h, 0E0A7730h,	0EC34108h, 0B4104h
dd 28h,	1240h, 0FFF6B628h, 0C3h, 80E4100h, 0E410286h, 4303830Ch
dd 0A71400Eh, 0C3410C0Eh, 0C641080Eh, 0B44040Eh, 20h, 126Ch
dd 0FFF6B6C0h, 63h, 80E4100h, 0E430283h, 0E0A7830h, 0EC34108h
dd 0B4304h, 34h, 1290h,	0FFF6B700h, 0FBh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A8Dh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B42h, 68h, 12C8h, 0FFF6B7C4h, 11Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A8E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6C0B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0E0A670Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 54h, 1334h, 0FFF6B874h
dd 1CCh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0A8Fh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 54h, 138Ch, 0FFF6B9E8h, 1D8h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AC802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0AEFh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 44h, 13E4h, 0FFF6BB68h, 80h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A5Dh, 0C0EC341h, 80EC641h, 40EC741h, 0A4F0B42h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 54h
dd 142Ch, 0FFF6BBA0h, 0A7h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5D02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 710B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 38h
dd 1484h, 0FFF6BBF0h, 7Bh, 80E4100h, 0E410286h,	4303830Ch
dd 5802300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h, 0E0A4F0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 54h, 14C0h, 0FFF6BC30h
dd 91h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A6902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 4F0B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 3Ch, 1518h, 0FFF6BC6Ch, 147h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A012C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 2Ch, 1558h, 0FFF6BD74h, 0B7h
dd 80E4100h, 0E430283h,	0A5B0230h, 0C341080Eh, 0B44040Eh
dd 80E0A6Dh, 40EC341h, 0B42h, 18h, 1588h, 0FFF6BDFCh, 2Ch
dd 200E4300h, 40E0A63h,	0B41h, 18h, 15A4h, 0FFF6BE0Ch
dd 2Eh,	200E4300h, 40E0A61h, 0B45h, 20h, 15C0h,	0FFF6BE20h
dd 53h,	80E4100h, 0E430283h, 0A480230h,	0C341080Eh, 0B41040Eh
dd 20h,	15E4h, 0FFF6BE50h, 9Ah,	80E4100h, 0E430283h, 0E0A7730h
dd 0EC34108h, 0B4404h, 20h, 1608h, 0FFF6BEC8h, 87h, 80E4100h
dd 0E430283h, 0A5D0230h, 0C341080Eh, 0B42040Eh,	54h, 162Ch
dd 0FFF6BF2Ch, 1DAh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0A018B03h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 140E0A75h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B41h, 44h, 1684h, 0FFF6C0B0h
dd 14Bh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0AA4h, 0C0EC341h, 80EC641h, 40EC741h, 0A6B0B47h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh, 18h
dd 16CCh, 0FFF6C1B4h, 28h, 200E4300h, 40E0A5Fh,	0B41h
dd 34h,	16E8h, 0FFF6C1C0h, 6Dh,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A5Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 3Ch, 1720h,	0FFF6C1F8h, 10Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AB102h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 34h, 1760h,	0FFF6C2C4h, 1CFh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A42h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 2Ch, 1798h, 0FFF6C45Ch, 93h
dd 80E4100h, 0E410286h,	4303830Ch, 6E02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 18h, 17C8h, 0FFF6C4C0h, 2Ch
dd 200E4300h, 40E0A63h,	0B41h, 18h, 17E4h, 0FFF6C4D0h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 18h, 1800h,	0FFF6C4DCh
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 3Ch, 181Ch,	0FFF6C4E8h
dd 166Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A0FDC03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 185Ch, 0FFF6DB14h, 8Ah
dd 300E4300h, 0E0A6802h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF6DB6Ch
dd 46h,	80E4100h, 0E430283h, 0E0A7730h,	0EC34108h, 0B4504h
dd 3Ch,	40h, 0FFF6DB90h, 0CDh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5A02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 20h, 80h
dd 0FFF6DC20h, 4Ch, 80E4100h, 0E430283h, 0A410230h, 0C341080Eh
dd 0B41040Eh, 20h, 0A4h, 0FFF6DC48h, 4Ch, 80E4100h, 0E430283h
dd 0A410230h, 0C341080Eh, 0B41040Eh, 2Ch, 0C8h,	0FFF6DC70h
dd 5Ah,	80E4100h, 0E410286h, 4303830Ch,	4D02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 0F8h, 0FFF6DC9Ch, 4Ch
dd 80E4100h, 0E430283h,	0A410230h, 0C341080Eh, 0B41040Eh
dd 2Ch,	11Ch, 0FFF6DCC4h, 0C5h,	80E4100h, 0E430283h, 0A480230h
dd 0C341080Eh, 0B47040Eh, 0E0A5702h, 0EC34108h,	0B4404h
dd 18h,	14Ch, 0FFF6DD5Ch, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 18h,	168h, 0FFF6DDB8h, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 2Ch,	184h, 0FFF6DE14h, 8Bh, 80E4100h, 0E410286h, 4303830Ch
dd 4702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 18h
dd 1B4h, 0FFF6DE70h, 77h, 300E4300h, 0E0A4802h,	0B4104h
dd 2Ch,	1D0h, 0FFF6DECCh, 0A3h,	80E4100h, 0E410286h, 4303830Ch
dd 4702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 54h
dd 200h, 0FFF6DF40h, 10Eh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5F02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4604h, 140E0A45h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B43h, 18h
dd 258h, 0FFF6DFF8h, 51h, 300E4300h, 40E0A65h, 0B44h, 18h
dd 274h, 0FFF6E030h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 290h, 0FFF6E068h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 2ACh, 0FFF6E0A0h, 79h, 300E4300h, 0E0A4602h,	0B4304h
dd 18h,	2C8h, 0FFF6E100h, 80h, 300E4300h, 0E0A4902h, 0B4404h
dd 18h,	2E4h, 0FFF6E164h, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 18h,	300h, 0FFF6E1C4h, 89h, 300E4300h, 0E0A4602h, 0B4304h
dd 18h,	31Ch, 0FFF6E234h, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 18h,	338h, 0FFF6E294h, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 3Ch,	354h, 0FFF6E2F4h, 0B9h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 2Ch, 394h
dd 0FFF6E370h, 7Ah, 80E4100h, 0E430283h, 0E0A7B30h, 0EC34108h
dd 6B0B4804h, 41080E0Ah, 41040EC3h, 0Bh, 18h, 3C4h, 0FFF6E3BCh
dd 51h,	300E4300h, 40E0A65h, 0B44h, 18h, 3E0h, 0FFF6E3F4h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 3FCh, 0FFF6E42Ch
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 418h, 0FFF6E464h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 434h, 0FFF6E49Ch
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF6E4BCh
dd 3Bh,	80E4100h, 0E430283h, 0E0A6C30h,	0EC34108h, 0B4504h
dd 34h,	40h, 0FFF6E4D4h, 176h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A88h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 18h, 78h, 0FFF6E614h, 38h, 300E4300h
dd 40E0A6Fh, 0B41h, 20h, 94h, 0FFF6E630h, 62h, 80E4100h
dd 0E430283h, 0A570230h, 0C341080Eh, 0B41040Eh,	20h, 0B8h
dd 0FFF6E670h, 5Bh, 80E4100h, 0E430283h, 0E0A6C30h, 0EC34108h
dd 0B4304h, 34h, 0DCh, 0FFF6E6A8h, 55h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A46h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 20h, 114h, 0FFF6E6C8h, 3Dh
dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4104h
dd 20h,	138h, 0FFF6E6E4h, 3Dh, 80E4100h, 0E430283h, 0E0A7230h
dd 0EC34108h, 0B4104h, 18h, 15Ch, 0FFF6E700h, 30h, 200E4300h
dd 40E0A63h, 0B45h, 20h, 178h, 0FFF6E714h, 5Eh,	80E4100h
dd 0E430283h, 0E0A7E40h, 0EC34108h, 0B4104h, 44h, 19Ch
dd 0FFF6E750h, 0A4h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A61h,	0C0EC341h, 80EC641h, 40EC741h
dd 0A670B46h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh
dd 20h,	1E4h, 0FFF6E7ACh, 55h, 80E4100h, 0E430283h, 0E0A6230h
dd 0EC34108h, 0B4104h, 18h, 208h, 0FFF6E7E0h, 44h, 300E4300h
dd 40E0A7Bh, 0B41h, 1Ch, 224h, 0FFF6E808h, 3Eh,	200E4300h
dd 40E0A64h, 0A4F0B41h,	0B42040Eh, 1Ch,	244h, 0FFF6E828h
dd 41h,	200E4300h, 40E0A64h, 0A4F0B41h,	0B45040Eh, 18h
dd 264h, 0FFF6E84Ch, 3Ch, 300E4300h, 40E0A73h, 0B41h, 34h
dd 280h, 0FFF6E86Ch, 0E6h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0AD7h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 18h, 2B8h, 0FFF6E91Ch, 2Ch,	200E4300h
dd 40E0A63h, 0B41h, 18h, 2D4h, 0FFF6E92Ch, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 18h, 2F0h, 0FFF6E938h, 32h,	200E4300h
dd 40E0A65h, 0B41h, 18h, 30Ch, 0FFF6E950h, 59h,	300E4300h
dd 0E0A4A02h, 0B4304h, 18h, 328h, 0FFF6E990h, 2Bh, 200E4300h
dd 40E0A62h, 0B41h, 18h, 344h, 0FFF6E9A0h, 2Fh,	200E4300h
dd 40E0A66h, 0B41h, 18h, 360h, 0FFF6E9B4h, 3Eh,	300E4300h
dd 40E0A75h, 0B41h, 20h, 37Ch, 0FFF6E9D8h, 5Dh,	80E4100h
dd 0E430283h, 0A520230h, 0C341080Eh, 0B41040Eh,	18h, 3A0h
dd 0FFF6EA14h, 46h, 300E4300h, 40E0A7Dh, 0B41h,	18h, 3BCh
dd 0FFF6EA40h, 33h, 200E4300h, 40E0A66h, 0B41h,	18h, 3D8h
dd 0FFF6EA58h, 33h, 200E4300h, 40E0A66h, 0B41h,	18h, 3F4h
dd 0FFF6EA70h, 33h, 200E4300h, 40E0A66h, 0B41h,	18h, 410h
dd 0FFF6EA88h, 33h, 200E4300h, 40E0A66h, 0B41h,	18h, 42Ch
dd 0FFF6EAA0h, 51h, 300E4300h, 40E0A66h, 0B43h,	18h, 448h
dd 0FFF6EAD8h, 53h, 300E4300h, 40E0A6Ah, 0B43h,	18h, 464h
dd 0FFF6EB10h, 6Bh, 300E4300h, 0E0A4102h, 0B4404h, 18h
dd 480h, 0FFF6EB60h, 30h, 200E4300h, 40E0A63h, 0B45h, 54h
dd 49Ch, 0FFF6EB74h, 191h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A014E03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 140E0A6Bh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 68h
dd 4F4h, 0FFF6ECB0h, 179h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AE102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h, 140E0A47h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A6B0B45h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 68h,	560h, 0FFF6EDC0h, 145h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AAD02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4804h, 140E0A47h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A6B0B45h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 68h,	5CCh, 0FFF6EE9Ch, 169h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AD302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4604h, 140E0A47h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A6B0B45h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 68h,	638h, 0FFF6EF9Ch, 189h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AD202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4704h, 140E0A67h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0A6B0B45h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 3Ch,	6A4h, 0FFF6F0BCh, 0E1h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7D02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 20h, 6E4h
dd 0FFF6F160h, 52h, 80E4100h, 0E430283h, 0A430230h, 0C341080Eh
dd 0B45040Eh, 3Ch, 708h, 0FFF6F190h, 101h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AAE02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h
dd 20h,	748h, 0FFF6F254h, 0B2h,	80E4100h, 0E430283h, 0AA70230h
dd 0C341080Eh, 0B41040Eh, 38h, 76Ch, 0FFF6F2E4h, 0A3h
dd 80E4100h, 0E410286h,	4303830Ch, 6002300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A6F0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 18h, 7A8h, 0FFF6F34Ch, 51h,	300E4300h, 40E0A66h
dd 0B43h, 18h, 7C4h, 0FFF6F384h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 7E0h, 0FFF6F3BCh, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 7FCh, 0FFF6F3F4h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 18h, 818h, 0FFF6F42Ch, 53h
dd 300E4300h, 40E0A6Ah,	0B43h, 2Ch, 834h, 0FFF6F464h, 70h
dd 80E4100h, 0E410286h,	4303830Ch, 6302300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 864h, 0FFF6F4A4h, 47h
dd 80E4100h, 0E430283h,	0E0A7830h, 0EC34108h, 0B4504h
dd 18h,	888h, 0FFF6F4C8h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	8A4h, 0FFF6F500h, 38h, 200E4300h, 40E0A6Bh, 0B45h
dd 18h,	8C0h, 0FFF6F51Ch, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 20h,	8DCh, 0FFF6F554h, 47h, 80E4100h, 0E430283h, 0E0A7830h
dd 0EC34108h, 0B4504h, 44h, 900h, 0FFF6F578h, 0FDh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0AA7h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A730B48h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B42040Eh, 44h, 948h, 0FFF6F630h
dd 158h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 77300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 44040EC7h, 0AAF020Bh
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 18h
dd 990h, 0FFF6F740h, 65h, 300E4300h, 40E0A7Ah, 0B43h, 18h
dd 9ACh, 0FFF6F78Ch, 69h, 300E4300h, 40E0A69h, 0B44h, 18h
dd 9C8h, 0FFF6F7DCh, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 9E4h, 0FFF6F814h, 5Dh, 300E4300h, 40E0A6Fh, 0B42h, 34h
dd 0A00h, 0FFF6F858h, 0D5h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0AA0h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 2Ch, 0A38h,	0FFF6F8F8h, 101h, 80E4100h
dd 0E410286h, 4303830Ch, 0B402300Eh, 410C0E0Ah,	41080EC3h
dd 41040EC6h, 0Bh, 2Ch,	0A68h, 0FFF6F9CCh, 0E4h, 80E4100h
dd 0E410286h, 4303830Ch, 6002300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 34h,	0A98h, 0FFF6FA80h, 138h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A7Dh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 20h, 0AD0h, 0FFF6FB80h
dd 0B5h, 80E4100h, 0E430283h, 0A500240h, 0C341080Eh, 0B43040Eh
dd 34h,	0AF4h, 0FFF6FC14h, 0E4h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A55h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 18h, 0B2Ch,	0FFF6FCC0h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 0B48h,	0FFF6FCF8h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 0B64h,	0FFF6FD30h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 0B80h,	0FFF6FD68h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 20h, 0B9Ch,	0FFF6FDA0h, 6Dh, 80E4100h
dd 0E430283h, 0E0A6930h, 0EC34108h, 0B4204h, 20h, 0BC0h
dd 0FFF6FDECh, 79h, 80E4100h, 0E430283h, 0E0A6930h, 0EC34108h
dd 0B4204h, 18h, 0BE4h,	0FFF6FE44h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 3Ch, 0C00h, 0FFF6FE7Ch, 2FBh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A017003h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 48h,	0C40h, 0FFF70138h, 108h, 80E4100h, 0E410286h, 4303830Ch
dd 5002300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h, 0E0A6B0Bh
dd 0EC3410Ch, 0EC64108h, 20B4104h, 0C0E0A6Dh, 80EC341h
dd 40EC641h, 0B45h, 18h, 0C8Ch,	0FFF701F4h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 0CA8h,	0FFF7022Ch, 53h, 300E4300h
dd 40E0A6Ah, 0B43h, 18h, 0CC4h,	0FFF70264h, 5Dh, 300E4300h
dd 40E0A6Dh, 0B44h, 18h, 0CE0h,	0FFF702A8h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 44h, 0CFCh,	0FFF702E0h, 70h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2200E43h, 100E0A4Ah
dd 0C0EC341h, 80EC641h,	40EC741h, 0A4F0B45h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 44h, 0D44h, 0FFF70308h
dd 70h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2200E43h
dd 100E0A4Ah, 0C0EC341h, 80EC641h, 40EC741h, 0A4F0B45h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 1Ch
dd 0D8Ch, 0FFF70330h, 45h, 200E4300h, 40E0A6Ah,	0A4F0B43h
dd 0B41040Eh, 2Ch, 0DACh, 0FFF70358h, 0D3h, 80E4100h, 0E430283h
dd 0A560230h, 0C341080Eh, 0B45040Eh, 80E0A6Bh, 40EC341h
dd 0B44h, 18h, 0DDCh, 0FFF703FCh, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 0DF8h, 0FFF70434h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 0E14h, 0FFF7046Ch, 54h, 300E4300h, 40E0A65h
dd 0B44h, 3Ch, 0E30h, 0FFF704A4h, 506h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A038603h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 18h,	0E70h, 0FFF7096Ch, 34h,	200E4300h, 40E0A6Bh, 0B41h
dd 34h,	0E8Ch, 0FFF70984h, 0CFh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A77h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 54h, 0EC4h,	0FFF70A1Ch, 1F5h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A7902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 710B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 3Ch,	0F1Ch, 0FFF70BBCh, 10Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 140E0A76h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B43h, 1Ch, 0F5Ch, 0FFF70C8Ch, 75h, 300E4300h, 40E0A69h
dd 0A7B0B44h, 0B45040Eh, 2Ch, 0F7Ch, 0FFF70CE4h, 0A1h
dd 80E4100h, 0E410286h,	4303830Ch, 7402300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 0FACh, 0FFF70D58h, 96h
dd 80E4100h, 0E410286h,	4303830Ch, 7802300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 0FDCh, 0FFF70DC0h, 9Eh
dd 80E4100h, 0E430283h,	0A470230h, 0C341080Eh, 0B44040Eh
dd 34h,	1000h, 0FFF70E3Ch
dd 0D0h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A9Eh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 1038h, 0FFF70ED4h, 1FAh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A56h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 6Ch, 1070h,	0FFF71098h, 4BBh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A6302h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 30B4604h, 0E0A0351h,	0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 570B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 3Ch, 10E0h, 0FFF714E4h, 50Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 1120h, 0FFF719B0h, 112h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A4E02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 68h, 1160h,	0FFF71A84h, 268h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A5D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4804h
dd 0E0A0107h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 41140EE3h,	41100EC3h, 410C0EC6h, 41080EC7h
dd 40EC5h, 6Ch,	11CCh, 0FFF71C80h, 4B3h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A7302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4604h
dd 0E0A0232h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4604h, 140E0A4Bh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 68h, 123Ch,	0FFF720C4h, 10Fh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A8A02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 670B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 45040EC5h, 0E42020Bh, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 4, 2Ch, 12A8h, 0FFF72168h, 10Ah, 80E4100h
dd 0E430283h, 0A7F0230h, 0C341080Eh, 0B44040Eh,	80E0A53h
dd 40EC341h, 0B48h, 3Ch, 12D8h,	0FFF72244h, 1B6h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A013403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 68h, 1318h, 0FFF723BCh, 10Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A8A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0E42020Bh, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 4, 54h, 1384h, 0FFF72460h, 2B2h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A01B103h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B48040Eh
dd 0E0AE402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 54h, 13DCh,	0FFF726BCh, 1BDh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AE902h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4404h
dd 140E0A87h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 2Ch, 1434h, 0FFF72824h, 10Ah,	80E4100h, 0E430283h
dd 0A7F0230h, 0C341080Eh, 0B44040Eh, 80E0A53h, 40EC341h
dd 0B48h, 68h, 1464h, 0FFF72900h, 10Fh,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A8A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0E42020Bh, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 4, 3Ch, 14D0h, 0FFF729A4h, 0EFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A8002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 54h,	1510h, 0FFF72A54h, 798h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A026703h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B46040Eh, 0A04F303h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 2Ch,	1568h, 0FFF73194h, 10Ah, 80E4100h, 0E430283h, 0A7F0230h
dd 0C341080Eh, 0B44040Eh, 80E0A53h, 40EC341h, 0B48h, 18h
dd 1598h, 0FFF73270h, 79h, 300E4300h, 0E0A4F02h, 0B4204h
dd 18h,	15B4h, 0FFF732D0h, 45h,	200E4300h, 40E0A6Eh, 0B43h
dd 18h,	15D0h, 0FFF732FCh, 35h,	200E4300h, 40E0A66h, 0B43h
dd 18h,	15ECh, 0FFF73318h, 0AFh, 300E4300h, 0E0A6002h
dd 0B4104h, 18h, 1608h,	0FFF733ACh, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 1624h, 0FFF733B8h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 2Ch, 1640h, 0FFF733C4h, 50Dh,	80E4100h, 0E410286h
dd 4303830Ch, 3400Eh, 0C0E0A05h, 80EC341h, 40EC641h, 0B41h
dd 20h,	1670h, 0FFF738A4h, 0F5h, 80E4100h, 0E430283h, 0ACD0230h
dd 0C341080Eh, 0B42040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF73960h
dd 30h,	200E4300h, 40E0A67h, 0B41h, 20h, 38h, 0FFF73974h
dd 84h,	80E4100h, 0E430283h, 0A450230h,	0C341080Eh, 0B42040Eh
dd 2Ch,	5Ch, 0FFF739D4h, 6Bh, 80E4100h,	0E410286h, 4303830Ch
dd 5E02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 2Ch
dd 8Ch,	0FFF73A10h, 7Fh, 80E4100h, 0E410286h, 4303830Ch
dd 5102300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 3Ch
dd 0BCh, 0FFF73A60h, 3CAh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AFB02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 2Ch, 0FCh
dd 0FFF73DECh, 78h, 80E4100h, 0E410286h, 4303830Ch, 5602300Eh
dd 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 20h, 12Ch, 0FFF73E34h
dd 0F7h, 80E4100h, 0E430283h, 0E0A7930h, 0EC34108h, 0B4204h
dd 34h,	150h, 0FFF73F08h, 88h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A43h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 3Ch, 188h, 0FFF73F58h, 1FCh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A9802h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 18h, 1C8h, 0FFF74114h, 57h,	400E4300h, 40E0A66h
dd 0B43h, 18h, 1E4h, 0FFF74150h, 51h, 300E4300h, 40E0A65h
dd 0B44h, 18h, 200h, 0FFF74188h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 34h, 21Ch, 0FFF741C0h, 0B6h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A78h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 28h, 254h, 0FFF74240h, 0D0h
dd 80E4100h, 0E410286h,	4303830Ch, 0A77300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B42040Eh, 54h, 280h, 0FFF742E4h, 202h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A016C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 0E0A6F02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 44h, 2D8h, 0FFF74490h
dd 0BCh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Bh, 0C0EC341h, 80EC641h, 40EC741h, 0A730B48h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 18h
dd 320h, 0FFF74504h, 51h, 300E4300h, 40E0A66h, 0B43h, 38h
dd 33Ch, 0FFF7453Ch, 85h, 80E4100h, 0E410286h, 4303830Ch
dd 4202300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h, 0E0A6D0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 1Ch, 378h, 0FFF74588h
dd 4Bh,	200E4300h, 40E0A69h, 0A510B48h,	0B41040Eh, 20h
dd 398h, 0FFF745B4h, 0A1h, 80E4100h, 0E430283h,	0A630230h
dd 0C341080Eh, 0B44040Eh, 18h, 3BCh, 0FFF74634h, 37h, 300E4300h
dd 40E0A6Eh, 0B41h, 3Ch, 3D8h, 0FFF74650h, 1B4h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A6502h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 34h, 418h, 0FFF747C4h, 149h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	2400E43h, 100E0A6Ch, 0C0EC641h
dd 80EC741h, 40EC541h, 0B43h, 80h, 450h, 0FFF748D8h, 199h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A7F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4604h,	140E0A7Ch, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A670B44h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 0E0A4702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 3Ch, 4D4h
dd 0FFF749F0h, 221h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0AFB02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4204h, 2Ch, 514h, 0FFF74BD4h
dd 100h, 80E4100h, 0E410286h, 4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 2Ch, 544h, 0FFF74CA4h, 0B1h
dd 80E4100h, 0E410286h,	4303830Ch, 4202300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 18h, 574h, 0FFF74D28h, 65h
dd 300E4300h, 40E0A7Bh,	0B42h, 3Ch, 590h, 0FFF74D74h, 2B0h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A010103h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 2Ch, 5D0h, 0FFF74FE4h, 0F8h
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 2Ch, 600h, 0FFF750ACh, 0B9h
dd 80E4100h, 0E410286h,	4303830Ch, 8902300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 18h, 630h, 0FFF75138h, 30h
dd 200E4300h, 40E0A63h,	0B45h, 18h, 64Ch, 0FFF7514Ch, 30h
dd 200E4300h, 40E0A63h,	0B45h, 20h, 668h, 0FFF75160h, 42h
dd 80E4100h, 0E430283h,	0E0A7320h, 0EC34108h, 0B4504h
dd 18h,	68Ch, 0FFF75180h, 34h, 300E4300h, 40E0A6Bh, 0B41h
dd 3Ch,	6A8h, 0FFF75198h, 0C5h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AB402h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 6E8h
dd 0FFF75220h, 211h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0A016003h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h, 728h, 0FFF753F4h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 744h, 0FFF75404h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 20h, 760h, 0FFF75410h
dd 67h,	80E4100h, 0E430283h, 0E0A7C30h,	0EC34108h, 0B4304h
dd 18h,	784h, 0FFF75454h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 18h,	7A0h, 0FFF75460h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 18h,	7BCh, 0FFF7546Ch, 115h,	400E4300h, 0E0AE802h, 0B4104h
dd 18h,	7D8h, 0FFF75568h, 91h, 300E4300h, 0E0A8802h, 0B4104h
dd 3Ch,	7F4h, 0FFF755E0h, 0F3h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0AA802h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFF7567Ch
dd 49h,	200E4300h, 40E0A6Ch, 0A4F0B45h,	0B41040Eh, 18h
dd 3Ch,	0FFF756A8h, 23h, 200E4300h, 40E0A5Ah, 0B41h, 18h
dd 58h,	0FFF756B0h, 179h, 300E4300h, 40E0A7Ch, 0B41h, 20h
dd 74h,	0FFF75810h, 4Ch, 80E4100h, 0E430283h, 0A410230h
dd 0C341080Eh, 0B41040Eh, 20h, 98h, 0FFF75838h,	99h, 80E4100h
dd 0E430283h, 0A8A0230h, 0C341080Eh, 0B41040Eh,	40h, 0BCh
dd 0FFF758B0h, 146h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 800E4305h, 1350301h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 34h, 100h, 0FFF759B4h
dd 55h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A42h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 138h, 0FFF759D4h, 4Bh, 300E4300h, 40E0A62h, 0B43h, 20h
dd 154h, 0FFF75A04h, 5Fh, 80E4100h, 0E430283h, 0E0A7330h
dd 0EC34108h, 0B4404h, 20h, 178h, 0FFF75A40h, 7Dh, 80E4100h
dd 0E430283h, 0A580230h, 0C341080Eh, 0B43040Eh,	20h, 19Ch
dd 0FFF75A9Ch, 0D9h, 80E4100h, 0E430283h, 0A9E0230h, 0C341080Eh
dd 0B41040Eh, 18h, 1C0h, 0FFF75B54h, 99h, 300E4300h, 40E0A6Dh
dd 0B44h, 1Ch, 1DCh, 0FFF75BD4h, 0AFh, 300E4300h, 40E0A74h
dd 0A6D0B45h, 0B43040Eh, 2Ch, 1FCh, 0FFF75C64h,	50h, 80E4100h
dd 0E410286h, 4303830Ch, 4302300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 28h,	22Ch, 0FFF75C84h, 50h, 80E4100h
dd 0E410286h, 4303830Ch, 0A7F300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B45040Eh, 38h, 258h, 0FFF75CA8h, 0DBh, 80E4100h, 0E410286h
dd 4303830Ch, 7902300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h
dd 0A4B020Bh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 48h, 294h
dd 0FFF75D48h, 0B7h, 80E4100h, 0E410286h, 4303830Ch, 5402300Eh
dd 410C0E0Ah, 41080EC3h, 45040EC6h, 0E0A5B0Bh, 0EC3410Ch
dd 0EC64108h, 6B0B4704h, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	2Ch, 2E0h, 0FFF75DB4h, 0E6h, 80E4100h, 0E430283h
dd 0A5D0230h, 0C341080Eh, 0B42040Eh, 0E0A7A02h,	0EC34108h
dd 0B4204h, 1Ch, 310h, 0FFF75E6Ch, 0AFh, 300E4300h, 40E0A76h
dd 0A6D0B43h, 0B43040Eh, 1Ch, 330h, 0FFF75EFCh,	0AFh, 300E4300h
dd 40E0A76h, 0A6D0B43h,	0B43040Eh, 2Ch,	350h, 0FFF75F8Ch
dd 0E3h, 80E4100h, 0E430283h, 0A480230h, 0C341080Eh, 0B43040Eh
dd 80E0A6Dh, 40EC341h, 0B42h, 1Ch, 380h, 0FFF76040h, 0AFh
dd 300E4300h, 40E0A74h,	0A6D0B45h, 0B43040Eh, 1Ch, 3A0h
dd 0FFF760D0h, 0AFh, 300E4300h,	40E0A74h, 0A6D0B45h, 0B43040Eh
dd 1Ch,	3C0h, 0FFF76160h, 0AFh,	300E4300h, 40E0A74h, 0A6D0B45h
dd 0B43040Eh, 1Ch, 3E0h, 0FFF761F0h, 0AFh, 300E4300h, 40E0A74h
dd 0A6D0B45h, 0B43040Eh, 2Ch, 400h, 0FFF76280h,	0E3h, 80E4100h
dd 0E430283h, 0A480230h, 0C341080Eh, 0B43040Eh,	80E0A6Dh
dd 40EC341h, 0B42h, 40h, 430h, 0FFF76334h, 1D0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 1A30301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 42040EC5h, 0Bh, 38h,	474h, 0FFF764C0h, 0CBh,	80E4100h
dd 0E410286h, 4303830Ch, 4802300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0E0A6D0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 3Ch,	4B0h, 0FFF76550h, 262h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A014F03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 18h
dd 4F0h, 0FFF76774h, 37h, 300E4300h, 40E0A6Eh, 0B41h, 3Ch
dd 50Ch, 0FFF76790h, 13Dh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AC502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 2Ch, 54Ch
dd 0FFF76890h, 0BDh, 80E4100h, 0E410286h, 4303830Ch, 8E02300Eh
dd 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 20h, 57Ch, 0FFF76920h
dd 81h,	80E4100h, 0E430283h, 0A550240h,	0C341080Eh, 0B42040Eh
dd 2Ch,	5A0h, 0FFF76980h, 0CDh,	80E4100h, 0E410286h, 4303830Ch
dd 6502400Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 20h
dd 5D0h, 0FFF76A20h, 74h, 80E4100h, 0E430283h, 0A690230h
dd 0C341080Eh, 0B41040Eh, 1Ch, 5F4h, 0FFF76A70h, 0AFh
dd 300E4300h, 40E0A76h,	0A6D0B43h, 0B43040Eh, 1Ch, 614h
dd 0FFF76B00h, 0AFh, 300E4300h,	40E0A76h, 0A6D0B43h, 0B43040Eh
dd 34h,	634h, 0FFF76B90h, 120h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A79h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 2Ch, 66Ch, 0FFF76C78h, 0D8h, 80E4100h
dd 0E410286h, 4303830Ch, 4202400Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0Bh, 1Ch,	69Ch, 0FFF76D20h, 83h, 300E4300h
dd 40E0A6Ah, 0A6D0B43h,	0B43040Eh, 28h,	6BCh, 0FFF76D84h
dd 4Ch,	80E4100h, 0E410286h, 4303830Ch,	0A7B300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 18h, 6E8h, 0FFF76DA4h, 5Dh, 300E4300h
dd 0E0A5402h, 0B4104h, 18h, 704h, 0FFF76DE8h, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 34h, 720h, 0FFF76DF4h, 99h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Eh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 34h, 758h, 0FFF76E58h
dd 110h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A5Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 3Ch
dd 790h, 0FFF76F30h, 260h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 140E0A6Ch, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B41h, 2Ch, 7D0h, 0FFF77150h
dd 9Fh,	80E4100h, 0E430283h, 0A420230h,	0C341080Eh, 0B45040Eh
dd 80E0A6Dh, 40EC341h, 0B42h, 2Ch, 800h, 0FFF771C0h, 85h
dd 80E4100h, 0E410286h,	4303830Ch, 5502300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 2Ch, 830h, 0FFF77218h, 0C9h
dd 80E4100h, 0E410286h,	4303830Ch, 5F02300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 20h, 860h, 0FFF772B4h, 8Dh
dd 80E4100h, 0E430283h,	0E0A7F30h, 0EC34108h, 0B4404h
dd 18h,	884h, 0FFF77320h, 85h, 300E4300h, 0E0A4502h, 0B4404h
dd 3Ch,	8A0h, 0FFF7738Ch, 0F9h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AA802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 2Ch, 8E0h
dd 0FFF77448h, 68h, 80E4100h, 0E430283h, 0A450230h, 0C341080Eh
dd 0B42040Eh, 80E0A51h,	40EC341h, 0B45h, 34h, 910h, 0FFF77480h
dd 0F6h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A61h, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 34h
dd 948h, 0FFF77540h, 0C1h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2400E43h, 100E0A6Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 1Ch, 980h, 0FFF775CCh, 8Bh,	300E4300h
dd 40E0A6Dh, 0A6D0B48h,	0B43040Eh, 18h,	9A0h, 0FFF77638h
dd 85h,	300E4300h, 40E0A79h, 0B44h, 54h, 9BCh, 0FFF776A4h
dd 162h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0ACBh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B42h, 18h, 0A14h, 0FFF777B0h, 28h
dd 200E4300h, 40E0A5Fh,	0B41h, 20h, 0A30h, 0FFF777BCh
dd 98h,	80E4100h, 0E430283h, 0E0A7430h,	0EC34108h, 0B4304h
dd 20h,	0A54h, 0FFF77830h, 7Dh,	80E4100h, 0E430283h, 0A570230h
dd 0C341080Eh, 0B44040Eh, 3Ch, 0A78h, 0FFF7788Ch, 0E1h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 18h, 0AB8h, 0FFF77930h, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 20h, 0AD4h,	0FFF7793Ch, 0A1h, 80E4100h
dd 0E430283h, 0E0A7B30h, 0EC34108h, 0B4404h, 3Ch, 0AF8h
dd 0FFF779BCh, 0E1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A6E02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 0B38h, 0FFF77A60h
dd 346h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A016D03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 34h, 0B78h, 0FFF77D68h, 8Dh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A7Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 2Ch
dd 0BB0h, 0FFF77DC0h, 116h, 80E4100h, 0E410286h, 4303830Ch
dd 7502400Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 18h
dd 0BE0h, 0FFF77EA8h, 31h, 200E4300h, 40E0A64h,	0B45h
dd 18h,	0BFCh, 0FFF77EC0h, 31h,	200E4300h, 40E0A64h, 0B45h
dd 3Ch,	0C18h, 0FFF77ED8h, 3D9h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0A5E02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 0C58h
dd 0FFF78274h, 341h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0A020F03h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 18h, 0C98h, 0FFF78578h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 2Ch, 0CB4h,	0FFF78584h
dd 1E4h, 80E4100h, 0E410286h, 4303830Ch, 5C02400Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 18h, 0CE4h, 0FFF78738h, 53h
dd 300E4300h, 0E0A4A02h, 0B4104h, 40h, 0D00h, 0FFF78770h
dd 38Eh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0A00E4605h, 27D0301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 2Ch, 0D44h, 0FFF78ABCh, 0B1h
dd 80E4100h, 0E410286h,	4303830Ch, 4002400Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 28h, 0D74h, 0FFF78B40h, 48h
dd 80E4100h, 0E410286h,	4303830Ch, 0A77300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 20h, 0DA0h, 0FFF78B5Ch, 69h
dd 80E4100h, 0E430283h,	0E0A7B30h, 0EC34108h, 0B4404h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF78B8Ch
dd 51h,	300E4300h, 40E0A65h, 0B44h, 18h, 38h, 0FFF78BC4h
dd 135h, 300E4300h, 0E0AEB02h, 0B4204h,	34h, 54h, 0FFF78CE0h
dd 81h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A4Eh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 8Ch,	0FFF78D2Ch, 0F7h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A5Ah, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 20h, 0C4h, 0FFF78DECh, 0C1h, 80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B44040Eh,	18h, 0E8h
dd 0FFF78E8Ch, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 104h
dd 0FFF78E98h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 120h
dd 0FFF78EA4h, 153h, 400E4300h,	0A014A03h, 0B41040Eh, 20h
dd 13Ch, 0FFF78FDCh, 5Eh, 80E4100h, 0E430283h, 0A4F0230h
dd 0C341080Eh, 0B41040Eh, 48h, 160h, 0FFF79018h, 0F3h
dd 80E4100h, 0E410286h,	4303830Ch, 5A02200Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0E0A650Bh, 0EC3410Ch, 0EC64108h
dd 670B4504h, 410C0E0Ah, 41080EC3h, 47040EC6h, 0Bh, 2Ch
dd 1ACh, 0FFF790C0h, 0F1h, 80E4100h, 0E430283h,	0A570230h
dd 0C341080Eh, 0B44040Eh, 80E0A6Dh, 40EC341h, 0B42h, 2Ch
dd 1DCh, 0FFF79184h, 81h, 80E4100h, 0E410286h, 4303830Ch
dd 5202400Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 2Ch
dd 20Ch, 0FFF791D8h, 9Bh, 80E4100h, 0E430283h, 0E0A7B30h
dd 0EC34108h, 6D0B4804h, 41080E0Ah, 42040EC3h, 0Bh, 2Ch
dd 23Ch, 0FFF79244h, 9Fh, 80E4100h, 0E430283h, 0A430230h
dd 0C341080Eh, 0B44040Eh, 80E0A6Bh, 40EC341h, 0B44h, 2Ch
dd 26Ch, 0FFF792B4h, 0AFh, 80E4100h, 0E430283h,	0A4F0230h
dd 0C341080Eh, 0B48040Eh, 80E0A6Bh, 40EC341h, 0B44h, 48h
dd 29Ch, 0FFF79334h, 0F3h, 80E4100h, 0E410286h,	4303830Ch
dd 5B02200Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A650Bh
dd 0EC3410Ch, 0EC64108h, 670B4504h, 410C0E0Ah, 41080EC3h
dd 47040EC6h, 0Bh, 48h,	2E8h, 0FFF793DCh, 0D3h,	80E4100h
dd 0E410286h, 4303830Ch, 5302200Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0E0A650Bh, 0EC3410Ch, 0EC64108h, 670B4504h
dd 410C0E0Ah, 41080EC3h, 47040EC6h, 0Bh, 44h, 334h, 0FFF79464h
dd 0AFh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A4Fh, 0C0EC341h, 80EC641h, 40EC741h, 0A6B0B44h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh, 3Ch
dd 37Ch, 0FFF794CCh, 154h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ABE02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 3BCh
dd 0FFF795E0h, 147h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 0D00E4C05h, 0ADF0240h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 54h, 3FCh, 0FFF796E8h
dd 0F7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 780B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 54h, 454h, 0FFF79788h, 0F7h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 780B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 2Ch, 4ACh, 0FFF79828h, 0BBh
dd 80E4100h, 0E430283h,	0A430230h, 0C341080Eh, 0B44040Eh
dd 80E0A69h, 40EC341h, 0B42h, 1Ch, 4DCh, 0FFF798B4h, 0B3h
dd 300E4300h, 40E0A7Bh,	0A6E0B42h, 0B42040Eh, 2Ch, 4FCh
dd 0FFF79948h, 0BBh, 80E4100h, 0E430283h, 0A430230h, 0C341080Eh
dd 0B44040Eh, 80E0A69h,	40EC341h, 0B42h, 1Ch, 52Ch, 0FFF799D4h
dd 0B3h, 300E4300h, 40E0A7Bh, 0A6E0B42h, 0B42040Eh, 2Ch
dd 54Ch, 0FFF79A68h, 0BBh, 80E4100h, 0E430283h,	0A430230h
dd 0C341080Eh, 0B44040Eh, 80E0A69h, 40EC341h, 0B42h, 1Ch
dd 57Ch, 0FFF79AF4h, 0B3h, 300E4300h, 40E0A7Bh,	0A6E0B42h
dd 0B42040Eh, 1Ch, 59Ch, 0FFF79B88h, 0B3h, 300E4300h, 40E0A7Bh
dd 0A6E0B42h, 0B42040Eh, 48h, 5BCh, 0FFF79C1Ch,	0D3h, 80E4100h
dd 0E410286h, 4303830Ch, 5302200Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0E0A650Bh, 0EC3410Ch, 0EC64108h, 670B4504h
dd 410C0E0Ah, 41080EC3h, 47040EC6h, 0Bh, 18h, 608h, 0FFF79CA4h
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 18h, 624h, 0FFF79CDCh
dd 51h,	300E4300h, 40E0A66h, 0B43h, 40h, 640h, 0FFF79D14h
dd 3B7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 19E0301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 40h, 684h, 0FFF7A088h, 655h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 3E50301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF7A684h
dd 436h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0A042503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 3Ch, 5Ch, 0FFF7AA7Ch,	967h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0A095603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 18h, 9Ch,	0FFF7B3A4h, 31h, 300E4300h, 40E0A68h
dd 0B41h, 20h, 0B8h, 0FFF7B3BCh, 37h, 80E4100h,	0E430283h
dd 0E0A6C30h, 0EC34108h, 0B4104h, 2Ch, 0DCh, 0FFF7B3D0h
dd 0BDh, 80E4100h, 0E410286h, 4303830Ch, 0B002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 2Ch, 10Ch, 0FFF7B460h, 66h
dd 80E4100h, 0E410286h,	4303830Ch, 5902300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 13Ch, 0FFF7B498h, 117h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 17Ch, 0FFF7B570h, 117h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AF502h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 20h, 1BCh, 0FFF7B648h, 46h,	80E4100h, 0E430287h
dd 0E0A7730h, 0EC74108h, 0B4504h, 20h, 1E0h, 0FFF7B66Ch
dd 46h,	80E4100h, 0E430287h, 0E0A7730h,	0EC74108h, 0B4504h
dd 20h,	204h, 0FFF7B690h, 41h, 80E4100h, 0E430283h, 0E0A7230h
dd 0EC34108h, 0B4504h, 20h, 228h, 0FFF7B6B0h, 41h, 80E4100h
dd 0E430283h, 0E0A7230h, 0EC34108h, 0B4504h, 3Ch, 24Ch
dd 0FFF7B6D0h, 3B0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 900E4305h, 0AA30201h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 3Ch, 28Ch, 0FFF7BA40h
dd 314h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0A9002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 2CCh, 0FFF7BD14h, 75h, 80E4100h
dd 0E430283h, 0A420230h, 0C341080Eh, 0B45040Eh,	80E0A62h
dd 40EC341h, 0B41h, 18h, 2FCh, 0FFF7BD5Ch, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 18h, 318h, 0FFF7BD68h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF7BD5Ch
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 18h, 38h, 0FFF7BD68h
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 18h, 54h, 0FFF7BD74h
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 20h, 70h, 0FFF7BD80h
dd 41h,	80E4100h, 0E430283h, 0E0A7230h,	0EC34108h, 0B4504h
dd 3Ch,	94h, 0FFF7BDA0h, 0CDh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 28h, 0D4h
dd 0FFF7BE30h, 49h, 80E4100h, 0E410286h, 4303830Ch, 0A78200Eh
dd 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 28h, 100h, 0FFF7BE50h
dd 49h,	80E4100h, 0E410286h, 4303830Ch,	0A78200Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 28h, 12Ch, 0FFF7BE70h, 46h, 80E4100h
dd 0E410286h, 4303830Ch, 0A75200Eh, 0C3410C0Eh,	0C641080Eh
dd 0B45040Eh, 58h, 158h, 0FFF7BE8Ch, 0C7h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A65h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A5B0B42h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 100E0A67h, 0C0EC341h,	80EC641h
dd 40EC741h, 0B45h, 1Ch, 1B4h, 0FFF7BEF8h, 69h,	300E4300h
dd 40E0A6Eh, 0A6B0B47h,	0B41040Eh, 18h,	1D4h, 0FFF7BF44h
dd 57h,	300E4300h, 40E0A6Fh, 0B42h, 18h, 1F0h, 0FFF7BF80h
dd 29h,	200E4300h, 40E0A5Fh, 0B42h, 18h, 20Ch, 0FFF7BF90h
dd 2Ch,	200E4300h, 40E0A5Fh, 0B45h, 18h, 228h, 0FFF7BFA0h
dd 2Ch,	200E4300h, 40E0A5Fh, 0B45h, 20h, 244h, 0FFF7BFB0h
dd 41h,	80E4100h, 0E430283h, 0E0A7230h,	0EC34108h, 0B4504h
dd 20h,	268h, 0FFF7BFD0h, 41h, 80E4100h, 0E430283h, 0E0A7230h
dd 0EC34108h, 0B4504h, 18h, 28Ch, 0FFF7BFF0h, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 18h, 2A8h, 0FFF7BFFCh, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 18h, 2C4h, 0FFF7C008h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF7BFFCh
dd 32h,	300E4300h, 40E0A69h, 0B41h, 20h, 38h, 0FFF7C014h
dd 49h,	80E4100h, 0E430283h, 0E0A7A30h,	0EC34108h, 0B4504h
dd 3Ch,	5Ch, 0FFF7C03Ch, 119h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ABE02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 9Ch
dd 0FFF7C118h, 1B6h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0AF902h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4404h, 20h, 0DCh, 0FFF7C290h
dd 49h,	80E4100h, 0E430287h, 0E0A7E30h,	0EC74108h, 0B4104h
dd 20h,	100h, 0FFF7C2B8h, 72h, 80E4100h, 0E430283h, 0A670230h
dd 0C341080Eh, 0B41040Eh, 2Ch, 124h, 0FFF7C308h, 53h, 80E4100h
dd 0E410286h, 4303830Ch, 4202300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 2Ch,	154h, 0FFF7C32Ch, 55h, 80E4100h
dd 0E410286h, 4303830Ch, 4302300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 34h,	184h, 0FFF7C354h, 98h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A44h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 38h, 1BCh, 0FFF7C3B4h
dd 7Fh,	80E4100h, 0E410286h, 4303830Ch,	4002300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A670Bh, 0EC3410Ch, 0EC64108h
dd 0B4504h, 18h, 1F8h, 0FFF7C3F8h, 28h,	200E4300h, 40E0A5Fh
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 40h, 1Ch,	0FFF7C3ECh
dd 53Ah, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 5290301h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 18h, 60h,	0FFF7C8E4h, 25h
dd 200E4300h, 40E0A5Ch,	0B41h, 18h, 7Ch, 0FFF7C8F0h, 58h
dd 300E4300h, 0E0A4F02h, 0B4104h, 3Ch, 98h, 0FFF7C92Ch
dd 0D0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A9D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 2Ch, 0D8h, 0FFF7C9BCh, 58h, 80E4100h
dd 0E410287h, 4303830Ch, 4702300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC7h, 0Bh, 34h,	108h, 0FFF7C9E4h, 80h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A71h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 140h, 0FFF7CA2Ch
dd 109h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AEA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 18h, 180h, 0FFF7CAF8h, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF7CAECh
dd 91h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 5Ch, 0FFF7CB40h, 0D6h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AC502h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 20h, 9Ch, 0FFF7CBD8h, 46h, 80E4100h, 0E430287h
dd 0E0A7730h, 0EC74108h, 0B4504h, 2Ch, 0C0h, 0FFF7CBFCh
dd 53h,	80E4100h, 0E410286h, 4303830Ch,	4202300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 2Ch, 0F0h, 0FFF7CC20h, 59h
dd 80E4100h, 0E410286h,	4303830Ch, 4602300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 34h, 120h, 0FFF7CC4Ch, 59h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A4Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 158h, 0FFF7CC70h, 88h, 300E4300h, 40E0A75h, 0B44h, 18h
dd 174h, 0FFF7CCDCh, 77h, 300E4300h, 0E0A5002h,	0B4104h
dd 18h,	190h, 0FFF7CD38h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF7CD2Ch
dd 40h,	80E4100h, 0E430283h, 0E0A7530h,	0EC34108h, 0B4104h
dd 2Ch,	40h, 0FFF7CD48h, 6Eh, 80E4100h,	0E430283h, 0E0A7030h
dd 0EC34108h, 6B0B4704h, 41080E0Ah, 41040EC3h, 0Bh, 54h
dd 70h,	0FFF7CD88h, 1CAh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A6602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4304h, 0E0A0103h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 18h,	0C8h, 0FFF7CEFCh, 6Dh, 300E4300h, 40E0A7Ah, 0B43h
dd 2Ch,	0E4h, 0FFF7CF50h, 9Dh, 80E4100h, 0E410286h, 4303830Ch
dd 7002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF7CFA8h
dd 40h,	200E4300h, 40E0A70h, 0B41h, 3Ch, 38h, 0FFF7CFCCh
dd 1A5h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A015403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 2Ch, 78h, 0FFF7D134h,	0BEh, 80E4100h
dd 0E430283h, 0A400230h, 0C341080Eh, 0B43040Eh,	0E0A6B02h
dd 0EC34108h, 0B4504h, 3Ch, 0A8h, 0FFF7D1C4h, 68Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 900E4305h
dd 0A910201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 3Ch, 0E8h, 0FFF7D810h, 0CEh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A8C02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	128h, 0FFF7D8A0h, 102h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AB402h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 18h, 168h
dd 0FFF7D964h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	2Ch, 184h
dd 0FFF7D970h, 0C3h, 80E4100h, 0E410286h, 4303830Ch, 0B602400Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 18h, 1B4h, 0FFF7DA04h
dd 2Fh,	300E4300h, 40E0A66h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFF7DA00h
dd 6Eh,	80E4100h, 0E410286h, 4303830Ch,	6102300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 4Ch,	0FFF7DA40h, 59h
dd 80E4100h, 0E430283h,	0A4E0230h, 0C341080Eh, 0B41040Eh
dd 20h,	70h, 0FFF7DA78h, 56h, 80E4100h,	0E430283h, 0A4B0230h
dd 0C341080Eh, 0B41040Eh, 18h, 94h, 0FFF7DAACh,	77h, 300E4300h
dd 40E0A6Eh, 0B43h, 28h, 0B0h, 0FFF7DB08h, 67h,	80E4100h
dd 0E410286h, 4303830Ch, 0A7C300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 18h, 0DCh, 0FFF7DB44h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 0F8h, 0FFF7DB7Ch, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 114h, 0FFF7DBB4h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 6Ch, 130h, 0FFF7DBECh, 308h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A6402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4104h
dd 140E0A48h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0E9020B44h, 41140E0Ah, 41100EC3h, 410C0EC6h,	41080EC7h
dd 47040EC5h, 0Bh, 80h,	1A0h, 0FFF7DE84h, 26Dh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A013503h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B44040Eh, 0E0A5702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4504h,	140E0A87h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A6B0B45h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 28h, 224h, 0FFF7E070h
dd 4Ch,	80E4100h, 0E410286h, 4303830Ch,	0A7B200Eh, 0C3410C0Eh
dd 0C641080Eh, 0B45040Eh, 0ACh,	250h, 0FFF7E090h, 316h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 140E0A7Eh, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B030B43h,	140E0A01h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 63020B45h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0E0A780Bh, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 780B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 48040EC5h, 0AA7020Bh
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 20h,	300h, 0FFF7E2F8h, 42h, 80E4100h, 0E430283h, 0E0A7320h
dd 0EC34108h, 0B4504h, 54h, 324h, 0FFF7E318h, 251h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0A01C403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 0E0A7302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 37Ch, 0FFF7E514h, 30h, 200E4300h
dd 40E0A63h, 0B45h, 18h, 398h, 0FFF7E528h, 51h,	300E4300h
dd 40E0A65h, 0B44h, 18h, 3B4h, 0FFF7E560h, 5Dh,	300E4300h
dd 40E0A69h, 0B44h, 18h, 3D0h, 0FFF7E5A4h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 3ECh, 0FFF7E5DCh, 51h,	300E4300h
dd 40E0A66h, 0B43h, 54h, 408h, 0FFF7E614h, 10Eh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2200E43h, 100E0A72h
dd 0C0EC341h, 80EC641h,	40EC741h, 0A670B45h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 100E5A02h, 0C0EC341h
dd 80EC641h, 40EC741h, 2Ch, 460h, 0FFF7E6CCh, 9Fh, 80E4100h
dd 0E430283h, 0A440230h, 0C341080Eh, 0B43040Eh,	80E0A6Bh
dd 40EC341h, 0B44h, 18h, 490h, 0FFF7E73Ch, 7Ch,	400E4300h
dd 0E0A5D02h, 0B4404h, 54h, 4ACh, 0FFF7E79Ch, 184h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A4A02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4304h, 140E0AEFh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B45h, 2Ch, 504h, 0FFF7E8C8h, 95h,	80E4100h
dd 0E410286h, 4303830Ch, 7B02400Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 18h,	534h, 0FFF7E930h, 46h, 300E4300h
dd 40E0A7Dh, 0B41h, 18h, 550h, 0FFF7E95Ch, 4Ah,	300E4300h
dd 0E0A4102h, 0B4104h, 18h, 56Ch, 0FFF7E98Ch, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 18h, 588h, 0FFF7E998h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 18h, 5A4h, 0FFF7E9A4h, 2Ch,	200E4300h
dd 40E0A63h, 0B41h, 18h, 5C0h, 0FFF7E9B4h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 2Ch, 5DCh, 0FFF7E9C0h, 1E3h, 80E4100h
dd 0E410286h, 4303830Ch, 0D603400Eh, 0C0E0A01h,	80EC341h
dd 40EC641h, 0B41h, 18h, 60Ch, 0FFF7EB74h, 2Fh,	300E4300h
dd 40E0A66h, 0B41h, 18h, 628h, 0FFF7EB88h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF7EB7Ch
dd 3Ch,	80E4100h, 0E430283h, 0E0A6D30h,	0EC34108h, 0B4504h
dd 20h,	40h, 0FFF7EB94h, 51h, 80E4100h,	0E430283h, 0A420230h
dd 0C341080Eh, 0B45040Eh, 20h, 64h, 0FFF7EBC4h,	59h, 80E4100h
dd 0E430283h, 0E0A6A30h, 0EC34108h, 0B4104h, 28h, 88h
dd 0FFF7EBFCh, 47h, 80E4100h, 0E410286h, 4303830Ch, 0A7A300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 2Ch, 0B4h, 0FFF7EC18h
dd 8Ah,	80E4100h, 0E430283h, 0A690230h,	0C341080Eh, 0B46040Eh
dd 80E0A4Fh, 40EC341h, 0B41h, 20h, 0E4h, 0FFF7EC74h, 3Dh
dd 80E4100h, 0E430283h,	0E0A7230h, 0EC34108h, 0B4104h
dd 48h,	108h, 0FFF7EC90h, 0B4h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2200E43h, 100E0A4Eh, 0C0EC341h, 80EC641h
dd 40EC741h, 4F020B41h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 45040EC7h, 0Bh, 20h,	154h, 0FFF7ECF8h, 74h, 80E4100h
dd 0E430283h, 0A690240h, 0C341080Eh, 0B41040Eh,	18h, 178h
dd 0FFF7ED48h, 3Fh, 300E4300h, 40E0A76h, 0B41h,	20h, 194h
dd 0FFF7ED6Ch, 53h, 80E4100h, 0E430283h, 0A480240h, 0C341080Eh
dd 0B41040Eh, 18h, 1B8h, 0FFF7ED9Ch, 2Ch, 200E4300h, 40E0A63h
dd 0B41h, 18h, 1D4h, 0FFF7EDACh, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 1F0h, 0FFF7EDE4h, 51h, 300E4300h, 40E0A65h
dd 0B44h, 2Ch, 20Ch, 0FFF7EE1Ch, 73h, 80E4100h,	0E410286h
dd 4303830Ch, 4702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	18h, 23Ch, 0FFF7EE60h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 2Ch, 258h, 0FFF7EE98h, 72h, 80E4100h,	0E430283h
dd 0E0A7930h, 0EC34108h, 6B0B4204h, 41080E0Ah, 41040EC3h
dd 0Bh,	18h, 288h, 0FFF7EEDCh, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 2A4h, 0FFF7EF14h, 61h, 300E4300h, 40E0A72h
dd 0B43h, 18h, 2C0h, 0FFF7EF5Ch, 51h, 300E4300h, 40E0A66h
dd 0B43h, 28h, 2DCh, 0FFF7EF94h, 67h, 80E4100h,	0E410286h
dd 4303830Ch, 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh
dd 18h,	308h, 0FFF7EFD0h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	324h, 0FFF7F008h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 20h,	340h, 0FFF7F040h, 7Bh, 80E4100h, 0E430283h, 0A4F0230h
dd 0C341080Eh, 0B44040Eh, 20h, 364h, 0FFF7F098h, 61h, 80E4100h
dd 0E430283h, 0E0A7030h, 0EC34108h, 0B4304h, 20h, 388h
dd 0FFF7F0D8h, 61h, 80E4100h, 0E430283h, 0E0A7230h, 0EC34108h
dd 0B4104h, 3Ch, 3ACh, 0FFF7F118h, 86h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A7502h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 38h,	3ECh, 0FFF7F160h, 9Fh, 80E4100h, 0E410286h, 4303830Ch
dd 4602300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h, 0E0A670Bh
dd 0EC3410Ch, 0EC64108h, 0B4704h, 1Ch, 428h, 0FFF7F1C4h
dd 93h,	300E4300h, 40E0A76h, 0A6D0B47h,	0B43040Eh, 18h
dd 448h, 0FFF7F238h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 464h, 0FFF7F244h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 480h, 0FFF7F250h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 2Ch
dd 49Ch, 0FFF7F25Ch, 118h, 80E4100h, 0E410286h,	4303830Ch
dd 8602400Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 40h
dd 4CCh, 0FFF7F344h, 524h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 1200301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 2Ch
dd 510h, 0FFF7F824h, 74h, 80E4100h, 0E430283h, 0E0A7930h
dd 0EC34108h, 6D0B4204h, 41080E0Ah, 41040EC3h, 0Bh, 18h
dd 540h, 0FFF7F868h, 6Bh, 300E4300h, 0E0A4302h,	0B4204h
dd 1Ch,	55Ch, 0FFF7F8B8h, 75h, 300E4300h, 40E0A7Bh, 0A6B0B46h
dd 0B41040Eh, 38h, 57Ch, 0FFF7F910h, 0ABh, 80E4100h, 0E410286h
dd 4303830Ch, 4C02300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0E0A6B0Bh, 0EC3410Ch, 0EC64108h, 0B4304h, 34h, 5B8h
dd 0FFF7F980h, 0D3h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A60h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B43h, 44h, 5F0h, 0FFF7FA1Ch, 0F0h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AAEh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A6B0B45h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B41040Eh, 38h, 638h, 0FFF7FAC4h, 83h, 80E4100h
dd 0E410286h, 4303830Ch, 4102300Eh, 410C0E0Ah, 41080EC3h
dd 48040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 1Ch,	674h, 0FFF7FB0Ch, 71h, 300E4300h, 40E0A76h, 0A6B0B47h
dd 0B41040Eh, 18h, 694h, 0FFF7FB60h, 51h, 300E4300h, 40E0A65h
dd 0B44h, 38h, 6B0h, 0FFF7FB98h, 9Bh, 80E4100h,	0E410286h
dd 4303830Ch, 5802300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0E0A6F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 18h, 6ECh
dd 0FFF7FBF8h, 51h, 300E4300h, 40E0A66h, 0B43h,	18h, 708h
dd 0FFF7FC30h, 51h, 300E4300h, 40E0A66h, 0B43h,	20h, 724h
dd 0FFF7FC68h, 63h, 80E4100h, 0E430283h, 0E0A7830h, 0EC34108h
dd 0B4304h, 2Ch, 748h, 0FFF7FCA8h, 83h,	80E4100h, 0E410286h
dd 4303830Ch, 4C02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	18h, 778h, 0FFF7FCFCh, 51h, 300E4300h, 40E0A66h
dd 0B43h, 28h, 794h, 0FFF7FD34h, 73h, 80E4100h,	0E410286h
dd 4303830Ch, 0A71300Eh, 0C3410C0Eh, 0C641080Eh, 0B44040Eh
dd 34h,	7C0h, 0FFF7FD7Ch, 0B7h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A88h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 18h, 7F8h, 0FFF7FDFCh, 51h,	300E4300h
dd 40E0A66h, 0B43h, 20h, 814h, 0FFF7FE34h, 6Fh,	80E4100h
dd 0E430283h, 0A450230h, 0C341080Eh, 0B42040Eh,	20h, 838h
dd 0FFF7FE80h, 63h, 80E4100h, 0E430283h, 0E0A7830h, 0EC34108h
dd 0B4304h, 18h, 85Ch, 0FFF7FEC0h, 51h,	300E4300h, 40E0A66h
dd 0B43h, 18h, 878h, 0FFF7FEF8h, 63h, 300E4300h, 40E0A7Bh
dd 0B42h, 2Ch, 894h, 0FFF7FF40h, 0FEh, 80E4100h, 0E430283h
dd 0A6F0230h, 0C341080Eh, 0B48040Eh, 0E0A7B02h,	0EC34108h
dd 0B4104h, 20h, 8C4h, 0FFF80010h, 4Dh,	80E4100h, 0E430283h
dd 0A420230h, 0C341080Eh, 0B41040Eh, 68h, 8E8h,	0FFF8003Ch
dd 12Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6B0B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0A47020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 2Ch, 954h, 0FFF800FCh
dd 0F5h, 80E4100h, 0E410286h, 4303830Ch, 8602400Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 54h, 984h, 0FFF801C4h, 18Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4305h, 0A580201h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 0E0ADE02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4204h, 38h, 9DCh, 0FFF802FCh
dd 85h,	80E4100h, 0E410286h, 4303830Ch,	4E02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0E0A650Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 58h, 0A18h,	0FFF80348h, 0DFh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2200E43h, 100E0A5Eh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A670B45h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B46040Eh, 100E0A5Fh, 0C0EC341h,	80EC641h
dd 40EC741h, 0B46h, 34h, 0A74h,	0FFF803CCh, 0D3h, 80E4100h
dd 0E430283h, 0A4E0230h, 0C341080Eh, 0B45040Eh,	80E0A6Bh
dd 40EC341h, 0A5F0B44h,	0C341080Eh, 0B48040Eh, 18h, 0AACh
dd 0FFF80468h, 51h, 300E4300h, 40E0A65h, 0B44h,	18h, 0AC8h
dd 0FFF804A0h, 55h, 300E4300h, 40E0A6Ah, 0B43h,	18h, 0AE4h
dd 0FFF804DCh, 51h, 300E4300h, 40E0A66h, 0B43h,	18h, 0B00h
dd 0FFF80514h, 55h, 300E4300h, 40E0A6Ah, 0B43h,	18h, 0B1Ch
dd 0FFF80550h, 51h, 300E4300h, 40E0A66h, 0B43h,	3Ch, 0B38h
dd 0FFF80588h, 130h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A9A02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 18h, 0B78h, 0FFF80678h
dd 89h,	300E4300h, 40E0A7Fh, 0B42h, 38h, 0B94h,	0FFF806E8h
dd 0FEh, 80E4100h, 0E410286h, 4303830Ch, 4602300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0A5C020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B46040Eh, 38h, 0BD0h, 0FFF807ACh, 0CAh, 80E4100h, 0E410286h
dd 4303830Ch, 4202300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0E0A6E0Bh, 0EC3410Ch, 0EC64108h, 0B4804h, 44h, 0C0Ch
dd 0FFF8083Ch, 0D4h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2400E43h, 100E0A96h,	0C0EC341h, 80EC641h, 40EC741h
dd 0A670B41h, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B45040Eh
dd 18h,	0C54h, 0FFF808C8h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 18h,	0C70h, 0FFF80900h, 53h,	300E4300h, 40E0A6Ah, 0B43h
dd 18h,	0C8Ch, 0FFF80938h, 54h,	300E4300h, 40E0A66h, 0B43h
dd 3Ch,	0CA8h, 0FFF80970h, 446h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 140E0A6Dh, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B44h, 38h, 0CE8h, 0FFF80D78h
dd 93h,	80E4100h, 0E410286h, 4303830Ch,	0A7B300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B46040Eh, 0C0E0A67h, 80EC341h, 40EC641h
dd 0B47h, 18h, 0D24h, 0FFF80DD0h, 3Fh, 300E4300h, 40E0A76h
dd 0B41h, 28h, 0D40h, 0FFF80DF4h, 42h, 80E4100h, 0E410286h
dd 4303830Ch, 0A71300Eh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh
dd 7Ch,	0D6Ch, 0FFF80E0Ch, 213h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ABD02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0A67020Bh
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 140E9E02h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 38h,	0DECh, 0FFF80FA0h, 93h,	80E4100h, 0E410286h, 4303830Ch
dd 0A7B300Eh, 0C3410C0Eh, 0C641080Eh, 0B46040Eh, 0C0E0A67h
dd 80EC341h, 40EC641h, 0B47h, 18h, 0E28h, 0FFF80FF8h, 3Fh
dd 300E4300h, 40E0A76h,	0B41h, 3Ch, 0E44h, 0FFF8101Ch
dd 152h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011903h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 2Ch, 0E84h, 0FFF81130h, 7Bh
dd 80E4100h, 0E410286h,	4303830Ch, 4D02300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 18h, 0EB4h, 0FFF8117Ch, 51h
dd 300E4300h, 40E0A66h,	0B43h, 3Ch, 0ED0h, 0FFF811B4h
dd 75h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A5E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 18h, 0F10h, 0FFF811ECh, 63h, 300E4300h
dd 40E0A7Ch, 0B41h, 6Ch, 0F2Ch,	0FFF81234h, 29Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 1E20301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 43040EC5h, 0A64020Bh, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B48040Eh, 140E0A70h, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 18h, 0F9Ch, 0FFF81464h, 54h
dd 300E4300h, 40E0A66h,	0B43h, 3Ch, 0FB8h, 0FFF8149Ch
dd 459h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 0FF8h, 0FFF818B8h, 0ADh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A7902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 54h, 1038h,	0FFF81928h, 4A6h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 3BB0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 46040EC5h
dd 0A78020Bh, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B48040Eh, 3Ch, 1090h, 0FFF81D78h, 0ADh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A9802h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 1Ch,	10D0h, 0FFF81DE8h, 93h,	300E4300h, 40E0A76h, 0A6D0B47h
dd 0B43040Eh, 18h, 10F0h, 0FFF81E5Ch, 8Dh, 300E4300h, 40E0A7Eh
dd 0B43h, 18h, 110Ch, 0FFF81ED0h, 89h, 300E4300h, 40E0A7Fh
dd 0B42h, 54h, 1128h, 0FFF81F40h, 0F3h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A9A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	6Ch, 1180h, 0FFF81FDCh,	339h, 80E4100h,	0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A021903h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 0E0AA702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 140E0A57h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 34h, 11F0h,	0FFF822A8h, 5Fh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 40h, 1228h, 0FFF822D0h
dd 505h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0F00E4C05h, 2070320h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 18h, 126Ch, 0FFF82794h, 51h
dd 300E4300h, 40E0A65h,	0B44h, 1Ch, 1288h, 0FFF827CCh
dd 93h,	300E4300h, 40E0A76h, 0A6D0B47h,	0B43040Eh, 18h
dd 12A8h, 0FFF82840h, 75h, 300E4300h, 0E0A4A02h, 0B4304h
dd 68h,	12C4h, 0FFF8289Ch, 117h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A9302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4204h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0E42020Bh
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 4, 68h
dd 1330h, 0FFF82948h, 139h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AB602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4304h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0E0A7B0Bh
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	139Ch, 0FFF82A18h, 79h,	300E4300h, 0E0A4F02h, 0B4204h
dd 2Ch,	13B8h, 0FFF82A78h, 6Dh,	80E4100h, 0E410286h, 4303830Ch
dd 6002300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 3Ch
dd 13E8h, 0FFF82AB8h, 3AEh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A017C03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h
dd 1428h, 0FFF82E28h, 2Ah, 200E4300h, 40E0A61h,	0B41h
dd 18h,	1444h, 0FFF82E38h, 51h,	300E4300h, 40E0A65h, 0B44h
dd 18h,	1460h, 0FFF82E70h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 18h,	147Ch, 0FFF82EA8h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 18h,	1498h, 0FFF82EE0h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 3Ch,	14B4h, 0FFF82F18h, 0B5h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9002h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 14F4h
dd 0FFF82F90h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	3Ch, 1510h
dd 0FFF82F9Ch, 10FCh, 80E4100h,	0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 700E4305h, 0A10EB03h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h, 1550h, 0FFF84058h
dd 59h,	300E4300h, 0E0A5002h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFF84080h
dd 98h,	80E4100h, 0E410286h, 4303830Ch,	4F02400Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 3Ch, 4Ch,	0FFF840E8h, 245h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A4D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 24h, 8Ch, 0FFF842F0h, 15Bh, 80E4100h
dd 0E430283h, 1300330h,	41080E0Ah, 43040EC3h, 0Bh, 18h
dd 0B4h, 0FFF84424h, 2Ah, 200E4300h, 40E0A61h, 0B41h, 18h
dd 0D0h, 0FFF84434h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 0ECh, 0FFF84440h, 51h, 300E4300h, 40E0A65h, 0B44h, 18h
dd 108h, 0FFF84478h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 124h, 0FFF84484h, 2Ch, 200E4300h, 40E0A63h, 0B41h, 18h
dd 140h, 0FFF84494h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 15Ch, 0FFF844A0h, 25h, 200E4300h, 40E0A5Ch, 0B41h, 40h
dd 178h, 0FFF844ACh, 7BBh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	0E00E4605h, 3E00302h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 1Ch
dd 1BCh, 0FFF84C24h, 47h, 200E4300h, 40E0A6Ah, 0A510B43h
dd 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF84C34h
dd 187h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AA202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 20h, 5Ch, 0FFF84D7Ch, 87h, 80E4100h
dd 0E430283h, 0A470230h, 0C341080Eh, 0B44040Eh,	18h, 80h
dd 0FFF84DE0h, 5Fh, 300E4300h, 40E0A77h, 0B42h,	18h, 9Ch
dd 0FFF84E24h, 5Fh, 300E4300h, 40E0A77h, 0B42h,	18h, 0B8h
dd 0FFF84E68h, 5Fh, 300E4300h, 40E0A77h, 0B42h,	18h, 0D4h
dd 0FFF84EACh, 5Fh, 300E4300h, 40E0A77h, 0B42h,	18h, 0F0h
dd 0FFF84EF0h, 5Fh, 300E4300h, 40E0A77h, 0B42h,	18h, 10Ch
dd 0FFF84F34h, 2Ch, 200E4300h, 40E0A63h, 0B41h,	18h, 128h
dd 0FFF84F44h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 144h
dd 0FFF84F50h, 2Ch, 200E4300h, 40E0A63h, 0B41h,	18h, 160h
dd 0FFF84F60h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 17Ch
dd 0FFF84F6Ch, 2Ch, 200E4300h, 40E0A63h, 0B41h,	18h, 198h
dd 0FFF84F7Ch, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 1B4h
dd 0FFF84F88h, 2Ch, 200E4300h, 40E0A63h, 0B41h,	18h, 1D0h
dd 0FFF84F98h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	18h, 1ECh
dd 0FFF84FA4h, 77h, 300E4300h, 0E0A6E02h, 0B4104h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 44h, 1Ch,	0FFF84FE8h
dd 11Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 5C0E6702h, 2600E41h, 140E0A72h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B43h, 2Ch, 64h, 0FFF850C0h
dd 0CBh, 80E4100h, 0E430283h, 0A450230h, 0C341080Eh, 0B42040Eh
dd 0E0A6A02h, 0EC34108h, 0B4504h, 3Ch, 94h, 0FFF8515Ch
dd 184h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 0D4h, 0FFF852A0h, 4Fh, 400E4300h
dd 0E0A4602h, 0B4104h, 2Ch, 0F0h, 0FFF852D4h, 0A3h, 80E4100h
dd 0E410286h, 4303830Ch, 6402400Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 2Ch,	120h, 0FFF85348h, 6Ah, 80E4100h
dd 0E410286h, 4303830Ch, 5902300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 2Ch,	150h, 0FFF85384h, 0F1h,	80E4100h
dd 0E410286h, 4603830Ch, 208C00Eh, 0C0E0A6Ch, 80EC341h
dd 40EC641h, 0B42h, 18h, 180h, 0FFF85448h, 5Dh,	300E4300h
dd 40E0A7Bh, 0B42h, 30h, 19Ch, 0FFF8548Ch, 12Eh, 80E4100h
dd 0E410286h, 4303830Ch, 8D02400Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 3C0E530Bh, 400E41h, 18h, 1D0h, 0FFF85588h
dd 51h,	300E4300h, 40E0A65h, 0B44h, 18h, 1ECh, 0FFF855C0h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 208h, 0FFF855F8h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 224h, 0FFF85608h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 18h, 240h, 0FFF85614h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 25Ch, 0FFF8561Ch
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF8560Ch
dd 5Dh,	300E4300h, 0E0A4702h, 0B4204h, 3Ch, 38h, 0FFF85650h
dd 1A9h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A019803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 50h, 78h, 0FFF857BCh,	2B6h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 480E4C02h, 2600E43h,	140E0A4Dh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0F0020B41h, 0E43580Eh, 0EB50260h
dd 600E4358h, 18h, 0CCh, 0FFF85A20h, 57h, 200E4300h, 40E0A7Bh
dd 0B42h, 2Ch, 0E8h, 0FFF85A5Ch, 93h, 80E4100h,	0E430283h
dd 0A470230h, 0C341080Eh, 0B44040Eh, 80E0A78h, 40EC341h
dd 0B45h, 20h, 118h, 0FFF85AC0h, 6Bh, 80E4100h,	0E430283h
dd 0A5C0230h, 0C341080Eh, 0B45040Eh, 38h, 13Ch,	0FFF85B08h
dd 0C3h, 80E4100h, 0E410286h, 4303830Ch, 6302300Eh, 410C0E0Ah
dd 41080EC3h, 46040EC6h, 0A4B020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 54h, 178h, 0FFF85B90h, 18Ch, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AF402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4104h
dd 140E0A7Eh, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 3Ch, 1D0h, 0FFF85CC4h, 21Ah, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A6A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h
dd 3Ch,	210h, 0FFF85EA0h, 260h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A010A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h
dd 250h, 0FFF860C0h, 57h, 400E4300h, 0E0A4E02h,	0B4104h
dd 3Ch,	26Ch, 0FFF860FCh, 19Dh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AC502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 18h, 2ACh
dd 0FFF8625Ch, 4Fh, 400E4300h, 0E0A4602h, 0B4104h, 18h
dd 2C8h, 0FFF86290h, 30h, 200E4300h, 40E0A63h, 0B45h, 18h
dd 2E4h, 0FFF862A4h, 30h, 200E4300h, 40E0A63h, 0B45h, 18h
dd 300h, 0FFF862B8h, 51h, 300E4300h, 40E0A65h, 0B44h, 2Ch
dd 31Ch, 0FFF862F0h, 6Eh, 80E4100h, 0E430283h, 0E0A7030h
dd 0EC34108h, 6B0B4704h, 41080E0Ah, 41040EC3h, 0Bh, 18h
dd 34Ch, 0FFF86330h, 2Ch, 200E4300h, 40E0A63h, 0B41h, 18h
dd 368h, 0FFF86340h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 384h, 0FFF8634Ch, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 3A0h, 0FFF86384h, 51h, 300E4300h, 40E0A66h, 0B43h, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF863A4h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 38h, 0FFF863B4h
dd 53h,	400E4300h, 40E0A63h, 0B42h, 2Ch, 54h, 0FFF863ECh
dd 81h,	80E4100h, 0E410286h, 4303830Ch,	4402400Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 84h,	0FFF86440h, 36h
dd 80E4100h, 0E430283h,	0E0A6A20h, 0EC34108h, 0B4204h
dd 3Ch,	0A8h, 0FFF86454h, 54h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	300E4305h, 0E0A4202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 20h, 0E8h
dd 0FFF86468h, 36h, 80E4100h, 0E430283h, 0E0A6A20h, 0EC34108h
dd 0B4204h, 44h, 10Ch, 0FFF8647Ch, 7Fh,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	7E200E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 45040EC7h, 0E0A690Bh, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4204h, 34h, 154h, 0FFF864B4h, 49h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 79200E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 42040EC7h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF864B0h
dd 5Eh,	80E4100h, 0E430283h, 0A4F0230h,	0C341080Eh, 0B45040Eh
dd 2Ch,	40h, 0FFF864ECh, 1E9h, 80E4100h, 0E410286h, 4303830Ch
dd 0A302400Eh, 410C0E0Ah, 41080EC3h, 42040EC6h,	0Bh, 18h
dd 70h,	0FFF866A8h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 20h
dd 8Ch,	0FFF866B4h, 77h, 80E4100h, 0E430283h, 0A4B0230h
dd 0C341080Eh, 0B44040Eh, 18h, 0B0h, 0FFF86708h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 0CCh, 0FFF86740h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 0E8h, 0FFF86778h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 104h, 0FFF867B0h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 20h, 120h, 0FFF867E8h, 78h,	80E4100h
dd 0E430283h, 0A400230h, 0C341080Eh, 0B43040Eh,	18h, 144h
dd 0FFF8683Ch, 60h, 300E4300h, 40E0A74h, 0B41h,	18h, 160h
dd 0FFF86880h, 51h, 300E4300h, 40E0A66h, 0B43h,	3Ch, 17Ch
dd 0FFF868B8h, 94h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0E0A8302h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 1BCh, 0FFF8690Ch
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 1D8h, 0FFF86944h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 1F4h, 0FFF8697Ch
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 210h, 0FFF869B4h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 28h, 22Ch, 0FFF869ECh
dd 93h,	80E4100h, 0E410286h, 4303830Ch,	0A70400Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 18h, 258h, 0FFF86A54h, 54h, 300E4300h
dd 40E0A66h, 0B43h, 18h, 274h, 0FFF86A8Ch, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 290h, 0FFF86AC4h, 54h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 2ACh, 0FFF86AFCh, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 2C8h, 0FFF86B34h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 28h, 2E4h, 0FFF86B6Ch, 67h,	80E4100h
dd 0E410286h, 4303830Ch, 0A7C300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 28h, 310h, 0FFF86BA8h, 67h, 80E4100h, 0E410286h
dd 4303830Ch, 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh
dd 28h,	33Ch, 0FFF86BE4h, 67h, 80E4100h, 0E410286h, 4303830Ch
dd 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 28h, 368h
dd 0FFF86C20h, 63h, 80E4100h, 0E410286h, 4303830Ch, 0A76300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B43040Eh, 28h, 394h, 0FFF86C58h
dd 63h,	80E4100h, 0E410286h, 4303830Ch,	0A76300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B43040Eh, 18h, 3C0h, 0FFF86C90h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 3Ch, 3DCh, 0FFF86CC8h, 1CEh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A5202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 3Ch, 41Ch, 0FFF86E58h, 1ACh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0A010003h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 18h,	45Ch, 0FFF86FC4h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	478h, 0FFF86FFCh, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	494h, 0FFF87034h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	4B0h, 0FFF8706Ch, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	4CCh, 0FFF870A4h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	4E8h, 0FFF870DCh, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	504h, 0FFF87114h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	520h, 0FFF8714Ch, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	53Ch, 0FFF87184h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 34h,	558h, 0FFF871BCh, 170h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A68h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 34h, 590h, 0FFF872F4h, 15Ch, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0AC5h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 2Ch, 5C8h, 0FFF87418h
dd 72h,	80E4100h, 0E430283h, 0E0A7930h,	0EC34108h, 6B0B4204h
dd 41080E0Ah, 41040EC3h, 0Bh, 44h, 5F8h, 0FFF8745Ch, 123h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0ABAh, 0C0EC341h, 80EC641h, 40EC741h, 0A670B45h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 2Ch
dd 640h, 0FFF87538h, 73h, 80E4100h, 0E410286h, 4303830Ch
dd 4602300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 20h
dd 670h, 0FFF8757Ch, 4Ah, 80E4100h, 0E430283h, 0E0A7F30h
dd 0EC34108h, 0B4104h, 3Ch, 694h, 0FFF875A4h, 1B6h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A012E03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 20h, 6D4h, 0FFF8771Ch, 3Eh, 80E4100h, 0E430283h
dd 0E0A6F20h, 0EC34108h, 0B4504h, 3Ch, 6F8h, 0FFF87738h
dd 128h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AE602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 3Ch, 738h, 0FFF87820h, 198h, 80E4100h
dd 0E410286h, 4303830Ch, 1003300Eh, 0C0E0A01h, 80EC341h
dd 40EC641h, 4F020B45h,	410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	34h, 778h, 0FFF87978h, 174h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0A8Ch, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 68h, 7B0h, 0FFF87AB4h, 13Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A7802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6B0B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0A48020Bh, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 1Ch
dd 81Ch, 0FFF87B84h, 55h, 200E4300h, 40E0A6Fh, 0A530B46h
dd 0B45040Eh, 2Ch, 83Ch, 0FFF87BBCh, 18Eh, 80E4100h, 0E430283h
dd 0AFC0230h, 0C341080Eh, 0B47040Eh, 80E0A6Bh, 40EC341h
dd 0B44h, 2Ch, 86Ch, 0FFF87D1Ch, 86h, 80E4100h,	0E430283h
dd 0A4A0230h, 0C341080Eh, 0B45040Eh, 80E0A6Bh, 40EC341h
dd 0B41h, 20h, 89Ch, 0FFF87D74h, 3Bh, 80E4100h,	0E430283h
dd 0E0A7030h, 0EC34108h, 0B4104h, 20h, 8C0h, 0FFF87D8Ch
dd 47h,	80E4100h, 0E430283h, 0E0A7C30h,	0EC34108h, 0B4104h
dd 38h,	8E4h, 0FFF87DB0h, 0F2h,	80E4100h, 0E430283h, 0A7E0230h
dd 0C341080Eh, 0B45040Eh, 80E0A53h, 40EC341h, 47020B48h
dd 41080E0Ah, 41040EC3h, 0Bh, 20h, 920h, 0FFF87E68h, 58h
dd 80E4100h, 0E430283h,	0A410230h, 0C341080Eh, 0B46040Eh
dd 54h,	944h, 0FFF87E9Ch, 219h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0A016403h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 0E0A9302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 3Ch,	99Ch, 0FFF88060h, 459h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0A5502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 2Ch, 9DCh
dd 0FFF8847Ch, 99h, 80E4100h, 0E430283h, 0E0A6730h, 0EC34108h
dd 20B4804h, 80E0A5Ah, 40EC341h, 0B45h,	38h, 0A0Ch, 0FFF884E8h
dd 0CBh, 80E4100h, 0E410286h, 4303830Ch, 6902300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4304h, 38h, 0A48h,	0FFF88578h, 107h, 80E4100h, 0E410286h
dd 4303830Ch, 8102300Eh, 410C0E0Ah, 41080EC3h, 48040EC6h
dd 0A4F020Bh, 0C3410C0Eh, 0C641080Eh, 0B43040Eh, 3Ch, 0A84h
dd 0FFF88644h, 33Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 800E4305h, 0AFE0201h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h, 0AC4h, 0FFF88944h
dd 39h,	300E4300h, 40E0A70h, 0B41h, 34h, 0AE0h,	0FFF88964h
dd 2CFh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2600E43h
dd 100E0A7Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 3Ch
dd 0B18h, 0FFF88BFCh, 529h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 0A550201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 18h
dd 0B58h, 0FFF890E8h, 3Bh, 300E4300h, 40E0A72h,	0B41h
dd 3Ch,	0B74h, 0FFF89108h, 0A0h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A7002h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 2Ch, 0BB4h
dd 0FFF89168h, 52h, 80E4100h, 0E430283h, 0E0A7420h, 0EC34108h
dd 4F0B4304h, 41080E0Ah, 41040EC3h, 0Bh, 18h, 0BE4h, 0FFF8918Ch
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 18h, 0C00h,	0FFF89198h
dd 2B0h, 400E4300h, 0A02A703h, 0B41040Eh, 18h, 0C1Ch, 0FFF8942Ch
dd 52h,	300E4300h, 0E0A4902h, 0B4104h, 18h, 0C38h, 0FFF89464h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 0C54h,	0FFF89474h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFF89468h
dd 8Dh,	80E4100h, 0E410286h, 4303830Ch,	8002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch,	0FFF894C8h, 2E1h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0A010403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 18h, 8Ch, 0FFF8976Ch,	5Fh, 300E4300h
dd 40E0A74h, 0B41h, 18h, 0A8h, 0FFF897B0h, 42h,	300E4300h
dd 40E0A75h, 0B45h, 18h, 0C4h, 0FFF897D8h, 27h,	200E4300h
dd 40E0A5Ah, 0B45h, 18h, 0E0h, 0FFF897E4h, 27h,	200E4300h
dd 40E0A5Ah, 0B45h, 18h, 0FCh, 0FFF897F0h, 33h,	300E4300h
dd 40E0A66h, 0B45h, 20h, 118h, 0FFF89808h, 6Bh,	300E4300h
dd 0E0A4302h, 4F0B4604h, 41040E0Ah, 0Bh, 18h, 13Ch, 0FFF89850h
dd 60h,	300E4300h, 0E0A5702h, 0B4104h, 18h, 158h, 0FFF89894h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 174h, 0FFF898A4h
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 190h, 0FFF898B4h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 18h, 1ACh, 0FFF898C0h
dd 0EAh, 400E4300h, 0E0AE102h, 0B4104h,	18h, 1C8h, 0FFF89990h
dd 56h,	300E4300h, 0E0A4D02h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF899B4h
dd 0ADh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A4E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 20h, 5Ch, 0FFF89A24h, 0D7h, 80E4100h
dd 0E430283h, 0A550230h, 0C341080Eh, 0B42040Eh,	20h, 80h
dd 0FFF89AD8h, 8Dh, 80E4100h, 0E430283h, 0A7E0230h, 0C341080Eh
dd 0B41040Eh, 18h, 0A4h, 0FFF89B44h, 66h, 400E4300h, 0E0A5D02h
dd 0B4104h, 18h, 0C0h, 0FFF89B90h, 51h,	300E4300h, 40E0A66h
dd 0B43h, 18h, 0DCh, 0FFF89BC8h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 0F8h, 0FFF89C00h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 114h, 0FFF89C38h, 61h, 300E4300h, 40E0A75h
dd 0B44h, 18h, 130h, 0FFF89C80h, 57h, 400E4300h, 40E0A66h
dd 0B43h, 1Ch, 14Ch, 0FFF89CBCh, 69h, 300E4300h, 40E0A6Eh
dd 0A6B0B47h, 0B41040Eh, 20h, 16Ch, 0FFF89D08h,	0B4h, 80E4100h
dd 0E430283h, 0E0A7330h, 0EC34108h, 0B4404h, 1Ch, 190h
dd 0FFF89D98h, 69h, 300E4300h, 40E0A6Eh, 0A6B0B47h, 0B41040Eh
dd 18h,	1B0h, 0FFF89DE4h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 18h,	1CCh, 0FFF89DF0h, 80h, 400E4300h, 0E0A7702h, 0B4104h
dd 18h,	1E8h, 0FFF89E54h, 3Ch, 300E4300h, 40E0A73h, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF89E5Ch
dd 31h,	200E4300h, 40E0A68h, 0B41h, 18h, 38h, 0FFF89E74h
dd 35h,	200E4300h, 40E0A68h, 0B41h, 20h, 54h, 0FFF89E90h
dd 3Bh,	80E4100h, 0E430283h, 0E0A6C30h,	0EC34108h, 0B4504h
dd 20h,	78h, 0FFF89EA8h, 4Fh, 80E4100h,	0E430283h, 0E0A6A30h
dd 0EC34108h, 0B4104h, 18h, 9Ch, 0FFF89ED4h, 32h, 200E4300h
dd 40E0A65h, 0B45h, 54h, 0B8h, 0FFF89EECh, 26Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A01F403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 0E0A5E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 34h, 110h, 0FFF8A100h, 0A1h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2500E43h, 100E0A8Dh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 2Ch, 148h, 0FFF8A16Ch
dd 95h,	80E4100h, 0E410286h, 4303830Ch,	8402400Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 68h, 178h, 0FFF8A1D4h, 15Dh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0ACD02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4404h,	140E0A57h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A530B45h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 20h, 1E4h, 0FFF8A2C8h
dd 46h,	80E4100h, 0E430283h, 0E0A7B30h,	0EC34108h, 0B4104h
dd 20h,	208h, 0FFF8A2ECh, 59h, 80E4100h, 0E430283h, 0A4E0230h
dd 0C341080Eh, 0B41040Eh, 20h, 22Ch, 0FFF8A324h, 6Ch, 80E4100h
dd 0E430283h, 0A610230h, 0C341080Eh, 0B41040Eh,	20h, 250h
dd 0FFF8A36Ch, 0D4h, 80E4100h, 0E430283h, 0A790230h, 0C341080Eh
dd 0B42040Eh, 20h, 274h, 0FFF8A41Ch, 0DBh, 80E4100h, 0E430283h
dd 0A8A0230h, 0C341080Eh, 0B41040Eh, 2Ch, 298h,	0FFF8A4D4h
dd 0B4h, 80E4100h, 0E410286h, 4303830Ch, 6902500Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 28h, 2C8h, 0FFF8A558h, 42h
dd 80E4100h, 0E410286h,	4303830Ch, 0A75300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 18h, 2F4h, 0FFF8A570h, 61h, 300E4300h
dd 40E0A73h, 0B42h, 20h, 310h, 0FFF8A5B8h, 0C6h, 80E4100h
dd 0E430283h, 0A5B0230h, 0C341080Eh, 0B44040Eh,	18h, 334h
dd 0FFF8A65Ch, 75h, 500E4300h, 0E0A4102h, 0B4404h, 20h
dd 350h, 0FFF8A6B8h, 77h, 80E4100h, 0E430283h, 0A4D0230h
dd 0C341080Eh, 0B42040Eh, 38h, 374h, 0FFF8A70Ch, 8Fh, 80E4100h
dd 0E410286h, 4303830Ch, 0A7D300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B48040Eh, 0C0E0A66h, 80EC341h, 40EC641h, 0B44h, 3Ch
dd 3B0h, 0FFF8A760h, 0D6h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ABA02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 40h, 3F0h
dd 0FFF8A7F8h, 0B45h, 80E4100h,	0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 800E4C05h, 5A90322h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 43040EC5h, 0Bh, 20h, 434h, 0FFF8B2FCh
dd 93h,	80E4100h, 0E430283h, 0A670230h,	0C341080Eh, 0B44040Eh
dd 3Ch,	458h, 0FFF8B36Ch, 1CEh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AEF02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 18h, 498h
dd 0FFF8B4FCh, 0ABh, 400E4300h,	0E0A5A02h, 0B4304h, 1Ch
dd 4B4h, 0FFF8B58Ch, 6Fh, 300E4300h, 40E0A75h, 0A6D0B44h
dd 0B41040Eh, 3Ch, 4D4h, 0FFF8B5DCh, 199h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A015603h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 3Ch,	514h, 0FFF8B738h, 1CFh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A019803h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 1Ch
dd 554h, 0FFF8B8C8h, 0A5h, 300E4300h, 40E0A7Ch,	0A540B45h
dd 0B44040Eh, 1Ch, 574h, 0FFF8B950h, 8Fh, 300E4300h, 40E0A75h
dd 0A6D0B44h, 0B43040Eh, 3Ch, 594h, 0FFF8B9C0h,	135h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0ADB02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 3Ch, 5D4h, 0FFF8BAB8h, 17Dh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0A010B03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 20h,	614h, 0FFF8BBF8h, 46h, 80E4100h, 0E430283h, 0E0A7730h
dd 0EC34108h, 0B4504h, 2Ch, 638h, 0FFF8BC1Ch, 0B7h, 80E4100h
dd 0E430283h, 0E0A7730h, 0EC34108h, 20B4404h, 80E0A6Ch
dd 40EC341h, 0B45h, 18h, 668h, 0FFF8BCA4h, 63h,	300E4300h
dd 40E0A79h, 0B44h, 18h, 684h, 0FFF8BCECh, 4Fh,	300E4300h
dd 40E0A68h, 0B41h, 44h, 6A0h, 0FFF8BD20h, 81h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Dh
dd 0C0EC341h, 80EC641h,	40EC741h, 0A580B46h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 18h, 6E8h, 0FFF8BD5Ch
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 2Ch, 704h, 0FFF8BD68h
dd 64h,	80E4100h, 0E410286h, 4303830Ch,	5302300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 734h, 0FFF8BD9Ch, 88h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 34h, 774h, 0FFF8BDE4h, 7Eh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A6Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 18h, 7ACh, 0FFF8BE2Ch
dd 3Fh,	300E4300h, 40E0A76h, 0B41h, 3Ch, 7C8h, 0FFF8BE50h
dd 3FDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A03DE03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h
dd 808h, 0FFF8C210h, 6Fh, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A60h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 18h, 840h, 0FFF8C248h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 34h, 85Ch, 0FFF8C254h, 31Ch, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 3600E43h, 0E0A030Dh
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4104h, 18h, 894h
dd 0FFF8C538h, 0B5h, 300E4300h,	0E0AAC02h, 0B4104h, 54h
dd 8B0h, 0FFF8C5D4h, 1BAh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 140E0A6Dh, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0F2020B44h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 46040EC5h, 0Bh, 3Ch
dd 908h, 0FFF8C738h, 33Fh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A017403h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 40h
dd 948h, 0FFF8CA38h, 78Ch, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 42C0301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 40h
dd 98Ch, 0FFF8D180h, 1FBh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 1CC0301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 18h
dd 9D0h, 0FFF8D338h, 50h, 400E4300h, 0E0A4702h,	0B4104h
dd 18h,	9ECh, 0FFF8D36Ch, 50h, 400E4300h, 0E0A4702h, 0B4104h
dd 18h,	0A08h, 0FFF8D3A0h, 50h,	400E4300h, 0E0A4702h, 0B4104h
dd 18h,	0A24h, 0FFF8D3D4h, 50h,	400E4300h, 0E0A4702h, 0B4104h
dd 3Ch,	0A40h, 0FFF8D408h, 16Bh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A013803h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h
dd 0A80h, 0FFF8D534h, 47h, 300E4300h, 40E0A7Eh,	0B41h
dd 18h,	0A9Ch, 0FFF8D560h, 47h,	300E4300h, 40E0A7Eh, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF8D574h
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 18h, 38h, 0FFF8D580h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 54h, 0FFF8D588h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 70h, 0FFF8D590h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 8Ch, 0FFF8D598h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0A8h, 0FFF8D5A0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0C4h, 0FFF8D5A8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0E0h, 0FFF8D5B0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0FCh, 0FFF8D5B8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 118h, 0FFF8D5C0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 134h, 0FFF8D5C8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 150h, 0FFF8D5D0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 16Ch, 0FFF8D5D8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 188h, 0FFF8D5E0h
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF8D5D4h
dd 25h,	200E4300h, 40E0A5Ch, 0B41h, 18h, 38h, 0FFF8D5E0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 54h, 0FFF8D5E8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 70h, 0FFF8D5F0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 8Ch, 0FFF8D5F8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0A8h, 0FFF8D600h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0C4h, 0FFF8D608h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0E0h, 0FFF8D610h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 0FCh, 0FFF8D618h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 118h, 0FFF8D620h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 18h, 134h, 0FFF8D62Ch
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 150h, 0FFF8D634h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 20h, 16Ch, 0FFF8D63Ch
dd 93h,	80E4100h, 0E430283h, 0A5F0230h,	0C341080Eh, 0B44040Eh
dd 18h,	190h, 0FFF8D6ACh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	1ACh, 0FFF8D6B4h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	1C8h, 0FFF8D6BCh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	1E4h, 0FFF8D6C4h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	200h, 0FFF8D6CCh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	21Ch, 0FFF8D6D4h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	238h, 0FFF8D6DCh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	254h, 0FFF8D6E4h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	270h, 0FFF8D6ECh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	28Ch, 0FFF8D6F4h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	2A8h, 0FFF8D6FCh, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	2C4h, 0FFF8D704h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	2E0h, 0FFF8D70Ch, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	2FCh, 0FFF8D714h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	318h, 0FFF8D71Ch, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 18h,	334h, 0FFF8D724h, 23h, 200E4300h, 40E0A5Ah, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch,	0FFF8D714h
dd 0CDh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A68h, 0C0EC341h, 80EC641h, 40EC741h, 0B43h, 18h
dd 54h,	0FFF8D7ACh, 47h, 300E4300h, 40E0A7Eh, 0B41h, 3Ch
dd 70h,	0FFF8D7D8h, 1B1h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A01A003h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 20h
dd 0B0h, 0FFF8D94Ch, 6Bh, 80E4100h, 0E430283h, 0A420230h
dd 0C341080Eh, 0B41040Eh, 2Ch, 0D4h, 0FFF8D994h, 0A5h
dd 80E4100h, 0E410286h,	4303830Ch, 5602400Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 20h, 104h, 0FFF8DA0Ch, 73h
dd 80E4100h, 0E430283h,	0A470230h, 0C341080Eh, 0B44040Eh
dd 20h,	128h, 0FFF8DA5Ch, 6Fh, 80E4100h, 0E430283h, 0A460230h
dd 0C341080Eh, 0B41040Eh, 2Ch, 14Ch, 0FFF8DAA8h, 62h, 80E4100h
dd 0E410286h, 4303830Ch, 5502300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 1Ch,	17Ch, 0FFF8DADCh, 5Fh, 300E4300h
dd 40E0A63h, 0A6D0B46h,	0B41040Eh, 18h,	19Ch, 0FFF8DB1Ch
dd 51h,	300E4300h, 40E0A66h, 0B43h, 1Ch, 1B8h, 0FFF8DB54h
dd 63h,	300E4300h, 40E0A67h, 0A6D0B46h,	0B41040Eh, 1Ch
dd 1D8h, 0FFF8DB98h, 6Bh, 300E4300h, 40E0A70h, 0A6D0B45h
dd 0B41040Eh, 2Ch, 1F8h, 0FFF8DBE4h, 6Ah, 80E4100h, 0E430283h
dd 0E0A6B20h, 0EC34108h, 670B4804h, 41080E0Ah, 45040EC3h
dd 0Bh,	18h, 228h, 0FFF8DC20h, 75h, 300E4300h, 40E0A6Ch
dd 0B41h, 54h, 244h, 0FFF8DC7Ch, 1F0h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0A011803h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 0E0A4302h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 18h, 29Ch, 0FFF8DE14h, 79h,	300E4300h, 40E0A6Dh
dd 0B44h, 2Ch, 2B8h, 0FFF8DE74h, 6Fh, 80E4100h,	0E410286h
dd 4303830Ch, 4402300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	20h, 2E8h, 0FFF8DEB4h, 3Ah, 80E4100h, 0E430283h
dd 0E0A6F30h, 0EC34108h, 0B4104h, 3Ch, 30Ch, 0FFF8DECCh
dd 259h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0A4402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 20h, 34Ch, 0FFF8E0E8h, 69h, 80E4100h
dd 0E430287h, 0E0A7C30h, 0EC74108h, 0B4304h, 54h, 370h
dd 0FFF8E130h, 14Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0ACC02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 6A0B4504h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 18h, 3C8h, 0FFF8E228h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 1Ch, 3E4h, 0FFF8E260h
dd 63h,	300E4300h, 40E0A67h, 0A6D0B46h,	0B41040Eh, 2Ch
dd 404h, 0FFF8E2A4h, 6Ah, 80E4100h, 0E430283h, 0E0A6B20h
dd 0EC34108h, 670B4804h, 41080E0Ah, 45040EC3h, 0Bh, 18h
dd 434h, 0FFF8E2E0h, 51h, 300E4300h, 40E0A66h, 0B43h, 38h
dd 450h, 0FFF8E318h, 9Bh, 80E4100h, 0E410286h, 4303830Ch
dd 7702300Eh, 410C0E0Ah, 41080EC3h, 46040EC6h, 0E0A4F0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF8E360h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 38h, 0FFF8E368h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 54h, 0FFF8E370h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 70h, 0FFF8E378h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF8E368h
dd 4Bh,	80E4100h, 0E430283h, 0A400230h,	0C341080Eh, 0B41040Eh
dd 18h,	40h, 0FFF8E390h, 37h, 200E4300h, 40E0A6Ah, 0B45h
dd 50h,	5Ch, 0FFF8E3ACh, 179h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 20F00E4Ch,	0E40E4302h, 0F00E4320h,	0E5B0220h
dd 0E4320E0h, 690220F0h, 4120EC0Eh, 5720F00Eh, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 84h, 0B0h, 0FFF8E4D4h
dd 4D0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0C00E4C05h, 1070321h, 4321A00Eh, 7821C00Eh, 4321B40Eh
dd 221C00Eh, 21B00E78h,	21C00E43h, 21BC0E4Ch, 21C00E41h
dd 0BC0EAF02h, 0C00E4121h, 0B40E7E21h, 0C00E4321h, 0E540221h
dd 0E4121BCh, 0A7121C0h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 0BC0E5102h, 0C00E4121h, 21h
dd 2Ch,	138h, 0FFF8E91Ch, 0A7h,	80E4100h, 0E410286h, 4303830Ch
dd 8202300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 34h
dd 168h, 0FFF8E994h, 0FEh, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2600E43h, 100E0A4Fh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 2Ch, 1A0h, 0FFF8EA5Ch, 0ADh, 80E4100h
dd 0E410286h, 4303830Ch, 6E02300Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0Bh, 18h,	1D0h, 0FFF8EADCh, 5Bh, 300E4300h
dd 40E0A73h, 0B42h, 18h, 1ECh, 0FFF8EB1Ch, 2Fh,	300E4300h
dd 40E0A66h, 0B41h, 44h, 208h, 0FFF8EB30h, 152h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 8C00E46h, 8BC0E61h
dd 8C00E41h, 0BC0E5F02h, 0C00E4108h, 0A630208h,	0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 3Ch, 250h, 0FFF8EC3Ch
dd 12Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0D00E4605h, 0AFD0208h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 38h, 290h, 0FFF8ED2Ch, 0A6h
dd 80E4100h, 0E410286h,	4303830Ch, 4902300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A710Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 18h, 2CCh, 0FFF8ED98h, 2Ch,	200E4300h, 40E0A63h
dd 0B41h, 20h, 2E8h, 0FFF8EDA8h, 4Fh, 80E4100h,	0E430283h
dd 0A400230h, 0C341080Eh, 0B45040Eh, 20h, 30Ch,	0FFF8EDD4h
dd 0A8h, 400E4300h, 3C0E4402h, 4F400E41h, 41040E0Ah, 0Bh
dd 38h,	330h, 0FFF8EE58h, 158h,	80E4100h, 0E410286h, 4303830Ch
dd 7302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0A58020Bh
dd 0C3410C0Eh, 0C641080Eh, 0B46040Eh, 20h, 36Ch, 0FFF8EF74h
dd 74h,	80E4100h, 0E430283h, 0A690230h,	0C341080Eh, 0B41040Eh
dd 18h,	390h, 0FFF8EFC4h, 44h, 200E4300h, 40E0A69h, 0B44h
dd 18h,	3ACh, 0FFF8EFECh, 2Dh, 200E4300h, 40E0A64h, 0B41h
dd 20h,	3C8h, 0FFF8F000h, 0AFh,	80E4100h, 0E430283h, 0A6C0240h
dd 0C341080Eh, 0B43040Eh, 20h, 3ECh, 0FFF8F08Ch, 0B7h
dd 80E4100h, 0E430283h,	0A740240h, 0C341080Eh, 0B43040Eh
dd 18h,	410h, 0FFF8F120h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 18h,	42Ch, 0FFF8F12Ch, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 18h,	448h, 0FFF8F138h, 28h, 200E4300h, 40E0A5Fh, 0B41h
dd 20h,	464h, 0FFF8F144h, 110h,	80E4100h, 0E430283h, 0A570240h
dd 0C341080Eh, 0B44040Eh, 20h, 488h, 0FFF8F230h, 64h, 80E4100h
dd 0E430283h, 0E0A7330h, 0EC34108h, 0B4404h, 20h, 4ACh
dd 0FFF8F270h, 95h, 80E4100h, 0E430283h, 0A4F0230h, 0C341080Eh
dd 0B44040Eh, 44h, 4D0h, 0FFF8F2E4h, 31Ah, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 6C0EA902h
dd 2700E41h, 140E0AE6h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 3Ch, 518h, 0FFF8F5B8h, 0AEh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A7702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 18h, 558h, 0FFF8F628h, 5Ah,	400E4300h, 0E0A5102h
dd 0B4104h, 44h, 574h, 0FFF8F668h, 84h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A53h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A570B44h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 18h, 5BCh, 0FFF8F6A4h, 51h, 400E4300h
dd 0E0A4802h, 0B4104h, 18h, 5D8h, 0FFF8F6DCh, 2ACh, 400E4300h
dd 0A026303h, 0B42040Eh, 3Ch, 5F4h, 0FFF8F96Ch,	152h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 412C0E66h
dd 7B02300Eh, 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h
dd 0Bh,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF8FA68h
dd 67h,	80E4100h, 0E430283h, 0E0A7D30h,	0EC34108h, 0B4204h
dd 3Ch,	40h, 0FFF8FAACh, 0EDh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AB702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 3Ch, 80h
dd 0FFF8FB5Ch, 111h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0E0AFB02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4204h, 54h, 0C0h, 0FFF8FC30h
dd 1C9h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A012C03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 0E0A6902h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4704h, 3Ch, 118h, 0FFF8FDA4h
dd 0EDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AB702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 3Ch, 158h, 0FFF8FE54h, 0D1h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0ABB02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 44h, 198h, 0FFF8FEE8h, 108h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AC3h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A6B0B48h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B41040Eh, 38h, 1E0h, 0FFF8FFA8h, 67h, 80E4100h
dd 0E410286h, 4303830Ch, 4502200Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 44h,	21Ch, 0FFF8FFD4h, 0A7h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A51h, 0C0EC341h, 80EC641h
dd 40EC741h, 0A670B42h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B46040Eh, 54h, 264h, 0FFF90034h, 10Ah, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A5F02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4604h
dd 140E0A43h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 18h, 2BCh, 0FFF900E8h, 2Fh, 300E4300h, 40E0A66h
dd 0B41h, 20h, 2D8h, 0FFF900FCh, 87h, 80E4100h,	0E430283h
dd 0E0A7B30h, 0EC34108h, 0B4404h, 20h, 2FCh, 0FFF90160h
dd 87h,	80E4100h, 0E430283h, 0E0A7D30h,	0EC34108h, 0B4204h
dd 28h,	320h, 0FFF901C4h, 69h, 80E4100h, 0E410286h, 4303830Ch
dd 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 1Ch, 34Ch
dd 0FFF90204h, 67h, 300E4300h, 40E0A69h, 0A6D0B48h, 0B41040Eh
dd 1Ch,	36Ch, 0FFF9024Ch, 67h, 300E4300h, 40E0A6Ah, 0A6D0B47h
dd 0B41040Eh, 18h, 38Ch, 0FFF90294h, 61h, 300E4300h, 40E0A77h
dd 0B42h, 1Ch, 3A8h, 0FFF902DCh, 6Fh, 300E4300h, 40E0A72h
dd 0A6D0B47h, 0B41040Eh, 3Ch, 3C8h, 0FFF9032Ch,	11Dh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AE702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 34h, 408h, 0FFF9040Ch, 5Dh,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Eh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 18h, 440h, 0FFF90434h, 35h
dd 300E4300h, 40E0A6Ch,	0B41h, 2Ch, 45Ch, 0FFF90450h, 57h
dd 80E4100h, 0E410286h,	4303830Ch, 4202300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 18h, 48Ch, 0FFF90478h, 51h
dd 300E4300h, 40E0A65h,	0B44h, 3Ch, 4A8h, 0FFF904B0h, 11Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AFC02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 18h, 4E8h, 0FFF90590h, 51h, 300E4300h
dd 40E0A65h, 0B44h, 28h, 504h, 0FFF905C8h, 67h,	80E4100h
dd 0E410286h, 4303830Ch, 0A7A300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B43040Eh, 18h, 530h, 0FFF90604h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 28h, 54Ch, 0FFF9063Ch, 67h, 80E4100h,	0E410286h
dd 4303830Ch, 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh
dd 18h,	578h, 0FFF90678h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	594h, 0FFF906B0h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 20h,	5B0h, 0FFF906E8h, 4Dh, 80E4100h, 0E430283h, 0A420230h
dd 0C341080Eh, 0B41040Eh, 34h, 5D4h, 0FFF90714h, 6Dh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A5Eh
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 20h, 60Ch, 0FFF9074Ch
dd 4Dh,	80E4100h, 0E430283h, 0A420230h,	0C341080Eh, 0B41040Eh
dd 20h,	630h, 0FFF90778h, 87h, 80E4100h, 0E430283h, 0E0A7B30h
dd 0EC34108h, 0B4404h, 20h, 654h, 0FFF907DCh, 54h, 80E4100h
dd 0E430283h, 0A490230h, 0C341080Eh, 0B41040Eh,	20h, 678h
dd 0FFF9080Ch, 54h, 80E4100h, 0E430283h, 0A490230h, 0C341080Eh
dd 0B41040Eh, 20h, 69Ch, 0FFF9083Ch, 54h, 80E4100h, 0E430283h
dd 0A490230h, 0C341080Eh, 0B41040Eh, 20h, 6C0h,	0FFF9086Ch
dd 54h,	80E4100h, 0E430283h, 0A490230h,	0C341080Eh, 0B41040Eh
dd 2Ch,	6E4h, 0FFF9089Ch, 52h, 80E4100h, 0E410286h, 4303830Ch
dd 4502300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 34h
dd 714h, 0FFF908C0h, 0A5h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A76h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 48h, 74Ch, 0FFF90930h, 0D6h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 49020B44h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 48040EC7h, 0Bh, 3Ch, 798h, 0FFF909BCh
dd 0CEh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A4702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 18h, 7D8h, 0FFF90A4Ch, 2Ch, 200E4300h
dd 40E0A63h, 0B41h, 18h, 7F4h, 0FFF90A5Ch, 28h,	200E4300h
dd 40E0A5Fh
dd 0B41h, 18h, 810h, 0FFF90A68h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 3Ch, 82Ch, 0FFF90A74h, 191h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A018003h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh
dd 18h,	86Ch, 0FFF90BC8h, 2Fh, 300E4300h, 40E0A66h, 0B41h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF90BC4h
dd 9Dh,	80E4100h, 0E430283h, 0A920220h,	0C341080Eh, 0B41040Eh
dd 3Ch,	40h, 0FFF90C40h, 83h, 80E4100h,	0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 34h, 80h
dd 0FFF90C84h, 7Bh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2200E43h, 100E0A6Ch,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 3Ch, 0B8h, 0FFF90CC8h, 0FEh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AED02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 20h,	0F8h, 0FFF90D88h, 0A3h,	80E4100h, 0E430283h, 0A7A0240h
dd 0C341080Eh, 0B41040Eh, 40h, 11Ch, 0FFF90E08h, 541h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 800E4605h, 4BF0303h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF912F0h
dd 0CBh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AAE02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 1Ch, 5Ch, 0FFF9137Ch, 74h, 200E4300h
dd 40E0A78h, 0A660B41h,	0B46040Eh, 18h,	7Ch, 0FFF913D0h
dd 44h,	200E4300h, 40E0A77h, 0B45h, 2Ch, 98h, 0FFF913F8h
dd 6Eh,	80E4100h, 0E410286h, 4303830Ch,	5D02300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 3Ch, 0C8h, 0FFF91438h, 77h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 108h, 0FFF91470h, 79h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 300E4305h
dd 0E0A6202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 34h, 148h, 0FFF914ACh, 4Eh,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	7F300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 41040EC7h, 0Bh, 20h, 180h, 0FFF914C4h, 7Dh
dd 80E4100h, 0E430283h,	0E0A7730h, 0EC34108h, 0B4404h
dd 18h,	1A4h, 0FFF91520h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	1C0h, 0FFF91558h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	1DCh, 0FFF91590h, 79h, 300E4300h, 40E0A6Dh, 0B44h
dd 18h,	1F8h, 0FFF915F0h, 89h, 300E4300h, 40E0A7Dh, 0B44h
dd 18h,	214h, 0FFF91660h, 79h, 300E4300h, 40E0A6Dh, 0B44h
dd 18h,	230h, 0FFF916C0h, 89h, 300E4300h, 40E0A7Dh, 0B44h
dd 18h,	24Ch, 0FFF91730h, 89h, 300E4300h, 40E0A7Dh, 0B44h
dd 18h,	268h, 0FFF917A0h, 89h, 300E4300h, 40E0A7Dh, 0B44h
dd 18h,	284h, 0FFF91810h, 79h, 300E4300h, 40E0A6Dh, 0B44h
dd 3Ch,	2A0h, 0FFF91870h, 1C1h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ADD02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 34h, 2E0h
dd 0FFF919F4h, 0F2h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A62h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 2Ch, 318h, 0FFF91AB0h, 6Fh, 80E4100h,	0E410286h
dd 4303830Ch, 4202300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	3Ch, 348h, 0FFF91AF0h, 107h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A8402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 34h,	388h, 0FFF91BB8h, 103h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A8Bh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 18h, 3C0h, 0FFF91C84h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 18h, 3DCh, 0FFF91C90h, 69h,	300E4300h
dd 0E0A6002h, 0B4104h, 20h, 3F8h, 0FFF91CE0h, 8Dh, 80E4100h
dd 0E430283h, 0E0A7F30h, 0EC34108h, 0B4404h, 18h, 41Ch
dd 0FFF91D4Ch, 0B8h, 400E4300h,	0E0AAF02h, 0B4104h, 18h
dd 438h, 0FFF91DE8h, 28h, 200E4300h, 40E0A5Fh, 0B41h, 3Ch
dd 454h, 0FFF91DF4h, 90h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4704h, 20h, 494h
dd 0FFF91E44h, 116h, 80E4100h, 0E430283h, 0A440230h, 0C341080Eh
dd 0B43040Eh, 18h, 4B8h, 0FFF91F38h, 25h, 200E4300h, 40E0A5Ch
dd 0B41h, 18h, 4D4h, 0FFF91F44h, 35h, 200E4300h, 40E0A6Ch
dd 0B41h, 18h, 4F0h, 0FFF91F60h, 37h, 200E4300h, 40E0A6Eh
dd 0B41h, 18h, 50Ch, 0FFF91F7Ch, 35h, 200E4300h, 40E0A6Ch
dd 0B41h, 18h, 528h, 0FFF91F98h, 37h, 200E4300h, 40E0A6Eh
dd 0B41h, 18h, 544h, 0FFF91FB4h, 35h, 200E4300h, 40E0A6Ch
dd 0B41h, 18h, 560h, 0FFF91FD0h, 37h, 200E4300h, 40E0A6Eh
dd 0B41h, 34h, 57Ch, 0FFF91FECh, 61h, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Eh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 34h, 5B4h, 0FFF92018h, 61h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A4Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 3Ch
dd 5ECh, 0FFF92044h, 99h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5F02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 34h, 62Ch
dd 0FFF920A0h, 85h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A52h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 3Ch, 664h, 0FFF920F0h, 352h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A5402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 34h,	6A4h, 0FFF92404h, 68h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A59h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 18h, 6DCh, 0FFF92434h, 40h,	300E4300h
dd 40E0A77h, 0B41h, 3Ch, 6F8h, 0FFF92458h, 25Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AA302h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4204h, 18h, 738h, 0FFF92678h, 40h,	300E4300h, 40E0A77h
dd 0B41h, 54h, 754h, 0FFF9269Ch, 688h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0A8E02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4304h
dd 5C0E01BCh, 2600E41h,	415C0E49h, 0CB03600Eh, 415C0E01h
dd 600Eh, 3Ch, 7ACh, 0FFF92CCCh, 296h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 140E0A77h
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B42h, 20h
dd 7ECh, 0FFF92F24h, 9Dh, 80E4100h, 0E430283h, 0A4C0230h
dd 0C341080Eh
dd 0B43040Eh, 54h, 810h, 0FFF92FA0h, 1E8h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A013F03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 0E0A5902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 54h, 868h, 0FFF93130h, 18Dh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A014803h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 140E0A6Bh, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B41h, 18h, 8C0h, 0FFF93268h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 8DCh, 0FFF93274h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 8F8h, 0FFF93280h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 34h, 914h, 0FFF9328Ch, 4Eh, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	7F300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 41040EC7h, 0Bh, 2Ch, 94Ch, 0FFF932A4h, 6Eh
dd 80E4100h, 0E430283h,	0E0A7030h, 0EC34108h, 6B0B4704h
dd 41080E0Ah, 41040EC3h, 0Bh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 38h, 1Ch,	0FFF932CCh
dd 0ABh, 80E4100h, 0E410286h, 4303830Ch, 6A02300Eh, 410C0E0Ah
dd 41080EC3h, 47040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 18h, 58h, 0FFF9333Ch, 2Fh, 300E4300h, 40E0A66h
dd 0B41h, 2Ch, 74h, 0FFF93350h,	86h, 80E4100h, 0E430283h
dd 0A4A0230h, 0C341080Eh, 0B45040Eh, 80E0A6Bh, 40EC341h
dd 0B41h, 20h, 0A4h, 0FFF933A8h, 87h, 80E4100h,	0E430283h
dd 0E0A7B30h, 0EC34108h, 0B4404h, 18h, 0C8h, 0FFF9340Ch
dd 7Bh,	400E4300h, 40E0A69h, 0B44h, 18h, 0E4h, 0FFF9346Ch
dd 2Fh,	300E4300h, 40E0A66h, 0B41h, 28h, 100h, 0FFF93480h
dd 69h,	80E4100h, 0E410286h, 4303830Ch,	0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 28h, 12Ch, 0FFF934C0h, 6Dh, 80E4100h
dd 0E410286h, 4303830Ch, 0A7D300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B44040Eh, 34h, 158h, 0FFF93504h, 0A1h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Fh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B44h, 28h, 190h, 0FFF93570h, 8Bh
dd 80E4100h, 0E410286h,	4303830Ch, 0A7E300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B43040Eh, 18h, 1BCh, 0FFF935D0h, 51h, 300E4300h
dd 40E0A65h, 0B44h, 2Ch, 1D8h, 0FFF93608h, 8Bh,	80E4100h
dd 0E410286h, 4303830Ch, 4002300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 18h,	208h, 0FFF93664h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 58h, 224h, 0FFF9369Ch, 0DFh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 0A6D0B44h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B48040Eh, 100E0A67h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B46h, 58h, 280h, 0FFF93720h, 0D7h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A4Fh, 0C0EC341h, 80EC641h, 40EC741h, 0A650B44h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B48040Eh, 100E0A67h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B46h, 18h, 2DCh, 0FFF9379Ch
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 18h, 2F8h, 0FFF937D4h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 44h, 314h, 0FFF9380Ch
dd 0E2h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A5Fh, 0C0EC341h, 80EC641h, 40EC741h, 0A670B44h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 18h
dd 35Ch, 0FFF938A8h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 378h, 0FFF938E0h, 53h, 300E4300h, 40E0A6Ah, 0B43h, 18h
dd 394h, 0FFF93918h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 3B0h, 0FFF93950h, 53h, 300E4300h, 40E0A6Ah, 0B43h, 18h
dd 3CCh, 0FFF93988h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 3E8h, 0FFF939C0h, 7Bh, 300E4300h, 0E0A4902h,	0B4404h
dd 18h,	404h, 0FFF93A20h, 5Dh, 300E4300h, 40E0A6Bh, 0B42h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF93A4Ch
dd 3Bh,	80E4100h, 0E430283h, 0E0A6C30h,	0EC34108h, 0B4504h
dd 20h,	40h, 0FFF93A64h, 46h, 80E4100h,	0E430283h, 0E0A7730h
dd 0EC34108h, 0B4504h, 20h, 64h, 0FFF93A88h, 4Ch, 80E4100h
dd 0E430283h, 0A410230h, 0C341080Eh, 0B41040Eh,	34h, 88h
dd 0FFF93AB0h, 6Fh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A5Ch,	0C0EC341h, 80EC641h, 40EC741h
dd 0B45h, 2Ch, 0C0h, 0FFF93AE8h, 68h, 80E4100h,	0E430283h
dd 0E0A7830h, 0EC34108h, 5D0B4704h, 41080E0Ah, 41040EC3h
dd 0Bh,	3Ch, 0F0h, 0FFF93B20h, 37Bh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A013403h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 20h,	130h, 0FFF93E5Ch, 9Fh, 80E4100h, 0E430283h, 0A900230h
dd 0C341080Eh, 0B45040Eh, 44h, 154h, 0FFF93ED8h, 8Dh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 6E300E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 41040EC7h, 0A48020Bh, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 18h, 19Ch, 0FFF93F20h
dd 7Dh,	300E4300h, 40E0A72h, 0B43h, 18h, 1B8h, 0FFF93F84h
dd 4Dh,	300E4300h, 0E0A4402h, 0B4104h, 2Ch, 1D4h, 0FFF93FB8h
dd 1A2h, 80E4100h, 0E410286h, 4303830Ch, 5603300Eh, 0C0E0A01h
dd 80EC341h, 40EC641h, 0B43h, 3Ch, 204h, 0FFF9412Ch, 185h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0A011403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 38h, 244h, 0FFF94274h, 0C7h
dd 80E4100h, 0E410286h,	4303830Ch, 8502300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 20h, 280h, 0FFF94300h, 87h,	300E4300h, 0E0A4702h
dd 520B4204h, 46040E0Ah, 0Bh, 1Ch, 2A4h, 0FFF94364h, 65h
dd 300E4300h, 40E0A6Ah,	0A6B0B47h, 0B41040Eh, 1Ch, 2C4h
dd 0FFF943ACh, 87h, 300E4300h, 40E0A6Eh, 0A6B0B47h, 0B41040Eh
dd 38h,	2E4h, 0FFF94414h, 9Fh, 80E4100h, 0E410286h, 4303830Ch
dd 4002300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h, 0E0A6B0Bh
dd 0EC3410Ch, 0EC64108h, 0B4304h, 1Ch, 320h, 0FFF94478h
dd 65h,	300E4300h, 40E0A6Ah, 0A6B0B47h,	0B41040Eh, 48h
dd 340h, 0FFF944C0h, 109h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A41h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B0020B42h, 41100E0Ah, 410C0EC3h, 41080EC6h
dd 45040EC7h, 0Bh, 2Ch,	38Ch, 0FFF94580h, 0ABh,	80E4100h
dd 0E430283h, 0E0A7B20h, 0EC34108h, 670B4804h, 41080E0Ah
dd 48040EC3h, 0Bh, 44h,	3BCh, 0FFF945FCh, 125h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A7Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 0A6B0B48h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 34h, 404h, 0FFF946DCh
dd 53Ah, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2400E43h
dd 100E0AF3h, 0C0EC341h, 80EC641h, 40EC741h, 0B48h, 1Ch
dd 43Ch, 0FFF94BE0h, 65h, 300E4300h, 40E0A6Ah, 0A6B0B47h
dd 0B41040Eh, 18h, 45Ch, 0FFF94C28h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 478h, 0FFF94C60h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 494h, 0FFF94C98h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 34h, 4B0h, 0FFF94CD0h, 7Fh, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A44h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 18h, 4E8h, 0FFF94D18h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 3Ch, 504h, 0FFF94D50h, 0AFh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 544h, 0FFF94DC0h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 3Ch, 560h, 0FFF94DF8h, 383h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A035A03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 18h, 5A0h, 0FFF9513Ch, 34h, 200E4300h, 40E0A6Bh
dd 0B41h, 18h, 5BCh, 0FFF95154h, 0A1h, 300E4300h, 40E0A77h
dd 0B42h, 2Ch, 5D8h, 0FFF951DCh, 0F3h, 80E4100h, 0E430283h
dd 0A530230h, 0C341080Eh, 0B48040Eh, 80E0A6Dh, 40EC341h
dd 0B42h, 18h, 608h, 0FFF952A0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 54h, 624h, 0FFF952D8h, 1AFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A014C03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 140E0A57h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 18h, 67Ch, 0FFF95430h, 40h, 200E4300h, 40E0A73h
dd 0B45h, 38h, 698h, 0FFF95454h, 93h, 80E4100h,	0E410286h
dd 4303830Ch, 6802300Eh, 410C0E0Ah, 41080EC3h, 45040EC6h
dd 0E0A570Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 34h, 6D4h
dd 0FFF954ACh, 53h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A44h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 54h, 70Ch, 0FFF954C8h, 0AFh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A5602h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	54h, 764h, 0FFF95520h, 93h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A4002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 630B4104h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	3Ch, 7BCh, 0FFF9555Ch, 137h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A5F02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h
dd 54h,	7FCh, 0FFF95654h, 0D3h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 18h, 854h, 0FFF956D0h, 5Bh
dd 300E4300h, 40E0A74h,	0B41h, 18h, 870h, 0FFF95710h, 28h
dd 200E4300h, 40E0A5Fh,	0B41h, 54h, 88Ch, 0FFF9571Ch, 0ABh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6D0B4504h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0Bh, 18h, 8E4h, 0FFF95770h, 28h
dd 200E4300h, 40E0A5Fh,	0B41h, 2Ch, 900h, 0FFF9577Ch, 19Eh
dd 80E4100h, 0E410286h,	4303830Ch, 9103400Eh, 0C0E0A01h
dd 80EC341h, 40EC641h, 0B41h, 18h, 930h, 0FFF958ECh, 66h
dd 300E4300h, 0E0A5D02h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF95920h
dd 67h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A5602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 5Ch, 0FFF95948h, 2B8h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0A9402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 34h, 9Ch, 0FFF95BC0h, 83h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A55h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B42h, 34h, 0D4h, 0FFF95C0Ch, 99h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A66h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 2Ch
dd 10Ch, 0FFF95C70h, 0DFh, 80E4100h, 0E410286h,	4303830Ch
dd 0BC02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h,	0Bh, 18h
dd 13Ch, 0FFF95D20h, 34h, 200E4300h, 40E0A6Bh, 0B41h, 18h
dd 158h, 0FFF95D38h, 7Ah, 300E4300h, 40E0A69h, 0B44h, 18h
dd 174h, 0FFF95D98h, 74h, 300E4300h, 0E0A4202h,	0B4304h
dd 3Ch,	190h, 0FFF95DF0h, 198h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0ACA02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 20h, 1D0h
dd 0FFF95F48h, 0AFh, 80E4100h, 0E430283h, 0A900230h, 0C341080Eh
dd 0B43040Eh, 2Ch, 1F4h, 0FFF95FD4h, 15Fh, 80E4100h, 0E410286h
dd 4303830Ch, 0E402300Eh, 410C0E0Ah, 41080EC3h,	41040EC6h
dd 0Bh,	18h, 224h, 0FFF96104h, 70h, 300E4300h, 40E0A7Dh
dd 0B44h, 3Ch, 240h, 0FFF96158h, 28Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0A01EA03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 18h,	280h, 0FFF963A8h, 2Dh, 200E4300h, 40E0A60h, 0B45h
dd 20h,	29Ch, 0FFF963BCh, 3Bh, 80E4100h, 0E430283h, 0E0A7020h
dd 0EC34108h, 0B4104h, 20h, 2C0h, 0FFF963D4h, 3Bh, 80E4100h
dd 0E430283h, 0E0A7020h, 0EC34108h, 0B4104h, 2Ch, 2E4h
dd 0FFF963ECh, 87h, 80E4100h, 0E410286h, 4303830Ch, 5F02300Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 34h, 314h, 0FFF96444h
dd 0A8h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A99h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 28h
dd 34Ch, 0FFF964B4h, 47h, 80E4100h, 0E410286h, 4303830Ch
dd 0A7A300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 2Ch, 378h
dd 0FFF964D0h, 62h, 80E4100h, 0E410286h, 4303830Ch, 5502300Eh
dd 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 1Ch, 3A8h, 0FFF96504h
dd 45h,	200E4300h, 40E0A67h, 0A4F0B46h,	0B41040Eh, 18h
dd 3C8h, 0FFF9652Ch, 2Fh, 300E4300h, 40E0A66h, 0B41h, 2Ch
dd 3E4h, 0FFF96540h, 66h, 80E4100h, 0E430283h, 0E0A6D30h
dd 0EC34108h, 670B4604h, 41080E0Ah, 41040EC3h, 0Bh, 38h
dd 414h, 0FFF96578h, 6Fh, 80E4100h, 0E410286h, 4303830Ch
dd 0A74300Eh, 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 0C0E0A67h
dd 80EC341h, 40EC641h, 0B41h, 44h, 450h, 0FFF965ACh, 9Bh
dd 80E4100h, 0E410286h,	4303830Ch, 0A7E300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B47040Eh, 0C0E0A67h, 80EC341h, 40EC641h
dd 0A570B43h, 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 44h, 498h
dd 0FFF96600h, 9Bh, 80E4100h, 0E410286h, 4303830Ch, 0A7E300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B47040Eh, 0C0E0A67h, 80EC341h
dd 40EC641h, 0A570B43h,	0C3410C0Eh, 0C641080Eh,	0B45040Eh
dd 58h,	4E0h, 0FFF96654h, 118h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A7Ah, 0C0EC341h, 80EC641h
dd 40EC741h, 45020B41h,	41100E0Ah, 410C0EC3h, 41080EC6h
dd 48040EC7h, 0E0A770Bh, 0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4504h, 58h, 53Ch, 0FFF96710h, 158h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A54h, 0C0EC341h
dd 80EC641h, 40EC741h, 0BD020B43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 48040EC7h, 0E0A5F0Bh, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4504h, 58h, 598h, 0FFF9680Ch, 0C0h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 0A7C0B43h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B45040Eh, 100E0A57h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B45h, 58h, 5F4h, 0FFF96870h, 108h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A54h, 0C0EC341h, 80EC641h, 40EC741h, 75020B43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 48040EC7h, 0E0A570Bh
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4504h, 54h, 650h
dd 0FFF9691Ch, 1D4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0ABA02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 20B4304h, 140E0A92h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 6Ch, 6A8h, 0FFF96A98h
dd 507h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A016203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 0E0AFB02h, 0EC34114h,	0EC64110h
dd 0EC7410Ch, 0EC54108h, 20B4504h, 140E0AC9h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 18h, 718h, 0FFF96F30h
dd 34h,	200E4300h, 40E0A6Bh, 0B41h, 18h, 734h, 0FFF96F48h
dd 39h,	200E4300h, 40E0A69h, 0B44h, 20h, 750h, 0FFF96F68h
dd 75h,	80E4100h, 0E430283h, 0E0A7130h,	0EC34108h, 0B4204h
dd 20h,	774h, 0FFF96FBCh, 75h, 80E4100h, 0E430283h, 0E0A7130h
dd 0EC34108h, 0B4204h, 20h, 798h, 0FFF97010h, 75h, 80E4100h
dd 0E430283h, 0E0A7130h, 0EC34108h, 0B4204h, 38h, 7BCh
dd 0FFF97064h, 0B7h, 80E4100h, 0E410286h, 4303830Ch, 5D02300Eh
dd 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A690Bh, 0EC3410Ch
dd 0EC64108h, 0B4104h, 20h, 7F8h, 0FFF970E0h, 75h, 80E4100h
dd 0E430283h, 0E0A7130h, 0EC34108h, 0B4204h, 38h, 81Ch
dd 0FFF97134h, 0B7h, 80E4100h, 0E410286h, 4303830Ch, 5D02300Eh
dd 410C0E0Ah, 41080EC3h, 48040EC6h, 0E0A690Bh, 0EC3410Ch
dd 0EC64108h, 0B4104h, 44h, 858h, 0FFF971B0h, 80h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 7E300E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 45040EC7h, 0E0A6B0Bh, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 0B4104h, 48h, 8A0h, 0FFF971E8h
dd 121h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A5Bh, 0C0EC341h, 80EC641h, 40EC741h, 8B020B44h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 45040EC7h, 0Bh, 3Ch
dd 8ECh, 0FFF972C0h, 0F5h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8802h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 92Ch
dd 0FFF97378h, 30h, 200E4300h, 40E0A63h, 0B45h,	1Ch, 948h
dd 0FFF9738Ch, 61h, 300E4300h, 40E0A67h, 0A6B0B46h, 0B41040Eh
dd 3Ch,	968h, 0FFF973D0h, 0A5h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A8E02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 18h, 9A8h
dd 0FFF97438h, 19Fh, 300E4300h,	0A016E03h, 0B43040Eh, 18h
dd 9C4h, 0FFF975BCh, 28h, 200E4300h, 40E0A5Fh, 0B41h, 18h
dd 9E0h, 0FFF975C8h, 1DAh, 300E4300h, 0A017403h, 0B45040Eh
dd 18h,	9FCh, 0FFF97788h, 75h, 300E4300h, 0E0A6C02h, 0B4104h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 3Ch, 1Ch,	0FFF977CCh
dd 18Eh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 5Ch, 0FFF9791Ch, 181h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A012203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 3Ch, 9Ch,	0FFF97A60h, 0C7h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A8D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 3Ch,	0DCh, 0FFF97AE8h, 192h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8402h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 11Ch
dd 0FFF97C3Ch, 18Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0A012203h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 54h, 15Ch, 0FFF97D8Ch
dd 17Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6B02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4204h,	140E0A4Ch, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B48h, 54h, 1B4h, 0FFF97EB0h, 194h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6B02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4204h,	140E0A67h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B45h, 2Ch, 20Ch, 0FFF97FECh, 111h
dd 80E4100h, 0E410286h,	4303830Ch, 6602400Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 18h, 23Ch, 0FFF980D0h, 2Ch
dd 200E4300h, 40E0A63h,	0B41h, 18h, 258h, 0FFF980E0h, 28h
dd 200E4300h, 40E0A5Fh,	0B41h, 18h, 274h, 0FFF980ECh, 23h
dd 200E4300h, 40E0A5Ah,	0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF980DCh
dd 9Ch,	80E4100h, 0E430283h, 0A910230h,	0C341080Eh, 0B41040Eh
dd 20h,	40h, 0FFF98154h, 7Ch, 80E4100h,	0E430283h, 0E0A6A40h
dd 0EC34108h, 0B4104h, 34h, 64h, 0FFF981ACh, 10Ah, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0AF1h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 18h, 9Ch, 0FFF98280h
dd 2Fh,	300E4300h, 40E0A66h, 0B41h, 2Ch, 0B8h, 0FFF98294h
dd 86h,	80E4100h, 0E430283h, 0A470230h,	0C341080Eh, 0B48040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 18h, 0E8h, 0FFF982ECh, 53h
dd 300E4300h, 40E0A69h,	0B44h, 28h, 104h, 0FFF98324h, 67h
dd 80E4100h, 0E410286h,	4303830Ch, 0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 18h, 130h, 0FFF98360h, 53h, 300E4300h
dd 40E0A6Ah, 0B43h, 28h, 14Ch, 0FFFC8CECh, 96h,	80E4100h
dd 0E410286h, 4303830Ch, 8E02300Eh, 0C3410C0Eh,	0C641080Eh
dd 40Eh, 28h, 178h, 0FFF9836Ch,	67h, 80E4100h, 0E410286h
dd 4303830Ch, 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh
dd 28h,	1A4h, 0FFF983A8h, 67h, 80E4100h, 0E410286h, 4303830Ch
dd 0A7C300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 90h, 1D0h
dd 0FFF983E4h, 210h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A62h,	0C0EC341h, 80EC641h, 40EC741h
dd 6F020B45h, 41100E0Ah, 410C0EC3h, 41080EC6h, 42040EC7h
dd 0E0A5B0Bh, 0EC34110h, 0EC6410Ch, 0EC74108h, 7B0B4604h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 46040EC7h, 0E0A7B0Bh
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 770B4604h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 46040EC7h, 0Bh, 18h, 264h, 0FFF98560h
dd 51h,	300E4300h, 40E0A65h, 0B44h, 18h, 280h, 0FFF98598h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 29Ch, 0FFF985D0h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 2B8h, 0FFF98608h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 2D4h, 0FFF98640h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 2F0h, 0FFF98678h
dd 28h,	200E4300h, 40E0A5Fh, 0B41h, 20h, 30Ch, 0FFF98684h
dd 5Fh,	80E4100h, 0E430283h, 0E0A7530h,	0EC34108h, 0B4204h
dd 50h,	330h, 0FFF986C0h, 8C6h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2600E43h, 100E0A68h, 0C0EC341h, 80EC641h
dd 40EC741h, 1F030B43h,	415C0E03h, 4203600Eh, 415C0E01h
dd 0E50600Eh, 600E415Ch, 415C0E50h, 600Eh, 3Ch,	384h, 0FFF98F34h
dd 28Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A012903h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 3Ch, 3C4h, 0FFF99184h, 27Fh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A012703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 3Ch, 404h, 0FFF993C4h, 19Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A010703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 18h, 444h, 0FFF99520h, 5Fh, 400E4300h
dd 0E0A5602h, 0B4104h, 2Ch, 460h, 0FFF99564h, 6Ah, 80E4100h
dd 0E430283h, 0E0A6D30h, 0EC34108h, 6B0B4604h, 41080E0Ah
dd 41040EC3h, 0Bh, 48h,	490h, 0FFF995A0h, 102h,	80E4100h
dd 0E410286h, 4303830Ch, 9A02300Eh, 410C0E0Ah, 41080EC3h
dd 47040EC6h, 0E0A630Bh, 0EC3410Ch, 0EC64108h, 660B4304h
dd 410C0E0Ah, 41080EC3h, 45040EC6h, 0Bh, 2Ch, 4DCh, 0FFF99658h
dd 52h,	80E4100h, 0E410286h, 4303830Ch,	4502300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 50Ch, 0FFF9967Ch, 77h
dd 80E4100h, 0E430283h,	0A680230h, 0C341080Eh, 0B45040Eh
dd 18h,	530h, 0FFF996D0h, 2Eh, 200E4300h, 40E0A65h, 0B41h
dd 20h,	54Ch, 0FFF996E4h, 107h,	80E4100h, 0E430283h, 0ACA0240h
dd 0C341080Eh, 0B41040Eh, 38h, 570h, 0FFF997C8h, 0C8h
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0A6C020Bh, 0C3410C0Eh,	0C641080Eh
dd 0B45040Eh, 3Ch, 5ACh, 0FFF99854h, 0C4h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0AB302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 40h,	5ECh, 0FFF998D8h, 232h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0E00E4605h, 1D40302h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 3Ch
dd 630h, 0FFF99AC8h, 1D1h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7C02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 34h, 670h
dd 0FFF99C5Ch, 169h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 7D400E43h, 41100E0Ah, 410C0EC3h, 41080EC6h, 42040EC7h
dd 0Bh,	48h, 6A8h, 0FFF99D90h, 0EDh, 80E4100h, 0E410286h
dd 4303830Ch, 7302300Eh, 410C0E0Ah, 41080EC3h, 46040EC6h
dd 0E0A5B0Bh, 0EC3410Ch, 0EC64108h, 20B4304h, 0C0E0A41h
dd 80EC341h, 40EC641h, 0B45h, 3Ch, 6F4h, 0FFF99E34h, 14Dh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A7C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 58h, 734h, 0FFF99F44h, 144h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A8Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 78020B43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 45040EC7h, 0E0A5F0Bh, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 0B4504h, 98h, 790h, 0FFF9A02Ch
dd 3C1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0ABA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 4F0B4704h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 41040EC5h, 0E0A670Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 20B4504h, 140E0A72h, 100EC341h
dd 0C0EC641h, 80EC741h
dd 40EC541h, 40030B46h,	140E0A01h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B48h, 58h, 82Ch, 0FFF9A354h, 281h
dd 80E4100h, 0E410286h,	4303830Ch, 9102300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 30B4304h, 0E0A0102h,	0EC3410Ch, 0EC64108h, 20B4804h
dd 0C0E0A86h, 80EC341h,	40EC641h, 0B45h, 40h, 888h, 0FFF9A57Ch
dd 6E3h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0E00E4605h, 1B60301h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 44040EC5h, 0Bh, 58h, 8CCh, 0FFF9AC1Ch, 192h
dd 80E4100h, 0E410286h,	4303830Ch, 0A902300Eh, 410C0E0Ah
dd 41080EC3h, 48040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 20B4304h, 0C0E0A48h,	80EC341h, 40EC641h, 4A020B46h
dd 410C0E0Ah, 41080EC3h, 48040EC6h, 0Bh, 20h, 928h, 0FFF9AD54h
dd 0D6h, 80E4100h, 0E430283h, 0A820230h, 0C341080Eh, 0B41040Eh
dd 54h,	94Ch, 0FFF9AE08h, 1C7h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AE902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 7D0B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 47040EC5h, 0Bh, 48h
dd 9A4h, 0FFF9AF78h, 51Eh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 0E410201h, 0E41018Ch
dd 5E020190h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 40h,	9F0h, 0FFF9B44Ch, 6FEh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0E00E4605h
dd 1A00302h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 42040EC5h, 0Bh, 2Ch,	0A34h, 0FFF9BB08h, 89h,	80E4100h
dd 0E430283h, 0E0A7430h, 0EC34108h, 580B4704h, 41080E0Ah
dd 47040EC3h, 0Bh, 28h,	0A64h, 0FFF9BB64h, 53h,	80E4100h
dd 0E410286h, 4303830Ch, 0A79300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B44040Eh, 18h, 0A90h, 0FFF9BB8Ch, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 0AACh, 0FFF9BB98h, 1A1h,	300E4300h, 0A019803h
dd 0B41040Eh, 18h, 0AC8h, 0FFF9BD20h, 6Eh, 300E4300h, 0E0A6502h
dd 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFF9BD5Ch
dd 53h,	300E4300h, 40E0A69h, 0B44h, 18h, 38h, 0FFF9BD94h
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 18h, 54h, 0FFF9BDCCh
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 18h, 70h, 0FFF9BE04h
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 18h, 8Ch, 0FFF9BE3Ch
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 3Ch, 0A8h, 0FFF9BE74h
dd 83h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A7202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 0E8h, 0FFF9BEB8h, 51h, 300E4300h
dd 40E0A65h, 0B44h, 18h, 104h, 0FFF9BEF0h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 3Ch, 120h, 0FFF9BF28h, 13Fh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0E0AE402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 18h, 160h, 0FFF9C028h, 51h,	300E4300h, 40E0A66h
dd 0B43h, 18h, 17Ch, 0FFF9C060h, 5Dh, 300E4300h, 40E0A6Fh
dd 0B42h, 18h, 198h, 0FFF9C0A4h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 44h, 1B4h, 0FFF9C0DCh, 0A3h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Eh, 0C0EC341h
dd 80EC641h, 40EC741h, 0A630B45h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B46040Eh, 38h, 1FCh, 0FFF9C138h, 0B3h
dd 80E4100h, 0E410286h,	4303830Ch, 5402300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4304h, 2Ch, 238h, 0FFF9C1B0h, 102h, 80E4100h, 0E410286h
dd 4303830Ch, 5A02300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	20h, 268h, 0FFF9C284h, 8Fh, 80E4100h, 0E430283h
dd 0A4A0230h, 0C341080Eh, 0B41040Eh, 54h, 28Ch,	0FFF9C2F0h
dd 103h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A8602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 730B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 54h, 2E4h, 0FFF9C39Ch, 107h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A9F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 770B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 3Ch, 33Ch, 0FFF9C44Ch, 1CEh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A012203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 68h, 37Ch, 0FFF9C5DCh, 17Bh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0ACA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 770B4704h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0A55020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 44h, 3E8h, 0FFF9C6ECh
dd 0CFh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A68h, 0C0EC341h, 80EC641h, 40EC741h, 0A6D0B47h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B44040Eh, 3Ch
dd 430h, 0FFF9C774h, 0A7h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 28h, 470h
dd 0FFF9C7DCh, 40h, 80E4100h, 0E410286h, 4303830Ch, 0A6F200Eh
dd 0C3410C0Eh, 0C641080Eh, 0B45040Eh, 18h, 49Ch, 0FFF9C7F0h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 4B8h, 0FFF9C7F8h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 18h, 4D4h, 0FFF9C800h
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 34h, 4F0h, 0FFF9C808h
dd 0CAh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 6Ch
dd 528h, 0FFF9C89Ch, 243h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A010903h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 0E0AB102h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 730B4704h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	54h, 598h, 0FFF9CA70h, 1BEh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AA302h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4204h
dd 140E0A5Bh, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0B45h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFF9CBC0h
dd 15Ch, 80E4100h, 0E430283h, 0A640230h, 0C341080Eh, 0B47040Eh
dd 0E0AC702h, 0EC34108h, 0B4404h, 2Ch, 4Ch, 0FFF9CCECh
dd 96h,	80E4100h, 0E430283h, 0A570230h,	0C341080Eh, 0B48040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 20h, 7Ch,	0FFF9CD54h, 5Ch
dd 80E4100h, 0E430283h,	0A510230h, 0C341080Eh, 0B41040Eh
dd 2Ch,	0A0h, 0FFF9CD8Ch, 9Eh, 80E4100h, 0E430283h, 0A600230h
dd 0C341080Eh, 0B47040Eh, 80E0A6Bh, 40EC341h, 0B41h, 18h
dd 0D0h, 0FFF9CDFCh, 51h, 300E4300h, 40E0A65h, 0B44h, 18h
dd 0ECh, 0FFF9CE34h, 8Dh, 300E4300h, 0E0A4202h,	0B4304h
dd 18h,	108h, 0FFF9CEA8h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	124h, 0FFF9CEE0h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 18h,	140h, 0FFF9CF18h, 53h, 300E4300h, 40E0A6Ah, 0B43h
dd 18h,	15Ch, 0FFF9CF50h, 0AFh,	400E4300h, 40E0A7Eh, 0B43h
dd 28h,	178h, 0FFF9CFE4h, 46h, 80E4100h, 0E410286h, 4303830Ch
dd 0A79300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 18h, 1A4h
dd 0FFF9D000h, 51h, 300E4300h, 40E0A66h, 0B43h,	18h, 1C0h
dd 0FFF9D038h, 51h, 300E4300h, 40E0A66h, 0B43h,	28h, 1DCh
dd 0FFF9D070h, 67h, 80E4100h, 0E410286h, 4303830Ch, 0A7C300Eh
dd 0C3410C0Eh, 0C641080Eh, 0B41040Eh, 18h, 208h, 0FFF9D0ACh
dd 53h,	300E4300h, 40E0A6Ah, 0B43h, 3Ch, 224h, 0FFF9D0E4h
dd 0BDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A4E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 28h, 264h, 0FFF9D164h, 67h, 80E4100h
dd 0E410286h, 4303830Ch, 0A7C300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 20h, 290h, 0FFF9D1A0h, 83h, 80E4100h, 0E430283h
dd 0A4E0230h, 0C341080Eh, 0B41040Eh, 18h, 2B4h,	0FFF9D200h
dd 51h,	300E4300h, 40E0A65h, 0B44h, 18h, 2D0h, 0FFF9D238h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 2ECh, 0FFF9D270h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 308h, 0FFF9D2A8h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 324h, 0FFF9D2E0h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 340h, 0FFF9D318h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 18h, 35Ch, 0FFF9D350h
dd 51h,	300E4300h, 40E0A66h, 0B43h, 34h, 378h, 0FFF9D388h
dd 0DFh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A7Ah, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 1Ch
dd 3B0h, 0FFF9D430h, 9Bh, 300E4300h, 40E0A7Fh, 0A6D0B46h
dd 0B43040Eh, 34h, 3D0h, 0FFF9D4ACh, 0F3h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AA6h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 2Ch, 408h, 0FFF9D568h, 8Bh
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 2Ch, 438h, 0FFF9D5C4h, 8Bh
dd 80E4100h, 0E410286h,	4303830Ch, 4702300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 34h, 468h, 0FFF9D620h, 0BDh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Dh, 0C0EC341h, 80EC641h, 40EC741h, 0B42h, 18h
dd 4A0h, 0FFF9D6A8h, 77h, 300E4300h, 0E0A4802h,	0B4104h
dd 18h,	4BCh, 0FFF9D704h, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 18h,	4D8h, 0FFF9D760h, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 18h,	4F4h, 0FFF9D7C0h, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 1Ch,	510h, 0FFF9D820h, 9Bh, 300E4300h, 40E0A7Fh, 0A6D0B46h
dd 0B43040Eh, 2Ch, 530h, 0FFF9D89Ch, 92h, 80E4100h, 0E410286h
dd 4303830Ch, 5D02300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h
dd 0Bh,	18h, 560h, 0FFF9D900h, 79h, 300E4300h, 0E0A4602h
dd 0B4304h, 18h, 57Ch, 0FFF9D960h, 79h,	300E4300h, 0E0A4602h
dd 0B4304h, 18h, 598h, 0FFF9D9C0h, 79h,	300E4300h, 0E0A4602h
dd 0B4304h, 18h, 5B4h, 0FFF9DA20h, 77h,	300E4300h, 0E0A4802h
dd 0B4104h, 18h, 5D0h, 0FFF9DA7Ch, 77h,	300E4300h, 0E0A4802h
dd 0B4104h, 2Ch, 5ECh, 0FFF9DAD8h, 0ADh, 80E4100h, 0E410286h
dd 4303830Ch, 5F02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	18h, 61Ch, 0FFF9DB58h, 79h, 300E4300h, 0E0A4602h
dd 0B4304h, 18h, 638h, 0FFF9DBB8h, 79h,	300E4300h, 0E0A4602h
dd 0B4304h, 1Ch, 654h, 0FFF9DC18h, 9Bh,	300E4300h, 40E0A7Fh
dd 0A6D0B46h, 0B43040Eh, 18h, 674h, 0FFF9DC94h,	77h, 300E4300h
dd 0E0A4802h, 0B4104h, 18h, 690h, 0FFF9DCF0h, 77h, 300E4300h
dd 0E0A4802h, 0B4104h, 2Ch, 6ACh, 0FFF9DD4Ch, 0ADh, 80E4100h
dd 0E410286h, 4303830Ch, 5F02300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 18h,	6DCh, 0FFF9DDCCh, 79h, 300E4300h
dd 0E0A4602h, 0B4304h, 18h, 6F8h, 0FFF9DE2Ch, 79h, 300E4300h
dd 0E0A4602h, 0B4304h, 1Ch, 714h, 0FFF9DE8Ch, 9Bh, 300E4300h
dd 40E0A7Fh, 0A6D0B46h,	0B43040Eh, 20h,	734h, 0FFF9DF08h
dd 0B3h, 80E4100h, 0E430283h, 0A4C0230h, 0C341080Eh, 0B43040Eh
dd 18h,	758h, 0FFF9DF98h, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 18h,	774h, 0FFF9DFF4h, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 2Ch,	790h, 0FFF9E050h, 0ADh,	80E4100h, 0E410286h, 4303830Ch
dd 5F02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 18h
dd 7C0h, 0FFF9E0D0h, 80h, 300E4300h, 0E0A4902h,	0B4404h
dd 18h,	7DCh, 0FFF9E134h, 80h, 300E4300h, 0E0A4902h, 0B4404h
dd 1Ch,	7F8h, 0FFF9E198h, 9Fh, 300E4300h
dd 40E0A7Fh, 0A700B46h,	0B44040Eh, 18h,	818h, 0FFF9E218h
dd 79h,	300E4300h, 0E0A4602h, 0B4304h, 20h, 834h, 0FFF9E278h
dd 0B9h, 80E4100h, 0E430283h, 0A8D0230h, 0C341080Eh, 0B42040Eh
dd 18h,	858h, 0FFF9E310h, 77h, 300E4300h, 0E0A4802h, 0B4104h
dd 18h,	874h, 0FFF9E36Ch, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 20h,	890h, 0FFF9E3CCh, 0B7h,	300E4300h, 0E0A4E02h, 5A0B4304h
dd 46040E0Ah, 0Bh, 54h,	8B4h, 0FFF9E460h, 1ACh,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A6702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4604h, 140E0A79h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B47h, 18h, 90Ch, 0FFF9E5B4h, 47h,	300E4300h
dd 40E0A7Eh, 0B41h, 2Ch, 928h, 0FFF9E5E0h, 122h, 80E4100h
dd 0E410286h, 4303830Ch, 5702300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 20h,	958h, 0FFF9E6D4h, 0E2h,	80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B44040Eh,	2Ch, 97Ch
dd 0FFF9E794h, 136h, 80E4100h, 0E410286h, 4303830Ch, 5702300Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 18h, 9ACh, 0FFF9E89Ch
dd 0BDh, 300E4300h, 0E0A4E02h, 0B4304h,	18h, 9C8h, 0FFF9E940h
dd 79h,	300E4300h, 0E0A4602h, 0B4304h, 18h, 9E4h, 0FFF9E9A0h
dd 79h,	300E4300h, 0E0A4602h, 0B4304h, 18h, 0A00h, 0FFF9EA00h
dd 79h,	300E4300h, 0E0A4602h, 0B4304h, 18h, 0A1Ch, 0FFF9EA60h
dd 89h,	300E4300h, 40E0A7Fh, 0B42h, 34h, 0A38h,	0FFF9EAD0h
dd 11Ch, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 2Ch
dd 0A70h, 0FFF9EBB4h, 87h, 80E4100h, 0E430283h,	0A480220h
dd 0C341080Eh, 0B47040Eh, 80E0A55h, 40EC341h, 0B42h, 18h
dd 0AA0h, 0FFF9EC0Ch, 79h, 300E4300h, 0E0A4602h, 0B4304h
dd 18h,	0ABCh, 0FFF9EC6Ch, 79h,	300E4300h, 0E0A4602h, 0B4304h
dd 18h,	0AD8h, 0FFF9ECCCh, 79h,	300E4300h, 0E0A4602h, 0B4304h
dd 18h,	0AF4h, 0FFF9ED2Ch, 79h,	300E4300h, 0E0A4602h, 0B4304h
dd 18h,	0B10h, 0FFF9ED8Ch, 77h,	300E4300h, 0E0A4802h, 0B4104h
dd 18h,	0B2Ch, 0FFF9EDE8h, 77h,	300E4300h, 0E0A4802h, 0B4104h
dd 2Ch,	0B48h, 0FFF9EE44h, 0D0h, 80E4100h, 0E410286h, 4303830Ch
dd 6302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 2Ch
dd 0B78h, 0FFF9EEE4h, 0E6h, 80E4100h, 0E430283h, 0A500230h
dd 0C341080Eh, 0B43040Eh, 0E0A4802h, 0EC34108h,	0B4704h
dd 18h,	0BA8h, 0FFF9EF9Ch, 77h,	300E4300h, 0E0A4802h, 0B4104h
dd 18h,	0BC4h, 0FFF9EFF8h, 79h,	300E4300h, 0E0A4602h, 0B4304h
dd 18h,	0BE0h, 0FFF9F058h, 79h,	300E4300h, 0E0A4602h, 0B4304h
dd 1Ch,	0BFCh, 0FFF9F0B8h, 9Bh,	300E4300h, 40E0A7Fh, 0A6D0B46h
dd 0B43040Eh, 18h, 0C1Ch, 0FFF9F134h, 79h, 300E4300h, 0E0A4602h
dd 0B4304h, 18h, 0C38h,	0FFF9F194h, 79h, 300E4300h, 0E0A4602h
dd 0B4304h, 40h, 0C54h,	0FFF9F1F4h, 1F5h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0B00E4605h, 19B0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	40h, 0C98h, 0FFF9F3A8h,	1F1h, 80E4100h,	0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0A00E4605h, 1790301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	3Ch, 0CDCh, 0FFF9F558h,	151h, 80E4100h,	0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 900E4305h, 0AFD0201h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 40h,	0D1Ch, 0FFF9F66Ch, 165h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 12D0301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 3Ch
dd 0D60h, 0FFF9F790h, 0E1h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0AB002h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 54h, 0DA0h
dd 0FFF9F834h, 20Ah, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 900E4305h, 1570301h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 42040EC5h, 0A98020Bh, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 3Ch
dd 0DF8h, 0FFF9F9E8h, 115h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 0AE20201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 40h
dd 0E38h, 0FFF9FAC0h, 20Ch, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	900E4305h, 16F0301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h, 0Bh, 40h
dd 0E7Ch, 0FFF9FC88h, 129h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 1120301h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h, 0Bh, 3Ch
dd 0EC0h, 0FFF9FD70h, 109h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0AF302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 34h, 0F00h
dd 0FFF9FE3Ch, 8Bh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 7D300E43h, 41100E0Ah, 410C0EC3h, 41080EC6h, 42040EC7h
dd 0Bh,	2Ch, 0F38h, 0FFF9FE90h,	66h, 80E4100h, 0E410286h
dd 4303830Ch, 5902300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	2Ch, 0F68h, 0FFF9FEC8h,	9Bh, 80E4100h, 0E430283h
dd 0A490230h, 0C341080Eh, 0B42040Eh, 80E0A62h, 40EC341h
dd 0B45h, 18h, 0F98h, 0FFF9FF34h, 2Ch, 200E4300h, 40E0A63h
dd 0B41h, 18h, 0FB4h, 0FFF9FF44h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFF9FF38h
dd 47h,	80E4100h, 0E430283h, 0E0A7830h,	0EC34108h, 0B4504h
dd 1Ch,	40h, 0FFF9FF5Ch, 4Dh, 200E4300h, 40E0A71h, 0A4F0B44h
dd 0B41040Eh, 20h, 60h,	0FFF9FF8Ch, 91h, 80E4100h, 0E430283h
dd 0A630240h, 0C341080Eh, 0B44040Eh, 18h, 84h, 0FFF9FFFCh
dd 6Bh,	300E4300h, 0E0A4202h, 0B4304h, 54h, 0A0h, 0FFFA004Ch
dd 1C4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A5602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 30B4304h,	0E0A012Dh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 2Ch, 0F8h, 0FFFA01B8h
dd 7Eh,	80E4100h, 0E430283h, 0A430230h,	0C341080Eh, 0B44040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 2Ch, 128h, 0FFFA0208h, 7Eh
dd 80E4100h, 0E430283h,	0A430230h, 0C341080Eh, 0B44040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 18h, 158h, 0FFFA0258h, 51h
dd 300E4300h, 40E0A66h,	0B43h, 38h, 174h, 0FFFA0290h, 0B3h
dd 80E4100h, 0E410286h,	4303830Ch, 5402300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0E0A6B0Bh, 0EC3410Ch, 0EC64108h
dd 0B4304h, 2Ch, 1B0h, 0FFFA0308h, 0AFh, 80E4100h, 0E430283h
dd 0A4B0230h, 0C341080Eh, 0B44040Eh, 80E0A73h, 40EC341h
dd 0B44h, 2Ch, 1E0h, 0FFFA0388h, 0AFh, 80E4100h, 0E430283h
dd 0A540230h, 0C341080Eh, 0B43040Eh, 80E0A6Bh, 40EC341h
dd 0B44h, 38h, 210h, 0FFFA0408h, 113h, 80E4100h, 0E410286h
dd 4303830Ch, 7502300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h
dd 0E0A6B0Bh, 0EC3410Ch, 0EC64108h, 0B4304h, 18h, 24Ch
dd 0FFFA04E0h, 2Ah, 200E4300h, 40E0A61h, 0B41h,	3Ch, 268h
dd 0FFFA04F0h, 7Dh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A4A02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 48h, 2A8h, 0FFFA0530h
dd 12Bh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A8Dh, 0C0EC341h, 80EC641h, 40EC741h, 57020B42h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 46040EC7h, 0Bh, 54h
dd 2F4h, 0FFFA0610h, 11Bh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AB502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4804h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 18h
dd 34Ch, 0FFFA06D4h, 29h, 200E4300h, 40E0A60h, 0B41h, 18h
dd 368h, 0FFFA06E4h, 2Ah, 200E4300h, 40E0A61h, 0B41h, 18h
dd 384h, 0FFFA06F4h, 2Ah, 200E4300h, 40E0A61h, 0B41h, 18h
dd 3A0h, 0FFFA0704h, 2Ah, 200E4300h, 40E0A61h, 0B41h, 3Ch
dd 3BCh, 0FFFA0714h, 0B9h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A6502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 18h, 3FCh
dd 0FFFA0790h, 29h, 200E4300h, 40E0A60h, 0B41h,	18h, 418h
dd 0FFFA07A0h, 2Ah, 200E4300h, 40E0A61h, 0B41h,	18h, 434h
dd 0FFFA07B0h, 2Ah, 200E4300h, 40E0A61h, 0B41h,	18h, 450h
dd 0FFFA07C0h, 2Ch, 200E4300h, 40E0A63h, 0B41h,	18h, 46Ch
dd 0FFFA07D0h, 28h, 200E4300h, 40E0A5Fh, 0B41h,	14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFA07C4h
dd 80h,	80E4100h, 0E430283h, 0A6E0220h,	0C341080Eh, 0B41040Eh
dd 18h,	40h, 0FFFA0820h, 4Dh, 300E4300h, 0E0A4402h, 0B4104h
dd 3Ch,	5Ch, 0FFFA0854h, 384h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A031E03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 18h
dd 9Ch,	0FFFA0B98h, 34h, 200E4300h, 40E0A6Bh, 0B41h, 2Ch
dd 0B8h, 0FFFA0BB0h, 0D3h, 80E4100h, 0E410286h,	4303830Ch
dd 8702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 20h
dd 0E8h, 0FFFA0C54h, 8Bh, 80E4100h, 0E430283h, 0A5F0230h
dd 0C341080Eh, 0B44040Eh, 20h, 10Ch, 0FFFA0CBCh, 73h, 80E4100h
dd 0E430283h, 0A470230h, 0C341080Eh, 0B44040Eh,	2Ch, 130h
dd 0FFFA0D0Ch, 9Bh, 80E4100h, 0E410286h, 4303830Ch, 6202300Eh
dd 410C0E0Ah, 41080EC3h, 43040EC6h, 0Bh, 38h, 160h, 0FFFA0D78h
dd 0EEh, 80E4100h, 0E410286h, 4303830Ch, 6B02300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0E0A6D0Bh, 0EC3410Ch, 0EC64108h
dd 0B4504h, 2Ch, 19Ch, 0FFFA0E2Ch, 6Fh,	80E4100h, 0E410286h
dd 4303830Ch, 4302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	18h, 1CCh, 0FFFA0E6Ch, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 1E8h, 0FFFA0E78h, 2Fh, 300E4300h, 40E0A66h
dd 0B41h, 34h, 204h, 0FFFA0E8Ch, 81h, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A4Eh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 2Ch, 23Ch, 0FFFA0ED8h, 0B0h
dd 80E4100h, 0E410286h,	4303830Ch, 4E02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 34h, 26Ch, 0FFFA0F58h, 0D1h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A52h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 18h
dd 2A4h, 0FFFA0FF4h, 49h, 200E4300h, 40E0A7Ah, 0B43h, 18h
dd 2C0h, 0FFFA1024h, 5Ch, 300E4300h, 40E0A6Dh, 0B44h, 18h
dd 2DCh, 0FFFA1064h, 54h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 2F8h, 0FFFA109Ch, 51h, 300E4300h, 40E0A66h, 0B43h, 38h
dd 314h, 0FFFA10D4h, 112h, 80E4100h, 0E410287h,	4303830Ch
dd 0A6C300Eh, 0C3410C0Eh, 0C741080Eh, 0B41040Eh, 0E0A5002h
dd 0EC3410Ch, 0EC74108h, 0B4604h, 3Ch, 350h, 0FFFA11ACh
dd 93h,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 500E4305h, 0E0A7E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 18h, 390h, 0FFFA1200h, 51h, 300E4300h
dd 40E0A66h, 0B43h, 2Ch, 3ACh, 0FFFA1238h, 106h, 80E4100h
dd 0E410286h, 4303830Ch, 9B02300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 20h,	3DCh, 0FFFA1310h, 7Eh, 80E4100h
dd 0E430283h, 0A5A0230h, 0C341080Eh, 0B41040Eh,	18h, 400h
dd 0FFFA136Ch, 59h, 300E4300h, 40E0A6Eh, 0B43h,	3Ch, 41Ch
dd 0FFFA13ACh, 85h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A7402h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 20h, 45Ch, 0FFFA13F4h
dd 0CDh, 80E4100h, 0E430283h, 0A560230h, 0C341080Eh, 0B41040Eh
dd 1Ch,	480h, 0FFFA14A0h, 45h, 200E4300h, 40E0A63h, 0A4F0B46h
dd 0B45040Eh, 1Ch, 4A0h, 0FFFA14C8h, 5Ah, 300E4300h, 40E0A6Ah
dd 0A640B43h, 0B41040Eh, 20h, 4C0h, 0FFFA1504h,	51h, 80E4100h
dd 0E430283h, 0A420230h, 0C341080Eh, 0B41040Eh,	18h, 4E4h
dd 0FFFA1534h, 91h, 300E4300h, 0E0A4102h, 0B4404h, 54h
dd 500h, 0FFFA15ACh, 13Ch, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 6B0B4704h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 18h
dd 558h, 0FFFA1690h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 574h, 0FFFA16C8h, 51h, 300E4300h, 40E0A66h, 0B43h, 34h
dd 590h, 0FFFA1700h, 132h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2400E43h, 100E0A98h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B43h, 3Ch, 5C8h, 0FFFA17FCh, 10Eh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0ACD02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 54h, 608h, 0FFFA18CCh, 127h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0AD602h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 570B4304h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	18h, 660h, 0FFFA199Ch, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 3Ch, 67Ch, 0FFFA19A8h, 582h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A052303h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh
dd 3Ch,	6BCh, 0FFFA1EECh, 12Bh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AF702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFA1FC0h
dd 7Ah,	80E4100h, 0E410286h, 4303830Ch,	6D02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 4Ch,	0FFFA200Ch, 0D3h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A7202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 44h, 8Ch, 0FFFA20A0h, 72h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Bh
dd 0C0EC341h, 80EC641h,	40EC741h, 0A510B44h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 3Ch, 0D4h, 0FFFA20CCh
dd 19Fh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AD402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 38h, 114h, 0FFFA222Ch, 63h, 80E4100h
dd 0E410286h, 4303830Ch, 4302300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 3Ch,	150h, 0FFFA2254h, 0A2h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 190h
dd 0FFFA22B8h, 84h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A7302h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 1D0h, 0FFFA22FCh
dd 189h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A017803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 210h, 0FFFA2448h, 88h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A79h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 38h, 248h, 0FFFA2498h
dd 95h,	80E4100h, 0E410286h, 4303830Ch,	5302300Eh, 410C0E0Ah
dd 41080EC3h, 46040EC6h, 0E0A6D0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 20h, 284h, 0FFFA24F4h, 42h,	80E4100h, 0E430283h
dd 0E0A7320h, 0EC34108h, 0B4504h, 20h, 2A8h, 0FFFA2514h
dd 42h,	80E4100h, 0E430283h, 0E0A7320h,	0EC34108h, 0B4504h
dd 54h,	2CCh, 0FFFA2534h, 113h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AA102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4404h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 38h
dd 324h, 0FFFA25F0h, 63h, 80E4100h, 0E410286h, 4303830Ch
dd 4302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A4F0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 38h, 360h, 0FFFA2618h
dd 67h,	80E4100h, 0E410286h, 4303830Ch,	4602300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h
dd 0B4104h, 38h, 39Ch, 0FFFA2644h, 67h,	80E4100h, 0E410286h
dd 4303830Ch, 4602300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 38h, 3D8h
dd 0FFFA2670h, 67h, 80E4100h, 0E410286h, 4303830Ch, 4602300Eh
dd 410C0E0Ah, 41080EC3h, 43040EC6h, 0E0A4F0Bh, 0EC3410Ch
dd 0EC64108h, 0B4104h, 2Ch, 414h, 0FFFA269Ch, 5Eh, 80E4100h
dd 0E430283h, 0E0A7E30h, 0EC34108h, 4F0B4504h, 41080E0Ah
dd 41040EC3h, 0Bh, 38h,	444h, 0FFFA26CCh, 67h, 80E4100h
dd 0E410286h, 4303830Ch, 4602300Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 20h,	480h, 0FFFA26F8h, 51h, 80E4100h, 0E430283h, 0A420230h
dd 0C341080Eh, 0B45040Eh, 38h, 4A4h, 0FFFA2728h, 67h, 80E4100h
dd 0E410286h, 4303830Ch, 4602300Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 20h,	4E0h, 0FFFA2754h, 51h, 80E4100h, 0E430283h, 0A420230h
dd 0C341080Eh, 0B45040Eh, 3Ch, 504h, 0FFFA2784h, 13Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AF302h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 38h, 544h, 0FFFA2880h, 63h, 80E4100h
dd 0E410286h, 4303830Ch, 4202300Eh, 410C0E0Ah, 41080EC3h
dd 43040EC6h, 0E0A4F0Bh, 0EC3410Ch, 0EC64108h, 0B4104h
dd 54h,	580h, 0FFFA28A8h, 7Dh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 4F0B4304h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 54h
dd 5D8h, 0FFFA28D0h, 7Eh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5202h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 540B4304h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 3Ch
dd 630h, 0FFFA28F8h, 3C9h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A010D03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 68h
dd 670h, 0FFFA2C84h, 127h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6B02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 5F0B4604h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0E0A6B0Bh
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 38h,	6DCh, 0FFFA2D40h, 0AFh,	80E4100h, 0E410286h, 4303830Ch
dd 4C02400Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0E0A6B0Bh
dd 0EC3410Ch, 0EC64108h, 0B4704h, 40h, 718h, 0FFFA2DB4h
dd 2CDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4C05h, 1D90321h,	41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 43040EC5h, 0Bh, 3Ch, 75Ch, 0FFFA3040h, 12Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AA402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 79Ch, 0FFFA312Ch, 0C5h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0AB402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 28h, 7DCh, 0FFFA31B4h, 4Ch,	80E4100h, 0E410286h
dd 4303830Ch, 0A7F300Eh, 0C3410C0Eh, 0C641080Eh, 0B41040Eh
dd 3Ch
dd 808h, 0FFFA31D4h, 287h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A018003h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 54h
dd 848h, 0FFFA341Ch, 91h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A6B02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 4F0B4204h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFA3440h
dd 44h,	200E4300h, 40E0A71h, 0B44h, 20h, 38h, 0FFFA3468h
dd 3Ch,	80E4100h, 0E430283h, 0E0A6D30h,	0EC34108h, 0B4504h
dd 18h,	5Ch, 0FFFA3480h, 43h, 200E4300h, 40E0A76h, 0B45h
dd 3Ch,	78h, 0FFFA34A8h, 6Ch, 80E4100h,	0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 140E0A7Ch, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B41h, 3Ch, 0B8h, 0FFFA34D4h
dd 1F4h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0AE102h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 2Ch, 0F8h, 0FFFA3688h, 96h, 80E4100h
dd 0E410286h, 4303830Ch, 8502300Eh, 410C0E0Ah, 41080EC3h
dd 45040EC6h, 0Bh, 3Ch,	128h, 0FFFA36F0h, 1B1h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0AE602h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4304h, 44h, 168h, 0FFFA3864h, 0F6h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A61h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A5C0B42h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B45040Eh, 18h, 1B0h, 0FFFA3914h, 7Fh, 300E4300h
dd 40E0A78h, 0B41h, 54h, 1CCh, 0FFFA3978h, 152h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A9202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 6B0B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 45040EC5h, 0Bh, 3Ch,	224h, 0FFFA3A74h, 5Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 300E4305h
dd 0E0A4702h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4504h, 34h, 264h, 0FFFA3A90h, 5Ah,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2200E43h, 100E0A47h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B45h, 3Ch, 29Ch, 0FFFA3AB4h, 5Ch
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 300E4305h, 0E0A4702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4504h, 34h, 2DCh, 0FFFA3AD0h, 5Ah, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2200E43h, 100E0A47h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B45h, 68h, 314h, 0FFFA3AF4h
dd 1AEh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0ABC02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6B0B4104h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0AA4020Bh, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 18h, 380h, 0FFFA3C38h
dd 63h,	300E4300h, 40E0A7Ch, 0B41h, 44h, 39Ch, 0FFFA3C80h
dd 14Ch, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0ABAh, 0C0EC341h, 80EC641h, 40EC741h, 0A670B41h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 18h
dd 3E4h, 0FFFA3D84h, 87h, 300E4300h, 40E0A7Fh, 0B42h, 3Ch
dd 400h, 0FFFA3DF0h, 168h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0AD002h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 440h
dd 0FFFA3F18h, 89h, 300E4300h, 40E0A7Fh, 0B42h,	18h, 45Ch
dd 0FFFA3F88h, 74h, 300E4300h, 40E0A7Fh, 0B42h,	18h, 478h
dd 0FFFA3FE0h, 5Fh, 300E4300h, 40E0A75h, 0B44h,	18h, 494h
dd 0FFFA4024h, 31h, 200E4300h, 40E0A67h, 0B42h,	20h, 4B0h
dd 0FFFA403Ch, 3Dh, 80E4100h, 0E430283h, 0E0A7120h, 0EC34108h
dd 0B4204h, 20h, 4D4h, 0FFFA4058h, 44h,	80E4100h, 0E430283h
dd 0E0A7820h, 0EC34108h, 0B4204h, 20h, 4F8h, 0FFFA4078h
dd 3Dh,	80E4100h, 0E430283h, 0E0A7120h,	0EC34108h, 0B4204h
dd 20h,	51Ch, 0FFFA4094h, 44h, 80E4100h, 0E430283h, 0E0A7820h
dd 0EC34108h, 0B4204h, 20h, 540h, 0FFFA40B4h, 4Bh, 80E4100h
dd 0E430283h, 0E0A7F20h, 0EC34108h, 0B4204h, 20h, 564h
dd 0FFFA40DCh, 4Bh, 80E4100h, 0E430283h, 0E0A7F20h, 0EC34108h
dd 0B4204h, 20h, 588h, 0FFFA4104h, 44h,	80E4100h, 0E430283h
dd 0E0A7820h, 0EC34108h, 0B4204h, 20h, 5ACh, 0FFFA4124h
dd 4Bh,	80E4100h, 0E430283h, 0E0A7F20h,	0EC34108h, 0B4204h
dd 18h,	5D0h, 0FFFA414Ch, 4Eh, 400E4300h, 0E0A4502h, 0B4104h
dd 20h,	5ECh, 0FFFA4180h, 4Bh, 80E4100h, 0E430283h, 0E0A7F20h
dd 0EC34108h, 0B4204h, 18h, 610h, 0FFFA41A8h, 4Eh, 400E4300h
dd 0E0A4502h, 0B4104h, 18h, 62Ch, 0FFFA41DCh, 55h, 400E4300h
dd 0E0A4C02h, 0B4104h, 18h, 648h, 0FFFA4218h, 4Eh, 400E4300h
dd 0E0A4502h, 0B4104h, 18h, 664h, 0FFFA424Ch, 55h, 400E4300h
dd 0E0A4C02h, 0B4104h, 18h, 680h, 0FFFA4288h, 55h, 400E4300h
dd 0E0A4C02h, 0B4104h, 20h, 69Ch, 0FFFA42C4h, 44h, 80E4100h
dd 0E430283h, 0E0A7930h, 0EC34108h, 0B4104h, 20h, 6C0h
dd 0FFFA42E4h, 4Ch, 80E4100h, 0E430283h, 0A410230h, 0C341080Eh
dd 0B41040Eh, 20h, 6E4h, 0FFFA430Ch, 4Ch, 80E4100h, 0E430283h
dd 0A410230h, 0C341080Eh, 0B41040Eh, 20h, 708h,	0FFFA4334h
dd 53h,	80E4100h, 0E430283h, 0A480230h,	0C341080Eh, 0B41040Eh
dd 20h,	72Ch, 0FFFA4364h, 61h, 80E4100h, 0E430283h, 0A560240h
dd 0C341080Eh, 0B41040Eh, 20h, 750h, 0FFFA43A4h, 44h, 80E4100h
dd 0E430283h, 0E0A7930h, 0EC34108h, 0B4104h, 20h, 774h
dd 0FFFA43C4h, 4Ch, 80E4100h, 0E430283h, 0A410230h, 0C341080Eh
dd 0B41040Eh, 20h, 798h, 0FFFA43ECh, 4Ch, 80E4100h, 0E430283h
dd 0A410230h, 0C341080Eh, 0B41040Eh, 20h, 7BCh,	0FFFA4414h
dd 53h,	80E4100h, 0E430283h, 0A480230h,	0C341080Eh, 0B41040Eh
dd 20h,	7E0h, 0FFFA4444h, 53h, 80E4100h, 0E430283h, 0A480230h
dd 0C341080Eh, 0B41040Eh, 20h, 804h
dd 0FFFA4474h, 5Ah, 80E4100h, 0E430283h, 0A4F0240h, 0C341080Eh
dd 0B41040Eh, 20h, 828h, 0FFFA44ACh, 5Ah, 80E4100h, 0E430283h
dd 0A4F0240h, 0C341080Eh, 0B41040Eh, 20h, 84Ch,	0FFFA44E4h
dd 61h,	80E4100h, 0E430283h, 0A560240h,	0C341080Eh, 0B41040Eh
dd 20h,	870h, 0FFFA4524h, 61h, 80E4100h, 0E430283h, 0A560240h
dd 0C341080Eh, 0B41040Eh, 20h, 894h, 0FFFA4564h, 68h, 80E4100h
dd 0E430283h, 0A5D0240h, 0C341080Eh, 0B41040Eh,	20h, 8B8h
dd 0FFFA45A8h, 4Ch, 80E4100h, 0E430283h, 0A410230h, 0C341080Eh
dd 0B41040Eh, 20h, 8DCh, 0FFFA45D0h, 44h, 80E4100h, 0E430283h
dd 0E0A7930h, 0EC34108h, 0B4104h, 20h, 900h, 0FFFA45F0h
dd 4Ch,	80E4100h, 0E430283h, 0A410230h,	0C341080Eh, 0B41040Eh
dd 20h,	924h, 0FFFA4618h, 52h, 80E4100h, 0E430283h, 0A470230h
dd 0C341080Eh, 0B41040Eh, 20h, 948h, 0FFFA4648h, 53h, 80E4100h
dd 0E430283h, 0A480230h, 0C341080Eh, 0B41040Eh,	20h, 96Ch
dd 0FFFA4678h, 59h, 80E4100h, 0E430283h, 0A4E0240h, 0C341080Eh
dd 0B41040Eh, 20h, 990h, 0FFFA46B0h, 4Ch, 80E4100h, 0E430283h
dd 0A410230h, 0C341080Eh, 0B41040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch,	0FFFA46C0h
dd 9Ch,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A89h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 20h
dd 54h,	0FFFA4724h, 65h, 80E4100h, 0E430283h, 0A4C0230h
dd 0C341080Eh, 0B43040Eh, 20h, 78h, 0FFFA4768h,	84h, 80E4100h
dd 0E430283h, 0A450230h, 0C341080Eh, 0B42040Eh,	20h, 9Ch
dd 0FFFA47C8h, 0DEh, 80E4100h, 0E430283h, 0A5A0230h, 0C341080Eh
dd 0B41040Eh, 3Ch, 0C0h, 0FFFA4884h, 15Eh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0AF402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 20h,	100h, 0FFFA49A4h, 3Dh, 80E4100h, 0E430283h, 0E0A7230h
dd 0EC34108h, 0B4104h, 34h, 124h, 0FFFA49C0h, 173h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 3500E43h, 0E0A0164h
dd 0EC34110h, 0EC6410Ch, 0EC74108h, 0B4104h, 20h, 15Ch
dd 0FFFA4AFCh, 4Fh, 80E4100h, 0E430283h, 0A430230h, 0C341080Eh
dd 0B42040Eh, 34h, 180h, 0FFFA4B28h, 11Bh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AF4h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 18h, 1B8h, 0FFFA4C0Ch, 34h
dd 200E4300h, 40E0A6Bh,	0B41h, 18h, 1D4h, 0FFFA4C24h, 4Eh
dd 300E4300h, 0E0A4502h, 0B4104h, 3Ch, 1F0h, 0FFFA4C58h
dd 1E1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 140E0A72h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B43h, 18h, 230h, 0FFFA4DFCh, 55h,	300E4300h
dd 0E0A4C02h, 0B4104h, 2Ch, 24Ch, 0FFFA4E38h, 5Dh, 80E4100h
dd 0E410286h, 4303830Ch, 5002300Eh, 410C0E0Ah, 41080EC3h
dd 41040EC6h, 0Bh, 20h,	27Ch, 0FFFA4E68h, 3Ah, 80E4100h
dd 0E430283h, 0E0A6B20h, 0EC34108h, 0B4504h, 68h, 2A0h
dd 0FFFA4E80h, 0FCh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0E0AA202h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 5A0B4304h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 46040EC5h, 0E0A5A0Bh, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 20h, 30Ch
dd 0FFFA4F10h, 0B9h, 80E4100h, 0E430283h, 0AA60230h, 0C341080Eh
dd 0B45040Eh, 1Ch, 330h, 0FFFA4FA8h, 61h, 300E4300h, 40E0A67h
dd 0A6B0B46h, 0B41040Eh, 2Ch, 350h, 0FFFA4FECh,	120h, 80E4100h
dd 0E410286h, 4303830Ch, 4D02300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 68h,	380h, 0FFFA50DCh, 16Ah,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0AAC02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4104h, 140E0A6Eh,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0A630B46h,	0C341140Eh, 0C641100Eh,	0C7410C0Eh
dd 0C541080Eh, 0B45040Eh, 48h, 3ECh, 0FFFA51DCh, 0F6h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A56h, 0C0EC341h, 80EC641h, 40EC741h, 4E020B45h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 47040EC7h, 0Bh, 18h
dd 438h, 0FFFA5288h, 33h, 200E4300h, 40E0A66h, 0B45h, 18h
dd 454h, 0FFFA52A0h, 51h, 300E4300h, 40E0A66h, 0B43h, 18h
dd 470h, 0FFFA52D8h, 51h, 300E4300h, 40E0A66h, 0B43h, 38h
dd 48Ch, 0FFFA5310h, 85h, 80E4100h, 0E410286h, 4303830Ch
dd 4202300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h, 0E0A6D0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 1Ch, 4C8h, 0FFFA535Ch
dd 4Bh,	200E4300h, 40E0A69h, 0A510B48h,	0B41040Eh, 1Ch
dd 4E8h, 0FFFA5388h, 6Fh, 300E4300h, 40E0A72h, 0A6D0B47h
dd 0B41040Eh, 18h, 508h, 0FFFA53D8h, 4Ch, 300E4300h, 0E0A4302h
dd 0B4104h, 18h, 524h, 0FFFA5408h, 5Dh,	300E4300h, 40E0A74h
dd 0B41h, 34h, 540h, 0FFFA544Ch, 0CBh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	7E300E43h, 41100E0Ah, 410C0EC3h
dd 41080EC6h, 41040EC7h, 0Bh, 3Ch, 578h, 0FFFA54E0h, 12Ah
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A4C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 5B8h, 0FFFA55CCh, 5Dh, 300E4300h
dd 40E0A74h, 0B41h, 18h, 5D4h, 0FFFA5610h, 28h,	200E4300h
dd 40E0A5Fh, 0B41h, 3Ch, 5F0h, 0FFFA561Ch, 1FAh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0A011403h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 18h, 630h, 0FFFA57D8h, 6Ah, 300E4300h, 0E0A6102h
dd 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFA5810h
dd 41h,	80E4100h, 0E430283h, 0E0A7630h,	0EC34108h, 0B4104h
dd 3Ch,	40h, 0FFFA5830h, 28Fh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	800E4305h, 0A650201h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 18h
dd 80h,	0FFFA5A80h, 56h, 300E4300h, 0E0A4D02h, 0B4104h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFA5AA4h
dd 51h,	80E4100h, 0E410286h, 4303830Ch,	4402300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 18h, 4Ch,	0FFFA5AC8h, 56h
dd 300E4300h, 0E0A4D02h, 0B4104h, 2Ch, 68h, 0FFFA5B04h
dd 87h,	80E4100h, 0E410286h, 4303830Ch,	7A02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 20h, 98h,	0FFFA5B5Ch, 54h
dd 80E4100h, 0E430283h,	0A480230h, 0C341080Eh, 0B42040Eh
dd 38h,	0BCh, 0FFFA5B8Ch, 0A5h,	80E4100h, 0E410286h, 4303830Ch
dd 6302300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A6D0Bh
dd 0EC3410Ch, 0EC64108h, 0B4504h, 2Ch, 0F8h, 0FFFA5BF8h
dd 0D5h, 80E4100h, 0E410286h, 4303830Ch, 6302300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 68h, 128h, 0FFFA5CA0h, 0F4h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A6502h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4804h,	140E0A48h, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0A5A0B48h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFA5D10h
dd 7Ah,	80E4100h, 0E410286h, 4303830Ch,	4E02300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 2Ch, 4Ch,	0FFFA5D5Ch, 5Eh
dd 80E4100h, 0E430283h,	0E0A7F20h, 0EC34108h, 4F0B4404h
dd 41080E0Ah, 41040EC3h, 0Bh, 38h, 7Ch,	0FFFA5D8Ch, 0B9h
dd 80E4100h, 0E410286h,	4303830Ch, 0A71300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B44040Eh, 0E0A7402h, 0EC3410Ch,	0EC64108h
dd 0B4204h, 2Ch, 0B8h, 0FFFA5E0Ch, 5Eh,	80E4100h, 0E430283h
dd 0A400220h, 0C341080Eh, 0B43040Eh, 80E0A4Fh, 40EC341h
dd 0B41h, 18h, 0E8h, 0FFFA5E3Ch, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 34h, 104h, 0FFFA5E48h, 0E6h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0AD7h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 18h, 13Ch, 0FFFA5EF8h, 41h
dd 300E4300h, 40E0A78h,	0B41h, 18h, 158h, 0FFFA5F20h, 28h
dd 200E4300h, 40E0A5Fh,	0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFA5F14h
dd 3Fh,	200E4300h, 40E0A75h, 0B42h, 20h, 38h, 0FFFA5F38h
dd 97h,	80E4100h, 0E430283h, 0E0A6530h,	0EC34108h, 0B4204h
dd 18h,	5Ch, 0FFFA5FACh, 35h, 200E4300h, 40E0A6Ch, 0B41h
dd 3Ch,	78h, 0FFFA5FC8h, 1D0h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0A014803h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 18h
dd 0B8h, 0FFFA6158h, 5Fh, 400E4300h, 0E0A5602h,	0B4104h
dd 44h,	0D4h, 0FFFA619Ch, 0B3h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A4Bh, 0C0EC341h, 80EC641h
dd 40EC741h, 0A770B48h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B42040Eh, 18h, 11Ch, 0FFFA6208h, 0ABh, 300E4300h, 0E0A5A02h
dd 0B4304h, 3Ch, 138h, 0FFFA6298h, 131h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0ADC02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	178h, 0FFFA638Ch, 57h, 400E4300h, 0E0A4E02h, 0B4104h
dd 2Ch,	194h, 0FFFA63C8h, 0BAh,	80E4100h, 0E430283h, 0A700230h
dd 0C341080Eh, 0B47040Eh, 80E0A77h, 40EC341h, 0B41h, 2Ch
dd 1C4h, 0FFFA6454h, 7Dh, 80E4100h, 0E430283h, 0E0A7D30h
dd 0EC34108h, 6E0B4204h, 41080E0Ah, 45040EC3h, 0Bh, 2Ch
dd 1F4h, 0FFFA64A4h, 0C3h, 80E4100h, 0E430283h,	0A510230h
dd 0C341080Eh, 0B42040Eh, 80E0A63h, 40EC341h, 0B44h, 2Ch
dd 224h, 0FFFA6538h, 0C3h, 80E4100h, 0E430283h,	0A510230h
dd 0C341080Eh, 0B42040Eh, 80E0A63h, 40EC341h, 0B44h, 1Ch
dd 254h, 0FFFA65CCh, 67h, 300E4300h, 40E0A6Fh, 0A6D0B42h
dd 0B41040Eh, 18h, 274h, 0FFFA6614h, 2Ch, 200E4300h, 40E0A63h
dd 0B41h, 18h, 290h, 0FFFA6624h, 28h, 200E4300h, 40E0A5Fh
dd 0B41h, 18h, 2ACh, 0FFFA6630h, 40h, 300E4300h, 40E0A77h
dd 0B41h, 18h, 2C8h, 0FFFA6654h, 3Eh, 200E4300h, 40E0A75h
dd 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFA6660h
dd 32h,	200E4300h, 40E0A69h, 0B41h, 2Ch, 38h, 0FFFA6678h
dd 6Eh,	80E4100h, 0E430283h, 0E0A7130h,	0EC34108h, 6B0B4604h
dd 41080E0Ah, 41040EC3h, 0Bh, 2Ch, 68h,	0FFFA66B8h, 82h
dd 80E4100h, 0E430283h,	0A460230h, 0C341080Eh, 0B45040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 18h, 98h,	0FFFA670Ch, 4Dh
dd 200E4300h, 40E0A76h,	0B43h, 18h, 0B4h, 0FFFA6740h, 6Dh
dd 300E4300h, 0E0A4502h, 0B4404h, 34h, 0D0h, 0FFFA6794h
dd 81h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A46h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 3Ch
dd 108h, 0FFFA67E0h, 105h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A8702h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 2Ch, 148h
dd 0FFFA68A8h, 81h, 80E4100h, 0E410286h, 4303830Ch, 5302400Eh
dd 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 2Ch, 178h, 0FFFA68FCh
dd 0AAh, 80E4100h, 0E430283h, 0A6D0230h, 0C341080Eh, 0B46040Eh
dd 80E0A6Bh, 40EC341h, 0B41h, 28h, 1A8h, 0FFFA6978h, 67h
dd 80E4100h, 0E410286h,	4303830Ch, 0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 18h, 1D4h, 0FFFA69B4h, 51h, 300E4300h
dd 40E0A65h, 0B44h, 18h, 1F0h, 0FFFA69ECh, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 20Ch, 0FFFA6A24h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 228h, 0FFFA6A5Ch, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 244h, 0FFFA6A94h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 260h, 0FFFA6ACCh, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 27Ch, 0FFFA6B04h, 59h,	300E4300h
dd 40E0A6Eh, 0B43h, 18h, 298h, 0FFFA6B44h, 5Dh,	300E4300h
dd 40E0A74h, 0B41h, 18h, 2B4h, 0FFFA6B88h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 18h, 2D0h, 0FFFA6BC0h, 51h,	300E4300h
dd 40E0A66h, 0B43h, 34h, 2ECh, 0FFFA6BF8h, 76h,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A49h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 324h, 0FFFA6C38h
dd 0CDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A5A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 38h, 364h, 0FFFA6CC8h, 0EBh, 80E4100h
dd 0E410286h, 4303830Ch, 6502300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0E0A670Bh, 0EC3410Ch, 0EC64108h, 0B4704h
dd 2Ch,	3A0h, 0FFFA6D78h, 0D5h,	80E4100h, 0E410286h, 4303830Ch
dd 8902300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 2Ch
dd 3D0h, 0FFFA6E20h, 0FAh, 80E4100h, 0E410286h,	4303830Ch
dd 6B02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 3Ch
dd 400h, 0FFFA6EECh, 15Ch, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AC502h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 18h, 440h
dd 0FFFA7008h, 51h, 300E4300h, 40E0A65h, 0B44h,	34h, 45Ch
dd 0FFFA7040h, 0ADh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2300E43h, 100E0A58h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B43h, 18h, 494h, 0FFFA70B8h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 4B0h, 0FFFA70F0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 3Ch, 4CCh, 0FFFA7128h, 105h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0AB402h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 18h,	50Ch, 0FFFA71F0h, 51h, 300E4300h, 40E0A65h, 0B44h
dd 18h,	528h, 0FFFA7228h, 51h, 300E4300h, 40E0A66h, 0B43h
dd 1Ch,	544h, 0FFFA7260h, 6Bh, 300E4300h, 40E0A6Fh, 0A6D0B46h
dd 0B41040Eh, 1Ch, 564h, 0FFFA72ACh, 6Bh, 300E4300h, 40E0A6Fh
dd 0A6D0B46h, 0B41040Eh, 1Ch, 584h, 0FFFA72F8h,	6Bh, 300E4300h
dd 40E0A6Fh, 0A6D0B46h,	0B41040Eh, 1Ch,	5A4h, 0FFFA7344h
dd 6Bh,	300E4300h, 40E0A6Fh, 0A6D0B46h,	0B41040Eh, 1Ch
dd 5C4h, 0FFFA7390h, 6Bh, 300E4300h, 40E0A6Fh, 0A6D0B46h
dd 0B41040Eh, 18h, 5E4h, 0FFFA73DCh, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 600h, 0FFFA7414h, 65h, 300E4300h, 40E0A7Ch
dd 0B41h, 1Ch, 61Ch, 0FFFA7460h, 93h, 300E4300h, 40E0A76h
dd 0A6D0B47h, 0B43040Eh, 68h, 63Ch, 0FFFA74D4h,	121h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A7502h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 5B0B4804h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 45040EC5h, 0A6B020Bh, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 38h, 6A8h, 0FFFA758Ch, 0EEh
dd 80E4100h, 0E410286h,	4303830Ch, 7202300Eh, 410C0E0Ah
dd 41080EC3h, 47040EC6h, 0E0A570Bh, 0EC3410Ch, 0EC64108h
dd 0B4704h, 38h, 6E4h, 0FFFA7640h, 0EEh, 80E4100h, 0E410286h
dd 4303830Ch, 7202300Eh, 410C0E0Ah, 41080EC3h, 47040EC6h
dd 0E0A570Bh, 0EC3410Ch, 0EC64108h, 0B4704h, 2Ch, 720h
dd 0FFFA76F4h, 0D3h, 80E4100h, 0E430283h, 0A6C0230h, 0C341080Eh
dd 0B43040Eh, 80E0A53h,	40EC341h, 0B48h, 2Ch, 750h, 0FFFA7798h
dd 0D3h, 80E4100h, 0E430283h, 0A6C0230h, 0C341080Eh, 0B43040Eh
dd 80E0A53h, 40EC341h, 0B48h, 2Ch, 780h, 0FFFA783Ch, 0D3h
dd 80E4100h, 0E430283h,	0A6C0230h, 0C341080Eh, 0B43040Eh
dd 80E0A53h, 40EC341h, 0B48h, 3Ch, 7B0h, 0FFFA78E0h, 0C8h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0A7402h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 7F0h, 0FFFA7968h, 89h, 80E4100h
dd 0E410286h, 4303830Ch
dd 5B02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 2Ch
dd 820h, 0FFFA79C4h, 71h, 80E4100h, 0E410286h, 4303830Ch
dd 4402300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h, 0Bh, 20h
dd 850h, 0FFFA7A08h, 5Dh, 80E4100h, 0E430283h, 0E0A7130h
dd 0EC34108h, 0B4204h, 34h, 874h, 0FFFA7A44h, 95h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A64h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 2Ch, 8ACh, 0FFFA7AA4h
dd 0ABh, 80E4100h, 0E410286h, 4303830Ch, 5F02300Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 28h, 8DCh, 0FFFA7B20h, 8Bh
dd 80E4100h, 0E410286h,	4303830Ch, 0A7F300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B42040Eh, 18h, 908h, 0FFFA7B80h, 57h, 300E4300h
dd 40E0A6Fh, 0B42h, 18h, 924h, 0FFFA7BBCh, 51h,	300E4300h
dd 40E0A65h, 0B44h, 2Ch, 940h, 0FFFA7BF4h, 0BEh, 80E4100h
dd 0E430283h, 0A710230h, 0C341080Eh, 0B46040Eh,	80E0A7Bh
dd 40EC341h, 0B41h, 20h, 970h, 0FFFA7C84h, 85h,	80E4100h
dd 0E430283h, 0A520230h, 0C341080Eh, 0B41040Eh,	20h, 994h
dd 0FFFA7CE8h, 81h, 80E4100h, 0E430283h, 0A4D0230h, 0C341080Eh
dd 0B42040Eh, 20h, 9B8h, 0FFFA7D48h, 81h, 80E4100h, 0E430283h
dd 0A4D0230h, 0C341080Eh, 0B42040Eh, 20h, 9DCh,	0FFFA7DA8h
dd 81h,	80E4100h, 0E430283h, 0A4D0230h,	0C341080Eh, 0B42040Eh
dd 94h,	0A00h, 0FFFA7E08h, 45Fh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0E0A7102h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4404h, 140E0A9Ch
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 93020B44h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0E0A6B0Bh, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 30B4504h, 140E0262h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 18h, 0A98h, 0FFFA81D0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 3Ch, 0AB4h, 0FFFA8208h, 117h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 500E4305h, 0E0A4502h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h
dd 18h,	0AF4h, 0FFFA82E0h, 51h,	300E4300h, 40E0A66h, 0B43h
dd 98h,	0B10h, 0FFFA8318h, 5BEh, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	600E4305h, 0E0AEF02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 30B4204h, 0E0A0231h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 7F0B4704h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0A77020Bh, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B45040Eh, 0A012F03h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 34h, 0BACh, 0FFFA883Ch, 84h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A6Dh, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 18h
dd 0BE4h, 0FFFA8888h, 3Fh, 300E4300h, 40E0A76h,	0B41h
dd 58h,	0C00h, 0FFFA88ACh, 104h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A65h, 0C0EC341h, 80EC641h
dd 40EC741h, 0A670B46h,	0C341100Eh, 0C6410C0Eh,	0C741080Eh
dd 0B46040Eh, 0E0A5302h, 0EC34110h, 0EC6410Ch, 0EC74108h
dd 0B4504h, 18h, 0C5Ch,	0FFFA8954h, 3Fh, 300E4300h, 40E0A76h
dd 0B41h, 1Ch, 0C78h, 0FFFA8978h, 6Fh, 300E4300h, 40E0A73h
dd 0A6D0B46h, 0B41040Eh, 18h, 0C98h, 0FFFA89C8h, 95h, 300E4300h
dd 0E0A4B02h, 0B4204h, 34h, 0CB4h, 0FFFA8A44h, 0BFh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A49h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B42h, 20h, 0CECh, 0FFFA8ACCh
dd 6Bh,	80E4100h, 0E430283h, 0E0A7030h,	0EC34108h, 0B4304h
dd 3Ch,	0D10h, 0FFFA8B14h, 0F7h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AE602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 20h, 0D50h
dd 0FFFA8BCCh, 7Bh, 80E4100h, 0E430283h, 0E0A7C30h, 0EC34108h
dd 0B4304h, 18h, 0D74h,	0FFFA8C24h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 20h, 0D90h, 0FFFA8C5Ch, 61h, 80E4100h, 0E430283h
dd 0E0A6E30h, 0EC34108h, 0B4104h, 3Ch, 0DB4h, 0FFFA8C9Ch
dd 100h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0ACA02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 18h, 0DF4h, 0FFFA8D5Ch, 28h, 200E4300h
dd 40E0A5Fh, 0B41h, 18h, 0E10h,	0FFFA8D68h, 21Eh, 300E4300h
dd 0A021503h, 0B41040Eh, 18h, 0E2Ch, 0FFFA8F6Ch, 30h, 300E4300h
dd 40E0A67h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFA8F68h
dd 67h,	300E4300h, 0E0A5E02h, 0B4104h, 34h, 38h, 0FFFA8FB4h
dd 6Dh,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2300E43h
dd 100E0A57h, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 34h
dd 70h,	0FFFA8FECh, 0A9h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A6Fh, 0C0EC341h, 80EC641h
dd 40EC741h, 0B44h, 34h, 0A8h, 0FFFA9060h, 6Dh,	80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A5Ah
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 18h, 0E0h, 0FFFA9098h
dd 2Eh,	200E4300h, 40E0A65h, 0B41h, 2Ch, 0FCh, 0FFFA90ACh
dd 71h,	80E4100h, 0E430283h, 0E0A7630h,	0EC34108h, 4F0B4504h
dd 41080E0Ah, 44040EC3h, 0Bh, 18h, 12Ch, 0FFFA90F0h, 33h
dd 200E4300h, 40E0A66h,	0B41h, 1Ch, 148h, 0FFFA9108h, 6Bh
dd 200E4300h, 40E0A7Dh,	0A5D0B48h, 0B41040Eh, 20h, 168h
dd 0FFFA9154h, 45h, 80E4100h, 0E430287h, 0E0A7320h, 0EC74108h
dd 0B4404h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFA9160h
dd 30h,	300E4300h, 40E0A67h, 0B41h, 34h, 38h, 0FFFA9174h
dd 98h,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 2400E43h
dd 100E0A7Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B48h, 18h
dd 70h,	0FFFA91D4h, 56h, 300E4300h, 0E0A4D02h, 0B4104h
dd 20h,	8Ch, 0FFFA9210h, 63h, 80E4100h,	0E430283h, 0A400230h
dd 0C341080Eh, 0B43040Eh, 7Ch, 0B0h, 0FFFA9250h, 218h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 5C0E4402h, 2600E41h, 415C0E9Ch, 0E65600Eh
dd 600E415Ch, 0E0A8F02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 710B4204h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 47040EC5h, 0E0A6A0Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4504h, 7Ch, 130h, 0FFFA93E8h
dd 2D3h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0D00E4C05h, 65020480h, 480CC0Eh, 80D00E41h, 0E0A7704h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 20B4304h
dd 80CC0ED1h, 0D00E4104h, 0E5B0480h, 410480CCh,	480D00Eh
dd 80CC0E5Bh, 0D00E4104h, 0E510480h, 410480CCh,	480D00Eh
dd 80CC0E55h, 0D00E4104h, 480h,	2Ch, 1B0h, 0FFFA963Ch
dd 0C9h, 80E4100h, 0E430283h, 0A540240h, 0C341080Eh, 0B43040Eh
dd 0E0A6202h, 0EC34108h, 0B4504h, 20h, 1E0h, 0FFFA96D8h
dd 0F3h, 80E4100h, 0E430283h, 0A6E0240h, 0C341080Eh, 0B41040Eh
dd 34h,	204h, 0FFFA97A8h, 1D1h,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 3400E43h, 0E0A014Eh, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4104h, 18h, 23Ch, 0FFFA9944h, 37h, 300E4300h
dd 40E0A6Eh, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2Ch, 1Ch,	0FFFA9948h
dd 9Fh,	80E4100h, 0E410286h, 4303830Ch,	9202400Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 18h, 4Ch,	0FFFA99B8h, 55h
dd 300E4300h, 0E0A4C02h, 0B4104h, 20h, 68h, 0FFFA99F4h
dd 4Bh,	80E4100h, 0E430283h, 0A400230h,	0C341080Eh, 0B41040Eh
dd 2Ch,	8Ch, 0FFFA9A1Ch, 5Eh, 80E4100h,	0E410286h, 4303830Ch
dd 5002300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 20h
dd 0BCh, 0FFFA9A4Ch, 74h, 80E4100h, 0E430283h, 0A5F0230h
dd 0C341080Eh, 0B44040Eh, 54h, 0E0h, 0FFFA9A9Ch, 0D5h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A9902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 5F0B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 2Ch, 138h, 0FFFA9B1Ch, 8Ah
dd 80E4100h, 0E410286h,	4303830Ch, 6102300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 54h, 168h, 0FFFA9B78h, 0DDh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0A9902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 18h, 1C0h, 0FFFA9C00h, 36h
dd 200E4300h, 40E0A6Ch,	0B42h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 38h, 1Ch,	0FFFA9C04h
dd 6Eh,	80E4100h, 0E410286h, 4303830Ch,	4502300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0E0A550Bh, 0EC3410Ch, 0EC64108h
dd 0B4204h, 2Ch, 58h, 0FFFA9C38h, 5Fh, 80E4100h, 0E430283h
dd 0E0A7920h, 0EC34108h, 540B4604h, 41080E0Ah, 41040EC3h
dd 0Bh,	20h, 88h, 0FFFA9C68h, 51h, 80E4100h, 0E430283h
dd 0A420230h, 0C341080Eh, 0B45040Eh, 18h, 0ACh,	0FFFA9C98h
dd 95h,	300E4300h, 0E0A6A02h, 0B4304h, 18h, 0C8h, 0FFFA9D14h
dd 55h,	300E4300h, 0E0A4C02h, 0B4104h, 18h, 0E4h, 0FFFA9D50h
dd 4Ch,	300E4300h, 0E0A4302h, 0B4104h, 18h, 100h, 0FFFA9D80h
dd 30h,	300E4300h, 40E0A67h, 0B41h, 2Ch, 11Ch, 0FFFA9D94h
dd 0CFh, 80E4100h, 0E410286h, 4303830Ch, 5D02300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 2Ch, 14Ch, 0FFFA9E34h, 0DEh
dd 80E4100h, 0E410286h,	4303830Ch, 5D02300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 20h, 17Ch, 0FFFA9EE4h, 79h
dd 80E4100h, 0E430283h,	0A4E0240h, 0C341080Eh, 0B41040Eh
dd 2Ch,	1A0h, 0FFFA9F3Ch, 0D7h,	80E4100h, 0E410286h, 4303830Ch
dd 5D02300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 3Ch
dd 1D0h, 0FFFA9FE4h, 17Dh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A016C03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 34h
dd 210h, 0FFFAA124h, 149h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 3300E43h, 0E0A010Eh, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4104h, 38h, 248h, 0FFFAA238h, 0D7h, 80E4100h
dd 0E410286h, 4303830Ch, 5D02300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0A43020Bh, 0C3410C0Eh, 0C641080Eh, 0B47040Eh
dd 18h,	284h, 0FFFAA2D4h, 63h, 300E4300h, 40E0A7Ch, 0B41h
dd 38h,	2A0h, 0FFFAA31Ch, 0D3h,	80E4100h, 0E410286h, 4303830Ch
dd 8702300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0E0A570Bh
dd 0EC3410Ch, 0EC64108h, 0B4704h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch,	0FFFAA39Ch
dd 6Dh,	80E4100h, 0E430283h, 0A5B0230h,	0C341080Eh, 0B44040Eh
dd 2Ch,	40h, 0FFFAA3E8h, 1DFh, 80E4100h, 0E410286h, 4303830Ch
dd 0D203400Eh, 0C0E0A01h, 80EC341h, 40EC641h, 0B41h, 18h
dd 70h,	0FFFAA598h, 55h, 300E4300h, 0E0A4C02h, 0B4104h
dd 20h,	8Ch, 0FFFAA5D4h, 4Bh, 80E4100h,	0E430283h, 0A400230h
dd 0C341080Eh, 0B41040Eh, 2Ch, 0B0h, 0FFFAA5FCh, 9Dh, 80E4100h
dd 0E410286h, 4303830Ch, 8F02300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 20h,	0E0h, 0FFFAA66Ch, 74h, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B44040Eh,	2Ch, 104h
dd 0FFFAA6BCh, 89h, 80E4100h, 0E410286h, 4303830Ch, 6102300Eh
dd 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 20h, 134h, 0FFFAA718h
dd 75h,	80E4100h, 0E430283h, 0A5F0230h,	0C341080Eh, 0B44040Eh
dd 2Ch,	158h, 0FFFAA76Ch, 8Bh, 80E4100h, 0E410286h, 4303830Ch
dd 6102300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 20h
dd 188h, 0FFFAA7C8h, 75h, 80E4100h, 0E430283h, 0A5F0230h
dd 0C341080Eh, 0B44040Eh, 2Ch, 1ACh, 0FFFAA81Ch, 8Bh, 80E4100h
dd 0E410286h, 4303830Ch, 6102300Eh, 410C0E0Ah, 41080EC3h
dd 44040EC6h, 0Bh, 20h,	1DCh, 0FFFAA878h, 75h, 80E4100h
dd 0E430283h, 0A5F0230h, 0C341080Eh, 0B44040Eh,	2Ch, 200h
dd 0FFFAA8CCh, 8Ch, 80E4100h, 0E410286h, 4303830Ch, 6102300Eh
dd 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 20h, 230h, 0FFFAA928h
dd 75h,	80E4100h, 0E430283h, 0A5F0230h,	0C341080Eh, 0B44040Eh
dd 2Ch,	254h, 0FFFAA97Ch, 8Ch, 80E4100h, 0E410286h, 4303830Ch
dd 6102300Eh, 410C0E0Ah, 41080EC3h, 44040EC6h, 0Bh, 20h
dd 284h, 0FFFAA9D8h, 75h, 80E4100h, 0E430283h, 0A5F0230h
dd 0C341080Eh, 0B44040Eh, 54h, 2A8h, 0FFFAAA2Ch, 156h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A9A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 670B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 2Ch, 300h, 0FFFAAB2Ch, 6Dh
dd 80E4100h, 0E410286h,	4303830Ch, 5902300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 2Ch, 330h, 0FFFAAB6Ch, 8Ch
dd 80E4100h, 0E410286h,	4303830Ch, 6102300Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 0C0h, 360h, 0FFFAABC8h, 1C5h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0E0AA902h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 6F0B4404h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0E0A630Bh, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 630B4504h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0E0A5F0Bh, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 5F0B4504h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h, 0E0A5F0Bh
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFAACB4h
dd 63h,	300E4300h, 0E0A5A02h, 0B4104h, 20h, 38h, 0FFFAACFCh
dd 4Dh,	80E4100h, 0E430283h, 0A420230h,	0C341080Eh, 0B41040Eh
dd 3Ch,	5Ch, 0FFFAAD28h, 1C5h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 0A015A03h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 2Ch
dd 9Ch,	0FFFAAEB0h, 0BFh, 80E4100h, 0E410286h, 4303830Ch
dd 6F02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h, 0Bh, 34h
dd 0CCh, 0FFFAAF40h, 71h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A62h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 3Ch, 104h, 0FFFAAF7Ch, 162h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A013803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B41040Eh, 20h, 144h, 0FFFAB0A0h, 0DEh, 80E4100h, 0E430283h
dd 0AA60230h, 0C341080Eh, 0B41040Eh, 40h, 168h,	0FFFAB15Ch
dd 2D7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0E00E4C05h, 4E030480h, 140E0A01h, 100EC341h,	0C0EC641h
dd 80EC741h, 40EC541h, 0B42h, 2Ch, 1ACh, 0FFFAB3F0h, 71h
dd 80E4100h, 0E410286h,	4303830Ch, 5F02400Eh, 410C0E0Ah
dd 41080EC3h, 42040EC6h, 0Bh, 3Ch, 1DCh, 0FFFAB434h, 681h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0ABD02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 58h, 21Ch, 0FFFABA78h, 143h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 6E300E43h, 41100E0Ah
dd 410C0EC3h, 41080EC6h, 41040EC7h, 0AA7020Bh, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B46040Eh, 100E0A5Fh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B46h, 2Ch, 278h, 0FFFABB60h, 9Ah
dd 80E4100h, 0E430283h,	0A630230h, 0C341080Eh, 0B48040Eh
dd 80E0A5Fh, 40EC341h, 0B45h, 4Ch, 2A8h, 0FFFABBCCh, 17Fh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 412C0EC5h, 0A63300Eh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh
dd 0B46040Eh, 100E0A7Ah, 0C0EC341h, 80EC641h, 40EC741h
dd 0B43h, 34h, 2F8h, 0FFFABCFCh, 168h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2500E43h, 100E0AABh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B44h, 18h, 330h, 0FFFABE2Ch, 41h
dd 300E4300h, 40E0A78h,	0B41h, 18h, 34Ch, 0FFFABE54h, 75h
dd 300E4300h, 0E0A4302h, 0B4204h, 34h, 368h, 0FFFABEB0h
dd 0A7h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A56h, 0C0EC341h, 80EC641h, 40EC741h, 0B45h, 3Ch
dd 3A0h, 0FFFABF20h, 13Ch, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A9402h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 3E0h
dd 0FFFAC01Ch, 13Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A9402h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4104h, 18h, 420h, 0FFFAC118h
dd 50h,	400E4300h, 0E0A4702h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFAC134h
dd 3Fh,	300E4300h, 40E0A76h, 0B41h, 3Ch, 38h, 0FFFAC158h
dd 158h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A8E02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 28h, 78h, 0FFFAC270h, 5Eh, 80E4100h
dd 0E410286h, 4303830Ch, 0A78300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 3Ch, 0A4h, 0FFFAC2A4h, 0A3h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A7002h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 20h,	0E4h, 0FFFAC308h, 87h, 80E4100h, 0E430283h, 0E0A7D30h
dd 0EC34108h, 0B4204h, 3Ch, 108h, 0FFFAC36Ch, 66h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A5502h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 2Ch, 148h, 0FFFAC394h, 6Eh,	80E4100h, 0E430283h
dd 0E0A7030h, 0EC34108h, 6B0B4704h, 41080E0Ah, 41040EC3h
dd 0Bh,	18h, 178h, 0FFFAC3D4h, 23h, 200E4300h, 40E0A5Ah
dd 0B41h, 18h, 194h, 0FFFAC3DCh, 51h, 300E4300h, 0E0A4802h
dd 0B4104h, 3Ch, 1B0h, 0FFFAC414h, 0BDh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A4A02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4304h
dd 3Ch,	1F0h, 0FFFAC494h, 1AEh,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0A7302h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 3Ch, 230h
dd 0FFFAC604h, 0D0h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A4E02h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 18h, 270h, 0FFFAC694h
dd 38h,	200E4300h, 40E0A6Bh, 0B45h, 18h, 28Ch, 0FFFAC6B0h
dd 43h,	300E4300h, 40E0A73h, 0B42h, 3Ch, 2A8h, 0FFFAC6D8h
dd 165h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A9D02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 3Ch, 2E8h, 0FFFAC800h, 52Bh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0AB402h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 40h, 328h, 0FFFACCECh, 1E4h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 1060301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	3Ch, 36Ch, 0FFFACE8Ch, 368h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0A021903h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B44040Eh
dd 18h,	3ACh, 0FFFAD1B4h, 37h, 300E4300h, 40E0A6Eh, 0B41h
dd 20h,	3C8h, 0FFFAD1D0h, 49h, 80E4100h, 0E430283h, 0E0A7E30h
dd 0EC34108h, 0B4104h, 18h, 3ECh, 0FFFAD1F8h, 37h, 300E4300h
dd 40E0A6Eh, 0B41h, 18h, 408h, 0FFFAD214h, 37h,	300E4300h
dd 40E0A6Eh, 0B41h, 20h, 424h, 0FFFAD230h, 0A9h, 80E4100h
dd 0E430283h, 0A600260h, 0C341080Eh, 0B43040Eh,	3Ch, 448h
dd 0FFFAD2B8h, 521h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 0A00E4605h, 0AB20201h, 0C341140Eh, 0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B44040Eh, 54h, 488h, 0FFFAD79Ch
dd 1BFh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AD602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4704h,	140E0ACDh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 0B41h, 3Ch, 4E0h, 0FFFAD904h, 281h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A5B02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 520h, 0FFFADB48h, 491h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0E0A7A02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 3Ch, 560h, 0FFFADF9Ch, 3B2h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 700E4305h, 0A015A03h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B43040Eh
dd 3Ch,	5A0h, 0FFFAE310h, 0C8h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A9C02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 5E0h
dd 0FFFAE398h, 122h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 400E4305h, 0E0A7602h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 0B4304h, 3Ch, 620h, 0FFFAE47Ch
dd 111h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0ADD02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4404h, 40h, 660h, 0FFFAE550h, 69Ch, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 800E4305h
dd 1010301h, 41140E0Ah,	41100EC3h, 410C0EC6h, 41080EC7h
dd 44040EC5h, 0Bh, 3Ch,	6A4h, 0FFFAEBA8h, 195h,	80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 0E0A8902h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4404h, 2Ch, 6E4h, 0FFFAED00h, 105h, 80E4100h, 0E410286h
dd 4303830Ch, 5002500Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	20h, 714h, 0FFFAEDD8h, 0B9h, 80E4100h, 0E430283h
dd 0A450230h, 0C341080Eh, 0B42040Eh, 6Ch, 738h,	0FFFAEE70h
dd 3E1h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A6202h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4304h,	140E0AFBh, 100EC341h, 0C0EC641h
dd 80EC741h, 40EC541h, 6F030B45h, 140E0A01h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B45h, 18h, 7A8h, 0FFFAF1E4h
dd 27h,	200E4300h, 40E0A5Ah, 0B45h, 18h, 7C4h, 0FFFAF1F0h
dd 5Ah,	300E4300h, 40E0A63h, 0B42h, 20h, 7E0h, 0FFFAF230h
dd 58h,	80E4100h, 0E430283h, 0E0A7E30h,	0EC34108h, 0B4104h
dd 18h,	804h
dd 0FFFAF264h, 38h, 200E4300h, 40E0A6Bh, 0B45h,	40h, 820h
dd 0FFFAF280h, 323h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 800E4305h, 1350301h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 3Ch, 864h, 0FFFAF560h
dd 111h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A9B02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 28h, 8A4h, 0FFFAF634h, 4Ch, 80E4100h
dd 0E410286h, 4303830Ch, 0A7F300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 2Ch, 8D0h, 0FFFAF654h, 149h, 80E4100h, 0E410286h
dd 4303830Ch, 7C02400Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	2Ch, 900h, 0FFFAF770h, 12Fh, 80E4100h, 0E410287h
dd 4303860Ch, 5102300Eh, 410C0E0Ah, 41080EC6h, 44040EC7h
dd 0Bh,	34h, 930h, 0FFFAF870h, 107h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2600E43h, 100E0A84h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 34h, 968h, 0FFFAF940h, 6Fh
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2400E43h
dd 100E0A60h, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 34h
dd 9A0h, 0FFFAF978h, 168h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2400E43h, 100E0AE9h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B42h, 18h, 9D8h, 0FFFAFAA8h, 23h,	200E4300h
dd 40E0A5Ah, 0B41h, 18h, 9F4h, 0FFFAFAB0h, 23h,	200E4300h
dd 40E0A5Ah, 0B41h, 18h, 0A10h,	0FFFAFAB8h, 23h, 200E4300h
dd 40E0A5Ah, 0B41h, 20h, 0A2Ch,	0FFFAFAC0h, 0A1h, 0B00E4600h
dd 0E520201h, 0E4101ACh, 0A5D01B0h, 0B42040Eh, 18h, 0A50h
dd 0FFFAFB40h, 90h, 0B00E4600h,	0A580201h, 0B42040Eh, 18h
dd 0A6Ch, 0FFFAFBB4h, 5Dh, 300E4300h, 40E0A74h,	0B41h
dd 18h,	0A88h, 0FFFAFBF8h, 3Fh,	300E4300h, 40E0A76h, 0B41h
dd 40h,	0AA4h, 0FFFAFC1Ch, 518Fh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 900E4305h, 23A0301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	2Ch, 0AE8h, 0FFFB4D68h,	0DFh, 80E4100h,	0E410286h
dd 4303830Ch, 5F02300Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	2Ch, 0B18h, 0FFFB4E18h,	0C0h, 80E4100h,	0E410286h
dd 4303830Ch, 8A02300Eh, 410C0E0Ah, 41080EC3h, 43040EC6h
dd 0Bh,	34h, 0B48h, 0FFFB4EA8h,	0E1h, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0AA5h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B42h, 18h, 0B80h, 0FFFB4F54h, 38h
dd 200E4300h, 40E0A6Bh,	0B45h, 18h, 0B9Ch, 0FFFB4F70h
dd 38h,	200E4300h, 40E0A6Bh, 0B45h, 54h, 0BB8h,	0FFFB4F8Ch
dd 12Ah, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AE602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 530B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h
dd 41080EC7h, 45040EC5h, 0Bh, 2Ch, 0C10h, 0FFFB5060h, 77h
dd 80E4100h, 0E410286h,	4303830Ch, 4602300Eh, 410C0E0Ah
dd 41080EC3h, 43040EC6h, 0Bh, 2Ch, 0C40h, 0FFFB50A8h, 92h
dd 80E4100h, 0E430283h,	0A590230h, 0C341080Eh, 0B42040Eh
dd 80E0A67h, 40EC341h, 0B45h, 2Ch, 0C70h, 0FFFB510Ch, 0D9h
dd 80E4100h, 0E410286h,	4303830Ch, 6902400Eh, 410C0E0Ah
dd 41080EC3h, 44040EC6h, 0Bh, 3Ch, 0CA0h, 0FFFB51B8h, 1D6h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A011203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 18h, 0CE0h, 0FFFB5350h, 3Dh
dd 200E4300h, 40E0A70h,	0B45h, 20h, 0CFCh, 0FFFB5374h
dd 130h, 400E4300h, 0E0A9802h, 670B4104h, 45040E0Ah, 0Bh
dd 34h,	0D20h, 0FFFB5480h, 20Ch, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 3300E43h, 0E0A0107h, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 0B4404h, 54h, 0D58h, 0FFFB5654h, 0FFh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A8C02h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 20B4504h, 140E0A59h,	100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0B41h, 3Ch, 0DB0h,	0FFFB56FCh, 2A8h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 700E4305h
dd 0A022603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 40h, 0DF0h, 0FFFB5964h, 345h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 0F00E4605h, 1DA0308h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h
dd 0Bh,	20h, 0E34h, 0FFFB5C68h,	0CEh, 80E4100h,	0E430283h
dd 0AB20230h, 0C341080Eh, 0B45040Eh, 2Ch, 0E58h, 0FFFB5D14h
dd 71h,	80E4100h, 0E410286h, 4303830Ch,	6402400Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 0E88h, 0FFFB5D58h, 329h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A01C703h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B42040Eh, 18h, 0EC8h, 0FFFB6044h, 77h
dd 500E4300h, 0E0A6E02h, 0B4104h, 18h, 0EE4h, 0FFFB60A0h
dd 77h,	500E4300h, 0E0A6E02h, 0B4104h, 3Ch, 0F00h, 0FFFB60FCh
dd 3DDh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 0E00E4605h, 0ADD0202h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 2Ch, 0F40h, 0FFFB649Ch, 68h
dd 80E4100h, 0E410286h,	4303830Ch, 5702300Eh, 410C0E0Ah
dd 41080EC3h, 45040EC6h, 0Bh, 44h, 0F70h, 0FFFB64D4h, 0C4h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A64h, 0C0EC341h, 80EC641h, 40EC741h, 0A7E0B47h
dd 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B43040Eh, 34h
dd 0FB8h, 0FFFB6550h, 78h, 80E4100h, 0E410287h,	4103860Ch
dd 483100Eh, 2300E43h, 100E0A62h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 40h, 0FF0h,	0FFFB6590h, 8DAh, 80E4100h
dd 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	0F00E4C05h, 2DC0320h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 18h
dd 1034h, 0FFFB6E28h, 40h, 200E4300h, 40E0A73h,	0B45h
dd 3Ch,	1050h, 0FFFB6E4Ch, 128h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AEC02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h, 3Ch, 1090h
dd 0FFFB6F34h, 220h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 600E4305h, 0A019603h, 0C341140Eh,	0C641100Eh
dd 0C7410C0Eh, 0C541080Eh, 0B43040Eh, 2Ch, 10D0h, 0FFFB7114h
dd 1B7h, 80E4100h, 0E410286h, 4303830Ch, 7002300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 3Ch, 1100h, 0FFFB729Ch, 8B9h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A016903h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B44040Eh, 18h, 1140h, 0FFFB7B18h, 0D5h
dd 500E4300h, 0E0A6602h, 0B4304h, 34h, 115Ch, 0FFFB7BD4h
dd 0C5h, 80E4100h, 0E410287h, 4103860Ch, 483100Eh, 2300E43h
dd 100E0A6Bh, 0C0EC341h, 80EC641h, 40EC741h, 0B44h, 18h
dd 1194h, 0FFFB7C64h, 30h, 200E4300h, 40E0A63h,	0B45h
dd 54h,	11B0h, 0FFFB7C78h, 1A7h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0A016003h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh, 140E0A6Dh
dd 100EC341h, 0C0EC641h, 80EC741h, 40EC541h, 0B41h, 3Ch
dd 1208h, 0FFFB7DC8h, 0F7h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 0E0AAF02h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4204h, 34h, 1248h
dd 0FFFB7E80h, 10Dh, 80E4100h, 0E410287h, 4103860Ch, 483100Eh
dd 2400E43h, 100E0A72h,	0C0EC341h, 80EC641h, 40EC741h
dd 0B41h, 34h, 1280h, 0FFFB7F58h, 130h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	3300E43h, 0E0A0101h, 0EC34110h
dd 0EC6410Ch, 0EC74108h, 0B4104h, 3Ch, 12B8h, 0FFFB8050h
dd 140h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0ACC02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 3Ch, 12F8h, 0FFFB8150h, 142h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 43240E4Eh
dd 7602400Eh, 41100E0Ah, 410C0EC3h, 41080EC6h, 44040EC7h
dd 0Bh,	34h, 1338h, 0FFFB8254h,	114h, 80E4100h,	0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A64h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B43h, 3Ch, 1370h, 0FFFB8330h, 153h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 400E4305h, 0E0AE602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 34h, 13B0h, 0FFFB8444h, 0F4h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0AB6h
dd 0C0EC341h, 80EC641h,	40EC741h, 0B41h, 3Ch, 13E8h, 0FFFB8500h
dd 12Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AF702h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4204h, 34h, 1428h, 0FFFB85ECh, 0BEh, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 100E0A6Ch
dd 0C0EC341h, 80EC641h,	40EC741h, 0B43h, 2Ch, 1460h, 0FFFB8674h
dd 0E6h, 80E4100h, 0E410287h, 4303830Ch, 6802300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC7h, 0Bh, 3Ch, 1490h, 0FFFB872Ch, 1BCh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A7C02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 14D0h, 0FFFB88A8h, 30h, 200E4300h
dd 40E0A63h, 0B45h, 3Ch, 14ECh,	0FFFB88BCh, 1EFh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 600E4305h
dd 0A019603h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 2Ch, 152Ch, 0FFFB8A6Ch, 7Ch, 80E4100h, 0E410286h
dd 4303830Ch, 6802300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	18h, 155Ch, 0FFFB8AB8h,	23h, 200E4300h,	40E0A5Ah
dd 0B41h, 3Ch, 1578h, 0FFFB8AC0h, 0E2h,	80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 600E4305h, 0E0ABC02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4104h
dd 54h,	15B8h, 0FFFB8B64h, 150h, 80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A9602h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 550B4704h, 41140E0Ah
dd 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h, 0Bh, 18h
dd 1610h, 0FFFB8C5Ch, 27h, 200E4300h, 40E0A5Ah,	0B45h
dd 34h,	162Ch, 0FFFB8C68h, 8Bh,	80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2400E43h, 100E0A7Ch, 0C0EC341h, 80EC641h
dd 40EC741h, 0B41h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 28h, 1Ch,	0FFFB8CA4h
dd 8Ah,	80E4100h, 0E410286h, 4303830Ch,	0A7E300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B43040Eh, 2Ch, 48h, 0FFFB8D04h,	8Eh, 80E4100h
dd 0E410286h, 4303830Ch, 4302300Eh, 410C0E0Ah, 41080EC3h
dd 42040EC6h, 0Bh, 18h,	78h, 0FFFB8D64h, 51h, 300E4300h
dd 40E0A65h, 0B44h, 2Ch, 94h, 0FFFB8D9Ch, 9Eh, 80E4100h
dd 0E430283h, 0A400230h, 0C341080Eh, 0B47040Eh,	80E0A7Bh
dd 40EC341h, 0B44h, 20h, 0C4h, 0FFFB8E0Ch, 81h,	80E4100h
dd 0E430283h, 0A4B0230h, 0C341080Eh, 0B44040Eh,	20h, 0E8h
dd 0FFFB8E6Ch, 81h, 80E4100h, 0E430283h, 0A4D0230h, 0C341080Eh
dd 0B42040Eh, 18h, 10Ch, 0FFFB8ECCh, 55h, 300E4300h, 40E0A69h
dd 0B44h, 18h, 128h, 0FFFB8F08h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 144h, 0FFFB8F40h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 160h, 0FFFB8F78h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 17Ch, 0FFFB8FB0h, 53h, 300E4300h, 40E0A6Bh
dd 0B42h, 18h, 198h, 0FFFB8FE8h, 53h, 300E4300h, 40E0A6Bh
dd 0B42h, 18h, 1B4h, 0FFFB9020h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 1D0h, 0FFFB9058h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 1ECh, 0FFFB9090h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 208h, 0FFFB90C8h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 2Ch, 224h, 0FFFB9100h, 6Ah, 80E4100h,	0E430283h
dd 0E0A7120h, 0EC34108h, 670B4204h, 41080E0Ah, 45040EC3h
dd 0Bh,	2Ch, 254h, 0FFFB913Ch, 6Ah, 80E4100h, 0E430283h
dd 0E0A7120h, 0EC34108h, 670B4204h, 41080E0Ah, 45040EC3h
dd 0Bh,	2Ch, 284h, 0FFFB9178h, 0A7h, 80E4100h, 0E410286h
dd 4303830Ch, 5C02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	18h, 2B4h, 0FFFB91F0h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 2D0h, 0FFFB9228h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 2ECh, 0FFFB9260h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 308h, 0FFFB9298h, 53h, 300E4300h, 40E0A6Ah
dd 0B43h, 18h, 324h, 0FFFB92D0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 340h, 0FFFB9308h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 35Ch, 0FFFB9340h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 378h, 0FFFB9378h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 394h, 0FFFB93B0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 3B0h, 0FFFB93E8h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 3CCh, 0FFFB9420h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 3E8h, 0FFFB9458h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 404h, 0FFFB9490h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 420h, 0FFFB94C8h, 57h, 300E4300h, 40E0A69h
dd 0B44h, 18h, 43Ch, 0FFFB9504h, 57h, 300E4300h, 40E0A69h
dd 0B44h, 18h, 458h, 0FFFB9540h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 474h, 0FFFB9578h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 490h, 0FFFB95B0h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 4ACh, 0FFFB95E8h, 54h, 300E4300h, 40E0A66h
dd 0B43h, 18h, 4C8h, 0FFFB9620h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 34h, 4E4h, 0FFFB9658h, 27Fh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A5Bh, 0C0EC341h
dd 80EC641h, 40EC741h, 0B44h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFB9888h
dd 65h,	200E4300h, 40E0A7Dh, 0B44h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFB98BCh
dd 2Ch,	200E4300h, 40E0A63h, 0B41h, 18h, 38h, 0FFFB98CCh
dd 2Eh,	200E4300h, 40E0A65h, 0B41h, 3Ch, 54h, 0FFFB98E0h
dd 9Bh,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A8A02h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 2Ch, 94h, 0FFFB993Ch, 0B2h, 80E4100h
dd 0E430283h, 0A760230h, 0C341080Eh, 0B45040Eh,	80E0A6Bh
dd 40EC341h, 0B41h, 1Ch, 0C4h, 0FFFB99C0h, 4Dh,	200E4300h
dd 40E0A71h, 0A4F0B44h,	0B41040Eh, 3Ch,	0E4h, 0FFFB99F0h
dd 6Dh,	80E4100h, 0E410285h, 4103870Ch,	486100Eh, 83140E41h
dd 400E4305h, 0E0A5602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4304h, 18h, 124h, 0FFFB9A20h, 30h, 200E4300h
dd 40E0A63h, 0B45h, 20h, 140h, 0FFFB9A34h, 55h,	80E4100h
dd 0E430283h, 0A460230h, 0C341080Eh, 0B41040Eh,	38h, 164h
dd 0FFFB9A68h, 63h, 80E4100h, 0E410286h, 4303830Ch, 4202200Eh
dd 410C0E0Ah, 41080EC3h, 43040EC6h, 0E0A4F0Bh, 0EC3410Ch
dd 0EC64108h, 0B4104h, 2Ch, 1A0h, 0FFFB9A90h, 56h, 80E4100h
dd 0E430283h, 0E0A7820h, 0EC34108h, 4F0B4304h, 41080E0Ah
dd 41040EC3h, 0Bh, 54h,	1D0h, 0FFFB9AB8h, 79h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 300E4305h
dd 0E0A5202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 4F0B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 54h,	228h, 0FFFB9ADCh, 99h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A7202h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 4F0B4304h, 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h
dd 41040EC5h, 0Bh, 1Ch,	280h, 0FFFB9B20h, 4Dh, 200E4300h
dd 40E0A72h, 0A4F0B43h,	0B41040Eh, 1Ch,	2A0h, 0FFFB9B50h
dd 4Dh,	200E4300h, 40E0A70h, 0A4F0B45h,	0B41040Eh, 38h
dd 2C0h, 0FFFB9B80h, 63h, 80E4100h, 0E410286h, 4303830Ch
dd 4002200Eh, 410C0E0Ah, 41080EC3h, 45040EC6h, 0E0A4F0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 20h, 2FCh, 0FFFB9BA8h
dd 55h,	80E4100h, 0E430283h, 0A460230h,	0C341080Eh, 0B41040Eh
dd 38h,	320h, 0FFFB9BDCh, 63h, 80E4100h, 0E410286h, 4303830Ch
dd 4202200Eh, 410C0E0Ah, 41080EC3h, 43040EC6h, 0E0A4F0Bh
dd 0EC3410Ch, 0EC64108h, 0B4104h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 34h, 1Ch,	0FFFB9BECh
dd 4Ah,	80E4100h, 0E410287h, 4103860Ch,	483100Eh, 7B300E43h
dd 41100E0Ah, 410C0EC3h, 41080EC6h, 41040EC7h, 0Bh, 34h
dd 54h,	0FFFB9C00h, 57h, 80E4100h, 0E410287h, 4103860Ch
dd 483100Eh, 2300E43h, 100E0A44h, 0C0EC341h, 80EC641h
dd 40EC741h, 0B45h, 20h, 8Ch, 0FFFB9C20h, 0E4h,	80E4100h
dd 0E430283h, 0A6A0240h, 0C341080Eh, 0B41040Eh,	20h, 0B0h
dd 0FFFB9CE0h, 5Eh, 80E4100h, 0E430283h, 0A530230h, 0C341080Eh
dd 0B41040Eh, 24h, 0D4h, 0FFFB9D1Ch, 81h, 80E4100h, 0E460283h
dd 730210B0h, 41080E0Ah, 41040EC3h, 0Bh, 2Ch, 0FCh, 0FFFB9D78h
dd 76h,	80E4100h, 0E430283h, 0E0A7C30h,	0EC34108h, 670B4704h
dd 41080E0Ah, 41040EC3h, 0Bh, 1Ch, 12Ch, 0FFFB9DC0h, 67h
dd 300E4300h, 40E0A6Ah,	0A6D0B47h, 0B41040Eh, 18h, 14Ch
dd 0FFFB9E08h, 8Ah, 300E4300h, 40E0A7Bh, 0B42h,	20h, 168h
dd 0FFFB9E78h, 99h, 80E4100h, 0E430283h, 0A4E0240h, 0C341080Eh
dd 0B41040Eh, 54h, 18Ch, 0FFFB9EF0h, 0F3h, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 400E4305h, 0E0A6D02h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 670B4804h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 45040EC5h
dd 0Bh,	2Ch, 1E4h, 0FFFB9F8Ch, 6Ah, 80E4100h, 0E430283h
dd 0E0A7C20h, 0EC34108h, 5B0B4304h, 41080E0Ah, 45040EC3h
dd 0Bh,	2Ch, 214h, 0FFFB9FC8h, 0A9h, 80E4100h, 0E410286h
dd 4303830Ch, 5C02300Eh, 410C0E0Ah, 41080EC3h, 41040EC6h
dd 0Bh,	34h, 244h, 0FFFBA044h, 0C2h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A73h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 28h, 27Ch, 0FFFBA0D0h, 67h
dd 80E4100h, 0E410286h,	4303830Ch, 0A7C300Eh, 0C3410C0Eh
dd 0C641080Eh, 0B41040Eh, 18h, 2A8h, 0FFFBA10Ch, 51h, 300E4300h
dd 40E0A66h, 0B43h, 28h, 2C4h, 0FFFBA144h, 67h,	80E4100h
dd 0E410286h, 4303830Ch, 0A7C300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B41040Eh, 18h, 2F0h, 0FFFBA180h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 40h, 30Ch, 0FFFBA1B8h, 49Dh, 80E4100h, 0E410285h
dd 4103870Ch, 486100Eh,	83140E41h, 800E4305h, 3220301h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 43040EC5h
dd 0Bh,	18h, 350h, 0FFFBA614h, 51h, 300E4300h, 40E0A66h
dd 0B43h, 38h, 36Ch, 0FFFBA64Ch, 112h, 80E4100h, 0E410286h
dd 4303830Ch, 0B902300Eh, 410C0E0Ah, 41080EC3h,	48040EC6h
dd 0E0A7B0Bh, 0EC3410Ch, 0EC64108h, 0B4104h, 68h, 3A8h
dd 0FFFBA724h, 118h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A9902h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 4F0B4804h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 41040EC5h, 0E0A670Bh, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4504h, 54h, 414h
dd 0FFFBA7D0h, 107h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh
dd 83140E41h, 500E4305h, 0E0A9102h, 0EC34114h, 0EC64110h
dd 0EC7410Ch, 0EC54108h, 670B4804h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 45040EC5h, 0Bh, 3Ch, 46Ch, 0FFFBA880h
dd 206h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 700E4305h, 0A014203h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B43040Eh, 18h, 4ACh, 0FFFBAA48h, 4Fh, 400E4300h
dd 0E0A4602h, 0B4104h, 18h, 4C8h, 0FFFBAA7Ch, 4Fh, 400E4300h
dd 0E0A4602h, 0B4104h, 3Ch, 4E4h, 0FFFBAAB0h, 0F0h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 400E4305h
dd 0E0A8002h, 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h
dd 0B4104h, 34h, 524h, 0FFFBAB60h, 61h,	80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0A52h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 3Ch, 55Ch, 0FFFBAB8Ch, 137h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0AE602h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 0B4104h, 18h, 59Ch, 0FFFBAC84h, 3Fh, 300E4300h
dd 40E0A76h, 0B41h, 20h, 5B8h, 0FFFBACA8h, 0B5h, 80E4100h
dd 0E430283h, 0A750230h, 0C341080Eh, 0B42040Eh,	20h, 5DCh
dd 0FFFBAD3Ch, 55h, 80E4100h, 0E430283h, 0A440240h, 0C341080Eh
dd 0B43040Eh, 18h, 600h, 0FFFBAD70h, 3Ah, 200E4300h, 40E0A6Dh
dd 0B45h, 2Ch, 61Ch, 0FFFBAD90h, 91h, 80E4100h,	0E410286h
dd 4303830Ch, 6302400Eh, 410C0E0Ah, 41080EC3h, 42040EC6h
dd 0Bh,	34h, 64Ch, 0FFFBADF4h, 108h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2300E43h, 100E0A76h, 0C0EC341h
dd 80EC641h, 40EC741h, 0B41h, 3Ch, 684h, 0FFFBAEC4h, 28Dh
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0A016803h, 0C341140Eh, 0C641100Eh, 0C7410C0Eh
dd 0C541080Eh, 0B41040Eh, 34h, 6C4h, 0FFFBB114h, 139h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0AFAh, 0C0EC341h, 80EC641h, 40EC741h, 0B41h, 3Ch
dd 6FCh, 0FFFBB218h, 0ECh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	400E4305h, 0E0A5902h, 0EC34114h
dd 0EC64110h, 0EC7410Ch, 0EC54108h, 0B4404h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFBB2ACh
dd 23h,	200E4300h, 40E0A5Ah, 0B41h, 20h, 38h, 0FFFBB2B4h
dd 10Bh, 80E4100h, 0E430283h, 0A4E0230h, 0C341080Eh, 0B41040Eh
dd 44h,	5Ch, 0FFFBB39Ch, 0E4h, 80E4100h, 0E430283h, 2C0E7030h
dd 56300E41h, 0E412C0Eh, 2C0E4F30h, 52300E41h, 0E412C0Eh
dd 2C0E5230h, 4B300E41h, 0E412C0Eh, 0E0A6C30h, 0EC34108h
dd 0B4504h, 40h, 0A4h, 0FFFBB438h, 0C5h, 80E4100h, 0E410286h
dd 4303830Ch, 0E5A300Eh, 300E412Ch, 412C0E6Ah, 0E57300Eh
dd 300E412Ch, 412C0E4Fh, 0A54300Eh, 0C3410C0Eh,	0C641080Eh
dd 0B43040Eh, 4Ch, 0E8h, 0FFFBB4BCh, 0D7h, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	64300E43h, 0E412C0Eh, 2C0E6D30h
dd 4E300E41h, 0E412C0Eh, 0E0A5A30h, 0EC34110h, 0EC6410Ch
dd 0EC74108h, 20B4304h,	43200E45h, 300Eh, 54h, 138h, 0FFFBB544h
dd 162h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 0E0A6102h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4404h,	414C0E42h, 0E70500Eh, 500E414Ch
dd 414C0E5Bh, 0E4F500Eh, 500E414Ch, 54h, 190h, 0FFFBB650h
dd 136h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 0E0A5802h, 0EC34114h, 0EC64110h, 0EC7410Ch
dd 0EC54108h, 20B4104h,	434C0E61h, 0E4F600Eh, 600E415Ch
dd 415C0E52h, 0E4F600Eh, 600E415Ch, 11Ch, 1E8h,	0FFFBB730h
dd 6E7h, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 800E4605h, 0E5E0207h, 0E4106FCh, 52020780h, 4106FC0Eh
dd 307800Eh, 0FC0E0155h, 800E4106h, 0EC0E6F07h,	800E4306h
dd 0FC0E4E07h, 800E4106h, 0FC0E5B07h, 800E4106h, 0F80E5D07h
dd 800E4306h, 0E440207h, 0E4306F0h, 0E5B0780h, 0E4106FCh
dd 0E740780h, 0E4106FCh, 0E4C0780h, 0E4106FCh, 0A670780h
dd 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B45040Eh
dd 0F80E4202h, 800E4306h, 0F80E6007h, 800E4306h, 0F80E6007h
dd 800E4306h, 0FC0E6807h, 800E4106h, 0FC0E5207h, 800E4106h
dd 0FC0E4F07h, 800E4106h, 0FC0E5B07h, 800E4106h, 0F80E6907h
dd 800E4306h, 0F80E7A07h, 800E4306h, 0F80E6007h, 800E4306h
dd 0F80E5F07h, 800E4306h, 0EB50207h, 0E4306F8h,	0E600780h
dd 0E4306F8h, 0E600780h, 0E4306F8h, 97020780h, 4106FC0Eh
dd 207800Eh, 6FC0E41h, 7800E41h, 5Ch, 308h, 0FFFBBCF8h
dd 17Bh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 400E4E02h, 66500E43h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 42040EC5h, 0E8F020Bh, 500E414Ch
dd 414C0E4Eh, 0E6D500Eh, 500E4340h, 414C0E48h, 500Eh, 5Ch
dd 368h, 0FFFBBE14h, 193h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 400E5202h, 74500E43h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 44040EC5h
dd 4C0E500Bh, 4E500E41h, 0E414C0Eh, 400E6D50h, 48500E43h
dd 0E414C0Eh, 50h, 44h,	3C8h, 0FFFBBF48h, 92h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 100E0A4Fh
dd 0C0EC341h, 80EC641h,	40EC741h, 0A6D0B44h, 0C341100Eh
dd 0C6410C0Eh, 0C741080Eh, 0B41040Eh, 70h, 410h, 0FFFBBF94h
dd 2ACh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 5C0E6602h, 2600E41h, 43500E45h, 0E57600Eh
dd 600E415Ch, 140E0A55h, 100EC341h, 0C0EC641h, 80EC741h
dd 40EC541h, 0E7F0B41h,	600E415Ch, 580E4702h, 2600E43h
dd 43500E62h, 0E6B600Eh, 600E4350h, 43500E6Ah, 600Eh, 78h
dd 484h, 0FFFBC1CCh, 393h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 6C0EA202h, 5C700E41h
dd 0E43640Eh, 6C0E6770h, 62700E41h, 0E43640Eh, 6C0E6170h
dd 60700E41h, 0E43640Eh, 640E6770h, 69700E43h, 0E43640Eh
dd 6C0E6270h, 6F700E41h, 0E43640Eh, 0A4C0270h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B42040Eh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFBC4CCh
dd 95h,	400E4300h, 432C0E7Ch, 0A57400Eh, 0B43040Eh, 30h
dd 3Ch,	0FFFBC544h, 5Fh, 80E4100h, 0E410286h, 4303830Ch
dd 0E67300Eh, 300E4324h, 0C0E0A58h, 80EC341h, 40EC641h
dd 0B41h, 28h, 70h, 0FFFBC570h,	7Fh, 80E4100h, 0E430283h
dd 240E6730h, 54300E43h, 41080E0Ah, 41040EC3h, 0Bh, 28h
dd 9Ch,	0FFFBC5C4h, 6Eh, 80E4100h, 0E430283h, 2C0E7740h
dd 54400E43h, 41080E0Ah, 41040EC3h, 0Bh, 28h, 0C8h, 0FFFBC608h
dd 6Eh,	80E4100h, 0E430283h, 2C0E7740h,	54400E43h, 41080E0Ah
dd 41040EC3h, 0Bh, 28h,	0F4h, 0FFFBC64Ch, 5Eh, 80E4100h
dd 0E430283h, 240E6730h, 54300E43h, 41080E0Ah, 41040EC3h
dd 0Bh,	28h, 120h, 0FFFBC680h, 5Eh, 80E4100h, 0E430283h
dd 240E6730h, 54300E43h, 41080E0Ah, 41040EC3h, 0Bh, 28h
dd 14Ch, 0FFFBC6B4h, 56h, 80E4100h, 0E430283h, 280E5F30h
dd 54300E43h, 41080E0Ah, 41040EC3h, 0Bh, 30h, 178h, 0FFFBC6E0h
dd 9Eh,	80E4100h, 0E410286h, 4303830Ch,	0E7F400Eh, 400E4328h
dd 0C0E0A58h, 80EC341h,	40EC641h, 0B43h, 28h, 1ACh, 0FFFBC74Ch
dd 0CDh, 80E4100h, 0E430283h, 0A4E0230h, 0C341080Eh, 0B41040Eh
dd 43240E68h, 300Eh, 50h, 1D8h,	0FFFBC7F0h, 1BFh, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 0E00E4605h
dd 0A5B020Ch, 0C341140Eh, 0C641100Eh, 0C7410C0Eh, 0C541080Eh
dd 0B43040Eh, 0CD40E54h, 0CE00E43h, 0BC0E5502h,	0E00E430Ch
dd 0Ch,	28h, 22Ch, 0FFFBC95Ch, 3Fh, 80E4100h, 0E430283h
dd 2C0E5B30h, 58300E41h, 41080E0Ah, 41040EC3h, 0Bh, 44h
dd 258h, 0FFFBC970h, 0C7h, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	700E4305h, 5C0E6F02h, 55700E43h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 42040EC5h
dd 0Bh,	40h, 2A0h, 0FFFBC9F0h, 10Eh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2600E43h, 100E0A45h, 0C0EC341h
dd 80EC641h, 40EC741h, 0E770B42h, 600E434Ch, 4C0E4902h
dd 600E43h, 30h, 2E4h, 0FFFBCABCh, 4Ch,	80E4100h, 0E410286h
dd 4303830Ch, 0E57300Eh, 300E412Ch, 0C0E0A57h, 80EC341h
dd 40EC641h, 0B41h, 18h, 318h, 0FFFBCAD4h, 11Ah, 300E4300h
dd 0E0A8D02h, 0B4404h, 4Ch, 334h, 0FFFBCBD4h, 11Ah, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2400E43h, 43300E42h
dd 0A5C400Eh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh
dd 100E0A5Fh, 0C0EC341h, 80EC641h, 40EC741h, 0B46h, 30h
dd 384h, 0FFFBCCA0h, 8Eh, 80E4100h, 0E410286h, 4303830Ch
dd 0E6F300Eh, 300E4320h, 0C0E0A58h, 80EC341h, 40EC641h
dd 0B43h, 44h, 3B8h, 0FFFBCCFCh, 0CBh, 80E4100h, 0E410287h
dd 4103860Ch, 483100Eh,	2400E43h, 100E0A45h, 0C0EC341h
dd 80EC641h, 40EC741h, 0A670B46h, 0C341100Eh, 0C6410C0Eh
dd 0C741080Eh, 0B42040Eh, 30h, 400h, 0FFFBCD80h, 8Eh, 80E4100h
dd 0E410286h, 4303830Ch, 0E6F300Eh, 300E4320h, 0C0E0A58h
dd 80EC341h, 40EC641h, 0B43h, 30h, 434h, 0FFFBCDDCh, 0C7h
dd 80E4100h, 0E430283h,	3C0E6640h, 58400E41h, 41080E0Ah
dd 44040EC3h, 0E0A530Bh, 0EC34108h, 0B4804h, 28h, 468h
dd 0FFFBCE70h, 56h, 80E4100h, 0E430283h, 280E5F30h, 54300E43h
dd 41080E0Ah, 41040EC3h, 0Bh, 2Ch, 494h, 0FFFBCE9Ch, 89h
dd 80E4100h, 0E410286h,	4303830Ch, 7C02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC6h, 0Bh, 18h, 4C4h, 0FFFBCEF8h, 38h
dd 200E4300h, 40E0A6Bh,	0B45h, 34h, 4E0h, 0FFFBCF14h, 59h
dd 80E4100h, 0E410287h,	4103860Ch, 483100Eh, 2300E43h
dd 100E0A44h, 0C0EC341h, 80EC641h, 40EC741h, 0B43h, 90h
dd 518h, 0FFFBCF38h, 54Bh, 80E4100h, 0E410285h,	4103870Ch
dd 486100Eh, 83140E41h,	0F00E4605h, 0AE10207h, 0C341140Eh
dd 0C641100Eh, 0C7410C0Eh, 0C541080Eh, 0B41040Eh, 0DC0E4402h
dd 0F00E4307h, 0E5C0207h, 0E4307DCh, 470207F0h,	4307D80Eh
dd 207F00Eh, 7D80E5Bh, 7F00E43h, 7EC0E68h, 7F00E41h, 0D00E5C02h
dd 0F00E4307h, 1020307h, 4107EC0Eh, 4C07F00Eh, 4107EC0Eh
dd 307F00Eh, 0EC0E015Ch, 0F00E4107h, 7,	18h, 5ACh, 0FFFBD3F0h
dd 38h,	200E4300h, 40E0A6Bh, 0B45h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 44h, 1Ch,	0FFFBD3F4h
dd 0ECh, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 480E7902h, 2600E43h, 140E0A56h, 100EC341h
dd 0C0EC641h, 80EC741h,	40EC541h, 0B43h, 44h, 64h, 0FFFBD498h
dd 10Ch, 80E4100h, 0E410285h, 4103870Ch, 486100Eh, 83140E41h
dd 500E4305h, 3C0E6502h, 61500E43h, 41140E0Ah, 41100EC3h
dd 410C0EC6h, 41080EC7h, 44040EC5h, 0Bh, 2Ch, 0ACh, 0FFFBD55Ch
dd 0BDh, 80E4100h, 0E410287h, 4303830Ch, 8C02300Eh, 410C0E0Ah
dd 41080EC3h, 41040EC7h, 0Bh, 54h, 0DCh, 0FFFBD5ECh, 155h
dd 80E4100h, 0E410285h,	4103870Ch, 486100Eh, 83140E41h
dd 600E4305h, 5C0E4502h, 66600E41h, 0E43580Eh, 0E0A7760h
dd 0EC34114h, 0EC64110h, 0EC7410Ch, 0EC54108h, 6C0B4304h
dd 0E415C0Eh, 5C0E6360h, 600E41h, 2Ch, 134h, 0FFFBD6ECh
dd 95h,	80E4100h, 0E460283h, 0E7D04C0h,	0E4304ACh, 410204C0h
dd 41080E0Ah, 43040EC3h, 0Bh, 28h, 164h, 0FFFBD754h, 0EFh
dd 80E4100h, 0E460283h,	0A7510C0h, 0C341080Eh, 0B43040Eh
dd 10B40E5Dh, 10C00E43h, 18h, 190h, 0FFFBD818h,	5Fh, 300E4300h
dd 40E0A68h, 0B41h, 18h, 1ACh, 0FFFBD85Ch, 5Fh,	300E4300h
dd 40E0A68h, 0B41h, 18h, 1C8h, 0FFFBD8A0h, 91h,	300E4300h
dd 40E0A63h, 0B42h, 54h, 1E4h, 0FFFBD918h, 194h, 80E4100h
dd 0E410285h, 4103870Ch, 486100Eh, 83140E41h, 500E4305h
dd 3C0E6902h, 2500E43h,	43380EA0h, 0E78500Eh, 500E414Ch
dd 140E0A51h, 100EC341h, 0C0EC641h, 80EC741h, 40EC541h
dd 0E580B44h, 500E4348h, 38h, 23Ch, 0FFFBDA54h,	75h, 80E4100h
dd 0E410287h, 4103860Ch, 483100Eh, 2300E43h, 412C0E4Fh
dd 0A51300Eh, 0C341100Eh, 0C6410C0Eh, 0C741080Eh, 0B42040Eh
dd 44h,	278h, 0FFFBDA90h, 0F4h,	80E4100h, 0E410285h, 4103870Ch
dd 486100Eh, 83140E41h,	500E4305h, 4C0E4E02h, 55500E41h
dd 41140E0Ah, 41100EC3h, 410C0EC6h, 41080EC7h, 41040EC5h
dd 0Bh,	24h, 2C0h, 0FFFBDB3Ch, 106h, 0D00E4600h, 0E8E0203h
dd 0E4303C8h, 4A0203D0h, 43040E0Ah, 0Bh, 18h, 2E8h, 0FFFBDC1Ch
dd 0A2h, 300E4300h, 0E0A9902h, 0B4104h,	20h, 304h, 0FFFBDCA4h
dd 70h,	0D00E4600h, 0CC0E5A01h,	0D00E4101h, 0A420201h
dd 0B41040Eh, 18h, 328h, 0FFFBDCF0h, 33h, 200E4300h, 40E0A68h
dd 0B43h, 14h, 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFBE59Ch
dd 43h,	200E4300h, 40E0A55h, 0E600B48h,	4, 38h,	3Ch, 0FFFBE5CCh
dd 86h,	80E4100h, 0E410286h, 4303830Ch,	0A64200Eh, 0C3460C0Eh
dd 0C641080Eh, 0B43040Eh, 0C0E0A6Bh, 80EC346h, 40EC641h
dd 0B43h, 10h, 78h, 0FFFBE620h,	3, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 18h, 1Ch,	0FFFBE604h
dd 52h,	80E4100h, 0E430283h, 30h, 3Ch, 38h, 0FFFBE648h
dd 10Eh, 600E4300h, 59058344h, 87460486h, 2854603h, 43540E45h
dd 0A74600Eh, 0C3C6C7C5h, 0B48040Eh, 43500E69h,	5202600Eh
dd 0E43500Eh, 60h, 24h,	78h, 0FFFBE718h, 1D4h, 300E6C00h
dd 8604834Fh, 2028703h,	0C6C70AE3h, 42040EC3h, 0Bh, 14h
dd 0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 14h, 1Ch,	0FFFBE8B8h
dd 2Ch,	100E4E00h, 40E5Ch, 20h,	34h, 0FFFBE8D0h, 49h, 80E4100h
dd 0E430283h, 0E0A6D20h, 0EC34108h, 0B4104h, 10h, 58h
dd 0FFFBE8FCh, 1Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 38h, 1Ch,	0FFFBE8F0h
dd 60h,	80E4100h, 0E410286h, 4303830Ch,	0E4C200Eh, 200E491Ch
dd 431C0E50h, 0E6A200Eh, 200E431Ch, 410C0E43h, 41080EC3h
dd 40EC6h, 34h,	58h, 0FFFBE914h, 8Ch, 200E4300h, 46028649h
dd 0A510383h, 40EC3C6h,	0E730B41h, 200E511Ch, 451C0E4Ch
dd 0A4B200Eh, 40EC6C3h,	0B41h, 3Ch, 90h, 0FFFBE96Ch, 90h
dd 80E4100h, 0E430283h,	0E0A5020h, 0EC34308h, 4C0B4104h
dd 0E491C0Eh, 1C0E6E20h, 43200E43h, 43080E0Ah, 41040EC3h
dd 1C0E5A0Bh, 200E43h, 28h, 0D0h, 0FFFBE9BCh, 98h, 200E4300h
dd 40E0A58h, 0E690B45h,	200E431Ch, 40E0A5Fh, 0E5C0B45h
dd 200E431Ch, 0
dd 14h,	0
dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch), 0FFFBEDA8h
dd 19h,	80E4100h, 0D420285h, 0CC55505h,	404h, 6Fh dup(0)
align 1000h
assume cs:_bss

assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 4
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
			
			
			
			
align 10h
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 10h
			
align 20h
			
dd 0Bh dup(?)
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
align 20h
			
			
align 20h
			
			
db 3 dup(?)
			
			
			
align 4
dd 1FFh	dup(?)
			
			
			
align 4
dd 1FFh	dup(?)
			
			
align 20h
			
			
			
			
			
			
			
			
			
dd 3 dup(?)
			
			
			
			
			
			
align 1000h
extrn __imp_g_access:dword 
extrn __imp_g_ascii_strcasecmp:dword 
extrn __imp_g_ascii_strdown:dword 
extrn __imp_g_ascii_strncasecmp:dword 
extrn g_ascii_table:dword 
			
extrn __imp_g_ascii_tolower:dword 
extrn __imp_g_ascii_toupper:dword 
extrn __imp_g_assertion_message:dword 
extrn __imp_g_base64_decode:dword 
extrn __imp_g_base64_encode:dword 
extrn __imp_g_build_filename:dword 
extrn __imp_g_byte_array_append:dword 
extrn __imp_g_byte_array_free:dword 
extrn __imp_g_byte_array_remove_range:dword
			
extrn __imp_g_byte_array_sized_new:dword
			
extrn __imp_g_checksum_free:dword 
extrn __imp_g_checksum_get_digest:dword	
extrn __imp_g_checksum_new:dword 
extrn __imp_g_checksum_reset:dword 
extrn __imp_g_checksum_type_get_length:dword
			
extrn __imp_g_checksum_update:dword 
extrn __imp_g_convert:dword 
extrn __imp_g_datalist_clear:dword 
extrn __imp_g_datalist_id_get_data:dword
			
extrn __imp_g_datalist_id_set_data_full:dword
			
extrn __imp_g_datalist_init:dword 
extrn __imp_g_dir_close:dword 
extrn __imp_g_dir_open_utf8:dword 
extrn __imp_g_dir_read_name_utf8:dword 
extrn g_direct_equal:dword 
extrn __imp_g_direct_hash:dword	
extrn __imp_g_error_free:dword 
extrn __imp_g_file_get_contents_utf8:dword
			
extrn __imp_g_file_test_utf8:dword 
extrn __imp_g_filename_from_uri_utf8:dword
			
extrn __imp_g_filename_from_utf8_utf8:dword
			
extrn __imp_g_filename_to_utf8_utf8:dword
			
extrn __imp_g_find_program_in_path_utf8:dword
			
extrn __imp_g_fopen:dword 
extrn __imp_g_free:dword 
extrn __imp_g_get_charset:dword	
extrn __imp_g_get_home_dir_utf8:dword 
extrn __imp_g_get_host_name:dword 
extrn __imp_g_get_tmp_dir_utf8:dword 
extrn __imp_g_getenv_utf8:dword	
extrn __imp_g_hash_table_destroy:dword 
extrn __imp_g_hash_table_foreach:dword 
extrn __imp_g_hash_table_foreach_remove:dword
			
extrn __imp_g_hash_table_insert:dword 
extrn __imp_g_hash_table_lookup:dword 
extrn __imp_g_hash_table_lookup_extended:dword
			
extrn __imp_g_hash_table_new:dword 
extrn __imp_g_hash_table_new_full:dword	
extrn __imp_g_hash_table_remove:dword 
extrn __imp_g_hash_table_remove_all:dword
			
extrn __imp_g_hash_table_replace:dword 
extrn __imp_g_hash_table_size:dword 
extrn g_int_equal:dword	
extrn __imp_g_int_hash:dword 
extrn __imp_g_io_channel_error_quark:dword
			
extrn __imp_g_io_channel_get_buffer_condition:dword
			
extrn __imp_g_io_channel_init:dword 
extrn __imp_g_io_channel_ref:dword 
extrn __imp_g_io_channel_unref:dword 
extrn __imp_g_list_append:dword	
extrn __imp_g_list_concat:dword	
extrn __imp_g_list_copy:dword 
extrn __imp_g_list_delete_link:dword 
extrn __imp_g_list_find:dword 
extrn __imp_g_list_find_custom:dword 
extrn __imp_g_list_first:dword 
extrn __imp_g_list_foreach:dword 
extrn __imp_g_list_free:dword 
extrn __imp_g_list_free_1:dword	
extrn __imp_g_list_index:dword 
extrn __imp_g_list_insert:dword	
extrn __imp_g_list_insert_sorted:dword 
extrn __imp_g_list_last:dword 
extrn __imp_g_list_length:dword	
extrn __imp_g_list_nth:dword 
extrn __imp_g_list_nth_data:dword 
extrn __imp_g_list_prepend:dword 
extrn __imp_g_list_remove:dword	
extrn __imp_g_list_remove_link:dword 
extrn __imp_g_list_reverse:dword 
extrn __imp_g_list_sort:dword 
extrn __imp_g_locale_from_utf8:dword 
extrn __imp_g_locale_to_utf8:dword 
extrn __imp_g_log:dword	
extrn __imp_g_malloc:dword 
extrn __imp_g_malloc0:dword 
extrn __imp_g_markup_escape_text:dword 
extrn __imp_g_markup_parse_context_end_parse:dword
			
extrn __imp_g_markup_parse_context_free:dword
			
extrn __imp_g_markup_parse_context_new:dword
			
extrn __imp_g_markup_parse_context_parse:dword
			
extrn __imp_g_memdup:dword 
extrn __imp_g_mkdir:dword 
extrn __imp_g_mkdir_with_parents:dword 
extrn __imp_g_mkstemp_utf8:dword 
extrn __imp_g_open:dword 
extrn __imp_g_path_get_basename:dword 
extrn __imp_g_path_get_dirname:dword 
extrn __imp_g_pattern_match_string:dword
			
extrn __imp_g_pattern_spec_free:dword 
extrn __imp_g_pattern_spec_new:dword 
extrn __imp_g_print:dword 
extrn __imp_g_printf_string_upper_bound:dword
			
extrn __imp_g_quark_from_string:dword 
extrn __imp_g_quark_to_string:dword 
extrn __imp_g_quark_try_string:dword 
extrn __imp_g_queue_free:dword 
extrn __imp_g_queue_new:dword 
extrn __imp_g_queue_pop_head:dword 
extrn __imp_g_queue_push_head:dword 
extrn __imp_g_random_int:dword 
extrn __imp_g_random_int_range:dword 
extrn __imp_g_realloc:dword 
extrn __imp_g_rename:dword 
extrn __imp_g_return_if_fail_warning:dword
			
extrn __imp_g_set_error:dword 
extrn __imp_g_shell_parse_argv:dword 
extrn __imp_g_slice_alloc:dword	
extrn __imp_g_slice_alloc0:dword 
extrn __imp_g_slice_free1:dword	
extrn __imp_g_slist_append:dword 
extrn __imp_g_slist_concat:dword 
extrn __imp_g_slist_delete_link:dword 
extrn __imp_g_slist_find:dword 
extrn __imp_g_slist_find_custom:dword 
extrn __imp_g_slist_foreach:dword 
extrn __imp_g_slist_free:dword 
extrn __imp_g_slist_free_1:dword 
extrn __imp_g_slist_prepend:dword 
extrn __imp_g_slist_remove:dword 
extrn __imp_g_snprintf:dword 
extrn __imp_g_source_add_poll:dword 
extrn __imp_g_source_new:dword 
extrn __imp_g_source_remove_by_user_data:dword
			
extrn __imp_g_spawn_command_line_sync_utf8:dword
			
extrn __imp_g_stat:dword 
extrn __imp_g_static_mutex_get_mutex_impl:dword
			
extrn __imp_g_static_private_get:dword 
extrn __imp_g_static_private_set:dword 
extrn __imp_g_str_equal:dword 
extrn __imp_g_str_has_prefix:dword 
extrn __imp_g_str_has_suffix:dword 
extrn __imp_g_str_hash:dword 
extrn __imp_g_strchomp:dword 
extrn __imp_g_strchug:dword 
extrn __imp_g_strcmp0:dword 
extrn __imp_g_strconcat:dword 
extrn __imp_g_strdelimit:dword 
extrn __imp_g_strdup:dword 
extrn __imp_g_strdup_printf:dword 
extrn __imp_g_strdup_vprintf:dword 
extrn __imp_g_strerror:dword 
extrn __imp_g_strfreev:dword 
extrn __imp_g_string_append:dword 
extrn __imp_g_string_append_len:dword 
extrn __imp_g_string_append_printf:dword
			
extrn __imp_g_string_append_unichar:dword
			
extrn __imp_g_string_assign:dword 
extrn __imp_g_string_equal:dword 
extrn __imp_g_string_free:dword	
extrn __imp_g_string_insert_c:dword 
extrn __imp_g_string_new:dword 
extrn __imp_g_string_new_len:dword 
extrn __imp_g_string_prepend:dword 
extrn __imp_g_string_prepend_c:dword 
extrn __imp_g_string_prepend_unichar:dword
			
extrn __imp_g_string_sized_new:dword 
extrn __imp_g_string_truncate:dword 
extrn __imp_g_strjoinv:dword 
extrn __imp_g_strlcpy:dword 
extrn __imp_g_strndup:dword 
extrn __imp_g_strnfill:dword 
extrn __imp_g_strrstr:dword 
extrn __imp_g_strsplit:dword 
extrn __imp_g_strstr_len:dword 
extrn __imp_g_thread_create_full:dword 
extrn __imp_g_thread_exit:dword	
extrn g_thread_functions_for_glib_use:dword 
			
extrn g_threads_got_initialized:dword 
			
extrn __imp_g_try_malloc:dword 
extrn __imp_g_try_realloc:dword	
extrn __imp_g_unichar_isalnum:dword 
extrn __imp_g_unichar_isspace:dword 
extrn __imp_g_unichar_to_utf8:dword 
extrn __imp_g_unlink:dword 
extrn __imp_g_utf16_to_utf8:dword 
extrn __imp_g_utf8_casefold:dword 
extrn __imp_g_utf8_collate:dword 
extrn __imp_g_utf8_collate_key:dword 
extrn __imp_g_utf8_find_next_char:dword	
extrn __imp_g_utf8_find_prev_char:dword	
extrn __imp_g_utf8_get_char:dword 
extrn __imp_g_utf8_get_char_validated:dword
			
extrn __imp_g_utf8_normalize:dword 
extrn __imp_g_utf8_pointer_to_offset:dword
			
extrn g_utf8_skip:dword	
			
extrn __imp_g_utf8_strdown:dword 
extrn __imp_g_utf8_strlen:dword	
extrn __imp_g_utf8_to_utf16:dword 
extrn __imp_g_utf8_validate:dword 
extrn __imp_g_warn_message:dword 
extrn __imp_g_win32_error_message:dword	
extrn glib_major_version:dword 
extrn glib_micro_version:dword 
extrn glib_minor_version:dword 
extrn __imp_g_module_close:dword 
extrn __imp_g_module_error:dword 
extrn __imp_g_module_open_utf8:dword 
extrn __imp_g_module_supported:dword 
extrn __imp_g_module_symbol:dword 
extrn __imp_g_cclosure_marshal_VOID__VOID:dword
			
extrn __imp_g_object_class_install_property:dword
			
extrn __imp_g_object_get:dword 
extrn __imp_g_object_new:dword 
extrn __imp_g_object_notify:dword 
extrn __imp_g_object_set:dword 
extrn __imp_g_object_unref:dword 
extrn __imp_g_param_spec_pointer:dword 
extrn __imp_g_param_spec_string:dword 
extrn __imp_g_signal_emit:dword	
extrn __imp_g_signal_new:dword 
extrn __imp_g_type_check_class_cast:dword
			
extrn __imp_g_type_check_instance_cast:dword
			
extrn __imp_g_type_check_instance_is_a:dword
			
extrn __imp_g_type_class_peek_parent:dword
			
extrn __imp_g_type_init:dword 
extrn __imp_g_type_name:dword 
extrn __imp_g_type_register_static:dword
			
extrn __imp_g_value_get_pointer:dword 
extrn __imp_g_value_get_string:dword 
extrn __imp_g_value_set_pointer:dword 
extrn __imp_g_value_set_string:dword 
extrn __imp_g_thread_init:dword	
extrn __imp_libintl_bindtextdomain:dword
			
extrn __imp_libintl_dgettext:dword 
extrn __imp_libintl_dngettext:dword 
extrn __imp_libintl_fprintf:dword 
extrn __imp_libintl_sprintf:dword 
extrn __imp_libintl_vsprintf:dword 
extrn __imp_xmlSAXUserParseMemory:dword	
extrn __imp_xmlStrcmp:dword 
extrn __imp_RegCloseKey:dword 
extrn __imp_RegDeleteValueW:dword 
extrn __imp_RegEnumKeyExA:dword	
extrn __imp_RegOpenKeyExA:dword	
extrn __imp_RegOpenKeyExW:dword	
extrn __imp_RegQueryValueExA:dword 
extrn __imp_RegQueryValueExW:dword 
extrn __imp_RegSetValueExW:dword 
extrn __imp_DnsQuery_UTF8:dword	
extrn __imp_DnsRecordListFree:dword 
extrn __imp_CloseHandle:dword 
extrn __imp_CreateEventA:dword 
extrn __imp_DeleteCriticalSection:dword	
extrn __imp_EnterCriticalSection:dword 
extrn __imp_FormatMessageA:dword 
extrn __imp_FreeLibrary:dword 
extrn __imp_GetLastError:dword 
extrn __imp_GetModuleFileNameW:dword 
extrn __imp_GetModuleHandleA:dword 
extrn __imp_GetModuleHandleW:dword 
extrn __imp_GetProcAddress:dword 
extrn __imp_GetTimeZoneInformation:dword
			
extrn __imp_GlobalFree:dword 
extrn __imp_InitializeCriticalSection:dword
			
extrn __imp_LeaveCriticalSection:dword 
extrn __imp_LoadLibraryW:dword 
extrn __imp_ResetEvent:dword 
extrn __imp_SetErrorMode:dword 
extrn __imp_SetEvent:dword 
extrn __imp_Sleep:dword	
extrn __imp_TlsGetValue:dword 
extrn __imp_VirtualProtect:dword 
extrn __imp_VirtualQuery:dword 
extrn __imp_WaitForSingleObject:dword 
extrn __imp_WaitForSingleObjectEx:dword	
extrn __imp__fdopen:dword 
extrn __imp__fstat:dword 
extrn __imp__unlink:dword 
extrn __imp___dllonexit:dword 
extrn __mb_cur_max:dword 
			
extrn __imp__beginthreadex:dword 
extrn __imp__close:dword 
extrn __imp__commit:dword 
extrn _daylight:dword	
extrn __imp__errno:dword 
extrn __imp__ftime:dword 
extrn _iob:dword	
extrn __imp__isctype:dword 
extrn _pctype:dword	
			
extrn __imp__read:dword	
extrn _timezone:dword	
extrn __imp__tzset:dword 
extrn __imp__vsnprintf:dword 
extrn __imp__write:dword 
extrn __imp_abort:dword	
extrn __imp_atoi:dword	
extrn __imp_atol:dword	
extrn __imp_calloc:dword 
extrn __imp_ceil:dword	
extrn __imp_ctime:dword	
extrn __imp_difftime:dword 
extrn __imp_fclose:dword 
extrn __imp_fflush:dword 
extrn __imp_fgets:dword	
extrn __imp_fputs:dword	
extrn __imp_fread:dword	
extrn __imp_free:dword	
extrn __imp_fseek:dword	
extrn __imp_ftell:dword	
extrn __imp_fwrite:dword 
extrn __imp_getenv:dword 
extrn __imp_localtime:dword 
extrn __imp_malloc:dword 
extrn __imp_memcmp:dword 
extrn __imp_memcpy:dword 
extrn __imp_memmove:dword 
extrn __imp_mktime:dword 
extrn __imp_pow:dword	
extrn __imp_rand:dword	
extrn __imp_sscanf:dword 
extrn __imp_strchr:dword 
extrn __imp_strcmp:dword 
extrn __imp_strcpy:dword 
extrn __imp_strcspn:dword 
extrn __imp_strftime:dword 
extrn __imp_strncmp:dword 
extrn __imp_strncpy:dword 
extrn __imp_strrchr:dword 
extrn __imp_strstr:dword 
extrn __imp_strtol:dword 
extrn __imp_strtoul:dword 
extrn __imp_time:dword	
extrn __imp_tolower:dword 
extrn __imp_vfprintf:dword 
extrn __imp_wcslen:dword 
extrn __imp_SHGetFolderPathW:dword 
extrn __imp_PeekMessageA:dword 
extrn __imp_WSAAddressToStringA:dword 
extrn __imp_WSACleanup:dword 
extrn __imp_WSACloseEvent:dword	
extrn __imp_WSACreateEvent:dword 
extrn __imp_WSAGetLastError:dword 
extrn __imp_WSAIoctl:dword 
extrn __imp_WSALookupServiceBeginA:dword
			
extrn __imp_WSALookupServiceEnd:dword 
extrn __imp_WSALookupServiceNextA:dword	
extrn __imp_WSAResetEvent:dword	
extrn __imp_WSAStartup:dword 
extrn __imp_WSAStringToAddressA:dword 
extrn __imp___WSAFDIsSet:dword 
extrn __imp_bind:dword	
extrn __imp_closesocket:dword 
extrn __imp_connect:dword 
extrn __imp_gethostbyname:dword	
extrn __imp_gethostname:dword 
extrn __imp_getsockname:dword 
extrn __imp_getsockopt:dword 
extrn __imp_htonl:dword	
extrn __imp_htons:dword	
extrn __imp_inet_addr:dword 
extrn __imp_inet_ntoa:dword 
extrn __imp_ioctlsocket:dword 
extrn __imp_listen:dword 
extrn __imp_ntohl:dword	
extrn __imp_ntohs:dword	
extrn __imp_recv:dword	
extrn __imp_select:dword 
extrn __imp_send:dword	
extrn __imp_sendto:dword 
extrn __imp_setsockopt:dword 
extrn __imp_socket:dword 
extrn __imp___stack_chk_fail:dword 
extrn __stack_chk_guard:dword 
			
assume cs:_CRT

dd 0
dd offset TlsCallback_1
dd 0
dd 0
			
align 1000h
assume cs:_tls

db 0
align 1000h
end DllEntryPoint
